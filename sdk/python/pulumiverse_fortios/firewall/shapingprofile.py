# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ShapingprofileArgs', 'Shapingprofile']

@pulumi.input_type
class ShapingprofileArgs:
    def __init__(__self__, *,
                 default_class_id: pulumi.Input[int],
                 profile_name: pulumi.Input[str],
                 comment: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 shaping_entries: Optional[pulumi.Input[Sequence[pulumi.Input['ShapingprofileShapingEntryArgs']]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Shapingprofile resource.
        :param pulumi.Input[int] default_class_id: Default class ID to handle unclassified packets (including all local traffic).
        :param pulumi.Input[str] profile_name: Shaping profile name.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[Sequence[pulumi.Input['ShapingprofileShapingEntryArgs']]] shaping_entries: Define shaping entries of this shaping profile. The structure of `shaping_entries` block is documented below.
        :param pulumi.Input[str] type: Select shaping profile type: policing / queuing. Valid values: `policing`, `queuing`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        pulumi.set(__self__, "default_class_id", default_class_id)
        pulumi.set(__self__, "profile_name", profile_name)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if shaping_entries is not None:
            pulumi.set(__self__, "shaping_entries", shaping_entries)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="defaultClassId")
    def default_class_id(self) -> pulumi.Input[int]:
        """
        Default class ID to handle unclassified packets (including all local traffic).
        """
        return pulumi.get(self, "default_class_id")

    @default_class_id.setter
    def default_class_id(self, value: pulumi.Input[int]):
        pulumi.set(self, "default_class_id", value)

    @property
    @pulumi.getter(name="profileName")
    def profile_name(self) -> pulumi.Input[str]:
        """
        Shaping profile name.
        """
        return pulumi.get(self, "profile_name")

    @profile_name.setter
    def profile_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "profile_name", value)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="shapingEntries")
    def shaping_entries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ShapingprofileShapingEntryArgs']]]]:
        """
        Define shaping entries of this shaping profile. The structure of `shaping_entries` block is documented below.
        """
        return pulumi.get(self, "shaping_entries")

    @shaping_entries.setter
    def shaping_entries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ShapingprofileShapingEntryArgs']]]]):
        pulumi.set(self, "shaping_entries", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Select shaping profile type: policing / queuing. Valid values: `policing`, `queuing`.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _ShapingprofileState:
    def __init__(__self__, *,
                 comment: Optional[pulumi.Input[str]] = None,
                 default_class_id: Optional[pulumi.Input[int]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 profile_name: Optional[pulumi.Input[str]] = None,
                 shaping_entries: Optional[pulumi.Input[Sequence[pulumi.Input['ShapingprofileShapingEntryArgs']]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Shapingprofile resources.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[int] default_class_id: Default class ID to handle unclassified packets (including all local traffic).
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] profile_name: Shaping profile name.
        :param pulumi.Input[Sequence[pulumi.Input['ShapingprofileShapingEntryArgs']]] shaping_entries: Define shaping entries of this shaping profile. The structure of `shaping_entries` block is documented below.
        :param pulumi.Input[str] type: Select shaping profile type: policing / queuing. Valid values: `policing`, `queuing`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if default_class_id is not None:
            pulumi.set(__self__, "default_class_id", default_class_id)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if profile_name is not None:
            pulumi.set(__self__, "profile_name", profile_name)
        if shaping_entries is not None:
            pulumi.set(__self__, "shaping_entries", shaping_entries)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter(name="defaultClassId")
    def default_class_id(self) -> Optional[pulumi.Input[int]]:
        """
        Default class ID to handle unclassified packets (including all local traffic).
        """
        return pulumi.get(self, "default_class_id")

    @default_class_id.setter
    def default_class_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "default_class_id", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="profileName")
    def profile_name(self) -> Optional[pulumi.Input[str]]:
        """
        Shaping profile name.
        """
        return pulumi.get(self, "profile_name")

    @profile_name.setter
    def profile_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile_name", value)

    @property
    @pulumi.getter(name="shapingEntries")
    def shaping_entries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ShapingprofileShapingEntryArgs']]]]:
        """
        Define shaping entries of this shaping profile. The structure of `shaping_entries` block is documented below.
        """
        return pulumi.get(self, "shaping_entries")

    @shaping_entries.setter
    def shaping_entries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ShapingprofileShapingEntryArgs']]]]):
        pulumi.set(self, "shaping_entries", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Select shaping profile type: policing / queuing. Valid values: `policing`, `queuing`.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Shapingprofile(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 default_class_id: Optional[pulumi.Input[int]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 profile_name: Optional[pulumi.Input[str]] = None,
                 shaping_entries: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ShapingprofileShapingEntryArgs']]]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure shaping profiles.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.firewall.Shapingprofile("trname",
            default_class_id=2,
            profile_name="shapingprofiles1",
            shaping_entries=[fortios.firewall.ShapingprofileShapingEntryArgs(
                class_id=2,
                guaranteed_bandwidth_percentage=33,
                id=1,
                maximum_bandwidth_percentage=88,
                priority="high",
            )])
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        Firewall ShapingProfile can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:firewall/shapingprofile:Shapingprofile labelname {{profile_name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:firewall/shapingprofile:Shapingprofile labelname {{profile_name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[int] default_class_id: Default class ID to handle unclassified packets (including all local traffic).
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] profile_name: Shaping profile name.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ShapingprofileShapingEntryArgs']]]] shaping_entries: Define shaping entries of this shaping profile. The structure of `shaping_entries` block is documented below.
        :param pulumi.Input[str] type: Select shaping profile type: policing / queuing. Valid values: `policing`, `queuing`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ShapingprofileArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure shaping profiles.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.firewall.Shapingprofile("trname",
            default_class_id=2,
            profile_name="shapingprofiles1",
            shaping_entries=[fortios.firewall.ShapingprofileShapingEntryArgs(
                class_id=2,
                guaranteed_bandwidth_percentage=33,
                id=1,
                maximum_bandwidth_percentage=88,
                priority="high",
            )])
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        Firewall ShapingProfile can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:firewall/shapingprofile:Shapingprofile labelname {{profile_name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:firewall/shapingprofile:Shapingprofile labelname {{profile_name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param ShapingprofileArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ShapingprofileArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 default_class_id: Optional[pulumi.Input[int]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 profile_name: Optional[pulumi.Input[str]] = None,
                 shaping_entries: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ShapingprofileShapingEntryArgs']]]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ShapingprofileArgs.__new__(ShapingprofileArgs)

            __props__.__dict__["comment"] = comment
            if default_class_id is None and not opts.urn:
                raise TypeError("Missing required property 'default_class_id'")
            __props__.__dict__["default_class_id"] = default_class_id
            __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
            __props__.__dict__["get_all_tables"] = get_all_tables
            if profile_name is None and not opts.urn:
                raise TypeError("Missing required property 'profile_name'")
            __props__.__dict__["profile_name"] = profile_name
            __props__.__dict__["shaping_entries"] = shaping_entries
            __props__.__dict__["type"] = type
            __props__.__dict__["vdomparam"] = vdomparam
        super(Shapingprofile, __self__).__init__(
            'fortios:firewall/shapingprofile:Shapingprofile',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            comment: Optional[pulumi.Input[str]] = None,
            default_class_id: Optional[pulumi.Input[int]] = None,
            dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
            get_all_tables: Optional[pulumi.Input[str]] = None,
            profile_name: Optional[pulumi.Input[str]] = None,
            shaping_entries: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ShapingprofileShapingEntryArgs']]]]] = None,
            type: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Shapingprofile':
        """
        Get an existing Shapingprofile resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[int] default_class_id: Default class ID to handle unclassified packets (including all local traffic).
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] profile_name: Shaping profile name.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ShapingprofileShapingEntryArgs']]]] shaping_entries: Define shaping entries of this shaping profile. The structure of `shaping_entries` block is documented below.
        :param pulumi.Input[str] type: Select shaping profile type: policing / queuing. Valid values: `policing`, `queuing`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ShapingprofileState.__new__(_ShapingprofileState)

        __props__.__dict__["comment"] = comment
        __props__.__dict__["default_class_id"] = default_class_id
        __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
        __props__.__dict__["get_all_tables"] = get_all_tables
        __props__.__dict__["profile_name"] = profile_name
        __props__.__dict__["shaping_entries"] = shaping_entries
        __props__.__dict__["type"] = type
        __props__.__dict__["vdomparam"] = vdomparam
        return Shapingprofile(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def comment(self) -> pulumi.Output[Optional[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @property
    @pulumi.getter(name="defaultClassId")
    def default_class_id(self) -> pulumi.Output[int]:
        """
        Default class ID to handle unclassified packets (including all local traffic).
        """
        return pulumi.get(self, "default_class_id")

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> pulumi.Output[Optional[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> pulumi.Output[Optional[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @property
    @pulumi.getter(name="profileName")
    def profile_name(self) -> pulumi.Output[str]:
        """
        Shaping profile name.
        """
        return pulumi.get(self, "profile_name")

    @property
    @pulumi.getter(name="shapingEntries")
    def shaping_entries(self) -> pulumi.Output[Optional[Sequence['outputs.ShapingprofileShapingEntry']]]:
        """
        Define shaping entries of this shaping profile. The structure of `shaping_entries` block is documented below.
        """
        return pulumi.get(self, "shaping_entries")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        Select shaping profile type: policing / queuing. Valid values: `policing`, `queuing`.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

