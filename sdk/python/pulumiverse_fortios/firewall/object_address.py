# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['ObjectAddressArgs', 'ObjectAddress']

@pulumi.input_type
class ObjectAddressArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 associated_interface: Optional[pulumi.Input[str]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 country: Optional[pulumi.Input[str]] = None,
                 end_ip: Optional[pulumi.Input[str]] = None,
                 fqdn: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 show_in_address_list: Optional[pulumi.Input[str]] = None,
                 start_ip: Optional[pulumi.Input[str]] = None,
                 static_route_configure: Optional[pulumi.Input[str]] = None,
                 subnet: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a ObjectAddress resource.
        :param pulumi.Input[str] type: Type of address(Support ipmask, iprange, fqdn and geography).
        :param pulumi.Input[str] associated_interface: Network interface associated with address.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] country: IP addresses associated to a specific country.
        :param pulumi.Input[str] end_ip: Final IP address (inclusive) in the range for the address.
        :param pulumi.Input[str] fqdn: Fully Qualified Domain Name address.
        :param pulumi.Input[str] name: Address name.
        :param pulumi.Input[str] show_in_address_list: Enable/disable address visibility in the GUI. default is "enable".
        :param pulumi.Input[str] start_ip: First IP address (inclusive) in the range for the address.
        :param pulumi.Input[str] static_route_configure: Enable/disable use of this address in the static route configuration. default is "disable".
        :param pulumi.Input[str] subnet: IP address and subnet mask of address.
        """
        pulumi.set(__self__, "type", type)
        if associated_interface is not None:
            pulumi.set(__self__, "associated_interface", associated_interface)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if country is not None:
            pulumi.set(__self__, "country", country)
        if end_ip is not None:
            pulumi.set(__self__, "end_ip", end_ip)
        if fqdn is not None:
            pulumi.set(__self__, "fqdn", fqdn)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if show_in_address_list is not None:
            pulumi.set(__self__, "show_in_address_list", show_in_address_list)
        if start_ip is not None:
            pulumi.set(__self__, "start_ip", start_ip)
        if static_route_configure is not None:
            pulumi.set(__self__, "static_route_configure", static_route_configure)
        if subnet is not None:
            pulumi.set(__self__, "subnet", subnet)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        Type of address(Support ipmask, iprange, fqdn and geography).
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="associatedInterface")
    def associated_interface(self) -> Optional[pulumi.Input[str]]:
        """
        Network interface associated with address.
        """
        return pulumi.get(self, "associated_interface")

    @associated_interface.setter
    def associated_interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "associated_interface", value)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter
    def country(self) -> Optional[pulumi.Input[str]]:
        """
        IP addresses associated to a specific country.
        """
        return pulumi.get(self, "country")

    @country.setter
    def country(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "country", value)

    @property
    @pulumi.getter(name="endIp")
    def end_ip(self) -> Optional[pulumi.Input[str]]:
        """
        Final IP address (inclusive) in the range for the address.
        """
        return pulumi.get(self, "end_ip")

    @end_ip.setter
    def end_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "end_ip", value)

    @property
    @pulumi.getter
    def fqdn(self) -> Optional[pulumi.Input[str]]:
        """
        Fully Qualified Domain Name address.
        """
        return pulumi.get(self, "fqdn")

    @fqdn.setter
    def fqdn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fqdn", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Address name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="showInAddressList")
    def show_in_address_list(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable address visibility in the GUI. default is "enable".
        """
        return pulumi.get(self, "show_in_address_list")

    @show_in_address_list.setter
    def show_in_address_list(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "show_in_address_list", value)

    @property
    @pulumi.getter(name="startIp")
    def start_ip(self) -> Optional[pulumi.Input[str]]:
        """
        First IP address (inclusive) in the range for the address.
        """
        return pulumi.get(self, "start_ip")

    @start_ip.setter
    def start_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "start_ip", value)

    @property
    @pulumi.getter(name="staticRouteConfigure")
    def static_route_configure(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable use of this address in the static route configuration. default is "disable".
        """
        return pulumi.get(self, "static_route_configure")

    @static_route_configure.setter
    def static_route_configure(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "static_route_configure", value)

    @property
    @pulumi.getter
    def subnet(self) -> Optional[pulumi.Input[str]]:
        """
        IP address and subnet mask of address.
        """
        return pulumi.get(self, "subnet")

    @subnet.setter
    def subnet(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "subnet", value)


@pulumi.input_type
class _ObjectAddressState:
    def __init__(__self__, *,
                 associated_interface: Optional[pulumi.Input[str]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 country: Optional[pulumi.Input[str]] = None,
                 end_ip: Optional[pulumi.Input[str]] = None,
                 fqdn: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 show_in_address_list: Optional[pulumi.Input[str]] = None,
                 start_ip: Optional[pulumi.Input[str]] = None,
                 static_route_configure: Optional[pulumi.Input[str]] = None,
                 subnet: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ObjectAddress resources.
        :param pulumi.Input[str] associated_interface: Network interface associated with address.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] country: IP addresses associated to a specific country.
        :param pulumi.Input[str] end_ip: Final IP address (inclusive) in the range for the address.
        :param pulumi.Input[str] fqdn: Fully Qualified Domain Name address.
        :param pulumi.Input[str] name: Address name.
        :param pulumi.Input[str] show_in_address_list: Enable/disable address visibility in the GUI. default is "enable".
        :param pulumi.Input[str] start_ip: First IP address (inclusive) in the range for the address.
        :param pulumi.Input[str] static_route_configure: Enable/disable use of this address in the static route configuration. default is "disable".
        :param pulumi.Input[str] subnet: IP address and subnet mask of address.
        :param pulumi.Input[str] type: Type of address(Support ipmask, iprange, fqdn and geography).
        """
        if associated_interface is not None:
            pulumi.set(__self__, "associated_interface", associated_interface)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if country is not None:
            pulumi.set(__self__, "country", country)
        if end_ip is not None:
            pulumi.set(__self__, "end_ip", end_ip)
        if fqdn is not None:
            pulumi.set(__self__, "fqdn", fqdn)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if show_in_address_list is not None:
            pulumi.set(__self__, "show_in_address_list", show_in_address_list)
        if start_ip is not None:
            pulumi.set(__self__, "start_ip", start_ip)
        if static_route_configure is not None:
            pulumi.set(__self__, "static_route_configure", static_route_configure)
        if subnet is not None:
            pulumi.set(__self__, "subnet", subnet)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="associatedInterface")
    def associated_interface(self) -> Optional[pulumi.Input[str]]:
        """
        Network interface associated with address.
        """
        return pulumi.get(self, "associated_interface")

    @associated_interface.setter
    def associated_interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "associated_interface", value)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter
    def country(self) -> Optional[pulumi.Input[str]]:
        """
        IP addresses associated to a specific country.
        """
        return pulumi.get(self, "country")

    @country.setter
    def country(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "country", value)

    @property
    @pulumi.getter(name="endIp")
    def end_ip(self) -> Optional[pulumi.Input[str]]:
        """
        Final IP address (inclusive) in the range for the address.
        """
        return pulumi.get(self, "end_ip")

    @end_ip.setter
    def end_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "end_ip", value)

    @property
    @pulumi.getter
    def fqdn(self) -> Optional[pulumi.Input[str]]:
        """
        Fully Qualified Domain Name address.
        """
        return pulumi.get(self, "fqdn")

    @fqdn.setter
    def fqdn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fqdn", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Address name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="showInAddressList")
    def show_in_address_list(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable address visibility in the GUI. default is "enable".
        """
        return pulumi.get(self, "show_in_address_list")

    @show_in_address_list.setter
    def show_in_address_list(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "show_in_address_list", value)

    @property
    @pulumi.getter(name="startIp")
    def start_ip(self) -> Optional[pulumi.Input[str]]:
        """
        First IP address (inclusive) in the range for the address.
        """
        return pulumi.get(self, "start_ip")

    @start_ip.setter
    def start_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "start_ip", value)

    @property
    @pulumi.getter(name="staticRouteConfigure")
    def static_route_configure(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable use of this address in the static route configuration. default is "disable".
        """
        return pulumi.get(self, "static_route_configure")

    @static_route_configure.setter
    def static_route_configure(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "static_route_configure", value)

    @property
    @pulumi.getter
    def subnet(self) -> Optional[pulumi.Input[str]]:
        """
        IP address and subnet mask of address.
        """
        return pulumi.get(self, "subnet")

    @subnet.setter
    def subnet(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "subnet", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Type of address(Support ipmask, iprange, fqdn and geography).
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


class ObjectAddress(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 associated_interface: Optional[pulumi.Input[str]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 country: Optional[pulumi.Input[str]] = None,
                 end_ip: Optional[pulumi.Input[str]] = None,
                 fqdn: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 show_in_address_list: Optional[pulumi.Input[str]] = None,
                 start_ip: Optional[pulumi.Input[str]] = None,
                 static_route_configure: Optional[pulumi.Input[str]] = None,
                 subnet: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to configure firewall addresses used in firewall policies of FortiOS.

        !> **Warning:** The resource will be deprecated and replaced by new resource `firewall.Address`, we recommend that you use the new resource.

        ## Example Usage

        ### Iprange Address
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        s1 = fortios.firewall.ObjectAddress("s1",
            comment="dd",
            end_ip="2.0.0.0",
            start_ip="1.0.0.0",
            type="iprange")
        ```

        ### Geography Address
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        s2 = fortios.firewall.ObjectAddress("s2",
            comment="dd",
            country="AO",
            type="geography")
        ```

        ### Fqdn Address
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        s3 = fortios.firewall.ObjectAddress("s3",
            associated_interface="port4",
            comment="dd",
            fqdn="baid.com",
            show_in_address_list="disable",
            static_route_configure="enable",
            type="fqdn")
        ```

        ### Ipmask Address
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        s4 = fortios.firewall.ObjectAddress("s4",
            comment="dd",
            subnet="0.0.0.0 0.0.0.0",
            type="ipmask")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] associated_interface: Network interface associated with address.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] country: IP addresses associated to a specific country.
        :param pulumi.Input[str] end_ip: Final IP address (inclusive) in the range for the address.
        :param pulumi.Input[str] fqdn: Fully Qualified Domain Name address.
        :param pulumi.Input[str] name: Address name.
        :param pulumi.Input[str] show_in_address_list: Enable/disable address visibility in the GUI. default is "enable".
        :param pulumi.Input[str] start_ip: First IP address (inclusive) in the range for the address.
        :param pulumi.Input[str] static_route_configure: Enable/disable use of this address in the static route configuration. default is "disable".
        :param pulumi.Input[str] subnet: IP address and subnet mask of address.
        :param pulumi.Input[str] type: Type of address(Support ipmask, iprange, fqdn and geography).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ObjectAddressArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to configure firewall addresses used in firewall policies of FortiOS.

        !> **Warning:** The resource will be deprecated and replaced by new resource `firewall.Address`, we recommend that you use the new resource.

        ## Example Usage

        ### Iprange Address
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        s1 = fortios.firewall.ObjectAddress("s1",
            comment="dd",
            end_ip="2.0.0.0",
            start_ip="1.0.0.0",
            type="iprange")
        ```

        ### Geography Address
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        s2 = fortios.firewall.ObjectAddress("s2",
            comment="dd",
            country="AO",
            type="geography")
        ```

        ### Fqdn Address
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        s3 = fortios.firewall.ObjectAddress("s3",
            associated_interface="port4",
            comment="dd",
            fqdn="baid.com",
            show_in_address_list="disable",
            static_route_configure="enable",
            type="fqdn")
        ```

        ### Ipmask Address
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        s4 = fortios.firewall.ObjectAddress("s4",
            comment="dd",
            subnet="0.0.0.0 0.0.0.0",
            type="ipmask")
        ```

        :param str resource_name: The name of the resource.
        :param ObjectAddressArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ObjectAddressArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 associated_interface: Optional[pulumi.Input[str]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 country: Optional[pulumi.Input[str]] = None,
                 end_ip: Optional[pulumi.Input[str]] = None,
                 fqdn: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 show_in_address_list: Optional[pulumi.Input[str]] = None,
                 start_ip: Optional[pulumi.Input[str]] = None,
                 static_route_configure: Optional[pulumi.Input[str]] = None,
                 subnet: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ObjectAddressArgs.__new__(ObjectAddressArgs)

            __props__.__dict__["associated_interface"] = associated_interface
            __props__.__dict__["comment"] = comment
            __props__.__dict__["country"] = country
            __props__.__dict__["end_ip"] = end_ip
            __props__.__dict__["fqdn"] = fqdn
            __props__.__dict__["name"] = name
            __props__.__dict__["show_in_address_list"] = show_in_address_list
            __props__.__dict__["start_ip"] = start_ip
            __props__.__dict__["static_route_configure"] = static_route_configure
            __props__.__dict__["subnet"] = subnet
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
        super(ObjectAddress, __self__).__init__(
            'fortios:firewall/objectAddress:ObjectAddress',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            associated_interface: Optional[pulumi.Input[str]] = None,
            comment: Optional[pulumi.Input[str]] = None,
            country: Optional[pulumi.Input[str]] = None,
            end_ip: Optional[pulumi.Input[str]] = None,
            fqdn: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            show_in_address_list: Optional[pulumi.Input[str]] = None,
            start_ip: Optional[pulumi.Input[str]] = None,
            static_route_configure: Optional[pulumi.Input[str]] = None,
            subnet: Optional[pulumi.Input[str]] = None,
            type: Optional[pulumi.Input[str]] = None) -> 'ObjectAddress':
        """
        Get an existing ObjectAddress resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] associated_interface: Network interface associated with address.
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] country: IP addresses associated to a specific country.
        :param pulumi.Input[str] end_ip: Final IP address (inclusive) in the range for the address.
        :param pulumi.Input[str] fqdn: Fully Qualified Domain Name address.
        :param pulumi.Input[str] name: Address name.
        :param pulumi.Input[str] show_in_address_list: Enable/disable address visibility in the GUI. default is "enable".
        :param pulumi.Input[str] start_ip: First IP address (inclusive) in the range for the address.
        :param pulumi.Input[str] static_route_configure: Enable/disable use of this address in the static route configuration. default is "disable".
        :param pulumi.Input[str] subnet: IP address and subnet mask of address.
        :param pulumi.Input[str] type: Type of address(Support ipmask, iprange, fqdn and geography).
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ObjectAddressState.__new__(_ObjectAddressState)

        __props__.__dict__["associated_interface"] = associated_interface
        __props__.__dict__["comment"] = comment
        __props__.__dict__["country"] = country
        __props__.__dict__["end_ip"] = end_ip
        __props__.__dict__["fqdn"] = fqdn
        __props__.__dict__["name"] = name
        __props__.__dict__["show_in_address_list"] = show_in_address_list
        __props__.__dict__["start_ip"] = start_ip
        __props__.__dict__["static_route_configure"] = static_route_configure
        __props__.__dict__["subnet"] = subnet
        __props__.__dict__["type"] = type
        return ObjectAddress(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="associatedInterface")
    def associated_interface(self) -> pulumi.Output[str]:
        """
        Network interface associated with address.
        """
        return pulumi.get(self, "associated_interface")

    @property
    @pulumi.getter
    def comment(self) -> pulumi.Output[Optional[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @property
    @pulumi.getter
    def country(self) -> pulumi.Output[str]:
        """
        IP addresses associated to a specific country.
        """
        return pulumi.get(self, "country")

    @property
    @pulumi.getter(name="endIp")
    def end_ip(self) -> pulumi.Output[str]:
        """
        Final IP address (inclusive) in the range for the address.
        """
        return pulumi.get(self, "end_ip")

    @property
    @pulumi.getter
    def fqdn(self) -> pulumi.Output[str]:
        """
        Fully Qualified Domain Name address.
        """
        return pulumi.get(self, "fqdn")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Address name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="showInAddressList")
    def show_in_address_list(self) -> pulumi.Output[str]:
        """
        Enable/disable address visibility in the GUI. default is "enable".
        """
        return pulumi.get(self, "show_in_address_list")

    @property
    @pulumi.getter(name="startIp")
    def start_ip(self) -> pulumi.Output[str]:
        """
        First IP address (inclusive) in the range for the address.
        """
        return pulumi.get(self, "start_ip")

    @property
    @pulumi.getter(name="staticRouteConfigure")
    def static_route_configure(self) -> pulumi.Output[str]:
        """
        Enable/disable use of this address in the static route configuration. default is "disable".
        """
        return pulumi.get(self, "static_route_configure")

    @property
    @pulumi.getter
    def subnet(self) -> pulumi.Output[str]:
        """
        IP address and subnet mask of address.
        """
        return pulumi.get(self, "subnet")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        Type of address(Support ipmask, iprange, fqdn and geography).
        """
        return pulumi.get(self, "type")

