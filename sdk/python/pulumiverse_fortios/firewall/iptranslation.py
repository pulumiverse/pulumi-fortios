# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['IptranslationArgs', 'Iptranslation']

@pulumi.input_type
class IptranslationArgs:
    def __init__(__self__, *,
                 endip: pulumi.Input[str],
                 map_startip: pulumi.Input[str],
                 startip: pulumi.Input[str],
                 transid: Optional[pulumi.Input[int]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Iptranslation resource.
        :param pulumi.Input[str] endip: Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[str] map_startip: Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[str] startip: First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[int] transid: IP translation ID.
        :param pulumi.Input[str] type: IP translation type (option: SCTP). Valid values: `SCTP`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        pulumi.set(__self__, "endip", endip)
        pulumi.set(__self__, "map_startip", map_startip)
        pulumi.set(__self__, "startip", startip)
        if transid is not None:
            pulumi.set(__self__, "transid", transid)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def endip(self) -> pulumi.Input[str]:
        """
        Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        """
        return pulumi.get(self, "endip")

    @endip.setter
    def endip(self, value: pulumi.Input[str]):
        pulumi.set(self, "endip", value)

    @property
    @pulumi.getter(name="mapStartip")
    def map_startip(self) -> pulumi.Input[str]:
        """
        Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        """
        return pulumi.get(self, "map_startip")

    @map_startip.setter
    def map_startip(self, value: pulumi.Input[str]):
        pulumi.set(self, "map_startip", value)

    @property
    @pulumi.getter
    def startip(self) -> pulumi.Input[str]:
        """
        First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        """
        return pulumi.get(self, "startip")

    @startip.setter
    def startip(self, value: pulumi.Input[str]):
        pulumi.set(self, "startip", value)

    @property
    @pulumi.getter
    def transid(self) -> Optional[pulumi.Input[int]]:
        """
        IP translation ID.
        """
        return pulumi.get(self, "transid")

    @transid.setter
    def transid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "transid", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        IP translation type (option: SCTP). Valid values: `SCTP`.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _IptranslationState:
    def __init__(__self__, *,
                 endip: Optional[pulumi.Input[str]] = None,
                 map_startip: Optional[pulumi.Input[str]] = None,
                 startip: Optional[pulumi.Input[str]] = None,
                 transid: Optional[pulumi.Input[int]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Iptranslation resources.
        :param pulumi.Input[str] endip: Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[str] map_startip: Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[str] startip: First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[int] transid: IP translation ID.
        :param pulumi.Input[str] type: IP translation type (option: SCTP). Valid values: `SCTP`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if endip is not None:
            pulumi.set(__self__, "endip", endip)
        if map_startip is not None:
            pulumi.set(__self__, "map_startip", map_startip)
        if startip is not None:
            pulumi.set(__self__, "startip", startip)
        if transid is not None:
            pulumi.set(__self__, "transid", transid)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def endip(self) -> Optional[pulumi.Input[str]]:
        """
        Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        """
        return pulumi.get(self, "endip")

    @endip.setter
    def endip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "endip", value)

    @property
    @pulumi.getter(name="mapStartip")
    def map_startip(self) -> Optional[pulumi.Input[str]]:
        """
        Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        """
        return pulumi.get(self, "map_startip")

    @map_startip.setter
    def map_startip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "map_startip", value)

    @property
    @pulumi.getter
    def startip(self) -> Optional[pulumi.Input[str]]:
        """
        First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        """
        return pulumi.get(self, "startip")

    @startip.setter
    def startip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "startip", value)

    @property
    @pulumi.getter
    def transid(self) -> Optional[pulumi.Input[int]]:
        """
        IP translation ID.
        """
        return pulumi.get(self, "transid")

    @transid.setter
    def transid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "transid", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        IP translation type (option: SCTP). Valid values: `SCTP`.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Iptranslation(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 endip: Optional[pulumi.Input[str]] = None,
                 map_startip: Optional[pulumi.Input[str]] = None,
                 startip: Optional[pulumi.Input[str]] = None,
                 transid: Optional[pulumi.Input[int]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure firewall IP-translation.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.firewall.Iptranslation("trname",
            endip="2.2.2.2",
            map_startip="0.0.0.0",
            startip="1.1.1.1",
            transid=1,
            type="SCTP")
        ```

        ## Import

        Firewall IpTranslation can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:firewall/iptranslation:Iptranslation labelname {{transid}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:firewall/iptranslation:Iptranslation labelname {{transid}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] endip: Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[str] map_startip: Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[str] startip: First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[int] transid: IP translation ID.
        :param pulumi.Input[str] type: IP translation type (option: SCTP). Valid values: `SCTP`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IptranslationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure firewall IP-translation.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.firewall.Iptranslation("trname",
            endip="2.2.2.2",
            map_startip="0.0.0.0",
            startip="1.1.1.1",
            transid=1,
            type="SCTP")
        ```

        ## Import

        Firewall IpTranslation can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:firewall/iptranslation:Iptranslation labelname {{transid}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:firewall/iptranslation:Iptranslation labelname {{transid}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param IptranslationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IptranslationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 endip: Optional[pulumi.Input[str]] = None,
                 map_startip: Optional[pulumi.Input[str]] = None,
                 startip: Optional[pulumi.Input[str]] = None,
                 transid: Optional[pulumi.Input[int]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IptranslationArgs.__new__(IptranslationArgs)

            if endip is None and not opts.urn:
                raise TypeError("Missing required property 'endip'")
            __props__.__dict__["endip"] = endip
            if map_startip is None and not opts.urn:
                raise TypeError("Missing required property 'map_startip'")
            __props__.__dict__["map_startip"] = map_startip
            if startip is None and not opts.urn:
                raise TypeError("Missing required property 'startip'")
            __props__.__dict__["startip"] = startip
            __props__.__dict__["transid"] = transid
            __props__.__dict__["type"] = type
            __props__.__dict__["vdomparam"] = vdomparam
        super(Iptranslation, __self__).__init__(
            'fortios:firewall/iptranslation:Iptranslation',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            endip: Optional[pulumi.Input[str]] = None,
            map_startip: Optional[pulumi.Input[str]] = None,
            startip: Optional[pulumi.Input[str]] = None,
            transid: Optional[pulumi.Input[int]] = None,
            type: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Iptranslation':
        """
        Get an existing Iptranslation resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] endip: Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[str] map_startip: Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[str] startip: First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        :param pulumi.Input[int] transid: IP translation ID.
        :param pulumi.Input[str] type: IP translation type (option: SCTP). Valid values: `SCTP`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IptranslationState.__new__(_IptranslationState)

        __props__.__dict__["endip"] = endip
        __props__.__dict__["map_startip"] = map_startip
        __props__.__dict__["startip"] = startip
        __props__.__dict__["transid"] = transid
        __props__.__dict__["type"] = type
        __props__.__dict__["vdomparam"] = vdomparam
        return Iptranslation(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def endip(self) -> pulumi.Output[str]:
        """
        Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        """
        return pulumi.get(self, "endip")

    @property
    @pulumi.getter(name="mapStartip")
    def map_startip(self) -> pulumi.Output[str]:
        """
        Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        """
        return pulumi.get(self, "map_startip")

    @property
    @pulumi.getter
    def startip(self) -> pulumi.Output[str]:
        """
        First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
        """
        return pulumi.get(self, "startip")

    @property
    @pulumi.getter
    def transid(self) -> pulumi.Output[int]:
        """
        IP translation ID.
        """
        return pulumi.get(self, "transid")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        IP translation type (option: SCTP). Valid values: `SCTP`.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[str]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

