# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['VendormacArgs', 'Vendormac']

@pulumi.input_type
class VendormacArgs:
    def __init__(__self__, *,
                 fosid: Optional[pulumi.Input[int]] = None,
                 mac_number: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 obsolete: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Vendormac resource.
        :param pulumi.Input[int] fosid: Vendor ID.
        :param pulumi.Input[int] mac_number: Total number of MAC addresses.
        :param pulumi.Input[str] name: Vendor name.
        :param pulumi.Input[int] obsolete: Indicates whether the Vendor ID can be used.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if fosid is not None:
            pulumi.set(__self__, "fosid", fosid)
        if mac_number is not None:
            pulumi.set(__self__, "mac_number", mac_number)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if obsolete is not None:
            pulumi.set(__self__, "obsolete", obsolete)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def fosid(self) -> Optional[pulumi.Input[int]]:
        """
        Vendor ID.
        """
        return pulumi.get(self, "fosid")

    @fosid.setter
    def fosid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "fosid", value)

    @property
    @pulumi.getter(name="macNumber")
    def mac_number(self) -> Optional[pulumi.Input[int]]:
        """
        Total number of MAC addresses.
        """
        return pulumi.get(self, "mac_number")

    @mac_number.setter
    def mac_number(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "mac_number", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Vendor name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def obsolete(self) -> Optional[pulumi.Input[int]]:
        """
        Indicates whether the Vendor ID can be used.
        """
        return pulumi.get(self, "obsolete")

    @obsolete.setter
    def obsolete(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "obsolete", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _VendormacState:
    def __init__(__self__, *,
                 fosid: Optional[pulumi.Input[int]] = None,
                 mac_number: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 obsolete: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Vendormac resources.
        :param pulumi.Input[int] fosid: Vendor ID.
        :param pulumi.Input[int] mac_number: Total number of MAC addresses.
        :param pulumi.Input[str] name: Vendor name.
        :param pulumi.Input[int] obsolete: Indicates whether the Vendor ID can be used.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if fosid is not None:
            pulumi.set(__self__, "fosid", fosid)
        if mac_number is not None:
            pulumi.set(__self__, "mac_number", mac_number)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if obsolete is not None:
            pulumi.set(__self__, "obsolete", obsolete)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def fosid(self) -> Optional[pulumi.Input[int]]:
        """
        Vendor ID.
        """
        return pulumi.get(self, "fosid")

    @fosid.setter
    def fosid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "fosid", value)

    @property
    @pulumi.getter(name="macNumber")
    def mac_number(self) -> Optional[pulumi.Input[int]]:
        """
        Total number of MAC addresses.
        """
        return pulumi.get(self, "mac_number")

    @mac_number.setter
    def mac_number(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "mac_number", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Vendor name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def obsolete(self) -> Optional[pulumi.Input[int]]:
        """
        Indicates whether the Vendor ID can be used.
        """
        return pulumi.get(self, "obsolete")

    @obsolete.setter
    def obsolete(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "obsolete", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Vendormac(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 fosid: Optional[pulumi.Input[int]] = None,
                 mac_number: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 obsolete: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Show vendor and the MAC address they have. Applies to FortiOS Version `>= 6.4.0`.

        ## Import

        Firewall VendorMac can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:firewall/vendormac:Vendormac labelname {{fosid}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:firewall/vendormac:Vendormac labelname {{fosid}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] fosid: Vendor ID.
        :param pulumi.Input[int] mac_number: Total number of MAC addresses.
        :param pulumi.Input[str] name: Vendor name.
        :param pulumi.Input[int] obsolete: Indicates whether the Vendor ID can be used.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[VendormacArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Show vendor and the MAC address they have. Applies to FortiOS Version `>= 6.4.0`.

        ## Import

        Firewall VendorMac can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:firewall/vendormac:Vendormac labelname {{fosid}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:firewall/vendormac:Vendormac labelname {{fosid}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param VendormacArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(VendormacArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 fosid: Optional[pulumi.Input[int]] = None,
                 mac_number: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 obsolete: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = VendormacArgs.__new__(VendormacArgs)

            __props__.__dict__["fosid"] = fosid
            __props__.__dict__["mac_number"] = mac_number
            __props__.__dict__["name"] = name
            __props__.__dict__["obsolete"] = obsolete
            __props__.__dict__["vdomparam"] = vdomparam
        super(Vendormac, __self__).__init__(
            'fortios:firewall/vendormac:Vendormac',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            fosid: Optional[pulumi.Input[int]] = None,
            mac_number: Optional[pulumi.Input[int]] = None,
            name: Optional[pulumi.Input[str]] = None,
            obsolete: Optional[pulumi.Input[int]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Vendormac':
        """
        Get an existing Vendormac resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] fosid: Vendor ID.
        :param pulumi.Input[int] mac_number: Total number of MAC addresses.
        :param pulumi.Input[str] name: Vendor name.
        :param pulumi.Input[int] obsolete: Indicates whether the Vendor ID can be used.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _VendormacState.__new__(_VendormacState)

        __props__.__dict__["fosid"] = fosid
        __props__.__dict__["mac_number"] = mac_number
        __props__.__dict__["name"] = name
        __props__.__dict__["obsolete"] = obsolete
        __props__.__dict__["vdomparam"] = vdomparam
        return Vendormac(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def fosid(self) -> pulumi.Output[int]:
        """
        Vendor ID.
        """
        return pulumi.get(self, "fosid")

    @property
    @pulumi.getter(name="macNumber")
    def mac_number(self) -> pulumi.Output[int]:
        """
        Total number of MAC addresses.
        """
        return pulumi.get(self, "mac_number")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Vendor name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def obsolete(self) -> pulumi.Output[int]:
        """
        Indicates whether the Vendor ID can be used.
        """
        return pulumi.get(self, "obsolete")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[str]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

