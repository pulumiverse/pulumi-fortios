# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['Address6Args', 'Address6']

@pulumi.input_type
class Address6Args:
    def __init__(__self__, *,
                 cache_ttl: Optional[pulumi.Input[int]] = None,
                 color: Optional[pulumi.Input[int]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 country: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 end_ip: Optional[pulumi.Input[str]] = None,
                 end_mac: Optional[pulumi.Input[str]] = None,
                 epg_name: Optional[pulumi.Input[str]] = None,
                 fabric_object: Optional[pulumi.Input[str]] = None,
                 fqdn: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 host: Optional[pulumi.Input[str]] = None,
                 host_type: Optional[pulumi.Input[str]] = None,
                 ip6: Optional[pulumi.Input[str]] = None,
                 lists: Optional[pulumi.Input[Sequence[pulumi.Input['Address6ListArgs']]]] = None,
                 macaddrs: Optional[pulumi.Input[Sequence[pulumi.Input['Address6MacaddrArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 obj_id: Optional[pulumi.Input[str]] = None,
                 route_tag: Optional[pulumi.Input[int]] = None,
                 sdn: Optional[pulumi.Input[str]] = None,
                 sdn_tag: Optional[pulumi.Input[str]] = None,
                 start_ip: Optional[pulumi.Input[str]] = None,
                 start_mac: Optional[pulumi.Input[str]] = None,
                 subnet_segments: Optional[pulumi.Input[Sequence[pulumi.Input['Address6SubnetSegmentArgs']]]] = None,
                 taggings: Optional[pulumi.Input[Sequence[pulumi.Input['Address6TaggingArgs']]]] = None,
                 template: Optional[pulumi.Input[str]] = None,
                 tenant: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 visibility: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Address6 resource.
        :param pulumi.Input[int] cache_ttl: Minimal TTL of individual IPv6 addresses in FQDN cache.
        :param pulumi.Input[int] color: Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] country: IPv6 addresses associated to a specific country.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] end_ip: Final IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        :param pulumi.Input[str] end_mac: Last MAC address in the range.
        :param pulumi.Input[str] epg_name: Endpoint group name.
        :param pulumi.Input[str] fabric_object: Security Fabric global object setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] fqdn: Fully qualified domain name.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] host: Host Address.
        :param pulumi.Input[str] host_type: Host type. Valid values: `any`, `specific`.
        :param pulumi.Input[str] ip6: IPv6 address prefix (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx).
        :param pulumi.Input[Sequence[pulumi.Input['Address6ListArgs']]] lists: IP address list. The structure of `list` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['Address6MacaddrArgs']]] macaddrs: Multiple MAC address ranges. The structure of `macaddr` block is documented below.
        :param pulumi.Input[str] name: Address name.
        :param pulumi.Input[str] obj_id: Object ID for NSX.
        :param pulumi.Input[int] route_tag: route-tag address.
        :param pulumi.Input[str] sdn: SDN.
        :param pulumi.Input[str] sdn_tag: SDN Tag.
        :param pulumi.Input[str] start_ip: First IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        :param pulumi.Input[str] start_mac: First MAC address in the range.
        :param pulumi.Input[Sequence[pulumi.Input['Address6SubnetSegmentArgs']]] subnet_segments: IPv6 subnet segments. The structure of `subnet_segment` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['Address6TaggingArgs']]] taggings: Config object tagging The structure of `tagging` block is documented below.
        :param pulumi.Input[str] template: IPv6 address template.
        :param pulumi.Input[str] tenant: Tenant.
        :param pulumi.Input[str] type: Type of IPv6 address object (default = ipprefix).
        :param pulumi.Input[str] uuid: Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] visibility: Enable/disable the visibility of the object in the GUI. Valid values: `enable`, `disable`.
        """
        if cache_ttl is not None:
            pulumi.set(__self__, "cache_ttl", cache_ttl)
        if color is not None:
            pulumi.set(__self__, "color", color)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if country is not None:
            pulumi.set(__self__, "country", country)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if end_ip is not None:
            pulumi.set(__self__, "end_ip", end_ip)
        if end_mac is not None:
            pulumi.set(__self__, "end_mac", end_mac)
        if epg_name is not None:
            pulumi.set(__self__, "epg_name", epg_name)
        if fabric_object is not None:
            pulumi.set(__self__, "fabric_object", fabric_object)
        if fqdn is not None:
            pulumi.set(__self__, "fqdn", fqdn)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if host is not None:
            pulumi.set(__self__, "host", host)
        if host_type is not None:
            pulumi.set(__self__, "host_type", host_type)
        if ip6 is not None:
            pulumi.set(__self__, "ip6", ip6)
        if lists is not None:
            pulumi.set(__self__, "lists", lists)
        if macaddrs is not None:
            pulumi.set(__self__, "macaddrs", macaddrs)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if obj_id is not None:
            pulumi.set(__self__, "obj_id", obj_id)
        if route_tag is not None:
            pulumi.set(__self__, "route_tag", route_tag)
        if sdn is not None:
            pulumi.set(__self__, "sdn", sdn)
        if sdn_tag is not None:
            pulumi.set(__self__, "sdn_tag", sdn_tag)
        if start_ip is not None:
            pulumi.set(__self__, "start_ip", start_ip)
        if start_mac is not None:
            pulumi.set(__self__, "start_mac", start_mac)
        if subnet_segments is not None:
            pulumi.set(__self__, "subnet_segments", subnet_segments)
        if taggings is not None:
            pulumi.set(__self__, "taggings", taggings)
        if template is not None:
            pulumi.set(__self__, "template", template)
        if tenant is not None:
            pulumi.set(__self__, "tenant", tenant)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if visibility is not None:
            pulumi.set(__self__, "visibility", visibility)

    @property
    @pulumi.getter(name="cacheTtl")
    def cache_ttl(self) -> Optional[pulumi.Input[int]]:
        """
        Minimal TTL of individual IPv6 addresses in FQDN cache.
        """
        return pulumi.get(self, "cache_ttl")

    @cache_ttl.setter
    def cache_ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cache_ttl", value)

    @property
    @pulumi.getter
    def color(self) -> Optional[pulumi.Input[int]]:
        """
        Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
        """
        return pulumi.get(self, "color")

    @color.setter
    def color(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "color", value)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter
    def country(self) -> Optional[pulumi.Input[str]]:
        """
        IPv6 addresses associated to a specific country.
        """
        return pulumi.get(self, "country")

    @country.setter
    def country(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "country", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="endIp")
    def end_ip(self) -> Optional[pulumi.Input[str]]:
        """
        Final IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        """
        return pulumi.get(self, "end_ip")

    @end_ip.setter
    def end_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "end_ip", value)

    @property
    @pulumi.getter(name="endMac")
    def end_mac(self) -> Optional[pulumi.Input[str]]:
        """
        Last MAC address in the range.
        """
        return pulumi.get(self, "end_mac")

    @end_mac.setter
    def end_mac(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "end_mac", value)

    @property
    @pulumi.getter(name="epgName")
    def epg_name(self) -> Optional[pulumi.Input[str]]:
        """
        Endpoint group name.
        """
        return pulumi.get(self, "epg_name")

    @epg_name.setter
    def epg_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "epg_name", value)

    @property
    @pulumi.getter(name="fabricObject")
    def fabric_object(self) -> Optional[pulumi.Input[str]]:
        """
        Security Fabric global object setting. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "fabric_object")

    @fabric_object.setter
    def fabric_object(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fabric_object", value)

    @property
    @pulumi.getter
    def fqdn(self) -> Optional[pulumi.Input[str]]:
        """
        Fully qualified domain name.
        """
        return pulumi.get(self, "fqdn")

    @fqdn.setter
    def fqdn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fqdn", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter
    def host(self) -> Optional[pulumi.Input[str]]:
        """
        Host Address.
        """
        return pulumi.get(self, "host")

    @host.setter
    def host(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host", value)

    @property
    @pulumi.getter(name="hostType")
    def host_type(self) -> Optional[pulumi.Input[str]]:
        """
        Host type. Valid values: `any`, `specific`.
        """
        return pulumi.get(self, "host_type")

    @host_type.setter
    def host_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_type", value)

    @property
    @pulumi.getter
    def ip6(self) -> Optional[pulumi.Input[str]]:
        """
        IPv6 address prefix (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx).
        """
        return pulumi.get(self, "ip6")

    @ip6.setter
    def ip6(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip6", value)

    @property
    @pulumi.getter
    def lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Address6ListArgs']]]]:
        """
        IP address list. The structure of `list` block is documented below.
        """
        return pulumi.get(self, "lists")

    @lists.setter
    def lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Address6ListArgs']]]]):
        pulumi.set(self, "lists", value)

    @property
    @pulumi.getter
    def macaddrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Address6MacaddrArgs']]]]:
        """
        Multiple MAC address ranges. The structure of `macaddr` block is documented below.
        """
        return pulumi.get(self, "macaddrs")

    @macaddrs.setter
    def macaddrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Address6MacaddrArgs']]]]):
        pulumi.set(self, "macaddrs", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Address name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="objId")
    def obj_id(self) -> Optional[pulumi.Input[str]]:
        """
        Object ID for NSX.
        """
        return pulumi.get(self, "obj_id")

    @obj_id.setter
    def obj_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "obj_id", value)

    @property
    @pulumi.getter(name="routeTag")
    def route_tag(self) -> Optional[pulumi.Input[int]]:
        """
        route-tag address.
        """
        return pulumi.get(self, "route_tag")

    @route_tag.setter
    def route_tag(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "route_tag", value)

    @property
    @pulumi.getter
    def sdn(self) -> Optional[pulumi.Input[str]]:
        """
        SDN.
        """
        return pulumi.get(self, "sdn")

    @sdn.setter
    def sdn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sdn", value)

    @property
    @pulumi.getter(name="sdnTag")
    def sdn_tag(self) -> Optional[pulumi.Input[str]]:
        """
        SDN Tag.
        """
        return pulumi.get(self, "sdn_tag")

    @sdn_tag.setter
    def sdn_tag(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sdn_tag", value)

    @property
    @pulumi.getter(name="startIp")
    def start_ip(self) -> Optional[pulumi.Input[str]]:
        """
        First IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        """
        return pulumi.get(self, "start_ip")

    @start_ip.setter
    def start_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "start_ip", value)

    @property
    @pulumi.getter(name="startMac")
    def start_mac(self) -> Optional[pulumi.Input[str]]:
        """
        First MAC address in the range.
        """
        return pulumi.get(self, "start_mac")

    @start_mac.setter
    def start_mac(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "start_mac", value)

    @property
    @pulumi.getter(name="subnetSegments")
    def subnet_segments(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Address6SubnetSegmentArgs']]]]:
        """
        IPv6 subnet segments. The structure of `subnet_segment` block is documented below.
        """
        return pulumi.get(self, "subnet_segments")

    @subnet_segments.setter
    def subnet_segments(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Address6SubnetSegmentArgs']]]]):
        pulumi.set(self, "subnet_segments", value)

    @property
    @pulumi.getter
    def taggings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Address6TaggingArgs']]]]:
        """
        Config object tagging The structure of `tagging` block is documented below.
        """
        return pulumi.get(self, "taggings")

    @taggings.setter
    def taggings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Address6TaggingArgs']]]]):
        pulumi.set(self, "taggings", value)

    @property
    @pulumi.getter
    def template(self) -> Optional[pulumi.Input[str]]:
        """
        IPv6 address template.
        """
        return pulumi.get(self, "template")

    @template.setter
    def template(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "template", value)

    @property
    @pulumi.getter
    def tenant(self) -> Optional[pulumi.Input[str]]:
        """
        Tenant.
        """
        return pulumi.get(self, "tenant")

    @tenant.setter
    def tenant(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Type of IPv6 address object (default = ipprefix).
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        """
        Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        """
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter
    def visibility(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable the visibility of the object in the GUI. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "visibility")

    @visibility.setter
    def visibility(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "visibility", value)


@pulumi.input_type
class _Address6State:
    def __init__(__self__, *,
                 cache_ttl: Optional[pulumi.Input[int]] = None,
                 color: Optional[pulumi.Input[int]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 country: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 end_ip: Optional[pulumi.Input[str]] = None,
                 end_mac: Optional[pulumi.Input[str]] = None,
                 epg_name: Optional[pulumi.Input[str]] = None,
                 fabric_object: Optional[pulumi.Input[str]] = None,
                 fqdn: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 host: Optional[pulumi.Input[str]] = None,
                 host_type: Optional[pulumi.Input[str]] = None,
                 ip6: Optional[pulumi.Input[str]] = None,
                 lists: Optional[pulumi.Input[Sequence[pulumi.Input['Address6ListArgs']]]] = None,
                 macaddrs: Optional[pulumi.Input[Sequence[pulumi.Input['Address6MacaddrArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 obj_id: Optional[pulumi.Input[str]] = None,
                 route_tag: Optional[pulumi.Input[int]] = None,
                 sdn: Optional[pulumi.Input[str]] = None,
                 sdn_tag: Optional[pulumi.Input[str]] = None,
                 start_ip: Optional[pulumi.Input[str]] = None,
                 start_mac: Optional[pulumi.Input[str]] = None,
                 subnet_segments: Optional[pulumi.Input[Sequence[pulumi.Input['Address6SubnetSegmentArgs']]]] = None,
                 taggings: Optional[pulumi.Input[Sequence[pulumi.Input['Address6TaggingArgs']]]] = None,
                 template: Optional[pulumi.Input[str]] = None,
                 tenant: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 visibility: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Address6 resources.
        :param pulumi.Input[int] cache_ttl: Minimal TTL of individual IPv6 addresses in FQDN cache.
        :param pulumi.Input[int] color: Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] country: IPv6 addresses associated to a specific country.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] end_ip: Final IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        :param pulumi.Input[str] end_mac: Last MAC address in the range.
        :param pulumi.Input[str] epg_name: Endpoint group name.
        :param pulumi.Input[str] fabric_object: Security Fabric global object setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] fqdn: Fully qualified domain name.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] host: Host Address.
        :param pulumi.Input[str] host_type: Host type. Valid values: `any`, `specific`.
        :param pulumi.Input[str] ip6: IPv6 address prefix (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx).
        :param pulumi.Input[Sequence[pulumi.Input['Address6ListArgs']]] lists: IP address list. The structure of `list` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['Address6MacaddrArgs']]] macaddrs: Multiple MAC address ranges. The structure of `macaddr` block is documented below.
        :param pulumi.Input[str] name: Address name.
        :param pulumi.Input[str] obj_id: Object ID for NSX.
        :param pulumi.Input[int] route_tag: route-tag address.
        :param pulumi.Input[str] sdn: SDN.
        :param pulumi.Input[str] sdn_tag: SDN Tag.
        :param pulumi.Input[str] start_ip: First IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        :param pulumi.Input[str] start_mac: First MAC address in the range.
        :param pulumi.Input[Sequence[pulumi.Input['Address6SubnetSegmentArgs']]] subnet_segments: IPv6 subnet segments. The structure of `subnet_segment` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['Address6TaggingArgs']]] taggings: Config object tagging The structure of `tagging` block is documented below.
        :param pulumi.Input[str] template: IPv6 address template.
        :param pulumi.Input[str] tenant: Tenant.
        :param pulumi.Input[str] type: Type of IPv6 address object (default = ipprefix).
        :param pulumi.Input[str] uuid: Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] visibility: Enable/disable the visibility of the object in the GUI. Valid values: `enable`, `disable`.
        """
        if cache_ttl is not None:
            pulumi.set(__self__, "cache_ttl", cache_ttl)
        if color is not None:
            pulumi.set(__self__, "color", color)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if country is not None:
            pulumi.set(__self__, "country", country)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if end_ip is not None:
            pulumi.set(__self__, "end_ip", end_ip)
        if end_mac is not None:
            pulumi.set(__self__, "end_mac", end_mac)
        if epg_name is not None:
            pulumi.set(__self__, "epg_name", epg_name)
        if fabric_object is not None:
            pulumi.set(__self__, "fabric_object", fabric_object)
        if fqdn is not None:
            pulumi.set(__self__, "fqdn", fqdn)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if host is not None:
            pulumi.set(__self__, "host", host)
        if host_type is not None:
            pulumi.set(__self__, "host_type", host_type)
        if ip6 is not None:
            pulumi.set(__self__, "ip6", ip6)
        if lists is not None:
            pulumi.set(__self__, "lists", lists)
        if macaddrs is not None:
            pulumi.set(__self__, "macaddrs", macaddrs)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if obj_id is not None:
            pulumi.set(__self__, "obj_id", obj_id)
        if route_tag is not None:
            pulumi.set(__self__, "route_tag", route_tag)
        if sdn is not None:
            pulumi.set(__self__, "sdn", sdn)
        if sdn_tag is not None:
            pulumi.set(__self__, "sdn_tag", sdn_tag)
        if start_ip is not None:
            pulumi.set(__self__, "start_ip", start_ip)
        if start_mac is not None:
            pulumi.set(__self__, "start_mac", start_mac)
        if subnet_segments is not None:
            pulumi.set(__self__, "subnet_segments", subnet_segments)
        if taggings is not None:
            pulumi.set(__self__, "taggings", taggings)
        if template is not None:
            pulumi.set(__self__, "template", template)
        if tenant is not None:
            pulumi.set(__self__, "tenant", tenant)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if visibility is not None:
            pulumi.set(__self__, "visibility", visibility)

    @property
    @pulumi.getter(name="cacheTtl")
    def cache_ttl(self) -> Optional[pulumi.Input[int]]:
        """
        Minimal TTL of individual IPv6 addresses in FQDN cache.
        """
        return pulumi.get(self, "cache_ttl")

    @cache_ttl.setter
    def cache_ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cache_ttl", value)

    @property
    @pulumi.getter
    def color(self) -> Optional[pulumi.Input[int]]:
        """
        Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
        """
        return pulumi.get(self, "color")

    @color.setter
    def color(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "color", value)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter
    def country(self) -> Optional[pulumi.Input[str]]:
        """
        IPv6 addresses associated to a specific country.
        """
        return pulumi.get(self, "country")

    @country.setter
    def country(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "country", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="endIp")
    def end_ip(self) -> Optional[pulumi.Input[str]]:
        """
        Final IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        """
        return pulumi.get(self, "end_ip")

    @end_ip.setter
    def end_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "end_ip", value)

    @property
    @pulumi.getter(name="endMac")
    def end_mac(self) -> Optional[pulumi.Input[str]]:
        """
        Last MAC address in the range.
        """
        return pulumi.get(self, "end_mac")

    @end_mac.setter
    def end_mac(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "end_mac", value)

    @property
    @pulumi.getter(name="epgName")
    def epg_name(self) -> Optional[pulumi.Input[str]]:
        """
        Endpoint group name.
        """
        return pulumi.get(self, "epg_name")

    @epg_name.setter
    def epg_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "epg_name", value)

    @property
    @pulumi.getter(name="fabricObject")
    def fabric_object(self) -> Optional[pulumi.Input[str]]:
        """
        Security Fabric global object setting. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "fabric_object")

    @fabric_object.setter
    def fabric_object(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fabric_object", value)

    @property
    @pulumi.getter
    def fqdn(self) -> Optional[pulumi.Input[str]]:
        """
        Fully qualified domain name.
        """
        return pulumi.get(self, "fqdn")

    @fqdn.setter
    def fqdn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fqdn", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter
    def host(self) -> Optional[pulumi.Input[str]]:
        """
        Host Address.
        """
        return pulumi.get(self, "host")

    @host.setter
    def host(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host", value)

    @property
    @pulumi.getter(name="hostType")
    def host_type(self) -> Optional[pulumi.Input[str]]:
        """
        Host type. Valid values: `any`, `specific`.
        """
        return pulumi.get(self, "host_type")

    @host_type.setter
    def host_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_type", value)

    @property
    @pulumi.getter
    def ip6(self) -> Optional[pulumi.Input[str]]:
        """
        IPv6 address prefix (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx).
        """
        return pulumi.get(self, "ip6")

    @ip6.setter
    def ip6(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip6", value)

    @property
    @pulumi.getter
    def lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Address6ListArgs']]]]:
        """
        IP address list. The structure of `list` block is documented below.
        """
        return pulumi.get(self, "lists")

    @lists.setter
    def lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Address6ListArgs']]]]):
        pulumi.set(self, "lists", value)

    @property
    @pulumi.getter
    def macaddrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Address6MacaddrArgs']]]]:
        """
        Multiple MAC address ranges. The structure of `macaddr` block is documented below.
        """
        return pulumi.get(self, "macaddrs")

    @macaddrs.setter
    def macaddrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Address6MacaddrArgs']]]]):
        pulumi.set(self, "macaddrs", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Address name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="objId")
    def obj_id(self) -> Optional[pulumi.Input[str]]:
        """
        Object ID for NSX.
        """
        return pulumi.get(self, "obj_id")

    @obj_id.setter
    def obj_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "obj_id", value)

    @property
    @pulumi.getter(name="routeTag")
    def route_tag(self) -> Optional[pulumi.Input[int]]:
        """
        route-tag address.
        """
        return pulumi.get(self, "route_tag")

    @route_tag.setter
    def route_tag(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "route_tag", value)

    @property
    @pulumi.getter
    def sdn(self) -> Optional[pulumi.Input[str]]:
        """
        SDN.
        """
        return pulumi.get(self, "sdn")

    @sdn.setter
    def sdn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sdn", value)

    @property
    @pulumi.getter(name="sdnTag")
    def sdn_tag(self) -> Optional[pulumi.Input[str]]:
        """
        SDN Tag.
        """
        return pulumi.get(self, "sdn_tag")

    @sdn_tag.setter
    def sdn_tag(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sdn_tag", value)

    @property
    @pulumi.getter(name="startIp")
    def start_ip(self) -> Optional[pulumi.Input[str]]:
        """
        First IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        """
        return pulumi.get(self, "start_ip")

    @start_ip.setter
    def start_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "start_ip", value)

    @property
    @pulumi.getter(name="startMac")
    def start_mac(self) -> Optional[pulumi.Input[str]]:
        """
        First MAC address in the range.
        """
        return pulumi.get(self, "start_mac")

    @start_mac.setter
    def start_mac(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "start_mac", value)

    @property
    @pulumi.getter(name="subnetSegments")
    def subnet_segments(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Address6SubnetSegmentArgs']]]]:
        """
        IPv6 subnet segments. The structure of `subnet_segment` block is documented below.
        """
        return pulumi.get(self, "subnet_segments")

    @subnet_segments.setter
    def subnet_segments(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Address6SubnetSegmentArgs']]]]):
        pulumi.set(self, "subnet_segments", value)

    @property
    @pulumi.getter
    def taggings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Address6TaggingArgs']]]]:
        """
        Config object tagging The structure of `tagging` block is documented below.
        """
        return pulumi.get(self, "taggings")

    @taggings.setter
    def taggings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Address6TaggingArgs']]]]):
        pulumi.set(self, "taggings", value)

    @property
    @pulumi.getter
    def template(self) -> Optional[pulumi.Input[str]]:
        """
        IPv6 address template.
        """
        return pulumi.get(self, "template")

    @template.setter
    def template(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "template", value)

    @property
    @pulumi.getter
    def tenant(self) -> Optional[pulumi.Input[str]]:
        """
        Tenant.
        """
        return pulumi.get(self, "tenant")

    @tenant.setter
    def tenant(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Type of IPv6 address object (default = ipprefix).
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        """
        Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        """
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter
    def visibility(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable the visibility of the object in the GUI. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "visibility")

    @visibility.setter
    def visibility(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "visibility", value)


class Address6(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cache_ttl: Optional[pulumi.Input[int]] = None,
                 color: Optional[pulumi.Input[int]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 country: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 end_ip: Optional[pulumi.Input[str]] = None,
                 end_mac: Optional[pulumi.Input[str]] = None,
                 epg_name: Optional[pulumi.Input[str]] = None,
                 fabric_object: Optional[pulumi.Input[str]] = None,
                 fqdn: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 host: Optional[pulumi.Input[str]] = None,
                 host_type: Optional[pulumi.Input[str]] = None,
                 ip6: Optional[pulumi.Input[str]] = None,
                 lists: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6ListArgs']]]]] = None,
                 macaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6MacaddrArgs']]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 obj_id: Optional[pulumi.Input[str]] = None,
                 route_tag: Optional[pulumi.Input[int]] = None,
                 sdn: Optional[pulumi.Input[str]] = None,
                 sdn_tag: Optional[pulumi.Input[str]] = None,
                 start_ip: Optional[pulumi.Input[str]] = None,
                 start_mac: Optional[pulumi.Input[str]] = None,
                 subnet_segments: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6SubnetSegmentArgs']]]]] = None,
                 taggings: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6TaggingArgs']]]]] = None,
                 template: Optional[pulumi.Input[str]] = None,
                 tenant: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 visibility: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure IPv6 firewall addresses.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.firewall.Address6("trname",
            cache_ttl=0,
            color=0,
            end_ip="::",
            host="fdff:ffff::",
            host_type="any",
            ip6="fdff:ffff::/120",
            start_ip="fdff:ffff::",
            type="ipprefix",
            visibility="enable")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        Firewall Address6 can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:firewall/address6:Address6 labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:firewall/address6:Address6 labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] cache_ttl: Minimal TTL of individual IPv6 addresses in FQDN cache.
        :param pulumi.Input[int] color: Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] country: IPv6 addresses associated to a specific country.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] end_ip: Final IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        :param pulumi.Input[str] end_mac: Last MAC address in the range.
        :param pulumi.Input[str] epg_name: Endpoint group name.
        :param pulumi.Input[str] fabric_object: Security Fabric global object setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] fqdn: Fully qualified domain name.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] host: Host Address.
        :param pulumi.Input[str] host_type: Host type. Valid values: `any`, `specific`.
        :param pulumi.Input[str] ip6: IPv6 address prefix (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx).
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6ListArgs']]]] lists: IP address list. The structure of `list` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6MacaddrArgs']]]] macaddrs: Multiple MAC address ranges. The structure of `macaddr` block is documented below.
        :param pulumi.Input[str] name: Address name.
        :param pulumi.Input[str] obj_id: Object ID for NSX.
        :param pulumi.Input[int] route_tag: route-tag address.
        :param pulumi.Input[str] sdn: SDN.
        :param pulumi.Input[str] sdn_tag: SDN Tag.
        :param pulumi.Input[str] start_ip: First IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        :param pulumi.Input[str] start_mac: First MAC address in the range.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6SubnetSegmentArgs']]]] subnet_segments: IPv6 subnet segments. The structure of `subnet_segment` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6TaggingArgs']]]] taggings: Config object tagging The structure of `tagging` block is documented below.
        :param pulumi.Input[str] template: IPv6 address template.
        :param pulumi.Input[str] tenant: Tenant.
        :param pulumi.Input[str] type: Type of IPv6 address object (default = ipprefix).
        :param pulumi.Input[str] uuid: Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] visibility: Enable/disable the visibility of the object in the GUI. Valid values: `enable`, `disable`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[Address6Args] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure IPv6 firewall addresses.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.firewall.Address6("trname",
            cache_ttl=0,
            color=0,
            end_ip="::",
            host="fdff:ffff::",
            host_type="any",
            ip6="fdff:ffff::/120",
            start_ip="fdff:ffff::",
            type="ipprefix",
            visibility="enable")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        Firewall Address6 can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:firewall/address6:Address6 labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:firewall/address6:Address6 labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param Address6Args args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(Address6Args, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cache_ttl: Optional[pulumi.Input[int]] = None,
                 color: Optional[pulumi.Input[int]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 country: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 end_ip: Optional[pulumi.Input[str]] = None,
                 end_mac: Optional[pulumi.Input[str]] = None,
                 epg_name: Optional[pulumi.Input[str]] = None,
                 fabric_object: Optional[pulumi.Input[str]] = None,
                 fqdn: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 host: Optional[pulumi.Input[str]] = None,
                 host_type: Optional[pulumi.Input[str]] = None,
                 ip6: Optional[pulumi.Input[str]] = None,
                 lists: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6ListArgs']]]]] = None,
                 macaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6MacaddrArgs']]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 obj_id: Optional[pulumi.Input[str]] = None,
                 route_tag: Optional[pulumi.Input[int]] = None,
                 sdn: Optional[pulumi.Input[str]] = None,
                 sdn_tag: Optional[pulumi.Input[str]] = None,
                 start_ip: Optional[pulumi.Input[str]] = None,
                 start_mac: Optional[pulumi.Input[str]] = None,
                 subnet_segments: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6SubnetSegmentArgs']]]]] = None,
                 taggings: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6TaggingArgs']]]]] = None,
                 template: Optional[pulumi.Input[str]] = None,
                 tenant: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 visibility: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = Address6Args.__new__(Address6Args)

            __props__.__dict__["cache_ttl"] = cache_ttl
            __props__.__dict__["color"] = color
            __props__.__dict__["comment"] = comment
            __props__.__dict__["country"] = country
            __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
            __props__.__dict__["end_ip"] = end_ip
            __props__.__dict__["end_mac"] = end_mac
            __props__.__dict__["epg_name"] = epg_name
            __props__.__dict__["fabric_object"] = fabric_object
            __props__.__dict__["fqdn"] = fqdn
            __props__.__dict__["get_all_tables"] = get_all_tables
            __props__.__dict__["host"] = host
            __props__.__dict__["host_type"] = host_type
            __props__.__dict__["ip6"] = ip6
            __props__.__dict__["lists"] = lists
            __props__.__dict__["macaddrs"] = macaddrs
            __props__.__dict__["name"] = name
            __props__.__dict__["obj_id"] = obj_id
            __props__.__dict__["route_tag"] = route_tag
            __props__.__dict__["sdn"] = sdn
            __props__.__dict__["sdn_tag"] = sdn_tag
            __props__.__dict__["start_ip"] = start_ip
            __props__.__dict__["start_mac"] = start_mac
            __props__.__dict__["subnet_segments"] = subnet_segments
            __props__.__dict__["taggings"] = taggings
            __props__.__dict__["template"] = template
            __props__.__dict__["tenant"] = tenant
            __props__.__dict__["type"] = type
            __props__.__dict__["uuid"] = uuid
            __props__.__dict__["vdomparam"] = vdomparam
            __props__.__dict__["visibility"] = visibility
        super(Address6, __self__).__init__(
            'fortios:firewall/address6:Address6',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cache_ttl: Optional[pulumi.Input[int]] = None,
            color: Optional[pulumi.Input[int]] = None,
            comment: Optional[pulumi.Input[str]] = None,
            country: Optional[pulumi.Input[str]] = None,
            dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
            end_ip: Optional[pulumi.Input[str]] = None,
            end_mac: Optional[pulumi.Input[str]] = None,
            epg_name: Optional[pulumi.Input[str]] = None,
            fabric_object: Optional[pulumi.Input[str]] = None,
            fqdn: Optional[pulumi.Input[str]] = None,
            get_all_tables: Optional[pulumi.Input[str]] = None,
            host: Optional[pulumi.Input[str]] = None,
            host_type: Optional[pulumi.Input[str]] = None,
            ip6: Optional[pulumi.Input[str]] = None,
            lists: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6ListArgs']]]]] = None,
            macaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6MacaddrArgs']]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            obj_id: Optional[pulumi.Input[str]] = None,
            route_tag: Optional[pulumi.Input[int]] = None,
            sdn: Optional[pulumi.Input[str]] = None,
            sdn_tag: Optional[pulumi.Input[str]] = None,
            start_ip: Optional[pulumi.Input[str]] = None,
            start_mac: Optional[pulumi.Input[str]] = None,
            subnet_segments: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6SubnetSegmentArgs']]]]] = None,
            taggings: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6TaggingArgs']]]]] = None,
            template: Optional[pulumi.Input[str]] = None,
            tenant: Optional[pulumi.Input[str]] = None,
            type: Optional[pulumi.Input[str]] = None,
            uuid: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None,
            visibility: Optional[pulumi.Input[str]] = None) -> 'Address6':
        """
        Get an existing Address6 resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] cache_ttl: Minimal TTL of individual IPv6 addresses in FQDN cache.
        :param pulumi.Input[int] color: Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
        :param pulumi.Input[str] comment: Comment.
        :param pulumi.Input[str] country: IPv6 addresses associated to a specific country.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] end_ip: Final IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        :param pulumi.Input[str] end_mac: Last MAC address in the range.
        :param pulumi.Input[str] epg_name: Endpoint group name.
        :param pulumi.Input[str] fabric_object: Security Fabric global object setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] fqdn: Fully qualified domain name.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] host: Host Address.
        :param pulumi.Input[str] host_type: Host type. Valid values: `any`, `specific`.
        :param pulumi.Input[str] ip6: IPv6 address prefix (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx).
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6ListArgs']]]] lists: IP address list. The structure of `list` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6MacaddrArgs']]]] macaddrs: Multiple MAC address ranges. The structure of `macaddr` block is documented below.
        :param pulumi.Input[str] name: Address name.
        :param pulumi.Input[str] obj_id: Object ID for NSX.
        :param pulumi.Input[int] route_tag: route-tag address.
        :param pulumi.Input[str] sdn: SDN.
        :param pulumi.Input[str] sdn_tag: SDN Tag.
        :param pulumi.Input[str] start_ip: First IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        :param pulumi.Input[str] start_mac: First MAC address in the range.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6SubnetSegmentArgs']]]] subnet_segments: IPv6 subnet segments. The structure of `subnet_segment` block is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Address6TaggingArgs']]]] taggings: Config object tagging The structure of `tagging` block is documented below.
        :param pulumi.Input[str] template: IPv6 address template.
        :param pulumi.Input[str] tenant: Tenant.
        :param pulumi.Input[str] type: Type of IPv6 address object (default = ipprefix).
        :param pulumi.Input[str] uuid: Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] visibility: Enable/disable the visibility of the object in the GUI. Valid values: `enable`, `disable`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _Address6State.__new__(_Address6State)

        __props__.__dict__["cache_ttl"] = cache_ttl
        __props__.__dict__["color"] = color
        __props__.__dict__["comment"] = comment
        __props__.__dict__["country"] = country
        __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
        __props__.__dict__["end_ip"] = end_ip
        __props__.__dict__["end_mac"] = end_mac
        __props__.__dict__["epg_name"] = epg_name
        __props__.__dict__["fabric_object"] = fabric_object
        __props__.__dict__["fqdn"] = fqdn
        __props__.__dict__["get_all_tables"] = get_all_tables
        __props__.__dict__["host"] = host
        __props__.__dict__["host_type"] = host_type
        __props__.__dict__["ip6"] = ip6
        __props__.__dict__["lists"] = lists
        __props__.__dict__["macaddrs"] = macaddrs
        __props__.__dict__["name"] = name
        __props__.__dict__["obj_id"] = obj_id
        __props__.__dict__["route_tag"] = route_tag
        __props__.__dict__["sdn"] = sdn
        __props__.__dict__["sdn_tag"] = sdn_tag
        __props__.__dict__["start_ip"] = start_ip
        __props__.__dict__["start_mac"] = start_mac
        __props__.__dict__["subnet_segments"] = subnet_segments
        __props__.__dict__["taggings"] = taggings
        __props__.__dict__["template"] = template
        __props__.__dict__["tenant"] = tenant
        __props__.__dict__["type"] = type
        __props__.__dict__["uuid"] = uuid
        __props__.__dict__["vdomparam"] = vdomparam
        __props__.__dict__["visibility"] = visibility
        return Address6(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="cacheTtl")
    def cache_ttl(self) -> pulumi.Output[int]:
        """
        Minimal TTL of individual IPv6 addresses in FQDN cache.
        """
        return pulumi.get(self, "cache_ttl")

    @property
    @pulumi.getter
    def color(self) -> pulumi.Output[int]:
        """
        Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
        """
        return pulumi.get(self, "color")

    @property
    @pulumi.getter
    def comment(self) -> pulumi.Output[Optional[str]]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @property
    @pulumi.getter
    def country(self) -> pulumi.Output[str]:
        """
        IPv6 addresses associated to a specific country.
        """
        return pulumi.get(self, "country")

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> pulumi.Output[Optional[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @property
    @pulumi.getter(name="endIp")
    def end_ip(self) -> pulumi.Output[str]:
        """
        Final IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        """
        return pulumi.get(self, "end_ip")

    @property
    @pulumi.getter(name="endMac")
    def end_mac(self) -> pulumi.Output[str]:
        """
        Last MAC address in the range.
        """
        return pulumi.get(self, "end_mac")

    @property
    @pulumi.getter(name="epgName")
    def epg_name(self) -> pulumi.Output[str]:
        """
        Endpoint group name.
        """
        return pulumi.get(self, "epg_name")

    @property
    @pulumi.getter(name="fabricObject")
    def fabric_object(self) -> pulumi.Output[str]:
        """
        Security Fabric global object setting. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "fabric_object")

    @property
    @pulumi.getter
    def fqdn(self) -> pulumi.Output[str]:
        """
        Fully qualified domain name.
        """
        return pulumi.get(self, "fqdn")

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> pulumi.Output[Optional[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @property
    @pulumi.getter
    def host(self) -> pulumi.Output[str]:
        """
        Host Address.
        """
        return pulumi.get(self, "host")

    @property
    @pulumi.getter(name="hostType")
    def host_type(self) -> pulumi.Output[str]:
        """
        Host type. Valid values: `any`, `specific`.
        """
        return pulumi.get(self, "host_type")

    @property
    @pulumi.getter
    def ip6(self) -> pulumi.Output[str]:
        """
        IPv6 address prefix (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx).
        """
        return pulumi.get(self, "ip6")

    @property
    @pulumi.getter
    def lists(self) -> pulumi.Output[Optional[Sequence['outputs.Address6List']]]:
        """
        IP address list. The structure of `list` block is documented below.
        """
        return pulumi.get(self, "lists")

    @property
    @pulumi.getter
    def macaddrs(self) -> pulumi.Output[Optional[Sequence['outputs.Address6Macaddr']]]:
        """
        Multiple MAC address ranges. The structure of `macaddr` block is documented below.
        """
        return pulumi.get(self, "macaddrs")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Address name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="objId")
    def obj_id(self) -> pulumi.Output[Optional[str]]:
        """
        Object ID for NSX.
        """
        return pulumi.get(self, "obj_id")

    @property
    @pulumi.getter(name="routeTag")
    def route_tag(self) -> pulumi.Output[int]:
        """
        route-tag address.
        """
        return pulumi.get(self, "route_tag")

    @property
    @pulumi.getter
    def sdn(self) -> pulumi.Output[str]:
        """
        SDN.
        """
        return pulumi.get(self, "sdn")

    @property
    @pulumi.getter(name="sdnTag")
    def sdn_tag(self) -> pulumi.Output[str]:
        """
        SDN Tag.
        """
        return pulumi.get(self, "sdn_tag")

    @property
    @pulumi.getter(name="startIp")
    def start_ip(self) -> pulumi.Output[str]:
        """
        First IP address (inclusive) in the range for the address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
        """
        return pulumi.get(self, "start_ip")

    @property
    @pulumi.getter(name="startMac")
    def start_mac(self) -> pulumi.Output[str]:
        """
        First MAC address in the range.
        """
        return pulumi.get(self, "start_mac")

    @property
    @pulumi.getter(name="subnetSegments")
    def subnet_segments(self) -> pulumi.Output[Optional[Sequence['outputs.Address6SubnetSegment']]]:
        """
        IPv6 subnet segments. The structure of `subnet_segment` block is documented below.
        """
        return pulumi.get(self, "subnet_segments")

    @property
    @pulumi.getter
    def taggings(self) -> pulumi.Output[Optional[Sequence['outputs.Address6Tagging']]]:
        """
        Config object tagging The structure of `tagging` block is documented below.
        """
        return pulumi.get(self, "taggings")

    @property
    @pulumi.getter
    def template(self) -> pulumi.Output[str]:
        """
        IPv6 address template.
        """
        return pulumi.get(self, "template")

    @property
    @pulumi.getter
    def tenant(self) -> pulumi.Output[str]:
        """
        Tenant.
        """
        return pulumi.get(self, "tenant")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        Type of IPv6 address object (default = ipprefix).
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def uuid(self) -> pulumi.Output[str]:
        """
        Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        """
        return pulumi.get(self, "uuid")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @property
    @pulumi.getter
    def visibility(self) -> pulumi.Output[str]:
        """
        Enable/disable the visibility of the object in the GUI. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "visibility")

