# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['UseractivityArgs', 'Useractivity']

@pulumi.input_type
class UseractivityArgs:
    def __init__(__self__, *,
                 application: Optional[pulumi.Input[str]] = None,
                 casb_name: Optional[pulumi.Input[str]] = None,
                 category: Optional[pulumi.Input[str]] = None,
                 control_options: Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityControlOptionArgs']]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 match_strategy: Optional[pulumi.Input[str]] = None,
                 matches: Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityMatchArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Useractivity resource.
        :param pulumi.Input[str] application: CASB SaaS application name.
        :param pulumi.Input[str] casb_name: CASB user activity signature name.
        :param pulumi.Input[str] category: CASB user activity category. Valid values: `activity-control`, `tenant-control`, `domain-control`, `safe-search-control`, `other`.
        :param pulumi.Input[Sequence[pulumi.Input['UseractivityControlOptionArgs']]] control_options: CASB control options. The structure of `control_options` block is documented below.
        :param pulumi.Input[str] description: CASB user activity description.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] match_strategy: CASB user activity match strategy. Valid values: `and`, `or`.
        :param pulumi.Input[Sequence[pulumi.Input['UseractivityMatchArgs']]] matches: CASB user activity match rules. The structure of `match` block is documented below.
        :param pulumi.Input[str] name: CASB user activity name.
        :param pulumi.Input[str] status: CASB user activity status. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] type: CASB user activity type. Valid values: `built-in`, `customized`.
        :param pulumi.Input[str] uuid: Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if application is not None:
            pulumi.set(__self__, "application", application)
        if casb_name is not None:
            pulumi.set(__self__, "casb_name", casb_name)
        if category is not None:
            pulumi.set(__self__, "category", category)
        if control_options is not None:
            pulumi.set(__self__, "control_options", control_options)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if match_strategy is not None:
            pulumi.set(__self__, "match_strategy", match_strategy)
        if matches is not None:
            pulumi.set(__self__, "matches", matches)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def application(self) -> Optional[pulumi.Input[str]]:
        """
        CASB SaaS application name.
        """
        return pulumi.get(self, "application")

    @application.setter
    def application(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "application", value)

    @property
    @pulumi.getter(name="casbName")
    def casb_name(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity signature name.
        """
        return pulumi.get(self, "casb_name")

    @casb_name.setter
    def casb_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "casb_name", value)

    @property
    @pulumi.getter
    def category(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity category. Valid values: `activity-control`, `tenant-control`, `domain-control`, `safe-search-control`, `other`.
        """
        return pulumi.get(self, "category")

    @category.setter
    def category(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "category", value)

    @property
    @pulumi.getter(name="controlOptions")
    def control_options(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityControlOptionArgs']]]]:
        """
        CASB control options. The structure of `control_options` block is documented below.
        """
        return pulumi.get(self, "control_options")

    @control_options.setter
    def control_options(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityControlOptionArgs']]]]):
        pulumi.set(self, "control_options", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="matchStrategy")
    def match_strategy(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity match strategy. Valid values: `and`, `or`.
        """
        return pulumi.get(self, "match_strategy")

    @match_strategy.setter
    def match_strategy(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "match_strategy", value)

    @property
    @pulumi.getter
    def matches(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityMatchArgs']]]]:
        """
        CASB user activity match rules. The structure of `match` block is documented below.
        """
        return pulumi.get(self, "matches")

    @matches.setter
    def matches(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityMatchArgs']]]]):
        pulumi.set(self, "matches", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity status. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity type. Valid values: `built-in`, `customized`.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        """
        Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        """
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _UseractivityState:
    def __init__(__self__, *,
                 application: Optional[pulumi.Input[str]] = None,
                 casb_name: Optional[pulumi.Input[str]] = None,
                 category: Optional[pulumi.Input[str]] = None,
                 control_options: Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityControlOptionArgs']]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 match_strategy: Optional[pulumi.Input[str]] = None,
                 matches: Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityMatchArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Useractivity resources.
        :param pulumi.Input[str] application: CASB SaaS application name.
        :param pulumi.Input[str] casb_name: CASB user activity signature name.
        :param pulumi.Input[str] category: CASB user activity category. Valid values: `activity-control`, `tenant-control`, `domain-control`, `safe-search-control`, `other`.
        :param pulumi.Input[Sequence[pulumi.Input['UseractivityControlOptionArgs']]] control_options: CASB control options. The structure of `control_options` block is documented below.
        :param pulumi.Input[str] description: CASB user activity description.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] match_strategy: CASB user activity match strategy. Valid values: `and`, `or`.
        :param pulumi.Input[Sequence[pulumi.Input['UseractivityMatchArgs']]] matches: CASB user activity match rules. The structure of `match` block is documented below.
        :param pulumi.Input[str] name: CASB user activity name.
        :param pulumi.Input[str] status: CASB user activity status. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] type: CASB user activity type. Valid values: `built-in`, `customized`.
        :param pulumi.Input[str] uuid: Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if application is not None:
            pulumi.set(__self__, "application", application)
        if casb_name is not None:
            pulumi.set(__self__, "casb_name", casb_name)
        if category is not None:
            pulumi.set(__self__, "category", category)
        if control_options is not None:
            pulumi.set(__self__, "control_options", control_options)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if match_strategy is not None:
            pulumi.set(__self__, "match_strategy", match_strategy)
        if matches is not None:
            pulumi.set(__self__, "matches", matches)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def application(self) -> Optional[pulumi.Input[str]]:
        """
        CASB SaaS application name.
        """
        return pulumi.get(self, "application")

    @application.setter
    def application(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "application", value)

    @property
    @pulumi.getter(name="casbName")
    def casb_name(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity signature name.
        """
        return pulumi.get(self, "casb_name")

    @casb_name.setter
    def casb_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "casb_name", value)

    @property
    @pulumi.getter
    def category(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity category. Valid values: `activity-control`, `tenant-control`, `domain-control`, `safe-search-control`, `other`.
        """
        return pulumi.get(self, "category")

    @category.setter
    def category(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "category", value)

    @property
    @pulumi.getter(name="controlOptions")
    def control_options(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityControlOptionArgs']]]]:
        """
        CASB control options. The structure of `control_options` block is documented below.
        """
        return pulumi.get(self, "control_options")

    @control_options.setter
    def control_options(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityControlOptionArgs']]]]):
        pulumi.set(self, "control_options", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="matchStrategy")
    def match_strategy(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity match strategy. Valid values: `and`, `or`.
        """
        return pulumi.get(self, "match_strategy")

    @match_strategy.setter
    def match_strategy(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "match_strategy", value)

    @property
    @pulumi.getter
    def matches(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityMatchArgs']]]]:
        """
        CASB user activity match rules. The structure of `match` block is documented below.
        """
        return pulumi.get(self, "matches")

    @matches.setter
    def matches(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['UseractivityMatchArgs']]]]):
        pulumi.set(self, "matches", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity status. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        CASB user activity type. Valid values: `built-in`, `customized`.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        """
        Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        """
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Useractivity(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 application: Optional[pulumi.Input[str]] = None,
                 casb_name: Optional[pulumi.Input[str]] = None,
                 category: Optional[pulumi.Input[str]] = None,
                 control_options: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UseractivityControlOptionArgs']]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 match_strategy: Optional[pulumi.Input[str]] = None,
                 matches: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UseractivityMatchArgs']]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure CASB user activity. Applies to FortiOS Version `>= 7.4.1`.

        ## Import

        Casb UserActivity can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:casb/useractivity:Useractivity labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:casb/useractivity:Useractivity labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] application: CASB SaaS application name.
        :param pulumi.Input[str] casb_name: CASB user activity signature name.
        :param pulumi.Input[str] category: CASB user activity category. Valid values: `activity-control`, `tenant-control`, `domain-control`, `safe-search-control`, `other`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UseractivityControlOptionArgs']]]] control_options: CASB control options. The structure of `control_options` block is documented below.
        :param pulumi.Input[str] description: CASB user activity description.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] match_strategy: CASB user activity match strategy. Valid values: `and`, `or`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UseractivityMatchArgs']]]] matches: CASB user activity match rules. The structure of `match` block is documented below.
        :param pulumi.Input[str] name: CASB user activity name.
        :param pulumi.Input[str] status: CASB user activity status. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] type: CASB user activity type. Valid values: `built-in`, `customized`.
        :param pulumi.Input[str] uuid: Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[UseractivityArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure CASB user activity. Applies to FortiOS Version `>= 7.4.1`.

        ## Import

        Casb UserActivity can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:casb/useractivity:Useractivity labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:casb/useractivity:Useractivity labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param UseractivityArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(UseractivityArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 application: Optional[pulumi.Input[str]] = None,
                 casb_name: Optional[pulumi.Input[str]] = None,
                 category: Optional[pulumi.Input[str]] = None,
                 control_options: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UseractivityControlOptionArgs']]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 match_strategy: Optional[pulumi.Input[str]] = None,
                 matches: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UseractivityMatchArgs']]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = UseractivityArgs.__new__(UseractivityArgs)

            __props__.__dict__["application"] = application
            __props__.__dict__["casb_name"] = casb_name
            __props__.__dict__["category"] = category
            __props__.__dict__["control_options"] = control_options
            __props__.__dict__["description"] = description
            __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
            __props__.__dict__["get_all_tables"] = get_all_tables
            __props__.__dict__["match_strategy"] = match_strategy
            __props__.__dict__["matches"] = matches
            __props__.__dict__["name"] = name
            __props__.__dict__["status"] = status
            __props__.__dict__["type"] = type
            __props__.__dict__["uuid"] = uuid
            __props__.__dict__["vdomparam"] = vdomparam
        super(Useractivity, __self__).__init__(
            'fortios:casb/useractivity:Useractivity',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            application: Optional[pulumi.Input[str]] = None,
            casb_name: Optional[pulumi.Input[str]] = None,
            category: Optional[pulumi.Input[str]] = None,
            control_options: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UseractivityControlOptionArgs']]]]] = None,
            description: Optional[pulumi.Input[str]] = None,
            dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
            get_all_tables: Optional[pulumi.Input[str]] = None,
            match_strategy: Optional[pulumi.Input[str]] = None,
            matches: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UseractivityMatchArgs']]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None,
            type: Optional[pulumi.Input[str]] = None,
            uuid: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Useractivity':
        """
        Get an existing Useractivity resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] application: CASB SaaS application name.
        :param pulumi.Input[str] casb_name: CASB user activity signature name.
        :param pulumi.Input[str] category: CASB user activity category. Valid values: `activity-control`, `tenant-control`, `domain-control`, `safe-search-control`, `other`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UseractivityControlOptionArgs']]]] control_options: CASB control options. The structure of `control_options` block is documented below.
        :param pulumi.Input[str] description: CASB user activity description.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] match_strategy: CASB user activity match strategy. Valid values: `and`, `or`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UseractivityMatchArgs']]]] matches: CASB user activity match rules. The structure of `match` block is documented below.
        :param pulumi.Input[str] name: CASB user activity name.
        :param pulumi.Input[str] status: CASB user activity status. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] type: CASB user activity type. Valid values: `built-in`, `customized`.
        :param pulumi.Input[str] uuid: Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _UseractivityState.__new__(_UseractivityState)

        __props__.__dict__["application"] = application
        __props__.__dict__["casb_name"] = casb_name
        __props__.__dict__["category"] = category
        __props__.__dict__["control_options"] = control_options
        __props__.__dict__["description"] = description
        __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
        __props__.__dict__["get_all_tables"] = get_all_tables
        __props__.__dict__["match_strategy"] = match_strategy
        __props__.__dict__["matches"] = matches
        __props__.__dict__["name"] = name
        __props__.__dict__["status"] = status
        __props__.__dict__["type"] = type
        __props__.__dict__["uuid"] = uuid
        __props__.__dict__["vdomparam"] = vdomparam
        return Useractivity(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def application(self) -> pulumi.Output[str]:
        """
        CASB SaaS application name.
        """
        return pulumi.get(self, "application")

    @property
    @pulumi.getter(name="casbName")
    def casb_name(self) -> pulumi.Output[str]:
        """
        CASB user activity signature name.
        """
        return pulumi.get(self, "casb_name")

    @property
    @pulumi.getter
    def category(self) -> pulumi.Output[str]:
        """
        CASB user activity category. Valid values: `activity-control`, `tenant-control`, `domain-control`, `safe-search-control`, `other`.
        """
        return pulumi.get(self, "category")

    @property
    @pulumi.getter(name="controlOptions")
    def control_options(self) -> pulumi.Output[Optional[Sequence['outputs.UseractivityControlOption']]]:
        """
        CASB control options. The structure of `control_options` block is documented below.
        """
        return pulumi.get(self, "control_options")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        CASB user activity description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> pulumi.Output[Optional[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> pulumi.Output[Optional[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @property
    @pulumi.getter(name="matchStrategy")
    def match_strategy(self) -> pulumi.Output[str]:
        """
        CASB user activity match strategy. Valid values: `and`, `or`.
        """
        return pulumi.get(self, "match_strategy")

    @property
    @pulumi.getter
    def matches(self) -> pulumi.Output[Optional[Sequence['outputs.UseractivityMatch']]]:
        """
        CASB user activity match rules. The structure of `match` block is documented below.
        """
        return pulumi.get(self, "matches")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        CASB user activity name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        CASB user activity status. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        CASB user activity type. Valid values: `built-in`, `customized`.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def uuid(self) -> pulumi.Output[str]:
        """
        Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
        """
        return pulumi.get(self, "uuid")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

