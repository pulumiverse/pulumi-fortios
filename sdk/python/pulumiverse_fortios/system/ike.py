# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IkeArgs', 'Ike']

@pulumi.input_type
class IkeArgs:
    def __init__(__self__, *,
                 dh_group1: Optional[pulumi.Input['IkeDhGroup1Args']] = None,
                 dh_group14: Optional[pulumi.Input['IkeDhGroup14Args']] = None,
                 dh_group15: Optional[pulumi.Input['IkeDhGroup15Args']] = None,
                 dh_group16: Optional[pulumi.Input['IkeDhGroup16Args']] = None,
                 dh_group17: Optional[pulumi.Input['IkeDhGroup17Args']] = None,
                 dh_group18: Optional[pulumi.Input['IkeDhGroup18Args']] = None,
                 dh_group19: Optional[pulumi.Input['IkeDhGroup19Args']] = None,
                 dh_group2: Optional[pulumi.Input['IkeDhGroup2Args']] = None,
                 dh_group20: Optional[pulumi.Input['IkeDhGroup20Args']] = None,
                 dh_group21: Optional[pulumi.Input['IkeDhGroup21Args']] = None,
                 dh_group27: Optional[pulumi.Input['IkeDhGroup27Args']] = None,
                 dh_group28: Optional[pulumi.Input['IkeDhGroup28Args']] = None,
                 dh_group29: Optional[pulumi.Input['IkeDhGroup29Args']] = None,
                 dh_group30: Optional[pulumi.Input['IkeDhGroup30Args']] = None,
                 dh_group31: Optional[pulumi.Input['IkeDhGroup31Args']] = None,
                 dh_group32: Optional[pulumi.Input['IkeDhGroup32Args']] = None,
                 dh_group5: Optional[pulumi.Input['IkeDhGroup5Args']] = None,
                 dh_keypair_cache: Optional[pulumi.Input[str]] = None,
                 dh_keypair_count: Optional[pulumi.Input[int]] = None,
                 dh_keypair_throttle: Optional[pulumi.Input[str]] = None,
                 dh_mode: Optional[pulumi.Input[str]] = None,
                 dh_multiprocess: Optional[pulumi.Input[str]] = None,
                 dh_worker_count: Optional[pulumi.Input[int]] = None,
                 embryonic_limit: Optional[pulumi.Input[int]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Ike resource.
        :param pulumi.Input['IkeDhGroup1Args'] dh_group1: Diffie-Hellman group 1 (MODP-768). The structure of `dh_group_1` block is documented below.
        :param pulumi.Input['IkeDhGroup14Args'] dh_group14: Diffie-Hellman group 14 (MODP-2048). The structure of `dh_group_14` block is documented below.
        :param pulumi.Input['IkeDhGroup15Args'] dh_group15: Diffie-Hellman group 15 (MODP-3072). The structure of `dh_group_15` block is documented below.
        :param pulumi.Input['IkeDhGroup16Args'] dh_group16: Diffie-Hellman group 16 (MODP-4096). The structure of `dh_group_16` block is documented below.
        :param pulumi.Input['IkeDhGroup17Args'] dh_group17: Diffie-Hellman group 17 (MODP-6144). The structure of `dh_group_17` block is documented below.
        :param pulumi.Input['IkeDhGroup18Args'] dh_group18: Diffie-Hellman group 18 (MODP-8192). The structure of `dh_group_18` block is documented below.
        :param pulumi.Input['IkeDhGroup19Args'] dh_group19: Diffie-Hellman group 19 (EC-P256). The structure of `dh_group_19` block is documented below.
        :param pulumi.Input['IkeDhGroup2Args'] dh_group2: Diffie-Hellman group 2 (MODP-1024). The structure of `dh_group_2` block is documented below.
        :param pulumi.Input['IkeDhGroup20Args'] dh_group20: Diffie-Hellman group 20 (EC-P384). The structure of `dh_group_20` block is documented below.
        :param pulumi.Input['IkeDhGroup21Args'] dh_group21: Diffie-Hellman group 21 (EC-P521). The structure of `dh_group_21` block is documented below.
        :param pulumi.Input['IkeDhGroup27Args'] dh_group27: Diffie-Hellman group 27 (EC-P224BP). The structure of `dh_group_27` block is documented below.
        :param pulumi.Input['IkeDhGroup28Args'] dh_group28: Diffie-Hellman group 28 (EC-P256BP). The structure of `dh_group_28` block is documented below.
        :param pulumi.Input['IkeDhGroup29Args'] dh_group29: Diffie-Hellman group 29 (EC-P384BP). The structure of `dh_group_29` block is documented below.
        :param pulumi.Input['IkeDhGroup30Args'] dh_group30: Diffie-Hellman group 30 (EC-P512BP). The structure of `dh_group_30` block is documented below.
        :param pulumi.Input['IkeDhGroup31Args'] dh_group31: Diffie-Hellman group 31 (EC-X25519). The structure of `dh_group_31` block is documented below.
        :param pulumi.Input['IkeDhGroup32Args'] dh_group32: Diffie-Hellman group 32 (EC-X448). The structure of `dh_group_32` block is documented below.
        :param pulumi.Input['IkeDhGroup5Args'] dh_group5: Diffie-Hellman group 5 (MODP-1536). The structure of `dh_group_5` block is documented below.
        :param pulumi.Input[str] dh_keypair_cache: Enable/disable Diffie-Hellman key pair cache. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] dh_keypair_count: Number of key pairs to pre-generate for each Diffie-Hellman group (per-worker).
        :param pulumi.Input[str] dh_keypair_throttle: Enable/disable Diffie-Hellman key pair cache CPU throttling. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] dh_mode: Use software (CPU) or hardware (CPX) to perform Diffie-Hellman calculations. Valid values: `software`, `hardware`.
        :param pulumi.Input[str] dh_multiprocess: Enable/disable multiprocess Diffie-Hellman daemon for IKE. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] dh_worker_count: Number of Diffie-Hellman workers to start.
        :param pulumi.Input[int] embryonic_limit: Maximum number of IPsec tunnels to negotiate simultaneously.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
               
               The `dh_group_1` block supports:
        """
        if dh_group1 is not None:
            pulumi.set(__self__, "dh_group1", dh_group1)
        if dh_group14 is not None:
            pulumi.set(__self__, "dh_group14", dh_group14)
        if dh_group15 is not None:
            pulumi.set(__self__, "dh_group15", dh_group15)
        if dh_group16 is not None:
            pulumi.set(__self__, "dh_group16", dh_group16)
        if dh_group17 is not None:
            pulumi.set(__self__, "dh_group17", dh_group17)
        if dh_group18 is not None:
            pulumi.set(__self__, "dh_group18", dh_group18)
        if dh_group19 is not None:
            pulumi.set(__self__, "dh_group19", dh_group19)
        if dh_group2 is not None:
            pulumi.set(__self__, "dh_group2", dh_group2)
        if dh_group20 is not None:
            pulumi.set(__self__, "dh_group20", dh_group20)
        if dh_group21 is not None:
            pulumi.set(__self__, "dh_group21", dh_group21)
        if dh_group27 is not None:
            pulumi.set(__self__, "dh_group27", dh_group27)
        if dh_group28 is not None:
            pulumi.set(__self__, "dh_group28", dh_group28)
        if dh_group29 is not None:
            pulumi.set(__self__, "dh_group29", dh_group29)
        if dh_group30 is not None:
            pulumi.set(__self__, "dh_group30", dh_group30)
        if dh_group31 is not None:
            pulumi.set(__self__, "dh_group31", dh_group31)
        if dh_group32 is not None:
            pulumi.set(__self__, "dh_group32", dh_group32)
        if dh_group5 is not None:
            pulumi.set(__self__, "dh_group5", dh_group5)
        if dh_keypair_cache is not None:
            pulumi.set(__self__, "dh_keypair_cache", dh_keypair_cache)
        if dh_keypair_count is not None:
            pulumi.set(__self__, "dh_keypair_count", dh_keypair_count)
        if dh_keypair_throttle is not None:
            pulumi.set(__self__, "dh_keypair_throttle", dh_keypair_throttle)
        if dh_mode is not None:
            pulumi.set(__self__, "dh_mode", dh_mode)
        if dh_multiprocess is not None:
            pulumi.set(__self__, "dh_multiprocess", dh_multiprocess)
        if dh_worker_count is not None:
            pulumi.set(__self__, "dh_worker_count", dh_worker_count)
        if embryonic_limit is not None:
            pulumi.set(__self__, "embryonic_limit", embryonic_limit)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="dhGroup1")
    def dh_group1(self) -> Optional[pulumi.Input['IkeDhGroup1Args']]:
        """
        Diffie-Hellman group 1 (MODP-768). The structure of `dh_group_1` block is documented below.
        """
        return pulumi.get(self, "dh_group1")

    @dh_group1.setter
    def dh_group1(self, value: Optional[pulumi.Input['IkeDhGroup1Args']]):
        pulumi.set(self, "dh_group1", value)

    @property
    @pulumi.getter(name="dhGroup14")
    def dh_group14(self) -> Optional[pulumi.Input['IkeDhGroup14Args']]:
        """
        Diffie-Hellman group 14 (MODP-2048). The structure of `dh_group_14` block is documented below.
        """
        return pulumi.get(self, "dh_group14")

    @dh_group14.setter
    def dh_group14(self, value: Optional[pulumi.Input['IkeDhGroup14Args']]):
        pulumi.set(self, "dh_group14", value)

    @property
    @pulumi.getter(name="dhGroup15")
    def dh_group15(self) -> Optional[pulumi.Input['IkeDhGroup15Args']]:
        """
        Diffie-Hellman group 15 (MODP-3072). The structure of `dh_group_15` block is documented below.
        """
        return pulumi.get(self, "dh_group15")

    @dh_group15.setter
    def dh_group15(self, value: Optional[pulumi.Input['IkeDhGroup15Args']]):
        pulumi.set(self, "dh_group15", value)

    @property
    @pulumi.getter(name="dhGroup16")
    def dh_group16(self) -> Optional[pulumi.Input['IkeDhGroup16Args']]:
        """
        Diffie-Hellman group 16 (MODP-4096). The structure of `dh_group_16` block is documented below.
        """
        return pulumi.get(self, "dh_group16")

    @dh_group16.setter
    def dh_group16(self, value: Optional[pulumi.Input['IkeDhGroup16Args']]):
        pulumi.set(self, "dh_group16", value)

    @property
    @pulumi.getter(name="dhGroup17")
    def dh_group17(self) -> Optional[pulumi.Input['IkeDhGroup17Args']]:
        """
        Diffie-Hellman group 17 (MODP-6144). The structure of `dh_group_17` block is documented below.
        """
        return pulumi.get(self, "dh_group17")

    @dh_group17.setter
    def dh_group17(self, value: Optional[pulumi.Input['IkeDhGroup17Args']]):
        pulumi.set(self, "dh_group17", value)

    @property
    @pulumi.getter(name="dhGroup18")
    def dh_group18(self) -> Optional[pulumi.Input['IkeDhGroup18Args']]:
        """
        Diffie-Hellman group 18 (MODP-8192). The structure of `dh_group_18` block is documented below.
        """
        return pulumi.get(self, "dh_group18")

    @dh_group18.setter
    def dh_group18(self, value: Optional[pulumi.Input['IkeDhGroup18Args']]):
        pulumi.set(self, "dh_group18", value)

    @property
    @pulumi.getter(name="dhGroup19")
    def dh_group19(self) -> Optional[pulumi.Input['IkeDhGroup19Args']]:
        """
        Diffie-Hellman group 19 (EC-P256). The structure of `dh_group_19` block is documented below.
        """
        return pulumi.get(self, "dh_group19")

    @dh_group19.setter
    def dh_group19(self, value: Optional[pulumi.Input['IkeDhGroup19Args']]):
        pulumi.set(self, "dh_group19", value)

    @property
    @pulumi.getter(name="dhGroup2")
    def dh_group2(self) -> Optional[pulumi.Input['IkeDhGroup2Args']]:
        """
        Diffie-Hellman group 2 (MODP-1024). The structure of `dh_group_2` block is documented below.
        """
        return pulumi.get(self, "dh_group2")

    @dh_group2.setter
    def dh_group2(self, value: Optional[pulumi.Input['IkeDhGroup2Args']]):
        pulumi.set(self, "dh_group2", value)

    @property
    @pulumi.getter(name="dhGroup20")
    def dh_group20(self) -> Optional[pulumi.Input['IkeDhGroup20Args']]:
        """
        Diffie-Hellman group 20 (EC-P384). The structure of `dh_group_20` block is documented below.
        """
        return pulumi.get(self, "dh_group20")

    @dh_group20.setter
    def dh_group20(self, value: Optional[pulumi.Input['IkeDhGroup20Args']]):
        pulumi.set(self, "dh_group20", value)

    @property
    @pulumi.getter(name="dhGroup21")
    def dh_group21(self) -> Optional[pulumi.Input['IkeDhGroup21Args']]:
        """
        Diffie-Hellman group 21 (EC-P521). The structure of `dh_group_21` block is documented below.
        """
        return pulumi.get(self, "dh_group21")

    @dh_group21.setter
    def dh_group21(self, value: Optional[pulumi.Input['IkeDhGroup21Args']]):
        pulumi.set(self, "dh_group21", value)

    @property
    @pulumi.getter(name="dhGroup27")
    def dh_group27(self) -> Optional[pulumi.Input['IkeDhGroup27Args']]:
        """
        Diffie-Hellman group 27 (EC-P224BP). The structure of `dh_group_27` block is documented below.
        """
        return pulumi.get(self, "dh_group27")

    @dh_group27.setter
    def dh_group27(self, value: Optional[pulumi.Input['IkeDhGroup27Args']]):
        pulumi.set(self, "dh_group27", value)

    @property
    @pulumi.getter(name="dhGroup28")
    def dh_group28(self) -> Optional[pulumi.Input['IkeDhGroup28Args']]:
        """
        Diffie-Hellman group 28 (EC-P256BP). The structure of `dh_group_28` block is documented below.
        """
        return pulumi.get(self, "dh_group28")

    @dh_group28.setter
    def dh_group28(self, value: Optional[pulumi.Input['IkeDhGroup28Args']]):
        pulumi.set(self, "dh_group28", value)

    @property
    @pulumi.getter(name="dhGroup29")
    def dh_group29(self) -> Optional[pulumi.Input['IkeDhGroup29Args']]:
        """
        Diffie-Hellman group 29 (EC-P384BP). The structure of `dh_group_29` block is documented below.
        """
        return pulumi.get(self, "dh_group29")

    @dh_group29.setter
    def dh_group29(self, value: Optional[pulumi.Input['IkeDhGroup29Args']]):
        pulumi.set(self, "dh_group29", value)

    @property
    @pulumi.getter(name="dhGroup30")
    def dh_group30(self) -> Optional[pulumi.Input['IkeDhGroup30Args']]:
        """
        Diffie-Hellman group 30 (EC-P512BP). The structure of `dh_group_30` block is documented below.
        """
        return pulumi.get(self, "dh_group30")

    @dh_group30.setter
    def dh_group30(self, value: Optional[pulumi.Input['IkeDhGroup30Args']]):
        pulumi.set(self, "dh_group30", value)

    @property
    @pulumi.getter(name="dhGroup31")
    def dh_group31(self) -> Optional[pulumi.Input['IkeDhGroup31Args']]:
        """
        Diffie-Hellman group 31 (EC-X25519). The structure of `dh_group_31` block is documented below.
        """
        return pulumi.get(self, "dh_group31")

    @dh_group31.setter
    def dh_group31(self, value: Optional[pulumi.Input['IkeDhGroup31Args']]):
        pulumi.set(self, "dh_group31", value)

    @property
    @pulumi.getter(name="dhGroup32")
    def dh_group32(self) -> Optional[pulumi.Input['IkeDhGroup32Args']]:
        """
        Diffie-Hellman group 32 (EC-X448). The structure of `dh_group_32` block is documented below.
        """
        return pulumi.get(self, "dh_group32")

    @dh_group32.setter
    def dh_group32(self, value: Optional[pulumi.Input['IkeDhGroup32Args']]):
        pulumi.set(self, "dh_group32", value)

    @property
    @pulumi.getter(name="dhGroup5")
    def dh_group5(self) -> Optional[pulumi.Input['IkeDhGroup5Args']]:
        """
        Diffie-Hellman group 5 (MODP-1536). The structure of `dh_group_5` block is documented below.
        """
        return pulumi.get(self, "dh_group5")

    @dh_group5.setter
    def dh_group5(self, value: Optional[pulumi.Input['IkeDhGroup5Args']]):
        pulumi.set(self, "dh_group5", value)

    @property
    @pulumi.getter(name="dhKeypairCache")
    def dh_keypair_cache(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable Diffie-Hellman key pair cache. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "dh_keypair_cache")

    @dh_keypair_cache.setter
    def dh_keypair_cache(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dh_keypair_cache", value)

    @property
    @pulumi.getter(name="dhKeypairCount")
    def dh_keypair_count(self) -> Optional[pulumi.Input[int]]:
        """
        Number of key pairs to pre-generate for each Diffie-Hellman group (per-worker).
        """
        return pulumi.get(self, "dh_keypair_count")

    @dh_keypair_count.setter
    def dh_keypair_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dh_keypair_count", value)

    @property
    @pulumi.getter(name="dhKeypairThrottle")
    def dh_keypair_throttle(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable Diffie-Hellman key pair cache CPU throttling. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "dh_keypair_throttle")

    @dh_keypair_throttle.setter
    def dh_keypair_throttle(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dh_keypair_throttle", value)

    @property
    @pulumi.getter(name="dhMode")
    def dh_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Use software (CPU) or hardware (CPX) to perform Diffie-Hellman calculations. Valid values: `software`, `hardware`.
        """
        return pulumi.get(self, "dh_mode")

    @dh_mode.setter
    def dh_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dh_mode", value)

    @property
    @pulumi.getter(name="dhMultiprocess")
    def dh_multiprocess(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable multiprocess Diffie-Hellman daemon for IKE. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "dh_multiprocess")

    @dh_multiprocess.setter
    def dh_multiprocess(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dh_multiprocess", value)

    @property
    @pulumi.getter(name="dhWorkerCount")
    def dh_worker_count(self) -> Optional[pulumi.Input[int]]:
        """
        Number of Diffie-Hellman workers to start.
        """
        return pulumi.get(self, "dh_worker_count")

    @dh_worker_count.setter
    def dh_worker_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dh_worker_count", value)

    @property
    @pulumi.getter(name="embryonicLimit")
    def embryonic_limit(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum number of IPsec tunnels to negotiate simultaneously.
        """
        return pulumi.get(self, "embryonic_limit")

    @embryonic_limit.setter
    def embryonic_limit(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "embryonic_limit", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.

        The `dh_group_1` block supports:
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _IkeState:
    def __init__(__self__, *,
                 dh_group1: Optional[pulumi.Input['IkeDhGroup1Args']] = None,
                 dh_group14: Optional[pulumi.Input['IkeDhGroup14Args']] = None,
                 dh_group15: Optional[pulumi.Input['IkeDhGroup15Args']] = None,
                 dh_group16: Optional[pulumi.Input['IkeDhGroup16Args']] = None,
                 dh_group17: Optional[pulumi.Input['IkeDhGroup17Args']] = None,
                 dh_group18: Optional[pulumi.Input['IkeDhGroup18Args']] = None,
                 dh_group19: Optional[pulumi.Input['IkeDhGroup19Args']] = None,
                 dh_group2: Optional[pulumi.Input['IkeDhGroup2Args']] = None,
                 dh_group20: Optional[pulumi.Input['IkeDhGroup20Args']] = None,
                 dh_group21: Optional[pulumi.Input['IkeDhGroup21Args']] = None,
                 dh_group27: Optional[pulumi.Input['IkeDhGroup27Args']] = None,
                 dh_group28: Optional[pulumi.Input['IkeDhGroup28Args']] = None,
                 dh_group29: Optional[pulumi.Input['IkeDhGroup29Args']] = None,
                 dh_group30: Optional[pulumi.Input['IkeDhGroup30Args']] = None,
                 dh_group31: Optional[pulumi.Input['IkeDhGroup31Args']] = None,
                 dh_group32: Optional[pulumi.Input['IkeDhGroup32Args']] = None,
                 dh_group5: Optional[pulumi.Input['IkeDhGroup5Args']] = None,
                 dh_keypair_cache: Optional[pulumi.Input[str]] = None,
                 dh_keypair_count: Optional[pulumi.Input[int]] = None,
                 dh_keypair_throttle: Optional[pulumi.Input[str]] = None,
                 dh_mode: Optional[pulumi.Input[str]] = None,
                 dh_multiprocess: Optional[pulumi.Input[str]] = None,
                 dh_worker_count: Optional[pulumi.Input[int]] = None,
                 embryonic_limit: Optional[pulumi.Input[int]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Ike resources.
        :param pulumi.Input['IkeDhGroup1Args'] dh_group1: Diffie-Hellman group 1 (MODP-768). The structure of `dh_group_1` block is documented below.
        :param pulumi.Input['IkeDhGroup14Args'] dh_group14: Diffie-Hellman group 14 (MODP-2048). The structure of `dh_group_14` block is documented below.
        :param pulumi.Input['IkeDhGroup15Args'] dh_group15: Diffie-Hellman group 15 (MODP-3072). The structure of `dh_group_15` block is documented below.
        :param pulumi.Input['IkeDhGroup16Args'] dh_group16: Diffie-Hellman group 16 (MODP-4096). The structure of `dh_group_16` block is documented below.
        :param pulumi.Input['IkeDhGroup17Args'] dh_group17: Diffie-Hellman group 17 (MODP-6144). The structure of `dh_group_17` block is documented below.
        :param pulumi.Input['IkeDhGroup18Args'] dh_group18: Diffie-Hellman group 18 (MODP-8192). The structure of `dh_group_18` block is documented below.
        :param pulumi.Input['IkeDhGroup19Args'] dh_group19: Diffie-Hellman group 19 (EC-P256). The structure of `dh_group_19` block is documented below.
        :param pulumi.Input['IkeDhGroup2Args'] dh_group2: Diffie-Hellman group 2 (MODP-1024). The structure of `dh_group_2` block is documented below.
        :param pulumi.Input['IkeDhGroup20Args'] dh_group20: Diffie-Hellman group 20 (EC-P384). The structure of `dh_group_20` block is documented below.
        :param pulumi.Input['IkeDhGroup21Args'] dh_group21: Diffie-Hellman group 21 (EC-P521). The structure of `dh_group_21` block is documented below.
        :param pulumi.Input['IkeDhGroup27Args'] dh_group27: Diffie-Hellman group 27 (EC-P224BP). The structure of `dh_group_27` block is documented below.
        :param pulumi.Input['IkeDhGroup28Args'] dh_group28: Diffie-Hellman group 28 (EC-P256BP). The structure of `dh_group_28` block is documented below.
        :param pulumi.Input['IkeDhGroup29Args'] dh_group29: Diffie-Hellman group 29 (EC-P384BP). The structure of `dh_group_29` block is documented below.
        :param pulumi.Input['IkeDhGroup30Args'] dh_group30: Diffie-Hellman group 30 (EC-P512BP). The structure of `dh_group_30` block is documented below.
        :param pulumi.Input['IkeDhGroup31Args'] dh_group31: Diffie-Hellman group 31 (EC-X25519). The structure of `dh_group_31` block is documented below.
        :param pulumi.Input['IkeDhGroup32Args'] dh_group32: Diffie-Hellman group 32 (EC-X448). The structure of `dh_group_32` block is documented below.
        :param pulumi.Input['IkeDhGroup5Args'] dh_group5: Diffie-Hellman group 5 (MODP-1536). The structure of `dh_group_5` block is documented below.
        :param pulumi.Input[str] dh_keypair_cache: Enable/disable Diffie-Hellman key pair cache. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] dh_keypair_count: Number of key pairs to pre-generate for each Diffie-Hellman group (per-worker).
        :param pulumi.Input[str] dh_keypair_throttle: Enable/disable Diffie-Hellman key pair cache CPU throttling. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] dh_mode: Use software (CPU) or hardware (CPX) to perform Diffie-Hellman calculations. Valid values: `software`, `hardware`.
        :param pulumi.Input[str] dh_multiprocess: Enable/disable multiprocess Diffie-Hellman daemon for IKE. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] dh_worker_count: Number of Diffie-Hellman workers to start.
        :param pulumi.Input[int] embryonic_limit: Maximum number of IPsec tunnels to negotiate simultaneously.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
               
               The `dh_group_1` block supports:
        """
        if dh_group1 is not None:
            pulumi.set(__self__, "dh_group1", dh_group1)
        if dh_group14 is not None:
            pulumi.set(__self__, "dh_group14", dh_group14)
        if dh_group15 is not None:
            pulumi.set(__self__, "dh_group15", dh_group15)
        if dh_group16 is not None:
            pulumi.set(__self__, "dh_group16", dh_group16)
        if dh_group17 is not None:
            pulumi.set(__self__, "dh_group17", dh_group17)
        if dh_group18 is not None:
            pulumi.set(__self__, "dh_group18", dh_group18)
        if dh_group19 is not None:
            pulumi.set(__self__, "dh_group19", dh_group19)
        if dh_group2 is not None:
            pulumi.set(__self__, "dh_group2", dh_group2)
        if dh_group20 is not None:
            pulumi.set(__self__, "dh_group20", dh_group20)
        if dh_group21 is not None:
            pulumi.set(__self__, "dh_group21", dh_group21)
        if dh_group27 is not None:
            pulumi.set(__self__, "dh_group27", dh_group27)
        if dh_group28 is not None:
            pulumi.set(__self__, "dh_group28", dh_group28)
        if dh_group29 is not None:
            pulumi.set(__self__, "dh_group29", dh_group29)
        if dh_group30 is not None:
            pulumi.set(__self__, "dh_group30", dh_group30)
        if dh_group31 is not None:
            pulumi.set(__self__, "dh_group31", dh_group31)
        if dh_group32 is not None:
            pulumi.set(__self__, "dh_group32", dh_group32)
        if dh_group5 is not None:
            pulumi.set(__self__, "dh_group5", dh_group5)
        if dh_keypair_cache is not None:
            pulumi.set(__self__, "dh_keypair_cache", dh_keypair_cache)
        if dh_keypair_count is not None:
            pulumi.set(__self__, "dh_keypair_count", dh_keypair_count)
        if dh_keypair_throttle is not None:
            pulumi.set(__self__, "dh_keypair_throttle", dh_keypair_throttle)
        if dh_mode is not None:
            pulumi.set(__self__, "dh_mode", dh_mode)
        if dh_multiprocess is not None:
            pulumi.set(__self__, "dh_multiprocess", dh_multiprocess)
        if dh_worker_count is not None:
            pulumi.set(__self__, "dh_worker_count", dh_worker_count)
        if embryonic_limit is not None:
            pulumi.set(__self__, "embryonic_limit", embryonic_limit)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="dhGroup1")
    def dh_group1(self) -> Optional[pulumi.Input['IkeDhGroup1Args']]:
        """
        Diffie-Hellman group 1 (MODP-768). The structure of `dh_group_1` block is documented below.
        """
        return pulumi.get(self, "dh_group1")

    @dh_group1.setter
    def dh_group1(self, value: Optional[pulumi.Input['IkeDhGroup1Args']]):
        pulumi.set(self, "dh_group1", value)

    @property
    @pulumi.getter(name="dhGroup14")
    def dh_group14(self) -> Optional[pulumi.Input['IkeDhGroup14Args']]:
        """
        Diffie-Hellman group 14 (MODP-2048). The structure of `dh_group_14` block is documented below.
        """
        return pulumi.get(self, "dh_group14")

    @dh_group14.setter
    def dh_group14(self, value: Optional[pulumi.Input['IkeDhGroup14Args']]):
        pulumi.set(self, "dh_group14", value)

    @property
    @pulumi.getter(name="dhGroup15")
    def dh_group15(self) -> Optional[pulumi.Input['IkeDhGroup15Args']]:
        """
        Diffie-Hellman group 15 (MODP-3072). The structure of `dh_group_15` block is documented below.
        """
        return pulumi.get(self, "dh_group15")

    @dh_group15.setter
    def dh_group15(self, value: Optional[pulumi.Input['IkeDhGroup15Args']]):
        pulumi.set(self, "dh_group15", value)

    @property
    @pulumi.getter(name="dhGroup16")
    def dh_group16(self) -> Optional[pulumi.Input['IkeDhGroup16Args']]:
        """
        Diffie-Hellman group 16 (MODP-4096). The structure of `dh_group_16` block is documented below.
        """
        return pulumi.get(self, "dh_group16")

    @dh_group16.setter
    def dh_group16(self, value: Optional[pulumi.Input['IkeDhGroup16Args']]):
        pulumi.set(self, "dh_group16", value)

    @property
    @pulumi.getter(name="dhGroup17")
    def dh_group17(self) -> Optional[pulumi.Input['IkeDhGroup17Args']]:
        """
        Diffie-Hellman group 17 (MODP-6144). The structure of `dh_group_17` block is documented below.
        """
        return pulumi.get(self, "dh_group17")

    @dh_group17.setter
    def dh_group17(self, value: Optional[pulumi.Input['IkeDhGroup17Args']]):
        pulumi.set(self, "dh_group17", value)

    @property
    @pulumi.getter(name="dhGroup18")
    def dh_group18(self) -> Optional[pulumi.Input['IkeDhGroup18Args']]:
        """
        Diffie-Hellman group 18 (MODP-8192). The structure of `dh_group_18` block is documented below.
        """
        return pulumi.get(self, "dh_group18")

    @dh_group18.setter
    def dh_group18(self, value: Optional[pulumi.Input['IkeDhGroup18Args']]):
        pulumi.set(self, "dh_group18", value)

    @property
    @pulumi.getter(name="dhGroup19")
    def dh_group19(self) -> Optional[pulumi.Input['IkeDhGroup19Args']]:
        """
        Diffie-Hellman group 19 (EC-P256). The structure of `dh_group_19` block is documented below.
        """
        return pulumi.get(self, "dh_group19")

    @dh_group19.setter
    def dh_group19(self, value: Optional[pulumi.Input['IkeDhGroup19Args']]):
        pulumi.set(self, "dh_group19", value)

    @property
    @pulumi.getter(name="dhGroup2")
    def dh_group2(self) -> Optional[pulumi.Input['IkeDhGroup2Args']]:
        """
        Diffie-Hellman group 2 (MODP-1024). The structure of `dh_group_2` block is documented below.
        """
        return pulumi.get(self, "dh_group2")

    @dh_group2.setter
    def dh_group2(self, value: Optional[pulumi.Input['IkeDhGroup2Args']]):
        pulumi.set(self, "dh_group2", value)

    @property
    @pulumi.getter(name="dhGroup20")
    def dh_group20(self) -> Optional[pulumi.Input['IkeDhGroup20Args']]:
        """
        Diffie-Hellman group 20 (EC-P384). The structure of `dh_group_20` block is documented below.
        """
        return pulumi.get(self, "dh_group20")

    @dh_group20.setter
    def dh_group20(self, value: Optional[pulumi.Input['IkeDhGroup20Args']]):
        pulumi.set(self, "dh_group20", value)

    @property
    @pulumi.getter(name="dhGroup21")
    def dh_group21(self) -> Optional[pulumi.Input['IkeDhGroup21Args']]:
        """
        Diffie-Hellman group 21 (EC-P521). The structure of `dh_group_21` block is documented below.
        """
        return pulumi.get(self, "dh_group21")

    @dh_group21.setter
    def dh_group21(self, value: Optional[pulumi.Input['IkeDhGroup21Args']]):
        pulumi.set(self, "dh_group21", value)

    @property
    @pulumi.getter(name="dhGroup27")
    def dh_group27(self) -> Optional[pulumi.Input['IkeDhGroup27Args']]:
        """
        Diffie-Hellman group 27 (EC-P224BP). The structure of `dh_group_27` block is documented below.
        """
        return pulumi.get(self, "dh_group27")

    @dh_group27.setter
    def dh_group27(self, value: Optional[pulumi.Input['IkeDhGroup27Args']]):
        pulumi.set(self, "dh_group27", value)

    @property
    @pulumi.getter(name="dhGroup28")
    def dh_group28(self) -> Optional[pulumi.Input['IkeDhGroup28Args']]:
        """
        Diffie-Hellman group 28 (EC-P256BP). The structure of `dh_group_28` block is documented below.
        """
        return pulumi.get(self, "dh_group28")

    @dh_group28.setter
    def dh_group28(self, value: Optional[pulumi.Input['IkeDhGroup28Args']]):
        pulumi.set(self, "dh_group28", value)

    @property
    @pulumi.getter(name="dhGroup29")
    def dh_group29(self) -> Optional[pulumi.Input['IkeDhGroup29Args']]:
        """
        Diffie-Hellman group 29 (EC-P384BP). The structure of `dh_group_29` block is documented below.
        """
        return pulumi.get(self, "dh_group29")

    @dh_group29.setter
    def dh_group29(self, value: Optional[pulumi.Input['IkeDhGroup29Args']]):
        pulumi.set(self, "dh_group29", value)

    @property
    @pulumi.getter(name="dhGroup30")
    def dh_group30(self) -> Optional[pulumi.Input['IkeDhGroup30Args']]:
        """
        Diffie-Hellman group 30 (EC-P512BP). The structure of `dh_group_30` block is documented below.
        """
        return pulumi.get(self, "dh_group30")

    @dh_group30.setter
    def dh_group30(self, value: Optional[pulumi.Input['IkeDhGroup30Args']]):
        pulumi.set(self, "dh_group30", value)

    @property
    @pulumi.getter(name="dhGroup31")
    def dh_group31(self) -> Optional[pulumi.Input['IkeDhGroup31Args']]:
        """
        Diffie-Hellman group 31 (EC-X25519). The structure of `dh_group_31` block is documented below.
        """
        return pulumi.get(self, "dh_group31")

    @dh_group31.setter
    def dh_group31(self, value: Optional[pulumi.Input['IkeDhGroup31Args']]):
        pulumi.set(self, "dh_group31", value)

    @property
    @pulumi.getter(name="dhGroup32")
    def dh_group32(self) -> Optional[pulumi.Input['IkeDhGroup32Args']]:
        """
        Diffie-Hellman group 32 (EC-X448). The structure of `dh_group_32` block is documented below.
        """
        return pulumi.get(self, "dh_group32")

    @dh_group32.setter
    def dh_group32(self, value: Optional[pulumi.Input['IkeDhGroup32Args']]):
        pulumi.set(self, "dh_group32", value)

    @property
    @pulumi.getter(name="dhGroup5")
    def dh_group5(self) -> Optional[pulumi.Input['IkeDhGroup5Args']]:
        """
        Diffie-Hellman group 5 (MODP-1536). The structure of `dh_group_5` block is documented below.
        """
        return pulumi.get(self, "dh_group5")

    @dh_group5.setter
    def dh_group5(self, value: Optional[pulumi.Input['IkeDhGroup5Args']]):
        pulumi.set(self, "dh_group5", value)

    @property
    @pulumi.getter(name="dhKeypairCache")
    def dh_keypair_cache(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable Diffie-Hellman key pair cache. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "dh_keypair_cache")

    @dh_keypair_cache.setter
    def dh_keypair_cache(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dh_keypair_cache", value)

    @property
    @pulumi.getter(name="dhKeypairCount")
    def dh_keypair_count(self) -> Optional[pulumi.Input[int]]:
        """
        Number of key pairs to pre-generate for each Diffie-Hellman group (per-worker).
        """
        return pulumi.get(self, "dh_keypair_count")

    @dh_keypair_count.setter
    def dh_keypair_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dh_keypair_count", value)

    @property
    @pulumi.getter(name="dhKeypairThrottle")
    def dh_keypair_throttle(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable Diffie-Hellman key pair cache CPU throttling. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "dh_keypair_throttle")

    @dh_keypair_throttle.setter
    def dh_keypair_throttle(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dh_keypair_throttle", value)

    @property
    @pulumi.getter(name="dhMode")
    def dh_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Use software (CPU) or hardware (CPX) to perform Diffie-Hellman calculations. Valid values: `software`, `hardware`.
        """
        return pulumi.get(self, "dh_mode")

    @dh_mode.setter
    def dh_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dh_mode", value)

    @property
    @pulumi.getter(name="dhMultiprocess")
    def dh_multiprocess(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable multiprocess Diffie-Hellman daemon for IKE. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "dh_multiprocess")

    @dh_multiprocess.setter
    def dh_multiprocess(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dh_multiprocess", value)

    @property
    @pulumi.getter(name="dhWorkerCount")
    def dh_worker_count(self) -> Optional[pulumi.Input[int]]:
        """
        Number of Diffie-Hellman workers to start.
        """
        return pulumi.get(self, "dh_worker_count")

    @dh_worker_count.setter
    def dh_worker_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dh_worker_count", value)

    @property
    @pulumi.getter(name="embryonicLimit")
    def embryonic_limit(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum number of IPsec tunnels to negotiate simultaneously.
        """
        return pulumi.get(self, "embryonic_limit")

    @embryonic_limit.setter
    def embryonic_limit(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "embryonic_limit", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.

        The `dh_group_1` block supports:
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Ike(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 dh_group1: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup1Args']]] = None,
                 dh_group14: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup14Args']]] = None,
                 dh_group15: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup15Args']]] = None,
                 dh_group16: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup16Args']]] = None,
                 dh_group17: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup17Args']]] = None,
                 dh_group18: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup18Args']]] = None,
                 dh_group19: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup19Args']]] = None,
                 dh_group2: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup2Args']]] = None,
                 dh_group20: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup20Args']]] = None,
                 dh_group21: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup21Args']]] = None,
                 dh_group27: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup27Args']]] = None,
                 dh_group28: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup28Args']]] = None,
                 dh_group29: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup29Args']]] = None,
                 dh_group30: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup30Args']]] = None,
                 dh_group31: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup31Args']]] = None,
                 dh_group32: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup32Args']]] = None,
                 dh_group5: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup5Args']]] = None,
                 dh_keypair_cache: Optional[pulumi.Input[str]] = None,
                 dh_keypair_count: Optional[pulumi.Input[int]] = None,
                 dh_keypair_throttle: Optional[pulumi.Input[str]] = None,
                 dh_mode: Optional[pulumi.Input[str]] = None,
                 dh_multiprocess: Optional[pulumi.Input[str]] = None,
                 dh_worker_count: Optional[pulumi.Input[int]] = None,
                 embryonic_limit: Optional[pulumi.Input[int]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure IKE global attributes. Applies to FortiOS Version `>= 7.0.1`.

        ## Import

        System Ike can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:system/ike:Ike labelname SystemIke
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:system/ike:Ike labelname SystemIke
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup1Args']] dh_group1: Diffie-Hellman group 1 (MODP-768). The structure of `dh_group_1` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup14Args']] dh_group14: Diffie-Hellman group 14 (MODP-2048). The structure of `dh_group_14` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup15Args']] dh_group15: Diffie-Hellman group 15 (MODP-3072). The structure of `dh_group_15` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup16Args']] dh_group16: Diffie-Hellman group 16 (MODP-4096). The structure of `dh_group_16` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup17Args']] dh_group17: Diffie-Hellman group 17 (MODP-6144). The structure of `dh_group_17` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup18Args']] dh_group18: Diffie-Hellman group 18 (MODP-8192). The structure of `dh_group_18` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup19Args']] dh_group19: Diffie-Hellman group 19 (EC-P256). The structure of `dh_group_19` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup2Args']] dh_group2: Diffie-Hellman group 2 (MODP-1024). The structure of `dh_group_2` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup20Args']] dh_group20: Diffie-Hellman group 20 (EC-P384). The structure of `dh_group_20` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup21Args']] dh_group21: Diffie-Hellman group 21 (EC-P521). The structure of `dh_group_21` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup27Args']] dh_group27: Diffie-Hellman group 27 (EC-P224BP). The structure of `dh_group_27` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup28Args']] dh_group28: Diffie-Hellman group 28 (EC-P256BP). The structure of `dh_group_28` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup29Args']] dh_group29: Diffie-Hellman group 29 (EC-P384BP). The structure of `dh_group_29` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup30Args']] dh_group30: Diffie-Hellman group 30 (EC-P512BP). The structure of `dh_group_30` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup31Args']] dh_group31: Diffie-Hellman group 31 (EC-X25519). The structure of `dh_group_31` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup32Args']] dh_group32: Diffie-Hellman group 32 (EC-X448). The structure of `dh_group_32` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup5Args']] dh_group5: Diffie-Hellman group 5 (MODP-1536). The structure of `dh_group_5` block is documented below.
        :param pulumi.Input[str] dh_keypair_cache: Enable/disable Diffie-Hellman key pair cache. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] dh_keypair_count: Number of key pairs to pre-generate for each Diffie-Hellman group (per-worker).
        :param pulumi.Input[str] dh_keypair_throttle: Enable/disable Diffie-Hellman key pair cache CPU throttling. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] dh_mode: Use software (CPU) or hardware (CPX) to perform Diffie-Hellman calculations. Valid values: `software`, `hardware`.
        :param pulumi.Input[str] dh_multiprocess: Enable/disable multiprocess Diffie-Hellman daemon for IKE. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] dh_worker_count: Number of Diffie-Hellman workers to start.
        :param pulumi.Input[int] embryonic_limit: Maximum number of IPsec tunnels to negotiate simultaneously.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
               
               The `dh_group_1` block supports:
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[IkeArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure IKE global attributes. Applies to FortiOS Version `>= 7.0.1`.

        ## Import

        System Ike can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:system/ike:Ike labelname SystemIke
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:system/ike:Ike labelname SystemIke
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param IkeArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IkeArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 dh_group1: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup1Args']]] = None,
                 dh_group14: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup14Args']]] = None,
                 dh_group15: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup15Args']]] = None,
                 dh_group16: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup16Args']]] = None,
                 dh_group17: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup17Args']]] = None,
                 dh_group18: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup18Args']]] = None,
                 dh_group19: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup19Args']]] = None,
                 dh_group2: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup2Args']]] = None,
                 dh_group20: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup20Args']]] = None,
                 dh_group21: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup21Args']]] = None,
                 dh_group27: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup27Args']]] = None,
                 dh_group28: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup28Args']]] = None,
                 dh_group29: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup29Args']]] = None,
                 dh_group30: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup30Args']]] = None,
                 dh_group31: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup31Args']]] = None,
                 dh_group32: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup32Args']]] = None,
                 dh_group5: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup5Args']]] = None,
                 dh_keypair_cache: Optional[pulumi.Input[str]] = None,
                 dh_keypair_count: Optional[pulumi.Input[int]] = None,
                 dh_keypair_throttle: Optional[pulumi.Input[str]] = None,
                 dh_mode: Optional[pulumi.Input[str]] = None,
                 dh_multiprocess: Optional[pulumi.Input[str]] = None,
                 dh_worker_count: Optional[pulumi.Input[int]] = None,
                 embryonic_limit: Optional[pulumi.Input[int]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IkeArgs.__new__(IkeArgs)

            __props__.__dict__["dh_group1"] = dh_group1
            __props__.__dict__["dh_group14"] = dh_group14
            __props__.__dict__["dh_group15"] = dh_group15
            __props__.__dict__["dh_group16"] = dh_group16
            __props__.__dict__["dh_group17"] = dh_group17
            __props__.__dict__["dh_group18"] = dh_group18
            __props__.__dict__["dh_group19"] = dh_group19
            __props__.__dict__["dh_group2"] = dh_group2
            __props__.__dict__["dh_group20"] = dh_group20
            __props__.__dict__["dh_group21"] = dh_group21
            __props__.__dict__["dh_group27"] = dh_group27
            __props__.__dict__["dh_group28"] = dh_group28
            __props__.__dict__["dh_group29"] = dh_group29
            __props__.__dict__["dh_group30"] = dh_group30
            __props__.__dict__["dh_group31"] = dh_group31
            __props__.__dict__["dh_group32"] = dh_group32
            __props__.__dict__["dh_group5"] = dh_group5
            __props__.__dict__["dh_keypair_cache"] = dh_keypair_cache
            __props__.__dict__["dh_keypair_count"] = dh_keypair_count
            __props__.__dict__["dh_keypair_throttle"] = dh_keypair_throttle
            __props__.__dict__["dh_mode"] = dh_mode
            __props__.__dict__["dh_multiprocess"] = dh_multiprocess
            __props__.__dict__["dh_worker_count"] = dh_worker_count
            __props__.__dict__["embryonic_limit"] = embryonic_limit
            __props__.__dict__["get_all_tables"] = get_all_tables
            __props__.__dict__["vdomparam"] = vdomparam
        super(Ike, __self__).__init__(
            'fortios:system/ike:Ike',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            dh_group1: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup1Args']]] = None,
            dh_group14: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup14Args']]] = None,
            dh_group15: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup15Args']]] = None,
            dh_group16: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup16Args']]] = None,
            dh_group17: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup17Args']]] = None,
            dh_group18: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup18Args']]] = None,
            dh_group19: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup19Args']]] = None,
            dh_group2: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup2Args']]] = None,
            dh_group20: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup20Args']]] = None,
            dh_group21: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup21Args']]] = None,
            dh_group27: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup27Args']]] = None,
            dh_group28: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup28Args']]] = None,
            dh_group29: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup29Args']]] = None,
            dh_group30: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup30Args']]] = None,
            dh_group31: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup31Args']]] = None,
            dh_group32: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup32Args']]] = None,
            dh_group5: Optional[pulumi.Input[pulumi.InputType['IkeDhGroup5Args']]] = None,
            dh_keypair_cache: Optional[pulumi.Input[str]] = None,
            dh_keypair_count: Optional[pulumi.Input[int]] = None,
            dh_keypair_throttle: Optional[pulumi.Input[str]] = None,
            dh_mode: Optional[pulumi.Input[str]] = None,
            dh_multiprocess: Optional[pulumi.Input[str]] = None,
            dh_worker_count: Optional[pulumi.Input[int]] = None,
            embryonic_limit: Optional[pulumi.Input[int]] = None,
            get_all_tables: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Ike':
        """
        Get an existing Ike resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup1Args']] dh_group1: Diffie-Hellman group 1 (MODP-768). The structure of `dh_group_1` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup14Args']] dh_group14: Diffie-Hellman group 14 (MODP-2048). The structure of `dh_group_14` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup15Args']] dh_group15: Diffie-Hellman group 15 (MODP-3072). The structure of `dh_group_15` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup16Args']] dh_group16: Diffie-Hellman group 16 (MODP-4096). The structure of `dh_group_16` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup17Args']] dh_group17: Diffie-Hellman group 17 (MODP-6144). The structure of `dh_group_17` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup18Args']] dh_group18: Diffie-Hellman group 18 (MODP-8192). The structure of `dh_group_18` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup19Args']] dh_group19: Diffie-Hellman group 19 (EC-P256). The structure of `dh_group_19` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup2Args']] dh_group2: Diffie-Hellman group 2 (MODP-1024). The structure of `dh_group_2` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup20Args']] dh_group20: Diffie-Hellman group 20 (EC-P384). The structure of `dh_group_20` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup21Args']] dh_group21: Diffie-Hellman group 21 (EC-P521). The structure of `dh_group_21` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup27Args']] dh_group27: Diffie-Hellman group 27 (EC-P224BP). The structure of `dh_group_27` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup28Args']] dh_group28: Diffie-Hellman group 28 (EC-P256BP). The structure of `dh_group_28` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup29Args']] dh_group29: Diffie-Hellman group 29 (EC-P384BP). The structure of `dh_group_29` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup30Args']] dh_group30: Diffie-Hellman group 30 (EC-P512BP). The structure of `dh_group_30` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup31Args']] dh_group31: Diffie-Hellman group 31 (EC-X25519). The structure of `dh_group_31` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup32Args']] dh_group32: Diffie-Hellman group 32 (EC-X448). The structure of `dh_group_32` block is documented below.
        :param pulumi.Input[pulumi.InputType['IkeDhGroup5Args']] dh_group5: Diffie-Hellman group 5 (MODP-1536). The structure of `dh_group_5` block is documented below.
        :param pulumi.Input[str] dh_keypair_cache: Enable/disable Diffie-Hellman key pair cache. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] dh_keypair_count: Number of key pairs to pre-generate for each Diffie-Hellman group (per-worker).
        :param pulumi.Input[str] dh_keypair_throttle: Enable/disable Diffie-Hellman key pair cache CPU throttling. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] dh_mode: Use software (CPU) or hardware (CPX) to perform Diffie-Hellman calculations. Valid values: `software`, `hardware`.
        :param pulumi.Input[str] dh_multiprocess: Enable/disable multiprocess Diffie-Hellman daemon for IKE. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] dh_worker_count: Number of Diffie-Hellman workers to start.
        :param pulumi.Input[int] embryonic_limit: Maximum number of IPsec tunnels to negotiate simultaneously.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
               
               The `dh_group_1` block supports:
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IkeState.__new__(_IkeState)

        __props__.__dict__["dh_group1"] = dh_group1
        __props__.__dict__["dh_group14"] = dh_group14
        __props__.__dict__["dh_group15"] = dh_group15
        __props__.__dict__["dh_group16"] = dh_group16
        __props__.__dict__["dh_group17"] = dh_group17
        __props__.__dict__["dh_group18"] = dh_group18
        __props__.__dict__["dh_group19"] = dh_group19
        __props__.__dict__["dh_group2"] = dh_group2
        __props__.__dict__["dh_group20"] = dh_group20
        __props__.__dict__["dh_group21"] = dh_group21
        __props__.__dict__["dh_group27"] = dh_group27
        __props__.__dict__["dh_group28"] = dh_group28
        __props__.__dict__["dh_group29"] = dh_group29
        __props__.__dict__["dh_group30"] = dh_group30
        __props__.__dict__["dh_group31"] = dh_group31
        __props__.__dict__["dh_group32"] = dh_group32
        __props__.__dict__["dh_group5"] = dh_group5
        __props__.__dict__["dh_keypair_cache"] = dh_keypair_cache
        __props__.__dict__["dh_keypair_count"] = dh_keypair_count
        __props__.__dict__["dh_keypair_throttle"] = dh_keypair_throttle
        __props__.__dict__["dh_mode"] = dh_mode
        __props__.__dict__["dh_multiprocess"] = dh_multiprocess
        __props__.__dict__["dh_worker_count"] = dh_worker_count
        __props__.__dict__["embryonic_limit"] = embryonic_limit
        __props__.__dict__["get_all_tables"] = get_all_tables
        __props__.__dict__["vdomparam"] = vdomparam
        return Ike(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="dhGroup1")
    def dh_group1(self) -> pulumi.Output['outputs.IkeDhGroup1']:
        """
        Diffie-Hellman group 1 (MODP-768). The structure of `dh_group_1` block is documented below.
        """
        return pulumi.get(self, "dh_group1")

    @property
    @pulumi.getter(name="dhGroup14")
    def dh_group14(self) -> pulumi.Output['outputs.IkeDhGroup14']:
        """
        Diffie-Hellman group 14 (MODP-2048). The structure of `dh_group_14` block is documented below.
        """
        return pulumi.get(self, "dh_group14")

    @property
    @pulumi.getter(name="dhGroup15")
    def dh_group15(self) -> pulumi.Output['outputs.IkeDhGroup15']:
        """
        Diffie-Hellman group 15 (MODP-3072). The structure of `dh_group_15` block is documented below.
        """
        return pulumi.get(self, "dh_group15")

    @property
    @pulumi.getter(name="dhGroup16")
    def dh_group16(self) -> pulumi.Output['outputs.IkeDhGroup16']:
        """
        Diffie-Hellman group 16 (MODP-4096). The structure of `dh_group_16` block is documented below.
        """
        return pulumi.get(self, "dh_group16")

    @property
    @pulumi.getter(name="dhGroup17")
    def dh_group17(self) -> pulumi.Output['outputs.IkeDhGroup17']:
        """
        Diffie-Hellman group 17 (MODP-6144). The structure of `dh_group_17` block is documented below.
        """
        return pulumi.get(self, "dh_group17")

    @property
    @pulumi.getter(name="dhGroup18")
    def dh_group18(self) -> pulumi.Output['outputs.IkeDhGroup18']:
        """
        Diffie-Hellman group 18 (MODP-8192). The structure of `dh_group_18` block is documented below.
        """
        return pulumi.get(self, "dh_group18")

    @property
    @pulumi.getter(name="dhGroup19")
    def dh_group19(self) -> pulumi.Output['outputs.IkeDhGroup19']:
        """
        Diffie-Hellman group 19 (EC-P256). The structure of `dh_group_19` block is documented below.
        """
        return pulumi.get(self, "dh_group19")

    @property
    @pulumi.getter(name="dhGroup2")
    def dh_group2(self) -> pulumi.Output['outputs.IkeDhGroup2']:
        """
        Diffie-Hellman group 2 (MODP-1024). The structure of `dh_group_2` block is documented below.
        """
        return pulumi.get(self, "dh_group2")

    @property
    @pulumi.getter(name="dhGroup20")
    def dh_group20(self) -> pulumi.Output['outputs.IkeDhGroup20']:
        """
        Diffie-Hellman group 20 (EC-P384). The structure of `dh_group_20` block is documented below.
        """
        return pulumi.get(self, "dh_group20")

    @property
    @pulumi.getter(name="dhGroup21")
    def dh_group21(self) -> pulumi.Output['outputs.IkeDhGroup21']:
        """
        Diffie-Hellman group 21 (EC-P521). The structure of `dh_group_21` block is documented below.
        """
        return pulumi.get(self, "dh_group21")

    @property
    @pulumi.getter(name="dhGroup27")
    def dh_group27(self) -> pulumi.Output['outputs.IkeDhGroup27']:
        """
        Diffie-Hellman group 27 (EC-P224BP). The structure of `dh_group_27` block is documented below.
        """
        return pulumi.get(self, "dh_group27")

    @property
    @pulumi.getter(name="dhGroup28")
    def dh_group28(self) -> pulumi.Output['outputs.IkeDhGroup28']:
        """
        Diffie-Hellman group 28 (EC-P256BP). The structure of `dh_group_28` block is documented below.
        """
        return pulumi.get(self, "dh_group28")

    @property
    @pulumi.getter(name="dhGroup29")
    def dh_group29(self) -> pulumi.Output['outputs.IkeDhGroup29']:
        """
        Diffie-Hellman group 29 (EC-P384BP). The structure of `dh_group_29` block is documented below.
        """
        return pulumi.get(self, "dh_group29")

    @property
    @pulumi.getter(name="dhGroup30")
    def dh_group30(self) -> pulumi.Output['outputs.IkeDhGroup30']:
        """
        Diffie-Hellman group 30 (EC-P512BP). The structure of `dh_group_30` block is documented below.
        """
        return pulumi.get(self, "dh_group30")

    @property
    @pulumi.getter(name="dhGroup31")
    def dh_group31(self) -> pulumi.Output['outputs.IkeDhGroup31']:
        """
        Diffie-Hellman group 31 (EC-X25519). The structure of `dh_group_31` block is documented below.
        """
        return pulumi.get(self, "dh_group31")

    @property
    @pulumi.getter(name="dhGroup32")
    def dh_group32(self) -> pulumi.Output['outputs.IkeDhGroup32']:
        """
        Diffie-Hellman group 32 (EC-X448). The structure of `dh_group_32` block is documented below.
        """
        return pulumi.get(self, "dh_group32")

    @property
    @pulumi.getter(name="dhGroup5")
    def dh_group5(self) -> pulumi.Output['outputs.IkeDhGroup5']:
        """
        Diffie-Hellman group 5 (MODP-1536). The structure of `dh_group_5` block is documented below.
        """
        return pulumi.get(self, "dh_group5")

    @property
    @pulumi.getter(name="dhKeypairCache")
    def dh_keypair_cache(self) -> pulumi.Output[str]:
        """
        Enable/disable Diffie-Hellman key pair cache. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "dh_keypair_cache")

    @property
    @pulumi.getter(name="dhKeypairCount")
    def dh_keypair_count(self) -> pulumi.Output[int]:
        """
        Number of key pairs to pre-generate for each Diffie-Hellman group (per-worker).
        """
        return pulumi.get(self, "dh_keypair_count")

    @property
    @pulumi.getter(name="dhKeypairThrottle")
    def dh_keypair_throttle(self) -> pulumi.Output[str]:
        """
        Enable/disable Diffie-Hellman key pair cache CPU throttling. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "dh_keypair_throttle")

    @property
    @pulumi.getter(name="dhMode")
    def dh_mode(self) -> pulumi.Output[str]:
        """
        Use software (CPU) or hardware (CPX) to perform Diffie-Hellman calculations. Valid values: `software`, `hardware`.
        """
        return pulumi.get(self, "dh_mode")

    @property
    @pulumi.getter(name="dhMultiprocess")
    def dh_multiprocess(self) -> pulumi.Output[str]:
        """
        Enable/disable multiprocess Diffie-Hellman daemon for IKE. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "dh_multiprocess")

    @property
    @pulumi.getter(name="dhWorkerCount")
    def dh_worker_count(self) -> pulumi.Output[int]:
        """
        Number of Diffie-Hellman workers to start.
        """
        return pulumi.get(self, "dh_worker_count")

    @property
    @pulumi.getter(name="embryonicLimit")
    def embryonic_limit(self) -> pulumi.Output[int]:
        """
        Maximum number of IPsec tunnels to negotiate simultaneously.
        """
        return pulumi.get(self, "embryonic_limit")

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> pulumi.Output[Optional[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.

        The `dh_group_1` block supports:
        """
        return pulumi.get(self, "vdomparam")

