# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['AutomationactionArgs', 'Automationaction']

@pulumi.input_type
class AutomationactionArgs:
    def __init__(__self__, *,
                 accprofile: Optional[pulumi.Input[str]] = None,
                 action_type: Optional[pulumi.Input[str]] = None,
                 alicloud_access_key_id: Optional[pulumi.Input[str]] = None,
                 alicloud_access_key_secret: Optional[pulumi.Input[str]] = None,
                 alicloud_account_id: Optional[pulumi.Input[str]] = None,
                 alicloud_function: Optional[pulumi.Input[str]] = None,
                 alicloud_function_authorization: Optional[pulumi.Input[str]] = None,
                 alicloud_function_domain: Optional[pulumi.Input[str]] = None,
                 alicloud_region: Optional[pulumi.Input[str]] = None,
                 alicloud_service: Optional[pulumi.Input[str]] = None,
                 alicloud_version: Optional[pulumi.Input[str]] = None,
                 aws_api_id: Optional[pulumi.Input[str]] = None,
                 aws_api_key: Optional[pulumi.Input[str]] = None,
                 aws_api_path: Optional[pulumi.Input[str]] = None,
                 aws_api_stage: Optional[pulumi.Input[str]] = None,
                 aws_domain: Optional[pulumi.Input[str]] = None,
                 aws_region: Optional[pulumi.Input[str]] = None,
                 azure_api_key: Optional[pulumi.Input[str]] = None,
                 azure_app: Optional[pulumi.Input[str]] = None,
                 azure_domain: Optional[pulumi.Input[str]] = None,
                 azure_function: Optional[pulumi.Input[str]] = None,
                 azure_function_authorization: Optional[pulumi.Input[str]] = None,
                 delay: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 email_body: Optional[pulumi.Input[str]] = None,
                 email_from: Optional[pulumi.Input[str]] = None,
                 email_subject: Optional[pulumi.Input[str]] = None,
                 email_tos: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionEmailToArgs']]]] = None,
                 execute_security_fabric: Optional[pulumi.Input[str]] = None,
                 forticare_email: Optional[pulumi.Input[str]] = None,
                 gcp_function: Optional[pulumi.Input[str]] = None,
                 gcp_function_domain: Optional[pulumi.Input[str]] = None,
                 gcp_function_region: Optional[pulumi.Input[str]] = None,
                 gcp_project: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 headers: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHeaderArgs']]]] = None,
                 http_body: Optional[pulumi.Input[str]] = None,
                 http_headers: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHttpHeaderArgs']]]] = None,
                 message: Optional[pulumi.Input[str]] = None,
                 message_type: Optional[pulumi.Input[str]] = None,
                 method: Optional[pulumi.Input[str]] = None,
                 minimum_interval: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 output_size: Optional[pulumi.Input[int]] = None,
                 port: Optional[pulumi.Input[int]] = None,
                 protocol: Optional[pulumi.Input[str]] = None,
                 replacement_message: Optional[pulumi.Input[str]] = None,
                 replacemsg_group: Optional[pulumi.Input[str]] = None,
                 required: Optional[pulumi.Input[str]] = None,
                 script: Optional[pulumi.Input[str]] = None,
                 sdn_connectors: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionSdnConnectorArgs']]]] = None,
                 security_tag: Optional[pulumi.Input[str]] = None,
                 system_action: Optional[pulumi.Input[str]] = None,
                 timeout: Optional[pulumi.Input[int]] = None,
                 tls_certificate: Optional[pulumi.Input[str]] = None,
                 uri: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 verify_host_cert: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Automationaction resource.
        :param pulumi.Input[str] accprofile: Access profile for CLI script action to access FortiGate features.
        :param pulumi.Input[str] action_type: Action type.
        :param pulumi.Input[str] alicloud_access_key_id: AliCloud AccessKey ID.
        :param pulumi.Input[str] alicloud_access_key_secret: AliCloud AccessKey secret.
        :param pulumi.Input[str] alicloud_account_id: AliCloud account ID.
        :param pulumi.Input[str] alicloud_function: AliCloud function name.
        :param pulumi.Input[str] alicloud_function_authorization: AliCloud function authorization type. Valid values: `anonymous`, `function`.
        :param pulumi.Input[str] alicloud_function_domain: AliCloud function domain.
        :param pulumi.Input[str] alicloud_region: AliCloud region.
        :param pulumi.Input[str] alicloud_service: AliCloud service name.
        :param pulumi.Input[str] alicloud_version: AliCloud version.
        :param pulumi.Input[str] aws_api_id: AWS API Gateway ID.
        :param pulumi.Input[str] aws_api_key: AWS API Gateway API key.
        :param pulumi.Input[str] aws_api_path: AWS API Gateway path.
        :param pulumi.Input[str] aws_api_stage: AWS API Gateway deployment stage name.
        :param pulumi.Input[str] aws_domain: AWS domain.
        :param pulumi.Input[str] aws_region: AWS region.
        :param pulumi.Input[str] azure_api_key: Azure function API key.
        :param pulumi.Input[str] azure_app: Azure function application name.
        :param pulumi.Input[str] azure_domain: Azure function domain.
        :param pulumi.Input[str] azure_function: Azure function name.
        :param pulumi.Input[str] azure_function_authorization: Azure function authorization level. Valid values: `anonymous`, `function`, `admin`.
        :param pulumi.Input[int] delay: Delay before execution (in seconds).
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] email_body: Email body.
        :param pulumi.Input[str] email_from: Email sender name.
        :param pulumi.Input[str] email_subject: Email subject.
        :param pulumi.Input[Sequence[pulumi.Input['AutomationactionEmailToArgs']]] email_tos: Email addresses. The structure of `email_to` block is documented below.
        :param pulumi.Input[str] execute_security_fabric: Enable/disable execution of CLI script on all or only one FortiGate unit in the Security Fabric. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] forticare_email: Enable/disable use of your FortiCare email address as the email-to address. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] gcp_function: Google Cloud function name.
        :param pulumi.Input[str] gcp_function_domain: Google Cloud function domain.
        :param pulumi.Input[str] gcp_function_region: Google Cloud function region.
        :param pulumi.Input[str] gcp_project: Google Cloud Platform project name.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[Sequence[pulumi.Input['AutomationactionHeaderArgs']]] headers: Request headers. The structure of `headers` block is documented below.
        :param pulumi.Input[str] http_body: Request body (if necessary). Should be serialized json string.
        :param pulumi.Input[Sequence[pulumi.Input['AutomationactionHttpHeaderArgs']]] http_headers: Request headers. The structure of `http_headers` block is documented below.
        :param pulumi.Input[str] message: Message content.
        :param pulumi.Input[str] message_type: Message type. Valid values: `text`, `json`.
        :param pulumi.Input[str] method: Request method (POST, PUT, GET, PATCH or DELETE). Valid values: `post`, `put`, `get`, `patch`, `delete`.
        :param pulumi.Input[int] minimum_interval: Limit execution to no more than once in this interval (in seconds).
        :param pulumi.Input[str] name: Name.
        :param pulumi.Input[int] output_size: Number of megabytes to limit script output to (1 - 1024, default = 10).
        :param pulumi.Input[int] port: Protocol port.
        :param pulumi.Input[str] protocol: Request protocol. Valid values: `http`, `https`.
        :param pulumi.Input[str] replacement_message: Enable/disable replacement message. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] replacemsg_group: Replacement message group.
        :param pulumi.Input[str] required: Required in action chain. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] script: CLI script.
        :param pulumi.Input[Sequence[pulumi.Input['AutomationactionSdnConnectorArgs']]] sdn_connectors: NSX SDN connector names. The structure of `sdn_connector` block is documented below.
        :param pulumi.Input[str] security_tag: NSX security tag.
        :param pulumi.Input[str] system_action: System action type. Valid values: `reboot`, `shutdown`, `backup-config`.
        :param pulumi.Input[int] timeout: Maximum running time for this script in seconds (0 = no timeout).
        :param pulumi.Input[str] tls_certificate: Custom TLS certificate for API request.
        :param pulumi.Input[str] uri: Request API URI.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] verify_host_cert: Enable/disable verification of the remote host certificate. Valid values: `enable`, `disable`.
        """
        if accprofile is not None:
            pulumi.set(__self__, "accprofile", accprofile)
        if action_type is not None:
            pulumi.set(__self__, "action_type", action_type)
        if alicloud_access_key_id is not None:
            pulumi.set(__self__, "alicloud_access_key_id", alicloud_access_key_id)
        if alicloud_access_key_secret is not None:
            pulumi.set(__self__, "alicloud_access_key_secret", alicloud_access_key_secret)
        if alicloud_account_id is not None:
            pulumi.set(__self__, "alicloud_account_id", alicloud_account_id)
        if alicloud_function is not None:
            pulumi.set(__self__, "alicloud_function", alicloud_function)
        if alicloud_function_authorization is not None:
            pulumi.set(__self__, "alicloud_function_authorization", alicloud_function_authorization)
        if alicloud_function_domain is not None:
            pulumi.set(__self__, "alicloud_function_domain", alicloud_function_domain)
        if alicloud_region is not None:
            pulumi.set(__self__, "alicloud_region", alicloud_region)
        if alicloud_service is not None:
            pulumi.set(__self__, "alicloud_service", alicloud_service)
        if alicloud_version is not None:
            pulumi.set(__self__, "alicloud_version", alicloud_version)
        if aws_api_id is not None:
            pulumi.set(__self__, "aws_api_id", aws_api_id)
        if aws_api_key is not None:
            pulumi.set(__self__, "aws_api_key", aws_api_key)
        if aws_api_path is not None:
            pulumi.set(__self__, "aws_api_path", aws_api_path)
        if aws_api_stage is not None:
            pulumi.set(__self__, "aws_api_stage", aws_api_stage)
        if aws_domain is not None:
            pulumi.set(__self__, "aws_domain", aws_domain)
        if aws_region is not None:
            pulumi.set(__self__, "aws_region", aws_region)
        if azure_api_key is not None:
            pulumi.set(__self__, "azure_api_key", azure_api_key)
        if azure_app is not None:
            pulumi.set(__self__, "azure_app", azure_app)
        if azure_domain is not None:
            pulumi.set(__self__, "azure_domain", azure_domain)
        if azure_function is not None:
            pulumi.set(__self__, "azure_function", azure_function)
        if azure_function_authorization is not None:
            pulumi.set(__self__, "azure_function_authorization", azure_function_authorization)
        if delay is not None:
            pulumi.set(__self__, "delay", delay)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if email_body is not None:
            pulumi.set(__self__, "email_body", email_body)
        if email_from is not None:
            pulumi.set(__self__, "email_from", email_from)
        if email_subject is not None:
            pulumi.set(__self__, "email_subject", email_subject)
        if email_tos is not None:
            pulumi.set(__self__, "email_tos", email_tos)
        if execute_security_fabric is not None:
            pulumi.set(__self__, "execute_security_fabric", execute_security_fabric)
        if forticare_email is not None:
            pulumi.set(__self__, "forticare_email", forticare_email)
        if gcp_function is not None:
            pulumi.set(__self__, "gcp_function", gcp_function)
        if gcp_function_domain is not None:
            pulumi.set(__self__, "gcp_function_domain", gcp_function_domain)
        if gcp_function_region is not None:
            pulumi.set(__self__, "gcp_function_region", gcp_function_region)
        if gcp_project is not None:
            pulumi.set(__self__, "gcp_project", gcp_project)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if headers is not None:
            pulumi.set(__self__, "headers", headers)
        if http_body is not None:
            pulumi.set(__self__, "http_body", http_body)
        if http_headers is not None:
            pulumi.set(__self__, "http_headers", http_headers)
        if message is not None:
            pulumi.set(__self__, "message", message)
        if message_type is not None:
            pulumi.set(__self__, "message_type", message_type)
        if method is not None:
            pulumi.set(__self__, "method", method)
        if minimum_interval is not None:
            pulumi.set(__self__, "minimum_interval", minimum_interval)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if output_size is not None:
            pulumi.set(__self__, "output_size", output_size)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)
        if replacement_message is not None:
            pulumi.set(__self__, "replacement_message", replacement_message)
        if replacemsg_group is not None:
            pulumi.set(__self__, "replacemsg_group", replacemsg_group)
        if required is not None:
            pulumi.set(__self__, "required", required)
        if script is not None:
            pulumi.set(__self__, "script", script)
        if sdn_connectors is not None:
            pulumi.set(__self__, "sdn_connectors", sdn_connectors)
        if security_tag is not None:
            pulumi.set(__self__, "security_tag", security_tag)
        if system_action is not None:
            pulumi.set(__self__, "system_action", system_action)
        if timeout is not None:
            pulumi.set(__self__, "timeout", timeout)
        if tls_certificate is not None:
            pulumi.set(__self__, "tls_certificate", tls_certificate)
        if uri is not None:
            pulumi.set(__self__, "uri", uri)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if verify_host_cert is not None:
            pulumi.set(__self__, "verify_host_cert", verify_host_cert)

    @property
    @pulumi.getter
    def accprofile(self) -> Optional[pulumi.Input[str]]:
        """
        Access profile for CLI script action to access FortiGate features.
        """
        return pulumi.get(self, "accprofile")

    @accprofile.setter
    def accprofile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "accprofile", value)

    @property
    @pulumi.getter(name="actionType")
    def action_type(self) -> Optional[pulumi.Input[str]]:
        """
        Action type.
        """
        return pulumi.get(self, "action_type")

    @action_type.setter
    def action_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "action_type", value)

    @property
    @pulumi.getter(name="alicloudAccessKeyId")
    def alicloud_access_key_id(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud AccessKey ID.
        """
        return pulumi.get(self, "alicloud_access_key_id")

    @alicloud_access_key_id.setter
    def alicloud_access_key_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_access_key_id", value)

    @property
    @pulumi.getter(name="alicloudAccessKeySecret")
    def alicloud_access_key_secret(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud AccessKey secret.
        """
        return pulumi.get(self, "alicloud_access_key_secret")

    @alicloud_access_key_secret.setter
    def alicloud_access_key_secret(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_access_key_secret", value)

    @property
    @pulumi.getter(name="alicloudAccountId")
    def alicloud_account_id(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud account ID.
        """
        return pulumi.get(self, "alicloud_account_id")

    @alicloud_account_id.setter
    def alicloud_account_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_account_id", value)

    @property
    @pulumi.getter(name="alicloudFunction")
    def alicloud_function(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud function name.
        """
        return pulumi.get(self, "alicloud_function")

    @alicloud_function.setter
    def alicloud_function(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_function", value)

    @property
    @pulumi.getter(name="alicloudFunctionAuthorization")
    def alicloud_function_authorization(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud function authorization type. Valid values: `anonymous`, `function`.
        """
        return pulumi.get(self, "alicloud_function_authorization")

    @alicloud_function_authorization.setter
    def alicloud_function_authorization(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_function_authorization", value)

    @property
    @pulumi.getter(name="alicloudFunctionDomain")
    def alicloud_function_domain(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud function domain.
        """
        return pulumi.get(self, "alicloud_function_domain")

    @alicloud_function_domain.setter
    def alicloud_function_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_function_domain", value)

    @property
    @pulumi.getter(name="alicloudRegion")
    def alicloud_region(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud region.
        """
        return pulumi.get(self, "alicloud_region")

    @alicloud_region.setter
    def alicloud_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_region", value)

    @property
    @pulumi.getter(name="alicloudService")
    def alicloud_service(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud service name.
        """
        return pulumi.get(self, "alicloud_service")

    @alicloud_service.setter
    def alicloud_service(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_service", value)

    @property
    @pulumi.getter(name="alicloudVersion")
    def alicloud_version(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud version.
        """
        return pulumi.get(self, "alicloud_version")

    @alicloud_version.setter
    def alicloud_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_version", value)

    @property
    @pulumi.getter(name="awsApiId")
    def aws_api_id(self) -> Optional[pulumi.Input[str]]:
        """
        AWS API Gateway ID.
        """
        return pulumi.get(self, "aws_api_id")

    @aws_api_id.setter
    def aws_api_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_api_id", value)

    @property
    @pulumi.getter(name="awsApiKey")
    def aws_api_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS API Gateway API key.
        """
        return pulumi.get(self, "aws_api_key")

    @aws_api_key.setter
    def aws_api_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_api_key", value)

    @property
    @pulumi.getter(name="awsApiPath")
    def aws_api_path(self) -> Optional[pulumi.Input[str]]:
        """
        AWS API Gateway path.
        """
        return pulumi.get(self, "aws_api_path")

    @aws_api_path.setter
    def aws_api_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_api_path", value)

    @property
    @pulumi.getter(name="awsApiStage")
    def aws_api_stage(self) -> Optional[pulumi.Input[str]]:
        """
        AWS API Gateway deployment stage name.
        """
        return pulumi.get(self, "aws_api_stage")

    @aws_api_stage.setter
    def aws_api_stage(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_api_stage", value)

    @property
    @pulumi.getter(name="awsDomain")
    def aws_domain(self) -> Optional[pulumi.Input[str]]:
        """
        AWS domain.
        """
        return pulumi.get(self, "aws_domain")

    @aws_domain.setter
    def aws_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_domain", value)

    @property
    @pulumi.getter(name="awsRegion")
    def aws_region(self) -> Optional[pulumi.Input[str]]:
        """
        AWS region.
        """
        return pulumi.get(self, "aws_region")

    @aws_region.setter
    def aws_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_region", value)

    @property
    @pulumi.getter(name="azureApiKey")
    def azure_api_key(self) -> Optional[pulumi.Input[str]]:
        """
        Azure function API key.
        """
        return pulumi.get(self, "azure_api_key")

    @azure_api_key.setter
    def azure_api_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azure_api_key", value)

    @property
    @pulumi.getter(name="azureApp")
    def azure_app(self) -> Optional[pulumi.Input[str]]:
        """
        Azure function application name.
        """
        return pulumi.get(self, "azure_app")

    @azure_app.setter
    def azure_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azure_app", value)

    @property
    @pulumi.getter(name="azureDomain")
    def azure_domain(self) -> Optional[pulumi.Input[str]]:
        """
        Azure function domain.
        """
        return pulumi.get(self, "azure_domain")

    @azure_domain.setter
    def azure_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azure_domain", value)

    @property
    @pulumi.getter(name="azureFunction")
    def azure_function(self) -> Optional[pulumi.Input[str]]:
        """
        Azure function name.
        """
        return pulumi.get(self, "azure_function")

    @azure_function.setter
    def azure_function(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azure_function", value)

    @property
    @pulumi.getter(name="azureFunctionAuthorization")
    def azure_function_authorization(self) -> Optional[pulumi.Input[str]]:
        """
        Azure function authorization level. Valid values: `anonymous`, `function`, `admin`.
        """
        return pulumi.get(self, "azure_function_authorization")

    @azure_function_authorization.setter
    def azure_function_authorization(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azure_function_authorization", value)

    @property
    @pulumi.getter
    def delay(self) -> Optional[pulumi.Input[int]]:
        """
        Delay before execution (in seconds).
        """
        return pulumi.get(self, "delay")

    @delay.setter
    def delay(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "delay", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="emailBody")
    def email_body(self) -> Optional[pulumi.Input[str]]:
        """
        Email body.
        """
        return pulumi.get(self, "email_body")

    @email_body.setter
    def email_body(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "email_body", value)

    @property
    @pulumi.getter(name="emailFrom")
    def email_from(self) -> Optional[pulumi.Input[str]]:
        """
        Email sender name.
        """
        return pulumi.get(self, "email_from")

    @email_from.setter
    def email_from(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "email_from", value)

    @property
    @pulumi.getter(name="emailSubject")
    def email_subject(self) -> Optional[pulumi.Input[str]]:
        """
        Email subject.
        """
        return pulumi.get(self, "email_subject")

    @email_subject.setter
    def email_subject(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "email_subject", value)

    @property
    @pulumi.getter(name="emailTos")
    def email_tos(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionEmailToArgs']]]]:
        """
        Email addresses. The structure of `email_to` block is documented below.
        """
        return pulumi.get(self, "email_tos")

    @email_tos.setter
    def email_tos(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionEmailToArgs']]]]):
        pulumi.set(self, "email_tos", value)

    @property
    @pulumi.getter(name="executeSecurityFabric")
    def execute_security_fabric(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable execution of CLI script on all or only one FortiGate unit in the Security Fabric. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "execute_security_fabric")

    @execute_security_fabric.setter
    def execute_security_fabric(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "execute_security_fabric", value)

    @property
    @pulumi.getter(name="forticareEmail")
    def forticare_email(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable use of your FortiCare email address as the email-to address. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "forticare_email")

    @forticare_email.setter
    def forticare_email(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "forticare_email", value)

    @property
    @pulumi.getter(name="gcpFunction")
    def gcp_function(self) -> Optional[pulumi.Input[str]]:
        """
        Google Cloud function name.
        """
        return pulumi.get(self, "gcp_function")

    @gcp_function.setter
    def gcp_function(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcp_function", value)

    @property
    @pulumi.getter(name="gcpFunctionDomain")
    def gcp_function_domain(self) -> Optional[pulumi.Input[str]]:
        """
        Google Cloud function domain.
        """
        return pulumi.get(self, "gcp_function_domain")

    @gcp_function_domain.setter
    def gcp_function_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcp_function_domain", value)

    @property
    @pulumi.getter(name="gcpFunctionRegion")
    def gcp_function_region(self) -> Optional[pulumi.Input[str]]:
        """
        Google Cloud function region.
        """
        return pulumi.get(self, "gcp_function_region")

    @gcp_function_region.setter
    def gcp_function_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcp_function_region", value)

    @property
    @pulumi.getter(name="gcpProject")
    def gcp_project(self) -> Optional[pulumi.Input[str]]:
        """
        Google Cloud Platform project name.
        """
        return pulumi.get(self, "gcp_project")

    @gcp_project.setter
    def gcp_project(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcp_project", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter
    def headers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHeaderArgs']]]]:
        """
        Request headers. The structure of `headers` block is documented below.
        """
        return pulumi.get(self, "headers")

    @headers.setter
    def headers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHeaderArgs']]]]):
        pulumi.set(self, "headers", value)

    @property
    @pulumi.getter(name="httpBody")
    def http_body(self) -> Optional[pulumi.Input[str]]:
        """
        Request body (if necessary). Should be serialized json string.
        """
        return pulumi.get(self, "http_body")

    @http_body.setter
    def http_body(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "http_body", value)

    @property
    @pulumi.getter(name="httpHeaders")
    def http_headers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHttpHeaderArgs']]]]:
        """
        Request headers. The structure of `http_headers` block is documented below.
        """
        return pulumi.get(self, "http_headers")

    @http_headers.setter
    def http_headers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHttpHeaderArgs']]]]):
        pulumi.set(self, "http_headers", value)

    @property
    @pulumi.getter
    def message(self) -> Optional[pulumi.Input[str]]:
        """
        Message content.
        """
        return pulumi.get(self, "message")

    @message.setter
    def message(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "message", value)

    @property
    @pulumi.getter(name="messageType")
    def message_type(self) -> Optional[pulumi.Input[str]]:
        """
        Message type. Valid values: `text`, `json`.
        """
        return pulumi.get(self, "message_type")

    @message_type.setter
    def message_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "message_type", value)

    @property
    @pulumi.getter
    def method(self) -> Optional[pulumi.Input[str]]:
        """
        Request method (POST, PUT, GET, PATCH or DELETE). Valid values: `post`, `put`, `get`, `patch`, `delete`.
        """
        return pulumi.get(self, "method")

    @method.setter
    def method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "method", value)

    @property
    @pulumi.getter(name="minimumInterval")
    def minimum_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Limit execution to no more than once in this interval (in seconds).
        """
        return pulumi.get(self, "minimum_interval")

    @minimum_interval.setter
    def minimum_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "minimum_interval", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="outputSize")
    def output_size(self) -> Optional[pulumi.Input[int]]:
        """
        Number of megabytes to limit script output to (1 - 1024, default = 10).
        """
        return pulumi.get(self, "output_size")

    @output_size.setter
    def output_size(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "output_size", value)

    @property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[int]]:
        """
        Protocol port.
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "port", value)

    @property
    @pulumi.getter
    def protocol(self) -> Optional[pulumi.Input[str]]:
        """
        Request protocol. Valid values: `http`, `https`.
        """
        return pulumi.get(self, "protocol")

    @protocol.setter
    def protocol(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "protocol", value)

    @property
    @pulumi.getter(name="replacementMessage")
    def replacement_message(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable replacement message. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "replacement_message")

    @replacement_message.setter
    def replacement_message(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "replacement_message", value)

    @property
    @pulumi.getter(name="replacemsgGroup")
    def replacemsg_group(self) -> Optional[pulumi.Input[str]]:
        """
        Replacement message group.
        """
        return pulumi.get(self, "replacemsg_group")

    @replacemsg_group.setter
    def replacemsg_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "replacemsg_group", value)

    @property
    @pulumi.getter
    def required(self) -> Optional[pulumi.Input[str]]:
        """
        Required in action chain. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "required")

    @required.setter
    def required(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "required", value)

    @property
    @pulumi.getter
    def script(self) -> Optional[pulumi.Input[str]]:
        """
        CLI script.
        """
        return pulumi.get(self, "script")

    @script.setter
    def script(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "script", value)

    @property
    @pulumi.getter(name="sdnConnectors")
    def sdn_connectors(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionSdnConnectorArgs']]]]:
        """
        NSX SDN connector names. The structure of `sdn_connector` block is documented below.
        """
        return pulumi.get(self, "sdn_connectors")

    @sdn_connectors.setter
    def sdn_connectors(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionSdnConnectorArgs']]]]):
        pulumi.set(self, "sdn_connectors", value)

    @property
    @pulumi.getter(name="securityTag")
    def security_tag(self) -> Optional[pulumi.Input[str]]:
        """
        NSX security tag.
        """
        return pulumi.get(self, "security_tag")

    @security_tag.setter
    def security_tag(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "security_tag", value)

    @property
    @pulumi.getter(name="systemAction")
    def system_action(self) -> Optional[pulumi.Input[str]]:
        """
        System action type. Valid values: `reboot`, `shutdown`, `backup-config`.
        """
        return pulumi.get(self, "system_action")

    @system_action.setter
    def system_action(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "system_action", value)

    @property
    @pulumi.getter
    def timeout(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum running time for this script in seconds (0 = no timeout).
        """
        return pulumi.get(self, "timeout")

    @timeout.setter
    def timeout(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "timeout", value)

    @property
    @pulumi.getter(name="tlsCertificate")
    def tls_certificate(self) -> Optional[pulumi.Input[str]]:
        """
        Custom TLS certificate for API request.
        """
        return pulumi.get(self, "tls_certificate")

    @tls_certificate.setter
    def tls_certificate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tls_certificate", value)

    @property
    @pulumi.getter
    def uri(self) -> Optional[pulumi.Input[str]]:
        """
        Request API URI.
        """
        return pulumi.get(self, "uri")

    @uri.setter
    def uri(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uri", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="verifyHostCert")
    def verify_host_cert(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable verification of the remote host certificate. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "verify_host_cert")

    @verify_host_cert.setter
    def verify_host_cert(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "verify_host_cert", value)


@pulumi.input_type
class _AutomationactionState:
    def __init__(__self__, *,
                 accprofile: Optional[pulumi.Input[str]] = None,
                 action_type: Optional[pulumi.Input[str]] = None,
                 alicloud_access_key_id: Optional[pulumi.Input[str]] = None,
                 alicloud_access_key_secret: Optional[pulumi.Input[str]] = None,
                 alicloud_account_id: Optional[pulumi.Input[str]] = None,
                 alicloud_function: Optional[pulumi.Input[str]] = None,
                 alicloud_function_authorization: Optional[pulumi.Input[str]] = None,
                 alicloud_function_domain: Optional[pulumi.Input[str]] = None,
                 alicloud_region: Optional[pulumi.Input[str]] = None,
                 alicloud_service: Optional[pulumi.Input[str]] = None,
                 alicloud_version: Optional[pulumi.Input[str]] = None,
                 aws_api_id: Optional[pulumi.Input[str]] = None,
                 aws_api_key: Optional[pulumi.Input[str]] = None,
                 aws_api_path: Optional[pulumi.Input[str]] = None,
                 aws_api_stage: Optional[pulumi.Input[str]] = None,
                 aws_domain: Optional[pulumi.Input[str]] = None,
                 aws_region: Optional[pulumi.Input[str]] = None,
                 azure_api_key: Optional[pulumi.Input[str]] = None,
                 azure_app: Optional[pulumi.Input[str]] = None,
                 azure_domain: Optional[pulumi.Input[str]] = None,
                 azure_function: Optional[pulumi.Input[str]] = None,
                 azure_function_authorization: Optional[pulumi.Input[str]] = None,
                 delay: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 email_body: Optional[pulumi.Input[str]] = None,
                 email_from: Optional[pulumi.Input[str]] = None,
                 email_subject: Optional[pulumi.Input[str]] = None,
                 email_tos: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionEmailToArgs']]]] = None,
                 execute_security_fabric: Optional[pulumi.Input[str]] = None,
                 forticare_email: Optional[pulumi.Input[str]] = None,
                 gcp_function: Optional[pulumi.Input[str]] = None,
                 gcp_function_domain: Optional[pulumi.Input[str]] = None,
                 gcp_function_region: Optional[pulumi.Input[str]] = None,
                 gcp_project: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 headers: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHeaderArgs']]]] = None,
                 http_body: Optional[pulumi.Input[str]] = None,
                 http_headers: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHttpHeaderArgs']]]] = None,
                 message: Optional[pulumi.Input[str]] = None,
                 message_type: Optional[pulumi.Input[str]] = None,
                 method: Optional[pulumi.Input[str]] = None,
                 minimum_interval: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 output_size: Optional[pulumi.Input[int]] = None,
                 port: Optional[pulumi.Input[int]] = None,
                 protocol: Optional[pulumi.Input[str]] = None,
                 replacement_message: Optional[pulumi.Input[str]] = None,
                 replacemsg_group: Optional[pulumi.Input[str]] = None,
                 required: Optional[pulumi.Input[str]] = None,
                 script: Optional[pulumi.Input[str]] = None,
                 sdn_connectors: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionSdnConnectorArgs']]]] = None,
                 security_tag: Optional[pulumi.Input[str]] = None,
                 system_action: Optional[pulumi.Input[str]] = None,
                 timeout: Optional[pulumi.Input[int]] = None,
                 tls_certificate: Optional[pulumi.Input[str]] = None,
                 uri: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 verify_host_cert: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Automationaction resources.
        :param pulumi.Input[str] accprofile: Access profile for CLI script action to access FortiGate features.
        :param pulumi.Input[str] action_type: Action type.
        :param pulumi.Input[str] alicloud_access_key_id: AliCloud AccessKey ID.
        :param pulumi.Input[str] alicloud_access_key_secret: AliCloud AccessKey secret.
        :param pulumi.Input[str] alicloud_account_id: AliCloud account ID.
        :param pulumi.Input[str] alicloud_function: AliCloud function name.
        :param pulumi.Input[str] alicloud_function_authorization: AliCloud function authorization type. Valid values: `anonymous`, `function`.
        :param pulumi.Input[str] alicloud_function_domain: AliCloud function domain.
        :param pulumi.Input[str] alicloud_region: AliCloud region.
        :param pulumi.Input[str] alicloud_service: AliCloud service name.
        :param pulumi.Input[str] alicloud_version: AliCloud version.
        :param pulumi.Input[str] aws_api_id: AWS API Gateway ID.
        :param pulumi.Input[str] aws_api_key: AWS API Gateway API key.
        :param pulumi.Input[str] aws_api_path: AWS API Gateway path.
        :param pulumi.Input[str] aws_api_stage: AWS API Gateway deployment stage name.
        :param pulumi.Input[str] aws_domain: AWS domain.
        :param pulumi.Input[str] aws_region: AWS region.
        :param pulumi.Input[str] azure_api_key: Azure function API key.
        :param pulumi.Input[str] azure_app: Azure function application name.
        :param pulumi.Input[str] azure_domain: Azure function domain.
        :param pulumi.Input[str] azure_function: Azure function name.
        :param pulumi.Input[str] azure_function_authorization: Azure function authorization level. Valid values: `anonymous`, `function`, `admin`.
        :param pulumi.Input[int] delay: Delay before execution (in seconds).
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] email_body: Email body.
        :param pulumi.Input[str] email_from: Email sender name.
        :param pulumi.Input[str] email_subject: Email subject.
        :param pulumi.Input[Sequence[pulumi.Input['AutomationactionEmailToArgs']]] email_tos: Email addresses. The structure of `email_to` block is documented below.
        :param pulumi.Input[str] execute_security_fabric: Enable/disable execution of CLI script on all or only one FortiGate unit in the Security Fabric. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] forticare_email: Enable/disable use of your FortiCare email address as the email-to address. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] gcp_function: Google Cloud function name.
        :param pulumi.Input[str] gcp_function_domain: Google Cloud function domain.
        :param pulumi.Input[str] gcp_function_region: Google Cloud function region.
        :param pulumi.Input[str] gcp_project: Google Cloud Platform project name.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[Sequence[pulumi.Input['AutomationactionHeaderArgs']]] headers: Request headers. The structure of `headers` block is documented below.
        :param pulumi.Input[str] http_body: Request body (if necessary). Should be serialized json string.
        :param pulumi.Input[Sequence[pulumi.Input['AutomationactionHttpHeaderArgs']]] http_headers: Request headers. The structure of `http_headers` block is documented below.
        :param pulumi.Input[str] message: Message content.
        :param pulumi.Input[str] message_type: Message type. Valid values: `text`, `json`.
        :param pulumi.Input[str] method: Request method (POST, PUT, GET, PATCH or DELETE). Valid values: `post`, `put`, `get`, `patch`, `delete`.
        :param pulumi.Input[int] minimum_interval: Limit execution to no more than once in this interval (in seconds).
        :param pulumi.Input[str] name: Name.
        :param pulumi.Input[int] output_size: Number of megabytes to limit script output to (1 - 1024, default = 10).
        :param pulumi.Input[int] port: Protocol port.
        :param pulumi.Input[str] protocol: Request protocol. Valid values: `http`, `https`.
        :param pulumi.Input[str] replacement_message: Enable/disable replacement message. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] replacemsg_group: Replacement message group.
        :param pulumi.Input[str] required: Required in action chain. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] script: CLI script.
        :param pulumi.Input[Sequence[pulumi.Input['AutomationactionSdnConnectorArgs']]] sdn_connectors: NSX SDN connector names. The structure of `sdn_connector` block is documented below.
        :param pulumi.Input[str] security_tag: NSX security tag.
        :param pulumi.Input[str] system_action: System action type. Valid values: `reboot`, `shutdown`, `backup-config`.
        :param pulumi.Input[int] timeout: Maximum running time for this script in seconds (0 = no timeout).
        :param pulumi.Input[str] tls_certificate: Custom TLS certificate for API request.
        :param pulumi.Input[str] uri: Request API URI.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] verify_host_cert: Enable/disable verification of the remote host certificate. Valid values: `enable`, `disable`.
        """
        if accprofile is not None:
            pulumi.set(__self__, "accprofile", accprofile)
        if action_type is not None:
            pulumi.set(__self__, "action_type", action_type)
        if alicloud_access_key_id is not None:
            pulumi.set(__self__, "alicloud_access_key_id", alicloud_access_key_id)
        if alicloud_access_key_secret is not None:
            pulumi.set(__self__, "alicloud_access_key_secret", alicloud_access_key_secret)
        if alicloud_account_id is not None:
            pulumi.set(__self__, "alicloud_account_id", alicloud_account_id)
        if alicloud_function is not None:
            pulumi.set(__self__, "alicloud_function", alicloud_function)
        if alicloud_function_authorization is not None:
            pulumi.set(__self__, "alicloud_function_authorization", alicloud_function_authorization)
        if alicloud_function_domain is not None:
            pulumi.set(__self__, "alicloud_function_domain", alicloud_function_domain)
        if alicloud_region is not None:
            pulumi.set(__self__, "alicloud_region", alicloud_region)
        if alicloud_service is not None:
            pulumi.set(__self__, "alicloud_service", alicloud_service)
        if alicloud_version is not None:
            pulumi.set(__self__, "alicloud_version", alicloud_version)
        if aws_api_id is not None:
            pulumi.set(__self__, "aws_api_id", aws_api_id)
        if aws_api_key is not None:
            pulumi.set(__self__, "aws_api_key", aws_api_key)
        if aws_api_path is not None:
            pulumi.set(__self__, "aws_api_path", aws_api_path)
        if aws_api_stage is not None:
            pulumi.set(__self__, "aws_api_stage", aws_api_stage)
        if aws_domain is not None:
            pulumi.set(__self__, "aws_domain", aws_domain)
        if aws_region is not None:
            pulumi.set(__self__, "aws_region", aws_region)
        if azure_api_key is not None:
            pulumi.set(__self__, "azure_api_key", azure_api_key)
        if azure_app is not None:
            pulumi.set(__self__, "azure_app", azure_app)
        if azure_domain is not None:
            pulumi.set(__self__, "azure_domain", azure_domain)
        if azure_function is not None:
            pulumi.set(__self__, "azure_function", azure_function)
        if azure_function_authorization is not None:
            pulumi.set(__self__, "azure_function_authorization", azure_function_authorization)
        if delay is not None:
            pulumi.set(__self__, "delay", delay)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if email_body is not None:
            pulumi.set(__self__, "email_body", email_body)
        if email_from is not None:
            pulumi.set(__self__, "email_from", email_from)
        if email_subject is not None:
            pulumi.set(__self__, "email_subject", email_subject)
        if email_tos is not None:
            pulumi.set(__self__, "email_tos", email_tos)
        if execute_security_fabric is not None:
            pulumi.set(__self__, "execute_security_fabric", execute_security_fabric)
        if forticare_email is not None:
            pulumi.set(__self__, "forticare_email", forticare_email)
        if gcp_function is not None:
            pulumi.set(__self__, "gcp_function", gcp_function)
        if gcp_function_domain is not None:
            pulumi.set(__self__, "gcp_function_domain", gcp_function_domain)
        if gcp_function_region is not None:
            pulumi.set(__self__, "gcp_function_region", gcp_function_region)
        if gcp_project is not None:
            pulumi.set(__self__, "gcp_project", gcp_project)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if headers is not None:
            pulumi.set(__self__, "headers", headers)
        if http_body is not None:
            pulumi.set(__self__, "http_body", http_body)
        if http_headers is not None:
            pulumi.set(__self__, "http_headers", http_headers)
        if message is not None:
            pulumi.set(__self__, "message", message)
        if message_type is not None:
            pulumi.set(__self__, "message_type", message_type)
        if method is not None:
            pulumi.set(__self__, "method", method)
        if minimum_interval is not None:
            pulumi.set(__self__, "minimum_interval", minimum_interval)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if output_size is not None:
            pulumi.set(__self__, "output_size", output_size)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)
        if replacement_message is not None:
            pulumi.set(__self__, "replacement_message", replacement_message)
        if replacemsg_group is not None:
            pulumi.set(__self__, "replacemsg_group", replacemsg_group)
        if required is not None:
            pulumi.set(__self__, "required", required)
        if script is not None:
            pulumi.set(__self__, "script", script)
        if sdn_connectors is not None:
            pulumi.set(__self__, "sdn_connectors", sdn_connectors)
        if security_tag is not None:
            pulumi.set(__self__, "security_tag", security_tag)
        if system_action is not None:
            pulumi.set(__self__, "system_action", system_action)
        if timeout is not None:
            pulumi.set(__self__, "timeout", timeout)
        if tls_certificate is not None:
            pulumi.set(__self__, "tls_certificate", tls_certificate)
        if uri is not None:
            pulumi.set(__self__, "uri", uri)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if verify_host_cert is not None:
            pulumi.set(__self__, "verify_host_cert", verify_host_cert)

    @property
    @pulumi.getter
    def accprofile(self) -> Optional[pulumi.Input[str]]:
        """
        Access profile for CLI script action to access FortiGate features.
        """
        return pulumi.get(self, "accprofile")

    @accprofile.setter
    def accprofile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "accprofile", value)

    @property
    @pulumi.getter(name="actionType")
    def action_type(self) -> Optional[pulumi.Input[str]]:
        """
        Action type.
        """
        return pulumi.get(self, "action_type")

    @action_type.setter
    def action_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "action_type", value)

    @property
    @pulumi.getter(name="alicloudAccessKeyId")
    def alicloud_access_key_id(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud AccessKey ID.
        """
        return pulumi.get(self, "alicloud_access_key_id")

    @alicloud_access_key_id.setter
    def alicloud_access_key_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_access_key_id", value)

    @property
    @pulumi.getter(name="alicloudAccessKeySecret")
    def alicloud_access_key_secret(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud AccessKey secret.
        """
        return pulumi.get(self, "alicloud_access_key_secret")

    @alicloud_access_key_secret.setter
    def alicloud_access_key_secret(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_access_key_secret", value)

    @property
    @pulumi.getter(name="alicloudAccountId")
    def alicloud_account_id(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud account ID.
        """
        return pulumi.get(self, "alicloud_account_id")

    @alicloud_account_id.setter
    def alicloud_account_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_account_id", value)

    @property
    @pulumi.getter(name="alicloudFunction")
    def alicloud_function(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud function name.
        """
        return pulumi.get(self, "alicloud_function")

    @alicloud_function.setter
    def alicloud_function(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_function", value)

    @property
    @pulumi.getter(name="alicloudFunctionAuthorization")
    def alicloud_function_authorization(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud function authorization type. Valid values: `anonymous`, `function`.
        """
        return pulumi.get(self, "alicloud_function_authorization")

    @alicloud_function_authorization.setter
    def alicloud_function_authorization(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_function_authorization", value)

    @property
    @pulumi.getter(name="alicloudFunctionDomain")
    def alicloud_function_domain(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud function domain.
        """
        return pulumi.get(self, "alicloud_function_domain")

    @alicloud_function_domain.setter
    def alicloud_function_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_function_domain", value)

    @property
    @pulumi.getter(name="alicloudRegion")
    def alicloud_region(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud region.
        """
        return pulumi.get(self, "alicloud_region")

    @alicloud_region.setter
    def alicloud_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_region", value)

    @property
    @pulumi.getter(name="alicloudService")
    def alicloud_service(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud service name.
        """
        return pulumi.get(self, "alicloud_service")

    @alicloud_service.setter
    def alicloud_service(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_service", value)

    @property
    @pulumi.getter(name="alicloudVersion")
    def alicloud_version(self) -> Optional[pulumi.Input[str]]:
        """
        AliCloud version.
        """
        return pulumi.get(self, "alicloud_version")

    @alicloud_version.setter
    def alicloud_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_version", value)

    @property
    @pulumi.getter(name="awsApiId")
    def aws_api_id(self) -> Optional[pulumi.Input[str]]:
        """
        AWS API Gateway ID.
        """
        return pulumi.get(self, "aws_api_id")

    @aws_api_id.setter
    def aws_api_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_api_id", value)

    @property
    @pulumi.getter(name="awsApiKey")
    def aws_api_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS API Gateway API key.
        """
        return pulumi.get(self, "aws_api_key")

    @aws_api_key.setter
    def aws_api_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_api_key", value)

    @property
    @pulumi.getter(name="awsApiPath")
    def aws_api_path(self) -> Optional[pulumi.Input[str]]:
        """
        AWS API Gateway path.
        """
        return pulumi.get(self, "aws_api_path")

    @aws_api_path.setter
    def aws_api_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_api_path", value)

    @property
    @pulumi.getter(name="awsApiStage")
    def aws_api_stage(self) -> Optional[pulumi.Input[str]]:
        """
        AWS API Gateway deployment stage name.
        """
        return pulumi.get(self, "aws_api_stage")

    @aws_api_stage.setter
    def aws_api_stage(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_api_stage", value)

    @property
    @pulumi.getter(name="awsDomain")
    def aws_domain(self) -> Optional[pulumi.Input[str]]:
        """
        AWS domain.
        """
        return pulumi.get(self, "aws_domain")

    @aws_domain.setter
    def aws_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_domain", value)

    @property
    @pulumi.getter(name="awsRegion")
    def aws_region(self) -> Optional[pulumi.Input[str]]:
        """
        AWS region.
        """
        return pulumi.get(self, "aws_region")

    @aws_region.setter
    def aws_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_region", value)

    @property
    @pulumi.getter(name="azureApiKey")
    def azure_api_key(self) -> Optional[pulumi.Input[str]]:
        """
        Azure function API key.
        """
        return pulumi.get(self, "azure_api_key")

    @azure_api_key.setter
    def azure_api_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azure_api_key", value)

    @property
    @pulumi.getter(name="azureApp")
    def azure_app(self) -> Optional[pulumi.Input[str]]:
        """
        Azure function application name.
        """
        return pulumi.get(self, "azure_app")

    @azure_app.setter
    def azure_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azure_app", value)

    @property
    @pulumi.getter(name="azureDomain")
    def azure_domain(self) -> Optional[pulumi.Input[str]]:
        """
        Azure function domain.
        """
        return pulumi.get(self, "azure_domain")

    @azure_domain.setter
    def azure_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azure_domain", value)

    @property
    @pulumi.getter(name="azureFunction")
    def azure_function(self) -> Optional[pulumi.Input[str]]:
        """
        Azure function name.
        """
        return pulumi.get(self, "azure_function")

    @azure_function.setter
    def azure_function(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azure_function", value)

    @property
    @pulumi.getter(name="azureFunctionAuthorization")
    def azure_function_authorization(self) -> Optional[pulumi.Input[str]]:
        """
        Azure function authorization level. Valid values: `anonymous`, `function`, `admin`.
        """
        return pulumi.get(self, "azure_function_authorization")

    @azure_function_authorization.setter
    def azure_function_authorization(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azure_function_authorization", value)

    @property
    @pulumi.getter
    def delay(self) -> Optional[pulumi.Input[int]]:
        """
        Delay before execution (in seconds).
        """
        return pulumi.get(self, "delay")

    @delay.setter
    def delay(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "delay", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="emailBody")
    def email_body(self) -> Optional[pulumi.Input[str]]:
        """
        Email body.
        """
        return pulumi.get(self, "email_body")

    @email_body.setter
    def email_body(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "email_body", value)

    @property
    @pulumi.getter(name="emailFrom")
    def email_from(self) -> Optional[pulumi.Input[str]]:
        """
        Email sender name.
        """
        return pulumi.get(self, "email_from")

    @email_from.setter
    def email_from(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "email_from", value)

    @property
    @pulumi.getter(name="emailSubject")
    def email_subject(self) -> Optional[pulumi.Input[str]]:
        """
        Email subject.
        """
        return pulumi.get(self, "email_subject")

    @email_subject.setter
    def email_subject(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "email_subject", value)

    @property
    @pulumi.getter(name="emailTos")
    def email_tos(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionEmailToArgs']]]]:
        """
        Email addresses. The structure of `email_to` block is documented below.
        """
        return pulumi.get(self, "email_tos")

    @email_tos.setter
    def email_tos(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionEmailToArgs']]]]):
        pulumi.set(self, "email_tos", value)

    @property
    @pulumi.getter(name="executeSecurityFabric")
    def execute_security_fabric(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable execution of CLI script on all or only one FortiGate unit in the Security Fabric. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "execute_security_fabric")

    @execute_security_fabric.setter
    def execute_security_fabric(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "execute_security_fabric", value)

    @property
    @pulumi.getter(name="forticareEmail")
    def forticare_email(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable use of your FortiCare email address as the email-to address. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "forticare_email")

    @forticare_email.setter
    def forticare_email(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "forticare_email", value)

    @property
    @pulumi.getter(name="gcpFunction")
    def gcp_function(self) -> Optional[pulumi.Input[str]]:
        """
        Google Cloud function name.
        """
        return pulumi.get(self, "gcp_function")

    @gcp_function.setter
    def gcp_function(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcp_function", value)

    @property
    @pulumi.getter(name="gcpFunctionDomain")
    def gcp_function_domain(self) -> Optional[pulumi.Input[str]]:
        """
        Google Cloud function domain.
        """
        return pulumi.get(self, "gcp_function_domain")

    @gcp_function_domain.setter
    def gcp_function_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcp_function_domain", value)

    @property
    @pulumi.getter(name="gcpFunctionRegion")
    def gcp_function_region(self) -> Optional[pulumi.Input[str]]:
        """
        Google Cloud function region.
        """
        return pulumi.get(self, "gcp_function_region")

    @gcp_function_region.setter
    def gcp_function_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcp_function_region", value)

    @property
    @pulumi.getter(name="gcpProject")
    def gcp_project(self) -> Optional[pulumi.Input[str]]:
        """
        Google Cloud Platform project name.
        """
        return pulumi.get(self, "gcp_project")

    @gcp_project.setter
    def gcp_project(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcp_project", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter
    def headers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHeaderArgs']]]]:
        """
        Request headers. The structure of `headers` block is documented below.
        """
        return pulumi.get(self, "headers")

    @headers.setter
    def headers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHeaderArgs']]]]):
        pulumi.set(self, "headers", value)

    @property
    @pulumi.getter(name="httpBody")
    def http_body(self) -> Optional[pulumi.Input[str]]:
        """
        Request body (if necessary). Should be serialized json string.
        """
        return pulumi.get(self, "http_body")

    @http_body.setter
    def http_body(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "http_body", value)

    @property
    @pulumi.getter(name="httpHeaders")
    def http_headers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHttpHeaderArgs']]]]:
        """
        Request headers. The structure of `http_headers` block is documented below.
        """
        return pulumi.get(self, "http_headers")

    @http_headers.setter
    def http_headers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionHttpHeaderArgs']]]]):
        pulumi.set(self, "http_headers", value)

    @property
    @pulumi.getter
    def message(self) -> Optional[pulumi.Input[str]]:
        """
        Message content.
        """
        return pulumi.get(self, "message")

    @message.setter
    def message(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "message", value)

    @property
    @pulumi.getter(name="messageType")
    def message_type(self) -> Optional[pulumi.Input[str]]:
        """
        Message type. Valid values: `text`, `json`.
        """
        return pulumi.get(self, "message_type")

    @message_type.setter
    def message_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "message_type", value)

    @property
    @pulumi.getter
    def method(self) -> Optional[pulumi.Input[str]]:
        """
        Request method (POST, PUT, GET, PATCH or DELETE). Valid values: `post`, `put`, `get`, `patch`, `delete`.
        """
        return pulumi.get(self, "method")

    @method.setter
    def method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "method", value)

    @property
    @pulumi.getter(name="minimumInterval")
    def minimum_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Limit execution to no more than once in this interval (in seconds).
        """
        return pulumi.get(self, "minimum_interval")

    @minimum_interval.setter
    def minimum_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "minimum_interval", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="outputSize")
    def output_size(self) -> Optional[pulumi.Input[int]]:
        """
        Number of megabytes to limit script output to (1 - 1024, default = 10).
        """
        return pulumi.get(self, "output_size")

    @output_size.setter
    def output_size(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "output_size", value)

    @property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[int]]:
        """
        Protocol port.
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "port", value)

    @property
    @pulumi.getter
    def protocol(self) -> Optional[pulumi.Input[str]]:
        """
        Request protocol. Valid values: `http`, `https`.
        """
        return pulumi.get(self, "protocol")

    @protocol.setter
    def protocol(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "protocol", value)

    @property
    @pulumi.getter(name="replacementMessage")
    def replacement_message(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable replacement message. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "replacement_message")

    @replacement_message.setter
    def replacement_message(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "replacement_message", value)

    @property
    @pulumi.getter(name="replacemsgGroup")
    def replacemsg_group(self) -> Optional[pulumi.Input[str]]:
        """
        Replacement message group.
        """
        return pulumi.get(self, "replacemsg_group")

    @replacemsg_group.setter
    def replacemsg_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "replacemsg_group", value)

    @property
    @pulumi.getter
    def required(self) -> Optional[pulumi.Input[str]]:
        """
        Required in action chain. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "required")

    @required.setter
    def required(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "required", value)

    @property
    @pulumi.getter
    def script(self) -> Optional[pulumi.Input[str]]:
        """
        CLI script.
        """
        return pulumi.get(self, "script")

    @script.setter
    def script(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "script", value)

    @property
    @pulumi.getter(name="sdnConnectors")
    def sdn_connectors(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionSdnConnectorArgs']]]]:
        """
        NSX SDN connector names. The structure of `sdn_connector` block is documented below.
        """
        return pulumi.get(self, "sdn_connectors")

    @sdn_connectors.setter
    def sdn_connectors(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AutomationactionSdnConnectorArgs']]]]):
        pulumi.set(self, "sdn_connectors", value)

    @property
    @pulumi.getter(name="securityTag")
    def security_tag(self) -> Optional[pulumi.Input[str]]:
        """
        NSX security tag.
        """
        return pulumi.get(self, "security_tag")

    @security_tag.setter
    def security_tag(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "security_tag", value)

    @property
    @pulumi.getter(name="systemAction")
    def system_action(self) -> Optional[pulumi.Input[str]]:
        """
        System action type. Valid values: `reboot`, `shutdown`, `backup-config`.
        """
        return pulumi.get(self, "system_action")

    @system_action.setter
    def system_action(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "system_action", value)

    @property
    @pulumi.getter
    def timeout(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum running time for this script in seconds (0 = no timeout).
        """
        return pulumi.get(self, "timeout")

    @timeout.setter
    def timeout(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "timeout", value)

    @property
    @pulumi.getter(name="tlsCertificate")
    def tls_certificate(self) -> Optional[pulumi.Input[str]]:
        """
        Custom TLS certificate for API request.
        """
        return pulumi.get(self, "tls_certificate")

    @tls_certificate.setter
    def tls_certificate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tls_certificate", value)

    @property
    @pulumi.getter
    def uri(self) -> Optional[pulumi.Input[str]]:
        """
        Request API URI.
        """
        return pulumi.get(self, "uri")

    @uri.setter
    def uri(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uri", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="verifyHostCert")
    def verify_host_cert(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable verification of the remote host certificate. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "verify_host_cert")

    @verify_host_cert.setter
    def verify_host_cert(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "verify_host_cert", value)


class Automationaction(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 accprofile: Optional[pulumi.Input[str]] = None,
                 action_type: Optional[pulumi.Input[str]] = None,
                 alicloud_access_key_id: Optional[pulumi.Input[str]] = None,
                 alicloud_access_key_secret: Optional[pulumi.Input[str]] = None,
                 alicloud_account_id: Optional[pulumi.Input[str]] = None,
                 alicloud_function: Optional[pulumi.Input[str]] = None,
                 alicloud_function_authorization: Optional[pulumi.Input[str]] = None,
                 alicloud_function_domain: Optional[pulumi.Input[str]] = None,
                 alicloud_region: Optional[pulumi.Input[str]] = None,
                 alicloud_service: Optional[pulumi.Input[str]] = None,
                 alicloud_version: Optional[pulumi.Input[str]] = None,
                 aws_api_id: Optional[pulumi.Input[str]] = None,
                 aws_api_key: Optional[pulumi.Input[str]] = None,
                 aws_api_path: Optional[pulumi.Input[str]] = None,
                 aws_api_stage: Optional[pulumi.Input[str]] = None,
                 aws_domain: Optional[pulumi.Input[str]] = None,
                 aws_region: Optional[pulumi.Input[str]] = None,
                 azure_api_key: Optional[pulumi.Input[str]] = None,
                 azure_app: Optional[pulumi.Input[str]] = None,
                 azure_domain: Optional[pulumi.Input[str]] = None,
                 azure_function: Optional[pulumi.Input[str]] = None,
                 azure_function_authorization: Optional[pulumi.Input[str]] = None,
                 delay: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 email_body: Optional[pulumi.Input[str]] = None,
                 email_from: Optional[pulumi.Input[str]] = None,
                 email_subject: Optional[pulumi.Input[str]] = None,
                 email_tos: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionEmailToArgs']]]]] = None,
                 execute_security_fabric: Optional[pulumi.Input[str]] = None,
                 forticare_email: Optional[pulumi.Input[str]] = None,
                 gcp_function: Optional[pulumi.Input[str]] = None,
                 gcp_function_domain: Optional[pulumi.Input[str]] = None,
                 gcp_function_region: Optional[pulumi.Input[str]] = None,
                 gcp_project: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 headers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionHeaderArgs']]]]] = None,
                 http_body: Optional[pulumi.Input[str]] = None,
                 http_headers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionHttpHeaderArgs']]]]] = None,
                 message: Optional[pulumi.Input[str]] = None,
                 message_type: Optional[pulumi.Input[str]] = None,
                 method: Optional[pulumi.Input[str]] = None,
                 minimum_interval: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 output_size: Optional[pulumi.Input[int]] = None,
                 port: Optional[pulumi.Input[int]] = None,
                 protocol: Optional[pulumi.Input[str]] = None,
                 replacement_message: Optional[pulumi.Input[str]] = None,
                 replacemsg_group: Optional[pulumi.Input[str]] = None,
                 required: Optional[pulumi.Input[str]] = None,
                 script: Optional[pulumi.Input[str]] = None,
                 sdn_connectors: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionSdnConnectorArgs']]]]] = None,
                 security_tag: Optional[pulumi.Input[str]] = None,
                 system_action: Optional[pulumi.Input[str]] = None,
                 timeout: Optional[pulumi.Input[int]] = None,
                 tls_certificate: Optional[pulumi.Input[str]] = None,
                 uri: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 verify_host_cert: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Action for automation stitches.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.system.Automationaction("trname",
            action_type="email",
            aws_domain="amazonaws.com",
            delay=0,
            email_subject="SUBJECT1",
            method="post",
            minimum_interval=1,
            protocol="http",
            required="disable")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        System AutomationAction can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:system/automationaction:Automationaction labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:system/automationaction:Automationaction labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] accprofile: Access profile for CLI script action to access FortiGate features.
        :param pulumi.Input[str] action_type: Action type.
        :param pulumi.Input[str] alicloud_access_key_id: AliCloud AccessKey ID.
        :param pulumi.Input[str] alicloud_access_key_secret: AliCloud AccessKey secret.
        :param pulumi.Input[str] alicloud_account_id: AliCloud account ID.
        :param pulumi.Input[str] alicloud_function: AliCloud function name.
        :param pulumi.Input[str] alicloud_function_authorization: AliCloud function authorization type. Valid values: `anonymous`, `function`.
        :param pulumi.Input[str] alicloud_function_domain: AliCloud function domain.
        :param pulumi.Input[str] alicloud_region: AliCloud region.
        :param pulumi.Input[str] alicloud_service: AliCloud service name.
        :param pulumi.Input[str] alicloud_version: AliCloud version.
        :param pulumi.Input[str] aws_api_id: AWS API Gateway ID.
        :param pulumi.Input[str] aws_api_key: AWS API Gateway API key.
        :param pulumi.Input[str] aws_api_path: AWS API Gateway path.
        :param pulumi.Input[str] aws_api_stage: AWS API Gateway deployment stage name.
        :param pulumi.Input[str] aws_domain: AWS domain.
        :param pulumi.Input[str] aws_region: AWS region.
        :param pulumi.Input[str] azure_api_key: Azure function API key.
        :param pulumi.Input[str] azure_app: Azure function application name.
        :param pulumi.Input[str] azure_domain: Azure function domain.
        :param pulumi.Input[str] azure_function: Azure function name.
        :param pulumi.Input[str] azure_function_authorization: Azure function authorization level. Valid values: `anonymous`, `function`, `admin`.
        :param pulumi.Input[int] delay: Delay before execution (in seconds).
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] email_body: Email body.
        :param pulumi.Input[str] email_from: Email sender name.
        :param pulumi.Input[str] email_subject: Email subject.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionEmailToArgs']]]] email_tos: Email addresses. The structure of `email_to` block is documented below.
        :param pulumi.Input[str] execute_security_fabric: Enable/disable execution of CLI script on all or only one FortiGate unit in the Security Fabric. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] forticare_email: Enable/disable use of your FortiCare email address as the email-to address. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] gcp_function: Google Cloud function name.
        :param pulumi.Input[str] gcp_function_domain: Google Cloud function domain.
        :param pulumi.Input[str] gcp_function_region: Google Cloud function region.
        :param pulumi.Input[str] gcp_project: Google Cloud Platform project name.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionHeaderArgs']]]] headers: Request headers. The structure of `headers` block is documented below.
        :param pulumi.Input[str] http_body: Request body (if necessary). Should be serialized json string.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionHttpHeaderArgs']]]] http_headers: Request headers. The structure of `http_headers` block is documented below.
        :param pulumi.Input[str] message: Message content.
        :param pulumi.Input[str] message_type: Message type. Valid values: `text`, `json`.
        :param pulumi.Input[str] method: Request method (POST, PUT, GET, PATCH or DELETE). Valid values: `post`, `put`, `get`, `patch`, `delete`.
        :param pulumi.Input[int] minimum_interval: Limit execution to no more than once in this interval (in seconds).
        :param pulumi.Input[str] name: Name.
        :param pulumi.Input[int] output_size: Number of megabytes to limit script output to (1 - 1024, default = 10).
        :param pulumi.Input[int] port: Protocol port.
        :param pulumi.Input[str] protocol: Request protocol. Valid values: `http`, `https`.
        :param pulumi.Input[str] replacement_message: Enable/disable replacement message. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] replacemsg_group: Replacement message group.
        :param pulumi.Input[str] required: Required in action chain. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] script: CLI script.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionSdnConnectorArgs']]]] sdn_connectors: NSX SDN connector names. The structure of `sdn_connector` block is documented below.
        :param pulumi.Input[str] security_tag: NSX security tag.
        :param pulumi.Input[str] system_action: System action type. Valid values: `reboot`, `shutdown`, `backup-config`.
        :param pulumi.Input[int] timeout: Maximum running time for this script in seconds (0 = no timeout).
        :param pulumi.Input[str] tls_certificate: Custom TLS certificate for API request.
        :param pulumi.Input[str] uri: Request API URI.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] verify_host_cert: Enable/disable verification of the remote host certificate. Valid values: `enable`, `disable`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[AutomationactionArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Action for automation stitches.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.system.Automationaction("trname",
            action_type="email",
            aws_domain="amazonaws.com",
            delay=0,
            email_subject="SUBJECT1",
            method="post",
            minimum_interval=1,
            protocol="http",
            required="disable")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        System AutomationAction can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:system/automationaction:Automationaction labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:system/automationaction:Automationaction labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param AutomationactionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AutomationactionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 accprofile: Optional[pulumi.Input[str]] = None,
                 action_type: Optional[pulumi.Input[str]] = None,
                 alicloud_access_key_id: Optional[pulumi.Input[str]] = None,
                 alicloud_access_key_secret: Optional[pulumi.Input[str]] = None,
                 alicloud_account_id: Optional[pulumi.Input[str]] = None,
                 alicloud_function: Optional[pulumi.Input[str]] = None,
                 alicloud_function_authorization: Optional[pulumi.Input[str]] = None,
                 alicloud_function_domain: Optional[pulumi.Input[str]] = None,
                 alicloud_region: Optional[pulumi.Input[str]] = None,
                 alicloud_service: Optional[pulumi.Input[str]] = None,
                 alicloud_version: Optional[pulumi.Input[str]] = None,
                 aws_api_id: Optional[pulumi.Input[str]] = None,
                 aws_api_key: Optional[pulumi.Input[str]] = None,
                 aws_api_path: Optional[pulumi.Input[str]] = None,
                 aws_api_stage: Optional[pulumi.Input[str]] = None,
                 aws_domain: Optional[pulumi.Input[str]] = None,
                 aws_region: Optional[pulumi.Input[str]] = None,
                 azure_api_key: Optional[pulumi.Input[str]] = None,
                 azure_app: Optional[pulumi.Input[str]] = None,
                 azure_domain: Optional[pulumi.Input[str]] = None,
                 azure_function: Optional[pulumi.Input[str]] = None,
                 azure_function_authorization: Optional[pulumi.Input[str]] = None,
                 delay: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 email_body: Optional[pulumi.Input[str]] = None,
                 email_from: Optional[pulumi.Input[str]] = None,
                 email_subject: Optional[pulumi.Input[str]] = None,
                 email_tos: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionEmailToArgs']]]]] = None,
                 execute_security_fabric: Optional[pulumi.Input[str]] = None,
                 forticare_email: Optional[pulumi.Input[str]] = None,
                 gcp_function: Optional[pulumi.Input[str]] = None,
                 gcp_function_domain: Optional[pulumi.Input[str]] = None,
                 gcp_function_region: Optional[pulumi.Input[str]] = None,
                 gcp_project: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 headers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionHeaderArgs']]]]] = None,
                 http_body: Optional[pulumi.Input[str]] = None,
                 http_headers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionHttpHeaderArgs']]]]] = None,
                 message: Optional[pulumi.Input[str]] = None,
                 message_type: Optional[pulumi.Input[str]] = None,
                 method: Optional[pulumi.Input[str]] = None,
                 minimum_interval: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 output_size: Optional[pulumi.Input[int]] = None,
                 port: Optional[pulumi.Input[int]] = None,
                 protocol: Optional[pulumi.Input[str]] = None,
                 replacement_message: Optional[pulumi.Input[str]] = None,
                 replacemsg_group: Optional[pulumi.Input[str]] = None,
                 required: Optional[pulumi.Input[str]] = None,
                 script: Optional[pulumi.Input[str]] = None,
                 sdn_connectors: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionSdnConnectorArgs']]]]] = None,
                 security_tag: Optional[pulumi.Input[str]] = None,
                 system_action: Optional[pulumi.Input[str]] = None,
                 timeout: Optional[pulumi.Input[int]] = None,
                 tls_certificate: Optional[pulumi.Input[str]] = None,
                 uri: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 verify_host_cert: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AutomationactionArgs.__new__(AutomationactionArgs)

            __props__.__dict__["accprofile"] = accprofile
            __props__.__dict__["action_type"] = action_type
            __props__.__dict__["alicloud_access_key_id"] = alicloud_access_key_id
            __props__.__dict__["alicloud_access_key_secret"] = None if alicloud_access_key_secret is None else pulumi.Output.secret(alicloud_access_key_secret)
            __props__.__dict__["alicloud_account_id"] = alicloud_account_id
            __props__.__dict__["alicloud_function"] = alicloud_function
            __props__.__dict__["alicloud_function_authorization"] = alicloud_function_authorization
            __props__.__dict__["alicloud_function_domain"] = alicloud_function_domain
            __props__.__dict__["alicloud_region"] = alicloud_region
            __props__.__dict__["alicloud_service"] = alicloud_service
            __props__.__dict__["alicloud_version"] = alicloud_version
            __props__.__dict__["aws_api_id"] = aws_api_id
            __props__.__dict__["aws_api_key"] = None if aws_api_key is None else pulumi.Output.secret(aws_api_key)
            __props__.__dict__["aws_api_path"] = aws_api_path
            __props__.__dict__["aws_api_stage"] = aws_api_stage
            __props__.__dict__["aws_domain"] = aws_domain
            __props__.__dict__["aws_region"] = aws_region
            __props__.__dict__["azure_api_key"] = None if azure_api_key is None else pulumi.Output.secret(azure_api_key)
            __props__.__dict__["azure_app"] = azure_app
            __props__.__dict__["azure_domain"] = azure_domain
            __props__.__dict__["azure_function"] = azure_function
            __props__.__dict__["azure_function_authorization"] = azure_function_authorization
            __props__.__dict__["delay"] = delay
            __props__.__dict__["description"] = description
            __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
            __props__.__dict__["email_body"] = email_body
            __props__.__dict__["email_from"] = email_from
            __props__.__dict__["email_subject"] = email_subject
            __props__.__dict__["email_tos"] = email_tos
            __props__.__dict__["execute_security_fabric"] = execute_security_fabric
            __props__.__dict__["forticare_email"] = forticare_email
            __props__.__dict__["gcp_function"] = gcp_function
            __props__.__dict__["gcp_function_domain"] = gcp_function_domain
            __props__.__dict__["gcp_function_region"] = gcp_function_region
            __props__.__dict__["gcp_project"] = gcp_project
            __props__.__dict__["get_all_tables"] = get_all_tables
            __props__.__dict__["headers"] = headers
            __props__.__dict__["http_body"] = http_body
            __props__.__dict__["http_headers"] = http_headers
            __props__.__dict__["message"] = message
            __props__.__dict__["message_type"] = message_type
            __props__.__dict__["method"] = method
            __props__.__dict__["minimum_interval"] = minimum_interval
            __props__.__dict__["name"] = name
            __props__.__dict__["output_size"] = output_size
            __props__.__dict__["port"] = port
            __props__.__dict__["protocol"] = protocol
            __props__.__dict__["replacement_message"] = replacement_message
            __props__.__dict__["replacemsg_group"] = replacemsg_group
            __props__.__dict__["required"] = required
            __props__.__dict__["script"] = script
            __props__.__dict__["sdn_connectors"] = sdn_connectors
            __props__.__dict__["security_tag"] = security_tag
            __props__.__dict__["system_action"] = system_action
            __props__.__dict__["timeout"] = timeout
            __props__.__dict__["tls_certificate"] = tls_certificate
            __props__.__dict__["uri"] = uri
            __props__.__dict__["vdomparam"] = vdomparam
            __props__.__dict__["verify_host_cert"] = verify_host_cert
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["alicloudAccessKeySecret", "awsApiKey", "azureApiKey"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(Automationaction, __self__).__init__(
            'fortios:system/automationaction:Automationaction',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            accprofile: Optional[pulumi.Input[str]] = None,
            action_type: Optional[pulumi.Input[str]] = None,
            alicloud_access_key_id: Optional[pulumi.Input[str]] = None,
            alicloud_access_key_secret: Optional[pulumi.Input[str]] = None,
            alicloud_account_id: Optional[pulumi.Input[str]] = None,
            alicloud_function: Optional[pulumi.Input[str]] = None,
            alicloud_function_authorization: Optional[pulumi.Input[str]] = None,
            alicloud_function_domain: Optional[pulumi.Input[str]] = None,
            alicloud_region: Optional[pulumi.Input[str]] = None,
            alicloud_service: Optional[pulumi.Input[str]] = None,
            alicloud_version: Optional[pulumi.Input[str]] = None,
            aws_api_id: Optional[pulumi.Input[str]] = None,
            aws_api_key: Optional[pulumi.Input[str]] = None,
            aws_api_path: Optional[pulumi.Input[str]] = None,
            aws_api_stage: Optional[pulumi.Input[str]] = None,
            aws_domain: Optional[pulumi.Input[str]] = None,
            aws_region: Optional[pulumi.Input[str]] = None,
            azure_api_key: Optional[pulumi.Input[str]] = None,
            azure_app: Optional[pulumi.Input[str]] = None,
            azure_domain: Optional[pulumi.Input[str]] = None,
            azure_function: Optional[pulumi.Input[str]] = None,
            azure_function_authorization: Optional[pulumi.Input[str]] = None,
            delay: Optional[pulumi.Input[int]] = None,
            description: Optional[pulumi.Input[str]] = None,
            dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
            email_body: Optional[pulumi.Input[str]] = None,
            email_from: Optional[pulumi.Input[str]] = None,
            email_subject: Optional[pulumi.Input[str]] = None,
            email_tos: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionEmailToArgs']]]]] = None,
            execute_security_fabric: Optional[pulumi.Input[str]] = None,
            forticare_email: Optional[pulumi.Input[str]] = None,
            gcp_function: Optional[pulumi.Input[str]] = None,
            gcp_function_domain: Optional[pulumi.Input[str]] = None,
            gcp_function_region: Optional[pulumi.Input[str]] = None,
            gcp_project: Optional[pulumi.Input[str]] = None,
            get_all_tables: Optional[pulumi.Input[str]] = None,
            headers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionHeaderArgs']]]]] = None,
            http_body: Optional[pulumi.Input[str]] = None,
            http_headers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionHttpHeaderArgs']]]]] = None,
            message: Optional[pulumi.Input[str]] = None,
            message_type: Optional[pulumi.Input[str]] = None,
            method: Optional[pulumi.Input[str]] = None,
            minimum_interval: Optional[pulumi.Input[int]] = None,
            name: Optional[pulumi.Input[str]] = None,
            output_size: Optional[pulumi.Input[int]] = None,
            port: Optional[pulumi.Input[int]] = None,
            protocol: Optional[pulumi.Input[str]] = None,
            replacement_message: Optional[pulumi.Input[str]] = None,
            replacemsg_group: Optional[pulumi.Input[str]] = None,
            required: Optional[pulumi.Input[str]] = None,
            script: Optional[pulumi.Input[str]] = None,
            sdn_connectors: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionSdnConnectorArgs']]]]] = None,
            security_tag: Optional[pulumi.Input[str]] = None,
            system_action: Optional[pulumi.Input[str]] = None,
            timeout: Optional[pulumi.Input[int]] = None,
            tls_certificate: Optional[pulumi.Input[str]] = None,
            uri: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None,
            verify_host_cert: Optional[pulumi.Input[str]] = None) -> 'Automationaction':
        """
        Get an existing Automationaction resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] accprofile: Access profile for CLI script action to access FortiGate features.
        :param pulumi.Input[str] action_type: Action type.
        :param pulumi.Input[str] alicloud_access_key_id: AliCloud AccessKey ID.
        :param pulumi.Input[str] alicloud_access_key_secret: AliCloud AccessKey secret.
        :param pulumi.Input[str] alicloud_account_id: AliCloud account ID.
        :param pulumi.Input[str] alicloud_function: AliCloud function name.
        :param pulumi.Input[str] alicloud_function_authorization: AliCloud function authorization type. Valid values: `anonymous`, `function`.
        :param pulumi.Input[str] alicloud_function_domain: AliCloud function domain.
        :param pulumi.Input[str] alicloud_region: AliCloud region.
        :param pulumi.Input[str] alicloud_service: AliCloud service name.
        :param pulumi.Input[str] alicloud_version: AliCloud version.
        :param pulumi.Input[str] aws_api_id: AWS API Gateway ID.
        :param pulumi.Input[str] aws_api_key: AWS API Gateway API key.
        :param pulumi.Input[str] aws_api_path: AWS API Gateway path.
        :param pulumi.Input[str] aws_api_stage: AWS API Gateway deployment stage name.
        :param pulumi.Input[str] aws_domain: AWS domain.
        :param pulumi.Input[str] aws_region: AWS region.
        :param pulumi.Input[str] azure_api_key: Azure function API key.
        :param pulumi.Input[str] azure_app: Azure function application name.
        :param pulumi.Input[str] azure_domain: Azure function domain.
        :param pulumi.Input[str] azure_function: Azure function name.
        :param pulumi.Input[str] azure_function_authorization: Azure function authorization level. Valid values: `anonymous`, `function`, `admin`.
        :param pulumi.Input[int] delay: Delay before execution (in seconds).
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] email_body: Email body.
        :param pulumi.Input[str] email_from: Email sender name.
        :param pulumi.Input[str] email_subject: Email subject.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionEmailToArgs']]]] email_tos: Email addresses. The structure of `email_to` block is documented below.
        :param pulumi.Input[str] execute_security_fabric: Enable/disable execution of CLI script on all or only one FortiGate unit in the Security Fabric. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] forticare_email: Enable/disable use of your FortiCare email address as the email-to address. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] gcp_function: Google Cloud function name.
        :param pulumi.Input[str] gcp_function_domain: Google Cloud function domain.
        :param pulumi.Input[str] gcp_function_region: Google Cloud function region.
        :param pulumi.Input[str] gcp_project: Google Cloud Platform project name.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionHeaderArgs']]]] headers: Request headers. The structure of `headers` block is documented below.
        :param pulumi.Input[str] http_body: Request body (if necessary). Should be serialized json string.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionHttpHeaderArgs']]]] http_headers: Request headers. The structure of `http_headers` block is documented below.
        :param pulumi.Input[str] message: Message content.
        :param pulumi.Input[str] message_type: Message type. Valid values: `text`, `json`.
        :param pulumi.Input[str] method: Request method (POST, PUT, GET, PATCH or DELETE). Valid values: `post`, `put`, `get`, `patch`, `delete`.
        :param pulumi.Input[int] minimum_interval: Limit execution to no more than once in this interval (in seconds).
        :param pulumi.Input[str] name: Name.
        :param pulumi.Input[int] output_size: Number of megabytes to limit script output to (1 - 1024, default = 10).
        :param pulumi.Input[int] port: Protocol port.
        :param pulumi.Input[str] protocol: Request protocol. Valid values: `http`, `https`.
        :param pulumi.Input[str] replacement_message: Enable/disable replacement message. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] replacemsg_group: Replacement message group.
        :param pulumi.Input[str] required: Required in action chain. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] script: CLI script.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AutomationactionSdnConnectorArgs']]]] sdn_connectors: NSX SDN connector names. The structure of `sdn_connector` block is documented below.
        :param pulumi.Input[str] security_tag: NSX security tag.
        :param pulumi.Input[str] system_action: System action type. Valid values: `reboot`, `shutdown`, `backup-config`.
        :param pulumi.Input[int] timeout: Maximum running time for this script in seconds (0 = no timeout).
        :param pulumi.Input[str] tls_certificate: Custom TLS certificate for API request.
        :param pulumi.Input[str] uri: Request API URI.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] verify_host_cert: Enable/disable verification of the remote host certificate. Valid values: `enable`, `disable`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AutomationactionState.__new__(_AutomationactionState)

        __props__.__dict__["accprofile"] = accprofile
        __props__.__dict__["action_type"] = action_type
        __props__.__dict__["alicloud_access_key_id"] = alicloud_access_key_id
        __props__.__dict__["alicloud_access_key_secret"] = alicloud_access_key_secret
        __props__.__dict__["alicloud_account_id"] = alicloud_account_id
        __props__.__dict__["alicloud_function"] = alicloud_function
        __props__.__dict__["alicloud_function_authorization"] = alicloud_function_authorization
        __props__.__dict__["alicloud_function_domain"] = alicloud_function_domain
        __props__.__dict__["alicloud_region"] = alicloud_region
        __props__.__dict__["alicloud_service"] = alicloud_service
        __props__.__dict__["alicloud_version"] = alicloud_version
        __props__.__dict__["aws_api_id"] = aws_api_id
        __props__.__dict__["aws_api_key"] = aws_api_key
        __props__.__dict__["aws_api_path"] = aws_api_path
        __props__.__dict__["aws_api_stage"] = aws_api_stage
        __props__.__dict__["aws_domain"] = aws_domain
        __props__.__dict__["aws_region"] = aws_region
        __props__.__dict__["azure_api_key"] = azure_api_key
        __props__.__dict__["azure_app"] = azure_app
        __props__.__dict__["azure_domain"] = azure_domain
        __props__.__dict__["azure_function"] = azure_function
        __props__.__dict__["azure_function_authorization"] = azure_function_authorization
        __props__.__dict__["delay"] = delay
        __props__.__dict__["description"] = description
        __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
        __props__.__dict__["email_body"] = email_body
        __props__.__dict__["email_from"] = email_from
        __props__.__dict__["email_subject"] = email_subject
        __props__.__dict__["email_tos"] = email_tos
        __props__.__dict__["execute_security_fabric"] = execute_security_fabric
        __props__.__dict__["forticare_email"] = forticare_email
        __props__.__dict__["gcp_function"] = gcp_function
        __props__.__dict__["gcp_function_domain"] = gcp_function_domain
        __props__.__dict__["gcp_function_region"] = gcp_function_region
        __props__.__dict__["gcp_project"] = gcp_project
        __props__.__dict__["get_all_tables"] = get_all_tables
        __props__.__dict__["headers"] = headers
        __props__.__dict__["http_body"] = http_body
        __props__.__dict__["http_headers"] = http_headers
        __props__.__dict__["message"] = message
        __props__.__dict__["message_type"] = message_type
        __props__.__dict__["method"] = method
        __props__.__dict__["minimum_interval"] = minimum_interval
        __props__.__dict__["name"] = name
        __props__.__dict__["output_size"] = output_size
        __props__.__dict__["port"] = port
        __props__.__dict__["protocol"] = protocol
        __props__.__dict__["replacement_message"] = replacement_message
        __props__.__dict__["replacemsg_group"] = replacemsg_group
        __props__.__dict__["required"] = required
        __props__.__dict__["script"] = script
        __props__.__dict__["sdn_connectors"] = sdn_connectors
        __props__.__dict__["security_tag"] = security_tag
        __props__.__dict__["system_action"] = system_action
        __props__.__dict__["timeout"] = timeout
        __props__.__dict__["tls_certificate"] = tls_certificate
        __props__.__dict__["uri"] = uri
        __props__.__dict__["vdomparam"] = vdomparam
        __props__.__dict__["verify_host_cert"] = verify_host_cert
        return Automationaction(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def accprofile(self) -> pulumi.Output[str]:
        """
        Access profile for CLI script action to access FortiGate features.
        """
        return pulumi.get(self, "accprofile")

    @property
    @pulumi.getter(name="actionType")
    def action_type(self) -> pulumi.Output[str]:
        """
        Action type.
        """
        return pulumi.get(self, "action_type")

    @property
    @pulumi.getter(name="alicloudAccessKeyId")
    def alicloud_access_key_id(self) -> pulumi.Output[str]:
        """
        AliCloud AccessKey ID.
        """
        return pulumi.get(self, "alicloud_access_key_id")

    @property
    @pulumi.getter(name="alicloudAccessKeySecret")
    def alicloud_access_key_secret(self) -> pulumi.Output[Optional[str]]:
        """
        AliCloud AccessKey secret.
        """
        return pulumi.get(self, "alicloud_access_key_secret")

    @property
    @pulumi.getter(name="alicloudAccountId")
    def alicloud_account_id(self) -> pulumi.Output[str]:
        """
        AliCloud account ID.
        """
        return pulumi.get(self, "alicloud_account_id")

    @property
    @pulumi.getter(name="alicloudFunction")
    def alicloud_function(self) -> pulumi.Output[str]:
        """
        AliCloud function name.
        """
        return pulumi.get(self, "alicloud_function")

    @property
    @pulumi.getter(name="alicloudFunctionAuthorization")
    def alicloud_function_authorization(self) -> pulumi.Output[str]:
        """
        AliCloud function authorization type. Valid values: `anonymous`, `function`.
        """
        return pulumi.get(self, "alicloud_function_authorization")

    @property
    @pulumi.getter(name="alicloudFunctionDomain")
    def alicloud_function_domain(self) -> pulumi.Output[str]:
        """
        AliCloud function domain.
        """
        return pulumi.get(self, "alicloud_function_domain")

    @property
    @pulumi.getter(name="alicloudRegion")
    def alicloud_region(self) -> pulumi.Output[str]:
        """
        AliCloud region.
        """
        return pulumi.get(self, "alicloud_region")

    @property
    @pulumi.getter(name="alicloudService")
    def alicloud_service(self) -> pulumi.Output[str]:
        """
        AliCloud service name.
        """
        return pulumi.get(self, "alicloud_service")

    @property
    @pulumi.getter(name="alicloudVersion")
    def alicloud_version(self) -> pulumi.Output[str]:
        """
        AliCloud version.
        """
        return pulumi.get(self, "alicloud_version")

    @property
    @pulumi.getter(name="awsApiId")
    def aws_api_id(self) -> pulumi.Output[str]:
        """
        AWS API Gateway ID.
        """
        return pulumi.get(self, "aws_api_id")

    @property
    @pulumi.getter(name="awsApiKey")
    def aws_api_key(self) -> pulumi.Output[Optional[str]]:
        """
        AWS API Gateway API key.
        """
        return pulumi.get(self, "aws_api_key")

    @property
    @pulumi.getter(name="awsApiPath")
    def aws_api_path(self) -> pulumi.Output[str]:
        """
        AWS API Gateway path.
        """
        return pulumi.get(self, "aws_api_path")

    @property
    @pulumi.getter(name="awsApiStage")
    def aws_api_stage(self) -> pulumi.Output[str]:
        """
        AWS API Gateway deployment stage name.
        """
        return pulumi.get(self, "aws_api_stage")

    @property
    @pulumi.getter(name="awsDomain")
    def aws_domain(self) -> pulumi.Output[str]:
        """
        AWS domain.
        """
        return pulumi.get(self, "aws_domain")

    @property
    @pulumi.getter(name="awsRegion")
    def aws_region(self) -> pulumi.Output[str]:
        """
        AWS region.
        """
        return pulumi.get(self, "aws_region")

    @property
    @pulumi.getter(name="azureApiKey")
    def azure_api_key(self) -> pulumi.Output[Optional[str]]:
        """
        Azure function API key.
        """
        return pulumi.get(self, "azure_api_key")

    @property
    @pulumi.getter(name="azureApp")
    def azure_app(self) -> pulumi.Output[str]:
        """
        Azure function application name.
        """
        return pulumi.get(self, "azure_app")

    @property
    @pulumi.getter(name="azureDomain")
    def azure_domain(self) -> pulumi.Output[str]:
        """
        Azure function domain.
        """
        return pulumi.get(self, "azure_domain")

    @property
    @pulumi.getter(name="azureFunction")
    def azure_function(self) -> pulumi.Output[str]:
        """
        Azure function name.
        """
        return pulumi.get(self, "azure_function")

    @property
    @pulumi.getter(name="azureFunctionAuthorization")
    def azure_function_authorization(self) -> pulumi.Output[str]:
        """
        Azure function authorization level. Valid values: `anonymous`, `function`, `admin`.
        """
        return pulumi.get(self, "azure_function_authorization")

    @property
    @pulumi.getter
    def delay(self) -> pulumi.Output[int]:
        """
        Delay before execution (in seconds).
        """
        return pulumi.get(self, "delay")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> pulumi.Output[Optional[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @property
    @pulumi.getter(name="emailBody")
    def email_body(self) -> pulumi.Output[str]:
        """
        Email body.
        """
        return pulumi.get(self, "email_body")

    @property
    @pulumi.getter(name="emailFrom")
    def email_from(self) -> pulumi.Output[Optional[str]]:
        """
        Email sender name.
        """
        return pulumi.get(self, "email_from")

    @property
    @pulumi.getter(name="emailSubject")
    def email_subject(self) -> pulumi.Output[Optional[str]]:
        """
        Email subject.
        """
        return pulumi.get(self, "email_subject")

    @property
    @pulumi.getter(name="emailTos")
    def email_tos(self) -> pulumi.Output[Optional[Sequence['outputs.AutomationactionEmailTo']]]:
        """
        Email addresses. The structure of `email_to` block is documented below.
        """
        return pulumi.get(self, "email_tos")

    @property
    @pulumi.getter(name="executeSecurityFabric")
    def execute_security_fabric(self) -> pulumi.Output[str]:
        """
        Enable/disable execution of CLI script on all or only one FortiGate unit in the Security Fabric. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "execute_security_fabric")

    @property
    @pulumi.getter(name="forticareEmail")
    def forticare_email(self) -> pulumi.Output[str]:
        """
        Enable/disable use of your FortiCare email address as the email-to address. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "forticare_email")

    @property
    @pulumi.getter(name="gcpFunction")
    def gcp_function(self) -> pulumi.Output[str]:
        """
        Google Cloud function name.
        """
        return pulumi.get(self, "gcp_function")

    @property
    @pulumi.getter(name="gcpFunctionDomain")
    def gcp_function_domain(self) -> pulumi.Output[str]:
        """
        Google Cloud function domain.
        """
        return pulumi.get(self, "gcp_function_domain")

    @property
    @pulumi.getter(name="gcpFunctionRegion")
    def gcp_function_region(self) -> pulumi.Output[str]:
        """
        Google Cloud function region.
        """
        return pulumi.get(self, "gcp_function_region")

    @property
    @pulumi.getter(name="gcpProject")
    def gcp_project(self) -> pulumi.Output[str]:
        """
        Google Cloud Platform project name.
        """
        return pulumi.get(self, "gcp_project")

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> pulumi.Output[Optional[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @property
    @pulumi.getter
    def headers(self) -> pulumi.Output[Optional[Sequence['outputs.AutomationactionHeader']]]:
        """
        Request headers. The structure of `headers` block is documented below.
        """
        return pulumi.get(self, "headers")

    @property
    @pulumi.getter(name="httpBody")
    def http_body(self) -> pulumi.Output[Optional[str]]:
        """
        Request body (if necessary). Should be serialized json string.
        """
        return pulumi.get(self, "http_body")

    @property
    @pulumi.getter(name="httpHeaders")
    def http_headers(self) -> pulumi.Output[Optional[Sequence['outputs.AutomationactionHttpHeader']]]:
        """
        Request headers. The structure of `http_headers` block is documented below.
        """
        return pulumi.get(self, "http_headers")

    @property
    @pulumi.getter
    def message(self) -> pulumi.Output[str]:
        """
        Message content.
        """
        return pulumi.get(self, "message")

    @property
    @pulumi.getter(name="messageType")
    def message_type(self) -> pulumi.Output[str]:
        """
        Message type. Valid values: `text`, `json`.
        """
        return pulumi.get(self, "message_type")

    @property
    @pulumi.getter
    def method(self) -> pulumi.Output[str]:
        """
        Request method (POST, PUT, GET, PATCH or DELETE). Valid values: `post`, `put`, `get`, `patch`, `delete`.
        """
        return pulumi.get(self, "method")

    @property
    @pulumi.getter(name="minimumInterval")
    def minimum_interval(self) -> pulumi.Output[int]:
        """
        Limit execution to no more than once in this interval (in seconds).
        """
        return pulumi.get(self, "minimum_interval")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="outputSize")
    def output_size(self) -> pulumi.Output[int]:
        """
        Number of megabytes to limit script output to (1 - 1024, default = 10).
        """
        return pulumi.get(self, "output_size")

    @property
    @pulumi.getter
    def port(self) -> pulumi.Output[int]:
        """
        Protocol port.
        """
        return pulumi.get(self, "port")

    @property
    @pulumi.getter
    def protocol(self) -> pulumi.Output[str]:
        """
        Request protocol. Valid values: `http`, `https`.
        """
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter(name="replacementMessage")
    def replacement_message(self) -> pulumi.Output[str]:
        """
        Enable/disable replacement message. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "replacement_message")

    @property
    @pulumi.getter(name="replacemsgGroup")
    def replacemsg_group(self) -> pulumi.Output[str]:
        """
        Replacement message group.
        """
        return pulumi.get(self, "replacemsg_group")

    @property
    @pulumi.getter
    def required(self) -> pulumi.Output[str]:
        """
        Required in action chain. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "required")

    @property
    @pulumi.getter
    def script(self) -> pulumi.Output[Optional[str]]:
        """
        CLI script.
        """
        return pulumi.get(self, "script")

    @property
    @pulumi.getter(name="sdnConnectors")
    def sdn_connectors(self) -> pulumi.Output[Optional[Sequence['outputs.AutomationactionSdnConnector']]]:
        """
        NSX SDN connector names. The structure of `sdn_connector` block is documented below.
        """
        return pulumi.get(self, "sdn_connectors")

    @property
    @pulumi.getter(name="securityTag")
    def security_tag(self) -> pulumi.Output[str]:
        """
        NSX security tag.
        """
        return pulumi.get(self, "security_tag")

    @property
    @pulumi.getter(name="systemAction")
    def system_action(self) -> pulumi.Output[str]:
        """
        System action type. Valid values: `reboot`, `shutdown`, `backup-config`.
        """
        return pulumi.get(self, "system_action")

    @property
    @pulumi.getter
    def timeout(self) -> pulumi.Output[int]:
        """
        Maximum running time for this script in seconds (0 = no timeout).
        """
        return pulumi.get(self, "timeout")

    @property
    @pulumi.getter(name="tlsCertificate")
    def tls_certificate(self) -> pulumi.Output[str]:
        """
        Custom TLS certificate for API request.
        """
        return pulumi.get(self, "tls_certificate")

    @property
    @pulumi.getter
    def uri(self) -> pulumi.Output[Optional[str]]:
        """
        Request API URI.
        """
        return pulumi.get(self, "uri")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @property
    @pulumi.getter(name="verifyHostCert")
    def verify_host_cert(self) -> pulumi.Output[str]:
        """
        Enable/disable verification of the remote host certificate. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "verify_host_cert")

