# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['VdompropertyArgs', 'Vdomproperty']

@pulumi.input_type
class VdompropertyArgs:
    def __init__(__self__, *,
                 custom_service: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dialup_tunnel: Optional[pulumi.Input[str]] = None,
                 firewall_address: Optional[pulumi.Input[str]] = None,
                 firewall_addrgrp: Optional[pulumi.Input[str]] = None,
                 firewall_policy: Optional[pulumi.Input[str]] = None,
                 ipsec_phase1: Optional[pulumi.Input[str]] = None,
                 ipsec_phase1_interface: Optional[pulumi.Input[str]] = None,
                 ipsec_phase2: Optional[pulumi.Input[str]] = None,
                 ipsec_phase2_interface: Optional[pulumi.Input[str]] = None,
                 log_disk_quota: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 onetime_schedule: Optional[pulumi.Input[str]] = None,
                 proxy: Optional[pulumi.Input[str]] = None,
                 recurring_schedule: Optional[pulumi.Input[str]] = None,
                 service_group: Optional[pulumi.Input[str]] = None,
                 session: Optional[pulumi.Input[str]] = None,
                 snmp_index: Optional[pulumi.Input[int]] = None,
                 sslvpn: Optional[pulumi.Input[str]] = None,
                 user: Optional[pulumi.Input[str]] = None,
                 user_group: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Vdomproperty resource.
        :param pulumi.Input[str] custom_service: Maximum guaranteed number of firewall custom services.
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dialup_tunnel: Maximum guaranteed number of dial-up tunnels.
        :param pulumi.Input[str] firewall_address: Maximum guaranteed number of firewall addresses (IPv4, IPv6, multicast).
        :param pulumi.Input[str] firewall_addrgrp: Maximum guaranteed number of firewall address groups (IPv4, IPv6).
        :param pulumi.Input[str] firewall_policy: Maximum guaranteed number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
        :param pulumi.Input[str] ipsec_phase1: Maximum guaranteed number of VPN IPsec phase 1 tunnels.
        :param pulumi.Input[str] ipsec_phase1_interface: Maximum guaranteed number of VPN IPsec phase1 interface tunnels.
        :param pulumi.Input[str] ipsec_phase2: Maximum guaranteed number of VPN IPsec phase 2 tunnels.
        :param pulumi.Input[str] ipsec_phase2_interface: Maximum guaranteed number of VPN IPsec phase2 interface tunnels.
        :param pulumi.Input[str] log_disk_quota: Log disk quota in megabytes (MB). Range depends on how much disk space is available.
        :param pulumi.Input[str] name: VDOM name.
        :param pulumi.Input[str] onetime_schedule: Maximum guaranteed number of firewall one-time schedules.
        :param pulumi.Input[str] proxy: Maximum guaranteed number of concurrent proxy users.
        :param pulumi.Input[str] recurring_schedule: Maximum guaranteed number of firewall recurring schedules.
        :param pulumi.Input[str] service_group: Maximum guaranteed number of firewall service groups.
        :param pulumi.Input[str] session: Maximum guaranteed number of sessions.
        :param pulumi.Input[int] snmp_index: Permanent SNMP Index of the virtual domain. On FortiOS versions 6.2.0-6.2.6: 0 - 4294967295. On FortiOS versions >= 6.4.0: 1 - 2147483647.
        :param pulumi.Input[str] sslvpn: Maximum guaranteed number of SSL-VPNs.
        :param pulumi.Input[str] user: Maximum guaranteed number of local users.
        :param pulumi.Input[str] user_group: Maximum guaranteed number of user groups.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if custom_service is not None:
            pulumi.set(__self__, "custom_service", custom_service)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dialup_tunnel is not None:
            pulumi.set(__self__, "dialup_tunnel", dialup_tunnel)
        if firewall_address is not None:
            pulumi.set(__self__, "firewall_address", firewall_address)
        if firewall_addrgrp is not None:
            pulumi.set(__self__, "firewall_addrgrp", firewall_addrgrp)
        if firewall_policy is not None:
            pulumi.set(__self__, "firewall_policy", firewall_policy)
        if ipsec_phase1 is not None:
            pulumi.set(__self__, "ipsec_phase1", ipsec_phase1)
        if ipsec_phase1_interface is not None:
            pulumi.set(__self__, "ipsec_phase1_interface", ipsec_phase1_interface)
        if ipsec_phase2 is not None:
            pulumi.set(__self__, "ipsec_phase2", ipsec_phase2)
        if ipsec_phase2_interface is not None:
            pulumi.set(__self__, "ipsec_phase2_interface", ipsec_phase2_interface)
        if log_disk_quota is not None:
            pulumi.set(__self__, "log_disk_quota", log_disk_quota)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if onetime_schedule is not None:
            pulumi.set(__self__, "onetime_schedule", onetime_schedule)
        if proxy is not None:
            pulumi.set(__self__, "proxy", proxy)
        if recurring_schedule is not None:
            pulumi.set(__self__, "recurring_schedule", recurring_schedule)
        if service_group is not None:
            pulumi.set(__self__, "service_group", service_group)
        if session is not None:
            pulumi.set(__self__, "session", session)
        if snmp_index is not None:
            pulumi.set(__self__, "snmp_index", snmp_index)
        if sslvpn is not None:
            pulumi.set(__self__, "sslvpn", sslvpn)
        if user is not None:
            pulumi.set(__self__, "user", user)
        if user_group is not None:
            pulumi.set(__self__, "user_group", user_group)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="customService")
    def custom_service(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall custom services.
        """
        return pulumi.get(self, "custom_service")

    @custom_service.setter
    def custom_service(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "custom_service", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="dialupTunnel")
    def dialup_tunnel(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of dial-up tunnels.
        """
        return pulumi.get(self, "dialup_tunnel")

    @dialup_tunnel.setter
    def dialup_tunnel(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dialup_tunnel", value)

    @property
    @pulumi.getter(name="firewallAddress")
    def firewall_address(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall addresses (IPv4, IPv6, multicast).
        """
        return pulumi.get(self, "firewall_address")

    @firewall_address.setter
    def firewall_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "firewall_address", value)

    @property
    @pulumi.getter(name="firewallAddrgrp")
    def firewall_addrgrp(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall address groups (IPv4, IPv6).
        """
        return pulumi.get(self, "firewall_addrgrp")

    @firewall_addrgrp.setter
    def firewall_addrgrp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "firewall_addrgrp", value)

    @property
    @pulumi.getter(name="firewallPolicy")
    def firewall_policy(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
        """
        return pulumi.get(self, "firewall_policy")

    @firewall_policy.setter
    def firewall_policy(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "firewall_policy", value)

    @property
    @pulumi.getter(name="ipsecPhase1")
    def ipsec_phase1(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of VPN IPsec phase 1 tunnels.
        """
        return pulumi.get(self, "ipsec_phase1")

    @ipsec_phase1.setter
    def ipsec_phase1(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_phase1", value)

    @property
    @pulumi.getter(name="ipsecPhase1Interface")
    def ipsec_phase1_interface(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of VPN IPsec phase1 interface tunnels.
        """
        return pulumi.get(self, "ipsec_phase1_interface")

    @ipsec_phase1_interface.setter
    def ipsec_phase1_interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_phase1_interface", value)

    @property
    @pulumi.getter(name="ipsecPhase2")
    def ipsec_phase2(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of VPN IPsec phase 2 tunnels.
        """
        return pulumi.get(self, "ipsec_phase2")

    @ipsec_phase2.setter
    def ipsec_phase2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_phase2", value)

    @property
    @pulumi.getter(name="ipsecPhase2Interface")
    def ipsec_phase2_interface(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of VPN IPsec phase2 interface tunnels.
        """
        return pulumi.get(self, "ipsec_phase2_interface")

    @ipsec_phase2_interface.setter
    def ipsec_phase2_interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_phase2_interface", value)

    @property
    @pulumi.getter(name="logDiskQuota")
    def log_disk_quota(self) -> Optional[pulumi.Input[str]]:
        """
        Log disk quota in megabytes (MB). Range depends on how much disk space is available.
        """
        return pulumi.get(self, "log_disk_quota")

    @log_disk_quota.setter
    def log_disk_quota(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "log_disk_quota", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        VDOM name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="onetimeSchedule")
    def onetime_schedule(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall one-time schedules.
        """
        return pulumi.get(self, "onetime_schedule")

    @onetime_schedule.setter
    def onetime_schedule(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "onetime_schedule", value)

    @property
    @pulumi.getter
    def proxy(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of concurrent proxy users.
        """
        return pulumi.get(self, "proxy")

    @proxy.setter
    def proxy(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "proxy", value)

    @property
    @pulumi.getter(name="recurringSchedule")
    def recurring_schedule(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall recurring schedules.
        """
        return pulumi.get(self, "recurring_schedule")

    @recurring_schedule.setter
    def recurring_schedule(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "recurring_schedule", value)

    @property
    @pulumi.getter(name="serviceGroup")
    def service_group(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall service groups.
        """
        return pulumi.get(self, "service_group")

    @service_group.setter
    def service_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_group", value)

    @property
    @pulumi.getter
    def session(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of sessions.
        """
        return pulumi.get(self, "session")

    @session.setter
    def session(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "session", value)

    @property
    @pulumi.getter(name="snmpIndex")
    def snmp_index(self) -> Optional[pulumi.Input[int]]:
        """
        Permanent SNMP Index of the virtual domain. On FortiOS versions 6.2.0-6.2.6: 0 - 4294967295. On FortiOS versions >= 6.4.0: 1 - 2147483647.
        """
        return pulumi.get(self, "snmp_index")

    @snmp_index.setter
    def snmp_index(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "snmp_index", value)

    @property
    @pulumi.getter
    def sslvpn(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of SSL-VPNs.
        """
        return pulumi.get(self, "sslvpn")

    @sslvpn.setter
    def sslvpn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sslvpn", value)

    @property
    @pulumi.getter
    def user(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of local users.
        """
        return pulumi.get(self, "user")

    @user.setter
    def user(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user", value)

    @property
    @pulumi.getter(name="userGroup")
    def user_group(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of user groups.
        """
        return pulumi.get(self, "user_group")

    @user_group.setter
    def user_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_group", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _VdompropertyState:
    def __init__(__self__, *,
                 custom_service: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dialup_tunnel: Optional[pulumi.Input[str]] = None,
                 firewall_address: Optional[pulumi.Input[str]] = None,
                 firewall_addrgrp: Optional[pulumi.Input[str]] = None,
                 firewall_policy: Optional[pulumi.Input[str]] = None,
                 ipsec_phase1: Optional[pulumi.Input[str]] = None,
                 ipsec_phase1_interface: Optional[pulumi.Input[str]] = None,
                 ipsec_phase2: Optional[pulumi.Input[str]] = None,
                 ipsec_phase2_interface: Optional[pulumi.Input[str]] = None,
                 log_disk_quota: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 onetime_schedule: Optional[pulumi.Input[str]] = None,
                 proxy: Optional[pulumi.Input[str]] = None,
                 recurring_schedule: Optional[pulumi.Input[str]] = None,
                 service_group: Optional[pulumi.Input[str]] = None,
                 session: Optional[pulumi.Input[str]] = None,
                 snmp_index: Optional[pulumi.Input[int]] = None,
                 sslvpn: Optional[pulumi.Input[str]] = None,
                 user: Optional[pulumi.Input[str]] = None,
                 user_group: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Vdomproperty resources.
        :param pulumi.Input[str] custom_service: Maximum guaranteed number of firewall custom services.
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dialup_tunnel: Maximum guaranteed number of dial-up tunnels.
        :param pulumi.Input[str] firewall_address: Maximum guaranteed number of firewall addresses (IPv4, IPv6, multicast).
        :param pulumi.Input[str] firewall_addrgrp: Maximum guaranteed number of firewall address groups (IPv4, IPv6).
        :param pulumi.Input[str] firewall_policy: Maximum guaranteed number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
        :param pulumi.Input[str] ipsec_phase1: Maximum guaranteed number of VPN IPsec phase 1 tunnels.
        :param pulumi.Input[str] ipsec_phase1_interface: Maximum guaranteed number of VPN IPsec phase1 interface tunnels.
        :param pulumi.Input[str] ipsec_phase2: Maximum guaranteed number of VPN IPsec phase 2 tunnels.
        :param pulumi.Input[str] ipsec_phase2_interface: Maximum guaranteed number of VPN IPsec phase2 interface tunnels.
        :param pulumi.Input[str] log_disk_quota: Log disk quota in megabytes (MB). Range depends on how much disk space is available.
        :param pulumi.Input[str] name: VDOM name.
        :param pulumi.Input[str] onetime_schedule: Maximum guaranteed number of firewall one-time schedules.
        :param pulumi.Input[str] proxy: Maximum guaranteed number of concurrent proxy users.
        :param pulumi.Input[str] recurring_schedule: Maximum guaranteed number of firewall recurring schedules.
        :param pulumi.Input[str] service_group: Maximum guaranteed number of firewall service groups.
        :param pulumi.Input[str] session: Maximum guaranteed number of sessions.
        :param pulumi.Input[int] snmp_index: Permanent SNMP Index of the virtual domain. On FortiOS versions 6.2.0-6.2.6: 0 - 4294967295. On FortiOS versions >= 6.4.0: 1 - 2147483647.
        :param pulumi.Input[str] sslvpn: Maximum guaranteed number of SSL-VPNs.
        :param pulumi.Input[str] user: Maximum guaranteed number of local users.
        :param pulumi.Input[str] user_group: Maximum guaranteed number of user groups.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if custom_service is not None:
            pulumi.set(__self__, "custom_service", custom_service)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dialup_tunnel is not None:
            pulumi.set(__self__, "dialup_tunnel", dialup_tunnel)
        if firewall_address is not None:
            pulumi.set(__self__, "firewall_address", firewall_address)
        if firewall_addrgrp is not None:
            pulumi.set(__self__, "firewall_addrgrp", firewall_addrgrp)
        if firewall_policy is not None:
            pulumi.set(__self__, "firewall_policy", firewall_policy)
        if ipsec_phase1 is not None:
            pulumi.set(__self__, "ipsec_phase1", ipsec_phase1)
        if ipsec_phase1_interface is not None:
            pulumi.set(__self__, "ipsec_phase1_interface", ipsec_phase1_interface)
        if ipsec_phase2 is not None:
            pulumi.set(__self__, "ipsec_phase2", ipsec_phase2)
        if ipsec_phase2_interface is not None:
            pulumi.set(__self__, "ipsec_phase2_interface", ipsec_phase2_interface)
        if log_disk_quota is not None:
            pulumi.set(__self__, "log_disk_quota", log_disk_quota)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if onetime_schedule is not None:
            pulumi.set(__self__, "onetime_schedule", onetime_schedule)
        if proxy is not None:
            pulumi.set(__self__, "proxy", proxy)
        if recurring_schedule is not None:
            pulumi.set(__self__, "recurring_schedule", recurring_schedule)
        if service_group is not None:
            pulumi.set(__self__, "service_group", service_group)
        if session is not None:
            pulumi.set(__self__, "session", session)
        if snmp_index is not None:
            pulumi.set(__self__, "snmp_index", snmp_index)
        if sslvpn is not None:
            pulumi.set(__self__, "sslvpn", sslvpn)
        if user is not None:
            pulumi.set(__self__, "user", user)
        if user_group is not None:
            pulumi.set(__self__, "user_group", user_group)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="customService")
    def custom_service(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall custom services.
        """
        return pulumi.get(self, "custom_service")

    @custom_service.setter
    def custom_service(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "custom_service", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="dialupTunnel")
    def dialup_tunnel(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of dial-up tunnels.
        """
        return pulumi.get(self, "dialup_tunnel")

    @dialup_tunnel.setter
    def dialup_tunnel(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dialup_tunnel", value)

    @property
    @pulumi.getter(name="firewallAddress")
    def firewall_address(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall addresses (IPv4, IPv6, multicast).
        """
        return pulumi.get(self, "firewall_address")

    @firewall_address.setter
    def firewall_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "firewall_address", value)

    @property
    @pulumi.getter(name="firewallAddrgrp")
    def firewall_addrgrp(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall address groups (IPv4, IPv6).
        """
        return pulumi.get(self, "firewall_addrgrp")

    @firewall_addrgrp.setter
    def firewall_addrgrp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "firewall_addrgrp", value)

    @property
    @pulumi.getter(name="firewallPolicy")
    def firewall_policy(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
        """
        return pulumi.get(self, "firewall_policy")

    @firewall_policy.setter
    def firewall_policy(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "firewall_policy", value)

    @property
    @pulumi.getter(name="ipsecPhase1")
    def ipsec_phase1(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of VPN IPsec phase 1 tunnels.
        """
        return pulumi.get(self, "ipsec_phase1")

    @ipsec_phase1.setter
    def ipsec_phase1(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_phase1", value)

    @property
    @pulumi.getter(name="ipsecPhase1Interface")
    def ipsec_phase1_interface(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of VPN IPsec phase1 interface tunnels.
        """
        return pulumi.get(self, "ipsec_phase1_interface")

    @ipsec_phase1_interface.setter
    def ipsec_phase1_interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_phase1_interface", value)

    @property
    @pulumi.getter(name="ipsecPhase2")
    def ipsec_phase2(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of VPN IPsec phase 2 tunnels.
        """
        return pulumi.get(self, "ipsec_phase2")

    @ipsec_phase2.setter
    def ipsec_phase2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_phase2", value)

    @property
    @pulumi.getter(name="ipsecPhase2Interface")
    def ipsec_phase2_interface(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of VPN IPsec phase2 interface tunnels.
        """
        return pulumi.get(self, "ipsec_phase2_interface")

    @ipsec_phase2_interface.setter
    def ipsec_phase2_interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_phase2_interface", value)

    @property
    @pulumi.getter(name="logDiskQuota")
    def log_disk_quota(self) -> Optional[pulumi.Input[str]]:
        """
        Log disk quota in megabytes (MB). Range depends on how much disk space is available.
        """
        return pulumi.get(self, "log_disk_quota")

    @log_disk_quota.setter
    def log_disk_quota(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "log_disk_quota", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        VDOM name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="onetimeSchedule")
    def onetime_schedule(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall one-time schedules.
        """
        return pulumi.get(self, "onetime_schedule")

    @onetime_schedule.setter
    def onetime_schedule(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "onetime_schedule", value)

    @property
    @pulumi.getter
    def proxy(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of concurrent proxy users.
        """
        return pulumi.get(self, "proxy")

    @proxy.setter
    def proxy(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "proxy", value)

    @property
    @pulumi.getter(name="recurringSchedule")
    def recurring_schedule(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall recurring schedules.
        """
        return pulumi.get(self, "recurring_schedule")

    @recurring_schedule.setter
    def recurring_schedule(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "recurring_schedule", value)

    @property
    @pulumi.getter(name="serviceGroup")
    def service_group(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of firewall service groups.
        """
        return pulumi.get(self, "service_group")

    @service_group.setter
    def service_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_group", value)

    @property
    @pulumi.getter
    def session(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of sessions.
        """
        return pulumi.get(self, "session")

    @session.setter
    def session(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "session", value)

    @property
    @pulumi.getter(name="snmpIndex")
    def snmp_index(self) -> Optional[pulumi.Input[int]]:
        """
        Permanent SNMP Index of the virtual domain. On FortiOS versions 6.2.0-6.2.6: 0 - 4294967295. On FortiOS versions >= 6.4.0: 1 - 2147483647.
        """
        return pulumi.get(self, "snmp_index")

    @snmp_index.setter
    def snmp_index(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "snmp_index", value)

    @property
    @pulumi.getter
    def sslvpn(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of SSL-VPNs.
        """
        return pulumi.get(self, "sslvpn")

    @sslvpn.setter
    def sslvpn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sslvpn", value)

    @property
    @pulumi.getter
    def user(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of local users.
        """
        return pulumi.get(self, "user")

    @user.setter
    def user(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user", value)

    @property
    @pulumi.getter(name="userGroup")
    def user_group(self) -> Optional[pulumi.Input[str]]:
        """
        Maximum guaranteed number of user groups.
        """
        return pulumi.get(self, "user_group")

    @user_group.setter
    def user_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_group", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Vdomproperty(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 custom_service: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dialup_tunnel: Optional[pulumi.Input[str]] = None,
                 firewall_address: Optional[pulumi.Input[str]] = None,
                 firewall_addrgrp: Optional[pulumi.Input[str]] = None,
                 firewall_policy: Optional[pulumi.Input[str]] = None,
                 ipsec_phase1: Optional[pulumi.Input[str]] = None,
                 ipsec_phase1_interface: Optional[pulumi.Input[str]] = None,
                 ipsec_phase2: Optional[pulumi.Input[str]] = None,
                 ipsec_phase2_interface: Optional[pulumi.Input[str]] = None,
                 log_disk_quota: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 onetime_schedule: Optional[pulumi.Input[str]] = None,
                 proxy: Optional[pulumi.Input[str]] = None,
                 recurring_schedule: Optional[pulumi.Input[str]] = None,
                 service_group: Optional[pulumi.Input[str]] = None,
                 session: Optional[pulumi.Input[str]] = None,
                 snmp_index: Optional[pulumi.Input[int]] = None,
                 sslvpn: Optional[pulumi.Input[str]] = None,
                 user: Optional[pulumi.Input[str]] = None,
                 user_group: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure VDOM property.

        ## Import

        System VdomProperty can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:system/vdomproperty:Vdomproperty labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:system/vdomproperty:Vdomproperty labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] custom_service: Maximum guaranteed number of firewall custom services.
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dialup_tunnel: Maximum guaranteed number of dial-up tunnels.
        :param pulumi.Input[str] firewall_address: Maximum guaranteed number of firewall addresses (IPv4, IPv6, multicast).
        :param pulumi.Input[str] firewall_addrgrp: Maximum guaranteed number of firewall address groups (IPv4, IPv6).
        :param pulumi.Input[str] firewall_policy: Maximum guaranteed number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
        :param pulumi.Input[str] ipsec_phase1: Maximum guaranteed number of VPN IPsec phase 1 tunnels.
        :param pulumi.Input[str] ipsec_phase1_interface: Maximum guaranteed number of VPN IPsec phase1 interface tunnels.
        :param pulumi.Input[str] ipsec_phase2: Maximum guaranteed number of VPN IPsec phase 2 tunnels.
        :param pulumi.Input[str] ipsec_phase2_interface: Maximum guaranteed number of VPN IPsec phase2 interface tunnels.
        :param pulumi.Input[str] log_disk_quota: Log disk quota in megabytes (MB). Range depends on how much disk space is available.
        :param pulumi.Input[str] name: VDOM name.
        :param pulumi.Input[str] onetime_schedule: Maximum guaranteed number of firewall one-time schedules.
        :param pulumi.Input[str] proxy: Maximum guaranteed number of concurrent proxy users.
        :param pulumi.Input[str] recurring_schedule: Maximum guaranteed number of firewall recurring schedules.
        :param pulumi.Input[str] service_group: Maximum guaranteed number of firewall service groups.
        :param pulumi.Input[str] session: Maximum guaranteed number of sessions.
        :param pulumi.Input[int] snmp_index: Permanent SNMP Index of the virtual domain. On FortiOS versions 6.2.0-6.2.6: 0 - 4294967295. On FortiOS versions >= 6.4.0: 1 - 2147483647.
        :param pulumi.Input[str] sslvpn: Maximum guaranteed number of SSL-VPNs.
        :param pulumi.Input[str] user: Maximum guaranteed number of local users.
        :param pulumi.Input[str] user_group: Maximum guaranteed number of user groups.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[VdompropertyArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure VDOM property.

        ## Import

        System VdomProperty can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:system/vdomproperty:Vdomproperty labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:system/vdomproperty:Vdomproperty labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param VdompropertyArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(VdompropertyArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 custom_service: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 dialup_tunnel: Optional[pulumi.Input[str]] = None,
                 firewall_address: Optional[pulumi.Input[str]] = None,
                 firewall_addrgrp: Optional[pulumi.Input[str]] = None,
                 firewall_policy: Optional[pulumi.Input[str]] = None,
                 ipsec_phase1: Optional[pulumi.Input[str]] = None,
                 ipsec_phase1_interface: Optional[pulumi.Input[str]] = None,
                 ipsec_phase2: Optional[pulumi.Input[str]] = None,
                 ipsec_phase2_interface: Optional[pulumi.Input[str]] = None,
                 log_disk_quota: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 onetime_schedule: Optional[pulumi.Input[str]] = None,
                 proxy: Optional[pulumi.Input[str]] = None,
                 recurring_schedule: Optional[pulumi.Input[str]] = None,
                 service_group: Optional[pulumi.Input[str]] = None,
                 session: Optional[pulumi.Input[str]] = None,
                 snmp_index: Optional[pulumi.Input[int]] = None,
                 sslvpn: Optional[pulumi.Input[str]] = None,
                 user: Optional[pulumi.Input[str]] = None,
                 user_group: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = VdompropertyArgs.__new__(VdompropertyArgs)

            __props__.__dict__["custom_service"] = custom_service
            __props__.__dict__["description"] = description
            __props__.__dict__["dialup_tunnel"] = dialup_tunnel
            __props__.__dict__["firewall_address"] = firewall_address
            __props__.__dict__["firewall_addrgrp"] = firewall_addrgrp
            __props__.__dict__["firewall_policy"] = firewall_policy
            __props__.__dict__["ipsec_phase1"] = ipsec_phase1
            __props__.__dict__["ipsec_phase1_interface"] = ipsec_phase1_interface
            __props__.__dict__["ipsec_phase2"] = ipsec_phase2
            __props__.__dict__["ipsec_phase2_interface"] = ipsec_phase2_interface
            __props__.__dict__["log_disk_quota"] = log_disk_quota
            __props__.__dict__["name"] = name
            __props__.__dict__["onetime_schedule"] = onetime_schedule
            __props__.__dict__["proxy"] = proxy
            __props__.__dict__["recurring_schedule"] = recurring_schedule
            __props__.__dict__["service_group"] = service_group
            __props__.__dict__["session"] = session
            __props__.__dict__["snmp_index"] = snmp_index
            __props__.__dict__["sslvpn"] = sslvpn
            __props__.__dict__["user"] = user
            __props__.__dict__["user_group"] = user_group
            __props__.__dict__["vdomparam"] = vdomparam
        super(Vdomproperty, __self__).__init__(
            'fortios:system/vdomproperty:Vdomproperty',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            custom_service: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            dialup_tunnel: Optional[pulumi.Input[str]] = None,
            firewall_address: Optional[pulumi.Input[str]] = None,
            firewall_addrgrp: Optional[pulumi.Input[str]] = None,
            firewall_policy: Optional[pulumi.Input[str]] = None,
            ipsec_phase1: Optional[pulumi.Input[str]] = None,
            ipsec_phase1_interface: Optional[pulumi.Input[str]] = None,
            ipsec_phase2: Optional[pulumi.Input[str]] = None,
            ipsec_phase2_interface: Optional[pulumi.Input[str]] = None,
            log_disk_quota: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            onetime_schedule: Optional[pulumi.Input[str]] = None,
            proxy: Optional[pulumi.Input[str]] = None,
            recurring_schedule: Optional[pulumi.Input[str]] = None,
            service_group: Optional[pulumi.Input[str]] = None,
            session: Optional[pulumi.Input[str]] = None,
            snmp_index: Optional[pulumi.Input[int]] = None,
            sslvpn: Optional[pulumi.Input[str]] = None,
            user: Optional[pulumi.Input[str]] = None,
            user_group: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Vdomproperty':
        """
        Get an existing Vdomproperty resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] custom_service: Maximum guaranteed number of firewall custom services.
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[str] dialup_tunnel: Maximum guaranteed number of dial-up tunnels.
        :param pulumi.Input[str] firewall_address: Maximum guaranteed number of firewall addresses (IPv4, IPv6, multicast).
        :param pulumi.Input[str] firewall_addrgrp: Maximum guaranteed number of firewall address groups (IPv4, IPv6).
        :param pulumi.Input[str] firewall_policy: Maximum guaranteed number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
        :param pulumi.Input[str] ipsec_phase1: Maximum guaranteed number of VPN IPsec phase 1 tunnels.
        :param pulumi.Input[str] ipsec_phase1_interface: Maximum guaranteed number of VPN IPsec phase1 interface tunnels.
        :param pulumi.Input[str] ipsec_phase2: Maximum guaranteed number of VPN IPsec phase 2 tunnels.
        :param pulumi.Input[str] ipsec_phase2_interface: Maximum guaranteed number of VPN IPsec phase2 interface tunnels.
        :param pulumi.Input[str] log_disk_quota: Log disk quota in megabytes (MB). Range depends on how much disk space is available.
        :param pulumi.Input[str] name: VDOM name.
        :param pulumi.Input[str] onetime_schedule: Maximum guaranteed number of firewall one-time schedules.
        :param pulumi.Input[str] proxy: Maximum guaranteed number of concurrent proxy users.
        :param pulumi.Input[str] recurring_schedule: Maximum guaranteed number of firewall recurring schedules.
        :param pulumi.Input[str] service_group: Maximum guaranteed number of firewall service groups.
        :param pulumi.Input[str] session: Maximum guaranteed number of sessions.
        :param pulumi.Input[int] snmp_index: Permanent SNMP Index of the virtual domain. On FortiOS versions 6.2.0-6.2.6: 0 - 4294967295. On FortiOS versions >= 6.4.0: 1 - 2147483647.
        :param pulumi.Input[str] sslvpn: Maximum guaranteed number of SSL-VPNs.
        :param pulumi.Input[str] user: Maximum guaranteed number of local users.
        :param pulumi.Input[str] user_group: Maximum guaranteed number of user groups.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _VdompropertyState.__new__(_VdompropertyState)

        __props__.__dict__["custom_service"] = custom_service
        __props__.__dict__["description"] = description
        __props__.__dict__["dialup_tunnel"] = dialup_tunnel
        __props__.__dict__["firewall_address"] = firewall_address
        __props__.__dict__["firewall_addrgrp"] = firewall_addrgrp
        __props__.__dict__["firewall_policy"] = firewall_policy
        __props__.__dict__["ipsec_phase1"] = ipsec_phase1
        __props__.__dict__["ipsec_phase1_interface"] = ipsec_phase1_interface
        __props__.__dict__["ipsec_phase2"] = ipsec_phase2
        __props__.__dict__["ipsec_phase2_interface"] = ipsec_phase2_interface
        __props__.__dict__["log_disk_quota"] = log_disk_quota
        __props__.__dict__["name"] = name
        __props__.__dict__["onetime_schedule"] = onetime_schedule
        __props__.__dict__["proxy"] = proxy
        __props__.__dict__["recurring_schedule"] = recurring_schedule
        __props__.__dict__["service_group"] = service_group
        __props__.__dict__["session"] = session
        __props__.__dict__["snmp_index"] = snmp_index
        __props__.__dict__["sslvpn"] = sslvpn
        __props__.__dict__["user"] = user
        __props__.__dict__["user_group"] = user_group
        __props__.__dict__["vdomparam"] = vdomparam
        return Vdomproperty(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="customService")
    def custom_service(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of firewall custom services.
        """
        return pulumi.get(self, "custom_service")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="dialupTunnel")
    def dialup_tunnel(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of dial-up tunnels.
        """
        return pulumi.get(self, "dialup_tunnel")

    @property
    @pulumi.getter(name="firewallAddress")
    def firewall_address(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of firewall addresses (IPv4, IPv6, multicast).
        """
        return pulumi.get(self, "firewall_address")

    @property
    @pulumi.getter(name="firewallAddrgrp")
    def firewall_addrgrp(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of firewall address groups (IPv4, IPv6).
        """
        return pulumi.get(self, "firewall_addrgrp")

    @property
    @pulumi.getter(name="firewallPolicy")
    def firewall_policy(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
        """
        return pulumi.get(self, "firewall_policy")

    @property
    @pulumi.getter(name="ipsecPhase1")
    def ipsec_phase1(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of VPN IPsec phase 1 tunnels.
        """
        return pulumi.get(self, "ipsec_phase1")

    @property
    @pulumi.getter(name="ipsecPhase1Interface")
    def ipsec_phase1_interface(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of VPN IPsec phase1 interface tunnels.
        """
        return pulumi.get(self, "ipsec_phase1_interface")

    @property
    @pulumi.getter(name="ipsecPhase2")
    def ipsec_phase2(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of VPN IPsec phase 2 tunnels.
        """
        return pulumi.get(self, "ipsec_phase2")

    @property
    @pulumi.getter(name="ipsecPhase2Interface")
    def ipsec_phase2_interface(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of VPN IPsec phase2 interface tunnels.
        """
        return pulumi.get(self, "ipsec_phase2_interface")

    @property
    @pulumi.getter(name="logDiskQuota")
    def log_disk_quota(self) -> pulumi.Output[str]:
        """
        Log disk quota in megabytes (MB). Range depends on how much disk space is available.
        """
        return pulumi.get(self, "log_disk_quota")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        VDOM name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="onetimeSchedule")
    def onetime_schedule(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of firewall one-time schedules.
        """
        return pulumi.get(self, "onetime_schedule")

    @property
    @pulumi.getter
    def proxy(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of concurrent proxy users.
        """
        return pulumi.get(self, "proxy")

    @property
    @pulumi.getter(name="recurringSchedule")
    def recurring_schedule(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of firewall recurring schedules.
        """
        return pulumi.get(self, "recurring_schedule")

    @property
    @pulumi.getter(name="serviceGroup")
    def service_group(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of firewall service groups.
        """
        return pulumi.get(self, "service_group")

    @property
    @pulumi.getter
    def session(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of sessions.
        """
        return pulumi.get(self, "session")

    @property
    @pulumi.getter(name="snmpIndex")
    def snmp_index(self) -> pulumi.Output[int]:
        """
        Permanent SNMP Index of the virtual domain. On FortiOS versions 6.2.0-6.2.6: 0 - 4294967295. On FortiOS versions >= 6.4.0: 1 - 2147483647.
        """
        return pulumi.get(self, "snmp_index")

    @property
    @pulumi.getter
    def sslvpn(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of SSL-VPNs.
        """
        return pulumi.get(self, "sslvpn")

    @property
    @pulumi.getter
    def user(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of local users.
        """
        return pulumi.get(self, "user")

    @property
    @pulumi.getter(name="userGroup")
    def user_group(self) -> pulumi.Output[str]:
        """
        Maximum guaranteed number of user groups.
        """
        return pulumi.get(self, "user_group")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[str]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

