# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['HamonitorArgs', 'Hamonitor']

@pulumi.input_type
class HamonitorArgs:
    def __init__(__self__, *,
                 monitor_vlan: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 vlan_hb_interval: Optional[pulumi.Input[int]] = None,
                 vlan_hb_lost_threshold: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a Hamonitor resource.
        :param pulumi.Input[str] monitor_vlan: Enable/disable monitor VLAN interfaces. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[int] vlan_hb_interval: Configure heartbeat interval (seconds).
        :param pulumi.Input[int] vlan_hb_lost_threshold: VLAN lost heartbeat threshold (1 - 60).
        """
        if monitor_vlan is not None:
            pulumi.set(__self__, "monitor_vlan", monitor_vlan)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if vlan_hb_interval is not None:
            pulumi.set(__self__, "vlan_hb_interval", vlan_hb_interval)
        if vlan_hb_lost_threshold is not None:
            pulumi.set(__self__, "vlan_hb_lost_threshold", vlan_hb_lost_threshold)

    @property
    @pulumi.getter(name="monitorVlan")
    def monitor_vlan(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable monitor VLAN interfaces. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "monitor_vlan")

    @monitor_vlan.setter
    def monitor_vlan(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "monitor_vlan", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="vlanHbInterval")
    def vlan_hb_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Configure heartbeat interval (seconds).
        """
        return pulumi.get(self, "vlan_hb_interval")

    @vlan_hb_interval.setter
    def vlan_hb_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "vlan_hb_interval", value)

    @property
    @pulumi.getter(name="vlanHbLostThreshold")
    def vlan_hb_lost_threshold(self) -> Optional[pulumi.Input[int]]:
        """
        VLAN lost heartbeat threshold (1 - 60).
        """
        return pulumi.get(self, "vlan_hb_lost_threshold")

    @vlan_hb_lost_threshold.setter
    def vlan_hb_lost_threshold(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "vlan_hb_lost_threshold", value)


@pulumi.input_type
class _HamonitorState:
    def __init__(__self__, *,
                 monitor_vlan: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 vlan_hb_interval: Optional[pulumi.Input[int]] = None,
                 vlan_hb_lost_threshold: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering Hamonitor resources.
        :param pulumi.Input[str] monitor_vlan: Enable/disable monitor VLAN interfaces. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[int] vlan_hb_interval: Configure heartbeat interval (seconds).
        :param pulumi.Input[int] vlan_hb_lost_threshold: VLAN lost heartbeat threshold (1 - 60).
        """
        if monitor_vlan is not None:
            pulumi.set(__self__, "monitor_vlan", monitor_vlan)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if vlan_hb_interval is not None:
            pulumi.set(__self__, "vlan_hb_interval", vlan_hb_interval)
        if vlan_hb_lost_threshold is not None:
            pulumi.set(__self__, "vlan_hb_lost_threshold", vlan_hb_lost_threshold)

    @property
    @pulumi.getter(name="monitorVlan")
    def monitor_vlan(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable monitor VLAN interfaces. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "monitor_vlan")

    @monitor_vlan.setter
    def monitor_vlan(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "monitor_vlan", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="vlanHbInterval")
    def vlan_hb_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Configure heartbeat interval (seconds).
        """
        return pulumi.get(self, "vlan_hb_interval")

    @vlan_hb_interval.setter
    def vlan_hb_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "vlan_hb_interval", value)

    @property
    @pulumi.getter(name="vlanHbLostThreshold")
    def vlan_hb_lost_threshold(self) -> Optional[pulumi.Input[int]]:
        """
        VLAN lost heartbeat threshold (1 - 60).
        """
        return pulumi.get(self, "vlan_hb_lost_threshold")

    @vlan_hb_lost_threshold.setter
    def vlan_hb_lost_threshold(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "vlan_hb_lost_threshold", value)


class Hamonitor(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 monitor_vlan: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 vlan_hb_interval: Optional[pulumi.Input[int]] = None,
                 vlan_hb_lost_threshold: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Configure HA monitor.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.system.Hamonitor("trname",
            monitor_vlan="disable",
            vlan_hb_interval=5,
            vlan_hb_lost_threshold=3)
        ```

        ## Import

        System HaMonitor can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:system/hamonitor:Hamonitor labelname SystemHaMonitor
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:system/hamonitor:Hamonitor labelname SystemHaMonitor
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] monitor_vlan: Enable/disable monitor VLAN interfaces. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[int] vlan_hb_interval: Configure heartbeat interval (seconds).
        :param pulumi.Input[int] vlan_hb_lost_threshold: VLAN lost heartbeat threshold (1 - 60).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[HamonitorArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure HA monitor.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.system.Hamonitor("trname",
            monitor_vlan="disable",
            vlan_hb_interval=5,
            vlan_hb_lost_threshold=3)
        ```

        ## Import

        System HaMonitor can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:system/hamonitor:Hamonitor labelname SystemHaMonitor
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:system/hamonitor:Hamonitor labelname SystemHaMonitor
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param HamonitorArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(HamonitorArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 monitor_vlan: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 vlan_hb_interval: Optional[pulumi.Input[int]] = None,
                 vlan_hb_lost_threshold: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = HamonitorArgs.__new__(HamonitorArgs)

            __props__.__dict__["monitor_vlan"] = monitor_vlan
            __props__.__dict__["vdomparam"] = vdomparam
            __props__.__dict__["vlan_hb_interval"] = vlan_hb_interval
            __props__.__dict__["vlan_hb_lost_threshold"] = vlan_hb_lost_threshold
        super(Hamonitor, __self__).__init__(
            'fortios:system/hamonitor:Hamonitor',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            monitor_vlan: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None,
            vlan_hb_interval: Optional[pulumi.Input[int]] = None,
            vlan_hb_lost_threshold: Optional[pulumi.Input[int]] = None) -> 'Hamonitor':
        """
        Get an existing Hamonitor resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] monitor_vlan: Enable/disable monitor VLAN interfaces. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[int] vlan_hb_interval: Configure heartbeat interval (seconds).
        :param pulumi.Input[int] vlan_hb_lost_threshold: VLAN lost heartbeat threshold (1 - 60).
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _HamonitorState.__new__(_HamonitorState)

        __props__.__dict__["monitor_vlan"] = monitor_vlan
        __props__.__dict__["vdomparam"] = vdomparam
        __props__.__dict__["vlan_hb_interval"] = vlan_hb_interval
        __props__.__dict__["vlan_hb_lost_threshold"] = vlan_hb_lost_threshold
        return Hamonitor(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="monitorVlan")
    def monitor_vlan(self) -> pulumi.Output[str]:
        """
        Enable/disable monitor VLAN interfaces. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "monitor_vlan")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[str]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @property
    @pulumi.getter(name="vlanHbInterval")
    def vlan_hb_interval(self) -> pulumi.Output[int]:
        """
        Configure heartbeat interval (seconds).
        """
        return pulumi.get(self, "vlan_hb_interval")

    @property
    @pulumi.getter(name="vlanHbLostThreshold")
    def vlan_hb_lost_threshold(self) -> pulumi.Output[int]:
        """
        VLAN lost heartbeat threshold (1 - 60).
        """
        return pulumi.get(self, "vlan_hb_lost_threshold")

