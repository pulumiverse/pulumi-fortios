# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SettingArgs', 'Setting']

@pulumi.input_type
class SettingArgs:
    def __init__(__self__, *,
                 active_auth_scheme: Optional[pulumi.Input[str]] = None,
                 auth_https: Optional[pulumi.Input[str]] = None,
                 captive_portal: Optional[pulumi.Input[str]] = None,
                 captive_portal6: Optional[pulumi.Input[str]] = None,
                 captive_portal_ip: Optional[pulumi.Input[str]] = None,
                 captive_portal_ip6: Optional[pulumi.Input[str]] = None,
                 captive_portal_port: Optional[pulumi.Input[int]] = None,
                 captive_portal_ssl_port: Optional[pulumi.Input[int]] = None,
                 captive_portal_type: Optional[pulumi.Input[str]] = None,
                 cert_auth: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal_ip: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal_port: Optional[pulumi.Input[int]] = None,
                 cookie_max_age: Optional[pulumi.Input[int]] = None,
                 cookie_refresh_div: Optional[pulumi.Input[int]] = None,
                 dev_ranges: Optional[pulumi.Input[Sequence[pulumi.Input['SettingDevRangeArgs']]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 ip_auth_cookie: Optional[pulumi.Input[str]] = None,
                 persistent_cookie: Optional[pulumi.Input[str]] = None,
                 sso_auth_scheme: Optional[pulumi.Input[str]] = None,
                 update_time: Optional[pulumi.Input[str]] = None,
                 user_cert_cas: Optional[pulumi.Input[Sequence[pulumi.Input['SettingUserCertCaArgs']]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Setting resource.
        :param pulumi.Input[str] active_auth_scheme: Active authentication method (scheme name).
        :param pulumi.Input[str] auth_https: Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] captive_portal: Captive portal host name.
        :param pulumi.Input[str] captive_portal6: IPv6 captive portal host name.
        :param pulumi.Input[str] captive_portal_ip: Captive portal IP address.
        :param pulumi.Input[str] captive_portal_ip6: Captive portal IPv6 address.
        :param pulumi.Input[int] captive_portal_port: Captive portal port number (1 - 65535, default = 7830).
        :param pulumi.Input[int] captive_portal_ssl_port: Captive portal SSL port number (1 - 65535, default = 7831).
        :param pulumi.Input[str] captive_portal_type: Captive portal type. Valid values: `fqdn`, `ip`.
        :param pulumi.Input[str] cert_auth: Enable/disable redirecting certificate authentication to HTTPS portal. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cert_captive_portal: Certificate captive portal host name.
        :param pulumi.Input[str] cert_captive_portal_ip: Certificate captive portal IP address.
        :param pulumi.Input[int] cert_captive_portal_port: Certificate captive portal port number (1 - 65535, default = 7832).
        :param pulumi.Input[int] cookie_max_age: Persistent web portal cookie maximum age in minutes (30 - 10080 (1 week), default = 480 (8 hours)).
        :param pulumi.Input[int] cookie_refresh_div: Refresh rate divider of persistent web portal cookie (default = 2). Refresh value = cookie-max-age/cookie-refresh-div.
        :param pulumi.Input[Sequence[pulumi.Input['SettingDevRangeArgs']]] dev_ranges: Address range for the IP based device query. The structure of `dev_range` block is documented below.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] ip_auth_cookie: Enable/disable persistent cookie on IP based web portal authentication (default = disable). Valid values: `enable`, `disable`.
        :param pulumi.Input[str] persistent_cookie: Enable/disable persistent cookie on web portal authentication (default = enable). Valid values: `enable`, `disable`.
        :param pulumi.Input[str] sso_auth_scheme: Single-Sign-On authentication method (scheme name).
        :param pulumi.Input[str] update_time: Time of the last update.
        :param pulumi.Input[Sequence[pulumi.Input['SettingUserCertCaArgs']]] user_cert_cas: CA certificate used for client certificate verification. The structure of `user_cert_ca` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if active_auth_scheme is not None:
            pulumi.set(__self__, "active_auth_scheme", active_auth_scheme)
        if auth_https is not None:
            pulumi.set(__self__, "auth_https", auth_https)
        if captive_portal is not None:
            pulumi.set(__self__, "captive_portal", captive_portal)
        if captive_portal6 is not None:
            pulumi.set(__self__, "captive_portal6", captive_portal6)
        if captive_portal_ip is not None:
            pulumi.set(__self__, "captive_portal_ip", captive_portal_ip)
        if captive_portal_ip6 is not None:
            pulumi.set(__self__, "captive_portal_ip6", captive_portal_ip6)
        if captive_portal_port is not None:
            pulumi.set(__self__, "captive_portal_port", captive_portal_port)
        if captive_portal_ssl_port is not None:
            pulumi.set(__self__, "captive_portal_ssl_port", captive_portal_ssl_port)
        if captive_portal_type is not None:
            pulumi.set(__self__, "captive_portal_type", captive_portal_type)
        if cert_auth is not None:
            pulumi.set(__self__, "cert_auth", cert_auth)
        if cert_captive_portal is not None:
            pulumi.set(__self__, "cert_captive_portal", cert_captive_portal)
        if cert_captive_portal_ip is not None:
            pulumi.set(__self__, "cert_captive_portal_ip", cert_captive_portal_ip)
        if cert_captive_portal_port is not None:
            pulumi.set(__self__, "cert_captive_portal_port", cert_captive_portal_port)
        if cookie_max_age is not None:
            pulumi.set(__self__, "cookie_max_age", cookie_max_age)
        if cookie_refresh_div is not None:
            pulumi.set(__self__, "cookie_refresh_div", cookie_refresh_div)
        if dev_ranges is not None:
            pulumi.set(__self__, "dev_ranges", dev_ranges)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if ip_auth_cookie is not None:
            pulumi.set(__self__, "ip_auth_cookie", ip_auth_cookie)
        if persistent_cookie is not None:
            pulumi.set(__self__, "persistent_cookie", persistent_cookie)
        if sso_auth_scheme is not None:
            pulumi.set(__self__, "sso_auth_scheme", sso_auth_scheme)
        if update_time is not None:
            pulumi.set(__self__, "update_time", update_time)
        if user_cert_cas is not None:
            pulumi.set(__self__, "user_cert_cas", user_cert_cas)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="activeAuthScheme")
    def active_auth_scheme(self) -> Optional[pulumi.Input[str]]:
        """
        Active authentication method (scheme name).
        """
        return pulumi.get(self, "active_auth_scheme")

    @active_auth_scheme.setter
    def active_auth_scheme(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "active_auth_scheme", value)

    @property
    @pulumi.getter(name="authHttps")
    def auth_https(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "auth_https")

    @auth_https.setter
    def auth_https(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "auth_https", value)

    @property
    @pulumi.getter(name="captivePortal")
    def captive_portal(self) -> Optional[pulumi.Input[str]]:
        """
        Captive portal host name.
        """
        return pulumi.get(self, "captive_portal")

    @captive_portal.setter
    def captive_portal(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "captive_portal", value)

    @property
    @pulumi.getter(name="captivePortal6")
    def captive_portal6(self) -> Optional[pulumi.Input[str]]:
        """
        IPv6 captive portal host name.
        """
        return pulumi.get(self, "captive_portal6")

    @captive_portal6.setter
    def captive_portal6(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "captive_portal6", value)

    @property
    @pulumi.getter(name="captivePortalIp")
    def captive_portal_ip(self) -> Optional[pulumi.Input[str]]:
        """
        Captive portal IP address.
        """
        return pulumi.get(self, "captive_portal_ip")

    @captive_portal_ip.setter
    def captive_portal_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "captive_portal_ip", value)

    @property
    @pulumi.getter(name="captivePortalIp6")
    def captive_portal_ip6(self) -> Optional[pulumi.Input[str]]:
        """
        Captive portal IPv6 address.
        """
        return pulumi.get(self, "captive_portal_ip6")

    @captive_portal_ip6.setter
    def captive_portal_ip6(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "captive_portal_ip6", value)

    @property
    @pulumi.getter(name="captivePortalPort")
    def captive_portal_port(self) -> Optional[pulumi.Input[int]]:
        """
        Captive portal port number (1 - 65535, default = 7830).
        """
        return pulumi.get(self, "captive_portal_port")

    @captive_portal_port.setter
    def captive_portal_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "captive_portal_port", value)

    @property
    @pulumi.getter(name="captivePortalSslPort")
    def captive_portal_ssl_port(self) -> Optional[pulumi.Input[int]]:
        """
        Captive portal SSL port number (1 - 65535, default = 7831).
        """
        return pulumi.get(self, "captive_portal_ssl_port")

    @captive_portal_ssl_port.setter
    def captive_portal_ssl_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "captive_portal_ssl_port", value)

    @property
    @pulumi.getter(name="captivePortalType")
    def captive_portal_type(self) -> Optional[pulumi.Input[str]]:
        """
        Captive portal type. Valid values: `fqdn`, `ip`.
        """
        return pulumi.get(self, "captive_portal_type")

    @captive_portal_type.setter
    def captive_portal_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "captive_portal_type", value)

    @property
    @pulumi.getter(name="certAuth")
    def cert_auth(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable redirecting certificate authentication to HTTPS portal. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cert_auth")

    @cert_auth.setter
    def cert_auth(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cert_auth", value)

    @property
    @pulumi.getter(name="certCaptivePortal")
    def cert_captive_portal(self) -> Optional[pulumi.Input[str]]:
        """
        Certificate captive portal host name.
        """
        return pulumi.get(self, "cert_captive_portal")

    @cert_captive_portal.setter
    def cert_captive_portal(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cert_captive_portal", value)

    @property
    @pulumi.getter(name="certCaptivePortalIp")
    def cert_captive_portal_ip(self) -> Optional[pulumi.Input[str]]:
        """
        Certificate captive portal IP address.
        """
        return pulumi.get(self, "cert_captive_portal_ip")

    @cert_captive_portal_ip.setter
    def cert_captive_portal_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cert_captive_portal_ip", value)

    @property
    @pulumi.getter(name="certCaptivePortalPort")
    def cert_captive_portal_port(self) -> Optional[pulumi.Input[int]]:
        """
        Certificate captive portal port number (1 - 65535, default = 7832).
        """
        return pulumi.get(self, "cert_captive_portal_port")

    @cert_captive_portal_port.setter
    def cert_captive_portal_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cert_captive_portal_port", value)

    @property
    @pulumi.getter(name="cookieMaxAge")
    def cookie_max_age(self) -> Optional[pulumi.Input[int]]:
        """
        Persistent web portal cookie maximum age in minutes (30 - 10080 (1 week), default = 480 (8 hours)).
        """
        return pulumi.get(self, "cookie_max_age")

    @cookie_max_age.setter
    def cookie_max_age(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cookie_max_age", value)

    @property
    @pulumi.getter(name="cookieRefreshDiv")
    def cookie_refresh_div(self) -> Optional[pulumi.Input[int]]:
        """
        Refresh rate divider of persistent web portal cookie (default = 2). Refresh value = cookie-max-age/cookie-refresh-div.
        """
        return pulumi.get(self, "cookie_refresh_div")

    @cookie_refresh_div.setter
    def cookie_refresh_div(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cookie_refresh_div", value)

    @property
    @pulumi.getter(name="devRanges")
    def dev_ranges(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SettingDevRangeArgs']]]]:
        """
        Address range for the IP based device query. The structure of `dev_range` block is documented below.
        """
        return pulumi.get(self, "dev_ranges")

    @dev_ranges.setter
    def dev_ranges(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SettingDevRangeArgs']]]]):
        pulumi.set(self, "dev_ranges", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="ipAuthCookie")
    def ip_auth_cookie(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable persistent cookie on IP based web portal authentication (default = disable). Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ip_auth_cookie")

    @ip_auth_cookie.setter
    def ip_auth_cookie(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_auth_cookie", value)

    @property
    @pulumi.getter(name="persistentCookie")
    def persistent_cookie(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable persistent cookie on web portal authentication (default = enable). Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "persistent_cookie")

    @persistent_cookie.setter
    def persistent_cookie(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "persistent_cookie", value)

    @property
    @pulumi.getter(name="ssoAuthScheme")
    def sso_auth_scheme(self) -> Optional[pulumi.Input[str]]:
        """
        Single-Sign-On authentication method (scheme name).
        """
        return pulumi.get(self, "sso_auth_scheme")

    @sso_auth_scheme.setter
    def sso_auth_scheme(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sso_auth_scheme", value)

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> Optional[pulumi.Input[str]]:
        """
        Time of the last update.
        """
        return pulumi.get(self, "update_time")

    @update_time.setter
    def update_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "update_time", value)

    @property
    @pulumi.getter(name="userCertCas")
    def user_cert_cas(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SettingUserCertCaArgs']]]]:
        """
        CA certificate used for client certificate verification. The structure of `user_cert_ca` block is documented below.
        """
        return pulumi.get(self, "user_cert_cas")

    @user_cert_cas.setter
    def user_cert_cas(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SettingUserCertCaArgs']]]]):
        pulumi.set(self, "user_cert_cas", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _SettingState:
    def __init__(__self__, *,
                 active_auth_scheme: Optional[pulumi.Input[str]] = None,
                 auth_https: Optional[pulumi.Input[str]] = None,
                 captive_portal: Optional[pulumi.Input[str]] = None,
                 captive_portal6: Optional[pulumi.Input[str]] = None,
                 captive_portal_ip: Optional[pulumi.Input[str]] = None,
                 captive_portal_ip6: Optional[pulumi.Input[str]] = None,
                 captive_portal_port: Optional[pulumi.Input[int]] = None,
                 captive_portal_ssl_port: Optional[pulumi.Input[int]] = None,
                 captive_portal_type: Optional[pulumi.Input[str]] = None,
                 cert_auth: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal_ip: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal_port: Optional[pulumi.Input[int]] = None,
                 cookie_max_age: Optional[pulumi.Input[int]] = None,
                 cookie_refresh_div: Optional[pulumi.Input[int]] = None,
                 dev_ranges: Optional[pulumi.Input[Sequence[pulumi.Input['SettingDevRangeArgs']]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 ip_auth_cookie: Optional[pulumi.Input[str]] = None,
                 persistent_cookie: Optional[pulumi.Input[str]] = None,
                 sso_auth_scheme: Optional[pulumi.Input[str]] = None,
                 update_time: Optional[pulumi.Input[str]] = None,
                 user_cert_cas: Optional[pulumi.Input[Sequence[pulumi.Input['SettingUserCertCaArgs']]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Setting resources.
        :param pulumi.Input[str] active_auth_scheme: Active authentication method (scheme name).
        :param pulumi.Input[str] auth_https: Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] captive_portal: Captive portal host name.
        :param pulumi.Input[str] captive_portal6: IPv6 captive portal host name.
        :param pulumi.Input[str] captive_portal_ip: Captive portal IP address.
        :param pulumi.Input[str] captive_portal_ip6: Captive portal IPv6 address.
        :param pulumi.Input[int] captive_portal_port: Captive portal port number (1 - 65535, default = 7830).
        :param pulumi.Input[int] captive_portal_ssl_port: Captive portal SSL port number (1 - 65535, default = 7831).
        :param pulumi.Input[str] captive_portal_type: Captive portal type. Valid values: `fqdn`, `ip`.
        :param pulumi.Input[str] cert_auth: Enable/disable redirecting certificate authentication to HTTPS portal. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cert_captive_portal: Certificate captive portal host name.
        :param pulumi.Input[str] cert_captive_portal_ip: Certificate captive portal IP address.
        :param pulumi.Input[int] cert_captive_portal_port: Certificate captive portal port number (1 - 65535, default = 7832).
        :param pulumi.Input[int] cookie_max_age: Persistent web portal cookie maximum age in minutes (30 - 10080 (1 week), default = 480 (8 hours)).
        :param pulumi.Input[int] cookie_refresh_div: Refresh rate divider of persistent web portal cookie (default = 2). Refresh value = cookie-max-age/cookie-refresh-div.
        :param pulumi.Input[Sequence[pulumi.Input['SettingDevRangeArgs']]] dev_ranges: Address range for the IP based device query. The structure of `dev_range` block is documented below.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] ip_auth_cookie: Enable/disable persistent cookie on IP based web portal authentication (default = disable). Valid values: `enable`, `disable`.
        :param pulumi.Input[str] persistent_cookie: Enable/disable persistent cookie on web portal authentication (default = enable). Valid values: `enable`, `disable`.
        :param pulumi.Input[str] sso_auth_scheme: Single-Sign-On authentication method (scheme name).
        :param pulumi.Input[str] update_time: Time of the last update.
        :param pulumi.Input[Sequence[pulumi.Input['SettingUserCertCaArgs']]] user_cert_cas: CA certificate used for client certificate verification. The structure of `user_cert_ca` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if active_auth_scheme is not None:
            pulumi.set(__self__, "active_auth_scheme", active_auth_scheme)
        if auth_https is not None:
            pulumi.set(__self__, "auth_https", auth_https)
        if captive_portal is not None:
            pulumi.set(__self__, "captive_portal", captive_portal)
        if captive_portal6 is not None:
            pulumi.set(__self__, "captive_portal6", captive_portal6)
        if captive_portal_ip is not None:
            pulumi.set(__self__, "captive_portal_ip", captive_portal_ip)
        if captive_portal_ip6 is not None:
            pulumi.set(__self__, "captive_portal_ip6", captive_portal_ip6)
        if captive_portal_port is not None:
            pulumi.set(__self__, "captive_portal_port", captive_portal_port)
        if captive_portal_ssl_port is not None:
            pulumi.set(__self__, "captive_portal_ssl_port", captive_portal_ssl_port)
        if captive_portal_type is not None:
            pulumi.set(__self__, "captive_portal_type", captive_portal_type)
        if cert_auth is not None:
            pulumi.set(__self__, "cert_auth", cert_auth)
        if cert_captive_portal is not None:
            pulumi.set(__self__, "cert_captive_portal", cert_captive_portal)
        if cert_captive_portal_ip is not None:
            pulumi.set(__self__, "cert_captive_portal_ip", cert_captive_portal_ip)
        if cert_captive_portal_port is not None:
            pulumi.set(__self__, "cert_captive_portal_port", cert_captive_portal_port)
        if cookie_max_age is not None:
            pulumi.set(__self__, "cookie_max_age", cookie_max_age)
        if cookie_refresh_div is not None:
            pulumi.set(__self__, "cookie_refresh_div", cookie_refresh_div)
        if dev_ranges is not None:
            pulumi.set(__self__, "dev_ranges", dev_ranges)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if ip_auth_cookie is not None:
            pulumi.set(__self__, "ip_auth_cookie", ip_auth_cookie)
        if persistent_cookie is not None:
            pulumi.set(__self__, "persistent_cookie", persistent_cookie)
        if sso_auth_scheme is not None:
            pulumi.set(__self__, "sso_auth_scheme", sso_auth_scheme)
        if update_time is not None:
            pulumi.set(__self__, "update_time", update_time)
        if user_cert_cas is not None:
            pulumi.set(__self__, "user_cert_cas", user_cert_cas)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="activeAuthScheme")
    def active_auth_scheme(self) -> Optional[pulumi.Input[str]]:
        """
        Active authentication method (scheme name).
        """
        return pulumi.get(self, "active_auth_scheme")

    @active_auth_scheme.setter
    def active_auth_scheme(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "active_auth_scheme", value)

    @property
    @pulumi.getter(name="authHttps")
    def auth_https(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "auth_https")

    @auth_https.setter
    def auth_https(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "auth_https", value)

    @property
    @pulumi.getter(name="captivePortal")
    def captive_portal(self) -> Optional[pulumi.Input[str]]:
        """
        Captive portal host name.
        """
        return pulumi.get(self, "captive_portal")

    @captive_portal.setter
    def captive_portal(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "captive_portal", value)

    @property
    @pulumi.getter(name="captivePortal6")
    def captive_portal6(self) -> Optional[pulumi.Input[str]]:
        """
        IPv6 captive portal host name.
        """
        return pulumi.get(self, "captive_portal6")

    @captive_portal6.setter
    def captive_portal6(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "captive_portal6", value)

    @property
    @pulumi.getter(name="captivePortalIp")
    def captive_portal_ip(self) -> Optional[pulumi.Input[str]]:
        """
        Captive portal IP address.
        """
        return pulumi.get(self, "captive_portal_ip")

    @captive_portal_ip.setter
    def captive_portal_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "captive_portal_ip", value)

    @property
    @pulumi.getter(name="captivePortalIp6")
    def captive_portal_ip6(self) -> Optional[pulumi.Input[str]]:
        """
        Captive portal IPv6 address.
        """
        return pulumi.get(self, "captive_portal_ip6")

    @captive_portal_ip6.setter
    def captive_portal_ip6(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "captive_portal_ip6", value)

    @property
    @pulumi.getter(name="captivePortalPort")
    def captive_portal_port(self) -> Optional[pulumi.Input[int]]:
        """
        Captive portal port number (1 - 65535, default = 7830).
        """
        return pulumi.get(self, "captive_portal_port")

    @captive_portal_port.setter
    def captive_portal_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "captive_portal_port", value)

    @property
    @pulumi.getter(name="captivePortalSslPort")
    def captive_portal_ssl_port(self) -> Optional[pulumi.Input[int]]:
        """
        Captive portal SSL port number (1 - 65535, default = 7831).
        """
        return pulumi.get(self, "captive_portal_ssl_port")

    @captive_portal_ssl_port.setter
    def captive_portal_ssl_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "captive_portal_ssl_port", value)

    @property
    @pulumi.getter(name="captivePortalType")
    def captive_portal_type(self) -> Optional[pulumi.Input[str]]:
        """
        Captive portal type. Valid values: `fqdn`, `ip`.
        """
        return pulumi.get(self, "captive_portal_type")

    @captive_portal_type.setter
    def captive_portal_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "captive_portal_type", value)

    @property
    @pulumi.getter(name="certAuth")
    def cert_auth(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable redirecting certificate authentication to HTTPS portal. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cert_auth")

    @cert_auth.setter
    def cert_auth(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cert_auth", value)

    @property
    @pulumi.getter(name="certCaptivePortal")
    def cert_captive_portal(self) -> Optional[pulumi.Input[str]]:
        """
        Certificate captive portal host name.
        """
        return pulumi.get(self, "cert_captive_portal")

    @cert_captive_portal.setter
    def cert_captive_portal(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cert_captive_portal", value)

    @property
    @pulumi.getter(name="certCaptivePortalIp")
    def cert_captive_portal_ip(self) -> Optional[pulumi.Input[str]]:
        """
        Certificate captive portal IP address.
        """
        return pulumi.get(self, "cert_captive_portal_ip")

    @cert_captive_portal_ip.setter
    def cert_captive_portal_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cert_captive_portal_ip", value)

    @property
    @pulumi.getter(name="certCaptivePortalPort")
    def cert_captive_portal_port(self) -> Optional[pulumi.Input[int]]:
        """
        Certificate captive portal port number (1 - 65535, default = 7832).
        """
        return pulumi.get(self, "cert_captive_portal_port")

    @cert_captive_portal_port.setter
    def cert_captive_portal_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cert_captive_portal_port", value)

    @property
    @pulumi.getter(name="cookieMaxAge")
    def cookie_max_age(self) -> Optional[pulumi.Input[int]]:
        """
        Persistent web portal cookie maximum age in minutes (30 - 10080 (1 week), default = 480 (8 hours)).
        """
        return pulumi.get(self, "cookie_max_age")

    @cookie_max_age.setter
    def cookie_max_age(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cookie_max_age", value)

    @property
    @pulumi.getter(name="cookieRefreshDiv")
    def cookie_refresh_div(self) -> Optional[pulumi.Input[int]]:
        """
        Refresh rate divider of persistent web portal cookie (default = 2). Refresh value = cookie-max-age/cookie-refresh-div.
        """
        return pulumi.get(self, "cookie_refresh_div")

    @cookie_refresh_div.setter
    def cookie_refresh_div(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cookie_refresh_div", value)

    @property
    @pulumi.getter(name="devRanges")
    def dev_ranges(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SettingDevRangeArgs']]]]:
        """
        Address range for the IP based device query. The structure of `dev_range` block is documented below.
        """
        return pulumi.get(self, "dev_ranges")

    @dev_ranges.setter
    def dev_ranges(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SettingDevRangeArgs']]]]):
        pulumi.set(self, "dev_ranges", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="ipAuthCookie")
    def ip_auth_cookie(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable persistent cookie on IP based web portal authentication (default = disable). Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ip_auth_cookie")

    @ip_auth_cookie.setter
    def ip_auth_cookie(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_auth_cookie", value)

    @property
    @pulumi.getter(name="persistentCookie")
    def persistent_cookie(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable persistent cookie on web portal authentication (default = enable). Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "persistent_cookie")

    @persistent_cookie.setter
    def persistent_cookie(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "persistent_cookie", value)

    @property
    @pulumi.getter(name="ssoAuthScheme")
    def sso_auth_scheme(self) -> Optional[pulumi.Input[str]]:
        """
        Single-Sign-On authentication method (scheme name).
        """
        return pulumi.get(self, "sso_auth_scheme")

    @sso_auth_scheme.setter
    def sso_auth_scheme(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sso_auth_scheme", value)

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> Optional[pulumi.Input[str]]:
        """
        Time of the last update.
        """
        return pulumi.get(self, "update_time")

    @update_time.setter
    def update_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "update_time", value)

    @property
    @pulumi.getter(name="userCertCas")
    def user_cert_cas(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SettingUserCertCaArgs']]]]:
        """
        CA certificate used for client certificate verification. The structure of `user_cert_ca` block is documented below.
        """
        return pulumi.get(self, "user_cert_cas")

    @user_cert_cas.setter
    def user_cert_cas(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SettingUserCertCaArgs']]]]):
        pulumi.set(self, "user_cert_cas", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Setting(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 active_auth_scheme: Optional[pulumi.Input[str]] = None,
                 auth_https: Optional[pulumi.Input[str]] = None,
                 captive_portal: Optional[pulumi.Input[str]] = None,
                 captive_portal6: Optional[pulumi.Input[str]] = None,
                 captive_portal_ip: Optional[pulumi.Input[str]] = None,
                 captive_portal_ip6: Optional[pulumi.Input[str]] = None,
                 captive_portal_port: Optional[pulumi.Input[int]] = None,
                 captive_portal_ssl_port: Optional[pulumi.Input[int]] = None,
                 captive_portal_type: Optional[pulumi.Input[str]] = None,
                 cert_auth: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal_ip: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal_port: Optional[pulumi.Input[int]] = None,
                 cookie_max_age: Optional[pulumi.Input[int]] = None,
                 cookie_refresh_div: Optional[pulumi.Input[int]] = None,
                 dev_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SettingDevRangeArgs']]]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 ip_auth_cookie: Optional[pulumi.Input[str]] = None,
                 persistent_cookie: Optional[pulumi.Input[str]] = None,
                 sso_auth_scheme: Optional[pulumi.Input[str]] = None,
                 update_time: Optional[pulumi.Input[str]] = None,
                 user_cert_cas: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SettingUserCertCaArgs']]]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure authentication setting.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.authentication.Setting("trname",
            auth_https="enable",
            captive_portal_ip="0.0.0.0",
            captive_portal_ip6="::",
            captive_portal_port=7830,
            captive_portal_ssl_port=7831,
            captive_portal_type="fqdn")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        Authentication Setting can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:authentication/setting:Setting labelname AuthenticationSetting
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:authentication/setting:Setting labelname AuthenticationSetting
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] active_auth_scheme: Active authentication method (scheme name).
        :param pulumi.Input[str] auth_https: Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] captive_portal: Captive portal host name.
        :param pulumi.Input[str] captive_portal6: IPv6 captive portal host name.
        :param pulumi.Input[str] captive_portal_ip: Captive portal IP address.
        :param pulumi.Input[str] captive_portal_ip6: Captive portal IPv6 address.
        :param pulumi.Input[int] captive_portal_port: Captive portal port number (1 - 65535, default = 7830).
        :param pulumi.Input[int] captive_portal_ssl_port: Captive portal SSL port number (1 - 65535, default = 7831).
        :param pulumi.Input[str] captive_portal_type: Captive portal type. Valid values: `fqdn`, `ip`.
        :param pulumi.Input[str] cert_auth: Enable/disable redirecting certificate authentication to HTTPS portal. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cert_captive_portal: Certificate captive portal host name.
        :param pulumi.Input[str] cert_captive_portal_ip: Certificate captive portal IP address.
        :param pulumi.Input[int] cert_captive_portal_port: Certificate captive portal port number (1 - 65535, default = 7832).
        :param pulumi.Input[int] cookie_max_age: Persistent web portal cookie maximum age in minutes (30 - 10080 (1 week), default = 480 (8 hours)).
        :param pulumi.Input[int] cookie_refresh_div: Refresh rate divider of persistent web portal cookie (default = 2). Refresh value = cookie-max-age/cookie-refresh-div.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SettingDevRangeArgs']]]] dev_ranges: Address range for the IP based device query. The structure of `dev_range` block is documented below.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] ip_auth_cookie: Enable/disable persistent cookie on IP based web portal authentication (default = disable). Valid values: `enable`, `disable`.
        :param pulumi.Input[str] persistent_cookie: Enable/disable persistent cookie on web portal authentication (default = enable). Valid values: `enable`, `disable`.
        :param pulumi.Input[str] sso_auth_scheme: Single-Sign-On authentication method (scheme name).
        :param pulumi.Input[str] update_time: Time of the last update.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SettingUserCertCaArgs']]]] user_cert_cas: CA certificate used for client certificate verification. The structure of `user_cert_ca` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SettingArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure authentication setting.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.authentication.Setting("trname",
            auth_https="enable",
            captive_portal_ip="0.0.0.0",
            captive_portal_ip6="::",
            captive_portal_port=7830,
            captive_portal_ssl_port=7831,
            captive_portal_type="fqdn")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        Authentication Setting can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:authentication/setting:Setting labelname AuthenticationSetting
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:authentication/setting:Setting labelname AuthenticationSetting
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param SettingArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SettingArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 active_auth_scheme: Optional[pulumi.Input[str]] = None,
                 auth_https: Optional[pulumi.Input[str]] = None,
                 captive_portal: Optional[pulumi.Input[str]] = None,
                 captive_portal6: Optional[pulumi.Input[str]] = None,
                 captive_portal_ip: Optional[pulumi.Input[str]] = None,
                 captive_portal_ip6: Optional[pulumi.Input[str]] = None,
                 captive_portal_port: Optional[pulumi.Input[int]] = None,
                 captive_portal_ssl_port: Optional[pulumi.Input[int]] = None,
                 captive_portal_type: Optional[pulumi.Input[str]] = None,
                 cert_auth: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal_ip: Optional[pulumi.Input[str]] = None,
                 cert_captive_portal_port: Optional[pulumi.Input[int]] = None,
                 cookie_max_age: Optional[pulumi.Input[int]] = None,
                 cookie_refresh_div: Optional[pulumi.Input[int]] = None,
                 dev_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SettingDevRangeArgs']]]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 ip_auth_cookie: Optional[pulumi.Input[str]] = None,
                 persistent_cookie: Optional[pulumi.Input[str]] = None,
                 sso_auth_scheme: Optional[pulumi.Input[str]] = None,
                 update_time: Optional[pulumi.Input[str]] = None,
                 user_cert_cas: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SettingUserCertCaArgs']]]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SettingArgs.__new__(SettingArgs)

            __props__.__dict__["active_auth_scheme"] = active_auth_scheme
            __props__.__dict__["auth_https"] = auth_https
            __props__.__dict__["captive_portal"] = captive_portal
            __props__.__dict__["captive_portal6"] = captive_portal6
            __props__.__dict__["captive_portal_ip"] = captive_portal_ip
            __props__.__dict__["captive_portal_ip6"] = captive_portal_ip6
            __props__.__dict__["captive_portal_port"] = captive_portal_port
            __props__.__dict__["captive_portal_ssl_port"] = captive_portal_ssl_port
            __props__.__dict__["captive_portal_type"] = captive_portal_type
            __props__.__dict__["cert_auth"] = cert_auth
            __props__.__dict__["cert_captive_portal"] = cert_captive_portal
            __props__.__dict__["cert_captive_portal_ip"] = cert_captive_portal_ip
            __props__.__dict__["cert_captive_portal_port"] = cert_captive_portal_port
            __props__.__dict__["cookie_max_age"] = cookie_max_age
            __props__.__dict__["cookie_refresh_div"] = cookie_refresh_div
            __props__.__dict__["dev_ranges"] = dev_ranges
            __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
            __props__.__dict__["get_all_tables"] = get_all_tables
            __props__.__dict__["ip_auth_cookie"] = ip_auth_cookie
            __props__.__dict__["persistent_cookie"] = persistent_cookie
            __props__.__dict__["sso_auth_scheme"] = sso_auth_scheme
            __props__.__dict__["update_time"] = update_time
            __props__.__dict__["user_cert_cas"] = user_cert_cas
            __props__.__dict__["vdomparam"] = vdomparam
        super(Setting, __self__).__init__(
            'fortios:authentication/setting:Setting',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            active_auth_scheme: Optional[pulumi.Input[str]] = None,
            auth_https: Optional[pulumi.Input[str]] = None,
            captive_portal: Optional[pulumi.Input[str]] = None,
            captive_portal6: Optional[pulumi.Input[str]] = None,
            captive_portal_ip: Optional[pulumi.Input[str]] = None,
            captive_portal_ip6: Optional[pulumi.Input[str]] = None,
            captive_portal_port: Optional[pulumi.Input[int]] = None,
            captive_portal_ssl_port: Optional[pulumi.Input[int]] = None,
            captive_portal_type: Optional[pulumi.Input[str]] = None,
            cert_auth: Optional[pulumi.Input[str]] = None,
            cert_captive_portal: Optional[pulumi.Input[str]] = None,
            cert_captive_portal_ip: Optional[pulumi.Input[str]] = None,
            cert_captive_portal_port: Optional[pulumi.Input[int]] = None,
            cookie_max_age: Optional[pulumi.Input[int]] = None,
            cookie_refresh_div: Optional[pulumi.Input[int]] = None,
            dev_ranges: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SettingDevRangeArgs']]]]] = None,
            dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
            get_all_tables: Optional[pulumi.Input[str]] = None,
            ip_auth_cookie: Optional[pulumi.Input[str]] = None,
            persistent_cookie: Optional[pulumi.Input[str]] = None,
            sso_auth_scheme: Optional[pulumi.Input[str]] = None,
            update_time: Optional[pulumi.Input[str]] = None,
            user_cert_cas: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SettingUserCertCaArgs']]]]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Setting':
        """
        Get an existing Setting resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] active_auth_scheme: Active authentication method (scheme name).
        :param pulumi.Input[str] auth_https: Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] captive_portal: Captive portal host name.
        :param pulumi.Input[str] captive_portal6: IPv6 captive portal host name.
        :param pulumi.Input[str] captive_portal_ip: Captive portal IP address.
        :param pulumi.Input[str] captive_portal_ip6: Captive portal IPv6 address.
        :param pulumi.Input[int] captive_portal_port: Captive portal port number (1 - 65535, default = 7830).
        :param pulumi.Input[int] captive_portal_ssl_port: Captive portal SSL port number (1 - 65535, default = 7831).
        :param pulumi.Input[str] captive_portal_type: Captive portal type. Valid values: `fqdn`, `ip`.
        :param pulumi.Input[str] cert_auth: Enable/disable redirecting certificate authentication to HTTPS portal. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cert_captive_portal: Certificate captive portal host name.
        :param pulumi.Input[str] cert_captive_portal_ip: Certificate captive portal IP address.
        :param pulumi.Input[int] cert_captive_portal_port: Certificate captive portal port number (1 - 65535, default = 7832).
        :param pulumi.Input[int] cookie_max_age: Persistent web portal cookie maximum age in minutes (30 - 10080 (1 week), default = 480 (8 hours)).
        :param pulumi.Input[int] cookie_refresh_div: Refresh rate divider of persistent web portal cookie (default = 2). Refresh value = cookie-max-age/cookie-refresh-div.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SettingDevRangeArgs']]]] dev_ranges: Address range for the IP based device query. The structure of `dev_range` block is documented below.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] ip_auth_cookie: Enable/disable persistent cookie on IP based web portal authentication (default = disable). Valid values: `enable`, `disable`.
        :param pulumi.Input[str] persistent_cookie: Enable/disable persistent cookie on web portal authentication (default = enable). Valid values: `enable`, `disable`.
        :param pulumi.Input[str] sso_auth_scheme: Single-Sign-On authentication method (scheme name).
        :param pulumi.Input[str] update_time: Time of the last update.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SettingUserCertCaArgs']]]] user_cert_cas: CA certificate used for client certificate verification. The structure of `user_cert_ca` block is documented below.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SettingState.__new__(_SettingState)

        __props__.__dict__["active_auth_scheme"] = active_auth_scheme
        __props__.__dict__["auth_https"] = auth_https
        __props__.__dict__["captive_portal"] = captive_portal
        __props__.__dict__["captive_portal6"] = captive_portal6
        __props__.__dict__["captive_portal_ip"] = captive_portal_ip
        __props__.__dict__["captive_portal_ip6"] = captive_portal_ip6
        __props__.__dict__["captive_portal_port"] = captive_portal_port
        __props__.__dict__["captive_portal_ssl_port"] = captive_portal_ssl_port
        __props__.__dict__["captive_portal_type"] = captive_portal_type
        __props__.__dict__["cert_auth"] = cert_auth
        __props__.__dict__["cert_captive_portal"] = cert_captive_portal
        __props__.__dict__["cert_captive_portal_ip"] = cert_captive_portal_ip
        __props__.__dict__["cert_captive_portal_port"] = cert_captive_portal_port
        __props__.__dict__["cookie_max_age"] = cookie_max_age
        __props__.__dict__["cookie_refresh_div"] = cookie_refresh_div
        __props__.__dict__["dev_ranges"] = dev_ranges
        __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
        __props__.__dict__["get_all_tables"] = get_all_tables
        __props__.__dict__["ip_auth_cookie"] = ip_auth_cookie
        __props__.__dict__["persistent_cookie"] = persistent_cookie
        __props__.__dict__["sso_auth_scheme"] = sso_auth_scheme
        __props__.__dict__["update_time"] = update_time
        __props__.__dict__["user_cert_cas"] = user_cert_cas
        __props__.__dict__["vdomparam"] = vdomparam
        return Setting(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="activeAuthScheme")
    def active_auth_scheme(self) -> pulumi.Output[str]:
        """
        Active authentication method (scheme name).
        """
        return pulumi.get(self, "active_auth_scheme")

    @property
    @pulumi.getter(name="authHttps")
    def auth_https(self) -> pulumi.Output[str]:
        """
        Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "auth_https")

    @property
    @pulumi.getter(name="captivePortal")
    def captive_portal(self) -> pulumi.Output[str]:
        """
        Captive portal host name.
        """
        return pulumi.get(self, "captive_portal")

    @property
    @pulumi.getter(name="captivePortal6")
    def captive_portal6(self) -> pulumi.Output[str]:
        """
        IPv6 captive portal host name.
        """
        return pulumi.get(self, "captive_portal6")

    @property
    @pulumi.getter(name="captivePortalIp")
    def captive_portal_ip(self) -> pulumi.Output[str]:
        """
        Captive portal IP address.
        """
        return pulumi.get(self, "captive_portal_ip")

    @property
    @pulumi.getter(name="captivePortalIp6")
    def captive_portal_ip6(self) -> pulumi.Output[str]:
        """
        Captive portal IPv6 address.
        """
        return pulumi.get(self, "captive_portal_ip6")

    @property
    @pulumi.getter(name="captivePortalPort")
    def captive_portal_port(self) -> pulumi.Output[int]:
        """
        Captive portal port number (1 - 65535, default = 7830).
        """
        return pulumi.get(self, "captive_portal_port")

    @property
    @pulumi.getter(name="captivePortalSslPort")
    def captive_portal_ssl_port(self) -> pulumi.Output[int]:
        """
        Captive portal SSL port number (1 - 65535, default = 7831).
        """
        return pulumi.get(self, "captive_portal_ssl_port")

    @property
    @pulumi.getter(name="captivePortalType")
    def captive_portal_type(self) -> pulumi.Output[str]:
        """
        Captive portal type. Valid values: `fqdn`, `ip`.
        """
        return pulumi.get(self, "captive_portal_type")

    @property
    @pulumi.getter(name="certAuth")
    def cert_auth(self) -> pulumi.Output[str]:
        """
        Enable/disable redirecting certificate authentication to HTTPS portal. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cert_auth")

    @property
    @pulumi.getter(name="certCaptivePortal")
    def cert_captive_portal(self) -> pulumi.Output[str]:
        """
        Certificate captive portal host name.
        """
        return pulumi.get(self, "cert_captive_portal")

    @property
    @pulumi.getter(name="certCaptivePortalIp")
    def cert_captive_portal_ip(self) -> pulumi.Output[str]:
        """
        Certificate captive portal IP address.
        """
        return pulumi.get(self, "cert_captive_portal_ip")

    @property
    @pulumi.getter(name="certCaptivePortalPort")
    def cert_captive_portal_port(self) -> pulumi.Output[int]:
        """
        Certificate captive portal port number (1 - 65535, default = 7832).
        """
        return pulumi.get(self, "cert_captive_portal_port")

    @property
    @pulumi.getter(name="cookieMaxAge")
    def cookie_max_age(self) -> pulumi.Output[int]:
        """
        Persistent web portal cookie maximum age in minutes (30 - 10080 (1 week), default = 480 (8 hours)).
        """
        return pulumi.get(self, "cookie_max_age")

    @property
    @pulumi.getter(name="cookieRefreshDiv")
    def cookie_refresh_div(self) -> pulumi.Output[int]:
        """
        Refresh rate divider of persistent web portal cookie (default = 2). Refresh value = cookie-max-age/cookie-refresh-div.
        """
        return pulumi.get(self, "cookie_refresh_div")

    @property
    @pulumi.getter(name="devRanges")
    def dev_ranges(self) -> pulumi.Output[Optional[Sequence['outputs.SettingDevRange']]]:
        """
        Address range for the IP based device query. The structure of `dev_range` block is documented below.
        """
        return pulumi.get(self, "dev_ranges")

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> pulumi.Output[Optional[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> pulumi.Output[Optional[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @property
    @pulumi.getter(name="ipAuthCookie")
    def ip_auth_cookie(self) -> pulumi.Output[str]:
        """
        Enable/disable persistent cookie on IP based web portal authentication (default = disable). Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ip_auth_cookie")

    @property
    @pulumi.getter(name="persistentCookie")
    def persistent_cookie(self) -> pulumi.Output[str]:
        """
        Enable/disable persistent cookie on web portal authentication (default = enable). Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "persistent_cookie")

    @property
    @pulumi.getter(name="ssoAuthScheme")
    def sso_auth_scheme(self) -> pulumi.Output[str]:
        """
        Single-Sign-On authentication method (scheme name).
        """
        return pulumi.get(self, "sso_auth_scheme")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> pulumi.Output[str]:
        """
        Time of the last update.
        """
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="userCertCas")
    def user_cert_cas(self) -> pulumi.Output[Optional[Sequence['outputs.SettingUserCertCa']]]:
        """
        CA certificate used for client certificate verification. The structure of `user_cert_ca` block is documented below.
        """
        return pulumi.get(self, "user_cert_cas")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

