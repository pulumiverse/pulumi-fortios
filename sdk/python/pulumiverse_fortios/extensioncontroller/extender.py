# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ExtenderArgs', 'Extender']

@pulumi.input_type
class ExtenderArgs:
    def __init__(__self__, *,
                 allowaccess: Optional[pulumi.Input[str]] = None,
                 authorized: Optional[pulumi.Input[str]] = None,
                 bandwidth_limit: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 device_id: Optional[pulumi.Input[int]] = None,
                 enforce_bandwidth: Optional[pulumi.Input[str]] = None,
                 ext_name: Optional[pulumi.Input[str]] = None,
                 extension_type: Optional[pulumi.Input[str]] = None,
                 firmware_provision_latest: Optional[pulumi.Input[str]] = None,
                 fosid: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 login_password: Optional[pulumi.Input[str]] = None,
                 login_password_change: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 override_allowaccess: Optional[pulumi.Input[str]] = None,
                 override_enforce_bandwidth: Optional[pulumi.Input[str]] = None,
                 override_login_password_change: Optional[pulumi.Input[str]] = None,
                 profile: Optional[pulumi.Input[str]] = None,
                 vdom: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 wan_extension: Optional[pulumi.Input['ExtenderWanExtensionArgs']] = None):
        """
        The set of arguments for constructing a Extender resource.
        :param pulumi.Input[str] allowaccess: Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
        :param pulumi.Input[str] authorized: FortiExtender Administration (enable or disable).
        :param pulumi.Input[int] bandwidth_limit: FortiExtender LAN extension bandwidth limit (Mbps).
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[int] device_id: Device ID.
        :param pulumi.Input[str] enforce_bandwidth: Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ext_name: FortiExtender name.
        :param pulumi.Input[str] extension_type: Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
        :param pulumi.Input[str] firmware_provision_latest: Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
        :param pulumi.Input[str] fosid: FortiExtender serial number.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] login_password: Set the managed extender's administrator password.
        :param pulumi.Input[str] login_password_change: Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
        :param pulumi.Input[str] name: FortiExtender entry name.
        :param pulumi.Input[str] override_allowaccess: Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] override_enforce_bandwidth: Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] override_login_password_change: Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] profile: FortiExtender profile configuration.
        :param pulumi.Input[int] vdom: VDOM.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input['ExtenderWanExtensionArgs'] wan_extension: FortiExtender wan extension configuration. The structure of `wan_extension` block is documented below.
        """
        if allowaccess is not None:
            pulumi.set(__self__, "allowaccess", allowaccess)
        if authorized is not None:
            pulumi.set(__self__, "authorized", authorized)
        if bandwidth_limit is not None:
            pulumi.set(__self__, "bandwidth_limit", bandwidth_limit)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if device_id is not None:
            pulumi.set(__self__, "device_id", device_id)
        if enforce_bandwidth is not None:
            pulumi.set(__self__, "enforce_bandwidth", enforce_bandwidth)
        if ext_name is not None:
            pulumi.set(__self__, "ext_name", ext_name)
        if extension_type is not None:
            pulumi.set(__self__, "extension_type", extension_type)
        if firmware_provision_latest is not None:
            pulumi.set(__self__, "firmware_provision_latest", firmware_provision_latest)
        if fosid is not None:
            pulumi.set(__self__, "fosid", fosid)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if login_password is not None:
            pulumi.set(__self__, "login_password", login_password)
        if login_password_change is not None:
            pulumi.set(__self__, "login_password_change", login_password_change)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if override_allowaccess is not None:
            pulumi.set(__self__, "override_allowaccess", override_allowaccess)
        if override_enforce_bandwidth is not None:
            pulumi.set(__self__, "override_enforce_bandwidth", override_enforce_bandwidth)
        if override_login_password_change is not None:
            pulumi.set(__self__, "override_login_password_change", override_login_password_change)
        if profile is not None:
            pulumi.set(__self__, "profile", profile)
        if vdom is not None:
            pulumi.set(__self__, "vdom", vdom)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if wan_extension is not None:
            pulumi.set(__self__, "wan_extension", wan_extension)

    @property
    @pulumi.getter
    def allowaccess(self) -> Optional[pulumi.Input[str]]:
        """
        Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
        """
        return pulumi.get(self, "allowaccess")

    @allowaccess.setter
    def allowaccess(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "allowaccess", value)

    @property
    @pulumi.getter
    def authorized(self) -> Optional[pulumi.Input[str]]:
        """
        FortiExtender Administration (enable or disable).
        """
        return pulumi.get(self, "authorized")

    @authorized.setter
    def authorized(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authorized", value)

    @property
    @pulumi.getter(name="bandwidthLimit")
    def bandwidth_limit(self) -> Optional[pulumi.Input[int]]:
        """
        FortiExtender LAN extension bandwidth limit (Mbps).
        """
        return pulumi.get(self, "bandwidth_limit")

    @bandwidth_limit.setter
    def bandwidth_limit(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "bandwidth_limit", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="deviceId")
    def device_id(self) -> Optional[pulumi.Input[int]]:
        """
        Device ID.
        """
        return pulumi.get(self, "device_id")

    @device_id.setter
    def device_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "device_id", value)

    @property
    @pulumi.getter(name="enforceBandwidth")
    def enforce_bandwidth(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "enforce_bandwidth")

    @enforce_bandwidth.setter
    def enforce_bandwidth(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "enforce_bandwidth", value)

    @property
    @pulumi.getter(name="extName")
    def ext_name(self) -> Optional[pulumi.Input[str]]:
        """
        FortiExtender name.
        """
        return pulumi.get(self, "ext_name")

    @ext_name.setter
    def ext_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ext_name", value)

    @property
    @pulumi.getter(name="extensionType")
    def extension_type(self) -> Optional[pulumi.Input[str]]:
        """
        Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
        """
        return pulumi.get(self, "extension_type")

    @extension_type.setter
    def extension_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "extension_type", value)

    @property
    @pulumi.getter(name="firmwareProvisionLatest")
    def firmware_provision_latest(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
        """
        return pulumi.get(self, "firmware_provision_latest")

    @firmware_provision_latest.setter
    def firmware_provision_latest(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "firmware_provision_latest", value)

    @property
    @pulumi.getter
    def fosid(self) -> Optional[pulumi.Input[str]]:
        """
        FortiExtender serial number.
        """
        return pulumi.get(self, "fosid")

    @fosid.setter
    def fosid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fosid", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="loginPassword")
    def login_password(self) -> Optional[pulumi.Input[str]]:
        """
        Set the managed extender's administrator password.
        """
        return pulumi.get(self, "login_password")

    @login_password.setter
    def login_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "login_password", value)

    @property
    @pulumi.getter(name="loginPasswordChange")
    def login_password_change(self) -> Optional[pulumi.Input[str]]:
        """
        Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
        """
        return pulumi.get(self, "login_password_change")

    @login_password_change.setter
    def login_password_change(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "login_password_change", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        FortiExtender entry name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="overrideAllowaccess")
    def override_allowaccess(self) -> Optional[pulumi.Input[str]]:
        """
        Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "override_allowaccess")

    @override_allowaccess.setter
    def override_allowaccess(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "override_allowaccess", value)

    @property
    @pulumi.getter(name="overrideEnforceBandwidth")
    def override_enforce_bandwidth(self) -> Optional[pulumi.Input[str]]:
        """
        Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "override_enforce_bandwidth")

    @override_enforce_bandwidth.setter
    def override_enforce_bandwidth(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "override_enforce_bandwidth", value)

    @property
    @pulumi.getter(name="overrideLoginPasswordChange")
    def override_login_password_change(self) -> Optional[pulumi.Input[str]]:
        """
        Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "override_login_password_change")

    @override_login_password_change.setter
    def override_login_password_change(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "override_login_password_change", value)

    @property
    @pulumi.getter
    def profile(self) -> Optional[pulumi.Input[str]]:
        """
        FortiExtender profile configuration.
        """
        return pulumi.get(self, "profile")

    @profile.setter
    def profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile", value)

    @property
    @pulumi.getter
    def vdom(self) -> Optional[pulumi.Input[int]]:
        """
        VDOM.
        """
        return pulumi.get(self, "vdom")

    @vdom.setter
    def vdom(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "vdom", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="wanExtension")
    def wan_extension(self) -> Optional[pulumi.Input['ExtenderWanExtensionArgs']]:
        """
        FortiExtender wan extension configuration. The structure of `wan_extension` block is documented below.
        """
        return pulumi.get(self, "wan_extension")

    @wan_extension.setter
    def wan_extension(self, value: Optional[pulumi.Input['ExtenderWanExtensionArgs']]):
        pulumi.set(self, "wan_extension", value)


@pulumi.input_type
class _ExtenderState:
    def __init__(__self__, *,
                 allowaccess: Optional[pulumi.Input[str]] = None,
                 authorized: Optional[pulumi.Input[str]] = None,
                 bandwidth_limit: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 device_id: Optional[pulumi.Input[int]] = None,
                 enforce_bandwidth: Optional[pulumi.Input[str]] = None,
                 ext_name: Optional[pulumi.Input[str]] = None,
                 extension_type: Optional[pulumi.Input[str]] = None,
                 firmware_provision_latest: Optional[pulumi.Input[str]] = None,
                 fosid: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 login_password: Optional[pulumi.Input[str]] = None,
                 login_password_change: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 override_allowaccess: Optional[pulumi.Input[str]] = None,
                 override_enforce_bandwidth: Optional[pulumi.Input[str]] = None,
                 override_login_password_change: Optional[pulumi.Input[str]] = None,
                 profile: Optional[pulumi.Input[str]] = None,
                 vdom: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 wan_extension: Optional[pulumi.Input['ExtenderWanExtensionArgs']] = None):
        """
        Input properties used for looking up and filtering Extender resources.
        :param pulumi.Input[str] allowaccess: Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
        :param pulumi.Input[str] authorized: FortiExtender Administration (enable or disable).
        :param pulumi.Input[int] bandwidth_limit: FortiExtender LAN extension bandwidth limit (Mbps).
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[int] device_id: Device ID.
        :param pulumi.Input[str] enforce_bandwidth: Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ext_name: FortiExtender name.
        :param pulumi.Input[str] extension_type: Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
        :param pulumi.Input[str] firmware_provision_latest: Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
        :param pulumi.Input[str] fosid: FortiExtender serial number.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] login_password: Set the managed extender's administrator password.
        :param pulumi.Input[str] login_password_change: Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
        :param pulumi.Input[str] name: FortiExtender entry name.
        :param pulumi.Input[str] override_allowaccess: Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] override_enforce_bandwidth: Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] override_login_password_change: Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] profile: FortiExtender profile configuration.
        :param pulumi.Input[int] vdom: VDOM.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input['ExtenderWanExtensionArgs'] wan_extension: FortiExtender wan extension configuration. The structure of `wan_extension` block is documented below.
        """
        if allowaccess is not None:
            pulumi.set(__self__, "allowaccess", allowaccess)
        if authorized is not None:
            pulumi.set(__self__, "authorized", authorized)
        if bandwidth_limit is not None:
            pulumi.set(__self__, "bandwidth_limit", bandwidth_limit)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if device_id is not None:
            pulumi.set(__self__, "device_id", device_id)
        if enforce_bandwidth is not None:
            pulumi.set(__self__, "enforce_bandwidth", enforce_bandwidth)
        if ext_name is not None:
            pulumi.set(__self__, "ext_name", ext_name)
        if extension_type is not None:
            pulumi.set(__self__, "extension_type", extension_type)
        if firmware_provision_latest is not None:
            pulumi.set(__self__, "firmware_provision_latest", firmware_provision_latest)
        if fosid is not None:
            pulumi.set(__self__, "fosid", fosid)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if login_password is not None:
            pulumi.set(__self__, "login_password", login_password)
        if login_password_change is not None:
            pulumi.set(__self__, "login_password_change", login_password_change)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if override_allowaccess is not None:
            pulumi.set(__self__, "override_allowaccess", override_allowaccess)
        if override_enforce_bandwidth is not None:
            pulumi.set(__self__, "override_enforce_bandwidth", override_enforce_bandwidth)
        if override_login_password_change is not None:
            pulumi.set(__self__, "override_login_password_change", override_login_password_change)
        if profile is not None:
            pulumi.set(__self__, "profile", profile)
        if vdom is not None:
            pulumi.set(__self__, "vdom", vdom)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if wan_extension is not None:
            pulumi.set(__self__, "wan_extension", wan_extension)

    @property
    @pulumi.getter
    def allowaccess(self) -> Optional[pulumi.Input[str]]:
        """
        Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
        """
        return pulumi.get(self, "allowaccess")

    @allowaccess.setter
    def allowaccess(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "allowaccess", value)

    @property
    @pulumi.getter
    def authorized(self) -> Optional[pulumi.Input[str]]:
        """
        FortiExtender Administration (enable or disable).
        """
        return pulumi.get(self, "authorized")

    @authorized.setter
    def authorized(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authorized", value)

    @property
    @pulumi.getter(name="bandwidthLimit")
    def bandwidth_limit(self) -> Optional[pulumi.Input[int]]:
        """
        FortiExtender LAN extension bandwidth limit (Mbps).
        """
        return pulumi.get(self, "bandwidth_limit")

    @bandwidth_limit.setter
    def bandwidth_limit(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "bandwidth_limit", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="deviceId")
    def device_id(self) -> Optional[pulumi.Input[int]]:
        """
        Device ID.
        """
        return pulumi.get(self, "device_id")

    @device_id.setter
    def device_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "device_id", value)

    @property
    @pulumi.getter(name="enforceBandwidth")
    def enforce_bandwidth(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "enforce_bandwidth")

    @enforce_bandwidth.setter
    def enforce_bandwidth(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "enforce_bandwidth", value)

    @property
    @pulumi.getter(name="extName")
    def ext_name(self) -> Optional[pulumi.Input[str]]:
        """
        FortiExtender name.
        """
        return pulumi.get(self, "ext_name")

    @ext_name.setter
    def ext_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ext_name", value)

    @property
    @pulumi.getter(name="extensionType")
    def extension_type(self) -> Optional[pulumi.Input[str]]:
        """
        Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
        """
        return pulumi.get(self, "extension_type")

    @extension_type.setter
    def extension_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "extension_type", value)

    @property
    @pulumi.getter(name="firmwareProvisionLatest")
    def firmware_provision_latest(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
        """
        return pulumi.get(self, "firmware_provision_latest")

    @firmware_provision_latest.setter
    def firmware_provision_latest(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "firmware_provision_latest", value)

    @property
    @pulumi.getter
    def fosid(self) -> Optional[pulumi.Input[str]]:
        """
        FortiExtender serial number.
        """
        return pulumi.get(self, "fosid")

    @fosid.setter
    def fosid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fosid", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="loginPassword")
    def login_password(self) -> Optional[pulumi.Input[str]]:
        """
        Set the managed extender's administrator password.
        """
        return pulumi.get(self, "login_password")

    @login_password.setter
    def login_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "login_password", value)

    @property
    @pulumi.getter(name="loginPasswordChange")
    def login_password_change(self) -> Optional[pulumi.Input[str]]:
        """
        Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
        """
        return pulumi.get(self, "login_password_change")

    @login_password_change.setter
    def login_password_change(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "login_password_change", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        FortiExtender entry name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="overrideAllowaccess")
    def override_allowaccess(self) -> Optional[pulumi.Input[str]]:
        """
        Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "override_allowaccess")

    @override_allowaccess.setter
    def override_allowaccess(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "override_allowaccess", value)

    @property
    @pulumi.getter(name="overrideEnforceBandwidth")
    def override_enforce_bandwidth(self) -> Optional[pulumi.Input[str]]:
        """
        Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "override_enforce_bandwidth")

    @override_enforce_bandwidth.setter
    def override_enforce_bandwidth(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "override_enforce_bandwidth", value)

    @property
    @pulumi.getter(name="overrideLoginPasswordChange")
    def override_login_password_change(self) -> Optional[pulumi.Input[str]]:
        """
        Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "override_login_password_change")

    @override_login_password_change.setter
    def override_login_password_change(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "override_login_password_change", value)

    @property
    @pulumi.getter
    def profile(self) -> Optional[pulumi.Input[str]]:
        """
        FortiExtender profile configuration.
        """
        return pulumi.get(self, "profile")

    @profile.setter
    def profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile", value)

    @property
    @pulumi.getter
    def vdom(self) -> Optional[pulumi.Input[int]]:
        """
        VDOM.
        """
        return pulumi.get(self, "vdom")

    @vdom.setter
    def vdom(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "vdom", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="wanExtension")
    def wan_extension(self) -> Optional[pulumi.Input['ExtenderWanExtensionArgs']]:
        """
        FortiExtender wan extension configuration. The structure of `wan_extension` block is documented below.
        """
        return pulumi.get(self, "wan_extension")

    @wan_extension.setter
    def wan_extension(self, value: Optional[pulumi.Input['ExtenderWanExtensionArgs']]):
        pulumi.set(self, "wan_extension", value)


class Extender(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allowaccess: Optional[pulumi.Input[str]] = None,
                 authorized: Optional[pulumi.Input[str]] = None,
                 bandwidth_limit: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 device_id: Optional[pulumi.Input[int]] = None,
                 enforce_bandwidth: Optional[pulumi.Input[str]] = None,
                 ext_name: Optional[pulumi.Input[str]] = None,
                 extension_type: Optional[pulumi.Input[str]] = None,
                 firmware_provision_latest: Optional[pulumi.Input[str]] = None,
                 fosid: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 login_password: Optional[pulumi.Input[str]] = None,
                 login_password_change: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 override_allowaccess: Optional[pulumi.Input[str]] = None,
                 override_enforce_bandwidth: Optional[pulumi.Input[str]] = None,
                 override_login_password_change: Optional[pulumi.Input[str]] = None,
                 profile: Optional[pulumi.Input[str]] = None,
                 vdom: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 wan_extension: Optional[pulumi.Input[pulumi.InputType['ExtenderWanExtensionArgs']]] = None,
                 __props__=None):
        """
        Extender controller configuration.
        The resource applies to FortiOS Version >= 7.2.1. For FortiOS version < 7.2.1, see `extendercontroller.Extender`

        ## Import

        ExtensionController Extender can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:extensioncontroller/extender:Extender labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:extensioncontroller/extender:Extender labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] allowaccess: Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
        :param pulumi.Input[str] authorized: FortiExtender Administration (enable or disable).
        :param pulumi.Input[int] bandwidth_limit: FortiExtender LAN extension bandwidth limit (Mbps).
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[int] device_id: Device ID.
        :param pulumi.Input[str] enforce_bandwidth: Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ext_name: FortiExtender name.
        :param pulumi.Input[str] extension_type: Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
        :param pulumi.Input[str] firmware_provision_latest: Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
        :param pulumi.Input[str] fosid: FortiExtender serial number.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] login_password: Set the managed extender's administrator password.
        :param pulumi.Input[str] login_password_change: Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
        :param pulumi.Input[str] name: FortiExtender entry name.
        :param pulumi.Input[str] override_allowaccess: Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] override_enforce_bandwidth: Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] override_login_password_change: Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] profile: FortiExtender profile configuration.
        :param pulumi.Input[int] vdom: VDOM.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[pulumi.InputType['ExtenderWanExtensionArgs']] wan_extension: FortiExtender wan extension configuration. The structure of `wan_extension` block is documented below.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ExtenderArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Extender controller configuration.
        The resource applies to FortiOS Version >= 7.2.1. For FortiOS version < 7.2.1, see `extendercontroller.Extender`

        ## Import

        ExtensionController Extender can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:extensioncontroller/extender:Extender labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:extensioncontroller/extender:Extender labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param ExtenderArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ExtenderArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allowaccess: Optional[pulumi.Input[str]] = None,
                 authorized: Optional[pulumi.Input[str]] = None,
                 bandwidth_limit: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 device_id: Optional[pulumi.Input[int]] = None,
                 enforce_bandwidth: Optional[pulumi.Input[str]] = None,
                 ext_name: Optional[pulumi.Input[str]] = None,
                 extension_type: Optional[pulumi.Input[str]] = None,
                 firmware_provision_latest: Optional[pulumi.Input[str]] = None,
                 fosid: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 login_password: Optional[pulumi.Input[str]] = None,
                 login_password_change: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 override_allowaccess: Optional[pulumi.Input[str]] = None,
                 override_enforce_bandwidth: Optional[pulumi.Input[str]] = None,
                 override_login_password_change: Optional[pulumi.Input[str]] = None,
                 profile: Optional[pulumi.Input[str]] = None,
                 vdom: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 wan_extension: Optional[pulumi.Input[pulumi.InputType['ExtenderWanExtensionArgs']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ExtenderArgs.__new__(ExtenderArgs)

            __props__.__dict__["allowaccess"] = allowaccess
            __props__.__dict__["authorized"] = authorized
            __props__.__dict__["bandwidth_limit"] = bandwidth_limit
            __props__.__dict__["description"] = description
            __props__.__dict__["device_id"] = device_id
            __props__.__dict__["enforce_bandwidth"] = enforce_bandwidth
            __props__.__dict__["ext_name"] = ext_name
            __props__.__dict__["extension_type"] = extension_type
            __props__.__dict__["firmware_provision_latest"] = firmware_provision_latest
            __props__.__dict__["fosid"] = fosid
            __props__.__dict__["get_all_tables"] = get_all_tables
            __props__.__dict__["login_password"] = login_password
            __props__.__dict__["login_password_change"] = login_password_change
            __props__.__dict__["name"] = name
            __props__.__dict__["override_allowaccess"] = override_allowaccess
            __props__.__dict__["override_enforce_bandwidth"] = override_enforce_bandwidth
            __props__.__dict__["override_login_password_change"] = override_login_password_change
            __props__.__dict__["profile"] = profile
            __props__.__dict__["vdom"] = vdom
            __props__.__dict__["vdomparam"] = vdomparam
            __props__.__dict__["wan_extension"] = wan_extension
        super(Extender, __self__).__init__(
            'fortios:extensioncontroller/extender:Extender',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            allowaccess: Optional[pulumi.Input[str]] = None,
            authorized: Optional[pulumi.Input[str]] = None,
            bandwidth_limit: Optional[pulumi.Input[int]] = None,
            description: Optional[pulumi.Input[str]] = None,
            device_id: Optional[pulumi.Input[int]] = None,
            enforce_bandwidth: Optional[pulumi.Input[str]] = None,
            ext_name: Optional[pulumi.Input[str]] = None,
            extension_type: Optional[pulumi.Input[str]] = None,
            firmware_provision_latest: Optional[pulumi.Input[str]] = None,
            fosid: Optional[pulumi.Input[str]] = None,
            get_all_tables: Optional[pulumi.Input[str]] = None,
            login_password: Optional[pulumi.Input[str]] = None,
            login_password_change: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            override_allowaccess: Optional[pulumi.Input[str]] = None,
            override_enforce_bandwidth: Optional[pulumi.Input[str]] = None,
            override_login_password_change: Optional[pulumi.Input[str]] = None,
            profile: Optional[pulumi.Input[str]] = None,
            vdom: Optional[pulumi.Input[int]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None,
            wan_extension: Optional[pulumi.Input[pulumi.InputType['ExtenderWanExtensionArgs']]] = None) -> 'Extender':
        """
        Get an existing Extender resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] allowaccess: Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
        :param pulumi.Input[str] authorized: FortiExtender Administration (enable or disable).
        :param pulumi.Input[int] bandwidth_limit: FortiExtender LAN extension bandwidth limit (Mbps).
        :param pulumi.Input[str] description: Description.
        :param pulumi.Input[int] device_id: Device ID.
        :param pulumi.Input[str] enforce_bandwidth: Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ext_name: FortiExtender name.
        :param pulumi.Input[str] extension_type: Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
        :param pulumi.Input[str] firmware_provision_latest: Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
        :param pulumi.Input[str] fosid: FortiExtender serial number.
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[str] login_password: Set the managed extender's administrator password.
        :param pulumi.Input[str] login_password_change: Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
        :param pulumi.Input[str] name: FortiExtender entry name.
        :param pulumi.Input[str] override_allowaccess: Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] override_enforce_bandwidth: Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] override_login_password_change: Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] profile: FortiExtender profile configuration.
        :param pulumi.Input[int] vdom: VDOM.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[pulumi.InputType['ExtenderWanExtensionArgs']] wan_extension: FortiExtender wan extension configuration. The structure of `wan_extension` block is documented below.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ExtenderState.__new__(_ExtenderState)

        __props__.__dict__["allowaccess"] = allowaccess
        __props__.__dict__["authorized"] = authorized
        __props__.__dict__["bandwidth_limit"] = bandwidth_limit
        __props__.__dict__["description"] = description
        __props__.__dict__["device_id"] = device_id
        __props__.__dict__["enforce_bandwidth"] = enforce_bandwidth
        __props__.__dict__["ext_name"] = ext_name
        __props__.__dict__["extension_type"] = extension_type
        __props__.__dict__["firmware_provision_latest"] = firmware_provision_latest
        __props__.__dict__["fosid"] = fosid
        __props__.__dict__["get_all_tables"] = get_all_tables
        __props__.__dict__["login_password"] = login_password
        __props__.__dict__["login_password_change"] = login_password_change
        __props__.__dict__["name"] = name
        __props__.__dict__["override_allowaccess"] = override_allowaccess
        __props__.__dict__["override_enforce_bandwidth"] = override_enforce_bandwidth
        __props__.__dict__["override_login_password_change"] = override_login_password_change
        __props__.__dict__["profile"] = profile
        __props__.__dict__["vdom"] = vdom
        __props__.__dict__["vdomparam"] = vdomparam
        __props__.__dict__["wan_extension"] = wan_extension
        return Extender(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def allowaccess(self) -> pulumi.Output[str]:
        """
        Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
        """
        return pulumi.get(self, "allowaccess")

    @property
    @pulumi.getter
    def authorized(self) -> pulumi.Output[str]:
        """
        FortiExtender Administration (enable or disable).
        """
        return pulumi.get(self, "authorized")

    @property
    @pulumi.getter(name="bandwidthLimit")
    def bandwidth_limit(self) -> pulumi.Output[int]:
        """
        FortiExtender LAN extension bandwidth limit (Mbps).
        """
        return pulumi.get(self, "bandwidth_limit")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="deviceId")
    def device_id(self) -> pulumi.Output[int]:
        """
        Device ID.
        """
        return pulumi.get(self, "device_id")

    @property
    @pulumi.getter(name="enforceBandwidth")
    def enforce_bandwidth(self) -> pulumi.Output[str]:
        """
        Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "enforce_bandwidth")

    @property
    @pulumi.getter(name="extName")
    def ext_name(self) -> pulumi.Output[str]:
        """
        FortiExtender name.
        """
        return pulumi.get(self, "ext_name")

    @property
    @pulumi.getter(name="extensionType")
    def extension_type(self) -> pulumi.Output[str]:
        """
        Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
        """
        return pulumi.get(self, "extension_type")

    @property
    @pulumi.getter(name="firmwareProvisionLatest")
    def firmware_provision_latest(self) -> pulumi.Output[str]:
        """
        Enable/disable one-time automatic provisioning of the latest firmware version. Valid values: `disable`, `once`.
        """
        return pulumi.get(self, "firmware_provision_latest")

    @property
    @pulumi.getter
    def fosid(self) -> pulumi.Output[str]:
        """
        FortiExtender serial number.
        """
        return pulumi.get(self, "fosid")

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> pulumi.Output[Optional[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @property
    @pulumi.getter(name="loginPassword")
    def login_password(self) -> pulumi.Output[Optional[str]]:
        """
        Set the managed extender's administrator password.
        """
        return pulumi.get(self, "login_password")

    @property
    @pulumi.getter(name="loginPasswordChange")
    def login_password_change(self) -> pulumi.Output[str]:
        """
        Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
        """
        return pulumi.get(self, "login_password_change")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        FortiExtender entry name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="overrideAllowaccess")
    def override_allowaccess(self) -> pulumi.Output[str]:
        """
        Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "override_allowaccess")

    @property
    @pulumi.getter(name="overrideEnforceBandwidth")
    def override_enforce_bandwidth(self) -> pulumi.Output[str]:
        """
        Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "override_enforce_bandwidth")

    @property
    @pulumi.getter(name="overrideLoginPasswordChange")
    def override_login_password_change(self) -> pulumi.Output[str]:
        """
        Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "override_login_password_change")

    @property
    @pulumi.getter
    def profile(self) -> pulumi.Output[str]:
        """
        FortiExtender profile configuration.
        """
        return pulumi.get(self, "profile")

    @property
    @pulumi.getter
    def vdom(self) -> pulumi.Output[int]:
        """
        VDOM.
        """
        return pulumi.get(self, "vdom")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @property
    @pulumi.getter(name="wanExtension")
    def wan_extension(self) -> pulumi.Output['outputs.ExtenderWanExtension']:
        """
        FortiExtender wan extension configuration. The structure of `wan_extension` block is documented below.
        """
        return pulumi.get(self, "wan_extension")

