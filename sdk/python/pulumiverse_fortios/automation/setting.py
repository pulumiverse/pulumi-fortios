# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['SettingArgs', 'Setting']

@pulumi.input_type
class SettingArgs:
    def __init__(__self__, *,
                 fabric_sync: Optional[pulumi.Input[str]] = None,
                 max_concurrent_stitches: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Setting resource.
        :param pulumi.Input[str] fabric_sync: Enable/disable synchronization of automation settings with security fabric. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] max_concurrent_stitches: Maximum number of automation stitches that are allowed to run concurrently.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if fabric_sync is not None:
            pulumi.set(__self__, "fabric_sync", fabric_sync)
        if max_concurrent_stitches is not None:
            pulumi.set(__self__, "max_concurrent_stitches", max_concurrent_stitches)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="fabricSync")
    def fabric_sync(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable synchronization of automation settings with security fabric. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "fabric_sync")

    @fabric_sync.setter
    def fabric_sync(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fabric_sync", value)

    @property
    @pulumi.getter(name="maxConcurrentStitches")
    def max_concurrent_stitches(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum number of automation stitches that are allowed to run concurrently.
        """
        return pulumi.get(self, "max_concurrent_stitches")

    @max_concurrent_stitches.setter
    def max_concurrent_stitches(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_concurrent_stitches", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _SettingState:
    def __init__(__self__, *,
                 fabric_sync: Optional[pulumi.Input[str]] = None,
                 max_concurrent_stitches: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Setting resources.
        :param pulumi.Input[str] fabric_sync: Enable/disable synchronization of automation settings with security fabric. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] max_concurrent_stitches: Maximum number of automation stitches that are allowed to run concurrently.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if fabric_sync is not None:
            pulumi.set(__self__, "fabric_sync", fabric_sync)
        if max_concurrent_stitches is not None:
            pulumi.set(__self__, "max_concurrent_stitches", max_concurrent_stitches)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="fabricSync")
    def fabric_sync(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable synchronization of automation settings with security fabric. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "fabric_sync")

    @fabric_sync.setter
    def fabric_sync(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fabric_sync", value)

    @property
    @pulumi.getter(name="maxConcurrentStitches")
    def max_concurrent_stitches(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum number of automation stitches that are allowed to run concurrently.
        """
        return pulumi.get(self, "max_concurrent_stitches")

    @max_concurrent_stitches.setter
    def max_concurrent_stitches(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_concurrent_stitches", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Setting(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 fabric_sync: Optional[pulumi.Input[str]] = None,
                 max_concurrent_stitches: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Automation setting configuration. Applies to FortiOS Version `>= 7.2.0`.

        ## Import

        Automation Setting can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:automation/setting:Setting labelname AutomationSetting
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:automation/setting:Setting labelname AutomationSetting
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] fabric_sync: Enable/disable synchronization of automation settings with security fabric. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] max_concurrent_stitches: Maximum number of automation stitches that are allowed to run concurrently.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SettingArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Automation setting configuration. Applies to FortiOS Version `>= 7.2.0`.

        ## Import

        Automation Setting can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:automation/setting:Setting labelname AutomationSetting
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:automation/setting:Setting labelname AutomationSetting
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param SettingArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SettingArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 fabric_sync: Optional[pulumi.Input[str]] = None,
                 max_concurrent_stitches: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SettingArgs.__new__(SettingArgs)

            __props__.__dict__["fabric_sync"] = fabric_sync
            __props__.__dict__["max_concurrent_stitches"] = max_concurrent_stitches
            __props__.__dict__["vdomparam"] = vdomparam
        super(Setting, __self__).__init__(
            'fortios:automation/setting:Setting',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            fabric_sync: Optional[pulumi.Input[str]] = None,
            max_concurrent_stitches: Optional[pulumi.Input[int]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Setting':
        """
        Get an existing Setting resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] fabric_sync: Enable/disable synchronization of automation settings with security fabric. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] max_concurrent_stitches: Maximum number of automation stitches that are allowed to run concurrently.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SettingState.__new__(_SettingState)

        __props__.__dict__["fabric_sync"] = fabric_sync
        __props__.__dict__["max_concurrent_stitches"] = max_concurrent_stitches
        __props__.__dict__["vdomparam"] = vdomparam
        return Setting(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="fabricSync")
    def fabric_sync(self) -> pulumi.Output[str]:
        """
        Enable/disable synchronization of automation settings with security fabric. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "fabric_sync")

    @property
    @pulumi.getter(name="maxConcurrentStitches")
    def max_concurrent_stitches(self) -> pulumi.Output[int]:
        """
        Maximum number of automation stitches that are allowed to run concurrently.
        """
        return pulumi.get(self, "max_concurrent_stitches")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

