# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['FctemsArgs', 'Fctems']

@pulumi.input_type
class FctemsArgs:
    def __init__(__self__, *,
                 admin_password: Optional[pulumi.Input[str]] = None,
                 admin_username: Optional[pulumi.Input[str]] = None,
                 call_timeout: Optional[pulumi.Input[int]] = None,
                 capabilities: Optional[pulumi.Input[str]] = None,
                 certificate: Optional[pulumi.Input[str]] = None,
                 cloud_server_type: Optional[pulumi.Input[str]] = None,
                 dirty_reason: Optional[pulumi.Input[str]] = None,
                 ems_id: Optional[pulumi.Input[int]] = None,
                 fortinetone_cloud_authentication: Optional[pulumi.Input[str]] = None,
                 https_port: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 interface_select_method: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 out_of_sync_threshold: Optional[pulumi.Input[int]] = None,
                 preserve_ssl_session: Optional[pulumi.Input[str]] = None,
                 pull_avatars: Optional[pulumi.Input[str]] = None,
                 pull_malware_hash: Optional[pulumi.Input[str]] = None,
                 pull_sysinfo: Optional[pulumi.Input[str]] = None,
                 pull_tags: Optional[pulumi.Input[str]] = None,
                 pull_vulnerabilities: Optional[pulumi.Input[str]] = None,
                 send_tags_to_all_vdoms: Optional[pulumi.Input[str]] = None,
                 serial_number: Optional[pulumi.Input[str]] = None,
                 server: Optional[pulumi.Input[str]] = None,
                 source_ip: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 status_check_interval: Optional[pulumi.Input[int]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 trust_ca_cn: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 verifying_ca: Optional[pulumi.Input[str]] = None,
                 websocket_override: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Fctems resource.
        :param pulumi.Input[str] admin_password: FortiClient EMS admin password.
        :param pulumi.Input[str] admin_username: FortiClient EMS admin username.
        :param pulumi.Input[int] call_timeout: FortiClient EMS call timeout. On FortiOS versions 6.2.4-6.2.6: 500 - 30000 milliseconds, default = 5000. On FortiOS versions 6.4.0: 500 - 50000 milliseconds, default = 5000. On FortiOS versions >= 6.4.2: 1 - 180 seconds, default = 30. On FortiOS versions 6.4.1: 500 - 180000 milliseconds, default = 30000.
        :param pulumi.Input[str] capabilities: List of EMS capabilities.
        :param pulumi.Input[str] certificate: FortiClient EMS certificate.
        :param pulumi.Input[str] cloud_server_type: Cloud server type. Valid values: `production`, `alpha`, `beta`.
        :param pulumi.Input[str] dirty_reason: Dirty Reason for FortiClient EMS. Valid values: `none`, `mismatched-ems-sn`.
        :param pulumi.Input[int] ems_id: EMS ID in order. On FortiOS versions 7.0.8-7.0.13, 7.2.1-7.2.3: 1 - 5. On FortiOS versions >= 7.2.4: 1 - 7.
        :param pulumi.Input[str] fortinetone_cloud_authentication: Enable/disable authentication of FortiClient EMS Cloud through FortiCloud account. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] https_port: FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
        :param pulumi.Input[str] interface: Specify outgoing interface to reach server.
        :param pulumi.Input[str] interface_select_method: Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        :param pulumi.Input[str] name: FortiClient Enterprise Management Server (EMS) name.
        :param pulumi.Input[int] out_of_sync_threshold: Outdated resource threshold in seconds (10 - 3600, default = 180).
        :param pulumi.Input[str] preserve_ssl_session: Enable/disable preservation of EMS SSL session connection. WARNING: Most users should not touch this setting! Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_avatars: Enable/disable pulling avatars from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_malware_hash: Enable/disable pulling FortiClient malware hash from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_sysinfo: Enable/disable pulling SysInfo from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_tags: Enable/disable pulling FortiClient user tags from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_vulnerabilities: Enable/disable pulling vulnerabilities from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] send_tags_to_all_vdoms: Relax restrictions on tags to send all EMS tags to all VDOMs Valid values: `enable`, `disable`.
        :param pulumi.Input[str] serial_number: FortiClient EMS Serial Number.
        :param pulumi.Input[str] server: FortiClient EMS FQDN or IPv4 address.
        :param pulumi.Input[str] source_ip: REST API call source IP.
        :param pulumi.Input[str] status: Enable or disable this EMS configuration. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] status_check_interval: FortiClient EMS call timeout in seconds (1 - 120 seconds, default = 5).
        :param pulumi.Input[str] tenant_id: EMS Tenant ID.
        :param pulumi.Input[str] trust_ca_cn: Enable/disable trust of the EMS certificate issuer(CA) and common name(CN) for certificate auto-renewal. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] verifying_ca: Lowest CA cert on Fortigate in verified EMS cert chain.
        :param pulumi.Input[str] websocket_override: Enable/disable override behavior for how this FortiGate unit connects to EMS using a WebSocket connection. Valid values: `disable`, `enable`.
        """
        if admin_password is not None:
            pulumi.set(__self__, "admin_password", admin_password)
        if admin_username is not None:
            pulumi.set(__self__, "admin_username", admin_username)
        if call_timeout is not None:
            pulumi.set(__self__, "call_timeout", call_timeout)
        if capabilities is not None:
            pulumi.set(__self__, "capabilities", capabilities)
        if certificate is not None:
            pulumi.set(__self__, "certificate", certificate)
        if cloud_server_type is not None:
            pulumi.set(__self__, "cloud_server_type", cloud_server_type)
        if dirty_reason is not None:
            pulumi.set(__self__, "dirty_reason", dirty_reason)
        if ems_id is not None:
            pulumi.set(__self__, "ems_id", ems_id)
        if fortinetone_cloud_authentication is not None:
            pulumi.set(__self__, "fortinetone_cloud_authentication", fortinetone_cloud_authentication)
        if https_port is not None:
            pulumi.set(__self__, "https_port", https_port)
        if interface is not None:
            pulumi.set(__self__, "interface", interface)
        if interface_select_method is not None:
            pulumi.set(__self__, "interface_select_method", interface_select_method)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if out_of_sync_threshold is not None:
            pulumi.set(__self__, "out_of_sync_threshold", out_of_sync_threshold)
        if preserve_ssl_session is not None:
            pulumi.set(__self__, "preserve_ssl_session", preserve_ssl_session)
        if pull_avatars is not None:
            pulumi.set(__self__, "pull_avatars", pull_avatars)
        if pull_malware_hash is not None:
            pulumi.set(__self__, "pull_malware_hash", pull_malware_hash)
        if pull_sysinfo is not None:
            pulumi.set(__self__, "pull_sysinfo", pull_sysinfo)
        if pull_tags is not None:
            pulumi.set(__self__, "pull_tags", pull_tags)
        if pull_vulnerabilities is not None:
            pulumi.set(__self__, "pull_vulnerabilities", pull_vulnerabilities)
        if send_tags_to_all_vdoms is not None:
            pulumi.set(__self__, "send_tags_to_all_vdoms", send_tags_to_all_vdoms)
        if serial_number is not None:
            pulumi.set(__self__, "serial_number", serial_number)
        if server is not None:
            pulumi.set(__self__, "server", server)
        if source_ip is not None:
            pulumi.set(__self__, "source_ip", source_ip)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if status_check_interval is not None:
            pulumi.set(__self__, "status_check_interval", status_check_interval)
        if tenant_id is not None:
            pulumi.set(__self__, "tenant_id", tenant_id)
        if trust_ca_cn is not None:
            pulumi.set(__self__, "trust_ca_cn", trust_ca_cn)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if verifying_ca is not None:
            pulumi.set(__self__, "verifying_ca", verifying_ca)
        if websocket_override is not None:
            pulumi.set(__self__, "websocket_override", websocket_override)

    @property
    @pulumi.getter(name="adminPassword")
    def admin_password(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient EMS admin password.
        """
        return pulumi.get(self, "admin_password")

    @admin_password.setter
    def admin_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "admin_password", value)

    @property
    @pulumi.getter(name="adminUsername")
    def admin_username(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient EMS admin username.
        """
        return pulumi.get(self, "admin_username")

    @admin_username.setter
    def admin_username(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "admin_username", value)

    @property
    @pulumi.getter(name="callTimeout")
    def call_timeout(self) -> Optional[pulumi.Input[int]]:
        """
        FortiClient EMS call timeout. On FortiOS versions 6.2.4-6.2.6: 500 - 30000 milliseconds, default = 5000. On FortiOS versions 6.4.0: 500 - 50000 milliseconds, default = 5000. On FortiOS versions >= 6.4.2: 1 - 180 seconds, default = 30. On FortiOS versions 6.4.1: 500 - 180000 milliseconds, default = 30000.
        """
        return pulumi.get(self, "call_timeout")

    @call_timeout.setter
    def call_timeout(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "call_timeout", value)

    @property
    @pulumi.getter
    def capabilities(self) -> Optional[pulumi.Input[str]]:
        """
        List of EMS capabilities.
        """
        return pulumi.get(self, "capabilities")

    @capabilities.setter
    def capabilities(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "capabilities", value)

    @property
    @pulumi.getter
    def certificate(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient EMS certificate.
        """
        return pulumi.get(self, "certificate")

    @certificate.setter
    def certificate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "certificate", value)

    @property
    @pulumi.getter(name="cloudServerType")
    def cloud_server_type(self) -> Optional[pulumi.Input[str]]:
        """
        Cloud server type. Valid values: `production`, `alpha`, `beta`.
        """
        return pulumi.get(self, "cloud_server_type")

    @cloud_server_type.setter
    def cloud_server_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cloud_server_type", value)

    @property
    @pulumi.getter(name="dirtyReason")
    def dirty_reason(self) -> Optional[pulumi.Input[str]]:
        """
        Dirty Reason for FortiClient EMS. Valid values: `none`, `mismatched-ems-sn`.
        """
        return pulumi.get(self, "dirty_reason")

    @dirty_reason.setter
    def dirty_reason(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dirty_reason", value)

    @property
    @pulumi.getter(name="emsId")
    def ems_id(self) -> Optional[pulumi.Input[int]]:
        """
        EMS ID in order. On FortiOS versions 7.0.8-7.0.13, 7.2.1-7.2.3: 1 - 5. On FortiOS versions >= 7.2.4: 1 - 7.
        """
        return pulumi.get(self, "ems_id")

    @ems_id.setter
    def ems_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ems_id", value)

    @property
    @pulumi.getter(name="fortinetoneCloudAuthentication")
    def fortinetone_cloud_authentication(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable authentication of FortiClient EMS Cloud through FortiCloud account. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "fortinetone_cloud_authentication")

    @fortinetone_cloud_authentication.setter
    def fortinetone_cloud_authentication(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fortinetone_cloud_authentication", value)

    @property
    @pulumi.getter(name="httpsPort")
    def https_port(self) -> Optional[pulumi.Input[int]]:
        """
        FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
        """
        return pulumi.get(self, "https_port")

    @https_port.setter
    def https_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "https_port", value)

    @property
    @pulumi.getter
    def interface(self) -> Optional[pulumi.Input[str]]:
        """
        Specify outgoing interface to reach server.
        """
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter(name="interfaceSelectMethod")
    def interface_select_method(self) -> Optional[pulumi.Input[str]]:
        """
        Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        """
        return pulumi.get(self, "interface_select_method")

    @interface_select_method.setter
    def interface_select_method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface_select_method", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient Enterprise Management Server (EMS) name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="outOfSyncThreshold")
    def out_of_sync_threshold(self) -> Optional[pulumi.Input[int]]:
        """
        Outdated resource threshold in seconds (10 - 3600, default = 180).
        """
        return pulumi.get(self, "out_of_sync_threshold")

    @out_of_sync_threshold.setter
    def out_of_sync_threshold(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "out_of_sync_threshold", value)

    @property
    @pulumi.getter(name="preserveSslSession")
    def preserve_ssl_session(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable preservation of EMS SSL session connection. WARNING: Most users should not touch this setting! Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "preserve_ssl_session")

    @preserve_ssl_session.setter
    def preserve_ssl_session(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "preserve_ssl_session", value)

    @property
    @pulumi.getter(name="pullAvatars")
    def pull_avatars(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable pulling avatars from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_avatars")

    @pull_avatars.setter
    def pull_avatars(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_avatars", value)

    @property
    @pulumi.getter(name="pullMalwareHash")
    def pull_malware_hash(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable pulling FortiClient malware hash from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_malware_hash")

    @pull_malware_hash.setter
    def pull_malware_hash(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_malware_hash", value)

    @property
    @pulumi.getter(name="pullSysinfo")
    def pull_sysinfo(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable pulling SysInfo from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_sysinfo")

    @pull_sysinfo.setter
    def pull_sysinfo(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_sysinfo", value)

    @property
    @pulumi.getter(name="pullTags")
    def pull_tags(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable pulling FortiClient user tags from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_tags")

    @pull_tags.setter
    def pull_tags(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_tags", value)

    @property
    @pulumi.getter(name="pullVulnerabilities")
    def pull_vulnerabilities(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable pulling vulnerabilities from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_vulnerabilities")

    @pull_vulnerabilities.setter
    def pull_vulnerabilities(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_vulnerabilities", value)

    @property
    @pulumi.getter(name="sendTagsToAllVdoms")
    def send_tags_to_all_vdoms(self) -> Optional[pulumi.Input[str]]:
        """
        Relax restrictions on tags to send all EMS tags to all VDOMs Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "send_tags_to_all_vdoms")

    @send_tags_to_all_vdoms.setter
    def send_tags_to_all_vdoms(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "send_tags_to_all_vdoms", value)

    @property
    @pulumi.getter(name="serialNumber")
    def serial_number(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient EMS Serial Number.
        """
        return pulumi.get(self, "serial_number")

    @serial_number.setter
    def serial_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "serial_number", value)

    @property
    @pulumi.getter
    def server(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient EMS FQDN or IPv4 address.
        """
        return pulumi.get(self, "server")

    @server.setter
    def server(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "server", value)

    @property
    @pulumi.getter(name="sourceIp")
    def source_ip(self) -> Optional[pulumi.Input[str]]:
        """
        REST API call source IP.
        """
        return pulumi.get(self, "source_ip")

    @source_ip.setter
    def source_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source_ip", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        Enable or disable this EMS configuration. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="statusCheckInterval")
    def status_check_interval(self) -> Optional[pulumi.Input[int]]:
        """
        FortiClient EMS call timeout in seconds (1 - 120 seconds, default = 5).
        """
        return pulumi.get(self, "status_check_interval")

    @status_check_interval.setter
    def status_check_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "status_check_interval", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[pulumi.Input[str]]:
        """
        EMS Tenant ID.
        """
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_id", value)

    @property
    @pulumi.getter(name="trustCaCn")
    def trust_ca_cn(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable trust of the EMS certificate issuer(CA) and common name(CN) for certificate auto-renewal. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "trust_ca_cn")

    @trust_ca_cn.setter
    def trust_ca_cn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "trust_ca_cn", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="verifyingCa")
    def verifying_ca(self) -> Optional[pulumi.Input[str]]:
        """
        Lowest CA cert on Fortigate in verified EMS cert chain.
        """
        return pulumi.get(self, "verifying_ca")

    @verifying_ca.setter
    def verifying_ca(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "verifying_ca", value)

    @property
    @pulumi.getter(name="websocketOverride")
    def websocket_override(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable override behavior for how this FortiGate unit connects to EMS using a WebSocket connection. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "websocket_override")

    @websocket_override.setter
    def websocket_override(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "websocket_override", value)


@pulumi.input_type
class _FctemsState:
    def __init__(__self__, *,
                 admin_password: Optional[pulumi.Input[str]] = None,
                 admin_username: Optional[pulumi.Input[str]] = None,
                 call_timeout: Optional[pulumi.Input[int]] = None,
                 capabilities: Optional[pulumi.Input[str]] = None,
                 certificate: Optional[pulumi.Input[str]] = None,
                 cloud_server_type: Optional[pulumi.Input[str]] = None,
                 dirty_reason: Optional[pulumi.Input[str]] = None,
                 ems_id: Optional[pulumi.Input[int]] = None,
                 fortinetone_cloud_authentication: Optional[pulumi.Input[str]] = None,
                 https_port: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 interface_select_method: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 out_of_sync_threshold: Optional[pulumi.Input[int]] = None,
                 preserve_ssl_session: Optional[pulumi.Input[str]] = None,
                 pull_avatars: Optional[pulumi.Input[str]] = None,
                 pull_malware_hash: Optional[pulumi.Input[str]] = None,
                 pull_sysinfo: Optional[pulumi.Input[str]] = None,
                 pull_tags: Optional[pulumi.Input[str]] = None,
                 pull_vulnerabilities: Optional[pulumi.Input[str]] = None,
                 send_tags_to_all_vdoms: Optional[pulumi.Input[str]] = None,
                 serial_number: Optional[pulumi.Input[str]] = None,
                 server: Optional[pulumi.Input[str]] = None,
                 source_ip: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 status_check_interval: Optional[pulumi.Input[int]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 trust_ca_cn: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 verifying_ca: Optional[pulumi.Input[str]] = None,
                 websocket_override: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Fctems resources.
        :param pulumi.Input[str] admin_password: FortiClient EMS admin password.
        :param pulumi.Input[str] admin_username: FortiClient EMS admin username.
        :param pulumi.Input[int] call_timeout: FortiClient EMS call timeout. On FortiOS versions 6.2.4-6.2.6: 500 - 30000 milliseconds, default = 5000. On FortiOS versions 6.4.0: 500 - 50000 milliseconds, default = 5000. On FortiOS versions >= 6.4.2: 1 - 180 seconds, default = 30. On FortiOS versions 6.4.1: 500 - 180000 milliseconds, default = 30000.
        :param pulumi.Input[str] capabilities: List of EMS capabilities.
        :param pulumi.Input[str] certificate: FortiClient EMS certificate.
        :param pulumi.Input[str] cloud_server_type: Cloud server type. Valid values: `production`, `alpha`, `beta`.
        :param pulumi.Input[str] dirty_reason: Dirty Reason for FortiClient EMS. Valid values: `none`, `mismatched-ems-sn`.
        :param pulumi.Input[int] ems_id: EMS ID in order. On FortiOS versions 7.0.8-7.0.13, 7.2.1-7.2.3: 1 - 5. On FortiOS versions >= 7.2.4: 1 - 7.
        :param pulumi.Input[str] fortinetone_cloud_authentication: Enable/disable authentication of FortiClient EMS Cloud through FortiCloud account. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] https_port: FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
        :param pulumi.Input[str] interface: Specify outgoing interface to reach server.
        :param pulumi.Input[str] interface_select_method: Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        :param pulumi.Input[str] name: FortiClient Enterprise Management Server (EMS) name.
        :param pulumi.Input[int] out_of_sync_threshold: Outdated resource threshold in seconds (10 - 3600, default = 180).
        :param pulumi.Input[str] preserve_ssl_session: Enable/disable preservation of EMS SSL session connection. WARNING: Most users should not touch this setting! Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_avatars: Enable/disable pulling avatars from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_malware_hash: Enable/disable pulling FortiClient malware hash from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_sysinfo: Enable/disable pulling SysInfo from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_tags: Enable/disable pulling FortiClient user tags from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_vulnerabilities: Enable/disable pulling vulnerabilities from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] send_tags_to_all_vdoms: Relax restrictions on tags to send all EMS tags to all VDOMs Valid values: `enable`, `disable`.
        :param pulumi.Input[str] serial_number: FortiClient EMS Serial Number.
        :param pulumi.Input[str] server: FortiClient EMS FQDN or IPv4 address.
        :param pulumi.Input[str] source_ip: REST API call source IP.
        :param pulumi.Input[str] status: Enable or disable this EMS configuration. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] status_check_interval: FortiClient EMS call timeout in seconds (1 - 120 seconds, default = 5).
        :param pulumi.Input[str] tenant_id: EMS Tenant ID.
        :param pulumi.Input[str] trust_ca_cn: Enable/disable trust of the EMS certificate issuer(CA) and common name(CN) for certificate auto-renewal. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] verifying_ca: Lowest CA cert on Fortigate in verified EMS cert chain.
        :param pulumi.Input[str] websocket_override: Enable/disable override behavior for how this FortiGate unit connects to EMS using a WebSocket connection. Valid values: `disable`, `enable`.
        """
        if admin_password is not None:
            pulumi.set(__self__, "admin_password", admin_password)
        if admin_username is not None:
            pulumi.set(__self__, "admin_username", admin_username)
        if call_timeout is not None:
            pulumi.set(__self__, "call_timeout", call_timeout)
        if capabilities is not None:
            pulumi.set(__self__, "capabilities", capabilities)
        if certificate is not None:
            pulumi.set(__self__, "certificate", certificate)
        if cloud_server_type is not None:
            pulumi.set(__self__, "cloud_server_type", cloud_server_type)
        if dirty_reason is not None:
            pulumi.set(__self__, "dirty_reason", dirty_reason)
        if ems_id is not None:
            pulumi.set(__self__, "ems_id", ems_id)
        if fortinetone_cloud_authentication is not None:
            pulumi.set(__self__, "fortinetone_cloud_authentication", fortinetone_cloud_authentication)
        if https_port is not None:
            pulumi.set(__self__, "https_port", https_port)
        if interface is not None:
            pulumi.set(__self__, "interface", interface)
        if interface_select_method is not None:
            pulumi.set(__self__, "interface_select_method", interface_select_method)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if out_of_sync_threshold is not None:
            pulumi.set(__self__, "out_of_sync_threshold", out_of_sync_threshold)
        if preserve_ssl_session is not None:
            pulumi.set(__self__, "preserve_ssl_session", preserve_ssl_session)
        if pull_avatars is not None:
            pulumi.set(__self__, "pull_avatars", pull_avatars)
        if pull_malware_hash is not None:
            pulumi.set(__self__, "pull_malware_hash", pull_malware_hash)
        if pull_sysinfo is not None:
            pulumi.set(__self__, "pull_sysinfo", pull_sysinfo)
        if pull_tags is not None:
            pulumi.set(__self__, "pull_tags", pull_tags)
        if pull_vulnerabilities is not None:
            pulumi.set(__self__, "pull_vulnerabilities", pull_vulnerabilities)
        if send_tags_to_all_vdoms is not None:
            pulumi.set(__self__, "send_tags_to_all_vdoms", send_tags_to_all_vdoms)
        if serial_number is not None:
            pulumi.set(__self__, "serial_number", serial_number)
        if server is not None:
            pulumi.set(__self__, "server", server)
        if source_ip is not None:
            pulumi.set(__self__, "source_ip", source_ip)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if status_check_interval is not None:
            pulumi.set(__self__, "status_check_interval", status_check_interval)
        if tenant_id is not None:
            pulumi.set(__self__, "tenant_id", tenant_id)
        if trust_ca_cn is not None:
            pulumi.set(__self__, "trust_ca_cn", trust_ca_cn)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if verifying_ca is not None:
            pulumi.set(__self__, "verifying_ca", verifying_ca)
        if websocket_override is not None:
            pulumi.set(__self__, "websocket_override", websocket_override)

    @property
    @pulumi.getter(name="adminPassword")
    def admin_password(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient EMS admin password.
        """
        return pulumi.get(self, "admin_password")

    @admin_password.setter
    def admin_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "admin_password", value)

    @property
    @pulumi.getter(name="adminUsername")
    def admin_username(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient EMS admin username.
        """
        return pulumi.get(self, "admin_username")

    @admin_username.setter
    def admin_username(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "admin_username", value)

    @property
    @pulumi.getter(name="callTimeout")
    def call_timeout(self) -> Optional[pulumi.Input[int]]:
        """
        FortiClient EMS call timeout. On FortiOS versions 6.2.4-6.2.6: 500 - 30000 milliseconds, default = 5000. On FortiOS versions 6.4.0: 500 - 50000 milliseconds, default = 5000. On FortiOS versions >= 6.4.2: 1 - 180 seconds, default = 30. On FortiOS versions 6.4.1: 500 - 180000 milliseconds, default = 30000.
        """
        return pulumi.get(self, "call_timeout")

    @call_timeout.setter
    def call_timeout(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "call_timeout", value)

    @property
    @pulumi.getter
    def capabilities(self) -> Optional[pulumi.Input[str]]:
        """
        List of EMS capabilities.
        """
        return pulumi.get(self, "capabilities")

    @capabilities.setter
    def capabilities(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "capabilities", value)

    @property
    @pulumi.getter
    def certificate(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient EMS certificate.
        """
        return pulumi.get(self, "certificate")

    @certificate.setter
    def certificate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "certificate", value)

    @property
    @pulumi.getter(name="cloudServerType")
    def cloud_server_type(self) -> Optional[pulumi.Input[str]]:
        """
        Cloud server type. Valid values: `production`, `alpha`, `beta`.
        """
        return pulumi.get(self, "cloud_server_type")

    @cloud_server_type.setter
    def cloud_server_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cloud_server_type", value)

    @property
    @pulumi.getter(name="dirtyReason")
    def dirty_reason(self) -> Optional[pulumi.Input[str]]:
        """
        Dirty Reason for FortiClient EMS. Valid values: `none`, `mismatched-ems-sn`.
        """
        return pulumi.get(self, "dirty_reason")

    @dirty_reason.setter
    def dirty_reason(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dirty_reason", value)

    @property
    @pulumi.getter(name="emsId")
    def ems_id(self) -> Optional[pulumi.Input[int]]:
        """
        EMS ID in order. On FortiOS versions 7.0.8-7.0.13, 7.2.1-7.2.3: 1 - 5. On FortiOS versions >= 7.2.4: 1 - 7.
        """
        return pulumi.get(self, "ems_id")

    @ems_id.setter
    def ems_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ems_id", value)

    @property
    @pulumi.getter(name="fortinetoneCloudAuthentication")
    def fortinetone_cloud_authentication(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable authentication of FortiClient EMS Cloud through FortiCloud account. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "fortinetone_cloud_authentication")

    @fortinetone_cloud_authentication.setter
    def fortinetone_cloud_authentication(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fortinetone_cloud_authentication", value)

    @property
    @pulumi.getter(name="httpsPort")
    def https_port(self) -> Optional[pulumi.Input[int]]:
        """
        FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
        """
        return pulumi.get(self, "https_port")

    @https_port.setter
    def https_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "https_port", value)

    @property
    @pulumi.getter
    def interface(self) -> Optional[pulumi.Input[str]]:
        """
        Specify outgoing interface to reach server.
        """
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter(name="interfaceSelectMethod")
    def interface_select_method(self) -> Optional[pulumi.Input[str]]:
        """
        Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        """
        return pulumi.get(self, "interface_select_method")

    @interface_select_method.setter
    def interface_select_method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface_select_method", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient Enterprise Management Server (EMS) name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="outOfSyncThreshold")
    def out_of_sync_threshold(self) -> Optional[pulumi.Input[int]]:
        """
        Outdated resource threshold in seconds (10 - 3600, default = 180).
        """
        return pulumi.get(self, "out_of_sync_threshold")

    @out_of_sync_threshold.setter
    def out_of_sync_threshold(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "out_of_sync_threshold", value)

    @property
    @pulumi.getter(name="preserveSslSession")
    def preserve_ssl_session(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable preservation of EMS SSL session connection. WARNING: Most users should not touch this setting! Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "preserve_ssl_session")

    @preserve_ssl_session.setter
    def preserve_ssl_session(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "preserve_ssl_session", value)

    @property
    @pulumi.getter(name="pullAvatars")
    def pull_avatars(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable pulling avatars from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_avatars")

    @pull_avatars.setter
    def pull_avatars(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_avatars", value)

    @property
    @pulumi.getter(name="pullMalwareHash")
    def pull_malware_hash(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable pulling FortiClient malware hash from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_malware_hash")

    @pull_malware_hash.setter
    def pull_malware_hash(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_malware_hash", value)

    @property
    @pulumi.getter(name="pullSysinfo")
    def pull_sysinfo(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable pulling SysInfo from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_sysinfo")

    @pull_sysinfo.setter
    def pull_sysinfo(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_sysinfo", value)

    @property
    @pulumi.getter(name="pullTags")
    def pull_tags(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable pulling FortiClient user tags from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_tags")

    @pull_tags.setter
    def pull_tags(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_tags", value)

    @property
    @pulumi.getter(name="pullVulnerabilities")
    def pull_vulnerabilities(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable pulling vulnerabilities from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_vulnerabilities")

    @pull_vulnerabilities.setter
    def pull_vulnerabilities(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_vulnerabilities", value)

    @property
    @pulumi.getter(name="sendTagsToAllVdoms")
    def send_tags_to_all_vdoms(self) -> Optional[pulumi.Input[str]]:
        """
        Relax restrictions on tags to send all EMS tags to all VDOMs Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "send_tags_to_all_vdoms")

    @send_tags_to_all_vdoms.setter
    def send_tags_to_all_vdoms(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "send_tags_to_all_vdoms", value)

    @property
    @pulumi.getter(name="serialNumber")
    def serial_number(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient EMS Serial Number.
        """
        return pulumi.get(self, "serial_number")

    @serial_number.setter
    def serial_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "serial_number", value)

    @property
    @pulumi.getter
    def server(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient EMS FQDN or IPv4 address.
        """
        return pulumi.get(self, "server")

    @server.setter
    def server(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "server", value)

    @property
    @pulumi.getter(name="sourceIp")
    def source_ip(self) -> Optional[pulumi.Input[str]]:
        """
        REST API call source IP.
        """
        return pulumi.get(self, "source_ip")

    @source_ip.setter
    def source_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source_ip", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        Enable or disable this EMS configuration. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="statusCheckInterval")
    def status_check_interval(self) -> Optional[pulumi.Input[int]]:
        """
        FortiClient EMS call timeout in seconds (1 - 120 seconds, default = 5).
        """
        return pulumi.get(self, "status_check_interval")

    @status_check_interval.setter
    def status_check_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "status_check_interval", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[pulumi.Input[str]]:
        """
        EMS Tenant ID.
        """
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_id", value)

    @property
    @pulumi.getter(name="trustCaCn")
    def trust_ca_cn(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable trust of the EMS certificate issuer(CA) and common name(CN) for certificate auto-renewal. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "trust_ca_cn")

    @trust_ca_cn.setter
    def trust_ca_cn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "trust_ca_cn", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="verifyingCa")
    def verifying_ca(self) -> Optional[pulumi.Input[str]]:
        """
        Lowest CA cert on Fortigate in verified EMS cert chain.
        """
        return pulumi.get(self, "verifying_ca")

    @verifying_ca.setter
    def verifying_ca(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "verifying_ca", value)

    @property
    @pulumi.getter(name="websocketOverride")
    def websocket_override(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable override behavior for how this FortiGate unit connects to EMS using a WebSocket connection. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "websocket_override")

    @websocket_override.setter
    def websocket_override(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "websocket_override", value)


class Fctems(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 admin_password: Optional[pulumi.Input[str]] = None,
                 admin_username: Optional[pulumi.Input[str]] = None,
                 call_timeout: Optional[pulumi.Input[int]] = None,
                 capabilities: Optional[pulumi.Input[str]] = None,
                 certificate: Optional[pulumi.Input[str]] = None,
                 cloud_server_type: Optional[pulumi.Input[str]] = None,
                 dirty_reason: Optional[pulumi.Input[str]] = None,
                 ems_id: Optional[pulumi.Input[int]] = None,
                 fortinetone_cloud_authentication: Optional[pulumi.Input[str]] = None,
                 https_port: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 interface_select_method: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 out_of_sync_threshold: Optional[pulumi.Input[int]] = None,
                 preserve_ssl_session: Optional[pulumi.Input[str]] = None,
                 pull_avatars: Optional[pulumi.Input[str]] = None,
                 pull_malware_hash: Optional[pulumi.Input[str]] = None,
                 pull_sysinfo: Optional[pulumi.Input[str]] = None,
                 pull_tags: Optional[pulumi.Input[str]] = None,
                 pull_vulnerabilities: Optional[pulumi.Input[str]] = None,
                 send_tags_to_all_vdoms: Optional[pulumi.Input[str]] = None,
                 serial_number: Optional[pulumi.Input[str]] = None,
                 server: Optional[pulumi.Input[str]] = None,
                 source_ip: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 status_check_interval: Optional[pulumi.Input[int]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 trust_ca_cn: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 verifying_ca: Optional[pulumi.Input[str]] = None,
                 websocket_override: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure FortiClient Enterprise Management Server (EMS) entries. Applies to FortiOS Version `>= 6.2.4`.

        ## Import

        EndpointControl Fctems can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:endpointcontrol/fctems:Fctems labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:endpointcontrol/fctems:Fctems labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] admin_password: FortiClient EMS admin password.
        :param pulumi.Input[str] admin_username: FortiClient EMS admin username.
        :param pulumi.Input[int] call_timeout: FortiClient EMS call timeout. On FortiOS versions 6.2.4-6.2.6: 500 - 30000 milliseconds, default = 5000. On FortiOS versions 6.4.0: 500 - 50000 milliseconds, default = 5000. On FortiOS versions >= 6.4.2: 1 - 180 seconds, default = 30. On FortiOS versions 6.4.1: 500 - 180000 milliseconds, default = 30000.
        :param pulumi.Input[str] capabilities: List of EMS capabilities.
        :param pulumi.Input[str] certificate: FortiClient EMS certificate.
        :param pulumi.Input[str] cloud_server_type: Cloud server type. Valid values: `production`, `alpha`, `beta`.
        :param pulumi.Input[str] dirty_reason: Dirty Reason for FortiClient EMS. Valid values: `none`, `mismatched-ems-sn`.
        :param pulumi.Input[int] ems_id: EMS ID in order. On FortiOS versions 7.0.8-7.0.13, 7.2.1-7.2.3: 1 - 5. On FortiOS versions >= 7.2.4: 1 - 7.
        :param pulumi.Input[str] fortinetone_cloud_authentication: Enable/disable authentication of FortiClient EMS Cloud through FortiCloud account. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] https_port: FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
        :param pulumi.Input[str] interface: Specify outgoing interface to reach server.
        :param pulumi.Input[str] interface_select_method: Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        :param pulumi.Input[str] name: FortiClient Enterprise Management Server (EMS) name.
        :param pulumi.Input[int] out_of_sync_threshold: Outdated resource threshold in seconds (10 - 3600, default = 180).
        :param pulumi.Input[str] preserve_ssl_session: Enable/disable preservation of EMS SSL session connection. WARNING: Most users should not touch this setting! Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_avatars: Enable/disable pulling avatars from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_malware_hash: Enable/disable pulling FortiClient malware hash from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_sysinfo: Enable/disable pulling SysInfo from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_tags: Enable/disable pulling FortiClient user tags from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_vulnerabilities: Enable/disable pulling vulnerabilities from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] send_tags_to_all_vdoms: Relax restrictions on tags to send all EMS tags to all VDOMs Valid values: `enable`, `disable`.
        :param pulumi.Input[str] serial_number: FortiClient EMS Serial Number.
        :param pulumi.Input[str] server: FortiClient EMS FQDN or IPv4 address.
        :param pulumi.Input[str] source_ip: REST API call source IP.
        :param pulumi.Input[str] status: Enable or disable this EMS configuration. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] status_check_interval: FortiClient EMS call timeout in seconds (1 - 120 seconds, default = 5).
        :param pulumi.Input[str] tenant_id: EMS Tenant ID.
        :param pulumi.Input[str] trust_ca_cn: Enable/disable trust of the EMS certificate issuer(CA) and common name(CN) for certificate auto-renewal. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] verifying_ca: Lowest CA cert on Fortigate in verified EMS cert chain.
        :param pulumi.Input[str] websocket_override: Enable/disable override behavior for how this FortiGate unit connects to EMS using a WebSocket connection. Valid values: `disable`, `enable`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[FctemsArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure FortiClient Enterprise Management Server (EMS) entries. Applies to FortiOS Version `>= 6.2.4`.

        ## Import

        EndpointControl Fctems can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:endpointcontrol/fctems:Fctems labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:endpointcontrol/fctems:Fctems labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param FctemsArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(FctemsArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 admin_password: Optional[pulumi.Input[str]] = None,
                 admin_username: Optional[pulumi.Input[str]] = None,
                 call_timeout: Optional[pulumi.Input[int]] = None,
                 capabilities: Optional[pulumi.Input[str]] = None,
                 certificate: Optional[pulumi.Input[str]] = None,
                 cloud_server_type: Optional[pulumi.Input[str]] = None,
                 dirty_reason: Optional[pulumi.Input[str]] = None,
                 ems_id: Optional[pulumi.Input[int]] = None,
                 fortinetone_cloud_authentication: Optional[pulumi.Input[str]] = None,
                 https_port: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 interface_select_method: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 out_of_sync_threshold: Optional[pulumi.Input[int]] = None,
                 preserve_ssl_session: Optional[pulumi.Input[str]] = None,
                 pull_avatars: Optional[pulumi.Input[str]] = None,
                 pull_malware_hash: Optional[pulumi.Input[str]] = None,
                 pull_sysinfo: Optional[pulumi.Input[str]] = None,
                 pull_tags: Optional[pulumi.Input[str]] = None,
                 pull_vulnerabilities: Optional[pulumi.Input[str]] = None,
                 send_tags_to_all_vdoms: Optional[pulumi.Input[str]] = None,
                 serial_number: Optional[pulumi.Input[str]] = None,
                 server: Optional[pulumi.Input[str]] = None,
                 source_ip: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 status_check_interval: Optional[pulumi.Input[int]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 trust_ca_cn: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 verifying_ca: Optional[pulumi.Input[str]] = None,
                 websocket_override: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = FctemsArgs.__new__(FctemsArgs)

            __props__.__dict__["admin_password"] = None if admin_password is None else pulumi.Output.secret(admin_password)
            __props__.__dict__["admin_username"] = admin_username
            __props__.__dict__["call_timeout"] = call_timeout
            __props__.__dict__["capabilities"] = capabilities
            __props__.__dict__["certificate"] = certificate
            __props__.__dict__["cloud_server_type"] = cloud_server_type
            __props__.__dict__["dirty_reason"] = dirty_reason
            __props__.__dict__["ems_id"] = ems_id
            __props__.__dict__["fortinetone_cloud_authentication"] = fortinetone_cloud_authentication
            __props__.__dict__["https_port"] = https_port
            __props__.__dict__["interface"] = interface
            __props__.__dict__["interface_select_method"] = interface_select_method
            __props__.__dict__["name"] = name
            __props__.__dict__["out_of_sync_threshold"] = out_of_sync_threshold
            __props__.__dict__["preserve_ssl_session"] = preserve_ssl_session
            __props__.__dict__["pull_avatars"] = pull_avatars
            __props__.__dict__["pull_malware_hash"] = pull_malware_hash
            __props__.__dict__["pull_sysinfo"] = pull_sysinfo
            __props__.__dict__["pull_tags"] = pull_tags
            __props__.__dict__["pull_vulnerabilities"] = pull_vulnerabilities
            __props__.__dict__["send_tags_to_all_vdoms"] = send_tags_to_all_vdoms
            __props__.__dict__["serial_number"] = serial_number
            __props__.__dict__["server"] = server
            __props__.__dict__["source_ip"] = source_ip
            __props__.__dict__["status"] = status
            __props__.__dict__["status_check_interval"] = status_check_interval
            __props__.__dict__["tenant_id"] = tenant_id
            __props__.__dict__["trust_ca_cn"] = trust_ca_cn
            __props__.__dict__["vdomparam"] = vdomparam
            __props__.__dict__["verifying_ca"] = verifying_ca
            __props__.__dict__["websocket_override"] = websocket_override
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["adminPassword"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(Fctems, __self__).__init__(
            'fortios:endpointcontrol/fctems:Fctems',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            admin_password: Optional[pulumi.Input[str]] = None,
            admin_username: Optional[pulumi.Input[str]] = None,
            call_timeout: Optional[pulumi.Input[int]] = None,
            capabilities: Optional[pulumi.Input[str]] = None,
            certificate: Optional[pulumi.Input[str]] = None,
            cloud_server_type: Optional[pulumi.Input[str]] = None,
            dirty_reason: Optional[pulumi.Input[str]] = None,
            ems_id: Optional[pulumi.Input[int]] = None,
            fortinetone_cloud_authentication: Optional[pulumi.Input[str]] = None,
            https_port: Optional[pulumi.Input[int]] = None,
            interface: Optional[pulumi.Input[str]] = None,
            interface_select_method: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            out_of_sync_threshold: Optional[pulumi.Input[int]] = None,
            preserve_ssl_session: Optional[pulumi.Input[str]] = None,
            pull_avatars: Optional[pulumi.Input[str]] = None,
            pull_malware_hash: Optional[pulumi.Input[str]] = None,
            pull_sysinfo: Optional[pulumi.Input[str]] = None,
            pull_tags: Optional[pulumi.Input[str]] = None,
            pull_vulnerabilities: Optional[pulumi.Input[str]] = None,
            send_tags_to_all_vdoms: Optional[pulumi.Input[str]] = None,
            serial_number: Optional[pulumi.Input[str]] = None,
            server: Optional[pulumi.Input[str]] = None,
            source_ip: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None,
            status_check_interval: Optional[pulumi.Input[int]] = None,
            tenant_id: Optional[pulumi.Input[str]] = None,
            trust_ca_cn: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None,
            verifying_ca: Optional[pulumi.Input[str]] = None,
            websocket_override: Optional[pulumi.Input[str]] = None) -> 'Fctems':
        """
        Get an existing Fctems resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] admin_password: FortiClient EMS admin password.
        :param pulumi.Input[str] admin_username: FortiClient EMS admin username.
        :param pulumi.Input[int] call_timeout: FortiClient EMS call timeout. On FortiOS versions 6.2.4-6.2.6: 500 - 30000 milliseconds, default = 5000. On FortiOS versions 6.4.0: 500 - 50000 milliseconds, default = 5000. On FortiOS versions >= 6.4.2: 1 - 180 seconds, default = 30. On FortiOS versions 6.4.1: 500 - 180000 milliseconds, default = 30000.
        :param pulumi.Input[str] capabilities: List of EMS capabilities.
        :param pulumi.Input[str] certificate: FortiClient EMS certificate.
        :param pulumi.Input[str] cloud_server_type: Cloud server type. Valid values: `production`, `alpha`, `beta`.
        :param pulumi.Input[str] dirty_reason: Dirty Reason for FortiClient EMS. Valid values: `none`, `mismatched-ems-sn`.
        :param pulumi.Input[int] ems_id: EMS ID in order. On FortiOS versions 7.0.8-7.0.13, 7.2.1-7.2.3: 1 - 5. On FortiOS versions >= 7.2.4: 1 - 7.
        :param pulumi.Input[str] fortinetone_cloud_authentication: Enable/disable authentication of FortiClient EMS Cloud through FortiCloud account. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] https_port: FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
        :param pulumi.Input[str] interface: Specify outgoing interface to reach server.
        :param pulumi.Input[str] interface_select_method: Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        :param pulumi.Input[str] name: FortiClient Enterprise Management Server (EMS) name.
        :param pulumi.Input[int] out_of_sync_threshold: Outdated resource threshold in seconds (10 - 3600, default = 180).
        :param pulumi.Input[str] preserve_ssl_session: Enable/disable preservation of EMS SSL session connection. WARNING: Most users should not touch this setting! Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_avatars: Enable/disable pulling avatars from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_malware_hash: Enable/disable pulling FortiClient malware hash from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_sysinfo: Enable/disable pulling SysInfo from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_tags: Enable/disable pulling FortiClient user tags from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] pull_vulnerabilities: Enable/disable pulling vulnerabilities from EMS. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] send_tags_to_all_vdoms: Relax restrictions on tags to send all EMS tags to all VDOMs Valid values: `enable`, `disable`.
        :param pulumi.Input[str] serial_number: FortiClient EMS Serial Number.
        :param pulumi.Input[str] server: FortiClient EMS FQDN or IPv4 address.
        :param pulumi.Input[str] source_ip: REST API call source IP.
        :param pulumi.Input[str] status: Enable or disable this EMS configuration. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] status_check_interval: FortiClient EMS call timeout in seconds (1 - 120 seconds, default = 5).
        :param pulumi.Input[str] tenant_id: EMS Tenant ID.
        :param pulumi.Input[str] trust_ca_cn: Enable/disable trust of the EMS certificate issuer(CA) and common name(CN) for certificate auto-renewal. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        :param pulumi.Input[str] verifying_ca: Lowest CA cert on Fortigate in verified EMS cert chain.
        :param pulumi.Input[str] websocket_override: Enable/disable override behavior for how this FortiGate unit connects to EMS using a WebSocket connection. Valid values: `disable`, `enable`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _FctemsState.__new__(_FctemsState)

        __props__.__dict__["admin_password"] = admin_password
        __props__.__dict__["admin_username"] = admin_username
        __props__.__dict__["call_timeout"] = call_timeout
        __props__.__dict__["capabilities"] = capabilities
        __props__.__dict__["certificate"] = certificate
        __props__.__dict__["cloud_server_type"] = cloud_server_type
        __props__.__dict__["dirty_reason"] = dirty_reason
        __props__.__dict__["ems_id"] = ems_id
        __props__.__dict__["fortinetone_cloud_authentication"] = fortinetone_cloud_authentication
        __props__.__dict__["https_port"] = https_port
        __props__.__dict__["interface"] = interface
        __props__.__dict__["interface_select_method"] = interface_select_method
        __props__.__dict__["name"] = name
        __props__.__dict__["out_of_sync_threshold"] = out_of_sync_threshold
        __props__.__dict__["preserve_ssl_session"] = preserve_ssl_session
        __props__.__dict__["pull_avatars"] = pull_avatars
        __props__.__dict__["pull_malware_hash"] = pull_malware_hash
        __props__.__dict__["pull_sysinfo"] = pull_sysinfo
        __props__.__dict__["pull_tags"] = pull_tags
        __props__.__dict__["pull_vulnerabilities"] = pull_vulnerabilities
        __props__.__dict__["send_tags_to_all_vdoms"] = send_tags_to_all_vdoms
        __props__.__dict__["serial_number"] = serial_number
        __props__.__dict__["server"] = server
        __props__.__dict__["source_ip"] = source_ip
        __props__.__dict__["status"] = status
        __props__.__dict__["status_check_interval"] = status_check_interval
        __props__.__dict__["tenant_id"] = tenant_id
        __props__.__dict__["trust_ca_cn"] = trust_ca_cn
        __props__.__dict__["vdomparam"] = vdomparam
        __props__.__dict__["verifying_ca"] = verifying_ca
        __props__.__dict__["websocket_override"] = websocket_override
        return Fctems(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="adminPassword")
    def admin_password(self) -> pulumi.Output[Optional[str]]:
        """
        FortiClient EMS admin password.
        """
        return pulumi.get(self, "admin_password")

    @property
    @pulumi.getter(name="adminUsername")
    def admin_username(self) -> pulumi.Output[str]:
        """
        FortiClient EMS admin username.
        """
        return pulumi.get(self, "admin_username")

    @property
    @pulumi.getter(name="callTimeout")
    def call_timeout(self) -> pulumi.Output[int]:
        """
        FortiClient EMS call timeout. On FortiOS versions 6.2.4-6.2.6: 500 - 30000 milliseconds, default = 5000. On FortiOS versions 6.4.0: 500 - 50000 milliseconds, default = 5000. On FortiOS versions >= 6.4.2: 1 - 180 seconds, default = 30. On FortiOS versions 6.4.1: 500 - 180000 milliseconds, default = 30000.
        """
        return pulumi.get(self, "call_timeout")

    @property
    @pulumi.getter
    def capabilities(self) -> pulumi.Output[str]:
        """
        List of EMS capabilities.
        """
        return pulumi.get(self, "capabilities")

    @property
    @pulumi.getter
    def certificate(self) -> pulumi.Output[str]:
        """
        FortiClient EMS certificate.
        """
        return pulumi.get(self, "certificate")

    @property
    @pulumi.getter(name="cloudServerType")
    def cloud_server_type(self) -> pulumi.Output[str]:
        """
        Cloud server type. Valid values: `production`, `alpha`, `beta`.
        """
        return pulumi.get(self, "cloud_server_type")

    @property
    @pulumi.getter(name="dirtyReason")
    def dirty_reason(self) -> pulumi.Output[str]:
        """
        Dirty Reason for FortiClient EMS. Valid values: `none`, `mismatched-ems-sn`.
        """
        return pulumi.get(self, "dirty_reason")

    @property
    @pulumi.getter(name="emsId")
    def ems_id(self) -> pulumi.Output[int]:
        """
        EMS ID in order. On FortiOS versions 7.0.8-7.0.13, 7.2.1-7.2.3: 1 - 5. On FortiOS versions >= 7.2.4: 1 - 7.
        """
        return pulumi.get(self, "ems_id")

    @property
    @pulumi.getter(name="fortinetoneCloudAuthentication")
    def fortinetone_cloud_authentication(self) -> pulumi.Output[str]:
        """
        Enable/disable authentication of FortiClient EMS Cloud through FortiCloud account. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "fortinetone_cloud_authentication")

    @property
    @pulumi.getter(name="httpsPort")
    def https_port(self) -> pulumi.Output[int]:
        """
        FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
        """
        return pulumi.get(self, "https_port")

    @property
    @pulumi.getter
    def interface(self) -> pulumi.Output[str]:
        """
        Specify outgoing interface to reach server.
        """
        return pulumi.get(self, "interface")

    @property
    @pulumi.getter(name="interfaceSelectMethod")
    def interface_select_method(self) -> pulumi.Output[str]:
        """
        Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        """
        return pulumi.get(self, "interface_select_method")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        FortiClient Enterprise Management Server (EMS) name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="outOfSyncThreshold")
    def out_of_sync_threshold(self) -> pulumi.Output[int]:
        """
        Outdated resource threshold in seconds (10 - 3600, default = 180).
        """
        return pulumi.get(self, "out_of_sync_threshold")

    @property
    @pulumi.getter(name="preserveSslSession")
    def preserve_ssl_session(self) -> pulumi.Output[str]:
        """
        Enable/disable preservation of EMS SSL session connection. WARNING: Most users should not touch this setting! Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "preserve_ssl_session")

    @property
    @pulumi.getter(name="pullAvatars")
    def pull_avatars(self) -> pulumi.Output[str]:
        """
        Enable/disable pulling avatars from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_avatars")

    @property
    @pulumi.getter(name="pullMalwareHash")
    def pull_malware_hash(self) -> pulumi.Output[str]:
        """
        Enable/disable pulling FortiClient malware hash from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_malware_hash")

    @property
    @pulumi.getter(name="pullSysinfo")
    def pull_sysinfo(self) -> pulumi.Output[str]:
        """
        Enable/disable pulling SysInfo from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_sysinfo")

    @property
    @pulumi.getter(name="pullTags")
    def pull_tags(self) -> pulumi.Output[str]:
        """
        Enable/disable pulling FortiClient user tags from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_tags")

    @property
    @pulumi.getter(name="pullVulnerabilities")
    def pull_vulnerabilities(self) -> pulumi.Output[str]:
        """
        Enable/disable pulling vulnerabilities from EMS. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "pull_vulnerabilities")

    @property
    @pulumi.getter(name="sendTagsToAllVdoms")
    def send_tags_to_all_vdoms(self) -> pulumi.Output[str]:
        """
        Relax restrictions on tags to send all EMS tags to all VDOMs Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "send_tags_to_all_vdoms")

    @property
    @pulumi.getter(name="serialNumber")
    def serial_number(self) -> pulumi.Output[str]:
        """
        FortiClient EMS Serial Number.
        """
        return pulumi.get(self, "serial_number")

    @property
    @pulumi.getter
    def server(self) -> pulumi.Output[str]:
        """
        FortiClient EMS FQDN or IPv4 address.
        """
        return pulumi.get(self, "server")

    @property
    @pulumi.getter(name="sourceIp")
    def source_ip(self) -> pulumi.Output[str]:
        """
        REST API call source IP.
        """
        return pulumi.get(self, "source_ip")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        Enable or disable this EMS configuration. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="statusCheckInterval")
    def status_check_interval(self) -> pulumi.Output[int]:
        """
        FortiClient EMS call timeout in seconds (1 - 120 seconds, default = 5).
        """
        return pulumi.get(self, "status_check_interval")

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> pulumi.Output[str]:
        """
        EMS Tenant ID.
        """
        return pulumi.get(self, "tenant_id")

    @property
    @pulumi.getter(name="trustCaCn")
    def trust_ca_cn(self) -> pulumi.Output[str]:
        """
        Enable/disable trust of the EMS certificate issuer(CA) and common name(CN) for certificate auto-renewal. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "trust_ca_cn")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @property
    @pulumi.getter(name="verifyingCa")
    def verifying_ca(self) -> pulumi.Output[str]:
        """
        Lowest CA cert on Fortigate in verified EMS cert chain.
        """
        return pulumi.get(self, "verifying_ca")

    @property
    @pulumi.getter(name="websocketOverride")
    def websocket_override(self) -> pulumi.Output[str]:
        """
        Enable/disable override behavior for how this FortiGate unit connects to EMS using a WebSocket connection. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "websocket_override")

