# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['RegisteredforticlientArgs', 'Registeredforticlient']

@pulumi.input_type
class RegisteredforticlientArgs:
    def __init__(__self__, *,
                 flag: Optional[pulumi.Input[int]] = None,
                 ip: Optional[pulumi.Input[str]] = None,
                 mac: Optional[pulumi.Input[str]] = None,
                 reg_fortigate: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[int]] = None,
                 uid: Optional[pulumi.Input[str]] = None,
                 vdom: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Registeredforticlient resource.
        :param pulumi.Input[int] flag: FortiClient registration flag.
        :param pulumi.Input[str] ip: Endpoint IP address.
        :param pulumi.Input[str] mac: Endpoint MAC address.
        :param pulumi.Input[str] reg_fortigate: Registering FortiGate SN.
        :param pulumi.Input[int] status: FortiClient registration status.
        :param pulumi.Input[str] uid: FortiClient UID.
        :param pulumi.Input[str] vdom: Registering vdom.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if flag is not None:
            pulumi.set(__self__, "flag", flag)
        if ip is not None:
            pulumi.set(__self__, "ip", ip)
        if mac is not None:
            pulumi.set(__self__, "mac", mac)
        if reg_fortigate is not None:
            pulumi.set(__self__, "reg_fortigate", reg_fortigate)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if uid is not None:
            pulumi.set(__self__, "uid", uid)
        if vdom is not None:
            pulumi.set(__self__, "vdom", vdom)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def flag(self) -> Optional[pulumi.Input[int]]:
        """
        FortiClient registration flag.
        """
        return pulumi.get(self, "flag")

    @flag.setter
    def flag(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "flag", value)

    @property
    @pulumi.getter
    def ip(self) -> Optional[pulumi.Input[str]]:
        """
        Endpoint IP address.
        """
        return pulumi.get(self, "ip")

    @ip.setter
    def ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip", value)

    @property
    @pulumi.getter
    def mac(self) -> Optional[pulumi.Input[str]]:
        """
        Endpoint MAC address.
        """
        return pulumi.get(self, "mac")

    @mac.setter
    def mac(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mac", value)

    @property
    @pulumi.getter(name="regFortigate")
    def reg_fortigate(self) -> Optional[pulumi.Input[str]]:
        """
        Registering FortiGate SN.
        """
        return pulumi.get(self, "reg_fortigate")

    @reg_fortigate.setter
    def reg_fortigate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reg_fortigate", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[int]]:
        """
        FortiClient registration status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def uid(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient UID.
        """
        return pulumi.get(self, "uid")

    @uid.setter
    def uid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uid", value)

    @property
    @pulumi.getter
    def vdom(self) -> Optional[pulumi.Input[str]]:
        """
        Registering vdom.
        """
        return pulumi.get(self, "vdom")

    @vdom.setter
    def vdom(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdom", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _RegisteredforticlientState:
    def __init__(__self__, *,
                 flag: Optional[pulumi.Input[int]] = None,
                 ip: Optional[pulumi.Input[str]] = None,
                 mac: Optional[pulumi.Input[str]] = None,
                 reg_fortigate: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[int]] = None,
                 uid: Optional[pulumi.Input[str]] = None,
                 vdom: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Registeredforticlient resources.
        :param pulumi.Input[int] flag: FortiClient registration flag.
        :param pulumi.Input[str] ip: Endpoint IP address.
        :param pulumi.Input[str] mac: Endpoint MAC address.
        :param pulumi.Input[str] reg_fortigate: Registering FortiGate SN.
        :param pulumi.Input[int] status: FortiClient registration status.
        :param pulumi.Input[str] uid: FortiClient UID.
        :param pulumi.Input[str] vdom: Registering vdom.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if flag is not None:
            pulumi.set(__self__, "flag", flag)
        if ip is not None:
            pulumi.set(__self__, "ip", ip)
        if mac is not None:
            pulumi.set(__self__, "mac", mac)
        if reg_fortigate is not None:
            pulumi.set(__self__, "reg_fortigate", reg_fortigate)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if uid is not None:
            pulumi.set(__self__, "uid", uid)
        if vdom is not None:
            pulumi.set(__self__, "vdom", vdom)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def flag(self) -> Optional[pulumi.Input[int]]:
        """
        FortiClient registration flag.
        """
        return pulumi.get(self, "flag")

    @flag.setter
    def flag(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "flag", value)

    @property
    @pulumi.getter
    def ip(self) -> Optional[pulumi.Input[str]]:
        """
        Endpoint IP address.
        """
        return pulumi.get(self, "ip")

    @ip.setter
    def ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip", value)

    @property
    @pulumi.getter
    def mac(self) -> Optional[pulumi.Input[str]]:
        """
        Endpoint MAC address.
        """
        return pulumi.get(self, "mac")

    @mac.setter
    def mac(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mac", value)

    @property
    @pulumi.getter(name="regFortigate")
    def reg_fortigate(self) -> Optional[pulumi.Input[str]]:
        """
        Registering FortiGate SN.
        """
        return pulumi.get(self, "reg_fortigate")

    @reg_fortigate.setter
    def reg_fortigate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reg_fortigate", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[int]]:
        """
        FortiClient registration status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def uid(self) -> Optional[pulumi.Input[str]]:
        """
        FortiClient UID.
        """
        return pulumi.get(self, "uid")

    @uid.setter
    def uid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uid", value)

    @property
    @pulumi.getter
    def vdom(self) -> Optional[pulumi.Input[str]]:
        """
        Registering vdom.
        """
        return pulumi.get(self, "vdom")

    @vdom.setter
    def vdom(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdom", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Registeredforticlient(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 flag: Optional[pulumi.Input[int]] = None,
                 ip: Optional[pulumi.Input[str]] = None,
                 mac: Optional[pulumi.Input[str]] = None,
                 reg_fortigate: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[int]] = None,
                 uid: Optional[pulumi.Input[str]] = None,
                 vdom: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Registered FortiClient list. Applies to FortiOS Version `<= 6.2.0`.

        ## Import

        EndpointControl RegisteredForticlient can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:endpointcontrol/registeredforticlient:Registeredforticlient labelname {{uid}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:endpointcontrol/registeredforticlient:Registeredforticlient labelname {{uid}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] flag: FortiClient registration flag.
        :param pulumi.Input[str] ip: Endpoint IP address.
        :param pulumi.Input[str] mac: Endpoint MAC address.
        :param pulumi.Input[str] reg_fortigate: Registering FortiGate SN.
        :param pulumi.Input[int] status: FortiClient registration status.
        :param pulumi.Input[str] uid: FortiClient UID.
        :param pulumi.Input[str] vdom: Registering vdom.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[RegisteredforticlientArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Registered FortiClient list. Applies to FortiOS Version `<= 6.2.0`.

        ## Import

        EndpointControl RegisteredForticlient can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:endpointcontrol/registeredforticlient:Registeredforticlient labelname {{uid}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:endpointcontrol/registeredforticlient:Registeredforticlient labelname {{uid}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param RegisteredforticlientArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RegisteredforticlientArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 flag: Optional[pulumi.Input[int]] = None,
                 ip: Optional[pulumi.Input[str]] = None,
                 mac: Optional[pulumi.Input[str]] = None,
                 reg_fortigate: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[int]] = None,
                 uid: Optional[pulumi.Input[str]] = None,
                 vdom: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RegisteredforticlientArgs.__new__(RegisteredforticlientArgs)

            __props__.__dict__["flag"] = flag
            __props__.__dict__["ip"] = ip
            __props__.__dict__["mac"] = mac
            __props__.__dict__["reg_fortigate"] = reg_fortigate
            __props__.__dict__["status"] = status
            __props__.__dict__["uid"] = uid
            __props__.__dict__["vdom"] = vdom
            __props__.__dict__["vdomparam"] = vdomparam
        super(Registeredforticlient, __self__).__init__(
            'fortios:endpointcontrol/registeredforticlient:Registeredforticlient',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            flag: Optional[pulumi.Input[int]] = None,
            ip: Optional[pulumi.Input[str]] = None,
            mac: Optional[pulumi.Input[str]] = None,
            reg_fortigate: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[int]] = None,
            uid: Optional[pulumi.Input[str]] = None,
            vdom: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Registeredforticlient':
        """
        Get an existing Registeredforticlient resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] flag: FortiClient registration flag.
        :param pulumi.Input[str] ip: Endpoint IP address.
        :param pulumi.Input[str] mac: Endpoint MAC address.
        :param pulumi.Input[str] reg_fortigate: Registering FortiGate SN.
        :param pulumi.Input[int] status: FortiClient registration status.
        :param pulumi.Input[str] uid: FortiClient UID.
        :param pulumi.Input[str] vdom: Registering vdom.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RegisteredforticlientState.__new__(_RegisteredforticlientState)

        __props__.__dict__["flag"] = flag
        __props__.__dict__["ip"] = ip
        __props__.__dict__["mac"] = mac
        __props__.__dict__["reg_fortigate"] = reg_fortigate
        __props__.__dict__["status"] = status
        __props__.__dict__["uid"] = uid
        __props__.__dict__["vdom"] = vdom
        __props__.__dict__["vdomparam"] = vdomparam
        return Registeredforticlient(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def flag(self) -> pulumi.Output[int]:
        """
        FortiClient registration flag.
        """
        return pulumi.get(self, "flag")

    @property
    @pulumi.getter
    def ip(self) -> pulumi.Output[str]:
        """
        Endpoint IP address.
        """
        return pulumi.get(self, "ip")

    @property
    @pulumi.getter
    def mac(self) -> pulumi.Output[str]:
        """
        Endpoint MAC address.
        """
        return pulumi.get(self, "mac")

    @property
    @pulumi.getter(name="regFortigate")
    def reg_fortigate(self) -> pulumi.Output[str]:
        """
        Registering FortiGate SN.
        """
        return pulumi.get(self, "reg_fortigate")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[int]:
        """
        FortiClient registration status.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def uid(self) -> pulumi.Output[str]:
        """
        FortiClient UID.
        """
        return pulumi.get(self, "uid")

    @property
    @pulumi.getter
    def vdom(self) -> pulumi.Output[str]:
        """
        Registering vdom.
        """
        return pulumi.get(self, "vdom")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[str]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

