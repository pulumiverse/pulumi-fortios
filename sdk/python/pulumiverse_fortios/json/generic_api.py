# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['GenericApiArgs', 'GenericApi']

@pulumi.input_type
class GenericApiArgs:
    def __init__(__self__, *,
                 method: pulumi.Input[str],
                 path: pulumi.Input[str],
                 force_recreate: Optional[pulumi.Input[str]] = None,
                 json: Optional[pulumi.Input[str]] = None,
                 specialparams: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a GenericApi resource.
        :param pulumi.Input[str] method: HTTP method.
        :param pulumi.Input[str] path: FortiAPI URL path.
        :param pulumi.Input[str] force_recreate: The argument is optional, if it is set, when its value changes, the resource will be re-created. It is usually used when the return value needs to be forced to update.
        :param pulumi.Input[str] json: Body data in JSON format.
        :param pulumi.Input[str] specialparams: URL parameters, in addition to the URL path, user can specify URL parameters which are appended to the URL path.
        """
        pulumi.set(__self__, "method", method)
        pulumi.set(__self__, "path", path)
        if force_recreate is not None:
            pulumi.set(__self__, "force_recreate", force_recreate)
        if json is not None:
            pulumi.set(__self__, "json", json)
        if specialparams is not None:
            pulumi.set(__self__, "specialparams", specialparams)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def method(self) -> pulumi.Input[str]:
        """
        HTTP method.
        """
        return pulumi.get(self, "method")

    @method.setter
    def method(self, value: pulumi.Input[str]):
        pulumi.set(self, "method", value)

    @property
    @pulumi.getter
    def path(self) -> pulumi.Input[str]:
        """
        FortiAPI URL path.
        """
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: pulumi.Input[str]):
        pulumi.set(self, "path", value)

    @property
    @pulumi.getter(name="forceRecreate")
    def force_recreate(self) -> Optional[pulumi.Input[str]]:
        """
        The argument is optional, if it is set, when its value changes, the resource will be re-created. It is usually used when the return value needs to be forced to update.
        """
        return pulumi.get(self, "force_recreate")

    @force_recreate.setter
    def force_recreate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "force_recreate", value)

    @property
    @pulumi.getter
    def json(self) -> Optional[pulumi.Input[str]]:
        """
        Body data in JSON format.
        """
        return pulumi.get(self, "json")

    @json.setter
    def json(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "json", value)

    @property
    @pulumi.getter
    def specialparams(self) -> Optional[pulumi.Input[str]]:
        """
        URL parameters, in addition to the URL path, user can specify URL parameters which are appended to the URL path.
        """
        return pulumi.get(self, "specialparams")

    @specialparams.setter
    def specialparams(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "specialparams", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _GenericApiState:
    def __init__(__self__, *,
                 force_recreate: Optional[pulumi.Input[str]] = None,
                 json: Optional[pulumi.Input[str]] = None,
                 method: Optional[pulumi.Input[str]] = None,
                 path: Optional[pulumi.Input[str]] = None,
                 response: Optional[pulumi.Input[str]] = None,
                 specialparams: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering GenericApi resources.
        :param pulumi.Input[str] force_recreate: The argument is optional, if it is set, when its value changes, the resource will be re-created. It is usually used when the return value needs to be forced to update.
        :param pulumi.Input[str] json: Body data in JSON format.
        :param pulumi.Input[str] method: HTTP method.
        :param pulumi.Input[str] path: FortiAPI URL path.
        :param pulumi.Input[str] response: FortiAPI returns results.
        :param pulumi.Input[str] specialparams: URL parameters, in addition to the URL path, user can specify URL parameters which are appended to the URL path.
        """
        if force_recreate is not None:
            pulumi.set(__self__, "force_recreate", force_recreate)
        if json is not None:
            pulumi.set(__self__, "json", json)
        if method is not None:
            pulumi.set(__self__, "method", method)
        if path is not None:
            pulumi.set(__self__, "path", path)
        if response is not None:
            pulumi.set(__self__, "response", response)
        if specialparams is not None:
            pulumi.set(__self__, "specialparams", specialparams)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="forceRecreate")
    def force_recreate(self) -> Optional[pulumi.Input[str]]:
        """
        The argument is optional, if it is set, when its value changes, the resource will be re-created. It is usually used when the return value needs to be forced to update.
        """
        return pulumi.get(self, "force_recreate")

    @force_recreate.setter
    def force_recreate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "force_recreate", value)

    @property
    @pulumi.getter
    def json(self) -> Optional[pulumi.Input[str]]:
        """
        Body data in JSON format.
        """
        return pulumi.get(self, "json")

    @json.setter
    def json(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "json", value)

    @property
    @pulumi.getter
    def method(self) -> Optional[pulumi.Input[str]]:
        """
        HTTP method.
        """
        return pulumi.get(self, "method")

    @method.setter
    def method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "method", value)

    @property
    @pulumi.getter
    def path(self) -> Optional[pulumi.Input[str]]:
        """
        FortiAPI URL path.
        """
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "path", value)

    @property
    @pulumi.getter
    def response(self) -> Optional[pulumi.Input[str]]:
        """
        FortiAPI returns results.
        """
        return pulumi.get(self, "response")

    @response.setter
    def response(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "response", value)

    @property
    @pulumi.getter
    def specialparams(self) -> Optional[pulumi.Input[str]]:
        """
        URL parameters, in addition to the URL path, user can specify URL parameters which are appended to the URL path.
        """
        return pulumi.get(self, "specialparams")

    @specialparams.setter
    def specialparams(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "specialparams", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class GenericApi(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 force_recreate: Optional[pulumi.Input[str]] = None,
                 json: Optional[pulumi.Input[str]] = None,
                 method: Optional[pulumi.Input[str]] = None,
                 path: Optional[pulumi.Input[str]] = None,
                 specialparams: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        FortiAPI Generic Interface.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        test1 = fortios.json.GenericApi("test1",
            json="",
            method="GET",
            path="/api/v2/cmdb/firewall/address")
        pulumi.export("response1", test1.response)
        test2 = fortios.json.GenericApi("test2",
            json=\"\"\"{
          "name": "11221",
          "type": "geography",
          "fqdn": "",
          "country": "AL",
          "comment": "ccc",
          "visibility": "enable",
          "associated-interface": "port1",
          "allow-routing": "disable"
        }

        \"\"\",
            method="POST",
            path="/api/v2/cmdb/firewall/address")
        pulumi.export("response2", test2.response)
        test3 = fortios.json.GenericApi("test3",
            json="",
            method="PUT",
            path="/api/v2/cmdb/firewall/policy/3",
            specialparams="action=move&after=1")
        pulumi.export("response3", test3.response)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] force_recreate: The argument is optional, if it is set, when its value changes, the resource will be re-created. It is usually used when the return value needs to be forced to update.
        :param pulumi.Input[str] json: Body data in JSON format.
        :param pulumi.Input[str] method: HTTP method.
        :param pulumi.Input[str] path: FortiAPI URL path.
        :param pulumi.Input[str] specialparams: URL parameters, in addition to the URL path, user can specify URL parameters which are appended to the URL path.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: GenericApiArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        FortiAPI Generic Interface.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        test1 = fortios.json.GenericApi("test1",
            json="",
            method="GET",
            path="/api/v2/cmdb/firewall/address")
        pulumi.export("response1", test1.response)
        test2 = fortios.json.GenericApi("test2",
            json=\"\"\"{
          "name": "11221",
          "type": "geography",
          "fqdn": "",
          "country": "AL",
          "comment": "ccc",
          "visibility": "enable",
          "associated-interface": "port1",
          "allow-routing": "disable"
        }

        \"\"\",
            method="POST",
            path="/api/v2/cmdb/firewall/address")
        pulumi.export("response2", test2.response)
        test3 = fortios.json.GenericApi("test3",
            json="",
            method="PUT",
            path="/api/v2/cmdb/firewall/policy/3",
            specialparams="action=move&after=1")
        pulumi.export("response3", test3.response)
        ```

        :param str resource_name: The name of the resource.
        :param GenericApiArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(GenericApiArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 force_recreate: Optional[pulumi.Input[str]] = None,
                 json: Optional[pulumi.Input[str]] = None,
                 method: Optional[pulumi.Input[str]] = None,
                 path: Optional[pulumi.Input[str]] = None,
                 specialparams: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = GenericApiArgs.__new__(GenericApiArgs)

            __props__.__dict__["force_recreate"] = force_recreate
            __props__.__dict__["json"] = json
            if method is None and not opts.urn:
                raise TypeError("Missing required property 'method'")
            __props__.__dict__["method"] = method
            if path is None and not opts.urn:
                raise TypeError("Missing required property 'path'")
            __props__.__dict__["path"] = path
            __props__.__dict__["specialparams"] = specialparams
            __props__.__dict__["vdomparam"] = vdomparam
            __props__.__dict__["response"] = None
        super(GenericApi, __self__).__init__(
            'fortios:json/genericApi:GenericApi',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            force_recreate: Optional[pulumi.Input[str]] = None,
            json: Optional[pulumi.Input[str]] = None,
            method: Optional[pulumi.Input[str]] = None,
            path: Optional[pulumi.Input[str]] = None,
            response: Optional[pulumi.Input[str]] = None,
            specialparams: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'GenericApi':
        """
        Get an existing GenericApi resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] force_recreate: The argument is optional, if it is set, when its value changes, the resource will be re-created. It is usually used when the return value needs to be forced to update.
        :param pulumi.Input[str] json: Body data in JSON format.
        :param pulumi.Input[str] method: HTTP method.
        :param pulumi.Input[str] path: FortiAPI URL path.
        :param pulumi.Input[str] response: FortiAPI returns results.
        :param pulumi.Input[str] specialparams: URL parameters, in addition to the URL path, user can specify URL parameters which are appended to the URL path.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _GenericApiState.__new__(_GenericApiState)

        __props__.__dict__["force_recreate"] = force_recreate
        __props__.__dict__["json"] = json
        __props__.__dict__["method"] = method
        __props__.__dict__["path"] = path
        __props__.__dict__["response"] = response
        __props__.__dict__["specialparams"] = specialparams
        __props__.__dict__["vdomparam"] = vdomparam
        return GenericApi(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="forceRecreate")
    def force_recreate(self) -> pulumi.Output[Optional[str]]:
        """
        The argument is optional, if it is set, when its value changes, the resource will be re-created. It is usually used when the return value needs to be forced to update.
        """
        return pulumi.get(self, "force_recreate")

    @property
    @pulumi.getter
    def json(self) -> pulumi.Output[Optional[str]]:
        """
        Body data in JSON format.
        """
        return pulumi.get(self, "json")

    @property
    @pulumi.getter
    def method(self) -> pulumi.Output[str]:
        """
        HTTP method.
        """
        return pulumi.get(self, "method")

    @property
    @pulumi.getter
    def path(self) -> pulumi.Output[str]:
        """
        FortiAPI URL path.
        """
        return pulumi.get(self, "path")

    @property
    @pulumi.getter
    def response(self) -> pulumi.Output[str]:
        """
        FortiAPI returns results.
        """
        return pulumi.get(self, "response")

    @property
    @pulumi.getter
    def specialparams(self) -> pulumi.Output[Optional[str]]:
        """
        URL parameters, in addition to the URL path, user can specify URL parameters which are appended to the URL path.
        """
        return pulumi.get(self, "specialparams")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "vdomparam")

