# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'ProfileExemption',
    'ProfileExemptionDevice',
    'ProfileExemptionRule',
]

@pulumi.output_type
class ProfileExemption(dict):
    def __init__(__self__, *,
                 devices: Optional[Sequence['outputs.ProfileExemptionDevice']] = None,
                 id: Optional[int] = None,
                 rules: Optional[Sequence['outputs.ProfileExemptionRule']] = None,
                 status: Optional[str] = None):
        """
        :param Sequence['ProfileExemptionDeviceArgs'] devices: Device MAC addresses. The structure of `device` block is documented below.
        :param int id: IDs.
        :param Sequence['ProfileExemptionRuleArgs'] rules: Patch signature rule IDs. The structure of `rule` block is documented below.
        :param str status: Enable/disable exemption. Valid values: `enable`, `disable`.
        """
        if devices is not None:
            pulumi.set(__self__, "devices", devices)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if rules is not None:
            pulumi.set(__self__, "rules", rules)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def devices(self) -> Optional[Sequence['outputs.ProfileExemptionDevice']]:
        """
        Device MAC addresses. The structure of `device` block is documented below.
        """
        return pulumi.get(self, "devices")

    @property
    @pulumi.getter
    def id(self) -> Optional[int]:
        """
        IDs.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def rules(self) -> Optional[Sequence['outputs.ProfileExemptionRule']]:
        """
        Patch signature rule IDs. The structure of `rule` block is documented below.
        """
        return pulumi.get(self, "rules")

    @property
    @pulumi.getter
    def status(self) -> Optional[str]:
        """
        Enable/disable exemption. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")


@pulumi.output_type
class ProfileExemptionDevice(dict):
    def __init__(__self__, *,
                 mac: Optional[str] = None):
        """
        :param str mac: Device MAC address.
        """
        if mac is not None:
            pulumi.set(__self__, "mac", mac)

    @property
    @pulumi.getter
    def mac(self) -> Optional[str]:
        """
        Device MAC address.
        """
        return pulumi.get(self, "mac")


@pulumi.output_type
class ProfileExemptionRule(dict):
    def __init__(__self__, *,
                 id: Optional[int] = None):
        """
        :param int id: Rule IDs.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def id(self) -> Optional[int]:
        """
        Rule IDs.
        """
        return pulumi.get(self, "id")


