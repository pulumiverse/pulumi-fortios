# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'FmwpMetadataArgs',
    'OtdtMetadataArgs',
    'OtdtParameterArgs',
    'OtvpMetadataArgs',
]

@pulumi.input_type
class FmwpMetadataArgs:
    def __init__(__self__, *,
                 id: Optional[pulumi.Input[int]] = None,
                 metaid: Optional[pulumi.Input[int]] = None,
                 valueid: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[int] id: ID.
        :param pulumi.Input[int] metaid: Meta ID.
        :param pulumi.Input[int] valueid: Value ID.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if metaid is not None:
            pulumi.set(__self__, "metaid", metaid)
        if valueid is not None:
            pulumi.set(__self__, "valueid", valueid)

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[int]]:
        """
        ID.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def metaid(self) -> Optional[pulumi.Input[int]]:
        """
        Meta ID.
        """
        return pulumi.get(self, "metaid")

    @metaid.setter
    def metaid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "metaid", value)

    @property
    @pulumi.getter
    def valueid(self) -> Optional[pulumi.Input[int]]:
        """
        Value ID.
        """
        return pulumi.get(self, "valueid")

    @valueid.setter
    def valueid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "valueid", value)


@pulumi.input_type
class OtdtMetadataArgs:
    def __init__(__self__, *,
                 id: Optional[pulumi.Input[int]] = None,
                 metaid: Optional[pulumi.Input[int]] = None,
                 valueid: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[int] id: ID.
        :param pulumi.Input[int] metaid: Meta ID.
        :param pulumi.Input[int] valueid: Value ID.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if metaid is not None:
            pulumi.set(__self__, "metaid", metaid)
        if valueid is not None:
            pulumi.set(__self__, "valueid", valueid)

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[int]]:
        """
        ID.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def metaid(self) -> Optional[pulumi.Input[int]]:
        """
        Meta ID.
        """
        return pulumi.get(self, "metaid")

    @metaid.setter
    def metaid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "metaid", value)

    @property
    @pulumi.getter
    def valueid(self) -> Optional[pulumi.Input[int]]:
        """
        Value ID.
        """
        return pulumi.get(self, "valueid")

    @valueid.setter
    def valueid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "valueid", value)


@pulumi.input_type
class OtdtParameterArgs:
    def __init__(__self__, *,
                 name: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] name: Parameter name.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Parameter name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class OtvpMetadataArgs:
    def __init__(__self__, *,
                 id: Optional[pulumi.Input[int]] = None,
                 metaid: Optional[pulumi.Input[int]] = None,
                 valueid: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[int] id: ID.
        :param pulumi.Input[int] metaid: Meta ID.
        :param pulumi.Input[int] valueid: Value ID.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if metaid is not None:
            pulumi.set(__self__, "metaid", metaid)
        if valueid is not None:
            pulumi.set(__self__, "valueid", valueid)

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[int]]:
        """
        ID.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def metaid(self) -> Optional[pulumi.Input[int]]:
        """
        Meta ID.
        """
        return pulumi.get(self, "metaid")

    @metaid.setter
    def metaid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "metaid", value)

    @property
    @pulumi.getter
    def valueid(self) -> Optional[pulumi.Input[int]]:
        """
        Value ID.
        """
        return pulumi.get(self, "valueid")

    @valueid.setter
    def valueid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "valueid", value)


