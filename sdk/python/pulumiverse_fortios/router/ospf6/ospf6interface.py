# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs
from ._inputs import *

__all__ = ['Ospf6interfaceArgs', 'Ospf6interface']

@pulumi.input_type
class Ospf6interfaceArgs:
    def __init__(__self__, *,
                 area_id: Optional[pulumi.Input[str]] = None,
                 authentication: Optional[pulumi.Input[str]] = None,
                 bfd: Optional[pulumi.Input[str]] = None,
                 cost: Optional[pulumi.Input[int]] = None,
                 dead_interval: Optional[pulumi.Input[int]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 hello_interval: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 ipsec_auth_alg: Optional[pulumi.Input[str]] = None,
                 ipsec_enc_alg: Optional[pulumi.Input[str]] = None,
                 ipsec_keys: Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceIpsecKeyArgs']]]] = None,
                 key_rollover_interval: Optional[pulumi.Input[int]] = None,
                 mtu: Optional[pulumi.Input[int]] = None,
                 mtu_ignore: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 neighbors: Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceNeighborArgs']]]] = None,
                 network_type: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 retransmit_interval: Optional[pulumi.Input[int]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 transmit_delay: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Ospf6interface resource.
        :param pulumi.Input[str] area_id: A.B.C.D, in IPv4 address format.
        :param pulumi.Input[str] authentication: Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
        :param pulumi.Input[str] bfd: Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
        :param pulumi.Input[int] cost: Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
        :param pulumi.Input[int] dead_interval: Dead interval.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[int] hello_interval: Hello interval.
        :param pulumi.Input[str] interface: Configuration interface name.
        :param pulumi.Input[str] ipsec_auth_alg: Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
        :param pulumi.Input[str] ipsec_enc_alg: Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
        :param pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceIpsecKeyArgs']]] ipsec_keys: IPsec authentication and encryption keys. The structure of `ipsec_keys` block is documented below.
        :param pulumi.Input[int] key_rollover_interval: Key roll-over interval.
        :param pulumi.Input[int] mtu: MTU for OSPFv3 packets.
        :param pulumi.Input[str] mtu_ignore: Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] name: Interface entry name.
        :param pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceNeighborArgs']]] neighbors: OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
        :param pulumi.Input[str] network_type: Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
        :param pulumi.Input[int] priority: priority
        :param pulumi.Input[int] retransmit_interval: Retransmit interval.
        :param pulumi.Input[str] status: Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
        :param pulumi.Input[int] transmit_delay: Transmit delay.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if area_id is not None:
            pulumi.set(__self__, "area_id", area_id)
        if authentication is not None:
            pulumi.set(__self__, "authentication", authentication)
        if bfd is not None:
            pulumi.set(__self__, "bfd", bfd)
        if cost is not None:
            pulumi.set(__self__, "cost", cost)
        if dead_interval is not None:
            pulumi.set(__self__, "dead_interval", dead_interval)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if hello_interval is not None:
            pulumi.set(__self__, "hello_interval", hello_interval)
        if interface is not None:
            pulumi.set(__self__, "interface", interface)
        if ipsec_auth_alg is not None:
            pulumi.set(__self__, "ipsec_auth_alg", ipsec_auth_alg)
        if ipsec_enc_alg is not None:
            pulumi.set(__self__, "ipsec_enc_alg", ipsec_enc_alg)
        if ipsec_keys is not None:
            pulumi.set(__self__, "ipsec_keys", ipsec_keys)
        if key_rollover_interval is not None:
            pulumi.set(__self__, "key_rollover_interval", key_rollover_interval)
        if mtu is not None:
            pulumi.set(__self__, "mtu", mtu)
        if mtu_ignore is not None:
            pulumi.set(__self__, "mtu_ignore", mtu_ignore)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if neighbors is not None:
            pulumi.set(__self__, "neighbors", neighbors)
        if network_type is not None:
            pulumi.set(__self__, "network_type", network_type)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if retransmit_interval is not None:
            pulumi.set(__self__, "retransmit_interval", retransmit_interval)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if transmit_delay is not None:
            pulumi.set(__self__, "transmit_delay", transmit_delay)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="areaId")
    def area_id(self) -> Optional[pulumi.Input[str]]:
        """
        A.B.C.D, in IPv4 address format.
        """
        return pulumi.get(self, "area_id")

    @area_id.setter
    def area_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "area_id", value)

    @property
    @pulumi.getter
    def authentication(self) -> Optional[pulumi.Input[str]]:
        """
        Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
        """
        return pulumi.get(self, "authentication")

    @authentication.setter
    def authentication(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication", value)

    @property
    @pulumi.getter
    def bfd(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
        """
        return pulumi.get(self, "bfd")

    @bfd.setter
    def bfd(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bfd", value)

    @property
    @pulumi.getter
    def cost(self) -> Optional[pulumi.Input[int]]:
        """
        Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
        """
        return pulumi.get(self, "cost")

    @cost.setter
    def cost(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cost", value)

    @property
    @pulumi.getter(name="deadInterval")
    def dead_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Dead interval.
        """
        return pulumi.get(self, "dead_interval")

    @dead_interval.setter
    def dead_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dead_interval", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="helloInterval")
    def hello_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Hello interval.
        """
        return pulumi.get(self, "hello_interval")

    @hello_interval.setter
    def hello_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "hello_interval", value)

    @property
    @pulumi.getter
    def interface(self) -> Optional[pulumi.Input[str]]:
        """
        Configuration interface name.
        """
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter(name="ipsecAuthAlg")
    def ipsec_auth_alg(self) -> Optional[pulumi.Input[str]]:
        """
        Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
        """
        return pulumi.get(self, "ipsec_auth_alg")

    @ipsec_auth_alg.setter
    def ipsec_auth_alg(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_auth_alg", value)

    @property
    @pulumi.getter(name="ipsecEncAlg")
    def ipsec_enc_alg(self) -> Optional[pulumi.Input[str]]:
        """
        Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
        """
        return pulumi.get(self, "ipsec_enc_alg")

    @ipsec_enc_alg.setter
    def ipsec_enc_alg(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_enc_alg", value)

    @property
    @pulumi.getter(name="ipsecKeys")
    def ipsec_keys(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceIpsecKeyArgs']]]]:
        """
        IPsec authentication and encryption keys. The structure of `ipsec_keys` block is documented below.
        """
        return pulumi.get(self, "ipsec_keys")

    @ipsec_keys.setter
    def ipsec_keys(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceIpsecKeyArgs']]]]):
        pulumi.set(self, "ipsec_keys", value)

    @property
    @pulumi.getter(name="keyRolloverInterval")
    def key_rollover_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Key roll-over interval.
        """
        return pulumi.get(self, "key_rollover_interval")

    @key_rollover_interval.setter
    def key_rollover_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "key_rollover_interval", value)

    @property
    @pulumi.getter
    def mtu(self) -> Optional[pulumi.Input[int]]:
        """
        MTU for OSPFv3 packets.
        """
        return pulumi.get(self, "mtu")

    @mtu.setter
    def mtu(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "mtu", value)

    @property
    @pulumi.getter(name="mtuIgnore")
    def mtu_ignore(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "mtu_ignore")

    @mtu_ignore.setter
    def mtu_ignore(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mtu_ignore", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Interface entry name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def neighbors(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceNeighborArgs']]]]:
        """
        OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
        """
        return pulumi.get(self, "neighbors")

    @neighbors.setter
    def neighbors(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceNeighborArgs']]]]):
        pulumi.set(self, "neighbors", value)

    @property
    @pulumi.getter(name="networkType")
    def network_type(self) -> Optional[pulumi.Input[str]]:
        """
        Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
        """
        return pulumi.get(self, "network_type")

    @network_type.setter
    def network_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "network_type", value)

    @property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[int]]:
        """
        priority
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "priority", value)

    @property
    @pulumi.getter(name="retransmitInterval")
    def retransmit_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Retransmit interval.
        """
        return pulumi.get(self, "retransmit_interval")

    @retransmit_interval.setter
    def retransmit_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "retransmit_interval", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="transmitDelay")
    def transmit_delay(self) -> Optional[pulumi.Input[int]]:
        """
        Transmit delay.
        """
        return pulumi.get(self, "transmit_delay")

    @transmit_delay.setter
    def transmit_delay(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "transmit_delay", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _Ospf6interfaceState:
    def __init__(__self__, *,
                 area_id: Optional[pulumi.Input[str]] = None,
                 authentication: Optional[pulumi.Input[str]] = None,
                 bfd: Optional[pulumi.Input[str]] = None,
                 cost: Optional[pulumi.Input[int]] = None,
                 dead_interval: Optional[pulumi.Input[int]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 hello_interval: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 ipsec_auth_alg: Optional[pulumi.Input[str]] = None,
                 ipsec_enc_alg: Optional[pulumi.Input[str]] = None,
                 ipsec_keys: Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceIpsecKeyArgs']]]] = None,
                 key_rollover_interval: Optional[pulumi.Input[int]] = None,
                 mtu: Optional[pulumi.Input[int]] = None,
                 mtu_ignore: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 neighbors: Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceNeighborArgs']]]] = None,
                 network_type: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 retransmit_interval: Optional[pulumi.Input[int]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 transmit_delay: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Ospf6interface resources.
        :param pulumi.Input[str] area_id: A.B.C.D, in IPv4 address format.
        :param pulumi.Input[str] authentication: Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
        :param pulumi.Input[str] bfd: Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
        :param pulumi.Input[int] cost: Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
        :param pulumi.Input[int] dead_interval: Dead interval.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[int] hello_interval: Hello interval.
        :param pulumi.Input[str] interface: Configuration interface name.
        :param pulumi.Input[str] ipsec_auth_alg: Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
        :param pulumi.Input[str] ipsec_enc_alg: Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
        :param pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceIpsecKeyArgs']]] ipsec_keys: IPsec authentication and encryption keys. The structure of `ipsec_keys` block is documented below.
        :param pulumi.Input[int] key_rollover_interval: Key roll-over interval.
        :param pulumi.Input[int] mtu: MTU for OSPFv3 packets.
        :param pulumi.Input[str] mtu_ignore: Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] name: Interface entry name.
        :param pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceNeighborArgs']]] neighbors: OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
        :param pulumi.Input[str] network_type: Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
        :param pulumi.Input[int] priority: priority
        :param pulumi.Input[int] retransmit_interval: Retransmit interval.
        :param pulumi.Input[str] status: Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
        :param pulumi.Input[int] transmit_delay: Transmit delay.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if area_id is not None:
            pulumi.set(__self__, "area_id", area_id)
        if authentication is not None:
            pulumi.set(__self__, "authentication", authentication)
        if bfd is not None:
            pulumi.set(__self__, "bfd", bfd)
        if cost is not None:
            pulumi.set(__self__, "cost", cost)
        if dead_interval is not None:
            pulumi.set(__self__, "dead_interval", dead_interval)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if hello_interval is not None:
            pulumi.set(__self__, "hello_interval", hello_interval)
        if interface is not None:
            pulumi.set(__self__, "interface", interface)
        if ipsec_auth_alg is not None:
            pulumi.set(__self__, "ipsec_auth_alg", ipsec_auth_alg)
        if ipsec_enc_alg is not None:
            pulumi.set(__self__, "ipsec_enc_alg", ipsec_enc_alg)
        if ipsec_keys is not None:
            pulumi.set(__self__, "ipsec_keys", ipsec_keys)
        if key_rollover_interval is not None:
            pulumi.set(__self__, "key_rollover_interval", key_rollover_interval)
        if mtu is not None:
            pulumi.set(__self__, "mtu", mtu)
        if mtu_ignore is not None:
            pulumi.set(__self__, "mtu_ignore", mtu_ignore)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if neighbors is not None:
            pulumi.set(__self__, "neighbors", neighbors)
        if network_type is not None:
            pulumi.set(__self__, "network_type", network_type)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if retransmit_interval is not None:
            pulumi.set(__self__, "retransmit_interval", retransmit_interval)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if transmit_delay is not None:
            pulumi.set(__self__, "transmit_delay", transmit_delay)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="areaId")
    def area_id(self) -> Optional[pulumi.Input[str]]:
        """
        A.B.C.D, in IPv4 address format.
        """
        return pulumi.get(self, "area_id")

    @area_id.setter
    def area_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "area_id", value)

    @property
    @pulumi.getter
    def authentication(self) -> Optional[pulumi.Input[str]]:
        """
        Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
        """
        return pulumi.get(self, "authentication")

    @authentication.setter
    def authentication(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication", value)

    @property
    @pulumi.getter
    def bfd(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
        """
        return pulumi.get(self, "bfd")

    @bfd.setter
    def bfd(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bfd", value)

    @property
    @pulumi.getter
    def cost(self) -> Optional[pulumi.Input[int]]:
        """
        Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
        """
        return pulumi.get(self, "cost")

    @cost.setter
    def cost(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cost", value)

    @property
    @pulumi.getter(name="deadInterval")
    def dead_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Dead interval.
        """
        return pulumi.get(self, "dead_interval")

    @dead_interval.setter
    def dead_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dead_interval", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="helloInterval")
    def hello_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Hello interval.
        """
        return pulumi.get(self, "hello_interval")

    @hello_interval.setter
    def hello_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "hello_interval", value)

    @property
    @pulumi.getter
    def interface(self) -> Optional[pulumi.Input[str]]:
        """
        Configuration interface name.
        """
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter(name="ipsecAuthAlg")
    def ipsec_auth_alg(self) -> Optional[pulumi.Input[str]]:
        """
        Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
        """
        return pulumi.get(self, "ipsec_auth_alg")

    @ipsec_auth_alg.setter
    def ipsec_auth_alg(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_auth_alg", value)

    @property
    @pulumi.getter(name="ipsecEncAlg")
    def ipsec_enc_alg(self) -> Optional[pulumi.Input[str]]:
        """
        Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
        """
        return pulumi.get(self, "ipsec_enc_alg")

    @ipsec_enc_alg.setter
    def ipsec_enc_alg(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipsec_enc_alg", value)

    @property
    @pulumi.getter(name="ipsecKeys")
    def ipsec_keys(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceIpsecKeyArgs']]]]:
        """
        IPsec authentication and encryption keys. The structure of `ipsec_keys` block is documented below.
        """
        return pulumi.get(self, "ipsec_keys")

    @ipsec_keys.setter
    def ipsec_keys(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceIpsecKeyArgs']]]]):
        pulumi.set(self, "ipsec_keys", value)

    @property
    @pulumi.getter(name="keyRolloverInterval")
    def key_rollover_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Key roll-over interval.
        """
        return pulumi.get(self, "key_rollover_interval")

    @key_rollover_interval.setter
    def key_rollover_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "key_rollover_interval", value)

    @property
    @pulumi.getter
    def mtu(self) -> Optional[pulumi.Input[int]]:
        """
        MTU for OSPFv3 packets.
        """
        return pulumi.get(self, "mtu")

    @mtu.setter
    def mtu(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "mtu", value)

    @property
    @pulumi.getter(name="mtuIgnore")
    def mtu_ignore(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "mtu_ignore")

    @mtu_ignore.setter
    def mtu_ignore(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mtu_ignore", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Interface entry name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def neighbors(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceNeighborArgs']]]]:
        """
        OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
        """
        return pulumi.get(self, "neighbors")

    @neighbors.setter
    def neighbors(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Ospf6interfaceNeighborArgs']]]]):
        pulumi.set(self, "neighbors", value)

    @property
    @pulumi.getter(name="networkType")
    def network_type(self) -> Optional[pulumi.Input[str]]:
        """
        Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
        """
        return pulumi.get(self, "network_type")

    @network_type.setter
    def network_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "network_type", value)

    @property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[int]]:
        """
        priority
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "priority", value)

    @property
    @pulumi.getter(name="retransmitInterval")
    def retransmit_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Retransmit interval.
        """
        return pulumi.get(self, "retransmit_interval")

    @retransmit_interval.setter
    def retransmit_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "retransmit_interval", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="transmitDelay")
    def transmit_delay(self) -> Optional[pulumi.Input[int]]:
        """
        Transmit delay.
        """
        return pulumi.get(self, "transmit_delay")

    @transmit_delay.setter
    def transmit_delay(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "transmit_delay", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Ospf6interface(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 area_id: Optional[pulumi.Input[str]] = None,
                 authentication: Optional[pulumi.Input[str]] = None,
                 bfd: Optional[pulumi.Input[str]] = None,
                 cost: Optional[pulumi.Input[int]] = None,
                 dead_interval: Optional[pulumi.Input[int]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 hello_interval: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 ipsec_auth_alg: Optional[pulumi.Input[str]] = None,
                 ipsec_enc_alg: Optional[pulumi.Input[str]] = None,
                 ipsec_keys: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Ospf6interfaceIpsecKeyArgs']]]]] = None,
                 key_rollover_interval: Optional[pulumi.Input[int]] = None,
                 mtu: Optional[pulumi.Input[int]] = None,
                 mtu_ignore: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 neighbors: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Ospf6interfaceNeighborArgs']]]]] = None,
                 network_type: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 retransmit_interval: Optional[pulumi.Input[int]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 transmit_delay: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        OSPF6 interface configuration.

        > The provider supports the definition of Ospf6-Interface in Router Ospf6 `router.Ospf6`, and also allows the definition of separate Ospf6-Interface resources `router/ospf6.Ospf6interface`, but do not use a `router.Ospf6` with in-line Ospf6-Interface in conjunction with any `router/ospf6.Ospf6interface` resources, otherwise conflicts and overwrite will occur.

        ## Import

        Routerospf6 Ospf6Interface can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:router/ospf6/ospf6interface:Ospf6interface labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:router/ospf6/ospf6interface:Ospf6interface labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] area_id: A.B.C.D, in IPv4 address format.
        :param pulumi.Input[str] authentication: Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
        :param pulumi.Input[str] bfd: Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
        :param pulumi.Input[int] cost: Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
        :param pulumi.Input[int] dead_interval: Dead interval.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[int] hello_interval: Hello interval.
        :param pulumi.Input[str] interface: Configuration interface name.
        :param pulumi.Input[str] ipsec_auth_alg: Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
        :param pulumi.Input[str] ipsec_enc_alg: Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Ospf6interfaceIpsecKeyArgs']]]] ipsec_keys: IPsec authentication and encryption keys. The structure of `ipsec_keys` block is documented below.
        :param pulumi.Input[int] key_rollover_interval: Key roll-over interval.
        :param pulumi.Input[int] mtu: MTU for OSPFv3 packets.
        :param pulumi.Input[str] mtu_ignore: Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] name: Interface entry name.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Ospf6interfaceNeighborArgs']]]] neighbors: OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
        :param pulumi.Input[str] network_type: Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
        :param pulumi.Input[int] priority: priority
        :param pulumi.Input[int] retransmit_interval: Retransmit interval.
        :param pulumi.Input[str] status: Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
        :param pulumi.Input[int] transmit_delay: Transmit delay.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[Ospf6interfaceArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        OSPF6 interface configuration.

        > The provider supports the definition of Ospf6-Interface in Router Ospf6 `router.Ospf6`, and also allows the definition of separate Ospf6-Interface resources `router/ospf6.Ospf6interface`, but do not use a `router.Ospf6` with in-line Ospf6-Interface in conjunction with any `router/ospf6.Ospf6interface` resources, otherwise conflicts and overwrite will occur.

        ## Import

        Routerospf6 Ospf6Interface can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:router/ospf6/ospf6interface:Ospf6interface labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:router/ospf6/ospf6interface:Ospf6interface labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param Ospf6interfaceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(Ospf6interfaceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 area_id: Optional[pulumi.Input[str]] = None,
                 authentication: Optional[pulumi.Input[str]] = None,
                 bfd: Optional[pulumi.Input[str]] = None,
                 cost: Optional[pulumi.Input[int]] = None,
                 dead_interval: Optional[pulumi.Input[int]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 hello_interval: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 ipsec_auth_alg: Optional[pulumi.Input[str]] = None,
                 ipsec_enc_alg: Optional[pulumi.Input[str]] = None,
                 ipsec_keys: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Ospf6interfaceIpsecKeyArgs']]]]] = None,
                 key_rollover_interval: Optional[pulumi.Input[int]] = None,
                 mtu: Optional[pulumi.Input[int]] = None,
                 mtu_ignore: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 neighbors: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Ospf6interfaceNeighborArgs']]]]] = None,
                 network_type: Optional[pulumi.Input[str]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 retransmit_interval: Optional[pulumi.Input[int]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 transmit_delay: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = Ospf6interfaceArgs.__new__(Ospf6interfaceArgs)

            __props__.__dict__["area_id"] = area_id
            __props__.__dict__["authentication"] = authentication
            __props__.__dict__["bfd"] = bfd
            __props__.__dict__["cost"] = cost
            __props__.__dict__["dead_interval"] = dead_interval
            __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
            __props__.__dict__["get_all_tables"] = get_all_tables
            __props__.__dict__["hello_interval"] = hello_interval
            __props__.__dict__["interface"] = interface
            __props__.__dict__["ipsec_auth_alg"] = ipsec_auth_alg
            __props__.__dict__["ipsec_enc_alg"] = ipsec_enc_alg
            __props__.__dict__["ipsec_keys"] = ipsec_keys
            __props__.__dict__["key_rollover_interval"] = key_rollover_interval
            __props__.__dict__["mtu"] = mtu
            __props__.__dict__["mtu_ignore"] = mtu_ignore
            __props__.__dict__["name"] = name
            __props__.__dict__["neighbors"] = neighbors
            __props__.__dict__["network_type"] = network_type
            __props__.__dict__["priority"] = priority
            __props__.__dict__["retransmit_interval"] = retransmit_interval
            __props__.__dict__["status"] = status
            __props__.__dict__["transmit_delay"] = transmit_delay
            __props__.__dict__["vdomparam"] = vdomparam
        super(Ospf6interface, __self__).__init__(
            'fortios:router/ospf6/ospf6interface:Ospf6interface',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            area_id: Optional[pulumi.Input[str]] = None,
            authentication: Optional[pulumi.Input[str]] = None,
            bfd: Optional[pulumi.Input[str]] = None,
            cost: Optional[pulumi.Input[int]] = None,
            dead_interval: Optional[pulumi.Input[int]] = None,
            dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
            get_all_tables: Optional[pulumi.Input[str]] = None,
            hello_interval: Optional[pulumi.Input[int]] = None,
            interface: Optional[pulumi.Input[str]] = None,
            ipsec_auth_alg: Optional[pulumi.Input[str]] = None,
            ipsec_enc_alg: Optional[pulumi.Input[str]] = None,
            ipsec_keys: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Ospf6interfaceIpsecKeyArgs']]]]] = None,
            key_rollover_interval: Optional[pulumi.Input[int]] = None,
            mtu: Optional[pulumi.Input[int]] = None,
            mtu_ignore: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            neighbors: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Ospf6interfaceNeighborArgs']]]]] = None,
            network_type: Optional[pulumi.Input[str]] = None,
            priority: Optional[pulumi.Input[int]] = None,
            retransmit_interval: Optional[pulumi.Input[int]] = None,
            status: Optional[pulumi.Input[str]] = None,
            transmit_delay: Optional[pulumi.Input[int]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Ospf6interface':
        """
        Get an existing Ospf6interface resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] area_id: A.B.C.D, in IPv4 address format.
        :param pulumi.Input[str] authentication: Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
        :param pulumi.Input[str] bfd: Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
        :param pulumi.Input[int] cost: Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
        :param pulumi.Input[int] dead_interval: Dead interval.
        :param pulumi.Input[str] dynamic_sort_subtable: Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        :param pulumi.Input[str] get_all_tables: Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        :param pulumi.Input[int] hello_interval: Hello interval.
        :param pulumi.Input[str] interface: Configuration interface name.
        :param pulumi.Input[str] ipsec_auth_alg: Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
        :param pulumi.Input[str] ipsec_enc_alg: Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Ospf6interfaceIpsecKeyArgs']]]] ipsec_keys: IPsec authentication and encryption keys. The structure of `ipsec_keys` block is documented below.
        :param pulumi.Input[int] key_rollover_interval: Key roll-over interval.
        :param pulumi.Input[int] mtu: MTU for OSPFv3 packets.
        :param pulumi.Input[str] mtu_ignore: Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] name: Interface entry name.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Ospf6interfaceNeighborArgs']]]] neighbors: OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
        :param pulumi.Input[str] network_type: Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
        :param pulumi.Input[int] priority: priority
        :param pulumi.Input[int] retransmit_interval: Retransmit interval.
        :param pulumi.Input[str] status: Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
        :param pulumi.Input[int] transmit_delay: Transmit delay.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _Ospf6interfaceState.__new__(_Ospf6interfaceState)

        __props__.__dict__["area_id"] = area_id
        __props__.__dict__["authentication"] = authentication
        __props__.__dict__["bfd"] = bfd
        __props__.__dict__["cost"] = cost
        __props__.__dict__["dead_interval"] = dead_interval
        __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
        __props__.__dict__["get_all_tables"] = get_all_tables
        __props__.__dict__["hello_interval"] = hello_interval
        __props__.__dict__["interface"] = interface
        __props__.__dict__["ipsec_auth_alg"] = ipsec_auth_alg
        __props__.__dict__["ipsec_enc_alg"] = ipsec_enc_alg
        __props__.__dict__["ipsec_keys"] = ipsec_keys
        __props__.__dict__["key_rollover_interval"] = key_rollover_interval
        __props__.__dict__["mtu"] = mtu
        __props__.__dict__["mtu_ignore"] = mtu_ignore
        __props__.__dict__["name"] = name
        __props__.__dict__["neighbors"] = neighbors
        __props__.__dict__["network_type"] = network_type
        __props__.__dict__["priority"] = priority
        __props__.__dict__["retransmit_interval"] = retransmit_interval
        __props__.__dict__["status"] = status
        __props__.__dict__["transmit_delay"] = transmit_delay
        __props__.__dict__["vdomparam"] = vdomparam
        return Ospf6interface(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="areaId")
    def area_id(self) -> pulumi.Output[str]:
        """
        A.B.C.D, in IPv4 address format.
        """
        return pulumi.get(self, "area_id")

    @property
    @pulumi.getter
    def authentication(self) -> pulumi.Output[str]:
        """
        Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
        """
        return pulumi.get(self, "authentication")

    @property
    @pulumi.getter
    def bfd(self) -> pulumi.Output[str]:
        """
        Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
        """
        return pulumi.get(self, "bfd")

    @property
    @pulumi.getter
    def cost(self) -> pulumi.Output[int]:
        """
        Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
        """
        return pulumi.get(self, "cost")

    @property
    @pulumi.getter(name="deadInterval")
    def dead_interval(self) -> pulumi.Output[int]:
        """
        Dead interval.
        """
        return pulumi.get(self, "dead_interval")

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> pulumi.Output[Optional[str]]:
        """
        Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
        """
        return pulumi.get(self, "dynamic_sort_subtable")

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> pulumi.Output[Optional[str]]:
        """
        Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
        """
        return pulumi.get(self, "get_all_tables")

    @property
    @pulumi.getter(name="helloInterval")
    def hello_interval(self) -> pulumi.Output[int]:
        """
        Hello interval.
        """
        return pulumi.get(self, "hello_interval")

    @property
    @pulumi.getter
    def interface(self) -> pulumi.Output[str]:
        """
        Configuration interface name.
        """
        return pulumi.get(self, "interface")

    @property
    @pulumi.getter(name="ipsecAuthAlg")
    def ipsec_auth_alg(self) -> pulumi.Output[str]:
        """
        Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
        """
        return pulumi.get(self, "ipsec_auth_alg")

    @property
    @pulumi.getter(name="ipsecEncAlg")
    def ipsec_enc_alg(self) -> pulumi.Output[str]:
        """
        Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
        """
        return pulumi.get(self, "ipsec_enc_alg")

    @property
    @pulumi.getter(name="ipsecKeys")
    def ipsec_keys(self) -> pulumi.Output[Optional[Sequence['outputs.Ospf6interfaceIpsecKey']]]:
        """
        IPsec authentication and encryption keys. The structure of `ipsec_keys` block is documented below.
        """
        return pulumi.get(self, "ipsec_keys")

    @property
    @pulumi.getter(name="keyRolloverInterval")
    def key_rollover_interval(self) -> pulumi.Output[int]:
        """
        Key roll-over interval.
        """
        return pulumi.get(self, "key_rollover_interval")

    @property
    @pulumi.getter
    def mtu(self) -> pulumi.Output[int]:
        """
        MTU for OSPFv3 packets.
        """
        return pulumi.get(self, "mtu")

    @property
    @pulumi.getter(name="mtuIgnore")
    def mtu_ignore(self) -> pulumi.Output[str]:
        """
        Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "mtu_ignore")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Interface entry name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def neighbors(self) -> pulumi.Output[Optional[Sequence['outputs.Ospf6interfaceNeighbor']]]:
        """
        OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
        """
        return pulumi.get(self, "neighbors")

    @property
    @pulumi.getter(name="networkType")
    def network_type(self) -> pulumi.Output[str]:
        """
        Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
        """
        return pulumi.get(self, "network_type")

    @property
    @pulumi.getter
    def priority(self) -> pulumi.Output[int]:
        """
        priority
        """
        return pulumi.get(self, "priority")

    @property
    @pulumi.getter(name="retransmitInterval")
    def retransmit_interval(self) -> pulumi.Output[int]:
        """
        Retransmit interval.
        """
        return pulumi.get(self, "retransmit_interval")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="transmitDelay")
    def transmit_delay(self) -> pulumi.Output[int]:
        """
        Transmit delay.
        """
        return pulumi.get(self, "transmit_delay")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

