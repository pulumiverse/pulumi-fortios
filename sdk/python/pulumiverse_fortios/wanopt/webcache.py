# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['WebcacheArgs', 'Webcache']

@pulumi.input_type
class WebcacheArgs:
    def __init__(__self__, *,
                 always_revalidate: Optional[pulumi.Input[str]] = None,
                 cache_by_default: Optional[pulumi.Input[str]] = None,
                 cache_cookie: Optional[pulumi.Input[str]] = None,
                 cache_expired: Optional[pulumi.Input[str]] = None,
                 default_ttl: Optional[pulumi.Input[int]] = None,
                 external: Optional[pulumi.Input[str]] = None,
                 fresh_factor: Optional[pulumi.Input[int]] = None,
                 host_validate: Optional[pulumi.Input[str]] = None,
                 ignore_conditional: Optional[pulumi.Input[str]] = None,
                 ignore_ie_reload: Optional[pulumi.Input[str]] = None,
                 ignore_ims: Optional[pulumi.Input[str]] = None,
                 ignore_pnc: Optional[pulumi.Input[str]] = None,
                 max_object_size: Optional[pulumi.Input[int]] = None,
                 max_ttl: Optional[pulumi.Input[int]] = None,
                 min_ttl: Optional[pulumi.Input[int]] = None,
                 neg_resp_time: Optional[pulumi.Input[int]] = None,
                 reval_pnc: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Webcache resource.
        :param pulumi.Input[str] always_revalidate: Enable/disable revalidation of requested cached objects, which have content on the server, before serving it to the client. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_by_default: Enable/disable caching content that lacks explicit caching policies from the server. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_cookie: Enable/disable caching cookies. Since cookies contain information for or about individual users, they not usually cached. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_expired: Enable/disable caching type-1 objects that are already expired on arrival. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] default_ttl: Default object expiry time (default = 1440 min (1 day); maximum = 5256000 min (10 years)). This only applies to those objects that do not have an expiry time set by the web server.
        :param pulumi.Input[str] external: Enable/disable external Web caching. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] fresh_factor: Frequency that the server is checked to see if any objects have expired (1 - 100, default = 100). The higher the fresh factor, the less often the checks occur.
        :param pulumi.Input[str] host_validate: Enable/disable validating "Host:" with original server IP. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_conditional: Enable/disable controlling the behavior of cache-control HTTP 1.1 header values. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_ie_reload: Enable/disable ignoring the PNC-interpretation of Internet Explorer's Accept: / header. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_ims: Enable/disable ignoring the if-modified-since (IMS) header. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_pnc: Enable/disable ignoring the pragma no-cache (PNC) header. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] max_object_size: Maximum cacheable object size in kB (1 - 2147483 kb (2GB). All objects that exceed this are delivered to the client but not stored in the web cache.
        :param pulumi.Input[int] max_ttl: Maximum time an object can stay in the web cache without checking to see if it has expired on the server (default = 7200 min (5 days); maximum = 5256000 min (10 years)).
        :param pulumi.Input[int] min_ttl: Minimum time an object can stay in the web cache without checking to see if it has expired on the server (default = 5 min; maximum = 5256000 (10 years)).
        :param pulumi.Input[int] neg_resp_time: Time in minutes to cache negative responses or errors (0 - 4294967295, default = 0  which means negative responses are not cached).
        :param pulumi.Input[str] reval_pnc: Enable/disable revalidation of pragma-no-cache (PNC) to address bandwidth concerns. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if always_revalidate is not None:
            pulumi.set(__self__, "always_revalidate", always_revalidate)
        if cache_by_default is not None:
            pulumi.set(__self__, "cache_by_default", cache_by_default)
        if cache_cookie is not None:
            pulumi.set(__self__, "cache_cookie", cache_cookie)
        if cache_expired is not None:
            pulumi.set(__self__, "cache_expired", cache_expired)
        if default_ttl is not None:
            pulumi.set(__self__, "default_ttl", default_ttl)
        if external is not None:
            pulumi.set(__self__, "external", external)
        if fresh_factor is not None:
            pulumi.set(__self__, "fresh_factor", fresh_factor)
        if host_validate is not None:
            pulumi.set(__self__, "host_validate", host_validate)
        if ignore_conditional is not None:
            pulumi.set(__self__, "ignore_conditional", ignore_conditional)
        if ignore_ie_reload is not None:
            pulumi.set(__self__, "ignore_ie_reload", ignore_ie_reload)
        if ignore_ims is not None:
            pulumi.set(__self__, "ignore_ims", ignore_ims)
        if ignore_pnc is not None:
            pulumi.set(__self__, "ignore_pnc", ignore_pnc)
        if max_object_size is not None:
            pulumi.set(__self__, "max_object_size", max_object_size)
        if max_ttl is not None:
            pulumi.set(__self__, "max_ttl", max_ttl)
        if min_ttl is not None:
            pulumi.set(__self__, "min_ttl", min_ttl)
        if neg_resp_time is not None:
            pulumi.set(__self__, "neg_resp_time", neg_resp_time)
        if reval_pnc is not None:
            pulumi.set(__self__, "reval_pnc", reval_pnc)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="alwaysRevalidate")
    def always_revalidate(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable revalidation of requested cached objects, which have content on the server, before serving it to the client. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "always_revalidate")

    @always_revalidate.setter
    def always_revalidate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "always_revalidate", value)

    @property
    @pulumi.getter(name="cacheByDefault")
    def cache_by_default(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable caching content that lacks explicit caching policies from the server. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cache_by_default")

    @cache_by_default.setter
    def cache_by_default(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cache_by_default", value)

    @property
    @pulumi.getter(name="cacheCookie")
    def cache_cookie(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable caching cookies. Since cookies contain information for or about individual users, they not usually cached. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cache_cookie")

    @cache_cookie.setter
    def cache_cookie(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cache_cookie", value)

    @property
    @pulumi.getter(name="cacheExpired")
    def cache_expired(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable caching type-1 objects that are already expired on arrival. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cache_expired")

    @cache_expired.setter
    def cache_expired(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cache_expired", value)

    @property
    @pulumi.getter(name="defaultTtl")
    def default_ttl(self) -> Optional[pulumi.Input[int]]:
        """
        Default object expiry time (default = 1440 min (1 day); maximum = 5256000 min (10 years)). This only applies to those objects that do not have an expiry time set by the web server.
        """
        return pulumi.get(self, "default_ttl")

    @default_ttl.setter
    def default_ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "default_ttl", value)

    @property
    @pulumi.getter
    def external(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable external Web caching. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "external")

    @external.setter
    def external(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "external", value)

    @property
    @pulumi.getter(name="freshFactor")
    def fresh_factor(self) -> Optional[pulumi.Input[int]]:
        """
        Frequency that the server is checked to see if any objects have expired (1 - 100, default = 100). The higher the fresh factor, the less often the checks occur.
        """
        return pulumi.get(self, "fresh_factor")

    @fresh_factor.setter
    def fresh_factor(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "fresh_factor", value)

    @property
    @pulumi.getter(name="hostValidate")
    def host_validate(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable validating "Host:" with original server IP. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "host_validate")

    @host_validate.setter
    def host_validate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_validate", value)

    @property
    @pulumi.getter(name="ignoreConditional")
    def ignore_conditional(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable controlling the behavior of cache-control HTTP 1.1 header values. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_conditional")

    @ignore_conditional.setter
    def ignore_conditional(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ignore_conditional", value)

    @property
    @pulumi.getter(name="ignoreIeReload")
    def ignore_ie_reload(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable ignoring the PNC-interpretation of Internet Explorer's Accept: / header. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_ie_reload")

    @ignore_ie_reload.setter
    def ignore_ie_reload(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ignore_ie_reload", value)

    @property
    @pulumi.getter(name="ignoreIms")
    def ignore_ims(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable ignoring the if-modified-since (IMS) header. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_ims")

    @ignore_ims.setter
    def ignore_ims(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ignore_ims", value)

    @property
    @pulumi.getter(name="ignorePnc")
    def ignore_pnc(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable ignoring the pragma no-cache (PNC) header. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_pnc")

    @ignore_pnc.setter
    def ignore_pnc(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ignore_pnc", value)

    @property
    @pulumi.getter(name="maxObjectSize")
    def max_object_size(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum cacheable object size in kB (1 - 2147483 kb (2GB). All objects that exceed this are delivered to the client but not stored in the web cache.
        """
        return pulumi.get(self, "max_object_size")

    @max_object_size.setter
    def max_object_size(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_object_size", value)

    @property
    @pulumi.getter(name="maxTtl")
    def max_ttl(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum time an object can stay in the web cache without checking to see if it has expired on the server (default = 7200 min (5 days); maximum = 5256000 min (10 years)).
        """
        return pulumi.get(self, "max_ttl")

    @max_ttl.setter
    def max_ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_ttl", value)

    @property
    @pulumi.getter(name="minTtl")
    def min_ttl(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum time an object can stay in the web cache without checking to see if it has expired on the server (default = 5 min; maximum = 5256000 (10 years)).
        """
        return pulumi.get(self, "min_ttl")

    @min_ttl.setter
    def min_ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_ttl", value)

    @property
    @pulumi.getter(name="negRespTime")
    def neg_resp_time(self) -> Optional[pulumi.Input[int]]:
        """
        Time in minutes to cache negative responses or errors (0 - 4294967295, default = 0  which means negative responses are not cached).
        """
        return pulumi.get(self, "neg_resp_time")

    @neg_resp_time.setter
    def neg_resp_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "neg_resp_time", value)

    @property
    @pulumi.getter(name="revalPnc")
    def reval_pnc(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable revalidation of pragma-no-cache (PNC) to address bandwidth concerns. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "reval_pnc")

    @reval_pnc.setter
    def reval_pnc(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reval_pnc", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _WebcacheState:
    def __init__(__self__, *,
                 always_revalidate: Optional[pulumi.Input[str]] = None,
                 cache_by_default: Optional[pulumi.Input[str]] = None,
                 cache_cookie: Optional[pulumi.Input[str]] = None,
                 cache_expired: Optional[pulumi.Input[str]] = None,
                 default_ttl: Optional[pulumi.Input[int]] = None,
                 external: Optional[pulumi.Input[str]] = None,
                 fresh_factor: Optional[pulumi.Input[int]] = None,
                 host_validate: Optional[pulumi.Input[str]] = None,
                 ignore_conditional: Optional[pulumi.Input[str]] = None,
                 ignore_ie_reload: Optional[pulumi.Input[str]] = None,
                 ignore_ims: Optional[pulumi.Input[str]] = None,
                 ignore_pnc: Optional[pulumi.Input[str]] = None,
                 max_object_size: Optional[pulumi.Input[int]] = None,
                 max_ttl: Optional[pulumi.Input[int]] = None,
                 min_ttl: Optional[pulumi.Input[int]] = None,
                 neg_resp_time: Optional[pulumi.Input[int]] = None,
                 reval_pnc: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Webcache resources.
        :param pulumi.Input[str] always_revalidate: Enable/disable revalidation of requested cached objects, which have content on the server, before serving it to the client. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_by_default: Enable/disable caching content that lacks explicit caching policies from the server. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_cookie: Enable/disable caching cookies. Since cookies contain information for or about individual users, they not usually cached. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_expired: Enable/disable caching type-1 objects that are already expired on arrival. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] default_ttl: Default object expiry time (default = 1440 min (1 day); maximum = 5256000 min (10 years)). This only applies to those objects that do not have an expiry time set by the web server.
        :param pulumi.Input[str] external: Enable/disable external Web caching. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] fresh_factor: Frequency that the server is checked to see if any objects have expired (1 - 100, default = 100). The higher the fresh factor, the less often the checks occur.
        :param pulumi.Input[str] host_validate: Enable/disable validating "Host:" with original server IP. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_conditional: Enable/disable controlling the behavior of cache-control HTTP 1.1 header values. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_ie_reload: Enable/disable ignoring the PNC-interpretation of Internet Explorer's Accept: / header. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_ims: Enable/disable ignoring the if-modified-since (IMS) header. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_pnc: Enable/disable ignoring the pragma no-cache (PNC) header. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] max_object_size: Maximum cacheable object size in kB (1 - 2147483 kb (2GB). All objects that exceed this are delivered to the client but not stored in the web cache.
        :param pulumi.Input[int] max_ttl: Maximum time an object can stay in the web cache without checking to see if it has expired on the server (default = 7200 min (5 days); maximum = 5256000 min (10 years)).
        :param pulumi.Input[int] min_ttl: Minimum time an object can stay in the web cache without checking to see if it has expired on the server (default = 5 min; maximum = 5256000 (10 years)).
        :param pulumi.Input[int] neg_resp_time: Time in minutes to cache negative responses or errors (0 - 4294967295, default = 0  which means negative responses are not cached).
        :param pulumi.Input[str] reval_pnc: Enable/disable revalidation of pragma-no-cache (PNC) to address bandwidth concerns. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if always_revalidate is not None:
            pulumi.set(__self__, "always_revalidate", always_revalidate)
        if cache_by_default is not None:
            pulumi.set(__self__, "cache_by_default", cache_by_default)
        if cache_cookie is not None:
            pulumi.set(__self__, "cache_cookie", cache_cookie)
        if cache_expired is not None:
            pulumi.set(__self__, "cache_expired", cache_expired)
        if default_ttl is not None:
            pulumi.set(__self__, "default_ttl", default_ttl)
        if external is not None:
            pulumi.set(__self__, "external", external)
        if fresh_factor is not None:
            pulumi.set(__self__, "fresh_factor", fresh_factor)
        if host_validate is not None:
            pulumi.set(__self__, "host_validate", host_validate)
        if ignore_conditional is not None:
            pulumi.set(__self__, "ignore_conditional", ignore_conditional)
        if ignore_ie_reload is not None:
            pulumi.set(__self__, "ignore_ie_reload", ignore_ie_reload)
        if ignore_ims is not None:
            pulumi.set(__self__, "ignore_ims", ignore_ims)
        if ignore_pnc is not None:
            pulumi.set(__self__, "ignore_pnc", ignore_pnc)
        if max_object_size is not None:
            pulumi.set(__self__, "max_object_size", max_object_size)
        if max_ttl is not None:
            pulumi.set(__self__, "max_ttl", max_ttl)
        if min_ttl is not None:
            pulumi.set(__self__, "min_ttl", min_ttl)
        if neg_resp_time is not None:
            pulumi.set(__self__, "neg_resp_time", neg_resp_time)
        if reval_pnc is not None:
            pulumi.set(__self__, "reval_pnc", reval_pnc)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="alwaysRevalidate")
    def always_revalidate(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable revalidation of requested cached objects, which have content on the server, before serving it to the client. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "always_revalidate")

    @always_revalidate.setter
    def always_revalidate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "always_revalidate", value)

    @property
    @pulumi.getter(name="cacheByDefault")
    def cache_by_default(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable caching content that lacks explicit caching policies from the server. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cache_by_default")

    @cache_by_default.setter
    def cache_by_default(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cache_by_default", value)

    @property
    @pulumi.getter(name="cacheCookie")
    def cache_cookie(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable caching cookies. Since cookies contain information for or about individual users, they not usually cached. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cache_cookie")

    @cache_cookie.setter
    def cache_cookie(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cache_cookie", value)

    @property
    @pulumi.getter(name="cacheExpired")
    def cache_expired(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable caching type-1 objects that are already expired on arrival. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cache_expired")

    @cache_expired.setter
    def cache_expired(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cache_expired", value)

    @property
    @pulumi.getter(name="defaultTtl")
    def default_ttl(self) -> Optional[pulumi.Input[int]]:
        """
        Default object expiry time (default = 1440 min (1 day); maximum = 5256000 min (10 years)). This only applies to those objects that do not have an expiry time set by the web server.
        """
        return pulumi.get(self, "default_ttl")

    @default_ttl.setter
    def default_ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "default_ttl", value)

    @property
    @pulumi.getter
    def external(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable external Web caching. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "external")

    @external.setter
    def external(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "external", value)

    @property
    @pulumi.getter(name="freshFactor")
    def fresh_factor(self) -> Optional[pulumi.Input[int]]:
        """
        Frequency that the server is checked to see if any objects have expired (1 - 100, default = 100). The higher the fresh factor, the less often the checks occur.
        """
        return pulumi.get(self, "fresh_factor")

    @fresh_factor.setter
    def fresh_factor(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "fresh_factor", value)

    @property
    @pulumi.getter(name="hostValidate")
    def host_validate(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable validating "Host:" with original server IP. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "host_validate")

    @host_validate.setter
    def host_validate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_validate", value)

    @property
    @pulumi.getter(name="ignoreConditional")
    def ignore_conditional(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable controlling the behavior of cache-control HTTP 1.1 header values. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_conditional")

    @ignore_conditional.setter
    def ignore_conditional(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ignore_conditional", value)

    @property
    @pulumi.getter(name="ignoreIeReload")
    def ignore_ie_reload(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable ignoring the PNC-interpretation of Internet Explorer's Accept: / header. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_ie_reload")

    @ignore_ie_reload.setter
    def ignore_ie_reload(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ignore_ie_reload", value)

    @property
    @pulumi.getter(name="ignoreIms")
    def ignore_ims(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable ignoring the if-modified-since (IMS) header. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_ims")

    @ignore_ims.setter
    def ignore_ims(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ignore_ims", value)

    @property
    @pulumi.getter(name="ignorePnc")
    def ignore_pnc(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable ignoring the pragma no-cache (PNC) header. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_pnc")

    @ignore_pnc.setter
    def ignore_pnc(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ignore_pnc", value)

    @property
    @pulumi.getter(name="maxObjectSize")
    def max_object_size(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum cacheable object size in kB (1 - 2147483 kb (2GB). All objects that exceed this are delivered to the client but not stored in the web cache.
        """
        return pulumi.get(self, "max_object_size")

    @max_object_size.setter
    def max_object_size(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_object_size", value)

    @property
    @pulumi.getter(name="maxTtl")
    def max_ttl(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum time an object can stay in the web cache without checking to see if it has expired on the server (default = 7200 min (5 days); maximum = 5256000 min (10 years)).
        """
        return pulumi.get(self, "max_ttl")

    @max_ttl.setter
    def max_ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_ttl", value)

    @property
    @pulumi.getter(name="minTtl")
    def min_ttl(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum time an object can stay in the web cache without checking to see if it has expired on the server (default = 5 min; maximum = 5256000 (10 years)).
        """
        return pulumi.get(self, "min_ttl")

    @min_ttl.setter
    def min_ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_ttl", value)

    @property
    @pulumi.getter(name="negRespTime")
    def neg_resp_time(self) -> Optional[pulumi.Input[int]]:
        """
        Time in minutes to cache negative responses or errors (0 - 4294967295, default = 0  which means negative responses are not cached).
        """
        return pulumi.get(self, "neg_resp_time")

    @neg_resp_time.setter
    def neg_resp_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "neg_resp_time", value)

    @property
    @pulumi.getter(name="revalPnc")
    def reval_pnc(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable revalidation of pragma-no-cache (PNC) to address bandwidth concerns. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "reval_pnc")

    @reval_pnc.setter
    def reval_pnc(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reval_pnc", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Webcache(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 always_revalidate: Optional[pulumi.Input[str]] = None,
                 cache_by_default: Optional[pulumi.Input[str]] = None,
                 cache_cookie: Optional[pulumi.Input[str]] = None,
                 cache_expired: Optional[pulumi.Input[str]] = None,
                 default_ttl: Optional[pulumi.Input[int]] = None,
                 external: Optional[pulumi.Input[str]] = None,
                 fresh_factor: Optional[pulumi.Input[int]] = None,
                 host_validate: Optional[pulumi.Input[str]] = None,
                 ignore_conditional: Optional[pulumi.Input[str]] = None,
                 ignore_ie_reload: Optional[pulumi.Input[str]] = None,
                 ignore_ims: Optional[pulumi.Input[str]] = None,
                 ignore_pnc: Optional[pulumi.Input[str]] = None,
                 max_object_size: Optional[pulumi.Input[int]] = None,
                 max_ttl: Optional[pulumi.Input[int]] = None,
                 min_ttl: Optional[pulumi.Input[int]] = None,
                 neg_resp_time: Optional[pulumi.Input[int]] = None,
                 reval_pnc: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure global Web cache settings.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.wanopt.Webcache("trname",
            always_revalidate="disable",
            cache_by_default="disable",
            cache_cookie="disable",
            cache_expired="disable",
            default_ttl=1440,
            external="disable",
            fresh_factor=100,
            host_validate="disable",
            ignore_conditional="disable",
            ignore_ie_reload="enable",
            ignore_ims="disable",
            ignore_pnc="disable",
            max_object_size=512000,
            max_ttl=7200,
            min_ttl=5,
            neg_resp_time=0,
            reval_pnc="disable")
        ```

        ## Import

        Wanopt Webcache can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:wanopt/webcache:Webcache labelname WanoptWebcache
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:wanopt/webcache:Webcache labelname WanoptWebcache
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] always_revalidate: Enable/disable revalidation of requested cached objects, which have content on the server, before serving it to the client. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_by_default: Enable/disable caching content that lacks explicit caching policies from the server. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_cookie: Enable/disable caching cookies. Since cookies contain information for or about individual users, they not usually cached. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_expired: Enable/disable caching type-1 objects that are already expired on arrival. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] default_ttl: Default object expiry time (default = 1440 min (1 day); maximum = 5256000 min (10 years)). This only applies to those objects that do not have an expiry time set by the web server.
        :param pulumi.Input[str] external: Enable/disable external Web caching. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] fresh_factor: Frequency that the server is checked to see if any objects have expired (1 - 100, default = 100). The higher the fresh factor, the less often the checks occur.
        :param pulumi.Input[str] host_validate: Enable/disable validating "Host:" with original server IP. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_conditional: Enable/disable controlling the behavior of cache-control HTTP 1.1 header values. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_ie_reload: Enable/disable ignoring the PNC-interpretation of Internet Explorer's Accept: / header. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_ims: Enable/disable ignoring the if-modified-since (IMS) header. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_pnc: Enable/disable ignoring the pragma no-cache (PNC) header. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] max_object_size: Maximum cacheable object size in kB (1 - 2147483 kb (2GB). All objects that exceed this are delivered to the client but not stored in the web cache.
        :param pulumi.Input[int] max_ttl: Maximum time an object can stay in the web cache without checking to see if it has expired on the server (default = 7200 min (5 days); maximum = 5256000 min (10 years)).
        :param pulumi.Input[int] min_ttl: Minimum time an object can stay in the web cache without checking to see if it has expired on the server (default = 5 min; maximum = 5256000 (10 years)).
        :param pulumi.Input[int] neg_resp_time: Time in minutes to cache negative responses or errors (0 - 4294967295, default = 0  which means negative responses are not cached).
        :param pulumi.Input[str] reval_pnc: Enable/disable revalidation of pragma-no-cache (PNC) to address bandwidth concerns. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[WebcacheArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure global Web cache settings.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.wanopt.Webcache("trname",
            always_revalidate="disable",
            cache_by_default="disable",
            cache_cookie="disable",
            cache_expired="disable",
            default_ttl=1440,
            external="disable",
            fresh_factor=100,
            host_validate="disable",
            ignore_conditional="disable",
            ignore_ie_reload="enable",
            ignore_ims="disable",
            ignore_pnc="disable",
            max_object_size=512000,
            max_ttl=7200,
            min_ttl=5,
            neg_resp_time=0,
            reval_pnc="disable")
        ```

        ## Import

        Wanopt Webcache can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:wanopt/webcache:Webcache labelname WanoptWebcache
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:wanopt/webcache:Webcache labelname WanoptWebcache
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param WebcacheArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(WebcacheArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 always_revalidate: Optional[pulumi.Input[str]] = None,
                 cache_by_default: Optional[pulumi.Input[str]] = None,
                 cache_cookie: Optional[pulumi.Input[str]] = None,
                 cache_expired: Optional[pulumi.Input[str]] = None,
                 default_ttl: Optional[pulumi.Input[int]] = None,
                 external: Optional[pulumi.Input[str]] = None,
                 fresh_factor: Optional[pulumi.Input[int]] = None,
                 host_validate: Optional[pulumi.Input[str]] = None,
                 ignore_conditional: Optional[pulumi.Input[str]] = None,
                 ignore_ie_reload: Optional[pulumi.Input[str]] = None,
                 ignore_ims: Optional[pulumi.Input[str]] = None,
                 ignore_pnc: Optional[pulumi.Input[str]] = None,
                 max_object_size: Optional[pulumi.Input[int]] = None,
                 max_ttl: Optional[pulumi.Input[int]] = None,
                 min_ttl: Optional[pulumi.Input[int]] = None,
                 neg_resp_time: Optional[pulumi.Input[int]] = None,
                 reval_pnc: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = WebcacheArgs.__new__(WebcacheArgs)

            __props__.__dict__["always_revalidate"] = always_revalidate
            __props__.__dict__["cache_by_default"] = cache_by_default
            __props__.__dict__["cache_cookie"] = cache_cookie
            __props__.__dict__["cache_expired"] = cache_expired
            __props__.__dict__["default_ttl"] = default_ttl
            __props__.__dict__["external"] = external
            __props__.__dict__["fresh_factor"] = fresh_factor
            __props__.__dict__["host_validate"] = host_validate
            __props__.__dict__["ignore_conditional"] = ignore_conditional
            __props__.__dict__["ignore_ie_reload"] = ignore_ie_reload
            __props__.__dict__["ignore_ims"] = ignore_ims
            __props__.__dict__["ignore_pnc"] = ignore_pnc
            __props__.__dict__["max_object_size"] = max_object_size
            __props__.__dict__["max_ttl"] = max_ttl
            __props__.__dict__["min_ttl"] = min_ttl
            __props__.__dict__["neg_resp_time"] = neg_resp_time
            __props__.__dict__["reval_pnc"] = reval_pnc
            __props__.__dict__["vdomparam"] = vdomparam
        super(Webcache, __self__).__init__(
            'fortios:wanopt/webcache:Webcache',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            always_revalidate: Optional[pulumi.Input[str]] = None,
            cache_by_default: Optional[pulumi.Input[str]] = None,
            cache_cookie: Optional[pulumi.Input[str]] = None,
            cache_expired: Optional[pulumi.Input[str]] = None,
            default_ttl: Optional[pulumi.Input[int]] = None,
            external: Optional[pulumi.Input[str]] = None,
            fresh_factor: Optional[pulumi.Input[int]] = None,
            host_validate: Optional[pulumi.Input[str]] = None,
            ignore_conditional: Optional[pulumi.Input[str]] = None,
            ignore_ie_reload: Optional[pulumi.Input[str]] = None,
            ignore_ims: Optional[pulumi.Input[str]] = None,
            ignore_pnc: Optional[pulumi.Input[str]] = None,
            max_object_size: Optional[pulumi.Input[int]] = None,
            max_ttl: Optional[pulumi.Input[int]] = None,
            min_ttl: Optional[pulumi.Input[int]] = None,
            neg_resp_time: Optional[pulumi.Input[int]] = None,
            reval_pnc: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Webcache':
        """
        Get an existing Webcache resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] always_revalidate: Enable/disable revalidation of requested cached objects, which have content on the server, before serving it to the client. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_by_default: Enable/disable caching content that lacks explicit caching policies from the server. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_cookie: Enable/disable caching cookies. Since cookies contain information for or about individual users, they not usually cached. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] cache_expired: Enable/disable caching type-1 objects that are already expired on arrival. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] default_ttl: Default object expiry time (default = 1440 min (1 day); maximum = 5256000 min (10 years)). This only applies to those objects that do not have an expiry time set by the web server.
        :param pulumi.Input[str] external: Enable/disable external Web caching. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] fresh_factor: Frequency that the server is checked to see if any objects have expired (1 - 100, default = 100). The higher the fresh factor, the less often the checks occur.
        :param pulumi.Input[str] host_validate: Enable/disable validating "Host:" with original server IP. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_conditional: Enable/disable controlling the behavior of cache-control HTTP 1.1 header values. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_ie_reload: Enable/disable ignoring the PNC-interpretation of Internet Explorer's Accept: / header. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_ims: Enable/disable ignoring the if-modified-since (IMS) header. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] ignore_pnc: Enable/disable ignoring the pragma no-cache (PNC) header. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] max_object_size: Maximum cacheable object size in kB (1 - 2147483 kb (2GB). All objects that exceed this are delivered to the client but not stored in the web cache.
        :param pulumi.Input[int] max_ttl: Maximum time an object can stay in the web cache without checking to see if it has expired on the server (default = 7200 min (5 days); maximum = 5256000 min (10 years)).
        :param pulumi.Input[int] min_ttl: Minimum time an object can stay in the web cache without checking to see if it has expired on the server (default = 5 min; maximum = 5256000 (10 years)).
        :param pulumi.Input[int] neg_resp_time: Time in minutes to cache negative responses or errors (0 - 4294967295, default = 0  which means negative responses are not cached).
        :param pulumi.Input[str] reval_pnc: Enable/disable revalidation of pragma-no-cache (PNC) to address bandwidth concerns. Valid values: `enable`, `disable`.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _WebcacheState.__new__(_WebcacheState)

        __props__.__dict__["always_revalidate"] = always_revalidate
        __props__.__dict__["cache_by_default"] = cache_by_default
        __props__.__dict__["cache_cookie"] = cache_cookie
        __props__.__dict__["cache_expired"] = cache_expired
        __props__.__dict__["default_ttl"] = default_ttl
        __props__.__dict__["external"] = external
        __props__.__dict__["fresh_factor"] = fresh_factor
        __props__.__dict__["host_validate"] = host_validate
        __props__.__dict__["ignore_conditional"] = ignore_conditional
        __props__.__dict__["ignore_ie_reload"] = ignore_ie_reload
        __props__.__dict__["ignore_ims"] = ignore_ims
        __props__.__dict__["ignore_pnc"] = ignore_pnc
        __props__.__dict__["max_object_size"] = max_object_size
        __props__.__dict__["max_ttl"] = max_ttl
        __props__.__dict__["min_ttl"] = min_ttl
        __props__.__dict__["neg_resp_time"] = neg_resp_time
        __props__.__dict__["reval_pnc"] = reval_pnc
        __props__.__dict__["vdomparam"] = vdomparam
        return Webcache(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="alwaysRevalidate")
    def always_revalidate(self) -> pulumi.Output[str]:
        """
        Enable/disable revalidation of requested cached objects, which have content on the server, before serving it to the client. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "always_revalidate")

    @property
    @pulumi.getter(name="cacheByDefault")
    def cache_by_default(self) -> pulumi.Output[str]:
        """
        Enable/disable caching content that lacks explicit caching policies from the server. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cache_by_default")

    @property
    @pulumi.getter(name="cacheCookie")
    def cache_cookie(self) -> pulumi.Output[str]:
        """
        Enable/disable caching cookies. Since cookies contain information for or about individual users, they not usually cached. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cache_cookie")

    @property
    @pulumi.getter(name="cacheExpired")
    def cache_expired(self) -> pulumi.Output[str]:
        """
        Enable/disable caching type-1 objects that are already expired on arrival. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "cache_expired")

    @property
    @pulumi.getter(name="defaultTtl")
    def default_ttl(self) -> pulumi.Output[int]:
        """
        Default object expiry time (default = 1440 min (1 day); maximum = 5256000 min (10 years)). This only applies to those objects that do not have an expiry time set by the web server.
        """
        return pulumi.get(self, "default_ttl")

    @property
    @pulumi.getter
    def external(self) -> pulumi.Output[str]:
        """
        Enable/disable external Web caching. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "external")

    @property
    @pulumi.getter(name="freshFactor")
    def fresh_factor(self) -> pulumi.Output[int]:
        """
        Frequency that the server is checked to see if any objects have expired (1 - 100, default = 100). The higher the fresh factor, the less often the checks occur.
        """
        return pulumi.get(self, "fresh_factor")

    @property
    @pulumi.getter(name="hostValidate")
    def host_validate(self) -> pulumi.Output[str]:
        """
        Enable/disable validating "Host:" with original server IP. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "host_validate")

    @property
    @pulumi.getter(name="ignoreConditional")
    def ignore_conditional(self) -> pulumi.Output[str]:
        """
        Enable/disable controlling the behavior of cache-control HTTP 1.1 header values. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_conditional")

    @property
    @pulumi.getter(name="ignoreIeReload")
    def ignore_ie_reload(self) -> pulumi.Output[str]:
        """
        Enable/disable ignoring the PNC-interpretation of Internet Explorer's Accept: / header. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_ie_reload")

    @property
    @pulumi.getter(name="ignoreIms")
    def ignore_ims(self) -> pulumi.Output[str]:
        """
        Enable/disable ignoring the if-modified-since (IMS) header. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_ims")

    @property
    @pulumi.getter(name="ignorePnc")
    def ignore_pnc(self) -> pulumi.Output[str]:
        """
        Enable/disable ignoring the pragma no-cache (PNC) header. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "ignore_pnc")

    @property
    @pulumi.getter(name="maxObjectSize")
    def max_object_size(self) -> pulumi.Output[int]:
        """
        Maximum cacheable object size in kB (1 - 2147483 kb (2GB). All objects that exceed this are delivered to the client but not stored in the web cache.
        """
        return pulumi.get(self, "max_object_size")

    @property
    @pulumi.getter(name="maxTtl")
    def max_ttl(self) -> pulumi.Output[int]:
        """
        Maximum time an object can stay in the web cache without checking to see if it has expired on the server (default = 7200 min (5 days); maximum = 5256000 min (10 years)).
        """
        return pulumi.get(self, "max_ttl")

    @property
    @pulumi.getter(name="minTtl")
    def min_ttl(self) -> pulumi.Output[int]:
        """
        Minimum time an object can stay in the web cache without checking to see if it has expired on the server (default = 5 min; maximum = 5256000 (10 years)).
        """
        return pulumi.get(self, "min_ttl")

    @property
    @pulumi.getter(name="negRespTime")
    def neg_resp_time(self) -> pulumi.Output[int]:
        """
        Time in minutes to cache negative responses or errors (0 - 4294967295, default = 0  which means negative responses are not cached).
        """
        return pulumi.get(self, "neg_resp_time")

    @property
    @pulumi.getter(name="revalPnc")
    def reval_pnc(self) -> pulumi.Output[str]:
        """
        Enable/disable revalidation of pragma-no-cache (PNC) to address bandwidth concerns. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "reval_pnc")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

