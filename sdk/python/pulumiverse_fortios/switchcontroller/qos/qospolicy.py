# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = ['QospolicyArgs', 'Qospolicy']

@pulumi.input_type
class QospolicyArgs:
    def __init__(__self__, *,
                 default_cos: pulumi.Input[int],
                 name: Optional[pulumi.Input[str]] = None,
                 queue_policy: Optional[pulumi.Input[str]] = None,
                 trust_dot1p_map: Optional[pulumi.Input[str]] = None,
                 trust_ip_dscp_map: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Qospolicy resource.
        :param pulumi.Input[int] default_cos: Default cos queue for untagged packets.
        :param pulumi.Input[str] name: QoS policy name.
        :param pulumi.Input[str] queue_policy: QoS egress queue policy.
        :param pulumi.Input[str] trust_dot1p_map: QoS trust 802.1p map.
        :param pulumi.Input[str] trust_ip_dscp_map: QoS trust ip dscp map.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        pulumi.set(__self__, "default_cos", default_cos)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if queue_policy is not None:
            pulumi.set(__self__, "queue_policy", queue_policy)
        if trust_dot1p_map is not None:
            pulumi.set(__self__, "trust_dot1p_map", trust_dot1p_map)
        if trust_ip_dscp_map is not None:
            pulumi.set(__self__, "trust_ip_dscp_map", trust_ip_dscp_map)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="defaultCos")
    def default_cos(self) -> pulumi.Input[int]:
        """
        Default cos queue for untagged packets.
        """
        return pulumi.get(self, "default_cos")

    @default_cos.setter
    def default_cos(self, value: pulumi.Input[int]):
        pulumi.set(self, "default_cos", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        QoS policy name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="queuePolicy")
    def queue_policy(self) -> Optional[pulumi.Input[str]]:
        """
        QoS egress queue policy.
        """
        return pulumi.get(self, "queue_policy")

    @queue_policy.setter
    def queue_policy(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "queue_policy", value)

    @property
    @pulumi.getter(name="trustDot1pMap")
    def trust_dot1p_map(self) -> Optional[pulumi.Input[str]]:
        """
        QoS trust 802.1p map.
        """
        return pulumi.get(self, "trust_dot1p_map")

    @trust_dot1p_map.setter
    def trust_dot1p_map(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "trust_dot1p_map", value)

    @property
    @pulumi.getter(name="trustIpDscpMap")
    def trust_ip_dscp_map(self) -> Optional[pulumi.Input[str]]:
        """
        QoS trust ip dscp map.
        """
        return pulumi.get(self, "trust_ip_dscp_map")

    @trust_ip_dscp_map.setter
    def trust_ip_dscp_map(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "trust_ip_dscp_map", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _QospolicyState:
    def __init__(__self__, *,
                 default_cos: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 queue_policy: Optional[pulumi.Input[str]] = None,
                 trust_dot1p_map: Optional[pulumi.Input[str]] = None,
                 trust_ip_dscp_map: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Qospolicy resources.
        :param pulumi.Input[int] default_cos: Default cos queue for untagged packets.
        :param pulumi.Input[str] name: QoS policy name.
        :param pulumi.Input[str] queue_policy: QoS egress queue policy.
        :param pulumi.Input[str] trust_dot1p_map: QoS trust 802.1p map.
        :param pulumi.Input[str] trust_ip_dscp_map: QoS trust ip dscp map.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if default_cos is not None:
            pulumi.set(__self__, "default_cos", default_cos)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if queue_policy is not None:
            pulumi.set(__self__, "queue_policy", queue_policy)
        if trust_dot1p_map is not None:
            pulumi.set(__self__, "trust_dot1p_map", trust_dot1p_map)
        if trust_ip_dscp_map is not None:
            pulumi.set(__self__, "trust_ip_dscp_map", trust_ip_dscp_map)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="defaultCos")
    def default_cos(self) -> Optional[pulumi.Input[int]]:
        """
        Default cos queue for untagged packets.
        """
        return pulumi.get(self, "default_cos")

    @default_cos.setter
    def default_cos(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "default_cos", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        QoS policy name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="queuePolicy")
    def queue_policy(self) -> Optional[pulumi.Input[str]]:
        """
        QoS egress queue policy.
        """
        return pulumi.get(self, "queue_policy")

    @queue_policy.setter
    def queue_policy(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "queue_policy", value)

    @property
    @pulumi.getter(name="trustDot1pMap")
    def trust_dot1p_map(self) -> Optional[pulumi.Input[str]]:
        """
        QoS trust 802.1p map.
        """
        return pulumi.get(self, "trust_dot1p_map")

    @trust_dot1p_map.setter
    def trust_dot1p_map(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "trust_dot1p_map", value)

    @property
    @pulumi.getter(name="trustIpDscpMap")
    def trust_ip_dscp_map(self) -> Optional[pulumi.Input[str]]:
        """
        QoS trust ip dscp map.
        """
        return pulumi.get(self, "trust_ip_dscp_map")

    @trust_ip_dscp_map.setter
    def trust_ip_dscp_map(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "trust_ip_dscp_map", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Qospolicy(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 default_cos: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 queue_policy: Optional[pulumi.Input[str]] = None,
                 trust_dot1p_map: Optional[pulumi.Input[str]] = None,
                 trust_ip_dscp_map: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure FortiSwitch QoS policy.

        ## Import

        SwitchControllerQos QosPolicy can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:switchcontroller/qos/qospolicy:Qospolicy labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:switchcontroller/qos/qospolicy:Qospolicy labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] default_cos: Default cos queue for untagged packets.
        :param pulumi.Input[str] name: QoS policy name.
        :param pulumi.Input[str] queue_policy: QoS egress queue policy.
        :param pulumi.Input[str] trust_dot1p_map: QoS trust 802.1p map.
        :param pulumi.Input[str] trust_ip_dscp_map: QoS trust ip dscp map.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: QospolicyArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure FortiSwitch QoS policy.

        ## Import

        SwitchControllerQos QosPolicy can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:switchcontroller/qos/qospolicy:Qospolicy labelname {{name}}
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:switchcontroller/qos/qospolicy:Qospolicy labelname {{name}}
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param QospolicyArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(QospolicyArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 default_cos: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 queue_policy: Optional[pulumi.Input[str]] = None,
                 trust_dot1p_map: Optional[pulumi.Input[str]] = None,
                 trust_ip_dscp_map: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = QospolicyArgs.__new__(QospolicyArgs)

            if default_cos is None and not opts.urn:
                raise TypeError("Missing required property 'default_cos'")
            __props__.__dict__["default_cos"] = default_cos
            __props__.__dict__["name"] = name
            __props__.__dict__["queue_policy"] = queue_policy
            __props__.__dict__["trust_dot1p_map"] = trust_dot1p_map
            __props__.__dict__["trust_ip_dscp_map"] = trust_ip_dscp_map
            __props__.__dict__["vdomparam"] = vdomparam
        super(Qospolicy, __self__).__init__(
            'fortios:switchcontroller/qos/qospolicy:Qospolicy',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            default_cos: Optional[pulumi.Input[int]] = None,
            name: Optional[pulumi.Input[str]] = None,
            queue_policy: Optional[pulumi.Input[str]] = None,
            trust_dot1p_map: Optional[pulumi.Input[str]] = None,
            trust_ip_dscp_map: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Qospolicy':
        """
        Get an existing Qospolicy resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] default_cos: Default cos queue for untagged packets.
        :param pulumi.Input[str] name: QoS policy name.
        :param pulumi.Input[str] queue_policy: QoS egress queue policy.
        :param pulumi.Input[str] trust_dot1p_map: QoS trust 802.1p map.
        :param pulumi.Input[str] trust_ip_dscp_map: QoS trust ip dscp map.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _QospolicyState.__new__(_QospolicyState)

        __props__.__dict__["default_cos"] = default_cos
        __props__.__dict__["name"] = name
        __props__.__dict__["queue_policy"] = queue_policy
        __props__.__dict__["trust_dot1p_map"] = trust_dot1p_map
        __props__.__dict__["trust_ip_dscp_map"] = trust_ip_dscp_map
        __props__.__dict__["vdomparam"] = vdomparam
        return Qospolicy(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="defaultCos")
    def default_cos(self) -> pulumi.Output[int]:
        """
        Default cos queue for untagged packets.
        """
        return pulumi.get(self, "default_cos")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        QoS policy name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="queuePolicy")
    def queue_policy(self) -> pulumi.Output[str]:
        """
        QoS egress queue policy.
        """
        return pulumi.get(self, "queue_policy")

    @property
    @pulumi.getter(name="trustDot1pMap")
    def trust_dot1p_map(self) -> pulumi.Output[str]:
        """
        QoS trust 802.1p map.
        """
        return pulumi.get(self, "trust_dot1p_map")

    @property
    @pulumi.getter(name="trustIpDscpMap")
    def trust_ip_dscp_map(self) -> pulumi.Output[str]:
        """
        QoS trust ip dscp map.
        """
        return pulumi.get(self, "trust_ip_dscp_map")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[str]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

