# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['LldpsettingsArgs', 'Lldpsettings']

@pulumi.input_type
class LldpsettingsArgs:
    def __init__(__self__, *,
                 device_detection: Optional[pulumi.Input[str]] = None,
                 fast_start_interval: Optional[pulumi.Input[int]] = None,
                 management_interface: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tx_hold: Optional[pulumi.Input[int]] = None,
                 tx_interval: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Lldpsettings resource.
        :param pulumi.Input[str] device_detection: Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
        :param pulumi.Input[int] fast_start_interval: Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
        :param pulumi.Input[str] management_interface: Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
        :param pulumi.Input[str] status: Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] tx_hold: Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
        :param pulumi.Input[int] tx_interval: Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if device_detection is not None:
            pulumi.set(__self__, "device_detection", device_detection)
        if fast_start_interval is not None:
            pulumi.set(__self__, "fast_start_interval", fast_start_interval)
        if management_interface is not None:
            pulumi.set(__self__, "management_interface", management_interface)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tx_hold is not None:
            pulumi.set(__self__, "tx_hold", tx_hold)
        if tx_interval is not None:
            pulumi.set(__self__, "tx_interval", tx_interval)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="deviceDetection")
    def device_detection(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "device_detection")

    @device_detection.setter
    def device_detection(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device_detection", value)

    @property
    @pulumi.getter(name="fastStartInterval")
    def fast_start_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
        """
        return pulumi.get(self, "fast_start_interval")

    @fast_start_interval.setter
    def fast_start_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "fast_start_interval", value)

    @property
    @pulumi.getter(name="managementInterface")
    def management_interface(self) -> Optional[pulumi.Input[str]]:
        """
        Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
        """
        return pulumi.get(self, "management_interface")

    @management_interface.setter
    def management_interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "management_interface", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="txHold")
    def tx_hold(self) -> Optional[pulumi.Input[int]]:
        """
        Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
        """
        return pulumi.get(self, "tx_hold")

    @tx_hold.setter
    def tx_hold(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "tx_hold", value)

    @property
    @pulumi.getter(name="txInterval")
    def tx_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
        """
        return pulumi.get(self, "tx_interval")

    @tx_interval.setter
    def tx_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "tx_interval", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _LldpsettingsState:
    def __init__(__self__, *,
                 device_detection: Optional[pulumi.Input[str]] = None,
                 fast_start_interval: Optional[pulumi.Input[int]] = None,
                 management_interface: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tx_hold: Optional[pulumi.Input[int]] = None,
                 tx_interval: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Lldpsettings resources.
        :param pulumi.Input[str] device_detection: Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
        :param pulumi.Input[int] fast_start_interval: Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
        :param pulumi.Input[str] management_interface: Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
        :param pulumi.Input[str] status: Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] tx_hold: Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
        :param pulumi.Input[int] tx_interval: Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        if device_detection is not None:
            pulumi.set(__self__, "device_detection", device_detection)
        if fast_start_interval is not None:
            pulumi.set(__self__, "fast_start_interval", fast_start_interval)
        if management_interface is not None:
            pulumi.set(__self__, "management_interface", management_interface)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tx_hold is not None:
            pulumi.set(__self__, "tx_hold", tx_hold)
        if tx_interval is not None:
            pulumi.set(__self__, "tx_interval", tx_interval)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="deviceDetection")
    def device_detection(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "device_detection")

    @device_detection.setter
    def device_detection(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device_detection", value)

    @property
    @pulumi.getter(name="fastStartInterval")
    def fast_start_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
        """
        return pulumi.get(self, "fast_start_interval")

    @fast_start_interval.setter
    def fast_start_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "fast_start_interval", value)

    @property
    @pulumi.getter(name="managementInterface")
    def management_interface(self) -> Optional[pulumi.Input[str]]:
        """
        Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
        """
        return pulumi.get(self, "management_interface")

    @management_interface.setter
    def management_interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "management_interface", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="txHold")
    def tx_hold(self) -> Optional[pulumi.Input[int]]:
        """
        Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
        """
        return pulumi.get(self, "tx_hold")

    @tx_hold.setter
    def tx_hold(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "tx_hold", value)

    @property
    @pulumi.getter(name="txInterval")
    def tx_interval(self) -> Optional[pulumi.Input[int]]:
        """
        Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
        """
        return pulumi.get(self, "tx_interval")

    @tx_interval.setter
    def tx_interval(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "tx_interval", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class Lldpsettings(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 device_detection: Optional[pulumi.Input[str]] = None,
                 fast_start_interval: Optional[pulumi.Input[int]] = None,
                 management_interface: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tx_hold: Optional[pulumi.Input[int]] = None,
                 tx_interval: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Configure FortiSwitch LLDP settings.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.switchcontroller.Lldpsettings("trname",
            fast_start_interval=2,
            management_interface="internal",
            status="enable",
            tx_hold=4,
            tx_interval=30)
        ```

        ## Import

        SwitchController LldpSettings can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:switchcontroller/lldpsettings:Lldpsettings labelname SwitchControllerLldpSettings
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:switchcontroller/lldpsettings:Lldpsettings labelname SwitchControllerLldpSettings
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] device_detection: Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
        :param pulumi.Input[int] fast_start_interval: Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
        :param pulumi.Input[str] management_interface: Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
        :param pulumi.Input[str] status: Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] tx_hold: Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
        :param pulumi.Input[int] tx_interval: Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[LldpsettingsArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Configure FortiSwitch LLDP settings.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_fortios as fortios

        trname = fortios.switchcontroller.Lldpsettings("trname",
            fast_start_interval=2,
            management_interface="internal",
            status="enable",
            tx_hold=4,
            tx_interval=30)
        ```

        ## Import

        SwitchController LldpSettings can be imported using any of these accepted formats:

        ```sh
        $ pulumi import fortios:switchcontroller/lldpsettings:Lldpsettings labelname SwitchControllerLldpSettings
        ```

        If you do not want to import arguments of block:

        $ export "FORTIOS_IMPORT_TABLE"="false"

        ```sh
        $ pulumi import fortios:switchcontroller/lldpsettings:Lldpsettings labelname SwitchControllerLldpSettings
        ```

        $ unset "FORTIOS_IMPORT_TABLE"

        :param str resource_name: The name of the resource.
        :param LldpsettingsArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(LldpsettingsArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 device_detection: Optional[pulumi.Input[str]] = None,
                 fast_start_interval: Optional[pulumi.Input[int]] = None,
                 management_interface: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tx_hold: Optional[pulumi.Input[int]] = None,
                 tx_interval: Optional[pulumi.Input[int]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = LldpsettingsArgs.__new__(LldpsettingsArgs)

            __props__.__dict__["device_detection"] = device_detection
            __props__.__dict__["fast_start_interval"] = fast_start_interval
            __props__.__dict__["management_interface"] = management_interface
            __props__.__dict__["status"] = status
            __props__.__dict__["tx_hold"] = tx_hold
            __props__.__dict__["tx_interval"] = tx_interval
            __props__.__dict__["vdomparam"] = vdomparam
        super(Lldpsettings, __self__).__init__(
            'fortios:switchcontroller/lldpsettings:Lldpsettings',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            device_detection: Optional[pulumi.Input[str]] = None,
            fast_start_interval: Optional[pulumi.Input[int]] = None,
            management_interface: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None,
            tx_hold: Optional[pulumi.Input[int]] = None,
            tx_interval: Optional[pulumi.Input[int]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'Lldpsettings':
        """
        Get an existing Lldpsettings resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] device_detection: Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
        :param pulumi.Input[int] fast_start_interval: Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
        :param pulumi.Input[str] management_interface: Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
        :param pulumi.Input[str] status: Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
        :param pulumi.Input[int] tx_hold: Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
        :param pulumi.Input[int] tx_interval: Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
        :param pulumi.Input[str] vdomparam: Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _LldpsettingsState.__new__(_LldpsettingsState)

        __props__.__dict__["device_detection"] = device_detection
        __props__.__dict__["fast_start_interval"] = fast_start_interval
        __props__.__dict__["management_interface"] = management_interface
        __props__.__dict__["status"] = status
        __props__.__dict__["tx_hold"] = tx_hold
        __props__.__dict__["tx_interval"] = tx_interval
        __props__.__dict__["vdomparam"] = vdomparam
        return Lldpsettings(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="deviceDetection")
    def device_detection(self) -> pulumi.Output[str]:
        """
        Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
        """
        return pulumi.get(self, "device_detection")

    @property
    @pulumi.getter(name="fastStartInterval")
    def fast_start_interval(self) -> pulumi.Output[int]:
        """
        Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
        """
        return pulumi.get(self, "fast_start_interval")

    @property
    @pulumi.getter(name="managementInterface")
    def management_interface(self) -> pulumi.Output[str]:
        """
        Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
        """
        return pulumi.get(self, "management_interface")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="txHold")
    def tx_hold(self) -> pulumi.Output[int]:
        """
        Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
        """
        return pulumi.get(self, "tx_hold")

    @property
    @pulumi.getter(name="txInterval")
    def tx_interval(self) -> pulumi.Output[int]:
        """
        Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
        """
        return pulumi.get(self, "tx_interval")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        """
        return pulumi.get(self, "vdomparam")

