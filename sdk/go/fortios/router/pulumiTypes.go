// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

var _ = internal.GetEnvOrDefault

type Accesslist6Rule struct {
	// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
	Action *string `pulumi:"action"`
	// Enable/disable exact prefix match. Valid values: `enable`, `disable`.
	ExactMatch *string `pulumi:"exactMatch"`
	// Flags.
	Flags *int `pulumi:"flags"`
	// Rule ID.
	Id *int `pulumi:"id"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 *string `pulumi:"prefix6"`
}

// Accesslist6RuleInput is an input type that accepts Accesslist6RuleArgs and Accesslist6RuleOutput values.
// You can construct a concrete instance of `Accesslist6RuleInput` via:
//
//	Accesslist6RuleArgs{...}
type Accesslist6RuleInput interface {
	pulumi.Input

	ToAccesslist6RuleOutput() Accesslist6RuleOutput
	ToAccesslist6RuleOutputWithContext(context.Context) Accesslist6RuleOutput
}

type Accesslist6RuleArgs struct {
	// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable exact prefix match. Valid values: `enable`, `disable`.
	ExactMatch pulumi.StringPtrInput `pulumi:"exactMatch"`
	// Flags.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (Accesslist6RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accesslist6Rule)(nil)).Elem()
}

func (i Accesslist6RuleArgs) ToAccesslist6RuleOutput() Accesslist6RuleOutput {
	return i.ToAccesslist6RuleOutputWithContext(context.Background())
}

func (i Accesslist6RuleArgs) ToAccesslist6RuleOutputWithContext(ctx context.Context) Accesslist6RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accesslist6RuleOutput)
}

// Accesslist6RuleArrayInput is an input type that accepts Accesslist6RuleArray and Accesslist6RuleArrayOutput values.
// You can construct a concrete instance of `Accesslist6RuleArrayInput` via:
//
//	Accesslist6RuleArray{ Accesslist6RuleArgs{...} }
type Accesslist6RuleArrayInput interface {
	pulumi.Input

	ToAccesslist6RuleArrayOutput() Accesslist6RuleArrayOutput
	ToAccesslist6RuleArrayOutputWithContext(context.Context) Accesslist6RuleArrayOutput
}

type Accesslist6RuleArray []Accesslist6RuleInput

func (Accesslist6RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accesslist6Rule)(nil)).Elem()
}

func (i Accesslist6RuleArray) ToAccesslist6RuleArrayOutput() Accesslist6RuleArrayOutput {
	return i.ToAccesslist6RuleArrayOutputWithContext(context.Background())
}

func (i Accesslist6RuleArray) ToAccesslist6RuleArrayOutputWithContext(ctx context.Context) Accesslist6RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accesslist6RuleArrayOutput)
}

type Accesslist6RuleOutput struct{ *pulumi.OutputState }

func (Accesslist6RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accesslist6Rule)(nil)).Elem()
}

func (o Accesslist6RuleOutput) ToAccesslist6RuleOutput() Accesslist6RuleOutput {
	return o
}

func (o Accesslist6RuleOutput) ToAccesslist6RuleOutputWithContext(ctx context.Context) Accesslist6RuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
func (o Accesslist6RuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accesslist6Rule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable exact prefix match. Valid values: `enable`, `disable`.
func (o Accesslist6RuleOutput) ExactMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accesslist6Rule) *string { return v.ExactMatch }).(pulumi.StringPtrOutput)
}

// Flags.
func (o Accesslist6RuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accesslist6Rule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Rule ID.
func (o Accesslist6RuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accesslist6Rule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
func (o Accesslist6RuleOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accesslist6Rule) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type Accesslist6RuleArrayOutput struct{ *pulumi.OutputState }

func (Accesslist6RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accesslist6Rule)(nil)).Elem()
}

func (o Accesslist6RuleArrayOutput) ToAccesslist6RuleArrayOutput() Accesslist6RuleArrayOutput {
	return o
}

func (o Accesslist6RuleArrayOutput) ToAccesslist6RuleArrayOutputWithContext(ctx context.Context) Accesslist6RuleArrayOutput {
	return o
}

func (o Accesslist6RuleArrayOutput) Index(i pulumi.IntInput) Accesslist6RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Accesslist6Rule {
		return vs[0].([]Accesslist6Rule)[vs[1].(int)]
	}).(Accesslist6RuleOutput)
}

type AccesslistRule struct {
	// Permit or deny this IP address and netmask prefix.
	Action *string `pulumi:"action"`
	// Enable/disable exact match.
	ExactMatch *string `pulumi:"exactMatch"`
	// Flags.
	Flags *int `pulumi:"flags"`
	// Rule ID.
	Id *int `pulumi:"id"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix *string `pulumi:"prefix"`
	// Wildcard to define Cisco-style wildcard filter criteria.
	Wildcard *string `pulumi:"wildcard"`
}

// AccesslistRuleInput is an input type that accepts AccesslistRuleArgs and AccesslistRuleOutput values.
// You can construct a concrete instance of `AccesslistRuleInput` via:
//
//	AccesslistRuleArgs{...}
type AccesslistRuleInput interface {
	pulumi.Input

	ToAccesslistRuleOutput() AccesslistRuleOutput
	ToAccesslistRuleOutputWithContext(context.Context) AccesslistRuleOutput
}

type AccesslistRuleArgs struct {
	// Permit or deny this IP address and netmask prefix.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable exact match.
	ExactMatch pulumi.StringPtrInput `pulumi:"exactMatch"`
	// Flags.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Wildcard to define Cisco-style wildcard filter criteria.
	Wildcard pulumi.StringPtrInput `pulumi:"wildcard"`
}

func (AccesslistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccesslistRule)(nil)).Elem()
}

func (i AccesslistRuleArgs) ToAccesslistRuleOutput() AccesslistRuleOutput {
	return i.ToAccesslistRuleOutputWithContext(context.Background())
}

func (i AccesslistRuleArgs) ToAccesslistRuleOutputWithContext(ctx context.Context) AccesslistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccesslistRuleOutput)
}

// AccesslistRuleArrayInput is an input type that accepts AccesslistRuleArray and AccesslistRuleArrayOutput values.
// You can construct a concrete instance of `AccesslistRuleArrayInput` via:
//
//	AccesslistRuleArray{ AccesslistRuleArgs{...} }
type AccesslistRuleArrayInput interface {
	pulumi.Input

	ToAccesslistRuleArrayOutput() AccesslistRuleArrayOutput
	ToAccesslistRuleArrayOutputWithContext(context.Context) AccesslistRuleArrayOutput
}

type AccesslistRuleArray []AccesslistRuleInput

func (AccesslistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccesslistRule)(nil)).Elem()
}

func (i AccesslistRuleArray) ToAccesslistRuleArrayOutput() AccesslistRuleArrayOutput {
	return i.ToAccesslistRuleArrayOutputWithContext(context.Background())
}

func (i AccesslistRuleArray) ToAccesslistRuleArrayOutputWithContext(ctx context.Context) AccesslistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccesslistRuleArrayOutput)
}

type AccesslistRuleOutput struct{ *pulumi.OutputState }

func (AccesslistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccesslistRule)(nil)).Elem()
}

func (o AccesslistRuleOutput) ToAccesslistRuleOutput() AccesslistRuleOutput {
	return o
}

func (o AccesslistRuleOutput) ToAccesslistRuleOutputWithContext(ctx context.Context) AccesslistRuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix.
func (o AccesslistRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccesslistRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable exact match.
func (o AccesslistRuleOutput) ExactMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccesslistRule) *string { return v.ExactMatch }).(pulumi.StringPtrOutput)
}

// Flags.
func (o AccesslistRuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccesslistRule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Rule ID.
func (o AccesslistRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccesslistRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
func (o AccesslistRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccesslistRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Wildcard to define Cisco-style wildcard filter criteria.
func (o AccesslistRuleOutput) Wildcard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccesslistRule) *string { return v.Wildcard }).(pulumi.StringPtrOutput)
}

type AccesslistRuleArrayOutput struct{ *pulumi.OutputState }

func (AccesslistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccesslistRule)(nil)).Elem()
}

func (o AccesslistRuleArrayOutput) ToAccesslistRuleArrayOutput() AccesslistRuleArrayOutput {
	return o
}

func (o AccesslistRuleArrayOutput) ToAccesslistRuleArrayOutputWithContext(ctx context.Context) AccesslistRuleArrayOutput {
	return o
}

func (o AccesslistRuleArrayOutput) Index(i pulumi.IntInput) AccesslistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccesslistRule {
		return vs[0].([]AccesslistRule)[vs[1].(int)]
	}).(AccesslistRuleOutput)
}

type AspathlistRule struct {
	// Permit or deny route-based operations, based on the route's AS_PATH attribute. Valid values: `deny`, `permit`.
	Action *string `pulumi:"action"`
	// ID.
	Id *int `pulumi:"id"`
	// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
	Regexp *string `pulumi:"regexp"`
}

// AspathlistRuleInput is an input type that accepts AspathlistRuleArgs and AspathlistRuleOutput values.
// You can construct a concrete instance of `AspathlistRuleInput` via:
//
//	AspathlistRuleArgs{...}
type AspathlistRuleInput interface {
	pulumi.Input

	ToAspathlistRuleOutput() AspathlistRuleOutput
	ToAspathlistRuleOutputWithContext(context.Context) AspathlistRuleOutput
}

type AspathlistRuleArgs struct {
	// Permit or deny route-based operations, based on the route's AS_PATH attribute. Valid values: `deny`, `permit`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
	Regexp pulumi.StringPtrInput `pulumi:"regexp"`
}

func (AspathlistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AspathlistRule)(nil)).Elem()
}

func (i AspathlistRuleArgs) ToAspathlistRuleOutput() AspathlistRuleOutput {
	return i.ToAspathlistRuleOutputWithContext(context.Background())
}

func (i AspathlistRuleArgs) ToAspathlistRuleOutputWithContext(ctx context.Context) AspathlistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AspathlistRuleOutput)
}

// AspathlistRuleArrayInput is an input type that accepts AspathlistRuleArray and AspathlistRuleArrayOutput values.
// You can construct a concrete instance of `AspathlistRuleArrayInput` via:
//
//	AspathlistRuleArray{ AspathlistRuleArgs{...} }
type AspathlistRuleArrayInput interface {
	pulumi.Input

	ToAspathlistRuleArrayOutput() AspathlistRuleArrayOutput
	ToAspathlistRuleArrayOutputWithContext(context.Context) AspathlistRuleArrayOutput
}

type AspathlistRuleArray []AspathlistRuleInput

func (AspathlistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AspathlistRule)(nil)).Elem()
}

func (i AspathlistRuleArray) ToAspathlistRuleArrayOutput() AspathlistRuleArrayOutput {
	return i.ToAspathlistRuleArrayOutputWithContext(context.Background())
}

func (i AspathlistRuleArray) ToAspathlistRuleArrayOutputWithContext(ctx context.Context) AspathlistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AspathlistRuleArrayOutput)
}

type AspathlistRuleOutput struct{ *pulumi.OutputState }

func (AspathlistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AspathlistRule)(nil)).Elem()
}

func (o AspathlistRuleOutput) ToAspathlistRuleOutput() AspathlistRuleOutput {
	return o
}

func (o AspathlistRuleOutput) ToAspathlistRuleOutputWithContext(ctx context.Context) AspathlistRuleOutput {
	return o
}

// Permit or deny route-based operations, based on the route's AS_PATH attribute. Valid values: `deny`, `permit`.
func (o AspathlistRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AspathlistRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// ID.
func (o AspathlistRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AspathlistRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
func (o AspathlistRuleOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AspathlistRule) *string { return v.Regexp }).(pulumi.StringPtrOutput)
}

type AspathlistRuleArrayOutput struct{ *pulumi.OutputState }

func (AspathlistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AspathlistRule)(nil)).Elem()
}

func (o AspathlistRuleArrayOutput) ToAspathlistRuleArrayOutput() AspathlistRuleArrayOutput {
	return o
}

func (o AspathlistRuleArrayOutput) ToAspathlistRuleArrayOutputWithContext(ctx context.Context) AspathlistRuleArrayOutput {
	return o
}

func (o AspathlistRuleArrayOutput) Index(i pulumi.IntInput) AspathlistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AspathlistRule {
		return vs[0].([]AspathlistRule)[vs[1].(int)]
	}).(AspathlistRuleOutput)
}

type Bfd6MultihopTemplate struct {
	// Authentication mode. Valid values: `none`, `md5`.
	AuthMode *string `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx *int `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult *int `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx *int `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst *string `pulumi:"dst"`
	// ID.
	Id *int `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key *string `pulumi:"md5Key"`
	// Source prefix.
	Src *string `pulumi:"src"`
}

// Bfd6MultihopTemplateInput is an input type that accepts Bfd6MultihopTemplateArgs and Bfd6MultihopTemplateOutput values.
// You can construct a concrete instance of `Bfd6MultihopTemplateInput` via:
//
//	Bfd6MultihopTemplateArgs{...}
type Bfd6MultihopTemplateInput interface {
	pulumi.Input

	ToBfd6MultihopTemplateOutput() Bfd6MultihopTemplateOutput
	ToBfd6MultihopTemplateOutputWithContext(context.Context) Bfd6MultihopTemplateOutput
}

type Bfd6MultihopTemplateArgs struct {
	// Authentication mode. Valid values: `none`, `md5`.
	AuthMode pulumi.StringPtrInput `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx pulumi.IntPtrInput `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult pulumi.IntPtrInput `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx pulumi.IntPtrInput `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst pulumi.StringPtrInput `pulumi:"dst"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key pulumi.StringPtrInput `pulumi:"md5Key"`
	// Source prefix.
	Src pulumi.StringPtrInput `pulumi:"src"`
}

func (Bfd6MultihopTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Bfd6MultihopTemplate)(nil)).Elem()
}

func (i Bfd6MultihopTemplateArgs) ToBfd6MultihopTemplateOutput() Bfd6MultihopTemplateOutput {
	return i.ToBfd6MultihopTemplateOutputWithContext(context.Background())
}

func (i Bfd6MultihopTemplateArgs) ToBfd6MultihopTemplateOutputWithContext(ctx context.Context) Bfd6MultihopTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Bfd6MultihopTemplateOutput)
}

// Bfd6MultihopTemplateArrayInput is an input type that accepts Bfd6MultihopTemplateArray and Bfd6MultihopTemplateArrayOutput values.
// You can construct a concrete instance of `Bfd6MultihopTemplateArrayInput` via:
//
//	Bfd6MultihopTemplateArray{ Bfd6MultihopTemplateArgs{...} }
type Bfd6MultihopTemplateArrayInput interface {
	pulumi.Input

	ToBfd6MultihopTemplateArrayOutput() Bfd6MultihopTemplateArrayOutput
	ToBfd6MultihopTemplateArrayOutputWithContext(context.Context) Bfd6MultihopTemplateArrayOutput
}

type Bfd6MultihopTemplateArray []Bfd6MultihopTemplateInput

func (Bfd6MultihopTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Bfd6MultihopTemplate)(nil)).Elem()
}

func (i Bfd6MultihopTemplateArray) ToBfd6MultihopTemplateArrayOutput() Bfd6MultihopTemplateArrayOutput {
	return i.ToBfd6MultihopTemplateArrayOutputWithContext(context.Background())
}

func (i Bfd6MultihopTemplateArray) ToBfd6MultihopTemplateArrayOutputWithContext(ctx context.Context) Bfd6MultihopTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Bfd6MultihopTemplateArrayOutput)
}

type Bfd6MultihopTemplateOutput struct{ *pulumi.OutputState }

func (Bfd6MultihopTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Bfd6MultihopTemplate)(nil)).Elem()
}

func (o Bfd6MultihopTemplateOutput) ToBfd6MultihopTemplateOutput() Bfd6MultihopTemplateOutput {
	return o
}

func (o Bfd6MultihopTemplateOutput) ToBfd6MultihopTemplateOutputWithContext(ctx context.Context) Bfd6MultihopTemplateOutput {
	return o
}

// Authentication mode. Valid values: `none`, `md5`.
func (o Bfd6MultihopTemplateOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bfd6MultihopTemplate) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// BFD desired minimal transmit interval (milliseconds).
func (o Bfd6MultihopTemplateOutput) BfdDesiredMinTx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Bfd6MultihopTemplate) *int { return v.BfdDesiredMinTx }).(pulumi.IntPtrOutput)
}

// BFD detection multiplier.
func (o Bfd6MultihopTemplateOutput) BfdDetectMult() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Bfd6MultihopTemplate) *int { return v.BfdDetectMult }).(pulumi.IntPtrOutput)
}

// BFD required minimal receive interval (milliseconds).
func (o Bfd6MultihopTemplateOutput) BfdRequiredMinRx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Bfd6MultihopTemplate) *int { return v.BfdRequiredMinRx }).(pulumi.IntPtrOutput)
}

// Destination prefix.
func (o Bfd6MultihopTemplateOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bfd6MultihopTemplate) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

// ID.
func (o Bfd6MultihopTemplateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Bfd6MultihopTemplate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// MD5 key of key ID 1.
func (o Bfd6MultihopTemplateOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bfd6MultihopTemplate) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

// Source prefix.
func (o Bfd6MultihopTemplateOutput) Src() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bfd6MultihopTemplate) *string { return v.Src }).(pulumi.StringPtrOutput)
}

type Bfd6MultihopTemplateArrayOutput struct{ *pulumi.OutputState }

func (Bfd6MultihopTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Bfd6MultihopTemplate)(nil)).Elem()
}

func (o Bfd6MultihopTemplateArrayOutput) ToBfd6MultihopTemplateArrayOutput() Bfd6MultihopTemplateArrayOutput {
	return o
}

func (o Bfd6MultihopTemplateArrayOutput) ToBfd6MultihopTemplateArrayOutputWithContext(ctx context.Context) Bfd6MultihopTemplateArrayOutput {
	return o
}

func (o Bfd6MultihopTemplateArrayOutput) Index(i pulumi.IntInput) Bfd6MultihopTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Bfd6MultihopTemplate {
		return vs[0].([]Bfd6MultihopTemplate)[vs[1].(int)]
	}).(Bfd6MultihopTemplateOutput)
}

type Bfd6Neighbor struct {
	// Interface to the BFD neighbor.
	Interface *string `pulumi:"interface"`
	// IPv6 address of the BFD neighbor.
	Ip6Address *string `pulumi:"ip6Address"`
}

// Bfd6NeighborInput is an input type that accepts Bfd6NeighborArgs and Bfd6NeighborOutput values.
// You can construct a concrete instance of `Bfd6NeighborInput` via:
//
//	Bfd6NeighborArgs{...}
type Bfd6NeighborInput interface {
	pulumi.Input

	ToBfd6NeighborOutput() Bfd6NeighborOutput
	ToBfd6NeighborOutputWithContext(context.Context) Bfd6NeighborOutput
}

type Bfd6NeighborArgs struct {
	// Interface to the BFD neighbor.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IPv6 address of the BFD neighbor.
	Ip6Address pulumi.StringPtrInput `pulumi:"ip6Address"`
}

func (Bfd6NeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Bfd6Neighbor)(nil)).Elem()
}

func (i Bfd6NeighborArgs) ToBfd6NeighborOutput() Bfd6NeighborOutput {
	return i.ToBfd6NeighborOutputWithContext(context.Background())
}

func (i Bfd6NeighborArgs) ToBfd6NeighborOutputWithContext(ctx context.Context) Bfd6NeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Bfd6NeighborOutput)
}

// Bfd6NeighborArrayInput is an input type that accepts Bfd6NeighborArray and Bfd6NeighborArrayOutput values.
// You can construct a concrete instance of `Bfd6NeighborArrayInput` via:
//
//	Bfd6NeighborArray{ Bfd6NeighborArgs{...} }
type Bfd6NeighborArrayInput interface {
	pulumi.Input

	ToBfd6NeighborArrayOutput() Bfd6NeighborArrayOutput
	ToBfd6NeighborArrayOutputWithContext(context.Context) Bfd6NeighborArrayOutput
}

type Bfd6NeighborArray []Bfd6NeighborInput

func (Bfd6NeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Bfd6Neighbor)(nil)).Elem()
}

func (i Bfd6NeighborArray) ToBfd6NeighborArrayOutput() Bfd6NeighborArrayOutput {
	return i.ToBfd6NeighborArrayOutputWithContext(context.Background())
}

func (i Bfd6NeighborArray) ToBfd6NeighborArrayOutputWithContext(ctx context.Context) Bfd6NeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Bfd6NeighborArrayOutput)
}

type Bfd6NeighborOutput struct{ *pulumi.OutputState }

func (Bfd6NeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Bfd6Neighbor)(nil)).Elem()
}

func (o Bfd6NeighborOutput) ToBfd6NeighborOutput() Bfd6NeighborOutput {
	return o
}

func (o Bfd6NeighborOutput) ToBfd6NeighborOutputWithContext(ctx context.Context) Bfd6NeighborOutput {
	return o
}

// Interface to the BFD neighbor.
func (o Bfd6NeighborOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bfd6Neighbor) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IPv6 address of the BFD neighbor.
func (o Bfd6NeighborOutput) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bfd6Neighbor) *string { return v.Ip6Address }).(pulumi.StringPtrOutput)
}

type Bfd6NeighborArrayOutput struct{ *pulumi.OutputState }

func (Bfd6NeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Bfd6Neighbor)(nil)).Elem()
}

func (o Bfd6NeighborArrayOutput) ToBfd6NeighborArrayOutput() Bfd6NeighborArrayOutput {
	return o
}

func (o Bfd6NeighborArrayOutput) ToBfd6NeighborArrayOutputWithContext(ctx context.Context) Bfd6NeighborArrayOutput {
	return o
}

func (o Bfd6NeighborArrayOutput) Index(i pulumi.IntInput) Bfd6NeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Bfd6Neighbor {
		return vs[0].([]Bfd6Neighbor)[vs[1].(int)]
	}).(Bfd6NeighborOutput)
}

type BfdMultihopTemplate struct {
	// Authentication mode. Valid values: `none`, `md5`.
	AuthMode *string `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx *int `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult *int `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx *int `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst *string `pulumi:"dst"`
	// ID.
	Id *int `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key *string `pulumi:"md5Key"`
	// Source prefix.
	Src *string `pulumi:"src"`
}

// BfdMultihopTemplateInput is an input type that accepts BfdMultihopTemplateArgs and BfdMultihopTemplateOutput values.
// You can construct a concrete instance of `BfdMultihopTemplateInput` via:
//
//	BfdMultihopTemplateArgs{...}
type BfdMultihopTemplateInput interface {
	pulumi.Input

	ToBfdMultihopTemplateOutput() BfdMultihopTemplateOutput
	ToBfdMultihopTemplateOutputWithContext(context.Context) BfdMultihopTemplateOutput
}

type BfdMultihopTemplateArgs struct {
	// Authentication mode. Valid values: `none`, `md5`.
	AuthMode pulumi.StringPtrInput `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx pulumi.IntPtrInput `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult pulumi.IntPtrInput `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx pulumi.IntPtrInput `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst pulumi.StringPtrInput `pulumi:"dst"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key pulumi.StringPtrInput `pulumi:"md5Key"`
	// Source prefix.
	Src pulumi.StringPtrInput `pulumi:"src"`
}

func (BfdMultihopTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BfdMultihopTemplate)(nil)).Elem()
}

func (i BfdMultihopTemplateArgs) ToBfdMultihopTemplateOutput() BfdMultihopTemplateOutput {
	return i.ToBfdMultihopTemplateOutputWithContext(context.Background())
}

func (i BfdMultihopTemplateArgs) ToBfdMultihopTemplateOutputWithContext(ctx context.Context) BfdMultihopTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BfdMultihopTemplateOutput)
}

// BfdMultihopTemplateArrayInput is an input type that accepts BfdMultihopTemplateArray and BfdMultihopTemplateArrayOutput values.
// You can construct a concrete instance of `BfdMultihopTemplateArrayInput` via:
//
//	BfdMultihopTemplateArray{ BfdMultihopTemplateArgs{...} }
type BfdMultihopTemplateArrayInput interface {
	pulumi.Input

	ToBfdMultihopTemplateArrayOutput() BfdMultihopTemplateArrayOutput
	ToBfdMultihopTemplateArrayOutputWithContext(context.Context) BfdMultihopTemplateArrayOutput
}

type BfdMultihopTemplateArray []BfdMultihopTemplateInput

func (BfdMultihopTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BfdMultihopTemplate)(nil)).Elem()
}

func (i BfdMultihopTemplateArray) ToBfdMultihopTemplateArrayOutput() BfdMultihopTemplateArrayOutput {
	return i.ToBfdMultihopTemplateArrayOutputWithContext(context.Background())
}

func (i BfdMultihopTemplateArray) ToBfdMultihopTemplateArrayOutputWithContext(ctx context.Context) BfdMultihopTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BfdMultihopTemplateArrayOutput)
}

type BfdMultihopTemplateOutput struct{ *pulumi.OutputState }

func (BfdMultihopTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BfdMultihopTemplate)(nil)).Elem()
}

func (o BfdMultihopTemplateOutput) ToBfdMultihopTemplateOutput() BfdMultihopTemplateOutput {
	return o
}

func (o BfdMultihopTemplateOutput) ToBfdMultihopTemplateOutputWithContext(ctx context.Context) BfdMultihopTemplateOutput {
	return o
}

// Authentication mode. Valid values: `none`, `md5`.
func (o BfdMultihopTemplateOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BfdMultihopTemplate) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// BFD desired minimal transmit interval (milliseconds).
func (o BfdMultihopTemplateOutput) BfdDesiredMinTx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BfdMultihopTemplate) *int { return v.BfdDesiredMinTx }).(pulumi.IntPtrOutput)
}

// BFD detection multiplier.
func (o BfdMultihopTemplateOutput) BfdDetectMult() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BfdMultihopTemplate) *int { return v.BfdDetectMult }).(pulumi.IntPtrOutput)
}

// BFD required minimal receive interval (milliseconds).
func (o BfdMultihopTemplateOutput) BfdRequiredMinRx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BfdMultihopTemplate) *int { return v.BfdRequiredMinRx }).(pulumi.IntPtrOutput)
}

// Destination prefix.
func (o BfdMultihopTemplateOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BfdMultihopTemplate) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

// ID.
func (o BfdMultihopTemplateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BfdMultihopTemplate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// MD5 key of key ID 1.
func (o BfdMultihopTemplateOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BfdMultihopTemplate) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

// Source prefix.
func (o BfdMultihopTemplateOutput) Src() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BfdMultihopTemplate) *string { return v.Src }).(pulumi.StringPtrOutput)
}

type BfdMultihopTemplateArrayOutput struct{ *pulumi.OutputState }

func (BfdMultihopTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BfdMultihopTemplate)(nil)).Elem()
}

func (o BfdMultihopTemplateArrayOutput) ToBfdMultihopTemplateArrayOutput() BfdMultihopTemplateArrayOutput {
	return o
}

func (o BfdMultihopTemplateArrayOutput) ToBfdMultihopTemplateArrayOutputWithContext(ctx context.Context) BfdMultihopTemplateArrayOutput {
	return o
}

func (o BfdMultihopTemplateArrayOutput) Index(i pulumi.IntInput) BfdMultihopTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BfdMultihopTemplate {
		return vs[0].([]BfdMultihopTemplate)[vs[1].(int)]
	}).(BfdMultihopTemplateOutput)
}

type BfdNeighbor struct {
	// Interface name.
	Interface *string `pulumi:"interface"`
	// IPv4 address of the BFD neighbor.
	Ip *string `pulumi:"ip"`
}

// BfdNeighborInput is an input type that accepts BfdNeighborArgs and BfdNeighborOutput values.
// You can construct a concrete instance of `BfdNeighborInput` via:
//
//	BfdNeighborArgs{...}
type BfdNeighborInput interface {
	pulumi.Input

	ToBfdNeighborOutput() BfdNeighborOutput
	ToBfdNeighborOutputWithContext(context.Context) BfdNeighborOutput
}

type BfdNeighborArgs struct {
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IPv4 address of the BFD neighbor.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (BfdNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BfdNeighbor)(nil)).Elem()
}

func (i BfdNeighborArgs) ToBfdNeighborOutput() BfdNeighborOutput {
	return i.ToBfdNeighborOutputWithContext(context.Background())
}

func (i BfdNeighborArgs) ToBfdNeighborOutputWithContext(ctx context.Context) BfdNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BfdNeighborOutput)
}

// BfdNeighborArrayInput is an input type that accepts BfdNeighborArray and BfdNeighborArrayOutput values.
// You can construct a concrete instance of `BfdNeighborArrayInput` via:
//
//	BfdNeighborArray{ BfdNeighborArgs{...} }
type BfdNeighborArrayInput interface {
	pulumi.Input

	ToBfdNeighborArrayOutput() BfdNeighborArrayOutput
	ToBfdNeighborArrayOutputWithContext(context.Context) BfdNeighborArrayOutput
}

type BfdNeighborArray []BfdNeighborInput

func (BfdNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BfdNeighbor)(nil)).Elem()
}

func (i BfdNeighborArray) ToBfdNeighborArrayOutput() BfdNeighborArrayOutput {
	return i.ToBfdNeighborArrayOutputWithContext(context.Background())
}

func (i BfdNeighborArray) ToBfdNeighborArrayOutputWithContext(ctx context.Context) BfdNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BfdNeighborArrayOutput)
}

type BfdNeighborOutput struct{ *pulumi.OutputState }

func (BfdNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BfdNeighbor)(nil)).Elem()
}

func (o BfdNeighborOutput) ToBfdNeighborOutput() BfdNeighborOutput {
	return o
}

func (o BfdNeighborOutput) ToBfdNeighborOutputWithContext(ctx context.Context) BfdNeighborOutput {
	return o
}

// Interface name.
func (o BfdNeighborOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BfdNeighbor) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IPv4 address of the BFD neighbor.
func (o BfdNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BfdNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type BfdNeighborArrayOutput struct{ *pulumi.OutputState }

func (BfdNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BfdNeighbor)(nil)).Elem()
}

func (o BfdNeighborArrayOutput) ToBfdNeighborArrayOutput() BfdNeighborArrayOutput {
	return o
}

func (o BfdNeighborArrayOutput) ToBfdNeighborArrayOutputWithContext(ctx context.Context) BfdNeighborArrayOutput {
	return o
}

func (o BfdNeighborArrayOutput) Index(i pulumi.IntInput) BfdNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BfdNeighbor {
		return vs[0].([]BfdNeighbor)[vs[1].(int)]
	}).(BfdNeighborOutput)
}

type BgpAdminDistance struct {
	// Administrative distance to apply (1 - 255).
	Distance *int `pulumi:"distance"`
	// ID.
	Id *int `pulumi:"id"`
	// Neighbor address prefix.
	NeighbourPrefix *string `pulumi:"neighbourPrefix"`
	// Access list of routes to apply new distance to.
	RouteList *string `pulumi:"routeList"`
}

// BgpAdminDistanceInput is an input type that accepts BgpAdminDistanceArgs and BgpAdminDistanceOutput values.
// You can construct a concrete instance of `BgpAdminDistanceInput` via:
//
//	BgpAdminDistanceArgs{...}
type BgpAdminDistanceInput interface {
	pulumi.Input

	ToBgpAdminDistanceOutput() BgpAdminDistanceOutput
	ToBgpAdminDistanceOutputWithContext(context.Context) BgpAdminDistanceOutput
}

type BgpAdminDistanceArgs struct {
	// Administrative distance to apply (1 - 255).
	Distance pulumi.IntPtrInput `pulumi:"distance"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Neighbor address prefix.
	NeighbourPrefix pulumi.StringPtrInput `pulumi:"neighbourPrefix"`
	// Access list of routes to apply new distance to.
	RouteList pulumi.StringPtrInput `pulumi:"routeList"`
}

func (BgpAdminDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpAdminDistance)(nil)).Elem()
}

func (i BgpAdminDistanceArgs) ToBgpAdminDistanceOutput() BgpAdminDistanceOutput {
	return i.ToBgpAdminDistanceOutputWithContext(context.Background())
}

func (i BgpAdminDistanceArgs) ToBgpAdminDistanceOutputWithContext(ctx context.Context) BgpAdminDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAdminDistanceOutput)
}

// BgpAdminDistanceArrayInput is an input type that accepts BgpAdminDistanceArray and BgpAdminDistanceArrayOutput values.
// You can construct a concrete instance of `BgpAdminDistanceArrayInput` via:
//
//	BgpAdminDistanceArray{ BgpAdminDistanceArgs{...} }
type BgpAdminDistanceArrayInput interface {
	pulumi.Input

	ToBgpAdminDistanceArrayOutput() BgpAdminDistanceArrayOutput
	ToBgpAdminDistanceArrayOutputWithContext(context.Context) BgpAdminDistanceArrayOutput
}

type BgpAdminDistanceArray []BgpAdminDistanceInput

func (BgpAdminDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpAdminDistance)(nil)).Elem()
}

func (i BgpAdminDistanceArray) ToBgpAdminDistanceArrayOutput() BgpAdminDistanceArrayOutput {
	return i.ToBgpAdminDistanceArrayOutputWithContext(context.Background())
}

func (i BgpAdminDistanceArray) ToBgpAdminDistanceArrayOutputWithContext(ctx context.Context) BgpAdminDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAdminDistanceArrayOutput)
}

type BgpAdminDistanceOutput struct{ *pulumi.OutputState }

func (BgpAdminDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpAdminDistance)(nil)).Elem()
}

func (o BgpAdminDistanceOutput) ToBgpAdminDistanceOutput() BgpAdminDistanceOutput {
	return o
}

func (o BgpAdminDistanceOutput) ToBgpAdminDistanceOutputWithContext(ctx context.Context) BgpAdminDistanceOutput {
	return o
}

// Administrative distance to apply (1 - 255).
func (o BgpAdminDistanceOutput) Distance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpAdminDistance) *int { return v.Distance }).(pulumi.IntPtrOutput)
}

// ID.
func (o BgpAdminDistanceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpAdminDistance) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Neighbor address prefix.
func (o BgpAdminDistanceOutput) NeighbourPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpAdminDistance) *string { return v.NeighbourPrefix }).(pulumi.StringPtrOutput)
}

// Access list of routes to apply new distance to.
func (o BgpAdminDistanceOutput) RouteList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpAdminDistance) *string { return v.RouteList }).(pulumi.StringPtrOutput)
}

type BgpAdminDistanceArrayOutput struct{ *pulumi.OutputState }

func (BgpAdminDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpAdminDistance)(nil)).Elem()
}

func (o BgpAdminDistanceArrayOutput) ToBgpAdminDistanceArrayOutput() BgpAdminDistanceArrayOutput {
	return o
}

func (o BgpAdminDistanceArrayOutput) ToBgpAdminDistanceArrayOutputWithContext(ctx context.Context) BgpAdminDistanceArrayOutput {
	return o
}

func (o BgpAdminDistanceArrayOutput) Index(i pulumi.IntInput) BgpAdminDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpAdminDistance {
		return vs[0].([]BgpAdminDistance)[vs[1].(int)]
	}).(BgpAdminDistanceOutput)
}

type BgpAggregateAddress6 struct {
	// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
	AsSet *string `pulumi:"asSet"`
	// ID.
	Id *int `pulumi:"id"`
	// Aggregate IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
	// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
	SummaryOnly *string `pulumi:"summaryOnly"`
}

// BgpAggregateAddress6Input is an input type that accepts BgpAggregateAddress6Args and BgpAggregateAddress6Output values.
// You can construct a concrete instance of `BgpAggregateAddress6Input` via:
//
//	BgpAggregateAddress6Args{...}
type BgpAggregateAddress6Input interface {
	pulumi.Input

	ToBgpAggregateAddress6Output() BgpAggregateAddress6Output
	ToBgpAggregateAddress6OutputWithContext(context.Context) BgpAggregateAddress6Output
}

type BgpAggregateAddress6Args struct {
	// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
	AsSet pulumi.StringPtrInput `pulumi:"asSet"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Aggregate IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
	// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
	SummaryOnly pulumi.StringPtrInput `pulumi:"summaryOnly"`
}

func (BgpAggregateAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpAggregateAddress6)(nil)).Elem()
}

func (i BgpAggregateAddress6Args) ToBgpAggregateAddress6Output() BgpAggregateAddress6Output {
	return i.ToBgpAggregateAddress6OutputWithContext(context.Background())
}

func (i BgpAggregateAddress6Args) ToBgpAggregateAddress6OutputWithContext(ctx context.Context) BgpAggregateAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAggregateAddress6Output)
}

// BgpAggregateAddress6ArrayInput is an input type that accepts BgpAggregateAddress6Array and BgpAggregateAddress6ArrayOutput values.
// You can construct a concrete instance of `BgpAggregateAddress6ArrayInput` via:
//
//	BgpAggregateAddress6Array{ BgpAggregateAddress6Args{...} }
type BgpAggregateAddress6ArrayInput interface {
	pulumi.Input

	ToBgpAggregateAddress6ArrayOutput() BgpAggregateAddress6ArrayOutput
	ToBgpAggregateAddress6ArrayOutputWithContext(context.Context) BgpAggregateAddress6ArrayOutput
}

type BgpAggregateAddress6Array []BgpAggregateAddress6Input

func (BgpAggregateAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpAggregateAddress6)(nil)).Elem()
}

func (i BgpAggregateAddress6Array) ToBgpAggregateAddress6ArrayOutput() BgpAggregateAddress6ArrayOutput {
	return i.ToBgpAggregateAddress6ArrayOutputWithContext(context.Background())
}

func (i BgpAggregateAddress6Array) ToBgpAggregateAddress6ArrayOutputWithContext(ctx context.Context) BgpAggregateAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAggregateAddress6ArrayOutput)
}

type BgpAggregateAddress6Output struct{ *pulumi.OutputState }

func (BgpAggregateAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpAggregateAddress6)(nil)).Elem()
}

func (o BgpAggregateAddress6Output) ToBgpAggregateAddress6Output() BgpAggregateAddress6Output {
	return o
}

func (o BgpAggregateAddress6Output) ToBgpAggregateAddress6OutputWithContext(ctx context.Context) BgpAggregateAddress6Output {
	return o
}

// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
func (o BgpAggregateAddress6Output) AsSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpAggregateAddress6) *string { return v.AsSet }).(pulumi.StringPtrOutput)
}

// ID.
func (o BgpAggregateAddress6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpAggregateAddress6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Aggregate IPv6 prefix.
func (o BgpAggregateAddress6Output) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpAggregateAddress6) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
func (o BgpAggregateAddress6Output) SummaryOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpAggregateAddress6) *string { return v.SummaryOnly }).(pulumi.StringPtrOutput)
}

type BgpAggregateAddress6ArrayOutput struct{ *pulumi.OutputState }

func (BgpAggregateAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpAggregateAddress6)(nil)).Elem()
}

func (o BgpAggregateAddress6ArrayOutput) ToBgpAggregateAddress6ArrayOutput() BgpAggregateAddress6ArrayOutput {
	return o
}

func (o BgpAggregateAddress6ArrayOutput) ToBgpAggregateAddress6ArrayOutputWithContext(ctx context.Context) BgpAggregateAddress6ArrayOutput {
	return o
}

func (o BgpAggregateAddress6ArrayOutput) Index(i pulumi.IntInput) BgpAggregateAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpAggregateAddress6 {
		return vs[0].([]BgpAggregateAddress6)[vs[1].(int)]
	}).(BgpAggregateAddress6Output)
}

type BgpAggregateAddress struct {
	// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
	AsSet *string `pulumi:"asSet"`
	// ID.
	Id *int `pulumi:"id"`
	// Aggregate prefix.
	Prefix *string `pulumi:"prefix"`
	// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
	SummaryOnly *string `pulumi:"summaryOnly"`
}

// BgpAggregateAddressInput is an input type that accepts BgpAggregateAddressArgs and BgpAggregateAddressOutput values.
// You can construct a concrete instance of `BgpAggregateAddressInput` via:
//
//	BgpAggregateAddressArgs{...}
type BgpAggregateAddressInput interface {
	pulumi.Input

	ToBgpAggregateAddressOutput() BgpAggregateAddressOutput
	ToBgpAggregateAddressOutputWithContext(context.Context) BgpAggregateAddressOutput
}

type BgpAggregateAddressArgs struct {
	// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
	AsSet pulumi.StringPtrInput `pulumi:"asSet"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Aggregate prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
	SummaryOnly pulumi.StringPtrInput `pulumi:"summaryOnly"`
}

func (BgpAggregateAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpAggregateAddress)(nil)).Elem()
}

func (i BgpAggregateAddressArgs) ToBgpAggregateAddressOutput() BgpAggregateAddressOutput {
	return i.ToBgpAggregateAddressOutputWithContext(context.Background())
}

func (i BgpAggregateAddressArgs) ToBgpAggregateAddressOutputWithContext(ctx context.Context) BgpAggregateAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAggregateAddressOutput)
}

// BgpAggregateAddressArrayInput is an input type that accepts BgpAggregateAddressArray and BgpAggregateAddressArrayOutput values.
// You can construct a concrete instance of `BgpAggregateAddressArrayInput` via:
//
//	BgpAggregateAddressArray{ BgpAggregateAddressArgs{...} }
type BgpAggregateAddressArrayInput interface {
	pulumi.Input

	ToBgpAggregateAddressArrayOutput() BgpAggregateAddressArrayOutput
	ToBgpAggregateAddressArrayOutputWithContext(context.Context) BgpAggregateAddressArrayOutput
}

type BgpAggregateAddressArray []BgpAggregateAddressInput

func (BgpAggregateAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpAggregateAddress)(nil)).Elem()
}

func (i BgpAggregateAddressArray) ToBgpAggregateAddressArrayOutput() BgpAggregateAddressArrayOutput {
	return i.ToBgpAggregateAddressArrayOutputWithContext(context.Background())
}

func (i BgpAggregateAddressArray) ToBgpAggregateAddressArrayOutputWithContext(ctx context.Context) BgpAggregateAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAggregateAddressArrayOutput)
}

type BgpAggregateAddressOutput struct{ *pulumi.OutputState }

func (BgpAggregateAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpAggregateAddress)(nil)).Elem()
}

func (o BgpAggregateAddressOutput) ToBgpAggregateAddressOutput() BgpAggregateAddressOutput {
	return o
}

func (o BgpAggregateAddressOutput) ToBgpAggregateAddressOutputWithContext(ctx context.Context) BgpAggregateAddressOutput {
	return o
}

// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
func (o BgpAggregateAddressOutput) AsSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpAggregateAddress) *string { return v.AsSet }).(pulumi.StringPtrOutput)
}

// ID.
func (o BgpAggregateAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpAggregateAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Aggregate prefix.
func (o BgpAggregateAddressOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpAggregateAddress) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
func (o BgpAggregateAddressOutput) SummaryOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpAggregateAddress) *string { return v.SummaryOnly }).(pulumi.StringPtrOutput)
}

type BgpAggregateAddressArrayOutput struct{ *pulumi.OutputState }

func (BgpAggregateAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpAggregateAddress)(nil)).Elem()
}

func (o BgpAggregateAddressArrayOutput) ToBgpAggregateAddressArrayOutput() BgpAggregateAddressArrayOutput {
	return o
}

func (o BgpAggregateAddressArrayOutput) ToBgpAggregateAddressArrayOutputWithContext(ctx context.Context) BgpAggregateAddressArrayOutput {
	return o
}

func (o BgpAggregateAddressArrayOutput) Index(i pulumi.IntInput) BgpAggregateAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpAggregateAddress {
		return vs[0].([]BgpAggregateAddress)[vs[1].(int)]
	}).(BgpAggregateAddressOutput)
}

type BgpConfederationPeer struct {
	// Peer ID.
	Peer *string `pulumi:"peer"`
}

// BgpConfederationPeerInput is an input type that accepts BgpConfederationPeerArgs and BgpConfederationPeerOutput values.
// You can construct a concrete instance of `BgpConfederationPeerInput` via:
//
//	BgpConfederationPeerArgs{...}
type BgpConfederationPeerInput interface {
	pulumi.Input

	ToBgpConfederationPeerOutput() BgpConfederationPeerOutput
	ToBgpConfederationPeerOutputWithContext(context.Context) BgpConfederationPeerOutput
}

type BgpConfederationPeerArgs struct {
	// Peer ID.
	Peer pulumi.StringPtrInput `pulumi:"peer"`
}

func (BgpConfederationPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpConfederationPeer)(nil)).Elem()
}

func (i BgpConfederationPeerArgs) ToBgpConfederationPeerOutput() BgpConfederationPeerOutput {
	return i.ToBgpConfederationPeerOutputWithContext(context.Background())
}

func (i BgpConfederationPeerArgs) ToBgpConfederationPeerOutputWithContext(ctx context.Context) BgpConfederationPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpConfederationPeerOutput)
}

// BgpConfederationPeerArrayInput is an input type that accepts BgpConfederationPeerArray and BgpConfederationPeerArrayOutput values.
// You can construct a concrete instance of `BgpConfederationPeerArrayInput` via:
//
//	BgpConfederationPeerArray{ BgpConfederationPeerArgs{...} }
type BgpConfederationPeerArrayInput interface {
	pulumi.Input

	ToBgpConfederationPeerArrayOutput() BgpConfederationPeerArrayOutput
	ToBgpConfederationPeerArrayOutputWithContext(context.Context) BgpConfederationPeerArrayOutput
}

type BgpConfederationPeerArray []BgpConfederationPeerInput

func (BgpConfederationPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpConfederationPeer)(nil)).Elem()
}

func (i BgpConfederationPeerArray) ToBgpConfederationPeerArrayOutput() BgpConfederationPeerArrayOutput {
	return i.ToBgpConfederationPeerArrayOutputWithContext(context.Background())
}

func (i BgpConfederationPeerArray) ToBgpConfederationPeerArrayOutputWithContext(ctx context.Context) BgpConfederationPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpConfederationPeerArrayOutput)
}

type BgpConfederationPeerOutput struct{ *pulumi.OutputState }

func (BgpConfederationPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpConfederationPeer)(nil)).Elem()
}

func (o BgpConfederationPeerOutput) ToBgpConfederationPeerOutput() BgpConfederationPeerOutput {
	return o
}

func (o BgpConfederationPeerOutput) ToBgpConfederationPeerOutputWithContext(ctx context.Context) BgpConfederationPeerOutput {
	return o
}

// Peer ID.
func (o BgpConfederationPeerOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpConfederationPeer) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

type BgpConfederationPeerArrayOutput struct{ *pulumi.OutputState }

func (BgpConfederationPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpConfederationPeer)(nil)).Elem()
}

func (o BgpConfederationPeerArrayOutput) ToBgpConfederationPeerArrayOutput() BgpConfederationPeerArrayOutput {
	return o
}

func (o BgpConfederationPeerArrayOutput) ToBgpConfederationPeerArrayOutputWithContext(ctx context.Context) BgpConfederationPeerArrayOutput {
	return o
}

func (o BgpConfederationPeerArrayOutput) Index(i pulumi.IntInput) BgpConfederationPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpConfederationPeer {
		return vs[0].([]BgpConfederationPeer)[vs[1].(int)]
	}).(BgpConfederationPeerOutput)
}

type BgpNeighbor struct {
	// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
	Activate *string `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
	Activate6 *string `pulumi:"activate6"`
	// Enable/disable address family L2VPN EVPN for this neighbor. Valid values: `enable`, `disable`.
	ActivateEvpn *string `pulumi:"activateEvpn"`
	// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv4 *string `pulumi:"activateVpnv4"`
	// Enable/disable address family VPNv6 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv6 *string `pulumi:"activateVpnv6"`
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath *string `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 *string `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv4 *string `pulumi:"additionalPathVpnv4"`
	// Enable/disable VPNv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv6 *string `pulumi:"additionalPathVpnv6"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath *int `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 *int `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 *int `pulumi:"advAdditionalPathVpnv4"`
	// Number of VPNv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv6 *int `pulumi:"advAdditionalPathVpnv6"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval *int `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn *int `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 *int `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable *string `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable6 *string `pulumi:"allowasInEnable6"`
	// Enable/disable to allow my AS in AS path for L2VPN EVPN route. Valid values: `enable`, `disable`.
	AllowasInEnableEvpn *string `pulumi:"allowasInEnableEvpn"`
	// Enable/disable to allow my AS in AS path for VPNv4 route. Valid values: `enable`, `disable`.
	AllowasInEnableVpnv4 *string `pulumi:"allowasInEnableVpnv4"`
	// Enable/disable use of my AS in AS path for VPNv6 route. Valid values: `enable`, `disable`.
	AllowasInEnableVpnv6 *string `pulumi:"allowasInEnableVpnv6"`
	// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
	AllowasInEvpn *int `pulumi:"allowasInEvpn"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 *int `pulumi:"allowasInVpnv4"`
	// The maximum number of occurrence of my AS number allowed for VPNv6 route.
	AllowasInVpnv6 *int `pulumi:"allowasInVpnv6"`
	// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
	AsOverride *string `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
	AsOverride6 *string `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged *string `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged6 *string `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv4 *string `pulumi:"attributeUnchangedVpnv4"`
	// List of attributes that should not be changed for VPNv6 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv6 *string `pulumi:"attributeUnchangedVpnv6"`
	// Key-chain name for TCP authentication options.
	AuthOptions *string `pulumi:"authOptions"`
	// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate *string `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate6 *string `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDynamic *string `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart *string `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart6 *string `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartEvpn *string `pulumi:"capabilityGracefulRestartEvpn"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv4 *string `pulumi:"capabilityGracefulRestartVpnv4"`
	// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv6 *string `pulumi:"capabilityGracefulRestartVpnv6"`
	// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf *string `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf6 *string `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityRouteRefresh *string `pulumi:"capabilityRouteRefresh"`
	// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
	ConditionalAdvertise6s []BgpNeighborConditionalAdvertise6 `pulumi:"conditionalAdvertise6s"`
	// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
	ConditionalAdvertises []BgpNeighborConditionalAdvertise `pulumi:"conditionalAdvertises"`
	// Interval (sec) for connect timer.
	ConnectTimer *int `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap *string `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 *string `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description *string `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn *string `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 *string `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 *string `pulumi:"distributeListInVpnv4"`
	// Filter for VPNv6 updates from this neighbor.
	DistributeListInVpnv6 *string `pulumi:"distributeListInVpnv6"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut *string `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 *string `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 *string `pulumi:"distributeListOutVpnv4"`
	// Filter for VPNv6 updates to this neighbor.
	DistributeListOutVpnv6 *string `pulumi:"distributeListOutVpnv6"`
	// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
	DontCapabilityNegotiate *string `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
	EbgpEnforceMultihop *string `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl *int `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn *string `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 *string `pulumi:"filterListIn6"`
	// BGP filter for VPNv4 inbound routes.
	FilterListInVpnv4 *string `pulumi:"filterListInVpnv4"`
	// BGP filter for VPNv6 inbound routes.
	FilterListInVpnv6 *string `pulumi:"filterListInVpnv6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut *string `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 *string `pulumi:"filterListOut6"`
	// BGP filter for VPNv4 outbound routes.
	FilterListOutVpnv4 *string `pulumi:"filterListOutVpnv4"`
	// BGP filter for VPNv6 outbound routes.
	FilterListOutVpnv6 *string `pulumi:"filterListOutVpnv6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer *int `pulumi:"holdtimeTimer"`
	// Interface
	Interface *string `pulumi:"interface"`
	// IP/IPv6 address of neighbor.
	Ip *string `pulumi:"ip"`
	// Keep alive timer interval (sec).
	KeepAliveTimer *int `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
	LinkDownFailover *string `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs *int `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
	LocalAsNoPrepend *string `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
	LocalAsReplaceAs *string `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix *int `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 *int `pulumi:"maximumPrefix6"`
	// Maximum number of L2VPN EVPN prefixes to accept from this peer.
	MaximumPrefixEvpn *int `pulumi:"maximumPrefixEvpn"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold *int `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 *int `pulumi:"maximumPrefixThreshold6"`
	// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdEvpn *int `pulumi:"maximumPrefixThresholdEvpn"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 *int `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum VPNv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv6 *int `pulumi:"maximumPrefixThresholdVpnv6"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 *int `pulumi:"maximumPrefixVpnv4"`
	// Maximum number of VPNv6 prefixes to accept from this peer.
	MaximumPrefixVpnv6 *int `pulumi:"maximumPrefixVpnv6"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly *string `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly6 *string `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyEvpn *string `pulumi:"maximumPrefixWarningOnlyEvpn"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv4 *string `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable warning message when limit is exceeded for VPNv6 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv6 *string `pulumi:"maximumPrefixWarningOnlyVpnv6"`
	// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf *string `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf6 *string `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr *string `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr6 *string `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv4 *string `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv6 *string `pulumi:"nextHopSelfVpnv6"`
	// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
	OverrideCapability *string `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
	Passive *string `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password *string `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn *string `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 *string `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 *string `pulumi:"prefixListInVpnv4"`
	// Inbound filter for VPNv6 updates from this neighbor.
	PrefixListInVpnv6 *string `pulumi:"prefixListInVpnv6"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut *string `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 *string `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 *string `pulumi:"prefixListOutVpnv4"`
	// Outbound filter for VPNv6 updates to this neighbor.
	PrefixListOutVpnv6 *string `pulumi:"prefixListOutVpnv6"`
	// AS number of neighbor.
	RemoteAs *int `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs *string `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs6 *string `pulumi:"removePrivateAs6"`
	// Enable/disable removing private AS number from L2VPN EVPN outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsEvpn *string `pulumi:"removePrivateAsEvpn"`
	// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv4 *string `pulumi:"removePrivateAsVpnv4"`
	// Enable/disable to remove private AS number from VPNv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv6 *string `pulumi:"removePrivateAsVpnv6"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime *int `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime *int `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn *string `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 *string `pulumi:"routeMapIn6"`
	// L2VPN EVPN inbound route map filter.
	RouteMapInEvpn *string `pulumi:"routeMapInEvpn"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 *string `pulumi:"routeMapInVpnv4"`
	// VPNv6 inbound route map filter.
	RouteMapInVpnv6 *string `pulumi:"routeMapInVpnv6"`
	// IPv4 Outbound route map filter.
	RouteMapOut *string `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 *string `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable *string `pulumi:"routeMapOut6Preferable"`
	// L2VPN EVPN outbound route map filter.
	RouteMapOutEvpn *string `pulumi:"routeMapOutEvpn"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable *string `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 *string `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable *string `pulumi:"routeMapOutVpnv4Preferable"`
	// VPNv6 outbound route map filter.
	RouteMapOutVpnv6 *string `pulumi:"routeMapOutVpnv6"`
	// VPNv6 outbound route map filter if this neighbor is preferred.
	RouteMapOutVpnv6Preferable *string `pulumi:"routeMapOutVpnv6Preferable"`
	// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient *string `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient6 *string `pulumi:"routeReflectorClient6"`
	// Enable/disable L2VPN EVPN AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientEvpn *string `pulumi:"routeReflectorClientEvpn"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv4 *string `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable VPNv6 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv6 *string `pulumi:"routeReflectorClientVpnv6"`
	// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient *string `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient6 *string `pulumi:"routeServerClient6"`
	// Enable/disable L2VPN EVPN AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientEvpn *string `pulumi:"routeServerClientEvpn"`
	// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv4 *string `pulumi:"routeServerClientVpnv4"`
	// Enable/disable VPNv6 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv6 *string `pulumi:"routeServerClientVpnv6"`
	// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity *string `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity6 *string `pulumi:"sendCommunity6"`
	// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityEvpn *string `pulumi:"sendCommunityEvpn"`
	// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv4 *string `pulumi:"sendCommunityVpnv4"`
	// Enable/disable sending community attribute to this neighbor for VPNv6 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv6 *string `pulumi:"sendCommunityVpnv6"`
	// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
	Shutdown *string `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration *string `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration6 *string `pulumi:"softReconfiguration6"`
	// Enable/disable L2VPN EVPN inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationEvpn *string `pulumi:"softReconfigurationEvpn"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv4 *string `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable VPNv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv6 *string `pulumi:"softReconfigurationVpnv6"`
	// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
	StaleRoute *string `pulumi:"staleRoute"`
	// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
	StrictCapabilityMatch *string `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap *string `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 *string `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource *string `pulumi:"updateSource"`
	// Neighbor weight.
	Weight *int `pulumi:"weight"`
}

// BgpNeighborInput is an input type that accepts BgpNeighborArgs and BgpNeighborOutput values.
// You can construct a concrete instance of `BgpNeighborInput` via:
//
//	BgpNeighborArgs{...}
type BgpNeighborInput interface {
	pulumi.Input

	ToBgpNeighborOutput() BgpNeighborOutput
	ToBgpNeighborOutputWithContext(context.Context) BgpNeighborOutput
}

type BgpNeighborArgs struct {
	// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
	Activate pulumi.StringPtrInput `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
	Activate6 pulumi.StringPtrInput `pulumi:"activate6"`
	// Enable/disable address family L2VPN EVPN for this neighbor. Valid values: `enable`, `disable`.
	ActivateEvpn pulumi.StringPtrInput `pulumi:"activateEvpn"`
	// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv4 pulumi.StringPtrInput `pulumi:"activateVpnv4"`
	// Enable/disable address family VPNv6 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv6 pulumi.StringPtrInput `pulumi:"activateVpnv6"`
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath pulumi.StringPtrInput `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 pulumi.StringPtrInput `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv4 pulumi.StringPtrInput `pulumi:"additionalPathVpnv4"`
	// Enable/disable VPNv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv6 pulumi.StringPtrInput `pulumi:"additionalPathVpnv6"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath pulumi.IntPtrInput `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 pulumi.IntPtrInput `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 pulumi.IntPtrInput `pulumi:"advAdditionalPathVpnv4"`
	// Number of VPNv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv6 pulumi.IntPtrInput `pulumi:"advAdditionalPathVpnv6"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval pulumi.IntPtrInput `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn pulumi.IntPtrInput `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 pulumi.IntPtrInput `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable pulumi.StringPtrInput `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable6 pulumi.StringPtrInput `pulumi:"allowasInEnable6"`
	// Enable/disable to allow my AS in AS path for L2VPN EVPN route. Valid values: `enable`, `disable`.
	AllowasInEnableEvpn pulumi.StringPtrInput `pulumi:"allowasInEnableEvpn"`
	// Enable/disable to allow my AS in AS path for VPNv4 route. Valid values: `enable`, `disable`.
	AllowasInEnableVpnv4 pulumi.StringPtrInput `pulumi:"allowasInEnableVpnv4"`
	// Enable/disable use of my AS in AS path for VPNv6 route. Valid values: `enable`, `disable`.
	AllowasInEnableVpnv6 pulumi.StringPtrInput `pulumi:"allowasInEnableVpnv6"`
	// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
	AllowasInEvpn pulumi.IntPtrInput `pulumi:"allowasInEvpn"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 pulumi.IntPtrInput `pulumi:"allowasInVpnv4"`
	// The maximum number of occurrence of my AS number allowed for VPNv6 route.
	AllowasInVpnv6 pulumi.IntPtrInput `pulumi:"allowasInVpnv6"`
	// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
	AsOverride pulumi.StringPtrInput `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
	AsOverride6 pulumi.StringPtrInput `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged pulumi.StringPtrInput `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged6 pulumi.StringPtrInput `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv4 pulumi.StringPtrInput `pulumi:"attributeUnchangedVpnv4"`
	// List of attributes that should not be changed for VPNv6 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv6 pulumi.StringPtrInput `pulumi:"attributeUnchangedVpnv6"`
	// Key-chain name for TCP authentication options.
	AuthOptions pulumi.StringPtrInput `pulumi:"authOptions"`
	// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate pulumi.StringPtrInput `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate6 pulumi.StringPtrInput `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDynamic pulumi.StringPtrInput `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart pulumi.StringPtrInput `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart6 pulumi.StringPtrInput `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartEvpn pulumi.StringPtrInput `pulumi:"capabilityGracefulRestartEvpn"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv4 pulumi.StringPtrInput `pulumi:"capabilityGracefulRestartVpnv4"`
	// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv6 pulumi.StringPtrInput `pulumi:"capabilityGracefulRestartVpnv6"`
	// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf pulumi.StringPtrInput `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf6 pulumi.StringPtrInput `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityRouteRefresh pulumi.StringPtrInput `pulumi:"capabilityRouteRefresh"`
	// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
	ConditionalAdvertise6s BgpNeighborConditionalAdvertise6ArrayInput `pulumi:"conditionalAdvertise6s"`
	// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
	ConditionalAdvertises BgpNeighborConditionalAdvertiseArrayInput `pulumi:"conditionalAdvertises"`
	// Interval (sec) for connect timer.
	ConnectTimer pulumi.IntPtrInput `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap pulumi.StringPtrInput `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 pulumi.StringPtrInput `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn pulumi.StringPtrInput `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 pulumi.StringPtrInput `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 pulumi.StringPtrInput `pulumi:"distributeListInVpnv4"`
	// Filter for VPNv6 updates from this neighbor.
	DistributeListInVpnv6 pulumi.StringPtrInput `pulumi:"distributeListInVpnv6"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut pulumi.StringPtrInput `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 pulumi.StringPtrInput `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 pulumi.StringPtrInput `pulumi:"distributeListOutVpnv4"`
	// Filter for VPNv6 updates to this neighbor.
	DistributeListOutVpnv6 pulumi.StringPtrInput `pulumi:"distributeListOutVpnv6"`
	// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
	DontCapabilityNegotiate pulumi.StringPtrInput `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
	EbgpEnforceMultihop pulumi.StringPtrInput `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl pulumi.IntPtrInput `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn pulumi.StringPtrInput `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 pulumi.StringPtrInput `pulumi:"filterListIn6"`
	// BGP filter for VPNv4 inbound routes.
	FilterListInVpnv4 pulumi.StringPtrInput `pulumi:"filterListInVpnv4"`
	// BGP filter for VPNv6 inbound routes.
	FilterListInVpnv6 pulumi.StringPtrInput `pulumi:"filterListInVpnv6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut pulumi.StringPtrInput `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 pulumi.StringPtrInput `pulumi:"filterListOut6"`
	// BGP filter for VPNv4 outbound routes.
	FilterListOutVpnv4 pulumi.StringPtrInput `pulumi:"filterListOutVpnv4"`
	// BGP filter for VPNv6 outbound routes.
	FilterListOutVpnv6 pulumi.StringPtrInput `pulumi:"filterListOutVpnv6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer pulumi.IntPtrInput `pulumi:"holdtimeTimer"`
	// Interface
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IP/IPv6 address of neighbor.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Keep alive timer interval (sec).
	KeepAliveTimer pulumi.IntPtrInput `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
	LinkDownFailover pulumi.StringPtrInput `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs pulumi.IntPtrInput `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
	LocalAsNoPrepend pulumi.StringPtrInput `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
	LocalAsReplaceAs pulumi.StringPtrInput `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix pulumi.IntPtrInput `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 pulumi.IntPtrInput `pulumi:"maximumPrefix6"`
	// Maximum number of L2VPN EVPN prefixes to accept from this peer.
	MaximumPrefixEvpn pulumi.IntPtrInput `pulumi:"maximumPrefixEvpn"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold pulumi.IntPtrInput `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 pulumi.IntPtrInput `pulumi:"maximumPrefixThreshold6"`
	// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdEvpn pulumi.IntPtrInput `pulumi:"maximumPrefixThresholdEvpn"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 pulumi.IntPtrInput `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum VPNv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv6 pulumi.IntPtrInput `pulumi:"maximumPrefixThresholdVpnv6"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 pulumi.IntPtrInput `pulumi:"maximumPrefixVpnv4"`
	// Maximum number of VPNv6 prefixes to accept from this peer.
	MaximumPrefixVpnv6 pulumi.IntPtrInput `pulumi:"maximumPrefixVpnv6"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly6 pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyEvpn pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnlyEvpn"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv4 pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable warning message when limit is exceeded for VPNv6 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv6 pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnlyVpnv6"`
	// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf pulumi.StringPtrInput `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf6 pulumi.StringPtrInput `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr pulumi.StringPtrInput `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr6 pulumi.StringPtrInput `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv4 pulumi.StringPtrInput `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv6 pulumi.StringPtrInput `pulumi:"nextHopSelfVpnv6"`
	// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
	OverrideCapability pulumi.StringPtrInput `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
	Passive pulumi.StringPtrInput `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn pulumi.StringPtrInput `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 pulumi.StringPtrInput `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 pulumi.StringPtrInput `pulumi:"prefixListInVpnv4"`
	// Inbound filter for VPNv6 updates from this neighbor.
	PrefixListInVpnv6 pulumi.StringPtrInput `pulumi:"prefixListInVpnv6"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut pulumi.StringPtrInput `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 pulumi.StringPtrInput `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 pulumi.StringPtrInput `pulumi:"prefixListOutVpnv4"`
	// Outbound filter for VPNv6 updates to this neighbor.
	PrefixListOutVpnv6 pulumi.StringPtrInput `pulumi:"prefixListOutVpnv6"`
	// AS number of neighbor.
	RemoteAs pulumi.IntPtrInput `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs pulumi.StringPtrInput `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs6 pulumi.StringPtrInput `pulumi:"removePrivateAs6"`
	// Enable/disable removing private AS number from L2VPN EVPN outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsEvpn pulumi.StringPtrInput `pulumi:"removePrivateAsEvpn"`
	// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv4 pulumi.StringPtrInput `pulumi:"removePrivateAsVpnv4"`
	// Enable/disable to remove private AS number from VPNv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv6 pulumi.StringPtrInput `pulumi:"removePrivateAsVpnv6"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime pulumi.IntPtrInput `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime pulumi.IntPtrInput `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn pulumi.StringPtrInput `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 pulumi.StringPtrInput `pulumi:"routeMapIn6"`
	// L2VPN EVPN inbound route map filter.
	RouteMapInEvpn pulumi.StringPtrInput `pulumi:"routeMapInEvpn"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 pulumi.StringPtrInput `pulumi:"routeMapInVpnv4"`
	// VPNv6 inbound route map filter.
	RouteMapInVpnv6 pulumi.StringPtrInput `pulumi:"routeMapInVpnv6"`
	// IPv4 Outbound route map filter.
	RouteMapOut pulumi.StringPtrInput `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 pulumi.StringPtrInput `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable pulumi.StringPtrInput `pulumi:"routeMapOut6Preferable"`
	// L2VPN EVPN outbound route map filter.
	RouteMapOutEvpn pulumi.StringPtrInput `pulumi:"routeMapOutEvpn"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable pulumi.StringPtrInput `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 pulumi.StringPtrInput `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable pulumi.StringPtrInput `pulumi:"routeMapOutVpnv4Preferable"`
	// VPNv6 outbound route map filter.
	RouteMapOutVpnv6 pulumi.StringPtrInput `pulumi:"routeMapOutVpnv6"`
	// VPNv6 outbound route map filter if this neighbor is preferred.
	RouteMapOutVpnv6Preferable pulumi.StringPtrInput `pulumi:"routeMapOutVpnv6Preferable"`
	// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient pulumi.StringPtrInput `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient6 pulumi.StringPtrInput `pulumi:"routeReflectorClient6"`
	// Enable/disable L2VPN EVPN AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientEvpn pulumi.StringPtrInput `pulumi:"routeReflectorClientEvpn"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv4 pulumi.StringPtrInput `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable VPNv6 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv6 pulumi.StringPtrInput `pulumi:"routeReflectorClientVpnv6"`
	// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient pulumi.StringPtrInput `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient6 pulumi.StringPtrInput `pulumi:"routeServerClient6"`
	// Enable/disable L2VPN EVPN AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientEvpn pulumi.StringPtrInput `pulumi:"routeServerClientEvpn"`
	// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv4 pulumi.StringPtrInput `pulumi:"routeServerClientVpnv4"`
	// Enable/disable VPNv6 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv6 pulumi.StringPtrInput `pulumi:"routeServerClientVpnv6"`
	// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity pulumi.StringPtrInput `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity6 pulumi.StringPtrInput `pulumi:"sendCommunity6"`
	// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityEvpn pulumi.StringPtrInput `pulumi:"sendCommunityEvpn"`
	// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv4 pulumi.StringPtrInput `pulumi:"sendCommunityVpnv4"`
	// Enable/disable sending community attribute to this neighbor for VPNv6 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv6 pulumi.StringPtrInput `pulumi:"sendCommunityVpnv6"`
	// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
	Shutdown pulumi.StringPtrInput `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration pulumi.StringPtrInput `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration6 pulumi.StringPtrInput `pulumi:"softReconfiguration6"`
	// Enable/disable L2VPN EVPN inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationEvpn pulumi.StringPtrInput `pulumi:"softReconfigurationEvpn"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv4 pulumi.StringPtrInput `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable VPNv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv6 pulumi.StringPtrInput `pulumi:"softReconfigurationVpnv6"`
	// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
	StaleRoute pulumi.StringPtrInput `pulumi:"staleRoute"`
	// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
	StrictCapabilityMatch pulumi.StringPtrInput `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap pulumi.StringPtrInput `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 pulumi.StringPtrInput `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource pulumi.StringPtrInput `pulumi:"updateSource"`
	// Neighbor weight.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (BgpNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighbor)(nil)).Elem()
}

func (i BgpNeighborArgs) ToBgpNeighborOutput() BgpNeighborOutput {
	return i.ToBgpNeighborOutputWithContext(context.Background())
}

func (i BgpNeighborArgs) ToBgpNeighborOutputWithContext(ctx context.Context) BgpNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborOutput)
}

// BgpNeighborArrayInput is an input type that accepts BgpNeighborArray and BgpNeighborArrayOutput values.
// You can construct a concrete instance of `BgpNeighborArrayInput` via:
//
//	BgpNeighborArray{ BgpNeighborArgs{...} }
type BgpNeighborArrayInput interface {
	pulumi.Input

	ToBgpNeighborArrayOutput() BgpNeighborArrayOutput
	ToBgpNeighborArrayOutputWithContext(context.Context) BgpNeighborArrayOutput
}

type BgpNeighborArray []BgpNeighborInput

func (BgpNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighbor)(nil)).Elem()
}

func (i BgpNeighborArray) ToBgpNeighborArrayOutput() BgpNeighborArrayOutput {
	return i.ToBgpNeighborArrayOutputWithContext(context.Background())
}

func (i BgpNeighborArray) ToBgpNeighborArrayOutputWithContext(ctx context.Context) BgpNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborArrayOutput)
}

type BgpNeighborOutput struct{ *pulumi.OutputState }

func (BgpNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighbor)(nil)).Elem()
}

func (o BgpNeighborOutput) ToBgpNeighborOutput() BgpNeighborOutput {
	return o
}

func (o BgpNeighborOutput) ToBgpNeighborOutputWithContext(ctx context.Context) BgpNeighborOutput {
	return o
}

// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) Activate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.Activate }).(pulumi.StringPtrOutput)
}

// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) Activate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.Activate6 }).(pulumi.StringPtrOutput)
}

// Enable/disable address family L2VPN EVPN for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) ActivateEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.ActivateEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) ActivateVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.ActivateVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable address family VPNv6 for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) ActivateVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.ActivateVpnv6 }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o BgpNeighborOutput) AdditionalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AdditionalPath }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o BgpNeighborOutput) AdditionalPath6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AdditionalPath6 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o BgpNeighborOutput) AdditionalPathVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AdditionalPathVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o BgpNeighborOutput) AdditionalPathVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AdditionalPathVpnv6 }).(pulumi.StringPtrOutput)
}

// Number of IPv4 additional paths that can be advertised to this neighbor.
func (o BgpNeighborOutput) AdvAdditionalPath() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.AdvAdditionalPath }).(pulumi.IntPtrOutput)
}

// Number of IPv6 additional paths that can be advertised to this neighbor.
func (o BgpNeighborOutput) AdvAdditionalPath6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.AdvAdditionalPath6 }).(pulumi.IntPtrOutput)
}

// Number of VPNv4 additional paths that can be advertised to this neighbor.
func (o BgpNeighborOutput) AdvAdditionalPathVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.AdvAdditionalPathVpnv4 }).(pulumi.IntPtrOutput)
}

// Number of VPNv6 additional paths that can be advertised to this neighbor.
func (o BgpNeighborOutput) AdvAdditionalPathVpnv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.AdvAdditionalPathVpnv6 }).(pulumi.IntPtrOutput)
}

// Minimum interval (sec) between sending updates.
func (o BgpNeighborOutput) AdvertisementInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.AdvertisementInterval }).(pulumi.IntPtrOutput)
}

// IPv4 The maximum number of occurrence of my AS number allowed.
func (o BgpNeighborOutput) AllowasIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.AllowasIn }).(pulumi.IntPtrOutput)
}

// IPv6 The maximum number of occurrence of my AS number allowed.
func (o BgpNeighborOutput) AllowasIn6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.AllowasIn6 }).(pulumi.IntPtrOutput)
}

// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) AllowasInEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AllowasInEnable }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) AllowasInEnable6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AllowasInEnable6 }).(pulumi.StringPtrOutput)
}

// Enable/disable to allow my AS in AS path for L2VPN EVPN route. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) AllowasInEnableEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AllowasInEnableEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable to allow my AS in AS path for VPNv4 route. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) AllowasInEnableVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AllowasInEnableVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable use of my AS in AS path for VPNv6 route. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) AllowasInEnableVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AllowasInEnableVpnv6 }).(pulumi.StringPtrOutput)
}

// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
func (o BgpNeighborOutput) AllowasInEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.AllowasInEvpn }).(pulumi.IntPtrOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv4 route.
func (o BgpNeighborOutput) AllowasInVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.AllowasInVpnv4 }).(pulumi.IntPtrOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv6 route.
func (o BgpNeighborOutput) AllowasInVpnv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.AllowasInVpnv6 }).(pulumi.IntPtrOutput)
}

// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) AsOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AsOverride }).(pulumi.StringPtrOutput)
}

// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) AsOverride6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AsOverride6 }).(pulumi.StringPtrOutput)
}

// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
func (o BgpNeighborOutput) AttributeUnchanged() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AttributeUnchanged }).(pulumi.StringPtrOutput)
}

// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
func (o BgpNeighborOutput) AttributeUnchanged6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AttributeUnchanged6 }).(pulumi.StringPtrOutput)
}

// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
func (o BgpNeighborOutput) AttributeUnchangedVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AttributeUnchangedVpnv4 }).(pulumi.StringPtrOutput)
}

// List of attributes that should not be changed for VPNv6 route. Valid values: `as-path`, `med`, `next-hop`.
func (o BgpNeighborOutput) AttributeUnchangedVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AttributeUnchangedVpnv6 }).(pulumi.StringPtrOutput)
}

// Key-chain name for TCP authentication options.
func (o BgpNeighborOutput) AuthOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.AuthOptions }).(pulumi.StringPtrOutput)
}

// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) CapabilityDefaultOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.CapabilityDefaultOriginate }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) CapabilityDefaultOriginate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.CapabilityDefaultOriginate6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) CapabilityDynamic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.CapabilityDynamic }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) CapabilityGracefulRestart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.CapabilityGracefulRestart }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) CapabilityGracefulRestart6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.CapabilityGracefulRestart6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) CapabilityGracefulRestartEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.CapabilityGracefulRestartEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) CapabilityGracefulRestartVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.CapabilityGracefulRestartVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) CapabilityGracefulRestartVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.CapabilityGracefulRestartVpnv6 }).(pulumi.StringPtrOutput)
}

// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
func (o BgpNeighborOutput) CapabilityOrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.CapabilityOrf }).(pulumi.StringPtrOutput)
}

// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
func (o BgpNeighborOutput) CapabilityOrf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.CapabilityOrf6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) CapabilityRouteRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.CapabilityRouteRefresh }).(pulumi.StringPtrOutput)
}

// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
func (o BgpNeighborOutput) ConditionalAdvertise6s() BgpNeighborConditionalAdvertise6ArrayOutput {
	return o.ApplyT(func(v BgpNeighbor) []BgpNeighborConditionalAdvertise6 { return v.ConditionalAdvertise6s }).(BgpNeighborConditionalAdvertise6ArrayOutput)
}

// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
func (o BgpNeighborOutput) ConditionalAdvertises() BgpNeighborConditionalAdvertiseArrayOutput {
	return o.ApplyT(func(v BgpNeighbor) []BgpNeighborConditionalAdvertise { return v.ConditionalAdvertises }).(BgpNeighborConditionalAdvertiseArrayOutput)
}

// Interval (sec) for connect timer.
func (o BgpNeighborOutput) ConnectTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.ConnectTimer }).(pulumi.IntPtrOutput)
}

// Route map to specify criteria to originate IPv4 default.
func (o BgpNeighborOutput) DefaultOriginateRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.DefaultOriginateRoutemap }).(pulumi.StringPtrOutput)
}

// Route map to specify criteria to originate IPv6 default.
func (o BgpNeighborOutput) DefaultOriginateRoutemap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.DefaultOriginateRoutemap6 }).(pulumi.StringPtrOutput)
}

// Description.
func (o BgpNeighborOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Filter for IPv4 updates from this neighbor.
func (o BgpNeighborOutput) DistributeListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.DistributeListIn }).(pulumi.StringPtrOutput)
}

// Filter for IPv6 updates from this neighbor.
func (o BgpNeighborOutput) DistributeListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.DistributeListIn6 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv4 updates from this neighbor.
func (o BgpNeighborOutput) DistributeListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.DistributeListInVpnv4 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv6 updates from this neighbor.
func (o BgpNeighborOutput) DistributeListInVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.DistributeListInVpnv6 }).(pulumi.StringPtrOutput)
}

// Filter for IPv4 updates to this neighbor.
func (o BgpNeighborOutput) DistributeListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.DistributeListOut }).(pulumi.StringPtrOutput)
}

// Filter for IPv6 updates to this neighbor.
func (o BgpNeighborOutput) DistributeListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.DistributeListOut6 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv4 updates to this neighbor.
func (o BgpNeighborOutput) DistributeListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.DistributeListOutVpnv4 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv6 updates to this neighbor.
func (o BgpNeighborOutput) DistributeListOutVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.DistributeListOutVpnv6 }).(pulumi.StringPtrOutput)
}

// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) DontCapabilityNegotiate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.DontCapabilityNegotiate }).(pulumi.StringPtrOutput)
}

// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) EbgpEnforceMultihop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.EbgpEnforceMultihop }).(pulumi.StringPtrOutput)
}

// EBGP multihop TTL for this peer.
func (o BgpNeighborOutput) EbgpMultihopTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.EbgpMultihopTtl }).(pulumi.IntPtrOutput)
}

// BGP filter for IPv4 inbound routes.
func (o BgpNeighborOutput) FilterListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.FilterListIn }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv6 inbound routes.
func (o BgpNeighborOutput) FilterListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.FilterListIn6 }).(pulumi.StringPtrOutput)
}

// BGP filter for VPNv4 inbound routes.
func (o BgpNeighborOutput) FilterListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.FilterListInVpnv4 }).(pulumi.StringPtrOutput)
}

// BGP filter for VPNv6 inbound routes.
func (o BgpNeighborOutput) FilterListInVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.FilterListInVpnv6 }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv4 outbound routes.
func (o BgpNeighborOutput) FilterListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.FilterListOut }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv6 outbound routes.
func (o BgpNeighborOutput) FilterListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.FilterListOut6 }).(pulumi.StringPtrOutput)
}

// BGP filter for VPNv4 outbound routes.
func (o BgpNeighborOutput) FilterListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.FilterListOutVpnv4 }).(pulumi.StringPtrOutput)
}

// BGP filter for VPNv6 outbound routes.
func (o BgpNeighborOutput) FilterListOutVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.FilterListOutVpnv6 }).(pulumi.StringPtrOutput)
}

// Interval (sec) before peer considered dead.
func (o BgpNeighborOutput) HoldtimeTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.HoldtimeTimer }).(pulumi.IntPtrOutput)
}

// Interface
func (o BgpNeighborOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IP/IPv6 address of neighbor.
func (o BgpNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Keep alive timer interval (sec).
func (o BgpNeighborOutput) KeepAliveTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.KeepAliveTimer }).(pulumi.IntPtrOutput)
}

// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) LinkDownFailover() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.LinkDownFailover }).(pulumi.StringPtrOutput)
}

// Local AS number of neighbor.
func (o BgpNeighborOutput) LocalAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.LocalAs }).(pulumi.IntPtrOutput)
}

// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) LocalAsNoPrepend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.LocalAsNoPrepend }).(pulumi.StringPtrOutput)
}

// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) LocalAsReplaceAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.LocalAsReplaceAs }).(pulumi.StringPtrOutput)
}

// Maximum number of IPv4 prefixes to accept from this peer.
func (o BgpNeighborOutput) MaximumPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.MaximumPrefix }).(pulumi.IntPtrOutput)
}

// Maximum number of IPv6 prefixes to accept from this peer.
func (o BgpNeighborOutput) MaximumPrefix6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.MaximumPrefix6 }).(pulumi.IntPtrOutput)
}

// Maximum number of L2VPN EVPN prefixes to accept from this peer.
func (o BgpNeighborOutput) MaximumPrefixEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.MaximumPrefixEvpn }).(pulumi.IntPtrOutput)
}

// Maximum IPv4 prefix threshold value (1 - 100 percent).
func (o BgpNeighborOutput) MaximumPrefixThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.MaximumPrefixThreshold }).(pulumi.IntPtrOutput)
}

// Maximum IPv6 prefix threshold value (1 - 100 percent).
func (o BgpNeighborOutput) MaximumPrefixThreshold6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.MaximumPrefixThreshold6 }).(pulumi.IntPtrOutput)
}

// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
func (o BgpNeighborOutput) MaximumPrefixThresholdEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.MaximumPrefixThresholdEvpn }).(pulumi.IntPtrOutput)
}

// Maximum VPNv4 prefix threshold value (1 - 100 percent).
func (o BgpNeighborOutput) MaximumPrefixThresholdVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.MaximumPrefixThresholdVpnv4 }).(pulumi.IntPtrOutput)
}

// Maximum VPNv6 prefix threshold value (1 - 100 percent).
func (o BgpNeighborOutput) MaximumPrefixThresholdVpnv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.MaximumPrefixThresholdVpnv6 }).(pulumi.IntPtrOutput)
}

// Maximum number of VPNv4 prefixes to accept from this peer.
func (o BgpNeighborOutput) MaximumPrefixVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.MaximumPrefixVpnv4 }).(pulumi.IntPtrOutput)
}

// Maximum number of VPNv6 prefixes to accept from this peer.
func (o BgpNeighborOutput) MaximumPrefixVpnv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.MaximumPrefixVpnv6 }).(pulumi.IntPtrOutput)
}

// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) MaximumPrefixWarningOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.MaximumPrefixWarningOnly }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) MaximumPrefixWarningOnly6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.MaximumPrefixWarningOnly6 }).(pulumi.StringPtrOutput)
}

// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) MaximumPrefixWarningOnlyEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.MaximumPrefixWarningOnlyEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) MaximumPrefixWarningOnlyVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.MaximumPrefixWarningOnlyVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable warning message when limit is exceeded for VPNv6 routes. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) MaximumPrefixWarningOnlyVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.MaximumPrefixWarningOnlyVpnv6 }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) NextHopSelf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.NextHopSelf }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) NextHopSelf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.NextHopSelf6 }).(pulumi.StringPtrOutput)
}

// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) NextHopSelfRr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.NextHopSelfRr }).(pulumi.StringPtrOutput)
}

// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) NextHopSelfRr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.NextHopSelfRr6 }).(pulumi.StringPtrOutput)
}

// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) NextHopSelfVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.NextHopSelfVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) NextHopSelfVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.NextHopSelfVpnv6 }).(pulumi.StringPtrOutput)
}

// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) OverrideCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.OverrideCapability }).(pulumi.StringPtrOutput)
}

// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) Passive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.Passive }).(pulumi.StringPtrOutput)
}

// Password used in MD5 authentication.
func (o BgpNeighborOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// IPv4 Inbound filter for updates from this neighbor.
func (o BgpNeighborOutput) PrefixListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.PrefixListIn }).(pulumi.StringPtrOutput)
}

// IPv6 Inbound filter for updates from this neighbor.
func (o BgpNeighborOutput) PrefixListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.PrefixListIn6 }).(pulumi.StringPtrOutput)
}

// Inbound filter for VPNv4 updates from this neighbor.
func (o BgpNeighborOutput) PrefixListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.PrefixListInVpnv4 }).(pulumi.StringPtrOutput)
}

// Inbound filter for VPNv6 updates from this neighbor.
func (o BgpNeighborOutput) PrefixListInVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.PrefixListInVpnv6 }).(pulumi.StringPtrOutput)
}

// IPv4 Outbound filter for updates to this neighbor.
func (o BgpNeighborOutput) PrefixListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.PrefixListOut }).(pulumi.StringPtrOutput)
}

// IPv6 Outbound filter for updates to this neighbor.
func (o BgpNeighborOutput) PrefixListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.PrefixListOut6 }).(pulumi.StringPtrOutput)
}

// Outbound filter for VPNv4 updates to this neighbor.
func (o BgpNeighborOutput) PrefixListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.PrefixListOutVpnv4 }).(pulumi.StringPtrOutput)
}

// Outbound filter for VPNv6 updates to this neighbor.
func (o BgpNeighborOutput) PrefixListOutVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.PrefixListOutVpnv6 }).(pulumi.StringPtrOutput)
}

// AS number of neighbor.
func (o BgpNeighborOutput) RemoteAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.RemoteAs }).(pulumi.IntPtrOutput)
}

// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RemovePrivateAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RemovePrivateAs }).(pulumi.StringPtrOutput)
}

// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RemovePrivateAs6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RemovePrivateAs6 }).(pulumi.StringPtrOutput)
}

// Enable/disable removing private AS number from L2VPN EVPN outbound updates. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RemovePrivateAsEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RemovePrivateAsEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RemovePrivateAsVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RemovePrivateAsVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable to remove private AS number from VPNv6 outbound updates. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RemovePrivateAsVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RemovePrivateAsVpnv6 }).(pulumi.StringPtrOutput)
}

// Graceful restart delay time (sec, 0 = global default).
func (o BgpNeighborOutput) RestartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.RestartTime }).(pulumi.IntPtrOutput)
}

// Time to retain stale routes.
func (o BgpNeighborOutput) RetainStaleTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.RetainStaleTime }).(pulumi.IntPtrOutput)
}

// IPv4 Inbound route map filter.
func (o BgpNeighborOutput) RouteMapIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapIn }).(pulumi.StringPtrOutput)
}

// IPv6 Inbound route map filter.
func (o BgpNeighborOutput) RouteMapIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapIn6 }).(pulumi.StringPtrOutput)
}

// L2VPN EVPN inbound route map filter.
func (o BgpNeighborOutput) RouteMapInEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapInEvpn }).(pulumi.StringPtrOutput)
}

// VPNv4 inbound route map filter.
func (o BgpNeighborOutput) RouteMapInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapInVpnv4 }).(pulumi.StringPtrOutput)
}

// VPNv6 inbound route map filter.
func (o BgpNeighborOutput) RouteMapInVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapInVpnv6 }).(pulumi.StringPtrOutput)
}

// IPv4 Outbound route map filter.
func (o BgpNeighborOutput) RouteMapOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapOut }).(pulumi.StringPtrOutput)
}

// IPv6 Outbound route map filter.
func (o BgpNeighborOutput) RouteMapOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapOut6 }).(pulumi.StringPtrOutput)
}

// IPv6 outbound route map filter if the peer is preferred.
func (o BgpNeighborOutput) RouteMapOut6Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapOut6Preferable }).(pulumi.StringPtrOutput)
}

// L2VPN EVPN outbound route map filter.
func (o BgpNeighborOutput) RouteMapOutEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapOutEvpn }).(pulumi.StringPtrOutput)
}

// IPv4 outbound route map filter if the peer is preferred.
func (o BgpNeighborOutput) RouteMapOutPreferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapOutPreferable }).(pulumi.StringPtrOutput)
}

// VPNv4 outbound route map filter.
func (o BgpNeighborOutput) RouteMapOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapOutVpnv4 }).(pulumi.StringPtrOutput)
}

// VPNv4 outbound route map filter if the peer is preferred.
func (o BgpNeighborOutput) RouteMapOutVpnv4Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapOutVpnv4Preferable }).(pulumi.StringPtrOutput)
}

// VPNv6 outbound route map filter.
func (o BgpNeighborOutput) RouteMapOutVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapOutVpnv6 }).(pulumi.StringPtrOutput)
}

// VPNv6 outbound route map filter if this neighbor is preferred.
func (o BgpNeighborOutput) RouteMapOutVpnv6Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteMapOutVpnv6Preferable }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RouteReflectorClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteReflectorClient }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RouteReflectorClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteReflectorClient6 }).(pulumi.StringPtrOutput)
}

// Enable/disable L2VPN EVPN AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RouteReflectorClientEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteReflectorClientEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RouteReflectorClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteReflectorClientVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv6 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RouteReflectorClientVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteReflectorClientVpnv6 }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RouteServerClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteServerClient }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RouteServerClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteServerClient6 }).(pulumi.StringPtrOutput)
}

// Enable/disable L2VPN EVPN AS route server client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RouteServerClientEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteServerClientEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RouteServerClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteServerClientVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv6 AS route server client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) RouteServerClientVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.RouteServerClientVpnv6 }).(pulumi.StringPtrOutput)
}

// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
func (o BgpNeighborOutput) SendCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.SendCommunity }).(pulumi.StringPtrOutput)
}

// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
func (o BgpNeighborOutput) SendCommunity6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.SendCommunity6 }).(pulumi.StringPtrOutput)
}

// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family. Valid values: `standard`, `extended`, `both`, `disable`.
func (o BgpNeighborOutput) SendCommunityEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.SendCommunityEvpn }).(pulumi.StringPtrOutput)
}

// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
func (o BgpNeighborOutput) SendCommunityVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.SendCommunityVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable sending community attribute to this neighbor for VPNv6 address family. Valid values: `standard`, `extended`, `both`, `disable`.
func (o BgpNeighborOutput) SendCommunityVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.SendCommunityVpnv6 }).(pulumi.StringPtrOutput)
}

// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) Shutdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.Shutdown }).(pulumi.StringPtrOutput)
}

// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) SoftReconfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.SoftReconfiguration }).(pulumi.StringPtrOutput)
}

// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) SoftReconfiguration6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.SoftReconfiguration6 }).(pulumi.StringPtrOutput)
}

// Enable/disable L2VPN EVPN inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) SoftReconfigurationEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.SoftReconfigurationEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) SoftReconfigurationVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.SoftReconfigurationVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) SoftReconfigurationVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.SoftReconfigurationVpnv6 }).(pulumi.StringPtrOutput)
}

// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) StaleRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.StaleRoute }).(pulumi.StringPtrOutput)
}

// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
func (o BgpNeighborOutput) StrictCapabilityMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.StrictCapabilityMatch }).(pulumi.StringPtrOutput)
}

// IPv4 Route map to selectively unsuppress suppressed routes.
func (o BgpNeighborOutput) UnsuppressMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.UnsuppressMap }).(pulumi.StringPtrOutput)
}

// IPv6 Route map to selectively unsuppress suppressed routes.
func (o BgpNeighborOutput) UnsuppressMap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.UnsuppressMap6 }).(pulumi.StringPtrOutput)
}

// Interface to use as source IP/IPv6 address of TCP connections.
func (o BgpNeighborOutput) UpdateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *string { return v.UpdateSource }).(pulumi.StringPtrOutput)
}

// Neighbor weight.
func (o BgpNeighborOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighbor) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type BgpNeighborArrayOutput struct{ *pulumi.OutputState }

func (BgpNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighbor)(nil)).Elem()
}

func (o BgpNeighborArrayOutput) ToBgpNeighborArrayOutput() BgpNeighborArrayOutput {
	return o
}

func (o BgpNeighborArrayOutput) ToBgpNeighborArrayOutputWithContext(ctx context.Context) BgpNeighborArrayOutput {
	return o
}

func (o BgpNeighborArrayOutput) Index(i pulumi.IntInput) BgpNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpNeighbor {
		return vs[0].([]BgpNeighbor)[vs[1].(int)]
	}).(BgpNeighborOutput)
}

type BgpNeighborConditionalAdvertise6 struct {
	// Name of advertising route map.
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	ConditionType *string `pulumi:"conditionType"`
}

// BgpNeighborConditionalAdvertise6Input is an input type that accepts BgpNeighborConditionalAdvertise6Args and BgpNeighborConditionalAdvertise6Output values.
// You can construct a concrete instance of `BgpNeighborConditionalAdvertise6Input` via:
//
//	BgpNeighborConditionalAdvertise6Args{...}
type BgpNeighborConditionalAdvertise6Input interface {
	pulumi.Input

	ToBgpNeighborConditionalAdvertise6Output() BgpNeighborConditionalAdvertise6Output
	ToBgpNeighborConditionalAdvertise6OutputWithContext(context.Context) BgpNeighborConditionalAdvertise6Output
}

type BgpNeighborConditionalAdvertise6Args struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	ConditionType pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (BgpNeighborConditionalAdvertise6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i BgpNeighborConditionalAdvertise6Args) ToBgpNeighborConditionalAdvertise6Output() BgpNeighborConditionalAdvertise6Output {
	return i.ToBgpNeighborConditionalAdvertise6OutputWithContext(context.Background())
}

func (i BgpNeighborConditionalAdvertise6Args) ToBgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) BgpNeighborConditionalAdvertise6Output {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborConditionalAdvertise6Output)
}

// BgpNeighborConditionalAdvertise6ArrayInput is an input type that accepts BgpNeighborConditionalAdvertise6Array and BgpNeighborConditionalAdvertise6ArrayOutput values.
// You can construct a concrete instance of `BgpNeighborConditionalAdvertise6ArrayInput` via:
//
//	BgpNeighborConditionalAdvertise6Array{ BgpNeighborConditionalAdvertise6Args{...} }
type BgpNeighborConditionalAdvertise6ArrayInput interface {
	pulumi.Input

	ToBgpNeighborConditionalAdvertise6ArrayOutput() BgpNeighborConditionalAdvertise6ArrayOutput
	ToBgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Context) BgpNeighborConditionalAdvertise6ArrayOutput
}

type BgpNeighborConditionalAdvertise6Array []BgpNeighborConditionalAdvertise6Input

func (BgpNeighborConditionalAdvertise6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i BgpNeighborConditionalAdvertise6Array) ToBgpNeighborConditionalAdvertise6ArrayOutput() BgpNeighborConditionalAdvertise6ArrayOutput {
	return i.ToBgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Background())
}

func (i BgpNeighborConditionalAdvertise6Array) ToBgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) BgpNeighborConditionalAdvertise6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborConditionalAdvertise6ArrayOutput)
}

type BgpNeighborConditionalAdvertise6Output struct{ *pulumi.OutputState }

func (BgpNeighborConditionalAdvertise6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o BgpNeighborConditionalAdvertise6Output) ToBgpNeighborConditionalAdvertise6Output() BgpNeighborConditionalAdvertise6Output {
	return o
}

func (o BgpNeighborConditionalAdvertise6Output) ToBgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) BgpNeighborConditionalAdvertise6Output {
	return o
}

// Name of advertising route map.
func (o BgpNeighborConditionalAdvertise6Output) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborConditionalAdvertise6) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

// Name of condition route map.
func (o BgpNeighborConditionalAdvertise6Output) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborConditionalAdvertise6) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

// Type of condition. Valid values: `exist`, `non-exist`.
func (o BgpNeighborConditionalAdvertise6Output) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborConditionalAdvertise6) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type BgpNeighborConditionalAdvertise6ArrayOutput struct{ *pulumi.OutputState }

func (BgpNeighborConditionalAdvertise6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o BgpNeighborConditionalAdvertise6ArrayOutput) ToBgpNeighborConditionalAdvertise6ArrayOutput() BgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o BgpNeighborConditionalAdvertise6ArrayOutput) ToBgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) BgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o BgpNeighborConditionalAdvertise6ArrayOutput) Index(i pulumi.IntInput) BgpNeighborConditionalAdvertise6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpNeighborConditionalAdvertise6 {
		return vs[0].([]BgpNeighborConditionalAdvertise6)[vs[1].(int)]
	}).(BgpNeighborConditionalAdvertise6Output)
}

type BgpNeighborConditionalAdvertise struct {
	// Name of advertising route map.
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	ConditionType *string `pulumi:"conditionType"`
}

// BgpNeighborConditionalAdvertiseInput is an input type that accepts BgpNeighborConditionalAdvertiseArgs and BgpNeighborConditionalAdvertiseOutput values.
// You can construct a concrete instance of `BgpNeighborConditionalAdvertiseInput` via:
//
//	BgpNeighborConditionalAdvertiseArgs{...}
type BgpNeighborConditionalAdvertiseInput interface {
	pulumi.Input

	ToBgpNeighborConditionalAdvertiseOutput() BgpNeighborConditionalAdvertiseOutput
	ToBgpNeighborConditionalAdvertiseOutputWithContext(context.Context) BgpNeighborConditionalAdvertiseOutput
}

type BgpNeighborConditionalAdvertiseArgs struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	ConditionType pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (BgpNeighborConditionalAdvertiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i BgpNeighborConditionalAdvertiseArgs) ToBgpNeighborConditionalAdvertiseOutput() BgpNeighborConditionalAdvertiseOutput {
	return i.ToBgpNeighborConditionalAdvertiseOutputWithContext(context.Background())
}

func (i BgpNeighborConditionalAdvertiseArgs) ToBgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) BgpNeighborConditionalAdvertiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborConditionalAdvertiseOutput)
}

// BgpNeighborConditionalAdvertiseArrayInput is an input type that accepts BgpNeighborConditionalAdvertiseArray and BgpNeighborConditionalAdvertiseArrayOutput values.
// You can construct a concrete instance of `BgpNeighborConditionalAdvertiseArrayInput` via:
//
//	BgpNeighborConditionalAdvertiseArray{ BgpNeighborConditionalAdvertiseArgs{...} }
type BgpNeighborConditionalAdvertiseArrayInput interface {
	pulumi.Input

	ToBgpNeighborConditionalAdvertiseArrayOutput() BgpNeighborConditionalAdvertiseArrayOutput
	ToBgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Context) BgpNeighborConditionalAdvertiseArrayOutput
}

type BgpNeighborConditionalAdvertiseArray []BgpNeighborConditionalAdvertiseInput

func (BgpNeighborConditionalAdvertiseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i BgpNeighborConditionalAdvertiseArray) ToBgpNeighborConditionalAdvertiseArrayOutput() BgpNeighborConditionalAdvertiseArrayOutput {
	return i.ToBgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Background())
}

func (i BgpNeighborConditionalAdvertiseArray) ToBgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) BgpNeighborConditionalAdvertiseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborConditionalAdvertiseArrayOutput)
}

type BgpNeighborConditionalAdvertiseOutput struct{ *pulumi.OutputState }

func (BgpNeighborConditionalAdvertiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o BgpNeighborConditionalAdvertiseOutput) ToBgpNeighborConditionalAdvertiseOutput() BgpNeighborConditionalAdvertiseOutput {
	return o
}

func (o BgpNeighborConditionalAdvertiseOutput) ToBgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) BgpNeighborConditionalAdvertiseOutput {
	return o
}

// Name of advertising route map.
func (o BgpNeighborConditionalAdvertiseOutput) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborConditionalAdvertise) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

// Name of condition route map.
func (o BgpNeighborConditionalAdvertiseOutput) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborConditionalAdvertise) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

// Type of condition. Valid values: `exist`, `non-exist`.
func (o BgpNeighborConditionalAdvertiseOutput) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborConditionalAdvertise) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type BgpNeighborConditionalAdvertiseArrayOutput struct{ *pulumi.OutputState }

func (BgpNeighborConditionalAdvertiseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o BgpNeighborConditionalAdvertiseArrayOutput) ToBgpNeighborConditionalAdvertiseArrayOutput() BgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o BgpNeighborConditionalAdvertiseArrayOutput) ToBgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) BgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o BgpNeighborConditionalAdvertiseArrayOutput) Index(i pulumi.IntInput) BgpNeighborConditionalAdvertiseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpNeighborConditionalAdvertise {
		return vs[0].([]BgpNeighborConditionalAdvertise)[vs[1].(int)]
	}).(BgpNeighborConditionalAdvertiseOutput)
}

type BgpNeighborGroup struct {
	// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
	Activate *string `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
	Activate6 *string `pulumi:"activate6"`
	// Enable/disable address family L2VPN EVPN for this neighbor. Valid values: `enable`, `disable`.
	ActivateEvpn *string `pulumi:"activateEvpn"`
	// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv4 *string `pulumi:"activateVpnv4"`
	// Enable/disable address family VPNv6 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv6 *string `pulumi:"activateVpnv6"`
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath *string `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 *string `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv4 *string `pulumi:"additionalPathVpnv4"`
	// Enable/disable VPNv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv6 *string `pulumi:"additionalPathVpnv6"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath *int `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 *int `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 *int `pulumi:"advAdditionalPathVpnv4"`
	// Number of VPNv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv6 *int `pulumi:"advAdditionalPathVpnv6"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval *int `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn *int `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 *int `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable *string `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable6 *string `pulumi:"allowasInEnable6"`
	// Enable/disable to allow my AS in AS path for L2VPN EVPN route. Valid values: `enable`, `disable`.
	AllowasInEnableEvpn *string `pulumi:"allowasInEnableEvpn"`
	// Enable/disable to allow my AS in AS path for VPNv4 route. Valid values: `enable`, `disable`.
	AllowasInEnableVpnv4 *string `pulumi:"allowasInEnableVpnv4"`
	// Enable/disable use of my AS in AS path for VPNv6 route. Valid values: `enable`, `disable`.
	AllowasInEnableVpnv6 *string `pulumi:"allowasInEnableVpnv6"`
	// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
	AllowasInEvpn *int `pulumi:"allowasInEvpn"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 *int `pulumi:"allowasInVpnv4"`
	// The maximum number of occurrence of my AS number allowed for VPNv6 route.
	AllowasInVpnv6 *int `pulumi:"allowasInVpnv6"`
	// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
	AsOverride *string `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
	AsOverride6 *string `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged *string `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged6 *string `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv4 *string `pulumi:"attributeUnchangedVpnv4"`
	// List of attributes that should not be changed for VPNv6 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv6 *string `pulumi:"attributeUnchangedVpnv6"`
	// Key-chain name for TCP authentication options.
	AuthOptions *string `pulumi:"authOptions"`
	// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate *string `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate6 *string `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDynamic *string `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart *string `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart6 *string `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartEvpn *string `pulumi:"capabilityGracefulRestartEvpn"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv4 *string `pulumi:"capabilityGracefulRestartVpnv4"`
	// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv6 *string `pulumi:"capabilityGracefulRestartVpnv6"`
	// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf *string `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf6 *string `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityRouteRefresh *string `pulumi:"capabilityRouteRefresh"`
	// Interval (sec) for connect timer.
	ConnectTimer *int `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap *string `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 *string `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description *string `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn *string `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 *string `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 *string `pulumi:"distributeListInVpnv4"`
	// Filter for VPNv6 updates from this neighbor.
	DistributeListInVpnv6 *string `pulumi:"distributeListInVpnv6"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut *string `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 *string `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 *string `pulumi:"distributeListOutVpnv4"`
	// Filter for VPNv6 updates to this neighbor.
	DistributeListOutVpnv6 *string `pulumi:"distributeListOutVpnv6"`
	// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
	DontCapabilityNegotiate *string `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
	EbgpEnforceMultihop *string `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl *int `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn *string `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 *string `pulumi:"filterListIn6"`
	// BGP filter for VPNv4 inbound routes.
	FilterListInVpnv4 *string `pulumi:"filterListInVpnv4"`
	// BGP filter for VPNv6 inbound routes.
	FilterListInVpnv6 *string `pulumi:"filterListInVpnv6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut *string `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 *string `pulumi:"filterListOut6"`
	// BGP filter for VPNv4 outbound routes.
	FilterListOutVpnv4 *string `pulumi:"filterListOutVpnv4"`
	// BGP filter for VPNv6 outbound routes.
	FilterListOutVpnv6 *string `pulumi:"filterListOutVpnv6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer *int `pulumi:"holdtimeTimer"`
	// Interface
	Interface *string `pulumi:"interface"`
	// Keep alive timer interval (sec).
	KeepAliveTimer *int `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
	LinkDownFailover *string `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs *int `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
	LocalAsNoPrepend *string `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
	LocalAsReplaceAs *string `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix *int `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 *int `pulumi:"maximumPrefix6"`
	// Maximum number of L2VPN EVPN prefixes to accept from this peer.
	MaximumPrefixEvpn *int `pulumi:"maximumPrefixEvpn"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold *int `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 *int `pulumi:"maximumPrefixThreshold6"`
	// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdEvpn *int `pulumi:"maximumPrefixThresholdEvpn"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 *int `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum VPNv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv6 *int `pulumi:"maximumPrefixThresholdVpnv6"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 *int `pulumi:"maximumPrefixVpnv4"`
	// Maximum number of VPNv6 prefixes to accept from this peer.
	MaximumPrefixVpnv6 *int `pulumi:"maximumPrefixVpnv6"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly *string `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly6 *string `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyEvpn *string `pulumi:"maximumPrefixWarningOnlyEvpn"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv4 *string `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable warning message when limit is exceeded for VPNv6 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv6 *string `pulumi:"maximumPrefixWarningOnlyVpnv6"`
	// Neighbor group name.
	Name *string `pulumi:"name"`
	// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf *string `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf6 *string `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr *string `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr6 *string `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv4 *string `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv6 *string `pulumi:"nextHopSelfVpnv6"`
	// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
	OverrideCapability *string `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
	Passive *string `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password *string `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn *string `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 *string `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 *string `pulumi:"prefixListInVpnv4"`
	// Inbound filter for VPNv6 updates from this neighbor.
	PrefixListInVpnv6 *string `pulumi:"prefixListInVpnv6"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut *string `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 *string `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 *string `pulumi:"prefixListOutVpnv4"`
	// Outbound filter for VPNv6 updates to this neighbor.
	PrefixListOutVpnv6 *string `pulumi:"prefixListOutVpnv6"`
	// AS number of neighbor.
	RemoteAs *int `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs *string `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs6 *string `pulumi:"removePrivateAs6"`
	// Enable/disable removing private AS number from L2VPN EVPN outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsEvpn *string `pulumi:"removePrivateAsEvpn"`
	// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv4 *string `pulumi:"removePrivateAsVpnv4"`
	// Enable/disable to remove private AS number from VPNv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv6 *string `pulumi:"removePrivateAsVpnv6"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime *int `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime *int `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn *string `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 *string `pulumi:"routeMapIn6"`
	// L2VPN EVPN inbound route map filter.
	RouteMapInEvpn *string `pulumi:"routeMapInEvpn"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 *string `pulumi:"routeMapInVpnv4"`
	// VPNv6 inbound route map filter.
	RouteMapInVpnv6 *string `pulumi:"routeMapInVpnv6"`
	// IPv4 Outbound route map filter.
	RouteMapOut *string `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 *string `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable *string `pulumi:"routeMapOut6Preferable"`
	// L2VPN EVPN outbound route map filter.
	RouteMapOutEvpn *string `pulumi:"routeMapOutEvpn"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable *string `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 *string `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable *string `pulumi:"routeMapOutVpnv4Preferable"`
	// VPNv6 outbound route map filter.
	RouteMapOutVpnv6 *string `pulumi:"routeMapOutVpnv6"`
	// VPNv6 outbound route map filter if this neighbor is preferred.
	RouteMapOutVpnv6Preferable *string `pulumi:"routeMapOutVpnv6Preferable"`
	// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient *string `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient6 *string `pulumi:"routeReflectorClient6"`
	// Enable/disable L2VPN EVPN AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientEvpn *string `pulumi:"routeReflectorClientEvpn"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv4 *string `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable VPNv6 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv6 *string `pulumi:"routeReflectorClientVpnv6"`
	// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient *string `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient6 *string `pulumi:"routeServerClient6"`
	// Enable/disable L2VPN EVPN AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientEvpn *string `pulumi:"routeServerClientEvpn"`
	// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv4 *string `pulumi:"routeServerClientVpnv4"`
	// Enable/disable VPNv6 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv6 *string `pulumi:"routeServerClientVpnv6"`
	// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity *string `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity6 *string `pulumi:"sendCommunity6"`
	// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityEvpn *string `pulumi:"sendCommunityEvpn"`
	// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv4 *string `pulumi:"sendCommunityVpnv4"`
	// Enable/disable sending community attribute to this neighbor for VPNv6 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv6 *string `pulumi:"sendCommunityVpnv6"`
	// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
	Shutdown *string `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration *string `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration6 *string `pulumi:"softReconfiguration6"`
	// Enable/disable L2VPN EVPN inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationEvpn *string `pulumi:"softReconfigurationEvpn"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv4 *string `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable VPNv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv6 *string `pulumi:"softReconfigurationVpnv6"`
	// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
	StaleRoute *string `pulumi:"staleRoute"`
	// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
	StrictCapabilityMatch *string `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap *string `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 *string `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource *string `pulumi:"updateSource"`
	// Neighbor weight.
	Weight *int `pulumi:"weight"`
}

// BgpNeighborGroupInput is an input type that accepts BgpNeighborGroupArgs and BgpNeighborGroupOutput values.
// You can construct a concrete instance of `BgpNeighborGroupInput` via:
//
//	BgpNeighborGroupArgs{...}
type BgpNeighborGroupInput interface {
	pulumi.Input

	ToBgpNeighborGroupOutput() BgpNeighborGroupOutput
	ToBgpNeighborGroupOutputWithContext(context.Context) BgpNeighborGroupOutput
}

type BgpNeighborGroupArgs struct {
	// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
	Activate pulumi.StringPtrInput `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
	Activate6 pulumi.StringPtrInput `pulumi:"activate6"`
	// Enable/disable address family L2VPN EVPN for this neighbor. Valid values: `enable`, `disable`.
	ActivateEvpn pulumi.StringPtrInput `pulumi:"activateEvpn"`
	// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv4 pulumi.StringPtrInput `pulumi:"activateVpnv4"`
	// Enable/disable address family VPNv6 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv6 pulumi.StringPtrInput `pulumi:"activateVpnv6"`
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath pulumi.StringPtrInput `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 pulumi.StringPtrInput `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv4 pulumi.StringPtrInput `pulumi:"additionalPathVpnv4"`
	// Enable/disable VPNv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv6 pulumi.StringPtrInput `pulumi:"additionalPathVpnv6"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath pulumi.IntPtrInput `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 pulumi.IntPtrInput `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 pulumi.IntPtrInput `pulumi:"advAdditionalPathVpnv4"`
	// Number of VPNv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv6 pulumi.IntPtrInput `pulumi:"advAdditionalPathVpnv6"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval pulumi.IntPtrInput `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn pulumi.IntPtrInput `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 pulumi.IntPtrInput `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable pulumi.StringPtrInput `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable6 pulumi.StringPtrInput `pulumi:"allowasInEnable6"`
	// Enable/disable to allow my AS in AS path for L2VPN EVPN route. Valid values: `enable`, `disable`.
	AllowasInEnableEvpn pulumi.StringPtrInput `pulumi:"allowasInEnableEvpn"`
	// Enable/disable to allow my AS in AS path for VPNv4 route. Valid values: `enable`, `disable`.
	AllowasInEnableVpnv4 pulumi.StringPtrInput `pulumi:"allowasInEnableVpnv4"`
	// Enable/disable use of my AS in AS path for VPNv6 route. Valid values: `enable`, `disable`.
	AllowasInEnableVpnv6 pulumi.StringPtrInput `pulumi:"allowasInEnableVpnv6"`
	// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
	AllowasInEvpn pulumi.IntPtrInput `pulumi:"allowasInEvpn"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 pulumi.IntPtrInput `pulumi:"allowasInVpnv4"`
	// The maximum number of occurrence of my AS number allowed for VPNv6 route.
	AllowasInVpnv6 pulumi.IntPtrInput `pulumi:"allowasInVpnv6"`
	// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
	AsOverride pulumi.StringPtrInput `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
	AsOverride6 pulumi.StringPtrInput `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged pulumi.StringPtrInput `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged6 pulumi.StringPtrInput `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv4 pulumi.StringPtrInput `pulumi:"attributeUnchangedVpnv4"`
	// List of attributes that should not be changed for VPNv6 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv6 pulumi.StringPtrInput `pulumi:"attributeUnchangedVpnv6"`
	// Key-chain name for TCP authentication options.
	AuthOptions pulumi.StringPtrInput `pulumi:"authOptions"`
	// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate pulumi.StringPtrInput `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate6 pulumi.StringPtrInput `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDynamic pulumi.StringPtrInput `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart pulumi.StringPtrInput `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart6 pulumi.StringPtrInput `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartEvpn pulumi.StringPtrInput `pulumi:"capabilityGracefulRestartEvpn"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv4 pulumi.StringPtrInput `pulumi:"capabilityGracefulRestartVpnv4"`
	// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv6 pulumi.StringPtrInput `pulumi:"capabilityGracefulRestartVpnv6"`
	// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf pulumi.StringPtrInput `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf6 pulumi.StringPtrInput `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityRouteRefresh pulumi.StringPtrInput `pulumi:"capabilityRouteRefresh"`
	// Interval (sec) for connect timer.
	ConnectTimer pulumi.IntPtrInput `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap pulumi.StringPtrInput `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 pulumi.StringPtrInput `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn pulumi.StringPtrInput `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 pulumi.StringPtrInput `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 pulumi.StringPtrInput `pulumi:"distributeListInVpnv4"`
	// Filter for VPNv6 updates from this neighbor.
	DistributeListInVpnv6 pulumi.StringPtrInput `pulumi:"distributeListInVpnv6"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut pulumi.StringPtrInput `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 pulumi.StringPtrInput `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 pulumi.StringPtrInput `pulumi:"distributeListOutVpnv4"`
	// Filter for VPNv6 updates to this neighbor.
	DistributeListOutVpnv6 pulumi.StringPtrInput `pulumi:"distributeListOutVpnv6"`
	// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
	DontCapabilityNegotiate pulumi.StringPtrInput `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
	EbgpEnforceMultihop pulumi.StringPtrInput `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl pulumi.IntPtrInput `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn pulumi.StringPtrInput `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 pulumi.StringPtrInput `pulumi:"filterListIn6"`
	// BGP filter for VPNv4 inbound routes.
	FilterListInVpnv4 pulumi.StringPtrInput `pulumi:"filterListInVpnv4"`
	// BGP filter for VPNv6 inbound routes.
	FilterListInVpnv6 pulumi.StringPtrInput `pulumi:"filterListInVpnv6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut pulumi.StringPtrInput `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 pulumi.StringPtrInput `pulumi:"filterListOut6"`
	// BGP filter for VPNv4 outbound routes.
	FilterListOutVpnv4 pulumi.StringPtrInput `pulumi:"filterListOutVpnv4"`
	// BGP filter for VPNv6 outbound routes.
	FilterListOutVpnv6 pulumi.StringPtrInput `pulumi:"filterListOutVpnv6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer pulumi.IntPtrInput `pulumi:"holdtimeTimer"`
	// Interface
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Keep alive timer interval (sec).
	KeepAliveTimer pulumi.IntPtrInput `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
	LinkDownFailover pulumi.StringPtrInput `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs pulumi.IntPtrInput `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
	LocalAsNoPrepend pulumi.StringPtrInput `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
	LocalAsReplaceAs pulumi.StringPtrInput `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix pulumi.IntPtrInput `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 pulumi.IntPtrInput `pulumi:"maximumPrefix6"`
	// Maximum number of L2VPN EVPN prefixes to accept from this peer.
	MaximumPrefixEvpn pulumi.IntPtrInput `pulumi:"maximumPrefixEvpn"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold pulumi.IntPtrInput `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 pulumi.IntPtrInput `pulumi:"maximumPrefixThreshold6"`
	// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdEvpn pulumi.IntPtrInput `pulumi:"maximumPrefixThresholdEvpn"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 pulumi.IntPtrInput `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum VPNv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv6 pulumi.IntPtrInput `pulumi:"maximumPrefixThresholdVpnv6"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 pulumi.IntPtrInput `pulumi:"maximumPrefixVpnv4"`
	// Maximum number of VPNv6 prefixes to accept from this peer.
	MaximumPrefixVpnv6 pulumi.IntPtrInput `pulumi:"maximumPrefixVpnv6"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly6 pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyEvpn pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnlyEvpn"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv4 pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable warning message when limit is exceeded for VPNv6 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv6 pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnlyVpnv6"`
	// Neighbor group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf pulumi.StringPtrInput `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf6 pulumi.StringPtrInput `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr pulumi.StringPtrInput `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr6 pulumi.StringPtrInput `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv4 pulumi.StringPtrInput `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv6 pulumi.StringPtrInput `pulumi:"nextHopSelfVpnv6"`
	// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
	OverrideCapability pulumi.StringPtrInput `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
	Passive pulumi.StringPtrInput `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn pulumi.StringPtrInput `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 pulumi.StringPtrInput `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 pulumi.StringPtrInput `pulumi:"prefixListInVpnv4"`
	// Inbound filter for VPNv6 updates from this neighbor.
	PrefixListInVpnv6 pulumi.StringPtrInput `pulumi:"prefixListInVpnv6"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut pulumi.StringPtrInput `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 pulumi.StringPtrInput `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 pulumi.StringPtrInput `pulumi:"prefixListOutVpnv4"`
	// Outbound filter for VPNv6 updates to this neighbor.
	PrefixListOutVpnv6 pulumi.StringPtrInput `pulumi:"prefixListOutVpnv6"`
	// AS number of neighbor.
	RemoteAs pulumi.IntPtrInput `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs pulumi.StringPtrInput `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs6 pulumi.StringPtrInput `pulumi:"removePrivateAs6"`
	// Enable/disable removing private AS number from L2VPN EVPN outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsEvpn pulumi.StringPtrInput `pulumi:"removePrivateAsEvpn"`
	// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv4 pulumi.StringPtrInput `pulumi:"removePrivateAsVpnv4"`
	// Enable/disable to remove private AS number from VPNv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv6 pulumi.StringPtrInput `pulumi:"removePrivateAsVpnv6"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime pulumi.IntPtrInput `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime pulumi.IntPtrInput `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn pulumi.StringPtrInput `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 pulumi.StringPtrInput `pulumi:"routeMapIn6"`
	// L2VPN EVPN inbound route map filter.
	RouteMapInEvpn pulumi.StringPtrInput `pulumi:"routeMapInEvpn"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 pulumi.StringPtrInput `pulumi:"routeMapInVpnv4"`
	// VPNv6 inbound route map filter.
	RouteMapInVpnv6 pulumi.StringPtrInput `pulumi:"routeMapInVpnv6"`
	// IPv4 Outbound route map filter.
	RouteMapOut pulumi.StringPtrInput `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 pulumi.StringPtrInput `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable pulumi.StringPtrInput `pulumi:"routeMapOut6Preferable"`
	// L2VPN EVPN outbound route map filter.
	RouteMapOutEvpn pulumi.StringPtrInput `pulumi:"routeMapOutEvpn"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable pulumi.StringPtrInput `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 pulumi.StringPtrInput `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable pulumi.StringPtrInput `pulumi:"routeMapOutVpnv4Preferable"`
	// VPNv6 outbound route map filter.
	RouteMapOutVpnv6 pulumi.StringPtrInput `pulumi:"routeMapOutVpnv6"`
	// VPNv6 outbound route map filter if this neighbor is preferred.
	RouteMapOutVpnv6Preferable pulumi.StringPtrInput `pulumi:"routeMapOutVpnv6Preferable"`
	// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient pulumi.StringPtrInput `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient6 pulumi.StringPtrInput `pulumi:"routeReflectorClient6"`
	// Enable/disable L2VPN EVPN AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientEvpn pulumi.StringPtrInput `pulumi:"routeReflectorClientEvpn"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv4 pulumi.StringPtrInput `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable VPNv6 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv6 pulumi.StringPtrInput `pulumi:"routeReflectorClientVpnv6"`
	// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient pulumi.StringPtrInput `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient6 pulumi.StringPtrInput `pulumi:"routeServerClient6"`
	// Enable/disable L2VPN EVPN AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientEvpn pulumi.StringPtrInput `pulumi:"routeServerClientEvpn"`
	// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv4 pulumi.StringPtrInput `pulumi:"routeServerClientVpnv4"`
	// Enable/disable VPNv6 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv6 pulumi.StringPtrInput `pulumi:"routeServerClientVpnv6"`
	// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity pulumi.StringPtrInput `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity6 pulumi.StringPtrInput `pulumi:"sendCommunity6"`
	// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityEvpn pulumi.StringPtrInput `pulumi:"sendCommunityEvpn"`
	// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv4 pulumi.StringPtrInput `pulumi:"sendCommunityVpnv4"`
	// Enable/disable sending community attribute to this neighbor for VPNv6 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv6 pulumi.StringPtrInput `pulumi:"sendCommunityVpnv6"`
	// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
	Shutdown pulumi.StringPtrInput `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration pulumi.StringPtrInput `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration6 pulumi.StringPtrInput `pulumi:"softReconfiguration6"`
	// Enable/disable L2VPN EVPN inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationEvpn pulumi.StringPtrInput `pulumi:"softReconfigurationEvpn"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv4 pulumi.StringPtrInput `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable VPNv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv6 pulumi.StringPtrInput `pulumi:"softReconfigurationVpnv6"`
	// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
	StaleRoute pulumi.StringPtrInput `pulumi:"staleRoute"`
	// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
	StrictCapabilityMatch pulumi.StringPtrInput `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap pulumi.StringPtrInput `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 pulumi.StringPtrInput `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource pulumi.StringPtrInput `pulumi:"updateSource"`
	// Neighbor weight.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (BgpNeighborGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighborGroup)(nil)).Elem()
}

func (i BgpNeighborGroupArgs) ToBgpNeighborGroupOutput() BgpNeighborGroupOutput {
	return i.ToBgpNeighborGroupOutputWithContext(context.Background())
}

func (i BgpNeighborGroupArgs) ToBgpNeighborGroupOutputWithContext(ctx context.Context) BgpNeighborGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborGroupOutput)
}

// BgpNeighborGroupArrayInput is an input type that accepts BgpNeighborGroupArray and BgpNeighborGroupArrayOutput values.
// You can construct a concrete instance of `BgpNeighborGroupArrayInput` via:
//
//	BgpNeighborGroupArray{ BgpNeighborGroupArgs{...} }
type BgpNeighborGroupArrayInput interface {
	pulumi.Input

	ToBgpNeighborGroupArrayOutput() BgpNeighborGroupArrayOutput
	ToBgpNeighborGroupArrayOutputWithContext(context.Context) BgpNeighborGroupArrayOutput
}

type BgpNeighborGroupArray []BgpNeighborGroupInput

func (BgpNeighborGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighborGroup)(nil)).Elem()
}

func (i BgpNeighborGroupArray) ToBgpNeighborGroupArrayOutput() BgpNeighborGroupArrayOutput {
	return i.ToBgpNeighborGroupArrayOutputWithContext(context.Background())
}

func (i BgpNeighborGroupArray) ToBgpNeighborGroupArrayOutputWithContext(ctx context.Context) BgpNeighborGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborGroupArrayOutput)
}

type BgpNeighborGroupOutput struct{ *pulumi.OutputState }

func (BgpNeighborGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighborGroup)(nil)).Elem()
}

func (o BgpNeighborGroupOutput) ToBgpNeighborGroupOutput() BgpNeighborGroupOutput {
	return o
}

func (o BgpNeighborGroupOutput) ToBgpNeighborGroupOutputWithContext(ctx context.Context) BgpNeighborGroupOutput {
	return o
}

// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) Activate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.Activate }).(pulumi.StringPtrOutput)
}

// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) Activate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.Activate6 }).(pulumi.StringPtrOutput)
}

// Enable/disable address family L2VPN EVPN for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) ActivateEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.ActivateEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) ActivateVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.ActivateVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable address family VPNv6 for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) ActivateVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.ActivateVpnv6 }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o BgpNeighborGroupOutput) AdditionalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AdditionalPath }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o BgpNeighborGroupOutput) AdditionalPath6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AdditionalPath6 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o BgpNeighborGroupOutput) AdditionalPathVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AdditionalPathVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o BgpNeighborGroupOutput) AdditionalPathVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AdditionalPathVpnv6 }).(pulumi.StringPtrOutput)
}

// Number of IPv4 additional paths that can be advertised to this neighbor.
func (o BgpNeighborGroupOutput) AdvAdditionalPath() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.AdvAdditionalPath }).(pulumi.IntPtrOutput)
}

// Number of IPv6 additional paths that can be advertised to this neighbor.
func (o BgpNeighborGroupOutput) AdvAdditionalPath6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.AdvAdditionalPath6 }).(pulumi.IntPtrOutput)
}

// Number of VPNv4 additional paths that can be advertised to this neighbor.
func (o BgpNeighborGroupOutput) AdvAdditionalPathVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.AdvAdditionalPathVpnv4 }).(pulumi.IntPtrOutput)
}

// Number of VPNv6 additional paths that can be advertised to this neighbor.
func (o BgpNeighborGroupOutput) AdvAdditionalPathVpnv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.AdvAdditionalPathVpnv6 }).(pulumi.IntPtrOutput)
}

// Minimum interval (sec) between sending updates.
func (o BgpNeighborGroupOutput) AdvertisementInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.AdvertisementInterval }).(pulumi.IntPtrOutput)
}

// IPv4 The maximum number of occurrence of my AS number allowed.
func (o BgpNeighborGroupOutput) AllowasIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.AllowasIn }).(pulumi.IntPtrOutput)
}

// IPv6 The maximum number of occurrence of my AS number allowed.
func (o BgpNeighborGroupOutput) AllowasIn6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.AllowasIn6 }).(pulumi.IntPtrOutput)
}

// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) AllowasInEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AllowasInEnable }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) AllowasInEnable6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AllowasInEnable6 }).(pulumi.StringPtrOutput)
}

// Enable/disable to allow my AS in AS path for L2VPN EVPN route. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) AllowasInEnableEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AllowasInEnableEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable to allow my AS in AS path for VPNv4 route. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) AllowasInEnableVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AllowasInEnableVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable use of my AS in AS path for VPNv6 route. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) AllowasInEnableVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AllowasInEnableVpnv6 }).(pulumi.StringPtrOutput)
}

// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
func (o BgpNeighborGroupOutput) AllowasInEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.AllowasInEvpn }).(pulumi.IntPtrOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv4 route.
func (o BgpNeighborGroupOutput) AllowasInVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.AllowasInVpnv4 }).(pulumi.IntPtrOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv6 route.
func (o BgpNeighborGroupOutput) AllowasInVpnv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.AllowasInVpnv6 }).(pulumi.IntPtrOutput)
}

// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) AsOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AsOverride }).(pulumi.StringPtrOutput)
}

// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) AsOverride6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AsOverride6 }).(pulumi.StringPtrOutput)
}

// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
func (o BgpNeighborGroupOutput) AttributeUnchanged() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AttributeUnchanged }).(pulumi.StringPtrOutput)
}

// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
func (o BgpNeighborGroupOutput) AttributeUnchanged6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AttributeUnchanged6 }).(pulumi.StringPtrOutput)
}

// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
func (o BgpNeighborGroupOutput) AttributeUnchangedVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AttributeUnchangedVpnv4 }).(pulumi.StringPtrOutput)
}

// List of attributes that should not be changed for VPNv6 route. Valid values: `as-path`, `med`, `next-hop`.
func (o BgpNeighborGroupOutput) AttributeUnchangedVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AttributeUnchangedVpnv6 }).(pulumi.StringPtrOutput)
}

// Key-chain name for TCP authentication options.
func (o BgpNeighborGroupOutput) AuthOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.AuthOptions }).(pulumi.StringPtrOutput)
}

// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) CapabilityDefaultOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.CapabilityDefaultOriginate }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) CapabilityDefaultOriginate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.CapabilityDefaultOriginate6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) CapabilityDynamic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.CapabilityDynamic }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) CapabilityGracefulRestart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.CapabilityGracefulRestart }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) CapabilityGracefulRestart6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.CapabilityGracefulRestart6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) CapabilityGracefulRestartEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.CapabilityGracefulRestartEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) CapabilityGracefulRestartVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.CapabilityGracefulRestartVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) CapabilityGracefulRestartVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.CapabilityGracefulRestartVpnv6 }).(pulumi.StringPtrOutput)
}

// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
func (o BgpNeighborGroupOutput) CapabilityOrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.CapabilityOrf }).(pulumi.StringPtrOutput)
}

// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
func (o BgpNeighborGroupOutput) CapabilityOrf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.CapabilityOrf6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) CapabilityRouteRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.CapabilityRouteRefresh }).(pulumi.StringPtrOutput)
}

// Interval (sec) for connect timer.
func (o BgpNeighborGroupOutput) ConnectTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.ConnectTimer }).(pulumi.IntPtrOutput)
}

// Route map to specify criteria to originate IPv4 default.
func (o BgpNeighborGroupOutput) DefaultOriginateRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.DefaultOriginateRoutemap }).(pulumi.StringPtrOutput)
}

// Route map to specify criteria to originate IPv6 default.
func (o BgpNeighborGroupOutput) DefaultOriginateRoutemap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.DefaultOriginateRoutemap6 }).(pulumi.StringPtrOutput)
}

// Description.
func (o BgpNeighborGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Filter for IPv4 updates from this neighbor.
func (o BgpNeighborGroupOutput) DistributeListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.DistributeListIn }).(pulumi.StringPtrOutput)
}

// Filter for IPv6 updates from this neighbor.
func (o BgpNeighborGroupOutput) DistributeListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.DistributeListIn6 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv4 updates from this neighbor.
func (o BgpNeighborGroupOutput) DistributeListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.DistributeListInVpnv4 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv6 updates from this neighbor.
func (o BgpNeighborGroupOutput) DistributeListInVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.DistributeListInVpnv6 }).(pulumi.StringPtrOutput)
}

// Filter for IPv4 updates to this neighbor.
func (o BgpNeighborGroupOutput) DistributeListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.DistributeListOut }).(pulumi.StringPtrOutput)
}

// Filter for IPv6 updates to this neighbor.
func (o BgpNeighborGroupOutput) DistributeListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.DistributeListOut6 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv4 updates to this neighbor.
func (o BgpNeighborGroupOutput) DistributeListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.DistributeListOutVpnv4 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv6 updates to this neighbor.
func (o BgpNeighborGroupOutput) DistributeListOutVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.DistributeListOutVpnv6 }).(pulumi.StringPtrOutput)
}

// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) DontCapabilityNegotiate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.DontCapabilityNegotiate }).(pulumi.StringPtrOutput)
}

// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) EbgpEnforceMultihop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.EbgpEnforceMultihop }).(pulumi.StringPtrOutput)
}

// EBGP multihop TTL for this peer.
func (o BgpNeighborGroupOutput) EbgpMultihopTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.EbgpMultihopTtl }).(pulumi.IntPtrOutput)
}

// BGP filter for IPv4 inbound routes.
func (o BgpNeighborGroupOutput) FilterListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.FilterListIn }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv6 inbound routes.
func (o BgpNeighborGroupOutput) FilterListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.FilterListIn6 }).(pulumi.StringPtrOutput)
}

// BGP filter for VPNv4 inbound routes.
func (o BgpNeighborGroupOutput) FilterListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.FilterListInVpnv4 }).(pulumi.StringPtrOutput)
}

// BGP filter for VPNv6 inbound routes.
func (o BgpNeighborGroupOutput) FilterListInVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.FilterListInVpnv6 }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv4 outbound routes.
func (o BgpNeighborGroupOutput) FilterListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.FilterListOut }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv6 outbound routes.
func (o BgpNeighborGroupOutput) FilterListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.FilterListOut6 }).(pulumi.StringPtrOutput)
}

// BGP filter for VPNv4 outbound routes.
func (o BgpNeighborGroupOutput) FilterListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.FilterListOutVpnv4 }).(pulumi.StringPtrOutput)
}

// BGP filter for VPNv6 outbound routes.
func (o BgpNeighborGroupOutput) FilterListOutVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.FilterListOutVpnv6 }).(pulumi.StringPtrOutput)
}

// Interval (sec) before peer considered dead.
func (o BgpNeighborGroupOutput) HoldtimeTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.HoldtimeTimer }).(pulumi.IntPtrOutput)
}

// Interface
func (o BgpNeighborGroupOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Keep alive timer interval (sec).
func (o BgpNeighborGroupOutput) KeepAliveTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.KeepAliveTimer }).(pulumi.IntPtrOutput)
}

// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) LinkDownFailover() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.LinkDownFailover }).(pulumi.StringPtrOutput)
}

// Local AS number of neighbor.
func (o BgpNeighborGroupOutput) LocalAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.LocalAs }).(pulumi.IntPtrOutput)
}

// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) LocalAsNoPrepend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.LocalAsNoPrepend }).(pulumi.StringPtrOutput)
}

// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) LocalAsReplaceAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.LocalAsReplaceAs }).(pulumi.StringPtrOutput)
}

// Maximum number of IPv4 prefixes to accept from this peer.
func (o BgpNeighborGroupOutput) MaximumPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.MaximumPrefix }).(pulumi.IntPtrOutput)
}

// Maximum number of IPv6 prefixes to accept from this peer.
func (o BgpNeighborGroupOutput) MaximumPrefix6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.MaximumPrefix6 }).(pulumi.IntPtrOutput)
}

// Maximum number of L2VPN EVPN prefixes to accept from this peer.
func (o BgpNeighborGroupOutput) MaximumPrefixEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.MaximumPrefixEvpn }).(pulumi.IntPtrOutput)
}

// Maximum IPv4 prefix threshold value (1 - 100 percent).
func (o BgpNeighborGroupOutput) MaximumPrefixThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.MaximumPrefixThreshold }).(pulumi.IntPtrOutput)
}

// Maximum IPv6 prefix threshold value (1 - 100 percent).
func (o BgpNeighborGroupOutput) MaximumPrefixThreshold6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.MaximumPrefixThreshold6 }).(pulumi.IntPtrOutput)
}

// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
func (o BgpNeighborGroupOutput) MaximumPrefixThresholdEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.MaximumPrefixThresholdEvpn }).(pulumi.IntPtrOutput)
}

// Maximum VPNv4 prefix threshold value (1 - 100 percent).
func (o BgpNeighborGroupOutput) MaximumPrefixThresholdVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.MaximumPrefixThresholdVpnv4 }).(pulumi.IntPtrOutput)
}

// Maximum VPNv6 prefix threshold value (1 - 100 percent).
func (o BgpNeighborGroupOutput) MaximumPrefixThresholdVpnv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.MaximumPrefixThresholdVpnv6 }).(pulumi.IntPtrOutput)
}

// Maximum number of VPNv4 prefixes to accept from this peer.
func (o BgpNeighborGroupOutput) MaximumPrefixVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.MaximumPrefixVpnv4 }).(pulumi.IntPtrOutput)
}

// Maximum number of VPNv6 prefixes to accept from this peer.
func (o BgpNeighborGroupOutput) MaximumPrefixVpnv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.MaximumPrefixVpnv6 }).(pulumi.IntPtrOutput)
}

// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) MaximumPrefixWarningOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.MaximumPrefixWarningOnly }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) MaximumPrefixWarningOnly6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.MaximumPrefixWarningOnly6 }).(pulumi.StringPtrOutput)
}

// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) MaximumPrefixWarningOnlyEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.MaximumPrefixWarningOnlyEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) MaximumPrefixWarningOnlyVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.MaximumPrefixWarningOnlyVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable warning message when limit is exceeded for VPNv6 routes. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) MaximumPrefixWarningOnlyVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.MaximumPrefixWarningOnlyVpnv6 }).(pulumi.StringPtrOutput)
}

// Neighbor group name.
func (o BgpNeighborGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) NextHopSelf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.NextHopSelf }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) NextHopSelf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.NextHopSelf6 }).(pulumi.StringPtrOutput)
}

// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) NextHopSelfRr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.NextHopSelfRr }).(pulumi.StringPtrOutput)
}

// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) NextHopSelfRr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.NextHopSelfRr6 }).(pulumi.StringPtrOutput)
}

// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) NextHopSelfVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.NextHopSelfVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) NextHopSelfVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.NextHopSelfVpnv6 }).(pulumi.StringPtrOutput)
}

// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) OverrideCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.OverrideCapability }).(pulumi.StringPtrOutput)
}

// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) Passive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.Passive }).(pulumi.StringPtrOutput)
}

// Password used in MD5 authentication.
func (o BgpNeighborGroupOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// IPv4 Inbound filter for updates from this neighbor.
func (o BgpNeighborGroupOutput) PrefixListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.PrefixListIn }).(pulumi.StringPtrOutput)
}

// IPv6 Inbound filter for updates from this neighbor.
func (o BgpNeighborGroupOutput) PrefixListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.PrefixListIn6 }).(pulumi.StringPtrOutput)
}

// Inbound filter for VPNv4 updates from this neighbor.
func (o BgpNeighborGroupOutput) PrefixListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.PrefixListInVpnv4 }).(pulumi.StringPtrOutput)
}

// Inbound filter for VPNv6 updates from this neighbor.
func (o BgpNeighborGroupOutput) PrefixListInVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.PrefixListInVpnv6 }).(pulumi.StringPtrOutput)
}

// IPv4 Outbound filter for updates to this neighbor.
func (o BgpNeighborGroupOutput) PrefixListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.PrefixListOut }).(pulumi.StringPtrOutput)
}

// IPv6 Outbound filter for updates to this neighbor.
func (o BgpNeighborGroupOutput) PrefixListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.PrefixListOut6 }).(pulumi.StringPtrOutput)
}

// Outbound filter for VPNv4 updates to this neighbor.
func (o BgpNeighborGroupOutput) PrefixListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.PrefixListOutVpnv4 }).(pulumi.StringPtrOutput)
}

// Outbound filter for VPNv6 updates to this neighbor.
func (o BgpNeighborGroupOutput) PrefixListOutVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.PrefixListOutVpnv6 }).(pulumi.StringPtrOutput)
}

// AS number of neighbor.
func (o BgpNeighborGroupOutput) RemoteAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.RemoteAs }).(pulumi.IntPtrOutput)
}

// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RemovePrivateAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RemovePrivateAs }).(pulumi.StringPtrOutput)
}

// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RemovePrivateAs6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RemovePrivateAs6 }).(pulumi.StringPtrOutput)
}

// Enable/disable removing private AS number from L2VPN EVPN outbound updates. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RemovePrivateAsEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RemovePrivateAsEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RemovePrivateAsVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RemovePrivateAsVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable to remove private AS number from VPNv6 outbound updates. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RemovePrivateAsVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RemovePrivateAsVpnv6 }).(pulumi.StringPtrOutput)
}

// Graceful restart delay time (sec, 0 = global default).
func (o BgpNeighborGroupOutput) RestartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.RestartTime }).(pulumi.IntPtrOutput)
}

// Time to retain stale routes.
func (o BgpNeighborGroupOutput) RetainStaleTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.RetainStaleTime }).(pulumi.IntPtrOutput)
}

// IPv4 Inbound route map filter.
func (o BgpNeighborGroupOutput) RouteMapIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapIn }).(pulumi.StringPtrOutput)
}

// IPv6 Inbound route map filter.
func (o BgpNeighborGroupOutput) RouteMapIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapIn6 }).(pulumi.StringPtrOutput)
}

// L2VPN EVPN inbound route map filter.
func (o BgpNeighborGroupOutput) RouteMapInEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapInEvpn }).(pulumi.StringPtrOutput)
}

// VPNv4 inbound route map filter.
func (o BgpNeighborGroupOutput) RouteMapInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapInVpnv4 }).(pulumi.StringPtrOutput)
}

// VPNv6 inbound route map filter.
func (o BgpNeighborGroupOutput) RouteMapInVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapInVpnv6 }).(pulumi.StringPtrOutput)
}

// IPv4 Outbound route map filter.
func (o BgpNeighborGroupOutput) RouteMapOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapOut }).(pulumi.StringPtrOutput)
}

// IPv6 Outbound route map filter.
func (o BgpNeighborGroupOutput) RouteMapOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapOut6 }).(pulumi.StringPtrOutput)
}

// IPv6 outbound route map filter if the peer is preferred.
func (o BgpNeighborGroupOutput) RouteMapOut6Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapOut6Preferable }).(pulumi.StringPtrOutput)
}

// L2VPN EVPN outbound route map filter.
func (o BgpNeighborGroupOutput) RouteMapOutEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapOutEvpn }).(pulumi.StringPtrOutput)
}

// IPv4 outbound route map filter if the peer is preferred.
func (o BgpNeighborGroupOutput) RouteMapOutPreferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapOutPreferable }).(pulumi.StringPtrOutput)
}

// VPNv4 outbound route map filter.
func (o BgpNeighborGroupOutput) RouteMapOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapOutVpnv4 }).(pulumi.StringPtrOutput)
}

// VPNv4 outbound route map filter if the peer is preferred.
func (o BgpNeighborGroupOutput) RouteMapOutVpnv4Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapOutVpnv4Preferable }).(pulumi.StringPtrOutput)
}

// VPNv6 outbound route map filter.
func (o BgpNeighborGroupOutput) RouteMapOutVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapOutVpnv6 }).(pulumi.StringPtrOutput)
}

// VPNv6 outbound route map filter if this neighbor is preferred.
func (o BgpNeighborGroupOutput) RouteMapOutVpnv6Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteMapOutVpnv6Preferable }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RouteReflectorClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteReflectorClient }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RouteReflectorClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteReflectorClient6 }).(pulumi.StringPtrOutput)
}

// Enable/disable L2VPN EVPN AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RouteReflectorClientEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteReflectorClientEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RouteReflectorClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteReflectorClientVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv6 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RouteReflectorClientVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteReflectorClientVpnv6 }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RouteServerClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteServerClient }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RouteServerClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteServerClient6 }).(pulumi.StringPtrOutput)
}

// Enable/disable L2VPN EVPN AS route server client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RouteServerClientEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteServerClientEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RouteServerClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteServerClientVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv6 AS route server client for this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) RouteServerClientVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.RouteServerClientVpnv6 }).(pulumi.StringPtrOutput)
}

// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
func (o BgpNeighborGroupOutput) SendCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.SendCommunity }).(pulumi.StringPtrOutput)
}

// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
func (o BgpNeighborGroupOutput) SendCommunity6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.SendCommunity6 }).(pulumi.StringPtrOutput)
}

// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family. Valid values: `standard`, `extended`, `both`, `disable`.
func (o BgpNeighborGroupOutput) SendCommunityEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.SendCommunityEvpn }).(pulumi.StringPtrOutput)
}

// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
func (o BgpNeighborGroupOutput) SendCommunityVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.SendCommunityVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable sending community attribute to this neighbor for VPNv6 address family. Valid values: `standard`, `extended`, `both`, `disable`.
func (o BgpNeighborGroupOutput) SendCommunityVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.SendCommunityVpnv6 }).(pulumi.StringPtrOutput)
}

// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) Shutdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.Shutdown }).(pulumi.StringPtrOutput)
}

// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) SoftReconfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.SoftReconfiguration }).(pulumi.StringPtrOutput)
}

// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) SoftReconfiguration6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.SoftReconfiguration6 }).(pulumi.StringPtrOutput)
}

// Enable/disable L2VPN EVPN inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) SoftReconfigurationEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.SoftReconfigurationEvpn }).(pulumi.StringPtrOutput)
}

// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) SoftReconfigurationVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.SoftReconfigurationVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) SoftReconfigurationVpnv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.SoftReconfigurationVpnv6 }).(pulumi.StringPtrOutput)
}

// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) StaleRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.StaleRoute }).(pulumi.StringPtrOutput)
}

// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
func (o BgpNeighborGroupOutput) StrictCapabilityMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.StrictCapabilityMatch }).(pulumi.StringPtrOutput)
}

// IPv4 Route map to selectively unsuppress suppressed routes.
func (o BgpNeighborGroupOutput) UnsuppressMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.UnsuppressMap }).(pulumi.StringPtrOutput)
}

// IPv6 Route map to selectively unsuppress suppressed routes.
func (o BgpNeighborGroupOutput) UnsuppressMap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.UnsuppressMap6 }).(pulumi.StringPtrOutput)
}

// Interface to use as source IP/IPv6 address of TCP connections.
func (o BgpNeighborGroupOutput) UpdateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *string { return v.UpdateSource }).(pulumi.StringPtrOutput)
}

// Neighbor weight.
func (o BgpNeighborGroupOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborGroup) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type BgpNeighborGroupArrayOutput struct{ *pulumi.OutputState }

func (BgpNeighborGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighborGroup)(nil)).Elem()
}

func (o BgpNeighborGroupArrayOutput) ToBgpNeighborGroupArrayOutput() BgpNeighborGroupArrayOutput {
	return o
}

func (o BgpNeighborGroupArrayOutput) ToBgpNeighborGroupArrayOutputWithContext(ctx context.Context) BgpNeighborGroupArrayOutput {
	return o
}

func (o BgpNeighborGroupArrayOutput) Index(i pulumi.IntInput) BgpNeighborGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpNeighborGroup {
		return vs[0].([]BgpNeighborGroup)[vs[1].(int)]
	}).(BgpNeighborGroupOutput)
}

type BgpNeighborRange6 struct {
	// ID.
	Id *int `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum *int `pulumi:"maxNeighborNum"`
	// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
	NeighborGroup *string `pulumi:"neighborGroup"`
	// Aggregate IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
}

// BgpNeighborRange6Input is an input type that accepts BgpNeighborRange6Args and BgpNeighborRange6Output values.
// You can construct a concrete instance of `BgpNeighborRange6Input` via:
//
//	BgpNeighborRange6Args{...}
type BgpNeighborRange6Input interface {
	pulumi.Input

	ToBgpNeighborRange6Output() BgpNeighborRange6Output
	ToBgpNeighborRange6OutputWithContext(context.Context) BgpNeighborRange6Output
}

type BgpNeighborRange6Args struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum pulumi.IntPtrInput `pulumi:"maxNeighborNum"`
	// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
	NeighborGroup pulumi.StringPtrInput `pulumi:"neighborGroup"`
	// Aggregate IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (BgpNeighborRange6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighborRange6)(nil)).Elem()
}

func (i BgpNeighborRange6Args) ToBgpNeighborRange6Output() BgpNeighborRange6Output {
	return i.ToBgpNeighborRange6OutputWithContext(context.Background())
}

func (i BgpNeighborRange6Args) ToBgpNeighborRange6OutputWithContext(ctx context.Context) BgpNeighborRange6Output {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborRange6Output)
}

// BgpNeighborRange6ArrayInput is an input type that accepts BgpNeighborRange6Array and BgpNeighborRange6ArrayOutput values.
// You can construct a concrete instance of `BgpNeighborRange6ArrayInput` via:
//
//	BgpNeighborRange6Array{ BgpNeighborRange6Args{...} }
type BgpNeighborRange6ArrayInput interface {
	pulumi.Input

	ToBgpNeighborRange6ArrayOutput() BgpNeighborRange6ArrayOutput
	ToBgpNeighborRange6ArrayOutputWithContext(context.Context) BgpNeighborRange6ArrayOutput
}

type BgpNeighborRange6Array []BgpNeighborRange6Input

func (BgpNeighborRange6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighborRange6)(nil)).Elem()
}

func (i BgpNeighborRange6Array) ToBgpNeighborRange6ArrayOutput() BgpNeighborRange6ArrayOutput {
	return i.ToBgpNeighborRange6ArrayOutputWithContext(context.Background())
}

func (i BgpNeighborRange6Array) ToBgpNeighborRange6ArrayOutputWithContext(ctx context.Context) BgpNeighborRange6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborRange6ArrayOutput)
}

type BgpNeighborRange6Output struct{ *pulumi.OutputState }

func (BgpNeighborRange6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighborRange6)(nil)).Elem()
}

func (o BgpNeighborRange6Output) ToBgpNeighborRange6Output() BgpNeighborRange6Output {
	return o
}

func (o BgpNeighborRange6Output) ToBgpNeighborRange6OutputWithContext(ctx context.Context) BgpNeighborRange6Output {
	return o
}

// ID.
func (o BgpNeighborRange6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborRange6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Maximum number of neighbors.
func (o BgpNeighborRange6Output) MaxNeighborNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborRange6) *int { return v.MaxNeighborNum }).(pulumi.IntPtrOutput)
}

// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
func (o BgpNeighborRange6Output) NeighborGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborRange6) *string { return v.NeighborGroup }).(pulumi.StringPtrOutput)
}

// Aggregate IPv6 prefix.
func (o BgpNeighborRange6Output) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborRange6) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type BgpNeighborRange6ArrayOutput struct{ *pulumi.OutputState }

func (BgpNeighborRange6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighborRange6)(nil)).Elem()
}

func (o BgpNeighborRange6ArrayOutput) ToBgpNeighborRange6ArrayOutput() BgpNeighborRange6ArrayOutput {
	return o
}

func (o BgpNeighborRange6ArrayOutput) ToBgpNeighborRange6ArrayOutputWithContext(ctx context.Context) BgpNeighborRange6ArrayOutput {
	return o
}

func (o BgpNeighborRange6ArrayOutput) Index(i pulumi.IntInput) BgpNeighborRange6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpNeighborRange6 {
		return vs[0].([]BgpNeighborRange6)[vs[1].(int)]
	}).(BgpNeighborRange6Output)
}

type BgpNeighborRange struct {
	// IPv6 neighbor range ID.
	Id *int `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum *int `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup *string `pulumi:"neighborGroup"`
	// Neighbor range prefix.
	Prefix *string `pulumi:"prefix"`
}

// BgpNeighborRangeInput is an input type that accepts BgpNeighborRangeArgs and BgpNeighborRangeOutput values.
// You can construct a concrete instance of `BgpNeighborRangeInput` via:
//
//	BgpNeighborRangeArgs{...}
type BgpNeighborRangeInput interface {
	pulumi.Input

	ToBgpNeighborRangeOutput() BgpNeighborRangeOutput
	ToBgpNeighborRangeOutputWithContext(context.Context) BgpNeighborRangeOutput
}

type BgpNeighborRangeArgs struct {
	// IPv6 neighbor range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum pulumi.IntPtrInput `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup pulumi.StringPtrInput `pulumi:"neighborGroup"`
	// Neighbor range prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (BgpNeighborRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighborRange)(nil)).Elem()
}

func (i BgpNeighborRangeArgs) ToBgpNeighborRangeOutput() BgpNeighborRangeOutput {
	return i.ToBgpNeighborRangeOutputWithContext(context.Background())
}

func (i BgpNeighborRangeArgs) ToBgpNeighborRangeOutputWithContext(ctx context.Context) BgpNeighborRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborRangeOutput)
}

// BgpNeighborRangeArrayInput is an input type that accepts BgpNeighborRangeArray and BgpNeighborRangeArrayOutput values.
// You can construct a concrete instance of `BgpNeighborRangeArrayInput` via:
//
//	BgpNeighborRangeArray{ BgpNeighborRangeArgs{...} }
type BgpNeighborRangeArrayInput interface {
	pulumi.Input

	ToBgpNeighborRangeArrayOutput() BgpNeighborRangeArrayOutput
	ToBgpNeighborRangeArrayOutputWithContext(context.Context) BgpNeighborRangeArrayOutput
}

type BgpNeighborRangeArray []BgpNeighborRangeInput

func (BgpNeighborRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighborRange)(nil)).Elem()
}

func (i BgpNeighborRangeArray) ToBgpNeighborRangeArrayOutput() BgpNeighborRangeArrayOutput {
	return i.ToBgpNeighborRangeArrayOutputWithContext(context.Background())
}

func (i BgpNeighborRangeArray) ToBgpNeighborRangeArrayOutputWithContext(ctx context.Context) BgpNeighborRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborRangeArrayOutput)
}

type BgpNeighborRangeOutput struct{ *pulumi.OutputState }

func (BgpNeighborRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNeighborRange)(nil)).Elem()
}

func (o BgpNeighborRangeOutput) ToBgpNeighborRangeOutput() BgpNeighborRangeOutput {
	return o
}

func (o BgpNeighborRangeOutput) ToBgpNeighborRangeOutputWithContext(ctx context.Context) BgpNeighborRangeOutput {
	return o
}

// IPv6 neighbor range ID.
func (o BgpNeighborRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Maximum number of neighbors.
func (o BgpNeighborRangeOutput) MaxNeighborNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNeighborRange) *int { return v.MaxNeighborNum }).(pulumi.IntPtrOutput)
}

// Neighbor group name.
func (o BgpNeighborRangeOutput) NeighborGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborRange) *string { return v.NeighborGroup }).(pulumi.StringPtrOutput)
}

// Neighbor range prefix.
func (o BgpNeighborRangeOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNeighborRange) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type BgpNeighborRangeArrayOutput struct{ *pulumi.OutputState }

func (BgpNeighborRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNeighborRange)(nil)).Elem()
}

func (o BgpNeighborRangeArrayOutput) ToBgpNeighborRangeArrayOutput() BgpNeighborRangeArrayOutput {
	return o
}

func (o BgpNeighborRangeArrayOutput) ToBgpNeighborRangeArrayOutputWithContext(ctx context.Context) BgpNeighborRangeArrayOutput {
	return o
}

func (o BgpNeighborRangeArrayOutput) Index(i pulumi.IntInput) BgpNeighborRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpNeighborRange {
		return vs[0].([]BgpNeighborRange)[vs[1].(int)]
	}).(BgpNeighborRangeOutput)
}

type BgpNetwork6 struct {
	// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
	Backdoor *string `pulumi:"backdoor"`
	// ID.
	Id *int `pulumi:"id"`
	// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
	NetworkImportCheck *string `pulumi:"networkImportCheck"`
	// Aggregate IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
	// Route map of VRF leaking.
	RouteMap *string `pulumi:"routeMap"`
}

// BgpNetwork6Input is an input type that accepts BgpNetwork6Args and BgpNetwork6Output values.
// You can construct a concrete instance of `BgpNetwork6Input` via:
//
//	BgpNetwork6Args{...}
type BgpNetwork6Input interface {
	pulumi.Input

	ToBgpNetwork6Output() BgpNetwork6Output
	ToBgpNetwork6OutputWithContext(context.Context) BgpNetwork6Output
}

type BgpNetwork6Args struct {
	// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
	Backdoor pulumi.StringPtrInput `pulumi:"backdoor"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
	NetworkImportCheck pulumi.StringPtrInput `pulumi:"networkImportCheck"`
	// Aggregate IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
}

func (BgpNetwork6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNetwork6)(nil)).Elem()
}

func (i BgpNetwork6Args) ToBgpNetwork6Output() BgpNetwork6Output {
	return i.ToBgpNetwork6OutputWithContext(context.Background())
}

func (i BgpNetwork6Args) ToBgpNetwork6OutputWithContext(ctx context.Context) BgpNetwork6Output {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNetwork6Output)
}

// BgpNetwork6ArrayInput is an input type that accepts BgpNetwork6Array and BgpNetwork6ArrayOutput values.
// You can construct a concrete instance of `BgpNetwork6ArrayInput` via:
//
//	BgpNetwork6Array{ BgpNetwork6Args{...} }
type BgpNetwork6ArrayInput interface {
	pulumi.Input

	ToBgpNetwork6ArrayOutput() BgpNetwork6ArrayOutput
	ToBgpNetwork6ArrayOutputWithContext(context.Context) BgpNetwork6ArrayOutput
}

type BgpNetwork6Array []BgpNetwork6Input

func (BgpNetwork6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNetwork6)(nil)).Elem()
}

func (i BgpNetwork6Array) ToBgpNetwork6ArrayOutput() BgpNetwork6ArrayOutput {
	return i.ToBgpNetwork6ArrayOutputWithContext(context.Background())
}

func (i BgpNetwork6Array) ToBgpNetwork6ArrayOutputWithContext(ctx context.Context) BgpNetwork6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNetwork6ArrayOutput)
}

type BgpNetwork6Output struct{ *pulumi.OutputState }

func (BgpNetwork6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNetwork6)(nil)).Elem()
}

func (o BgpNetwork6Output) ToBgpNetwork6Output() BgpNetwork6Output {
	return o
}

func (o BgpNetwork6Output) ToBgpNetwork6OutputWithContext(ctx context.Context) BgpNetwork6Output {
	return o
}

// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
func (o BgpNetwork6Output) Backdoor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNetwork6) *string { return v.Backdoor }).(pulumi.StringPtrOutput)
}

// ID.
func (o BgpNetwork6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNetwork6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
func (o BgpNetwork6Output) NetworkImportCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNetwork6) *string { return v.NetworkImportCheck }).(pulumi.StringPtrOutput)
}

// Aggregate IPv6 prefix.
func (o BgpNetwork6Output) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNetwork6) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

// Route map of VRF leaking.
func (o BgpNetwork6Output) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNetwork6) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

type BgpNetwork6ArrayOutput struct{ *pulumi.OutputState }

func (BgpNetwork6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNetwork6)(nil)).Elem()
}

func (o BgpNetwork6ArrayOutput) ToBgpNetwork6ArrayOutput() BgpNetwork6ArrayOutput {
	return o
}

func (o BgpNetwork6ArrayOutput) ToBgpNetwork6ArrayOutputWithContext(ctx context.Context) BgpNetwork6ArrayOutput {
	return o
}

func (o BgpNetwork6ArrayOutput) Index(i pulumi.IntInput) BgpNetwork6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpNetwork6 {
		return vs[0].([]BgpNetwork6)[vs[1].(int)]
	}).(BgpNetwork6Output)
}

type BgpNetwork struct {
	// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
	Backdoor *string `pulumi:"backdoor"`
	// ID.
	Id *int `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP. Valid values: `global`, `enable`, `disable`.
	NetworkImportCheck *string `pulumi:"networkImportCheck"`
	// Network prefix.
	Prefix *string `pulumi:"prefix"`
	// Route map to modify generated route.
	RouteMap *string `pulumi:"routeMap"`
}

// BgpNetworkInput is an input type that accepts BgpNetworkArgs and BgpNetworkOutput values.
// You can construct a concrete instance of `BgpNetworkInput` via:
//
//	BgpNetworkArgs{...}
type BgpNetworkInput interface {
	pulumi.Input

	ToBgpNetworkOutput() BgpNetworkOutput
	ToBgpNetworkOutputWithContext(context.Context) BgpNetworkOutput
}

type BgpNetworkArgs struct {
	// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
	Backdoor pulumi.StringPtrInput `pulumi:"backdoor"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP. Valid values: `global`, `enable`, `disable`.
	NetworkImportCheck pulumi.StringPtrInput `pulumi:"networkImportCheck"`
	// Network prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Route map to modify generated route.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
}

func (BgpNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNetwork)(nil)).Elem()
}

func (i BgpNetworkArgs) ToBgpNetworkOutput() BgpNetworkOutput {
	return i.ToBgpNetworkOutputWithContext(context.Background())
}

func (i BgpNetworkArgs) ToBgpNetworkOutputWithContext(ctx context.Context) BgpNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNetworkOutput)
}

// BgpNetworkArrayInput is an input type that accepts BgpNetworkArray and BgpNetworkArrayOutput values.
// You can construct a concrete instance of `BgpNetworkArrayInput` via:
//
//	BgpNetworkArray{ BgpNetworkArgs{...} }
type BgpNetworkArrayInput interface {
	pulumi.Input

	ToBgpNetworkArrayOutput() BgpNetworkArrayOutput
	ToBgpNetworkArrayOutputWithContext(context.Context) BgpNetworkArrayOutput
}

type BgpNetworkArray []BgpNetworkInput

func (BgpNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNetwork)(nil)).Elem()
}

func (i BgpNetworkArray) ToBgpNetworkArrayOutput() BgpNetworkArrayOutput {
	return i.ToBgpNetworkArrayOutputWithContext(context.Background())
}

func (i BgpNetworkArray) ToBgpNetworkArrayOutputWithContext(ctx context.Context) BgpNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNetworkArrayOutput)
}

type BgpNetworkOutput struct{ *pulumi.OutputState }

func (BgpNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpNetwork)(nil)).Elem()
}

func (o BgpNetworkOutput) ToBgpNetworkOutput() BgpNetworkOutput {
	return o
}

func (o BgpNetworkOutput) ToBgpNetworkOutputWithContext(ctx context.Context) BgpNetworkOutput {
	return o
}

// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
func (o BgpNetworkOutput) Backdoor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNetwork) *string { return v.Backdoor }).(pulumi.StringPtrOutput)
}

// ID.
func (o BgpNetworkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpNetwork) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Configure insurance of BGP network route existence in IGP. Valid values: `global`, `enable`, `disable`.
func (o BgpNetworkOutput) NetworkImportCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNetwork) *string { return v.NetworkImportCheck }).(pulumi.StringPtrOutput)
}

// Network prefix.
func (o BgpNetworkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNetwork) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Route map to modify generated route.
func (o BgpNetworkOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpNetwork) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

type BgpNetworkArrayOutput struct{ *pulumi.OutputState }

func (BgpNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpNetwork)(nil)).Elem()
}

func (o BgpNetworkArrayOutput) ToBgpNetworkArrayOutput() BgpNetworkArrayOutput {
	return o
}

func (o BgpNetworkArrayOutput) ToBgpNetworkArrayOutputWithContext(ctx context.Context) BgpNetworkArrayOutput {
	return o
}

func (o BgpNetworkArrayOutput) Index(i pulumi.IntInput) BgpNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpNetwork {
		return vs[0].([]BgpNetwork)[vs[1].(int)]
	}).(BgpNetworkOutput)
}

type BgpRedistribute6 struct {
	// Neighbor group name.
	Name *string `pulumi:"name"`
	// Route map of VRF leaking.
	RouteMap *string `pulumi:"routeMap"`
	// Status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// BgpRedistribute6Input is an input type that accepts BgpRedistribute6Args and BgpRedistribute6Output values.
// You can construct a concrete instance of `BgpRedistribute6Input` via:
//
//	BgpRedistribute6Args{...}
type BgpRedistribute6Input interface {
	pulumi.Input

	ToBgpRedistribute6Output() BgpRedistribute6Output
	ToBgpRedistribute6OutputWithContext(context.Context) BgpRedistribute6Output
}

type BgpRedistribute6Args struct {
	// Neighbor group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	// Status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (BgpRedistribute6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpRedistribute6)(nil)).Elem()
}

func (i BgpRedistribute6Args) ToBgpRedistribute6Output() BgpRedistribute6Output {
	return i.ToBgpRedistribute6OutputWithContext(context.Background())
}

func (i BgpRedistribute6Args) ToBgpRedistribute6OutputWithContext(ctx context.Context) BgpRedistribute6Output {
	return pulumi.ToOutputWithContext(ctx, i).(BgpRedistribute6Output)
}

// BgpRedistribute6ArrayInput is an input type that accepts BgpRedistribute6Array and BgpRedistribute6ArrayOutput values.
// You can construct a concrete instance of `BgpRedistribute6ArrayInput` via:
//
//	BgpRedistribute6Array{ BgpRedistribute6Args{...} }
type BgpRedistribute6ArrayInput interface {
	pulumi.Input

	ToBgpRedistribute6ArrayOutput() BgpRedistribute6ArrayOutput
	ToBgpRedistribute6ArrayOutputWithContext(context.Context) BgpRedistribute6ArrayOutput
}

type BgpRedistribute6Array []BgpRedistribute6Input

func (BgpRedistribute6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpRedistribute6)(nil)).Elem()
}

func (i BgpRedistribute6Array) ToBgpRedistribute6ArrayOutput() BgpRedistribute6ArrayOutput {
	return i.ToBgpRedistribute6ArrayOutputWithContext(context.Background())
}

func (i BgpRedistribute6Array) ToBgpRedistribute6ArrayOutputWithContext(ctx context.Context) BgpRedistribute6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpRedistribute6ArrayOutput)
}

type BgpRedistribute6Output struct{ *pulumi.OutputState }

func (BgpRedistribute6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpRedistribute6)(nil)).Elem()
}

func (o BgpRedistribute6Output) ToBgpRedistribute6Output() BgpRedistribute6Output {
	return o
}

func (o BgpRedistribute6Output) ToBgpRedistribute6OutputWithContext(ctx context.Context) BgpRedistribute6Output {
	return o
}

// Neighbor group name.
func (o BgpRedistribute6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpRedistribute6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map of VRF leaking.
func (o BgpRedistribute6Output) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpRedistribute6) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// Status Valid values: `enable`, `disable`.
func (o BgpRedistribute6Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpRedistribute6) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type BgpRedistribute6ArrayOutput struct{ *pulumi.OutputState }

func (BgpRedistribute6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpRedistribute6)(nil)).Elem()
}

func (o BgpRedistribute6ArrayOutput) ToBgpRedistribute6ArrayOutput() BgpRedistribute6ArrayOutput {
	return o
}

func (o BgpRedistribute6ArrayOutput) ToBgpRedistribute6ArrayOutputWithContext(ctx context.Context) BgpRedistribute6ArrayOutput {
	return o
}

func (o BgpRedistribute6ArrayOutput) Index(i pulumi.IntInput) BgpRedistribute6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpRedistribute6 {
		return vs[0].([]BgpRedistribute6)[vs[1].(int)]
	}).(BgpRedistribute6Output)
}

type BgpRedistribute struct {
	// Distribute list entry name.
	Name *string `pulumi:"name"`
	// Route map name.
	RouteMap *string `pulumi:"routeMap"`
	// Status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// BgpRedistributeInput is an input type that accepts BgpRedistributeArgs and BgpRedistributeOutput values.
// You can construct a concrete instance of `BgpRedistributeInput` via:
//
//	BgpRedistributeArgs{...}
type BgpRedistributeInput interface {
	pulumi.Input

	ToBgpRedistributeOutput() BgpRedistributeOutput
	ToBgpRedistributeOutputWithContext(context.Context) BgpRedistributeOutput
}

type BgpRedistributeArgs struct {
	// Distribute list entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map name.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	// Status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (BgpRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpRedistribute)(nil)).Elem()
}

func (i BgpRedistributeArgs) ToBgpRedistributeOutput() BgpRedistributeOutput {
	return i.ToBgpRedistributeOutputWithContext(context.Background())
}

func (i BgpRedistributeArgs) ToBgpRedistributeOutputWithContext(ctx context.Context) BgpRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpRedistributeOutput)
}

// BgpRedistributeArrayInput is an input type that accepts BgpRedistributeArray and BgpRedistributeArrayOutput values.
// You can construct a concrete instance of `BgpRedistributeArrayInput` via:
//
//	BgpRedistributeArray{ BgpRedistributeArgs{...} }
type BgpRedistributeArrayInput interface {
	pulumi.Input

	ToBgpRedistributeArrayOutput() BgpRedistributeArrayOutput
	ToBgpRedistributeArrayOutputWithContext(context.Context) BgpRedistributeArrayOutput
}

type BgpRedistributeArray []BgpRedistributeInput

func (BgpRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpRedistribute)(nil)).Elem()
}

func (i BgpRedistributeArray) ToBgpRedistributeArrayOutput() BgpRedistributeArrayOutput {
	return i.ToBgpRedistributeArrayOutputWithContext(context.Background())
}

func (i BgpRedistributeArray) ToBgpRedistributeArrayOutputWithContext(ctx context.Context) BgpRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpRedistributeArrayOutput)
}

type BgpRedistributeOutput struct{ *pulumi.OutputState }

func (BgpRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpRedistribute)(nil)).Elem()
}

func (o BgpRedistributeOutput) ToBgpRedistributeOutput() BgpRedistributeOutput {
	return o
}

func (o BgpRedistributeOutput) ToBgpRedistributeOutputWithContext(ctx context.Context) BgpRedistributeOutput {
	return o
}

// Distribute list entry name.
func (o BgpRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o BgpRedistributeOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpRedistribute) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// Status Valid values: `enable`, `disable`.
func (o BgpRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type BgpRedistributeArrayOutput struct{ *pulumi.OutputState }

func (BgpRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpRedistribute)(nil)).Elem()
}

func (o BgpRedistributeArrayOutput) ToBgpRedistributeArrayOutput() BgpRedistributeArrayOutput {
	return o
}

func (o BgpRedistributeArrayOutput) ToBgpRedistributeArrayOutputWithContext(ctx context.Context) BgpRedistributeArrayOutput {
	return o
}

func (o BgpRedistributeArrayOutput) Index(i pulumi.IntInput) BgpRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpRedistribute {
		return vs[0].([]BgpRedistribute)[vs[1].(int)]
	}).(BgpRedistributeOutput)
}

type BgpVrf6 struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts []BgpVrf6ExportRt `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap *string `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts []BgpVrf6ImportRt `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets []BgpVrf6LeakTarget `pulumi:"leakTargets"`
	// Route Distinguisher: AA:NN|A.B.C.D:NN.
	Rd *string `pulumi:"rd"`
	// VRF role. Valid values: `standalone`, `ce`, `pe`.
	Role *string `pulumi:"role"`
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrf *string `pulumi:"vrf"`
}

// BgpVrf6Input is an input type that accepts BgpVrf6Args and BgpVrf6Output values.
// You can construct a concrete instance of `BgpVrf6Input` via:
//
//	BgpVrf6Args{...}
type BgpVrf6Input interface {
	pulumi.Input

	ToBgpVrf6Output() BgpVrf6Output
	ToBgpVrf6OutputWithContext(context.Context) BgpVrf6Output
}

type BgpVrf6Args struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts BgpVrf6ExportRtArrayInput `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap pulumi.StringPtrInput `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts BgpVrf6ImportRtArrayInput `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets BgpVrf6LeakTargetArrayInput `pulumi:"leakTargets"`
	// Route Distinguisher: AA:NN|A.B.C.D:NN.
	Rd pulumi.StringPtrInput `pulumi:"rd"`
	// VRF role. Valid values: `standalone`, `ce`, `pe`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (BgpVrf6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrf6)(nil)).Elem()
}

func (i BgpVrf6Args) ToBgpVrf6Output() BgpVrf6Output {
	return i.ToBgpVrf6OutputWithContext(context.Background())
}

func (i BgpVrf6Args) ToBgpVrf6OutputWithContext(ctx context.Context) BgpVrf6Output {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrf6Output)
}

// BgpVrf6ArrayInput is an input type that accepts BgpVrf6Array and BgpVrf6ArrayOutput values.
// You can construct a concrete instance of `BgpVrf6ArrayInput` via:
//
//	BgpVrf6Array{ BgpVrf6Args{...} }
type BgpVrf6ArrayInput interface {
	pulumi.Input

	ToBgpVrf6ArrayOutput() BgpVrf6ArrayOutput
	ToBgpVrf6ArrayOutputWithContext(context.Context) BgpVrf6ArrayOutput
}

type BgpVrf6Array []BgpVrf6Input

func (BgpVrf6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrf6)(nil)).Elem()
}

func (i BgpVrf6Array) ToBgpVrf6ArrayOutput() BgpVrf6ArrayOutput {
	return i.ToBgpVrf6ArrayOutputWithContext(context.Background())
}

func (i BgpVrf6Array) ToBgpVrf6ArrayOutputWithContext(ctx context.Context) BgpVrf6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrf6ArrayOutput)
}

type BgpVrf6Output struct{ *pulumi.OutputState }

func (BgpVrf6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrf6)(nil)).Elem()
}

func (o BgpVrf6Output) ToBgpVrf6Output() BgpVrf6Output {
	return o
}

func (o BgpVrf6Output) ToBgpVrf6OutputWithContext(ctx context.Context) BgpVrf6Output {
	return o
}

// List of export route target. The structure of `exportRt` block is documented below.
func (o BgpVrf6Output) ExportRts() BgpVrf6ExportRtArrayOutput {
	return o.ApplyT(func(v BgpVrf6) []BgpVrf6ExportRt { return v.ExportRts }).(BgpVrf6ExportRtArrayOutput)
}

// Import route map.
func (o BgpVrf6Output) ImportRouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf6) *string { return v.ImportRouteMap }).(pulumi.StringPtrOutput)
}

// List of import route target. The structure of `importRt` block is documented below.
func (o BgpVrf6Output) ImportRts() BgpVrf6ImportRtArrayOutput {
	return o.ApplyT(func(v BgpVrf6) []BgpVrf6ImportRt { return v.ImportRts }).(BgpVrf6ImportRtArrayOutput)
}

// Target VRF table. The structure of `leakTarget` block is documented below.
func (o BgpVrf6Output) LeakTargets() BgpVrf6LeakTargetArrayOutput {
	return o.ApplyT(func(v BgpVrf6) []BgpVrf6LeakTarget { return v.LeakTargets }).(BgpVrf6LeakTargetArrayOutput)
}

// Route Distinguisher: AA:NN|A.B.C.D:NN.
func (o BgpVrf6Output) Rd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf6) *string { return v.Rd }).(pulumi.StringPtrOutput)
}

// VRF role. Valid values: `standalone`, `ce`, `pe`.
func (o BgpVrf6Output) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf6) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// BGP VRF leaking table. The structure of `vrf` block is documented below.
func (o BgpVrf6Output) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf6) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type BgpVrf6ArrayOutput struct{ *pulumi.OutputState }

func (BgpVrf6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrf6)(nil)).Elem()
}

func (o BgpVrf6ArrayOutput) ToBgpVrf6ArrayOutput() BgpVrf6ArrayOutput {
	return o
}

func (o BgpVrf6ArrayOutput) ToBgpVrf6ArrayOutputWithContext(ctx context.Context) BgpVrf6ArrayOutput {
	return o
}

func (o BgpVrf6ArrayOutput) Index(i pulumi.IntInput) BgpVrf6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpVrf6 {
		return vs[0].([]BgpVrf6)[vs[1].(int)]
	}).(BgpVrf6Output)
}

type BgpVrf6ExportRt struct {
	// Attribute: AA:NN|A.B.C.D:NN.
	RouteTarget *string `pulumi:"routeTarget"`
}

// BgpVrf6ExportRtInput is an input type that accepts BgpVrf6ExportRtArgs and BgpVrf6ExportRtOutput values.
// You can construct a concrete instance of `BgpVrf6ExportRtInput` via:
//
//	BgpVrf6ExportRtArgs{...}
type BgpVrf6ExportRtInput interface {
	pulumi.Input

	ToBgpVrf6ExportRtOutput() BgpVrf6ExportRtOutput
	ToBgpVrf6ExportRtOutputWithContext(context.Context) BgpVrf6ExportRtOutput
}

type BgpVrf6ExportRtArgs struct {
	// Attribute: AA:NN|A.B.C.D:NN.
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (BgpVrf6ExportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrf6ExportRt)(nil)).Elem()
}

func (i BgpVrf6ExportRtArgs) ToBgpVrf6ExportRtOutput() BgpVrf6ExportRtOutput {
	return i.ToBgpVrf6ExportRtOutputWithContext(context.Background())
}

func (i BgpVrf6ExportRtArgs) ToBgpVrf6ExportRtOutputWithContext(ctx context.Context) BgpVrf6ExportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrf6ExportRtOutput)
}

// BgpVrf6ExportRtArrayInput is an input type that accepts BgpVrf6ExportRtArray and BgpVrf6ExportRtArrayOutput values.
// You can construct a concrete instance of `BgpVrf6ExportRtArrayInput` via:
//
//	BgpVrf6ExportRtArray{ BgpVrf6ExportRtArgs{...} }
type BgpVrf6ExportRtArrayInput interface {
	pulumi.Input

	ToBgpVrf6ExportRtArrayOutput() BgpVrf6ExportRtArrayOutput
	ToBgpVrf6ExportRtArrayOutputWithContext(context.Context) BgpVrf6ExportRtArrayOutput
}

type BgpVrf6ExportRtArray []BgpVrf6ExportRtInput

func (BgpVrf6ExportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrf6ExportRt)(nil)).Elem()
}

func (i BgpVrf6ExportRtArray) ToBgpVrf6ExportRtArrayOutput() BgpVrf6ExportRtArrayOutput {
	return i.ToBgpVrf6ExportRtArrayOutputWithContext(context.Background())
}

func (i BgpVrf6ExportRtArray) ToBgpVrf6ExportRtArrayOutputWithContext(ctx context.Context) BgpVrf6ExportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrf6ExportRtArrayOutput)
}

type BgpVrf6ExportRtOutput struct{ *pulumi.OutputState }

func (BgpVrf6ExportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrf6ExportRt)(nil)).Elem()
}

func (o BgpVrf6ExportRtOutput) ToBgpVrf6ExportRtOutput() BgpVrf6ExportRtOutput {
	return o
}

func (o BgpVrf6ExportRtOutput) ToBgpVrf6ExportRtOutputWithContext(ctx context.Context) BgpVrf6ExportRtOutput {
	return o
}

// Attribute: AA:NN|A.B.C.D:NN.
func (o BgpVrf6ExportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf6ExportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type BgpVrf6ExportRtArrayOutput struct{ *pulumi.OutputState }

func (BgpVrf6ExportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrf6ExportRt)(nil)).Elem()
}

func (o BgpVrf6ExportRtArrayOutput) ToBgpVrf6ExportRtArrayOutput() BgpVrf6ExportRtArrayOutput {
	return o
}

func (o BgpVrf6ExportRtArrayOutput) ToBgpVrf6ExportRtArrayOutputWithContext(ctx context.Context) BgpVrf6ExportRtArrayOutput {
	return o
}

func (o BgpVrf6ExportRtArrayOutput) Index(i pulumi.IntInput) BgpVrf6ExportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpVrf6ExportRt {
		return vs[0].([]BgpVrf6ExportRt)[vs[1].(int)]
	}).(BgpVrf6ExportRtOutput)
}

type BgpVrf6ImportRt struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget *string `pulumi:"routeTarget"`
}

// BgpVrf6ImportRtInput is an input type that accepts BgpVrf6ImportRtArgs and BgpVrf6ImportRtOutput values.
// You can construct a concrete instance of `BgpVrf6ImportRtInput` via:
//
//	BgpVrf6ImportRtArgs{...}
type BgpVrf6ImportRtInput interface {
	pulumi.Input

	ToBgpVrf6ImportRtOutput() BgpVrf6ImportRtOutput
	ToBgpVrf6ImportRtOutputWithContext(context.Context) BgpVrf6ImportRtOutput
}

type BgpVrf6ImportRtArgs struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (BgpVrf6ImportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrf6ImportRt)(nil)).Elem()
}

func (i BgpVrf6ImportRtArgs) ToBgpVrf6ImportRtOutput() BgpVrf6ImportRtOutput {
	return i.ToBgpVrf6ImportRtOutputWithContext(context.Background())
}

func (i BgpVrf6ImportRtArgs) ToBgpVrf6ImportRtOutputWithContext(ctx context.Context) BgpVrf6ImportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrf6ImportRtOutput)
}

// BgpVrf6ImportRtArrayInput is an input type that accepts BgpVrf6ImportRtArray and BgpVrf6ImportRtArrayOutput values.
// You can construct a concrete instance of `BgpVrf6ImportRtArrayInput` via:
//
//	BgpVrf6ImportRtArray{ BgpVrf6ImportRtArgs{...} }
type BgpVrf6ImportRtArrayInput interface {
	pulumi.Input

	ToBgpVrf6ImportRtArrayOutput() BgpVrf6ImportRtArrayOutput
	ToBgpVrf6ImportRtArrayOutputWithContext(context.Context) BgpVrf6ImportRtArrayOutput
}

type BgpVrf6ImportRtArray []BgpVrf6ImportRtInput

func (BgpVrf6ImportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrf6ImportRt)(nil)).Elem()
}

func (i BgpVrf6ImportRtArray) ToBgpVrf6ImportRtArrayOutput() BgpVrf6ImportRtArrayOutput {
	return i.ToBgpVrf6ImportRtArrayOutputWithContext(context.Background())
}

func (i BgpVrf6ImportRtArray) ToBgpVrf6ImportRtArrayOutputWithContext(ctx context.Context) BgpVrf6ImportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrf6ImportRtArrayOutput)
}

type BgpVrf6ImportRtOutput struct{ *pulumi.OutputState }

func (BgpVrf6ImportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrf6ImportRt)(nil)).Elem()
}

func (o BgpVrf6ImportRtOutput) ToBgpVrf6ImportRtOutput() BgpVrf6ImportRtOutput {
	return o
}

func (o BgpVrf6ImportRtOutput) ToBgpVrf6ImportRtOutputWithContext(ctx context.Context) BgpVrf6ImportRtOutput {
	return o
}

// Attribute: AA:NN|A.B.C.D:NN
func (o BgpVrf6ImportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf6ImportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type BgpVrf6ImportRtArrayOutput struct{ *pulumi.OutputState }

func (BgpVrf6ImportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrf6ImportRt)(nil)).Elem()
}

func (o BgpVrf6ImportRtArrayOutput) ToBgpVrf6ImportRtArrayOutput() BgpVrf6ImportRtArrayOutput {
	return o
}

func (o BgpVrf6ImportRtArrayOutput) ToBgpVrf6ImportRtArrayOutputWithContext(ctx context.Context) BgpVrf6ImportRtArrayOutput {
	return o
}

func (o BgpVrf6ImportRtArrayOutput) Index(i pulumi.IntInput) BgpVrf6ImportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpVrf6ImportRt {
		return vs[0].([]BgpVrf6ImportRt)[vs[1].(int)]
	}).(BgpVrf6ImportRtOutput)
}

type BgpVrf6LeakTarget struct {
	// Interface which is used to leak routes to target VRF.
	Interface *string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap *string `pulumi:"routeMap"`
	// Target VRF ID. On FortiOS versions 7.2.0-7.2.3: 0 - 63. On FortiOS versions >= 7.2.4: 0 - 251.
	Vrf *string `pulumi:"vrf"`
}

// BgpVrf6LeakTargetInput is an input type that accepts BgpVrf6LeakTargetArgs and BgpVrf6LeakTargetOutput values.
// You can construct a concrete instance of `BgpVrf6LeakTargetInput` via:
//
//	BgpVrf6LeakTargetArgs{...}
type BgpVrf6LeakTargetInput interface {
	pulumi.Input

	ToBgpVrf6LeakTargetOutput() BgpVrf6LeakTargetOutput
	ToBgpVrf6LeakTargetOutputWithContext(context.Context) BgpVrf6LeakTargetOutput
}

type BgpVrf6LeakTargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	// Target VRF ID. On FortiOS versions 7.2.0-7.2.3: 0 - 63. On FortiOS versions >= 7.2.4: 0 - 251.
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (BgpVrf6LeakTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrf6LeakTarget)(nil)).Elem()
}

func (i BgpVrf6LeakTargetArgs) ToBgpVrf6LeakTargetOutput() BgpVrf6LeakTargetOutput {
	return i.ToBgpVrf6LeakTargetOutputWithContext(context.Background())
}

func (i BgpVrf6LeakTargetArgs) ToBgpVrf6LeakTargetOutputWithContext(ctx context.Context) BgpVrf6LeakTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrf6LeakTargetOutput)
}

// BgpVrf6LeakTargetArrayInput is an input type that accepts BgpVrf6LeakTargetArray and BgpVrf6LeakTargetArrayOutput values.
// You can construct a concrete instance of `BgpVrf6LeakTargetArrayInput` via:
//
//	BgpVrf6LeakTargetArray{ BgpVrf6LeakTargetArgs{...} }
type BgpVrf6LeakTargetArrayInput interface {
	pulumi.Input

	ToBgpVrf6LeakTargetArrayOutput() BgpVrf6LeakTargetArrayOutput
	ToBgpVrf6LeakTargetArrayOutputWithContext(context.Context) BgpVrf6LeakTargetArrayOutput
}

type BgpVrf6LeakTargetArray []BgpVrf6LeakTargetInput

func (BgpVrf6LeakTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrf6LeakTarget)(nil)).Elem()
}

func (i BgpVrf6LeakTargetArray) ToBgpVrf6LeakTargetArrayOutput() BgpVrf6LeakTargetArrayOutput {
	return i.ToBgpVrf6LeakTargetArrayOutputWithContext(context.Background())
}

func (i BgpVrf6LeakTargetArray) ToBgpVrf6LeakTargetArrayOutputWithContext(ctx context.Context) BgpVrf6LeakTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrf6LeakTargetArrayOutput)
}

type BgpVrf6LeakTargetOutput struct{ *pulumi.OutputState }

func (BgpVrf6LeakTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrf6LeakTarget)(nil)).Elem()
}

func (o BgpVrf6LeakTargetOutput) ToBgpVrf6LeakTargetOutput() BgpVrf6LeakTargetOutput {
	return o
}

func (o BgpVrf6LeakTargetOutput) ToBgpVrf6LeakTargetOutputWithContext(ctx context.Context) BgpVrf6LeakTargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o BgpVrf6LeakTargetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf6LeakTarget) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Route map of VRF leaking.
func (o BgpVrf6LeakTargetOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf6LeakTarget) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// Target VRF ID. On FortiOS versions 7.2.0-7.2.3: 0 - 63. On FortiOS versions >= 7.2.4: 0 - 251.
func (o BgpVrf6LeakTargetOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf6LeakTarget) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type BgpVrf6LeakTargetArrayOutput struct{ *pulumi.OutputState }

func (BgpVrf6LeakTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrf6LeakTarget)(nil)).Elem()
}

func (o BgpVrf6LeakTargetArrayOutput) ToBgpVrf6LeakTargetArrayOutput() BgpVrf6LeakTargetArrayOutput {
	return o
}

func (o BgpVrf6LeakTargetArrayOutput) ToBgpVrf6LeakTargetArrayOutputWithContext(ctx context.Context) BgpVrf6LeakTargetArrayOutput {
	return o
}

func (o BgpVrf6LeakTargetArrayOutput) Index(i pulumi.IntInput) BgpVrf6LeakTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpVrf6LeakTarget {
		return vs[0].([]BgpVrf6LeakTarget)[vs[1].(int)]
	}).(BgpVrf6LeakTargetOutput)
}

type BgpVrf struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts []BgpVrfExportRt `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap *string `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts []BgpVrfImportRt `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets []BgpVrfLeakTarget `pulumi:"leakTargets"`
	// Route Distinguisher: AA|AA:NN.
	Rd *string `pulumi:"rd"`
	// VRF role. Valid values: `standalone`, `ce`, `pe`.
	Role *string `pulumi:"role"`
	// Origin VRF ID. On FortiOS versions 7.2.0-7.2.3: 0 - 63. On FortiOS versions >= 7.2.4: 0 - 251.
	Vrf *string `pulumi:"vrf"`
}

// BgpVrfInput is an input type that accepts BgpVrfArgs and BgpVrfOutput values.
// You can construct a concrete instance of `BgpVrfInput` via:
//
//	BgpVrfArgs{...}
type BgpVrfInput interface {
	pulumi.Input

	ToBgpVrfOutput() BgpVrfOutput
	ToBgpVrfOutputWithContext(context.Context) BgpVrfOutput
}

type BgpVrfArgs struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts BgpVrfExportRtArrayInput `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap pulumi.StringPtrInput `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts BgpVrfImportRtArrayInput `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets BgpVrfLeakTargetArrayInput `pulumi:"leakTargets"`
	// Route Distinguisher: AA|AA:NN.
	Rd pulumi.StringPtrInput `pulumi:"rd"`
	// VRF role. Valid values: `standalone`, `ce`, `pe`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Origin VRF ID. On FortiOS versions 7.2.0-7.2.3: 0 - 63. On FortiOS versions >= 7.2.4: 0 - 251.
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (BgpVrfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrf)(nil)).Elem()
}

func (i BgpVrfArgs) ToBgpVrfOutput() BgpVrfOutput {
	return i.ToBgpVrfOutputWithContext(context.Background())
}

func (i BgpVrfArgs) ToBgpVrfOutputWithContext(ctx context.Context) BgpVrfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfOutput)
}

// BgpVrfArrayInput is an input type that accepts BgpVrfArray and BgpVrfArrayOutput values.
// You can construct a concrete instance of `BgpVrfArrayInput` via:
//
//	BgpVrfArray{ BgpVrfArgs{...} }
type BgpVrfArrayInput interface {
	pulumi.Input

	ToBgpVrfArrayOutput() BgpVrfArrayOutput
	ToBgpVrfArrayOutputWithContext(context.Context) BgpVrfArrayOutput
}

type BgpVrfArray []BgpVrfInput

func (BgpVrfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrf)(nil)).Elem()
}

func (i BgpVrfArray) ToBgpVrfArrayOutput() BgpVrfArrayOutput {
	return i.ToBgpVrfArrayOutputWithContext(context.Background())
}

func (i BgpVrfArray) ToBgpVrfArrayOutputWithContext(ctx context.Context) BgpVrfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfArrayOutput)
}

type BgpVrfOutput struct{ *pulumi.OutputState }

func (BgpVrfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrf)(nil)).Elem()
}

func (o BgpVrfOutput) ToBgpVrfOutput() BgpVrfOutput {
	return o
}

func (o BgpVrfOutput) ToBgpVrfOutputWithContext(ctx context.Context) BgpVrfOutput {
	return o
}

// List of export route target. The structure of `exportRt` block is documented below.
func (o BgpVrfOutput) ExportRts() BgpVrfExportRtArrayOutput {
	return o.ApplyT(func(v BgpVrf) []BgpVrfExportRt { return v.ExportRts }).(BgpVrfExportRtArrayOutput)
}

// Import route map.
func (o BgpVrfOutput) ImportRouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf) *string { return v.ImportRouteMap }).(pulumi.StringPtrOutput)
}

// List of import route target. The structure of `importRt` block is documented below.
func (o BgpVrfOutput) ImportRts() BgpVrfImportRtArrayOutput {
	return o.ApplyT(func(v BgpVrf) []BgpVrfImportRt { return v.ImportRts }).(BgpVrfImportRtArrayOutput)
}

// Target VRF table. The structure of `leakTarget` block is documented below.
func (o BgpVrfOutput) LeakTargets() BgpVrfLeakTargetArrayOutput {
	return o.ApplyT(func(v BgpVrf) []BgpVrfLeakTarget { return v.LeakTargets }).(BgpVrfLeakTargetArrayOutput)
}

// Route Distinguisher: AA|AA:NN.
func (o BgpVrfOutput) Rd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf) *string { return v.Rd }).(pulumi.StringPtrOutput)
}

// VRF role. Valid values: `standalone`, `ce`, `pe`.
func (o BgpVrfOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Origin VRF ID. On FortiOS versions 7.2.0-7.2.3: 0 - 63. On FortiOS versions >= 7.2.4: 0 - 251.
func (o BgpVrfOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrf) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type BgpVrfArrayOutput struct{ *pulumi.OutputState }

func (BgpVrfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrf)(nil)).Elem()
}

func (o BgpVrfArrayOutput) ToBgpVrfArrayOutput() BgpVrfArrayOutput {
	return o
}

func (o BgpVrfArrayOutput) ToBgpVrfArrayOutputWithContext(ctx context.Context) BgpVrfArrayOutput {
	return o
}

func (o BgpVrfArrayOutput) Index(i pulumi.IntInput) BgpVrfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpVrf {
		return vs[0].([]BgpVrf)[vs[1].(int)]
	}).(BgpVrfOutput)
}

type BgpVrfExportRt struct {
	// Attribute: AA:NN|A.B.C.D:NN.
	RouteTarget *string `pulumi:"routeTarget"`
}

// BgpVrfExportRtInput is an input type that accepts BgpVrfExportRtArgs and BgpVrfExportRtOutput values.
// You can construct a concrete instance of `BgpVrfExportRtInput` via:
//
//	BgpVrfExportRtArgs{...}
type BgpVrfExportRtInput interface {
	pulumi.Input

	ToBgpVrfExportRtOutput() BgpVrfExportRtOutput
	ToBgpVrfExportRtOutputWithContext(context.Context) BgpVrfExportRtOutput
}

type BgpVrfExportRtArgs struct {
	// Attribute: AA:NN|A.B.C.D:NN.
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (BgpVrfExportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfExportRt)(nil)).Elem()
}

func (i BgpVrfExportRtArgs) ToBgpVrfExportRtOutput() BgpVrfExportRtOutput {
	return i.ToBgpVrfExportRtOutputWithContext(context.Background())
}

func (i BgpVrfExportRtArgs) ToBgpVrfExportRtOutputWithContext(ctx context.Context) BgpVrfExportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfExportRtOutput)
}

// BgpVrfExportRtArrayInput is an input type that accepts BgpVrfExportRtArray and BgpVrfExportRtArrayOutput values.
// You can construct a concrete instance of `BgpVrfExportRtArrayInput` via:
//
//	BgpVrfExportRtArray{ BgpVrfExportRtArgs{...} }
type BgpVrfExportRtArrayInput interface {
	pulumi.Input

	ToBgpVrfExportRtArrayOutput() BgpVrfExportRtArrayOutput
	ToBgpVrfExportRtArrayOutputWithContext(context.Context) BgpVrfExportRtArrayOutput
}

type BgpVrfExportRtArray []BgpVrfExportRtInput

func (BgpVrfExportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfExportRt)(nil)).Elem()
}

func (i BgpVrfExportRtArray) ToBgpVrfExportRtArrayOutput() BgpVrfExportRtArrayOutput {
	return i.ToBgpVrfExportRtArrayOutputWithContext(context.Background())
}

func (i BgpVrfExportRtArray) ToBgpVrfExportRtArrayOutputWithContext(ctx context.Context) BgpVrfExportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfExportRtArrayOutput)
}

type BgpVrfExportRtOutput struct{ *pulumi.OutputState }

func (BgpVrfExportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfExportRt)(nil)).Elem()
}

func (o BgpVrfExportRtOutput) ToBgpVrfExportRtOutput() BgpVrfExportRtOutput {
	return o
}

func (o BgpVrfExportRtOutput) ToBgpVrfExportRtOutputWithContext(ctx context.Context) BgpVrfExportRtOutput {
	return o
}

// Attribute: AA:NN|A.B.C.D:NN.
func (o BgpVrfExportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrfExportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type BgpVrfExportRtArrayOutput struct{ *pulumi.OutputState }

func (BgpVrfExportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfExportRt)(nil)).Elem()
}

func (o BgpVrfExportRtArrayOutput) ToBgpVrfExportRtArrayOutput() BgpVrfExportRtArrayOutput {
	return o
}

func (o BgpVrfExportRtArrayOutput) ToBgpVrfExportRtArrayOutputWithContext(ctx context.Context) BgpVrfExportRtArrayOutput {
	return o
}

func (o BgpVrfExportRtArrayOutput) Index(i pulumi.IntInput) BgpVrfExportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpVrfExportRt {
		return vs[0].([]BgpVrfExportRt)[vs[1].(int)]
	}).(BgpVrfExportRtOutput)
}

type BgpVrfImportRt struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget *string `pulumi:"routeTarget"`
}

// BgpVrfImportRtInput is an input type that accepts BgpVrfImportRtArgs and BgpVrfImportRtOutput values.
// You can construct a concrete instance of `BgpVrfImportRtInput` via:
//
//	BgpVrfImportRtArgs{...}
type BgpVrfImportRtInput interface {
	pulumi.Input

	ToBgpVrfImportRtOutput() BgpVrfImportRtOutput
	ToBgpVrfImportRtOutputWithContext(context.Context) BgpVrfImportRtOutput
}

type BgpVrfImportRtArgs struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (BgpVrfImportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfImportRt)(nil)).Elem()
}

func (i BgpVrfImportRtArgs) ToBgpVrfImportRtOutput() BgpVrfImportRtOutput {
	return i.ToBgpVrfImportRtOutputWithContext(context.Background())
}

func (i BgpVrfImportRtArgs) ToBgpVrfImportRtOutputWithContext(ctx context.Context) BgpVrfImportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfImportRtOutput)
}

// BgpVrfImportRtArrayInput is an input type that accepts BgpVrfImportRtArray and BgpVrfImportRtArrayOutput values.
// You can construct a concrete instance of `BgpVrfImportRtArrayInput` via:
//
//	BgpVrfImportRtArray{ BgpVrfImportRtArgs{...} }
type BgpVrfImportRtArrayInput interface {
	pulumi.Input

	ToBgpVrfImportRtArrayOutput() BgpVrfImportRtArrayOutput
	ToBgpVrfImportRtArrayOutputWithContext(context.Context) BgpVrfImportRtArrayOutput
}

type BgpVrfImportRtArray []BgpVrfImportRtInput

func (BgpVrfImportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfImportRt)(nil)).Elem()
}

func (i BgpVrfImportRtArray) ToBgpVrfImportRtArrayOutput() BgpVrfImportRtArrayOutput {
	return i.ToBgpVrfImportRtArrayOutputWithContext(context.Background())
}

func (i BgpVrfImportRtArray) ToBgpVrfImportRtArrayOutputWithContext(ctx context.Context) BgpVrfImportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfImportRtArrayOutput)
}

type BgpVrfImportRtOutput struct{ *pulumi.OutputState }

func (BgpVrfImportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfImportRt)(nil)).Elem()
}

func (o BgpVrfImportRtOutput) ToBgpVrfImportRtOutput() BgpVrfImportRtOutput {
	return o
}

func (o BgpVrfImportRtOutput) ToBgpVrfImportRtOutputWithContext(ctx context.Context) BgpVrfImportRtOutput {
	return o
}

// Attribute: AA:NN|A.B.C.D:NN
func (o BgpVrfImportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrfImportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type BgpVrfImportRtArrayOutput struct{ *pulumi.OutputState }

func (BgpVrfImportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfImportRt)(nil)).Elem()
}

func (o BgpVrfImportRtArrayOutput) ToBgpVrfImportRtArrayOutput() BgpVrfImportRtArrayOutput {
	return o
}

func (o BgpVrfImportRtArrayOutput) ToBgpVrfImportRtArrayOutputWithContext(ctx context.Context) BgpVrfImportRtArrayOutput {
	return o
}

func (o BgpVrfImportRtArrayOutput) Index(i pulumi.IntInput) BgpVrfImportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpVrfImportRt {
		return vs[0].([]BgpVrfImportRt)[vs[1].(int)]
	}).(BgpVrfImportRtOutput)
}

type BgpVrfLeak6 struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets []BgpVrfLeak6Target `pulumi:"targets"`
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrf *string `pulumi:"vrf"`
}

// BgpVrfLeak6Input is an input type that accepts BgpVrfLeak6Args and BgpVrfLeak6Output values.
// You can construct a concrete instance of `BgpVrfLeak6Input` via:
//
//	BgpVrfLeak6Args{...}
type BgpVrfLeak6Input interface {
	pulumi.Input

	ToBgpVrfLeak6Output() BgpVrfLeak6Output
	ToBgpVrfLeak6OutputWithContext(context.Context) BgpVrfLeak6Output
}

type BgpVrfLeak6Args struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets BgpVrfLeak6TargetArrayInput `pulumi:"targets"`
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (BgpVrfLeak6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfLeak6)(nil)).Elem()
}

func (i BgpVrfLeak6Args) ToBgpVrfLeak6Output() BgpVrfLeak6Output {
	return i.ToBgpVrfLeak6OutputWithContext(context.Background())
}

func (i BgpVrfLeak6Args) ToBgpVrfLeak6OutputWithContext(ctx context.Context) BgpVrfLeak6Output {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfLeak6Output)
}

// BgpVrfLeak6ArrayInput is an input type that accepts BgpVrfLeak6Array and BgpVrfLeak6ArrayOutput values.
// You can construct a concrete instance of `BgpVrfLeak6ArrayInput` via:
//
//	BgpVrfLeak6Array{ BgpVrfLeak6Args{...} }
type BgpVrfLeak6ArrayInput interface {
	pulumi.Input

	ToBgpVrfLeak6ArrayOutput() BgpVrfLeak6ArrayOutput
	ToBgpVrfLeak6ArrayOutputWithContext(context.Context) BgpVrfLeak6ArrayOutput
}

type BgpVrfLeak6Array []BgpVrfLeak6Input

func (BgpVrfLeak6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfLeak6)(nil)).Elem()
}

func (i BgpVrfLeak6Array) ToBgpVrfLeak6ArrayOutput() BgpVrfLeak6ArrayOutput {
	return i.ToBgpVrfLeak6ArrayOutputWithContext(context.Background())
}

func (i BgpVrfLeak6Array) ToBgpVrfLeak6ArrayOutputWithContext(ctx context.Context) BgpVrfLeak6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfLeak6ArrayOutput)
}

type BgpVrfLeak6Output struct{ *pulumi.OutputState }

func (BgpVrfLeak6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfLeak6)(nil)).Elem()
}

func (o BgpVrfLeak6Output) ToBgpVrfLeak6Output() BgpVrfLeak6Output {
	return o
}

func (o BgpVrfLeak6Output) ToBgpVrfLeak6OutputWithContext(ctx context.Context) BgpVrfLeak6Output {
	return o
}

// Target VRF table. The structure of `target` block is documented below.
func (o BgpVrfLeak6Output) Targets() BgpVrfLeak6TargetArrayOutput {
	return o.ApplyT(func(v BgpVrfLeak6) []BgpVrfLeak6Target { return v.Targets }).(BgpVrfLeak6TargetArrayOutput)
}

// BGP VRF leaking table. The structure of `vrf` block is documented below.
func (o BgpVrfLeak6Output) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrfLeak6) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type BgpVrfLeak6ArrayOutput struct{ *pulumi.OutputState }

func (BgpVrfLeak6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfLeak6)(nil)).Elem()
}

func (o BgpVrfLeak6ArrayOutput) ToBgpVrfLeak6ArrayOutput() BgpVrfLeak6ArrayOutput {
	return o
}

func (o BgpVrfLeak6ArrayOutput) ToBgpVrfLeak6ArrayOutputWithContext(ctx context.Context) BgpVrfLeak6ArrayOutput {
	return o
}

func (o BgpVrfLeak6ArrayOutput) Index(i pulumi.IntInput) BgpVrfLeak6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpVrfLeak6 {
		return vs[0].([]BgpVrfLeak6)[vs[1].(int)]
	}).(BgpVrfLeak6Output)
}

type BgpVrfLeak6Target struct {
	// Interface which is used to leak routes to target VRF.
	Interface *string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap *string `pulumi:"routeMap"`
	// Target VRF ID (0 - 31).
	Vrf *string `pulumi:"vrf"`
}

// BgpVrfLeak6TargetInput is an input type that accepts BgpVrfLeak6TargetArgs and BgpVrfLeak6TargetOutput values.
// You can construct a concrete instance of `BgpVrfLeak6TargetInput` via:
//
//	BgpVrfLeak6TargetArgs{...}
type BgpVrfLeak6TargetInput interface {
	pulumi.Input

	ToBgpVrfLeak6TargetOutput() BgpVrfLeak6TargetOutput
	ToBgpVrfLeak6TargetOutputWithContext(context.Context) BgpVrfLeak6TargetOutput
}

type BgpVrfLeak6TargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	// Target VRF ID (0 - 31).
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (BgpVrfLeak6TargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfLeak6Target)(nil)).Elem()
}

func (i BgpVrfLeak6TargetArgs) ToBgpVrfLeak6TargetOutput() BgpVrfLeak6TargetOutput {
	return i.ToBgpVrfLeak6TargetOutputWithContext(context.Background())
}

func (i BgpVrfLeak6TargetArgs) ToBgpVrfLeak6TargetOutputWithContext(ctx context.Context) BgpVrfLeak6TargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfLeak6TargetOutput)
}

// BgpVrfLeak6TargetArrayInput is an input type that accepts BgpVrfLeak6TargetArray and BgpVrfLeak6TargetArrayOutput values.
// You can construct a concrete instance of `BgpVrfLeak6TargetArrayInput` via:
//
//	BgpVrfLeak6TargetArray{ BgpVrfLeak6TargetArgs{...} }
type BgpVrfLeak6TargetArrayInput interface {
	pulumi.Input

	ToBgpVrfLeak6TargetArrayOutput() BgpVrfLeak6TargetArrayOutput
	ToBgpVrfLeak6TargetArrayOutputWithContext(context.Context) BgpVrfLeak6TargetArrayOutput
}

type BgpVrfLeak6TargetArray []BgpVrfLeak6TargetInput

func (BgpVrfLeak6TargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfLeak6Target)(nil)).Elem()
}

func (i BgpVrfLeak6TargetArray) ToBgpVrfLeak6TargetArrayOutput() BgpVrfLeak6TargetArrayOutput {
	return i.ToBgpVrfLeak6TargetArrayOutputWithContext(context.Background())
}

func (i BgpVrfLeak6TargetArray) ToBgpVrfLeak6TargetArrayOutputWithContext(ctx context.Context) BgpVrfLeak6TargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfLeak6TargetArrayOutput)
}

type BgpVrfLeak6TargetOutput struct{ *pulumi.OutputState }

func (BgpVrfLeak6TargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfLeak6Target)(nil)).Elem()
}

func (o BgpVrfLeak6TargetOutput) ToBgpVrfLeak6TargetOutput() BgpVrfLeak6TargetOutput {
	return o
}

func (o BgpVrfLeak6TargetOutput) ToBgpVrfLeak6TargetOutputWithContext(ctx context.Context) BgpVrfLeak6TargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o BgpVrfLeak6TargetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrfLeak6Target) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Route map of VRF leaking.
func (o BgpVrfLeak6TargetOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrfLeak6Target) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// Target VRF ID (0 - 31).
func (o BgpVrfLeak6TargetOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrfLeak6Target) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type BgpVrfLeak6TargetArrayOutput struct{ *pulumi.OutputState }

func (BgpVrfLeak6TargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfLeak6Target)(nil)).Elem()
}

func (o BgpVrfLeak6TargetArrayOutput) ToBgpVrfLeak6TargetArrayOutput() BgpVrfLeak6TargetArrayOutput {
	return o
}

func (o BgpVrfLeak6TargetArrayOutput) ToBgpVrfLeak6TargetArrayOutputWithContext(ctx context.Context) BgpVrfLeak6TargetArrayOutput {
	return o
}

func (o BgpVrfLeak6TargetArrayOutput) Index(i pulumi.IntInput) BgpVrfLeak6TargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpVrfLeak6Target {
		return vs[0].([]BgpVrfLeak6Target)[vs[1].(int)]
	}).(BgpVrfLeak6TargetOutput)
}

type BgpVrfLeak struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets []BgpVrfLeakTarget `pulumi:"targets"`
	// Origin VRF ID (0 - 31).
	Vrf *string `pulumi:"vrf"`
}

// BgpVrfLeakInput is an input type that accepts BgpVrfLeakArgs and BgpVrfLeakOutput values.
// You can construct a concrete instance of `BgpVrfLeakInput` via:
//
//	BgpVrfLeakArgs{...}
type BgpVrfLeakInput interface {
	pulumi.Input

	ToBgpVrfLeakOutput() BgpVrfLeakOutput
	ToBgpVrfLeakOutputWithContext(context.Context) BgpVrfLeakOutput
}

type BgpVrfLeakArgs struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets BgpVrfLeakTargetArrayInput `pulumi:"targets"`
	// Origin VRF ID (0 - 31).
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (BgpVrfLeakArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfLeak)(nil)).Elem()
}

func (i BgpVrfLeakArgs) ToBgpVrfLeakOutput() BgpVrfLeakOutput {
	return i.ToBgpVrfLeakOutputWithContext(context.Background())
}

func (i BgpVrfLeakArgs) ToBgpVrfLeakOutputWithContext(ctx context.Context) BgpVrfLeakOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfLeakOutput)
}

// BgpVrfLeakArrayInput is an input type that accepts BgpVrfLeakArray and BgpVrfLeakArrayOutput values.
// You can construct a concrete instance of `BgpVrfLeakArrayInput` via:
//
//	BgpVrfLeakArray{ BgpVrfLeakArgs{...} }
type BgpVrfLeakArrayInput interface {
	pulumi.Input

	ToBgpVrfLeakArrayOutput() BgpVrfLeakArrayOutput
	ToBgpVrfLeakArrayOutputWithContext(context.Context) BgpVrfLeakArrayOutput
}

type BgpVrfLeakArray []BgpVrfLeakInput

func (BgpVrfLeakArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfLeak)(nil)).Elem()
}

func (i BgpVrfLeakArray) ToBgpVrfLeakArrayOutput() BgpVrfLeakArrayOutput {
	return i.ToBgpVrfLeakArrayOutputWithContext(context.Background())
}

func (i BgpVrfLeakArray) ToBgpVrfLeakArrayOutputWithContext(ctx context.Context) BgpVrfLeakArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfLeakArrayOutput)
}

type BgpVrfLeakOutput struct{ *pulumi.OutputState }

func (BgpVrfLeakOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfLeak)(nil)).Elem()
}

func (o BgpVrfLeakOutput) ToBgpVrfLeakOutput() BgpVrfLeakOutput {
	return o
}

func (o BgpVrfLeakOutput) ToBgpVrfLeakOutputWithContext(ctx context.Context) BgpVrfLeakOutput {
	return o
}

// Target VRF table. The structure of `target` block is documented below.
func (o BgpVrfLeakOutput) Targets() BgpVrfLeakTargetArrayOutput {
	return o.ApplyT(func(v BgpVrfLeak) []BgpVrfLeakTarget { return v.Targets }).(BgpVrfLeakTargetArrayOutput)
}

// Origin VRF ID (0 - 31).
func (o BgpVrfLeakOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrfLeak) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type BgpVrfLeakArrayOutput struct{ *pulumi.OutputState }

func (BgpVrfLeakArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfLeak)(nil)).Elem()
}

func (o BgpVrfLeakArrayOutput) ToBgpVrfLeakArrayOutput() BgpVrfLeakArrayOutput {
	return o
}

func (o BgpVrfLeakArrayOutput) ToBgpVrfLeakArrayOutputWithContext(ctx context.Context) BgpVrfLeakArrayOutput {
	return o
}

func (o BgpVrfLeakArrayOutput) Index(i pulumi.IntInput) BgpVrfLeakOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpVrfLeak {
		return vs[0].([]BgpVrfLeak)[vs[1].(int)]
	}).(BgpVrfLeakOutput)
}

type BgpVrfLeakTarget struct {
	// Interface which is used to leak routes to target VRF.
	Interface *string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap *string `pulumi:"routeMap"`
	// Target VRF ID (0 - 31).
	Vrf *string `pulumi:"vrf"`
}

// BgpVrfLeakTargetInput is an input type that accepts BgpVrfLeakTargetArgs and BgpVrfLeakTargetOutput values.
// You can construct a concrete instance of `BgpVrfLeakTargetInput` via:
//
//	BgpVrfLeakTargetArgs{...}
type BgpVrfLeakTargetInput interface {
	pulumi.Input

	ToBgpVrfLeakTargetOutput() BgpVrfLeakTargetOutput
	ToBgpVrfLeakTargetOutputWithContext(context.Context) BgpVrfLeakTargetOutput
}

type BgpVrfLeakTargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	// Target VRF ID (0 - 31).
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (BgpVrfLeakTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfLeakTarget)(nil)).Elem()
}

func (i BgpVrfLeakTargetArgs) ToBgpVrfLeakTargetOutput() BgpVrfLeakTargetOutput {
	return i.ToBgpVrfLeakTargetOutputWithContext(context.Background())
}

func (i BgpVrfLeakTargetArgs) ToBgpVrfLeakTargetOutputWithContext(ctx context.Context) BgpVrfLeakTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfLeakTargetOutput)
}

// BgpVrfLeakTargetArrayInput is an input type that accepts BgpVrfLeakTargetArray and BgpVrfLeakTargetArrayOutput values.
// You can construct a concrete instance of `BgpVrfLeakTargetArrayInput` via:
//
//	BgpVrfLeakTargetArray{ BgpVrfLeakTargetArgs{...} }
type BgpVrfLeakTargetArrayInput interface {
	pulumi.Input

	ToBgpVrfLeakTargetArrayOutput() BgpVrfLeakTargetArrayOutput
	ToBgpVrfLeakTargetArrayOutputWithContext(context.Context) BgpVrfLeakTargetArrayOutput
}

type BgpVrfLeakTargetArray []BgpVrfLeakTargetInput

func (BgpVrfLeakTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfLeakTarget)(nil)).Elem()
}

func (i BgpVrfLeakTargetArray) ToBgpVrfLeakTargetArrayOutput() BgpVrfLeakTargetArrayOutput {
	return i.ToBgpVrfLeakTargetArrayOutputWithContext(context.Background())
}

func (i BgpVrfLeakTargetArray) ToBgpVrfLeakTargetArrayOutputWithContext(ctx context.Context) BgpVrfLeakTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpVrfLeakTargetArrayOutput)
}

type BgpVrfLeakTargetOutput struct{ *pulumi.OutputState }

func (BgpVrfLeakTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpVrfLeakTarget)(nil)).Elem()
}

func (o BgpVrfLeakTargetOutput) ToBgpVrfLeakTargetOutput() BgpVrfLeakTargetOutput {
	return o
}

func (o BgpVrfLeakTargetOutput) ToBgpVrfLeakTargetOutputWithContext(ctx context.Context) BgpVrfLeakTargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o BgpVrfLeakTargetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrfLeakTarget) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Route map of VRF leaking.
func (o BgpVrfLeakTargetOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrfLeakTarget) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// Target VRF ID (0 - 31).
func (o BgpVrfLeakTargetOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpVrfLeakTarget) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type BgpVrfLeakTargetArrayOutput struct{ *pulumi.OutputState }

func (BgpVrfLeakTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpVrfLeakTarget)(nil)).Elem()
}

func (o BgpVrfLeakTargetArrayOutput) ToBgpVrfLeakTargetArrayOutput() BgpVrfLeakTargetArrayOutput {
	return o
}

func (o BgpVrfLeakTargetArrayOutput) ToBgpVrfLeakTargetArrayOutputWithContext(ctx context.Context) BgpVrfLeakTargetArrayOutput {
	return o
}

func (o BgpVrfLeakTargetArrayOutput) Index(i pulumi.IntInput) BgpVrfLeakTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpVrfLeakTarget {
		return vs[0].([]BgpVrfLeakTarget)[vs[1].(int)]
	}).(BgpVrfLeakTargetOutput)
}

type CommunitylistRule struct {
	// Permit or deny route-based operations, based on the route's COMMUNITY attribute. Valid values: `deny`, `permit`.
	Action *string `pulumi:"action"`
	// ID.
	Id *int `pulumi:"id"`
	// Community specifications for matching a reserved community.
	Match *string `pulumi:"match"`
	// Ordered list of COMMUNITY attributes as a regular expression.
	Regexp *string `pulumi:"regexp"`
}

// CommunitylistRuleInput is an input type that accepts CommunitylistRuleArgs and CommunitylistRuleOutput values.
// You can construct a concrete instance of `CommunitylistRuleInput` via:
//
//	CommunitylistRuleArgs{...}
type CommunitylistRuleInput interface {
	pulumi.Input

	ToCommunitylistRuleOutput() CommunitylistRuleOutput
	ToCommunitylistRuleOutputWithContext(context.Context) CommunitylistRuleOutput
}

type CommunitylistRuleArgs struct {
	// Permit or deny route-based operations, based on the route's COMMUNITY attribute. Valid values: `deny`, `permit`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Community specifications for matching a reserved community.
	Match pulumi.StringPtrInput `pulumi:"match"`
	// Ordered list of COMMUNITY attributes as a regular expression.
	Regexp pulumi.StringPtrInput `pulumi:"regexp"`
}

func (CommunitylistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunitylistRule)(nil)).Elem()
}

func (i CommunitylistRuleArgs) ToCommunitylistRuleOutput() CommunitylistRuleOutput {
	return i.ToCommunitylistRuleOutputWithContext(context.Background())
}

func (i CommunitylistRuleArgs) ToCommunitylistRuleOutputWithContext(ctx context.Context) CommunitylistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunitylistRuleOutput)
}

// CommunitylistRuleArrayInput is an input type that accepts CommunitylistRuleArray and CommunitylistRuleArrayOutput values.
// You can construct a concrete instance of `CommunitylistRuleArrayInput` via:
//
//	CommunitylistRuleArray{ CommunitylistRuleArgs{...} }
type CommunitylistRuleArrayInput interface {
	pulumi.Input

	ToCommunitylistRuleArrayOutput() CommunitylistRuleArrayOutput
	ToCommunitylistRuleArrayOutputWithContext(context.Context) CommunitylistRuleArrayOutput
}

type CommunitylistRuleArray []CommunitylistRuleInput

func (CommunitylistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunitylistRule)(nil)).Elem()
}

func (i CommunitylistRuleArray) ToCommunitylistRuleArrayOutput() CommunitylistRuleArrayOutput {
	return i.ToCommunitylistRuleArrayOutputWithContext(context.Background())
}

func (i CommunitylistRuleArray) ToCommunitylistRuleArrayOutputWithContext(ctx context.Context) CommunitylistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunitylistRuleArrayOutput)
}

type CommunitylistRuleOutput struct{ *pulumi.OutputState }

func (CommunitylistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunitylistRule)(nil)).Elem()
}

func (o CommunitylistRuleOutput) ToCommunitylistRuleOutput() CommunitylistRuleOutput {
	return o
}

func (o CommunitylistRuleOutput) ToCommunitylistRuleOutputWithContext(ctx context.Context) CommunitylistRuleOutput {
	return o
}

// Permit or deny route-based operations, based on the route's COMMUNITY attribute. Valid values: `deny`, `permit`.
func (o CommunitylistRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunitylistRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// ID.
func (o CommunitylistRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CommunitylistRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Community specifications for matching a reserved community.
func (o CommunitylistRuleOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunitylistRule) *string { return v.Match }).(pulumi.StringPtrOutput)
}

// Ordered list of COMMUNITY attributes as a regular expression.
func (o CommunitylistRuleOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunitylistRule) *string { return v.Regexp }).(pulumi.StringPtrOutput)
}

type CommunitylistRuleArrayOutput struct{ *pulumi.OutputState }

func (CommunitylistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunitylistRule)(nil)).Elem()
}

func (o CommunitylistRuleArrayOutput) ToCommunitylistRuleArrayOutput() CommunitylistRuleArrayOutput {
	return o
}

func (o CommunitylistRuleArrayOutput) ToCommunitylistRuleArrayOutputWithContext(ctx context.Context) CommunitylistRuleArrayOutput {
	return o
}

func (o CommunitylistRuleArrayOutput) Index(i pulumi.IntInput) CommunitylistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommunitylistRule {
		return vs[0].([]CommunitylistRule)[vs[1].(int)]
	}).(CommunitylistRuleOutput)
}

type ExtcommunitylistRule struct {
	// Permit or deny route-based operations, based on the route's EXTENDED COMMUNITY attribute. Valid values: `deny`, `permit`.
	Action *string `pulumi:"action"`
	// ID.
	Id *int `pulumi:"id"`
	// Extended community specifications for matching a reserved extended community.
	Match *string `pulumi:"match"`
	// Ordered list of EXTENDED COMMUNITY attributes as a regular expression.
	Regexp *string `pulumi:"regexp"`
	// Type of extended community. Valid values: `rt`, `soo`.
	Type *string `pulumi:"type"`
}

// ExtcommunitylistRuleInput is an input type that accepts ExtcommunitylistRuleArgs and ExtcommunitylistRuleOutput values.
// You can construct a concrete instance of `ExtcommunitylistRuleInput` via:
//
//	ExtcommunitylistRuleArgs{...}
type ExtcommunitylistRuleInput interface {
	pulumi.Input

	ToExtcommunitylistRuleOutput() ExtcommunitylistRuleOutput
	ToExtcommunitylistRuleOutputWithContext(context.Context) ExtcommunitylistRuleOutput
}

type ExtcommunitylistRuleArgs struct {
	// Permit or deny route-based operations, based on the route's EXTENDED COMMUNITY attribute. Valid values: `deny`, `permit`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Extended community specifications for matching a reserved extended community.
	Match pulumi.StringPtrInput `pulumi:"match"`
	// Ordered list of EXTENDED COMMUNITY attributes as a regular expression.
	Regexp pulumi.StringPtrInput `pulumi:"regexp"`
	// Type of extended community. Valid values: `rt`, `soo`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ExtcommunitylistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtcommunitylistRule)(nil)).Elem()
}

func (i ExtcommunitylistRuleArgs) ToExtcommunitylistRuleOutput() ExtcommunitylistRuleOutput {
	return i.ToExtcommunitylistRuleOutputWithContext(context.Background())
}

func (i ExtcommunitylistRuleArgs) ToExtcommunitylistRuleOutputWithContext(ctx context.Context) ExtcommunitylistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtcommunitylistRuleOutput)
}

// ExtcommunitylistRuleArrayInput is an input type that accepts ExtcommunitylistRuleArray and ExtcommunitylistRuleArrayOutput values.
// You can construct a concrete instance of `ExtcommunitylistRuleArrayInput` via:
//
//	ExtcommunitylistRuleArray{ ExtcommunitylistRuleArgs{...} }
type ExtcommunitylistRuleArrayInput interface {
	pulumi.Input

	ToExtcommunitylistRuleArrayOutput() ExtcommunitylistRuleArrayOutput
	ToExtcommunitylistRuleArrayOutputWithContext(context.Context) ExtcommunitylistRuleArrayOutput
}

type ExtcommunitylistRuleArray []ExtcommunitylistRuleInput

func (ExtcommunitylistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtcommunitylistRule)(nil)).Elem()
}

func (i ExtcommunitylistRuleArray) ToExtcommunitylistRuleArrayOutput() ExtcommunitylistRuleArrayOutput {
	return i.ToExtcommunitylistRuleArrayOutputWithContext(context.Background())
}

func (i ExtcommunitylistRuleArray) ToExtcommunitylistRuleArrayOutputWithContext(ctx context.Context) ExtcommunitylistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtcommunitylistRuleArrayOutput)
}

type ExtcommunitylistRuleOutput struct{ *pulumi.OutputState }

func (ExtcommunitylistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtcommunitylistRule)(nil)).Elem()
}

func (o ExtcommunitylistRuleOutput) ToExtcommunitylistRuleOutput() ExtcommunitylistRuleOutput {
	return o
}

func (o ExtcommunitylistRuleOutput) ToExtcommunitylistRuleOutputWithContext(ctx context.Context) ExtcommunitylistRuleOutput {
	return o
}

// Permit or deny route-based operations, based on the route's EXTENDED COMMUNITY attribute. Valid values: `deny`, `permit`.
func (o ExtcommunitylistRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtcommunitylistRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// ID.
func (o ExtcommunitylistRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtcommunitylistRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Extended community specifications for matching a reserved extended community.
func (o ExtcommunitylistRuleOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtcommunitylistRule) *string { return v.Match }).(pulumi.StringPtrOutput)
}

// Ordered list of EXTENDED COMMUNITY attributes as a regular expression.
func (o ExtcommunitylistRuleOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtcommunitylistRule) *string { return v.Regexp }).(pulumi.StringPtrOutput)
}

// Type of extended community. Valid values: `rt`, `soo`.
func (o ExtcommunitylistRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtcommunitylistRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtcommunitylistRuleArrayOutput struct{ *pulumi.OutputState }

func (ExtcommunitylistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtcommunitylistRule)(nil)).Elem()
}

func (o ExtcommunitylistRuleArrayOutput) ToExtcommunitylistRuleArrayOutput() ExtcommunitylistRuleArrayOutput {
	return o
}

func (o ExtcommunitylistRuleArrayOutput) ToExtcommunitylistRuleArrayOutputWithContext(ctx context.Context) ExtcommunitylistRuleArrayOutput {
	return o
}

func (o ExtcommunitylistRuleArrayOutput) Index(i pulumi.IntInput) ExtcommunitylistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtcommunitylistRule {
		return vs[0].([]ExtcommunitylistRule)[vs[1].(int)]
	}).(ExtcommunitylistRuleOutput)
}

type IsisIsisInterface struct {
	// Authentication key-chain for level 1 PDUs.
	AuthKeychainL1 *string `pulumi:"authKeychainL1"`
	// Authentication key-chain for level 2 PDUs.
	AuthKeychainL2 *string `pulumi:"authKeychainL2"`
	// Level 1 authentication mode. Valid values: `md5`, `password`.
	AuthModeL1 *string `pulumi:"authModeL1"`
	// Level 2 authentication mode. Valid values: `md5`, `password`.
	AuthModeL2 *string `pulumi:"authModeL2"`
	// Authentication password for level 1 PDUs.
	AuthPasswordL1 *string `pulumi:"authPasswordL1"`
	// Authentication password for level 2 PDUs.
	AuthPasswordL2 *string `pulumi:"authPasswordL2"`
	// Enable/disable authentication send-only for level 1 PDUs. Valid values: `enable`, `disable`.
	AuthSendOnlyL1 *string `pulumi:"authSendOnlyL1"`
	// Enable/disable authentication send-only for level 2 PDUs. Valid values: `enable`, `disable`.
	AuthSendOnlyL2 *string `pulumi:"authSendOnlyL2"`
	// IS-IS interface's circuit type Valid values: `level-1-2`, `level-1`, `level-2`.
	CircuitType *string `pulumi:"circuitType"`
	// Level 1 CSNP interval.
	CsnpIntervalL1 *int `pulumi:"csnpIntervalL1"`
	// Level 2 CSNP interval.
	CsnpIntervalL2 *int `pulumi:"csnpIntervalL2"`
	// Level 1 hello interval.
	HelloIntervalL1 *int `pulumi:"helloIntervalL1"`
	// Level 2 hello interval.
	HelloIntervalL2 *int `pulumi:"helloIntervalL2"`
	// Level 1 multiplier for Hello holding time.
	HelloMultiplierL1 *int `pulumi:"helloMultiplierL1"`
	// Level 2 multiplier for Hello holding time.
	HelloMultiplierL2 *int `pulumi:"helloMultiplierL2"`
	// Enable/disable padding to IS-IS hello packets. Valid values: `enable`, `disable`.
	HelloPadding *string `pulumi:"helloPadding"`
	// LSP transmission interval (milliseconds).
	LspInterval *int `pulumi:"lspInterval"`
	// LSP retransmission interval (sec).
	LspRetransmitInterval *int `pulumi:"lspRetransmitInterval"`
	// Enable/disable IS-IS mesh group. Valid values: `enable`, `disable`.
	MeshGroup *string `pulumi:"meshGroup"`
	// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
	MeshGroupId *int `pulumi:"meshGroupId"`
	// Level 1 metric for interface.
	MetricL1 *int `pulumi:"metricL1"`
	// Level 2 metric for interface.
	MetricL2 *int `pulumi:"metricL2"`
	// IS-IS interface name.
	Name *string `pulumi:"name"`
	// IS-IS interface's network type Valid values: `broadcast`, `point-to-point`, `loopback`.
	NetworkType *string `pulumi:"networkType"`
	// Level 1 priority.
	PriorityL1 *int `pulumi:"priorityL1"`
	// Level 2 priority.
	PriorityL2 *int `pulumi:"priorityL2"`
	// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable IPv6 interface for IS-IS. Valid values: `enable`, `disable`.
	Status6 *string `pulumi:"status6"`
	// Level 1 wide metric for interface.
	WideMetricL1 *int `pulumi:"wideMetricL1"`
	// Level 2 wide metric for interface.
	WideMetricL2 *int `pulumi:"wideMetricL2"`
}

// IsisIsisInterfaceInput is an input type that accepts IsisIsisInterfaceArgs and IsisIsisInterfaceOutput values.
// You can construct a concrete instance of `IsisIsisInterfaceInput` via:
//
//	IsisIsisInterfaceArgs{...}
type IsisIsisInterfaceInput interface {
	pulumi.Input

	ToIsisIsisInterfaceOutput() IsisIsisInterfaceOutput
	ToIsisIsisInterfaceOutputWithContext(context.Context) IsisIsisInterfaceOutput
}

type IsisIsisInterfaceArgs struct {
	// Authentication key-chain for level 1 PDUs.
	AuthKeychainL1 pulumi.StringPtrInput `pulumi:"authKeychainL1"`
	// Authentication key-chain for level 2 PDUs.
	AuthKeychainL2 pulumi.StringPtrInput `pulumi:"authKeychainL2"`
	// Level 1 authentication mode. Valid values: `md5`, `password`.
	AuthModeL1 pulumi.StringPtrInput `pulumi:"authModeL1"`
	// Level 2 authentication mode. Valid values: `md5`, `password`.
	AuthModeL2 pulumi.StringPtrInput `pulumi:"authModeL2"`
	// Authentication password for level 1 PDUs.
	AuthPasswordL1 pulumi.StringPtrInput `pulumi:"authPasswordL1"`
	// Authentication password for level 2 PDUs.
	AuthPasswordL2 pulumi.StringPtrInput `pulumi:"authPasswordL2"`
	// Enable/disable authentication send-only for level 1 PDUs. Valid values: `enable`, `disable`.
	AuthSendOnlyL1 pulumi.StringPtrInput `pulumi:"authSendOnlyL1"`
	// Enable/disable authentication send-only for level 2 PDUs. Valid values: `enable`, `disable`.
	AuthSendOnlyL2 pulumi.StringPtrInput `pulumi:"authSendOnlyL2"`
	// IS-IS interface's circuit type Valid values: `level-1-2`, `level-1`, `level-2`.
	CircuitType pulumi.StringPtrInput `pulumi:"circuitType"`
	// Level 1 CSNP interval.
	CsnpIntervalL1 pulumi.IntPtrInput `pulumi:"csnpIntervalL1"`
	// Level 2 CSNP interval.
	CsnpIntervalL2 pulumi.IntPtrInput `pulumi:"csnpIntervalL2"`
	// Level 1 hello interval.
	HelloIntervalL1 pulumi.IntPtrInput `pulumi:"helloIntervalL1"`
	// Level 2 hello interval.
	HelloIntervalL2 pulumi.IntPtrInput `pulumi:"helloIntervalL2"`
	// Level 1 multiplier for Hello holding time.
	HelloMultiplierL1 pulumi.IntPtrInput `pulumi:"helloMultiplierL1"`
	// Level 2 multiplier for Hello holding time.
	HelloMultiplierL2 pulumi.IntPtrInput `pulumi:"helloMultiplierL2"`
	// Enable/disable padding to IS-IS hello packets. Valid values: `enable`, `disable`.
	HelloPadding pulumi.StringPtrInput `pulumi:"helloPadding"`
	// LSP transmission interval (milliseconds).
	LspInterval pulumi.IntPtrInput `pulumi:"lspInterval"`
	// LSP retransmission interval (sec).
	LspRetransmitInterval pulumi.IntPtrInput `pulumi:"lspRetransmitInterval"`
	// Enable/disable IS-IS mesh group. Valid values: `enable`, `disable`.
	MeshGroup pulumi.StringPtrInput `pulumi:"meshGroup"`
	// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
	MeshGroupId pulumi.IntPtrInput `pulumi:"meshGroupId"`
	// Level 1 metric for interface.
	MetricL1 pulumi.IntPtrInput `pulumi:"metricL1"`
	// Level 2 metric for interface.
	MetricL2 pulumi.IntPtrInput `pulumi:"metricL2"`
	// IS-IS interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// IS-IS interface's network type Valid values: `broadcast`, `point-to-point`, `loopback`.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// Level 1 priority.
	PriorityL1 pulumi.IntPtrInput `pulumi:"priorityL1"`
	// Level 2 priority.
	PriorityL2 pulumi.IntPtrInput `pulumi:"priorityL2"`
	// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable IPv6 interface for IS-IS. Valid values: `enable`, `disable`.
	Status6 pulumi.StringPtrInput `pulumi:"status6"`
	// Level 1 wide metric for interface.
	WideMetricL1 pulumi.IntPtrInput `pulumi:"wideMetricL1"`
	// Level 2 wide metric for interface.
	WideMetricL2 pulumi.IntPtrInput `pulumi:"wideMetricL2"`
}

func (IsisIsisInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisIsisInterface)(nil)).Elem()
}

func (i IsisIsisInterfaceArgs) ToIsisIsisInterfaceOutput() IsisIsisInterfaceOutput {
	return i.ToIsisIsisInterfaceOutputWithContext(context.Background())
}

func (i IsisIsisInterfaceArgs) ToIsisIsisInterfaceOutputWithContext(ctx context.Context) IsisIsisInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsisIsisInterfaceOutput)
}

// IsisIsisInterfaceArrayInput is an input type that accepts IsisIsisInterfaceArray and IsisIsisInterfaceArrayOutput values.
// You can construct a concrete instance of `IsisIsisInterfaceArrayInput` via:
//
//	IsisIsisInterfaceArray{ IsisIsisInterfaceArgs{...} }
type IsisIsisInterfaceArrayInput interface {
	pulumi.Input

	ToIsisIsisInterfaceArrayOutput() IsisIsisInterfaceArrayOutput
	ToIsisIsisInterfaceArrayOutputWithContext(context.Context) IsisIsisInterfaceArrayOutput
}

type IsisIsisInterfaceArray []IsisIsisInterfaceInput

func (IsisIsisInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisIsisInterface)(nil)).Elem()
}

func (i IsisIsisInterfaceArray) ToIsisIsisInterfaceArrayOutput() IsisIsisInterfaceArrayOutput {
	return i.ToIsisIsisInterfaceArrayOutputWithContext(context.Background())
}

func (i IsisIsisInterfaceArray) ToIsisIsisInterfaceArrayOutputWithContext(ctx context.Context) IsisIsisInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsisIsisInterfaceArrayOutput)
}

type IsisIsisInterfaceOutput struct{ *pulumi.OutputState }

func (IsisIsisInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisIsisInterface)(nil)).Elem()
}

func (o IsisIsisInterfaceOutput) ToIsisIsisInterfaceOutput() IsisIsisInterfaceOutput {
	return o
}

func (o IsisIsisInterfaceOutput) ToIsisIsisInterfaceOutputWithContext(ctx context.Context) IsisIsisInterfaceOutput {
	return o
}

// Authentication key-chain for level 1 PDUs.
func (o IsisIsisInterfaceOutput) AuthKeychainL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.AuthKeychainL1 }).(pulumi.StringPtrOutput)
}

// Authentication key-chain for level 2 PDUs.
func (o IsisIsisInterfaceOutput) AuthKeychainL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.AuthKeychainL2 }).(pulumi.StringPtrOutput)
}

// Level 1 authentication mode. Valid values: `md5`, `password`.
func (o IsisIsisInterfaceOutput) AuthModeL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.AuthModeL1 }).(pulumi.StringPtrOutput)
}

// Level 2 authentication mode. Valid values: `md5`, `password`.
func (o IsisIsisInterfaceOutput) AuthModeL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.AuthModeL2 }).(pulumi.StringPtrOutput)
}

// Authentication password for level 1 PDUs.
func (o IsisIsisInterfaceOutput) AuthPasswordL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.AuthPasswordL1 }).(pulumi.StringPtrOutput)
}

// Authentication password for level 2 PDUs.
func (o IsisIsisInterfaceOutput) AuthPasswordL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.AuthPasswordL2 }).(pulumi.StringPtrOutput)
}

// Enable/disable authentication send-only for level 1 PDUs. Valid values: `enable`, `disable`.
func (o IsisIsisInterfaceOutput) AuthSendOnlyL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.AuthSendOnlyL1 }).(pulumi.StringPtrOutput)
}

// Enable/disable authentication send-only for level 2 PDUs. Valid values: `enable`, `disable`.
func (o IsisIsisInterfaceOutput) AuthSendOnlyL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.AuthSendOnlyL2 }).(pulumi.StringPtrOutput)
}

// IS-IS interface's circuit type Valid values: `level-1-2`, `level-1`, `level-2`.
func (o IsisIsisInterfaceOutput) CircuitType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.CircuitType }).(pulumi.StringPtrOutput)
}

// Level 1 CSNP interval.
func (o IsisIsisInterfaceOutput) CsnpIntervalL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.CsnpIntervalL1 }).(pulumi.IntPtrOutput)
}

// Level 2 CSNP interval.
func (o IsisIsisInterfaceOutput) CsnpIntervalL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.CsnpIntervalL2 }).(pulumi.IntPtrOutput)
}

// Level 1 hello interval.
func (o IsisIsisInterfaceOutput) HelloIntervalL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.HelloIntervalL1 }).(pulumi.IntPtrOutput)
}

// Level 2 hello interval.
func (o IsisIsisInterfaceOutput) HelloIntervalL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.HelloIntervalL2 }).(pulumi.IntPtrOutput)
}

// Level 1 multiplier for Hello holding time.
func (o IsisIsisInterfaceOutput) HelloMultiplierL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.HelloMultiplierL1 }).(pulumi.IntPtrOutput)
}

// Level 2 multiplier for Hello holding time.
func (o IsisIsisInterfaceOutput) HelloMultiplierL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.HelloMultiplierL2 }).(pulumi.IntPtrOutput)
}

// Enable/disable padding to IS-IS hello packets. Valid values: `enable`, `disable`.
func (o IsisIsisInterfaceOutput) HelloPadding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.HelloPadding }).(pulumi.StringPtrOutput)
}

// LSP transmission interval (milliseconds).
func (o IsisIsisInterfaceOutput) LspInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.LspInterval }).(pulumi.IntPtrOutput)
}

// LSP retransmission interval (sec).
func (o IsisIsisInterfaceOutput) LspRetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.LspRetransmitInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable IS-IS mesh group. Valid values: `enable`, `disable`.
func (o IsisIsisInterfaceOutput) MeshGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.MeshGroup }).(pulumi.StringPtrOutput)
}

// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
func (o IsisIsisInterfaceOutput) MeshGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.MeshGroupId }).(pulumi.IntPtrOutput)
}

// Level 1 metric for interface.
func (o IsisIsisInterfaceOutput) MetricL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.MetricL1 }).(pulumi.IntPtrOutput)
}

// Level 2 metric for interface.
func (o IsisIsisInterfaceOutput) MetricL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.MetricL2 }).(pulumi.IntPtrOutput)
}

// IS-IS interface name.
func (o IsisIsisInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// IS-IS interface's network type Valid values: `broadcast`, `point-to-point`, `loopback`.
func (o IsisIsisInterfaceOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// Level 1 priority.
func (o IsisIsisInterfaceOutput) PriorityL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.PriorityL1 }).(pulumi.IntPtrOutput)
}

// Level 2 priority.
func (o IsisIsisInterfaceOutput) PriorityL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.PriorityL2 }).(pulumi.IntPtrOutput)
}

// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
func (o IsisIsisInterfaceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 interface for IS-IS. Valid values: `enable`, `disable`.
func (o IsisIsisInterfaceOutput) Status6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *string { return v.Status6 }).(pulumi.StringPtrOutput)
}

// Level 1 wide metric for interface.
func (o IsisIsisInterfaceOutput) WideMetricL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.WideMetricL1 }).(pulumi.IntPtrOutput)
}

// Level 2 wide metric for interface.
func (o IsisIsisInterfaceOutput) WideMetricL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisInterface) *int { return v.WideMetricL2 }).(pulumi.IntPtrOutput)
}

type IsisIsisInterfaceArrayOutput struct{ *pulumi.OutputState }

func (IsisIsisInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisIsisInterface)(nil)).Elem()
}

func (o IsisIsisInterfaceArrayOutput) ToIsisIsisInterfaceArrayOutput() IsisIsisInterfaceArrayOutput {
	return o
}

func (o IsisIsisInterfaceArrayOutput) ToIsisIsisInterfaceArrayOutputWithContext(ctx context.Context) IsisIsisInterfaceArrayOutput {
	return o
}

func (o IsisIsisInterfaceArrayOutput) Index(i pulumi.IntInput) IsisIsisInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IsisIsisInterface {
		return vs[0].([]IsisIsisInterface)[vs[1].(int)]
	}).(IsisIsisInterfaceOutput)
}

type IsisIsisNet struct {
	// isis-net ID.
	Id *int `pulumi:"id"`
	// IS-IS networks (format = xx.xxxx.  .xxxx.xx.).
	Net *string `pulumi:"net"`
}

// IsisIsisNetInput is an input type that accepts IsisIsisNetArgs and IsisIsisNetOutput values.
// You can construct a concrete instance of `IsisIsisNetInput` via:
//
//	IsisIsisNetArgs{...}
type IsisIsisNetInput interface {
	pulumi.Input

	ToIsisIsisNetOutput() IsisIsisNetOutput
	ToIsisIsisNetOutputWithContext(context.Context) IsisIsisNetOutput
}

type IsisIsisNetArgs struct {
	// isis-net ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IS-IS networks (format = xx.xxxx.  .xxxx.xx.).
	Net pulumi.StringPtrInput `pulumi:"net"`
}

func (IsisIsisNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisIsisNet)(nil)).Elem()
}

func (i IsisIsisNetArgs) ToIsisIsisNetOutput() IsisIsisNetOutput {
	return i.ToIsisIsisNetOutputWithContext(context.Background())
}

func (i IsisIsisNetArgs) ToIsisIsisNetOutputWithContext(ctx context.Context) IsisIsisNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsisIsisNetOutput)
}

// IsisIsisNetArrayInput is an input type that accepts IsisIsisNetArray and IsisIsisNetArrayOutput values.
// You can construct a concrete instance of `IsisIsisNetArrayInput` via:
//
//	IsisIsisNetArray{ IsisIsisNetArgs{...} }
type IsisIsisNetArrayInput interface {
	pulumi.Input

	ToIsisIsisNetArrayOutput() IsisIsisNetArrayOutput
	ToIsisIsisNetArrayOutputWithContext(context.Context) IsisIsisNetArrayOutput
}

type IsisIsisNetArray []IsisIsisNetInput

func (IsisIsisNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisIsisNet)(nil)).Elem()
}

func (i IsisIsisNetArray) ToIsisIsisNetArrayOutput() IsisIsisNetArrayOutput {
	return i.ToIsisIsisNetArrayOutputWithContext(context.Background())
}

func (i IsisIsisNetArray) ToIsisIsisNetArrayOutputWithContext(ctx context.Context) IsisIsisNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsisIsisNetArrayOutput)
}

type IsisIsisNetOutput struct{ *pulumi.OutputState }

func (IsisIsisNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisIsisNet)(nil)).Elem()
}

func (o IsisIsisNetOutput) ToIsisIsisNetOutput() IsisIsisNetOutput {
	return o
}

func (o IsisIsisNetOutput) ToIsisIsisNetOutputWithContext(ctx context.Context) IsisIsisNetOutput {
	return o
}

// isis-net ID.
func (o IsisIsisNetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisIsisNet) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IS-IS networks (format = xx.xxxx.  .xxxx.xx.).
func (o IsisIsisNetOutput) Net() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisIsisNet) *string { return v.Net }).(pulumi.StringPtrOutput)
}

type IsisIsisNetArrayOutput struct{ *pulumi.OutputState }

func (IsisIsisNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisIsisNet)(nil)).Elem()
}

func (o IsisIsisNetArrayOutput) ToIsisIsisNetArrayOutput() IsisIsisNetArrayOutput {
	return o
}

func (o IsisIsisNetArrayOutput) ToIsisIsisNetArrayOutputWithContext(ctx context.Context) IsisIsisNetArrayOutput {
	return o
}

func (o IsisIsisNetArrayOutput) Index(i pulumi.IntInput) IsisIsisNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IsisIsisNet {
		return vs[0].([]IsisIsisNet)[vs[1].(int)]
	}).(IsisIsisNetOutput)
}

type IsisRedistribute6 struct {
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level *string `pulumi:"level"`
	// Metric.
	Metric *int `pulumi:"metric"`
	// Metric type. Valid values: `external`, `internal`.
	MetricType *string `pulumi:"metricType"`
	// Protocol name.
	Protocol *string `pulumi:"protocol"`
	// Route map name.
	Routemap *string `pulumi:"routemap"`
	// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// IsisRedistribute6Input is an input type that accepts IsisRedistribute6Args and IsisRedistribute6Output values.
// You can construct a concrete instance of `IsisRedistribute6Input` via:
//
//	IsisRedistribute6Args{...}
type IsisRedistribute6Input interface {
	pulumi.Input

	ToIsisRedistribute6Output() IsisRedistribute6Output
	ToIsisRedistribute6OutputWithContext(context.Context) IsisRedistribute6Output
}

type IsisRedistribute6Args struct {
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Metric.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Metric type. Valid values: `external`, `internal`.
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	// Protocol name.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Route map name.
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (IsisRedistribute6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisRedistribute6)(nil)).Elem()
}

func (i IsisRedistribute6Args) ToIsisRedistribute6Output() IsisRedistribute6Output {
	return i.ToIsisRedistribute6OutputWithContext(context.Background())
}

func (i IsisRedistribute6Args) ToIsisRedistribute6OutputWithContext(ctx context.Context) IsisRedistribute6Output {
	return pulumi.ToOutputWithContext(ctx, i).(IsisRedistribute6Output)
}

// IsisRedistribute6ArrayInput is an input type that accepts IsisRedistribute6Array and IsisRedistribute6ArrayOutput values.
// You can construct a concrete instance of `IsisRedistribute6ArrayInput` via:
//
//	IsisRedistribute6Array{ IsisRedistribute6Args{...} }
type IsisRedistribute6ArrayInput interface {
	pulumi.Input

	ToIsisRedistribute6ArrayOutput() IsisRedistribute6ArrayOutput
	ToIsisRedistribute6ArrayOutputWithContext(context.Context) IsisRedistribute6ArrayOutput
}

type IsisRedistribute6Array []IsisRedistribute6Input

func (IsisRedistribute6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisRedistribute6)(nil)).Elem()
}

func (i IsisRedistribute6Array) ToIsisRedistribute6ArrayOutput() IsisRedistribute6ArrayOutput {
	return i.ToIsisRedistribute6ArrayOutputWithContext(context.Background())
}

func (i IsisRedistribute6Array) ToIsisRedistribute6ArrayOutputWithContext(ctx context.Context) IsisRedistribute6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsisRedistribute6ArrayOutput)
}

type IsisRedistribute6Output struct{ *pulumi.OutputState }

func (IsisRedistribute6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisRedistribute6)(nil)).Elem()
}

func (o IsisRedistribute6Output) ToIsisRedistribute6Output() IsisRedistribute6Output {
	return o
}

func (o IsisRedistribute6Output) ToIsisRedistribute6OutputWithContext(ctx context.Context) IsisRedistribute6Output {
	return o
}

// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
func (o IsisRedistribute6Output) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisRedistribute6) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Metric.
func (o IsisRedistribute6Output) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisRedistribute6) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Metric type. Valid values: `external`, `internal`.
func (o IsisRedistribute6Output) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisRedistribute6) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

// Protocol name.
func (o IsisRedistribute6Output) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisRedistribute6) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o IsisRedistribute6Output) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisRedistribute6) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
func (o IsisRedistribute6Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisRedistribute6) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type IsisRedistribute6ArrayOutput struct{ *pulumi.OutputState }

func (IsisRedistribute6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisRedistribute6)(nil)).Elem()
}

func (o IsisRedistribute6ArrayOutput) ToIsisRedistribute6ArrayOutput() IsisRedistribute6ArrayOutput {
	return o
}

func (o IsisRedistribute6ArrayOutput) ToIsisRedistribute6ArrayOutputWithContext(ctx context.Context) IsisRedistribute6ArrayOutput {
	return o
}

func (o IsisRedistribute6ArrayOutput) Index(i pulumi.IntInput) IsisRedistribute6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IsisRedistribute6 {
		return vs[0].([]IsisRedistribute6)[vs[1].(int)]
	}).(IsisRedistribute6Output)
}

type IsisRedistribute struct {
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level *string `pulumi:"level"`
	// Metric.
	Metric *int `pulumi:"metric"`
	// Metric type. Valid values: `external`, `internal`.
	MetricType *string `pulumi:"metricType"`
	// Protocol name.
	Protocol *string `pulumi:"protocol"`
	// Route map name.
	Routemap *string `pulumi:"routemap"`
	// Enable/disable redistribution. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// IsisRedistributeInput is an input type that accepts IsisRedistributeArgs and IsisRedistributeOutput values.
// You can construct a concrete instance of `IsisRedistributeInput` via:
//
//	IsisRedistributeArgs{...}
type IsisRedistributeInput interface {
	pulumi.Input

	ToIsisRedistributeOutput() IsisRedistributeOutput
	ToIsisRedistributeOutputWithContext(context.Context) IsisRedistributeOutput
}

type IsisRedistributeArgs struct {
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Metric.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Metric type. Valid values: `external`, `internal`.
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	// Protocol name.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Route map name.
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// Enable/disable redistribution. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (IsisRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisRedistribute)(nil)).Elem()
}

func (i IsisRedistributeArgs) ToIsisRedistributeOutput() IsisRedistributeOutput {
	return i.ToIsisRedistributeOutputWithContext(context.Background())
}

func (i IsisRedistributeArgs) ToIsisRedistributeOutputWithContext(ctx context.Context) IsisRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsisRedistributeOutput)
}

// IsisRedistributeArrayInput is an input type that accepts IsisRedistributeArray and IsisRedistributeArrayOutput values.
// You can construct a concrete instance of `IsisRedistributeArrayInput` via:
//
//	IsisRedistributeArray{ IsisRedistributeArgs{...} }
type IsisRedistributeArrayInput interface {
	pulumi.Input

	ToIsisRedistributeArrayOutput() IsisRedistributeArrayOutput
	ToIsisRedistributeArrayOutputWithContext(context.Context) IsisRedistributeArrayOutput
}

type IsisRedistributeArray []IsisRedistributeInput

func (IsisRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisRedistribute)(nil)).Elem()
}

func (i IsisRedistributeArray) ToIsisRedistributeArrayOutput() IsisRedistributeArrayOutput {
	return i.ToIsisRedistributeArrayOutputWithContext(context.Background())
}

func (i IsisRedistributeArray) ToIsisRedistributeArrayOutputWithContext(ctx context.Context) IsisRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsisRedistributeArrayOutput)
}

type IsisRedistributeOutput struct{ *pulumi.OutputState }

func (IsisRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisRedistribute)(nil)).Elem()
}

func (o IsisRedistributeOutput) ToIsisRedistributeOutput() IsisRedistributeOutput {
	return o
}

func (o IsisRedistributeOutput) ToIsisRedistributeOutputWithContext(ctx context.Context) IsisRedistributeOutput {
	return o
}

// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
func (o IsisRedistributeOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisRedistribute) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Metric.
func (o IsisRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Metric type. Valid values: `external`, `internal`.
func (o IsisRedistributeOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisRedistribute) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

// Protocol name.
func (o IsisRedistributeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisRedistribute) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o IsisRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// Enable/disable redistribution. Valid values: `enable`, `disable`.
func (o IsisRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type IsisRedistributeArrayOutput struct{ *pulumi.OutputState }

func (IsisRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisRedistribute)(nil)).Elem()
}

func (o IsisRedistributeArrayOutput) ToIsisRedistributeArrayOutput() IsisRedistributeArrayOutput {
	return o
}

func (o IsisRedistributeArrayOutput) ToIsisRedistributeArrayOutputWithContext(ctx context.Context) IsisRedistributeArrayOutput {
	return o
}

func (o IsisRedistributeArrayOutput) Index(i pulumi.IntInput) IsisRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IsisRedistribute {
		return vs[0].([]IsisRedistribute)[vs[1].(int)]
	}).(IsisRedistributeOutput)
}

type IsisSummaryAddress6 struct {
	// isis-net ID.
	Id *int `pulumi:"id"`
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level *string `pulumi:"level"`
	// IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
}

// IsisSummaryAddress6Input is an input type that accepts IsisSummaryAddress6Args and IsisSummaryAddress6Output values.
// You can construct a concrete instance of `IsisSummaryAddress6Input` via:
//
//	IsisSummaryAddress6Args{...}
type IsisSummaryAddress6Input interface {
	pulumi.Input

	ToIsisSummaryAddress6Output() IsisSummaryAddress6Output
	ToIsisSummaryAddress6OutputWithContext(context.Context) IsisSummaryAddress6Output
}

type IsisSummaryAddress6Args struct {
	// isis-net ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (IsisSummaryAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisSummaryAddress6)(nil)).Elem()
}

func (i IsisSummaryAddress6Args) ToIsisSummaryAddress6Output() IsisSummaryAddress6Output {
	return i.ToIsisSummaryAddress6OutputWithContext(context.Background())
}

func (i IsisSummaryAddress6Args) ToIsisSummaryAddress6OutputWithContext(ctx context.Context) IsisSummaryAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(IsisSummaryAddress6Output)
}

// IsisSummaryAddress6ArrayInput is an input type that accepts IsisSummaryAddress6Array and IsisSummaryAddress6ArrayOutput values.
// You can construct a concrete instance of `IsisSummaryAddress6ArrayInput` via:
//
//	IsisSummaryAddress6Array{ IsisSummaryAddress6Args{...} }
type IsisSummaryAddress6ArrayInput interface {
	pulumi.Input

	ToIsisSummaryAddress6ArrayOutput() IsisSummaryAddress6ArrayOutput
	ToIsisSummaryAddress6ArrayOutputWithContext(context.Context) IsisSummaryAddress6ArrayOutput
}

type IsisSummaryAddress6Array []IsisSummaryAddress6Input

func (IsisSummaryAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisSummaryAddress6)(nil)).Elem()
}

func (i IsisSummaryAddress6Array) ToIsisSummaryAddress6ArrayOutput() IsisSummaryAddress6ArrayOutput {
	return i.ToIsisSummaryAddress6ArrayOutputWithContext(context.Background())
}

func (i IsisSummaryAddress6Array) ToIsisSummaryAddress6ArrayOutputWithContext(ctx context.Context) IsisSummaryAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsisSummaryAddress6ArrayOutput)
}

type IsisSummaryAddress6Output struct{ *pulumi.OutputState }

func (IsisSummaryAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisSummaryAddress6)(nil)).Elem()
}

func (o IsisSummaryAddress6Output) ToIsisSummaryAddress6Output() IsisSummaryAddress6Output {
	return o
}

func (o IsisSummaryAddress6Output) ToIsisSummaryAddress6OutputWithContext(ctx context.Context) IsisSummaryAddress6Output {
	return o
}

// isis-net ID.
func (o IsisSummaryAddress6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisSummaryAddress6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
func (o IsisSummaryAddress6Output) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisSummaryAddress6) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// IPv6 prefix.
func (o IsisSummaryAddress6Output) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisSummaryAddress6) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type IsisSummaryAddress6ArrayOutput struct{ *pulumi.OutputState }

func (IsisSummaryAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisSummaryAddress6)(nil)).Elem()
}

func (o IsisSummaryAddress6ArrayOutput) ToIsisSummaryAddress6ArrayOutput() IsisSummaryAddress6ArrayOutput {
	return o
}

func (o IsisSummaryAddress6ArrayOutput) ToIsisSummaryAddress6ArrayOutputWithContext(ctx context.Context) IsisSummaryAddress6ArrayOutput {
	return o
}

func (o IsisSummaryAddress6ArrayOutput) Index(i pulumi.IntInput) IsisSummaryAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IsisSummaryAddress6 {
		return vs[0].([]IsisSummaryAddress6)[vs[1].(int)]
	}).(IsisSummaryAddress6Output)
}

type IsisSummaryAddress struct {
	// Prefix entry ID.
	Id *int `pulumi:"id"`
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level *string `pulumi:"level"`
	// Prefix.
	Prefix *string `pulumi:"prefix"`
}

// IsisSummaryAddressInput is an input type that accepts IsisSummaryAddressArgs and IsisSummaryAddressOutput values.
// You can construct a concrete instance of `IsisSummaryAddressInput` via:
//
//	IsisSummaryAddressArgs{...}
type IsisSummaryAddressInput interface {
	pulumi.Input

	ToIsisSummaryAddressOutput() IsisSummaryAddressOutput
	ToIsisSummaryAddressOutputWithContext(context.Context) IsisSummaryAddressOutput
}

type IsisSummaryAddressArgs struct {
	// Prefix entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (IsisSummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisSummaryAddress)(nil)).Elem()
}

func (i IsisSummaryAddressArgs) ToIsisSummaryAddressOutput() IsisSummaryAddressOutput {
	return i.ToIsisSummaryAddressOutputWithContext(context.Background())
}

func (i IsisSummaryAddressArgs) ToIsisSummaryAddressOutputWithContext(ctx context.Context) IsisSummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsisSummaryAddressOutput)
}

// IsisSummaryAddressArrayInput is an input type that accepts IsisSummaryAddressArray and IsisSummaryAddressArrayOutput values.
// You can construct a concrete instance of `IsisSummaryAddressArrayInput` via:
//
//	IsisSummaryAddressArray{ IsisSummaryAddressArgs{...} }
type IsisSummaryAddressArrayInput interface {
	pulumi.Input

	ToIsisSummaryAddressArrayOutput() IsisSummaryAddressArrayOutput
	ToIsisSummaryAddressArrayOutputWithContext(context.Context) IsisSummaryAddressArrayOutput
}

type IsisSummaryAddressArray []IsisSummaryAddressInput

func (IsisSummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisSummaryAddress)(nil)).Elem()
}

func (i IsisSummaryAddressArray) ToIsisSummaryAddressArrayOutput() IsisSummaryAddressArrayOutput {
	return i.ToIsisSummaryAddressArrayOutputWithContext(context.Background())
}

func (i IsisSummaryAddressArray) ToIsisSummaryAddressArrayOutputWithContext(ctx context.Context) IsisSummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsisSummaryAddressArrayOutput)
}

type IsisSummaryAddressOutput struct{ *pulumi.OutputState }

func (IsisSummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IsisSummaryAddress)(nil)).Elem()
}

func (o IsisSummaryAddressOutput) ToIsisSummaryAddressOutput() IsisSummaryAddressOutput {
	return o
}

func (o IsisSummaryAddressOutput) ToIsisSummaryAddressOutputWithContext(ctx context.Context) IsisSummaryAddressOutput {
	return o
}

// Prefix entry ID.
func (o IsisSummaryAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IsisSummaryAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
func (o IsisSummaryAddressOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisSummaryAddress) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Prefix.
func (o IsisSummaryAddressOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IsisSummaryAddress) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type IsisSummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (IsisSummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IsisSummaryAddress)(nil)).Elem()
}

func (o IsisSummaryAddressArrayOutput) ToIsisSummaryAddressArrayOutput() IsisSummaryAddressArrayOutput {
	return o
}

func (o IsisSummaryAddressArrayOutput) ToIsisSummaryAddressArrayOutputWithContext(ctx context.Context) IsisSummaryAddressArrayOutput {
	return o
}

func (o IsisSummaryAddressArrayOutput) Index(i pulumi.IntInput) IsisSummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IsisSummaryAddress {
		return vs[0].([]IsisSummaryAddress)[vs[1].(int)]
	}).(IsisSummaryAddressOutput)
}

type KeychainKey struct {
	// Lifetime of received authentication key (format: hh:mm:ss day month year).
	AcceptLifetime *string `pulumi:"acceptLifetime"`
	// Cryptographic algorithm.
	Algorithm *string `pulumi:"algorithm"`
	// Key ID (0 - 2147483647).
	Id *int `pulumi:"id"`
	// Password for the key. On FortiOS versions 6.2.0-7.0.0: max. = 35 characters. On FortiOS versions 7.0.1-7.0.3: maximum = 64 characters.
	KeyString *string `pulumi:"keyString"`
	// Lifetime of sent authentication key (format: hh:mm:ss day month year).
	SendLifetime *string `pulumi:"sendLifetime"`
}

// KeychainKeyInput is an input type that accepts KeychainKeyArgs and KeychainKeyOutput values.
// You can construct a concrete instance of `KeychainKeyInput` via:
//
//	KeychainKeyArgs{...}
type KeychainKeyInput interface {
	pulumi.Input

	ToKeychainKeyOutput() KeychainKeyOutput
	ToKeychainKeyOutputWithContext(context.Context) KeychainKeyOutput
}

type KeychainKeyArgs struct {
	// Lifetime of received authentication key (format: hh:mm:ss day month year).
	AcceptLifetime pulumi.StringPtrInput `pulumi:"acceptLifetime"`
	// Cryptographic algorithm.
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// Key ID (0 - 2147483647).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Password for the key. On FortiOS versions 6.2.0-7.0.0: max. = 35 characters. On FortiOS versions 7.0.1-7.0.3: maximum = 64 characters.
	KeyString pulumi.StringPtrInput `pulumi:"keyString"`
	// Lifetime of sent authentication key (format: hh:mm:ss day month year).
	SendLifetime pulumi.StringPtrInput `pulumi:"sendLifetime"`
}

func (KeychainKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeychainKey)(nil)).Elem()
}

func (i KeychainKeyArgs) ToKeychainKeyOutput() KeychainKeyOutput {
	return i.ToKeychainKeyOutputWithContext(context.Background())
}

func (i KeychainKeyArgs) ToKeychainKeyOutputWithContext(ctx context.Context) KeychainKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeychainKeyOutput)
}

// KeychainKeyArrayInput is an input type that accepts KeychainKeyArray and KeychainKeyArrayOutput values.
// You can construct a concrete instance of `KeychainKeyArrayInput` via:
//
//	KeychainKeyArray{ KeychainKeyArgs{...} }
type KeychainKeyArrayInput interface {
	pulumi.Input

	ToKeychainKeyArrayOutput() KeychainKeyArrayOutput
	ToKeychainKeyArrayOutputWithContext(context.Context) KeychainKeyArrayOutput
}

type KeychainKeyArray []KeychainKeyInput

func (KeychainKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeychainKey)(nil)).Elem()
}

func (i KeychainKeyArray) ToKeychainKeyArrayOutput() KeychainKeyArrayOutput {
	return i.ToKeychainKeyArrayOutputWithContext(context.Background())
}

func (i KeychainKeyArray) ToKeychainKeyArrayOutputWithContext(ctx context.Context) KeychainKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeychainKeyArrayOutput)
}

type KeychainKeyOutput struct{ *pulumi.OutputState }

func (KeychainKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeychainKey)(nil)).Elem()
}

func (o KeychainKeyOutput) ToKeychainKeyOutput() KeychainKeyOutput {
	return o
}

func (o KeychainKeyOutput) ToKeychainKeyOutputWithContext(ctx context.Context) KeychainKeyOutput {
	return o
}

// Lifetime of received authentication key (format: hh:mm:ss day month year).
func (o KeychainKeyOutput) AcceptLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeychainKey) *string { return v.AcceptLifetime }).(pulumi.StringPtrOutput)
}

// Cryptographic algorithm.
func (o KeychainKeyOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeychainKey) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// Key ID (0 - 2147483647).
func (o KeychainKeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KeychainKey) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Password for the key. On FortiOS versions 6.2.0-7.0.0: max. = 35 characters. On FortiOS versions 7.0.1-7.0.3: maximum = 64 characters.
func (o KeychainKeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeychainKey) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

// Lifetime of sent authentication key (format: hh:mm:ss day month year).
func (o KeychainKeyOutput) SendLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeychainKey) *string { return v.SendLifetime }).(pulumi.StringPtrOutput)
}

type KeychainKeyArrayOutput struct{ *pulumi.OutputState }

func (KeychainKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeychainKey)(nil)).Elem()
}

func (o KeychainKeyArrayOutput) ToKeychainKeyArrayOutput() KeychainKeyArrayOutput {
	return o
}

func (o KeychainKeyArrayOutput) ToKeychainKeyArrayOutputWithContext(ctx context.Context) KeychainKeyArrayOutput {
	return o
}

func (o KeychainKeyArrayOutput) Index(i pulumi.IntInput) KeychainKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeychainKey {
		return vs[0].([]KeychainKey)[vs[1].(int)]
	}).(KeychainKeyOutput)
}

type Multicast6Interface struct {
	// Time before old neighbor information expires in seconds (1 - 65535, default = 105).
	HelloHoldtime *int `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages in seconds (1 - 65535, default = 30).
	HelloInterval *int `pulumi:"helloInterval"`
	// Interface name.
	Name *string `pulumi:"name"`
}

// Multicast6InterfaceInput is an input type that accepts Multicast6InterfaceArgs and Multicast6InterfaceOutput values.
// You can construct a concrete instance of `Multicast6InterfaceInput` via:
//
//	Multicast6InterfaceArgs{...}
type Multicast6InterfaceInput interface {
	pulumi.Input

	ToMulticast6InterfaceOutput() Multicast6InterfaceOutput
	ToMulticast6InterfaceOutputWithContext(context.Context) Multicast6InterfaceOutput
}

type Multicast6InterfaceArgs struct {
	// Time before old neighbor information expires in seconds (1 - 65535, default = 105).
	HelloHoldtime pulumi.IntPtrInput `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages in seconds (1 - 65535, default = 30).
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Multicast6InterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicast6Interface)(nil)).Elem()
}

func (i Multicast6InterfaceArgs) ToMulticast6InterfaceOutput() Multicast6InterfaceOutput {
	return i.ToMulticast6InterfaceOutputWithContext(context.Background())
}

func (i Multicast6InterfaceArgs) ToMulticast6InterfaceOutputWithContext(ctx context.Context) Multicast6InterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicast6InterfaceOutput)
}

// Multicast6InterfaceArrayInput is an input type that accepts Multicast6InterfaceArray and Multicast6InterfaceArrayOutput values.
// You can construct a concrete instance of `Multicast6InterfaceArrayInput` via:
//
//	Multicast6InterfaceArray{ Multicast6InterfaceArgs{...} }
type Multicast6InterfaceArrayInput interface {
	pulumi.Input

	ToMulticast6InterfaceArrayOutput() Multicast6InterfaceArrayOutput
	ToMulticast6InterfaceArrayOutputWithContext(context.Context) Multicast6InterfaceArrayOutput
}

type Multicast6InterfaceArray []Multicast6InterfaceInput

func (Multicast6InterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicast6Interface)(nil)).Elem()
}

func (i Multicast6InterfaceArray) ToMulticast6InterfaceArrayOutput() Multicast6InterfaceArrayOutput {
	return i.ToMulticast6InterfaceArrayOutputWithContext(context.Background())
}

func (i Multicast6InterfaceArray) ToMulticast6InterfaceArrayOutputWithContext(ctx context.Context) Multicast6InterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicast6InterfaceArrayOutput)
}

type Multicast6InterfaceOutput struct{ *pulumi.OutputState }

func (Multicast6InterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicast6Interface)(nil)).Elem()
}

func (o Multicast6InterfaceOutput) ToMulticast6InterfaceOutput() Multicast6InterfaceOutput {
	return o
}

func (o Multicast6InterfaceOutput) ToMulticast6InterfaceOutputWithContext(ctx context.Context) Multicast6InterfaceOutput {
	return o
}

// Time before old neighbor information expires in seconds (1 - 65535, default = 105).
func (o Multicast6InterfaceOutput) HelloHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Multicast6Interface) *int { return v.HelloHoldtime }).(pulumi.IntPtrOutput)
}

// Interval between sending PIM hello messages in seconds (1 - 65535, default = 30).
func (o Multicast6InterfaceOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Multicast6Interface) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o Multicast6InterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Multicast6Interface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Multicast6InterfaceArrayOutput struct{ *pulumi.OutputState }

func (Multicast6InterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicast6Interface)(nil)).Elem()
}

func (o Multicast6InterfaceArrayOutput) ToMulticast6InterfaceArrayOutput() Multicast6InterfaceArrayOutput {
	return o
}

func (o Multicast6InterfaceArrayOutput) ToMulticast6InterfaceArrayOutputWithContext(ctx context.Context) Multicast6InterfaceArrayOutput {
	return o
}

func (o Multicast6InterfaceArrayOutput) Index(i pulumi.IntInput) Multicast6InterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Multicast6Interface {
		return vs[0].([]Multicast6Interface)[vs[1].(int)]
	}).(Multicast6InterfaceOutput)
}

type Multicast6PimSmGlobal struct {
	// Limit of packets/sec per source registered through this RP (0 means unlimited).
	RegisterRateLimit *int `pulumi:"registerRateLimit"`
	// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses []Multicast6PimSmGlobalRpAddress `pulumi:"rpAddresses"`
}

// Multicast6PimSmGlobalInput is an input type that accepts Multicast6PimSmGlobalArgs and Multicast6PimSmGlobalOutput values.
// You can construct a concrete instance of `Multicast6PimSmGlobalInput` via:
//
//	Multicast6PimSmGlobalArgs{...}
type Multicast6PimSmGlobalInput interface {
	pulumi.Input

	ToMulticast6PimSmGlobalOutput() Multicast6PimSmGlobalOutput
	ToMulticast6PimSmGlobalOutputWithContext(context.Context) Multicast6PimSmGlobalOutput
}

type Multicast6PimSmGlobalArgs struct {
	// Limit of packets/sec per source registered through this RP (0 means unlimited).
	RegisterRateLimit pulumi.IntPtrInput `pulumi:"registerRateLimit"`
	// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses Multicast6PimSmGlobalRpAddressArrayInput `pulumi:"rpAddresses"`
}

func (Multicast6PimSmGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicast6PimSmGlobal)(nil)).Elem()
}

func (i Multicast6PimSmGlobalArgs) ToMulticast6PimSmGlobalOutput() Multicast6PimSmGlobalOutput {
	return i.ToMulticast6PimSmGlobalOutputWithContext(context.Background())
}

func (i Multicast6PimSmGlobalArgs) ToMulticast6PimSmGlobalOutputWithContext(ctx context.Context) Multicast6PimSmGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicast6PimSmGlobalOutput)
}

func (i Multicast6PimSmGlobalArgs) ToMulticast6PimSmGlobalPtrOutput() Multicast6PimSmGlobalPtrOutput {
	return i.ToMulticast6PimSmGlobalPtrOutputWithContext(context.Background())
}

func (i Multicast6PimSmGlobalArgs) ToMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) Multicast6PimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicast6PimSmGlobalOutput).ToMulticast6PimSmGlobalPtrOutputWithContext(ctx)
}

// Multicast6PimSmGlobalPtrInput is an input type that accepts Multicast6PimSmGlobalArgs, Multicast6PimSmGlobalPtr and Multicast6PimSmGlobalPtrOutput values.
// You can construct a concrete instance of `Multicast6PimSmGlobalPtrInput` via:
//
//	        Multicast6PimSmGlobalArgs{...}
//
//	or:
//
//	        nil
type Multicast6PimSmGlobalPtrInput interface {
	pulumi.Input

	ToMulticast6PimSmGlobalPtrOutput() Multicast6PimSmGlobalPtrOutput
	ToMulticast6PimSmGlobalPtrOutputWithContext(context.Context) Multicast6PimSmGlobalPtrOutput
}

type multicast6PimSmGlobalPtrType Multicast6PimSmGlobalArgs

func Multicast6PimSmGlobalPtr(v *Multicast6PimSmGlobalArgs) Multicast6PimSmGlobalPtrInput {
	return (*multicast6PimSmGlobalPtrType)(v)
}

func (*multicast6PimSmGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Multicast6PimSmGlobal)(nil)).Elem()
}

func (i *multicast6PimSmGlobalPtrType) ToMulticast6PimSmGlobalPtrOutput() Multicast6PimSmGlobalPtrOutput {
	return i.ToMulticast6PimSmGlobalPtrOutputWithContext(context.Background())
}

func (i *multicast6PimSmGlobalPtrType) ToMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) Multicast6PimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicast6PimSmGlobalPtrOutput)
}

type Multicast6PimSmGlobalOutput struct{ *pulumi.OutputState }

func (Multicast6PimSmGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicast6PimSmGlobal)(nil)).Elem()
}

func (o Multicast6PimSmGlobalOutput) ToMulticast6PimSmGlobalOutput() Multicast6PimSmGlobalOutput {
	return o
}

func (o Multicast6PimSmGlobalOutput) ToMulticast6PimSmGlobalOutputWithContext(ctx context.Context) Multicast6PimSmGlobalOutput {
	return o
}

func (o Multicast6PimSmGlobalOutput) ToMulticast6PimSmGlobalPtrOutput() Multicast6PimSmGlobalPtrOutput {
	return o.ToMulticast6PimSmGlobalPtrOutputWithContext(context.Background())
}

func (o Multicast6PimSmGlobalOutput) ToMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) Multicast6PimSmGlobalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Multicast6PimSmGlobal) *Multicast6PimSmGlobal {
		return &v
	}).(Multicast6PimSmGlobalPtrOutput)
}

// Limit of packets/sec per source registered through this RP (0 means unlimited).
func (o Multicast6PimSmGlobalOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Multicast6PimSmGlobal) *int { return v.RegisterRateLimit }).(pulumi.IntPtrOutput)
}

// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
func (o Multicast6PimSmGlobalOutput) RpAddresses() Multicast6PimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v Multicast6PimSmGlobal) []Multicast6PimSmGlobalRpAddress { return v.RpAddresses }).(Multicast6PimSmGlobalRpAddressArrayOutput)
}

type Multicast6PimSmGlobalPtrOutput struct{ *pulumi.OutputState }

func (Multicast6PimSmGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Multicast6PimSmGlobal)(nil)).Elem()
}

func (o Multicast6PimSmGlobalPtrOutput) ToMulticast6PimSmGlobalPtrOutput() Multicast6PimSmGlobalPtrOutput {
	return o
}

func (o Multicast6PimSmGlobalPtrOutput) ToMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) Multicast6PimSmGlobalPtrOutput {
	return o
}

func (o Multicast6PimSmGlobalPtrOutput) Elem() Multicast6PimSmGlobalOutput {
	return o.ApplyT(func(v *Multicast6PimSmGlobal) Multicast6PimSmGlobal {
		if v != nil {
			return *v
		}
		var ret Multicast6PimSmGlobal
		return ret
	}).(Multicast6PimSmGlobalOutput)
}

// Limit of packets/sec per source registered through this RP (0 means unlimited).
func (o Multicast6PimSmGlobalPtrOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Multicast6PimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RegisterRateLimit
	}).(pulumi.IntPtrOutput)
}

// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
func (o Multicast6PimSmGlobalPtrOutput) RpAddresses() Multicast6PimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v *Multicast6PimSmGlobal) []Multicast6PimSmGlobalRpAddress {
		if v == nil {
			return nil
		}
		return v.RpAddresses
	}).(Multicast6PimSmGlobalRpAddressArrayOutput)
}

type Multicast6PimSmGlobalRpAddress struct {
	// ID of the entry.
	Id *int `pulumi:"id"`
	// RP router IPv6 address.
	Ip6Address *string `pulumi:"ip6Address"`
}

// Multicast6PimSmGlobalRpAddressInput is an input type that accepts Multicast6PimSmGlobalRpAddressArgs and Multicast6PimSmGlobalRpAddressOutput values.
// You can construct a concrete instance of `Multicast6PimSmGlobalRpAddressInput` via:
//
//	Multicast6PimSmGlobalRpAddressArgs{...}
type Multicast6PimSmGlobalRpAddressInput interface {
	pulumi.Input

	ToMulticast6PimSmGlobalRpAddressOutput() Multicast6PimSmGlobalRpAddressOutput
	ToMulticast6PimSmGlobalRpAddressOutputWithContext(context.Context) Multicast6PimSmGlobalRpAddressOutput
}

type Multicast6PimSmGlobalRpAddressArgs struct {
	// ID of the entry.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// RP router IPv6 address.
	Ip6Address pulumi.StringPtrInput `pulumi:"ip6Address"`
}

func (Multicast6PimSmGlobalRpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (i Multicast6PimSmGlobalRpAddressArgs) ToMulticast6PimSmGlobalRpAddressOutput() Multicast6PimSmGlobalRpAddressOutput {
	return i.ToMulticast6PimSmGlobalRpAddressOutputWithContext(context.Background())
}

func (i Multicast6PimSmGlobalRpAddressArgs) ToMulticast6PimSmGlobalRpAddressOutputWithContext(ctx context.Context) Multicast6PimSmGlobalRpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicast6PimSmGlobalRpAddressOutput)
}

// Multicast6PimSmGlobalRpAddressArrayInput is an input type that accepts Multicast6PimSmGlobalRpAddressArray and Multicast6PimSmGlobalRpAddressArrayOutput values.
// You can construct a concrete instance of `Multicast6PimSmGlobalRpAddressArrayInput` via:
//
//	Multicast6PimSmGlobalRpAddressArray{ Multicast6PimSmGlobalRpAddressArgs{...} }
type Multicast6PimSmGlobalRpAddressArrayInput interface {
	pulumi.Input

	ToMulticast6PimSmGlobalRpAddressArrayOutput() Multicast6PimSmGlobalRpAddressArrayOutput
	ToMulticast6PimSmGlobalRpAddressArrayOutputWithContext(context.Context) Multicast6PimSmGlobalRpAddressArrayOutput
}

type Multicast6PimSmGlobalRpAddressArray []Multicast6PimSmGlobalRpAddressInput

func (Multicast6PimSmGlobalRpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (i Multicast6PimSmGlobalRpAddressArray) ToMulticast6PimSmGlobalRpAddressArrayOutput() Multicast6PimSmGlobalRpAddressArrayOutput {
	return i.ToMulticast6PimSmGlobalRpAddressArrayOutputWithContext(context.Background())
}

func (i Multicast6PimSmGlobalRpAddressArray) ToMulticast6PimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) Multicast6PimSmGlobalRpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicast6PimSmGlobalRpAddressArrayOutput)
}

type Multicast6PimSmGlobalRpAddressOutput struct{ *pulumi.OutputState }

func (Multicast6PimSmGlobalRpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (o Multicast6PimSmGlobalRpAddressOutput) ToMulticast6PimSmGlobalRpAddressOutput() Multicast6PimSmGlobalRpAddressOutput {
	return o
}

func (o Multicast6PimSmGlobalRpAddressOutput) ToMulticast6PimSmGlobalRpAddressOutputWithContext(ctx context.Context) Multicast6PimSmGlobalRpAddressOutput {
	return o
}

// ID of the entry.
func (o Multicast6PimSmGlobalRpAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Multicast6PimSmGlobalRpAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// RP router IPv6 address.
func (o Multicast6PimSmGlobalRpAddressOutput) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Multicast6PimSmGlobalRpAddress) *string { return v.Ip6Address }).(pulumi.StringPtrOutput)
}

type Multicast6PimSmGlobalRpAddressArrayOutput struct{ *pulumi.OutputState }

func (Multicast6PimSmGlobalRpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (o Multicast6PimSmGlobalRpAddressArrayOutput) ToMulticast6PimSmGlobalRpAddressArrayOutput() Multicast6PimSmGlobalRpAddressArrayOutput {
	return o
}

func (o Multicast6PimSmGlobalRpAddressArrayOutput) ToMulticast6PimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) Multicast6PimSmGlobalRpAddressArrayOutput {
	return o
}

func (o Multicast6PimSmGlobalRpAddressArrayOutput) Index(i pulumi.IntInput) Multicast6PimSmGlobalRpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Multicast6PimSmGlobalRpAddress {
		return vs[0].([]Multicast6PimSmGlobalRpAddress)[vs[1].(int)]
	}).(Multicast6PimSmGlobalRpAddressOutput)
}

type MulticastInterface struct {
	// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Exclude GenID from hello packets (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
	CiscoExcludeGenid *string `pulumi:"ciscoExcludeGenid"`
	// DR election priority.
	DrPriority *int `pulumi:"drPriority"`
	// Time before old neighbor information expires (0 - 65535 sec, default = 105).
	HelloHoldtime *int `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
	HelloInterval *int `pulumi:"helloInterval"`
	// IGMP configuration options. The structure of `igmp` block is documented below.
	Igmp *MulticastInterfaceIgmp `pulumi:"igmp"`
	// Join multicast groups. The structure of `joinGroup` block is documented below.
	JoinGroups []MulticastInterfaceJoinGroup `pulumi:"joinGroups"`
	// Acceptable source for multicast group.
	MulticastFlow *string `pulumi:"multicastFlow"`
	// Interface name.
	Name *string `pulumi:"name"`
	// Routers acknowledged as neighbor routers.
	NeighbourFilter *string `pulumi:"neighbourFilter"`
	// Enable/disable listening to IGMP but not participating in PIM. Valid values: `enable`, `disable`.
	Passive *string `pulumi:"passive"`
	// PIM operation mode. Valid values: `sparse-mode`, `dense-mode`.
	PimMode *string `pulumi:"pimMode"`
	// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
	PropagationDelay *int `pulumi:"propagationDelay"`
	// Enable/disable compete to become RP in elections. Valid values: `enable`, `disable`.
	RpCandidate *string `pulumi:"rpCandidate"`
	// Multicast groups managed by this RP.
	RpCandidateGroup *string `pulumi:"rpCandidateGroup"`
	// RP candidate advertisement interval (1 - 16383 sec, default = 60).
	RpCandidateInterval *int `pulumi:"rpCandidateInterval"`
	// Router's priority as RP.
	RpCandidatePriority *int `pulumi:"rpCandidatePriority"`
	// Enable/disable fail back for RPF neighbor query. Valid values: `enable`, `disable`.
	RpfNbrFailBack *string `pulumi:"rpfNbrFailBack"`
	// Filter for fail back RPF neighbors.
	RpfNbrFailBackFilter *string `pulumi:"rpfNbrFailBackFilter"`
	// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
	StateRefreshInterval *int `pulumi:"stateRefreshInterval"`
	// Statically set multicast groups to forward out.
	StaticGroup *string `pulumi:"staticGroup"`
	// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
	TtlThreshold *int `pulumi:"ttlThreshold"`
}

// MulticastInterfaceInput is an input type that accepts MulticastInterfaceArgs and MulticastInterfaceOutput values.
// You can construct a concrete instance of `MulticastInterfaceInput` via:
//
//	MulticastInterfaceArgs{...}
type MulticastInterfaceInput interface {
	pulumi.Input

	ToMulticastInterfaceOutput() MulticastInterfaceOutput
	ToMulticastInterfaceOutputWithContext(context.Context) MulticastInterfaceOutput
}

type MulticastInterfaceArgs struct {
	// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Exclude GenID from hello packets (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
	CiscoExcludeGenid pulumi.StringPtrInput `pulumi:"ciscoExcludeGenid"`
	// DR election priority.
	DrPriority pulumi.IntPtrInput `pulumi:"drPriority"`
	// Time before old neighbor information expires (0 - 65535 sec, default = 105).
	HelloHoldtime pulumi.IntPtrInput `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// IGMP configuration options. The structure of `igmp` block is documented below.
	Igmp MulticastInterfaceIgmpPtrInput `pulumi:"igmp"`
	// Join multicast groups. The structure of `joinGroup` block is documented below.
	JoinGroups MulticastInterfaceJoinGroupArrayInput `pulumi:"joinGroups"`
	// Acceptable source for multicast group.
	MulticastFlow pulumi.StringPtrInput `pulumi:"multicastFlow"`
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Routers acknowledged as neighbor routers.
	NeighbourFilter pulumi.StringPtrInput `pulumi:"neighbourFilter"`
	// Enable/disable listening to IGMP but not participating in PIM. Valid values: `enable`, `disable`.
	Passive pulumi.StringPtrInput `pulumi:"passive"`
	// PIM operation mode. Valid values: `sparse-mode`, `dense-mode`.
	PimMode pulumi.StringPtrInput `pulumi:"pimMode"`
	// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
	PropagationDelay pulumi.IntPtrInput `pulumi:"propagationDelay"`
	// Enable/disable compete to become RP in elections. Valid values: `enable`, `disable`.
	RpCandidate pulumi.StringPtrInput `pulumi:"rpCandidate"`
	// Multicast groups managed by this RP.
	RpCandidateGroup pulumi.StringPtrInput `pulumi:"rpCandidateGroup"`
	// RP candidate advertisement interval (1 - 16383 sec, default = 60).
	RpCandidateInterval pulumi.IntPtrInput `pulumi:"rpCandidateInterval"`
	// Router's priority as RP.
	RpCandidatePriority pulumi.IntPtrInput `pulumi:"rpCandidatePriority"`
	// Enable/disable fail back for RPF neighbor query. Valid values: `enable`, `disable`.
	RpfNbrFailBack pulumi.StringPtrInput `pulumi:"rpfNbrFailBack"`
	// Filter for fail back RPF neighbors.
	RpfNbrFailBackFilter pulumi.StringPtrInput `pulumi:"rpfNbrFailBackFilter"`
	// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
	StateRefreshInterval pulumi.IntPtrInput `pulumi:"stateRefreshInterval"`
	// Statically set multicast groups to forward out.
	StaticGroup pulumi.StringPtrInput `pulumi:"staticGroup"`
	// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
	TtlThreshold pulumi.IntPtrInput `pulumi:"ttlThreshold"`
}

func (MulticastInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastInterface)(nil)).Elem()
}

func (i MulticastInterfaceArgs) ToMulticastInterfaceOutput() MulticastInterfaceOutput {
	return i.ToMulticastInterfaceOutputWithContext(context.Background())
}

func (i MulticastInterfaceArgs) ToMulticastInterfaceOutputWithContext(ctx context.Context) MulticastInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastInterfaceOutput)
}

// MulticastInterfaceArrayInput is an input type that accepts MulticastInterfaceArray and MulticastInterfaceArrayOutput values.
// You can construct a concrete instance of `MulticastInterfaceArrayInput` via:
//
//	MulticastInterfaceArray{ MulticastInterfaceArgs{...} }
type MulticastInterfaceArrayInput interface {
	pulumi.Input

	ToMulticastInterfaceArrayOutput() MulticastInterfaceArrayOutput
	ToMulticastInterfaceArrayOutputWithContext(context.Context) MulticastInterfaceArrayOutput
}

type MulticastInterfaceArray []MulticastInterfaceInput

func (MulticastInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastInterface)(nil)).Elem()
}

func (i MulticastInterfaceArray) ToMulticastInterfaceArrayOutput() MulticastInterfaceArrayOutput {
	return i.ToMulticastInterfaceArrayOutputWithContext(context.Background())
}

func (i MulticastInterfaceArray) ToMulticastInterfaceArrayOutputWithContext(ctx context.Context) MulticastInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastInterfaceArrayOutput)
}

type MulticastInterfaceOutput struct{ *pulumi.OutputState }

func (MulticastInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastInterface)(nil)).Elem()
}

func (o MulticastInterfaceOutput) ToMulticastInterfaceOutput() MulticastInterfaceOutput {
	return o
}

func (o MulticastInterfaceOutput) ToMulticastInterfaceOutputWithContext(ctx context.Context) MulticastInterfaceOutput {
	return o
}

// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
func (o MulticastInterfaceOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Exclude GenID from hello packets (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
func (o MulticastInterfaceOutput) CiscoExcludeGenid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.CiscoExcludeGenid }).(pulumi.StringPtrOutput)
}

// DR election priority.
func (o MulticastInterfaceOutput) DrPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *int { return v.DrPriority }).(pulumi.IntPtrOutput)
}

// Time before old neighbor information expires (0 - 65535 sec, default = 105).
func (o MulticastInterfaceOutput) HelloHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *int { return v.HelloHoldtime }).(pulumi.IntPtrOutput)
}

// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
func (o MulticastInterfaceOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// IGMP configuration options. The structure of `igmp` block is documented below.
func (o MulticastInterfaceOutput) Igmp() MulticastInterfaceIgmpPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *MulticastInterfaceIgmp { return v.Igmp }).(MulticastInterfaceIgmpPtrOutput)
}

// Join multicast groups. The structure of `joinGroup` block is documented below.
func (o MulticastInterfaceOutput) JoinGroups() MulticastInterfaceJoinGroupArrayOutput {
	return o.ApplyT(func(v MulticastInterface) []MulticastInterfaceJoinGroup { return v.JoinGroups }).(MulticastInterfaceJoinGroupArrayOutput)
}

// Acceptable source for multicast group.
func (o MulticastInterfaceOutput) MulticastFlow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.MulticastFlow }).(pulumi.StringPtrOutput)
}

// Interface name.
func (o MulticastInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Routers acknowledged as neighbor routers.
func (o MulticastInterfaceOutput) NeighbourFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.NeighbourFilter }).(pulumi.StringPtrOutput)
}

// Enable/disable listening to IGMP but not participating in PIM. Valid values: `enable`, `disable`.
func (o MulticastInterfaceOutput) Passive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.Passive }).(pulumi.StringPtrOutput)
}

// PIM operation mode. Valid values: `sparse-mode`, `dense-mode`.
func (o MulticastInterfaceOutput) PimMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.PimMode }).(pulumi.StringPtrOutput)
}

// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
func (o MulticastInterfaceOutput) PropagationDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *int { return v.PropagationDelay }).(pulumi.IntPtrOutput)
}

// Enable/disable compete to become RP in elections. Valid values: `enable`, `disable`.
func (o MulticastInterfaceOutput) RpCandidate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.RpCandidate }).(pulumi.StringPtrOutput)
}

// Multicast groups managed by this RP.
func (o MulticastInterfaceOutput) RpCandidateGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.RpCandidateGroup }).(pulumi.StringPtrOutput)
}

// RP candidate advertisement interval (1 - 16383 sec, default = 60).
func (o MulticastInterfaceOutput) RpCandidateInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *int { return v.RpCandidateInterval }).(pulumi.IntPtrOutput)
}

// Router's priority as RP.
func (o MulticastInterfaceOutput) RpCandidatePriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *int { return v.RpCandidatePriority }).(pulumi.IntPtrOutput)
}

// Enable/disable fail back for RPF neighbor query. Valid values: `enable`, `disable`.
func (o MulticastInterfaceOutput) RpfNbrFailBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.RpfNbrFailBack }).(pulumi.StringPtrOutput)
}

// Filter for fail back RPF neighbors.
func (o MulticastInterfaceOutput) RpfNbrFailBackFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.RpfNbrFailBackFilter }).(pulumi.StringPtrOutput)
}

// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
func (o MulticastInterfaceOutput) StateRefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *int { return v.StateRefreshInterval }).(pulumi.IntPtrOutput)
}

// Statically set multicast groups to forward out.
func (o MulticastInterfaceOutput) StaticGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *string { return v.StaticGroup }).(pulumi.StringPtrOutput)
}

// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
func (o MulticastInterfaceOutput) TtlThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterface) *int { return v.TtlThreshold }).(pulumi.IntPtrOutput)
}

type MulticastInterfaceArrayOutput struct{ *pulumi.OutputState }

func (MulticastInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastInterface)(nil)).Elem()
}

func (o MulticastInterfaceArrayOutput) ToMulticastInterfaceArrayOutput() MulticastInterfaceArrayOutput {
	return o
}

func (o MulticastInterfaceArrayOutput) ToMulticastInterfaceArrayOutputWithContext(ctx context.Context) MulticastInterfaceArrayOutput {
	return o
}

func (o MulticastInterfaceArrayOutput) Index(i pulumi.IntInput) MulticastInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MulticastInterface {
		return vs[0].([]MulticastInterface)[vs[1].(int)]
	}).(MulticastInterfaceOutput)
}

type MulticastInterfaceIgmp struct {
	// Groups IGMP hosts are allowed to join.
	AccessGroup *string `pulumi:"accessGroup"`
	// Groups to drop membership for immediately after receiving IGMPv2 leave.
	ImmediateLeaveGroup *string `pulumi:"immediateLeaveGroup"`
	// Number of group specific queries before removing group (2 - 7, default = 2).
	LastMemberQueryCount *int `pulumi:"lastMemberQueryCount"`
	// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
	LastMemberQueryInterval *int `pulumi:"lastMemberQueryInterval"`
	// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
	QueryInterval *int `pulumi:"queryInterval"`
	// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
	QueryMaxResponseTime *int `pulumi:"queryMaxResponseTime"`
	// Timeout between queries before becoming querying unit for network (60 - 900, default = 255).
	QueryTimeout *int `pulumi:"queryTimeout"`
	// Enable/disable require IGMP packets contain router alert option. Valid values: `enable`, `disable`.
	RouterAlertCheck *string `pulumi:"routerAlertCheck"`
	// Maximum version of IGMP to support. Valid values: `3`, `2`, `1`.
	Version *string `pulumi:"version"`
}

// MulticastInterfaceIgmpInput is an input type that accepts MulticastInterfaceIgmpArgs and MulticastInterfaceIgmpOutput values.
// You can construct a concrete instance of `MulticastInterfaceIgmpInput` via:
//
//	MulticastInterfaceIgmpArgs{...}
type MulticastInterfaceIgmpInput interface {
	pulumi.Input

	ToMulticastInterfaceIgmpOutput() MulticastInterfaceIgmpOutput
	ToMulticastInterfaceIgmpOutputWithContext(context.Context) MulticastInterfaceIgmpOutput
}

type MulticastInterfaceIgmpArgs struct {
	// Groups IGMP hosts are allowed to join.
	AccessGroup pulumi.StringPtrInput `pulumi:"accessGroup"`
	// Groups to drop membership for immediately after receiving IGMPv2 leave.
	ImmediateLeaveGroup pulumi.StringPtrInput `pulumi:"immediateLeaveGroup"`
	// Number of group specific queries before removing group (2 - 7, default = 2).
	LastMemberQueryCount pulumi.IntPtrInput `pulumi:"lastMemberQueryCount"`
	// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
	LastMemberQueryInterval pulumi.IntPtrInput `pulumi:"lastMemberQueryInterval"`
	// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
	QueryInterval pulumi.IntPtrInput `pulumi:"queryInterval"`
	// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
	QueryMaxResponseTime pulumi.IntPtrInput `pulumi:"queryMaxResponseTime"`
	// Timeout between queries before becoming querying unit for network (60 - 900, default = 255).
	QueryTimeout pulumi.IntPtrInput `pulumi:"queryTimeout"`
	// Enable/disable require IGMP packets contain router alert option. Valid values: `enable`, `disable`.
	RouterAlertCheck pulumi.StringPtrInput `pulumi:"routerAlertCheck"`
	// Maximum version of IGMP to support. Valid values: `3`, `2`, `1`.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (MulticastInterfaceIgmpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastInterfaceIgmp)(nil)).Elem()
}

func (i MulticastInterfaceIgmpArgs) ToMulticastInterfaceIgmpOutput() MulticastInterfaceIgmpOutput {
	return i.ToMulticastInterfaceIgmpOutputWithContext(context.Background())
}

func (i MulticastInterfaceIgmpArgs) ToMulticastInterfaceIgmpOutputWithContext(ctx context.Context) MulticastInterfaceIgmpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastInterfaceIgmpOutput)
}

func (i MulticastInterfaceIgmpArgs) ToMulticastInterfaceIgmpPtrOutput() MulticastInterfaceIgmpPtrOutput {
	return i.ToMulticastInterfaceIgmpPtrOutputWithContext(context.Background())
}

func (i MulticastInterfaceIgmpArgs) ToMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) MulticastInterfaceIgmpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastInterfaceIgmpOutput).ToMulticastInterfaceIgmpPtrOutputWithContext(ctx)
}

// MulticastInterfaceIgmpPtrInput is an input type that accepts MulticastInterfaceIgmpArgs, MulticastInterfaceIgmpPtr and MulticastInterfaceIgmpPtrOutput values.
// You can construct a concrete instance of `MulticastInterfaceIgmpPtrInput` via:
//
//	        MulticastInterfaceIgmpArgs{...}
//
//	or:
//
//	        nil
type MulticastInterfaceIgmpPtrInput interface {
	pulumi.Input

	ToMulticastInterfaceIgmpPtrOutput() MulticastInterfaceIgmpPtrOutput
	ToMulticastInterfaceIgmpPtrOutputWithContext(context.Context) MulticastInterfaceIgmpPtrOutput
}

type multicastInterfaceIgmpPtrType MulticastInterfaceIgmpArgs

func MulticastInterfaceIgmpPtr(v *MulticastInterfaceIgmpArgs) MulticastInterfaceIgmpPtrInput {
	return (*multicastInterfaceIgmpPtrType)(v)
}

func (*multicastInterfaceIgmpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MulticastInterfaceIgmp)(nil)).Elem()
}

func (i *multicastInterfaceIgmpPtrType) ToMulticastInterfaceIgmpPtrOutput() MulticastInterfaceIgmpPtrOutput {
	return i.ToMulticastInterfaceIgmpPtrOutputWithContext(context.Background())
}

func (i *multicastInterfaceIgmpPtrType) ToMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) MulticastInterfaceIgmpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastInterfaceIgmpPtrOutput)
}

type MulticastInterfaceIgmpOutput struct{ *pulumi.OutputState }

func (MulticastInterfaceIgmpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastInterfaceIgmp)(nil)).Elem()
}

func (o MulticastInterfaceIgmpOutput) ToMulticastInterfaceIgmpOutput() MulticastInterfaceIgmpOutput {
	return o
}

func (o MulticastInterfaceIgmpOutput) ToMulticastInterfaceIgmpOutputWithContext(ctx context.Context) MulticastInterfaceIgmpOutput {
	return o
}

func (o MulticastInterfaceIgmpOutput) ToMulticastInterfaceIgmpPtrOutput() MulticastInterfaceIgmpPtrOutput {
	return o.ToMulticastInterfaceIgmpPtrOutputWithContext(context.Background())
}

func (o MulticastInterfaceIgmpOutput) ToMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) MulticastInterfaceIgmpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MulticastInterfaceIgmp) *MulticastInterfaceIgmp {
		return &v
	}).(MulticastInterfaceIgmpPtrOutput)
}

// Groups IGMP hosts are allowed to join.
func (o MulticastInterfaceIgmpOutput) AccessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterfaceIgmp) *string { return v.AccessGroup }).(pulumi.StringPtrOutput)
}

// Groups to drop membership for immediately after receiving IGMPv2 leave.
func (o MulticastInterfaceIgmpOutput) ImmediateLeaveGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterfaceIgmp) *string { return v.ImmediateLeaveGroup }).(pulumi.StringPtrOutput)
}

// Number of group specific queries before removing group (2 - 7, default = 2).
func (o MulticastInterfaceIgmpOutput) LastMemberQueryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterfaceIgmp) *int { return v.LastMemberQueryCount }).(pulumi.IntPtrOutput)
}

// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
func (o MulticastInterfaceIgmpOutput) LastMemberQueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterfaceIgmp) *int { return v.LastMemberQueryInterval }).(pulumi.IntPtrOutput)
}

// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
func (o MulticastInterfaceIgmpOutput) QueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterfaceIgmp) *int { return v.QueryInterval }).(pulumi.IntPtrOutput)
}

// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
func (o MulticastInterfaceIgmpOutput) QueryMaxResponseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterfaceIgmp) *int { return v.QueryMaxResponseTime }).(pulumi.IntPtrOutput)
}

// Timeout between queries before becoming querying unit for network (60 - 900, default = 255).
func (o MulticastInterfaceIgmpOutput) QueryTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastInterfaceIgmp) *int { return v.QueryTimeout }).(pulumi.IntPtrOutput)
}

// Enable/disable require IGMP packets contain router alert option. Valid values: `enable`, `disable`.
func (o MulticastInterfaceIgmpOutput) RouterAlertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterfaceIgmp) *string { return v.RouterAlertCheck }).(pulumi.StringPtrOutput)
}

// Maximum version of IGMP to support. Valid values: `3`, `2`, `1`.
func (o MulticastInterfaceIgmpOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterfaceIgmp) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MulticastInterfaceIgmpPtrOutput struct{ *pulumi.OutputState }

func (MulticastInterfaceIgmpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MulticastInterfaceIgmp)(nil)).Elem()
}

func (o MulticastInterfaceIgmpPtrOutput) ToMulticastInterfaceIgmpPtrOutput() MulticastInterfaceIgmpPtrOutput {
	return o
}

func (o MulticastInterfaceIgmpPtrOutput) ToMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) MulticastInterfaceIgmpPtrOutput {
	return o
}

func (o MulticastInterfaceIgmpPtrOutput) Elem() MulticastInterfaceIgmpOutput {
	return o.ApplyT(func(v *MulticastInterfaceIgmp) MulticastInterfaceIgmp {
		if v != nil {
			return *v
		}
		var ret MulticastInterfaceIgmp
		return ret
	}).(MulticastInterfaceIgmpOutput)
}

// Groups IGMP hosts are allowed to join.
func (o MulticastInterfaceIgmpPtrOutput) AccessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.AccessGroup
	}).(pulumi.StringPtrOutput)
}

// Groups to drop membership for immediately after receiving IGMPv2 leave.
func (o MulticastInterfaceIgmpPtrOutput) ImmediateLeaveGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.ImmediateLeaveGroup
	}).(pulumi.StringPtrOutput)
}

// Number of group specific queries before removing group (2 - 7, default = 2).
func (o MulticastInterfaceIgmpPtrOutput) LastMemberQueryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.LastMemberQueryCount
	}).(pulumi.IntPtrOutput)
}

// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
func (o MulticastInterfaceIgmpPtrOutput) LastMemberQueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.LastMemberQueryInterval
	}).(pulumi.IntPtrOutput)
}

// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
func (o MulticastInterfaceIgmpPtrOutput) QueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.QueryInterval
	}).(pulumi.IntPtrOutput)
}

// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
func (o MulticastInterfaceIgmpPtrOutput) QueryMaxResponseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.QueryMaxResponseTime
	}).(pulumi.IntPtrOutput)
}

// Timeout between queries before becoming querying unit for network (60 - 900, default = 255).
func (o MulticastInterfaceIgmpPtrOutput) QueryTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.QueryTimeout
	}).(pulumi.IntPtrOutput)
}

// Enable/disable require IGMP packets contain router alert option. Valid values: `enable`, `disable`.
func (o MulticastInterfaceIgmpPtrOutput) RouterAlertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.RouterAlertCheck
	}).(pulumi.StringPtrOutput)
}

// Maximum version of IGMP to support. Valid values: `3`, `2`, `1`.
func (o MulticastInterfaceIgmpPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type MulticastInterfaceJoinGroup struct {
	// Multicast group IP address.
	Address *string `pulumi:"address"`
}

// MulticastInterfaceJoinGroupInput is an input type that accepts MulticastInterfaceJoinGroupArgs and MulticastInterfaceJoinGroupOutput values.
// You can construct a concrete instance of `MulticastInterfaceJoinGroupInput` via:
//
//	MulticastInterfaceJoinGroupArgs{...}
type MulticastInterfaceJoinGroupInput interface {
	pulumi.Input

	ToMulticastInterfaceJoinGroupOutput() MulticastInterfaceJoinGroupOutput
	ToMulticastInterfaceJoinGroupOutputWithContext(context.Context) MulticastInterfaceJoinGroupOutput
}

type MulticastInterfaceJoinGroupArgs struct {
	// Multicast group IP address.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (MulticastInterfaceJoinGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastInterfaceJoinGroup)(nil)).Elem()
}

func (i MulticastInterfaceJoinGroupArgs) ToMulticastInterfaceJoinGroupOutput() MulticastInterfaceJoinGroupOutput {
	return i.ToMulticastInterfaceJoinGroupOutputWithContext(context.Background())
}

func (i MulticastInterfaceJoinGroupArgs) ToMulticastInterfaceJoinGroupOutputWithContext(ctx context.Context) MulticastInterfaceJoinGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastInterfaceJoinGroupOutput)
}

// MulticastInterfaceJoinGroupArrayInput is an input type that accepts MulticastInterfaceJoinGroupArray and MulticastInterfaceJoinGroupArrayOutput values.
// You can construct a concrete instance of `MulticastInterfaceJoinGroupArrayInput` via:
//
//	MulticastInterfaceJoinGroupArray{ MulticastInterfaceJoinGroupArgs{...} }
type MulticastInterfaceJoinGroupArrayInput interface {
	pulumi.Input

	ToMulticastInterfaceJoinGroupArrayOutput() MulticastInterfaceJoinGroupArrayOutput
	ToMulticastInterfaceJoinGroupArrayOutputWithContext(context.Context) MulticastInterfaceJoinGroupArrayOutput
}

type MulticastInterfaceJoinGroupArray []MulticastInterfaceJoinGroupInput

func (MulticastInterfaceJoinGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastInterfaceJoinGroup)(nil)).Elem()
}

func (i MulticastInterfaceJoinGroupArray) ToMulticastInterfaceJoinGroupArrayOutput() MulticastInterfaceJoinGroupArrayOutput {
	return i.ToMulticastInterfaceJoinGroupArrayOutputWithContext(context.Background())
}

func (i MulticastInterfaceJoinGroupArray) ToMulticastInterfaceJoinGroupArrayOutputWithContext(ctx context.Context) MulticastInterfaceJoinGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastInterfaceJoinGroupArrayOutput)
}

type MulticastInterfaceJoinGroupOutput struct{ *pulumi.OutputState }

func (MulticastInterfaceJoinGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastInterfaceJoinGroup)(nil)).Elem()
}

func (o MulticastInterfaceJoinGroupOutput) ToMulticastInterfaceJoinGroupOutput() MulticastInterfaceJoinGroupOutput {
	return o
}

func (o MulticastInterfaceJoinGroupOutput) ToMulticastInterfaceJoinGroupOutputWithContext(ctx context.Context) MulticastInterfaceJoinGroupOutput {
	return o
}

// Multicast group IP address.
func (o MulticastInterfaceJoinGroupOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastInterfaceJoinGroup) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type MulticastInterfaceJoinGroupArrayOutput struct{ *pulumi.OutputState }

func (MulticastInterfaceJoinGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastInterfaceJoinGroup)(nil)).Elem()
}

func (o MulticastInterfaceJoinGroupArrayOutput) ToMulticastInterfaceJoinGroupArrayOutput() MulticastInterfaceJoinGroupArrayOutput {
	return o
}

func (o MulticastInterfaceJoinGroupArrayOutput) ToMulticastInterfaceJoinGroupArrayOutputWithContext(ctx context.Context) MulticastInterfaceJoinGroupArrayOutput {
	return o
}

func (o MulticastInterfaceJoinGroupArrayOutput) Index(i pulumi.IntInput) MulticastInterfaceJoinGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MulticastInterfaceJoinGroup {
		return vs[0].([]MulticastInterfaceJoinGroup)[vs[1].(int)]
	}).(MulticastInterfaceJoinGroupOutput)
}

type MulticastPimSmGlobal struct {
	// Sources allowed to register packets with this Rendezvous Point (RP).
	AcceptRegisterList *string `pulumi:"acceptRegisterList"`
	// Sources allowed to send multicast traffic.
	AcceptSourceList *string `pulumi:"acceptSourceList"`
	// Enable/disable accept BSR quick refresh packets from neighbors. Valid values: `enable`, `disable`.
	BsrAllowQuickRefresh *string `pulumi:"bsrAllowQuickRefresh"`
	// Enable/disable allowing this router to become a bootstrap router (BSR). Valid values: `enable`, `disable`.
	BsrCandidate *string `pulumi:"bsrCandidate"`
	// BSR hash length (0 - 32, default = 10).
	BsrHash *int `pulumi:"bsrHash"`
	// Interface to advertise as candidate BSR.
	BsrInterface *string `pulumi:"bsrInterface"`
	// BSR priority (0 - 255, default = 0).
	BsrPriority *int `pulumi:"bsrPriority"`
	// Enable/disable making candidate RP compatible with old Cisco IOS. Valid values: `enable`, `disable`.
	CiscoCrpPrefix *string `pulumi:"ciscoCrpPrefix"`
	// Use only hash for RP selection (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
	CiscoIgnoreRpSetPriority *string `pulumi:"ciscoIgnoreRpSetPriority"`
	// Checksum entire register packet(for old Cisco IOS compatibility). Valid values: `enable`, `disable`.
	CiscoRegisterChecksum *string `pulumi:"ciscoRegisterChecksum"`
	// Cisco register checksum only these groups.
	CiscoRegisterChecksumGroup *string `pulumi:"ciscoRegisterChecksumGroup"`
	// Join/prune holdtime (1 - 65535, default = 210).
	JoinPruneHoldtime *int `pulumi:"joinPruneHoldtime"`
	// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
	MessageInterval *int `pulumi:"messageInterval"`
	// Maximum retries of null register (1 - 20, default = 1).
	NullRegisterRetries *int `pulumi:"nullRegisterRetries"`
	// Enable/disable use of SDWAN when checking RPF neighbor and sending of REG packet. Valid values: `enable`, `disable`.
	PimUseSdwan *string `pulumi:"pimUseSdwan"`
	// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
	RegisterRateLimit *int `pulumi:"registerRateLimit"`
	// Enable/disable check RP is reachable before registering packets. Valid values: `enable`, `disable`.
	RegisterRpReachability *string `pulumi:"registerRpReachability"`
	// Override source address in register packets. Valid values: `disable`, `interface`, `ip-address`.
	RegisterSource *string `pulumi:"registerSource"`
	// Override with primary interface address.
	RegisterSourceInterface *string `pulumi:"registerSourceInterface"`
	// Override with local IP address.
	RegisterSourceIp *string `pulumi:"registerSourceIp"`
	// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
	RegisterSupression *int `pulumi:"registerSupression"`
	// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses []MulticastPimSmGlobalRpAddress `pulumi:"rpAddresses"`
	// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
	RpRegisterKeepalive *int `pulumi:"rpRegisterKeepalive"`
	// Enable/disable switching to source specific trees. Valid values: `enable`, `disable`.
	SptThreshold *string `pulumi:"sptThreshold"`
	// Groups allowed to switch to source tree.
	SptThresholdGroup *string `pulumi:"sptThresholdGroup"`
	// Enable/disable source specific multicast. Valid values: `enable`, `disable`.
	Ssm *string `pulumi:"ssm"`
	// Groups allowed to source specific multicast.
	SsmRange *string `pulumi:"ssmRange"`
}

// MulticastPimSmGlobalInput is an input type that accepts MulticastPimSmGlobalArgs and MulticastPimSmGlobalOutput values.
// You can construct a concrete instance of `MulticastPimSmGlobalInput` via:
//
//	MulticastPimSmGlobalArgs{...}
type MulticastPimSmGlobalInput interface {
	pulumi.Input

	ToMulticastPimSmGlobalOutput() MulticastPimSmGlobalOutput
	ToMulticastPimSmGlobalOutputWithContext(context.Context) MulticastPimSmGlobalOutput
}

type MulticastPimSmGlobalArgs struct {
	// Sources allowed to register packets with this Rendezvous Point (RP).
	AcceptRegisterList pulumi.StringPtrInput `pulumi:"acceptRegisterList"`
	// Sources allowed to send multicast traffic.
	AcceptSourceList pulumi.StringPtrInput `pulumi:"acceptSourceList"`
	// Enable/disable accept BSR quick refresh packets from neighbors. Valid values: `enable`, `disable`.
	BsrAllowQuickRefresh pulumi.StringPtrInput `pulumi:"bsrAllowQuickRefresh"`
	// Enable/disable allowing this router to become a bootstrap router (BSR). Valid values: `enable`, `disable`.
	BsrCandidate pulumi.StringPtrInput `pulumi:"bsrCandidate"`
	// BSR hash length (0 - 32, default = 10).
	BsrHash pulumi.IntPtrInput `pulumi:"bsrHash"`
	// Interface to advertise as candidate BSR.
	BsrInterface pulumi.StringPtrInput `pulumi:"bsrInterface"`
	// BSR priority (0 - 255, default = 0).
	BsrPriority pulumi.IntPtrInput `pulumi:"bsrPriority"`
	// Enable/disable making candidate RP compatible with old Cisco IOS. Valid values: `enable`, `disable`.
	CiscoCrpPrefix pulumi.StringPtrInput `pulumi:"ciscoCrpPrefix"`
	// Use only hash for RP selection (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
	CiscoIgnoreRpSetPriority pulumi.StringPtrInput `pulumi:"ciscoIgnoreRpSetPriority"`
	// Checksum entire register packet(for old Cisco IOS compatibility). Valid values: `enable`, `disable`.
	CiscoRegisterChecksum pulumi.StringPtrInput `pulumi:"ciscoRegisterChecksum"`
	// Cisco register checksum only these groups.
	CiscoRegisterChecksumGroup pulumi.StringPtrInput `pulumi:"ciscoRegisterChecksumGroup"`
	// Join/prune holdtime (1 - 65535, default = 210).
	JoinPruneHoldtime pulumi.IntPtrInput `pulumi:"joinPruneHoldtime"`
	// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
	MessageInterval pulumi.IntPtrInput `pulumi:"messageInterval"`
	// Maximum retries of null register (1 - 20, default = 1).
	NullRegisterRetries pulumi.IntPtrInput `pulumi:"nullRegisterRetries"`
	// Enable/disable use of SDWAN when checking RPF neighbor and sending of REG packet. Valid values: `enable`, `disable`.
	PimUseSdwan pulumi.StringPtrInput `pulumi:"pimUseSdwan"`
	// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
	RegisterRateLimit pulumi.IntPtrInput `pulumi:"registerRateLimit"`
	// Enable/disable check RP is reachable before registering packets. Valid values: `enable`, `disable`.
	RegisterRpReachability pulumi.StringPtrInput `pulumi:"registerRpReachability"`
	// Override source address in register packets. Valid values: `disable`, `interface`, `ip-address`.
	RegisterSource pulumi.StringPtrInput `pulumi:"registerSource"`
	// Override with primary interface address.
	RegisterSourceInterface pulumi.StringPtrInput `pulumi:"registerSourceInterface"`
	// Override with local IP address.
	RegisterSourceIp pulumi.StringPtrInput `pulumi:"registerSourceIp"`
	// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
	RegisterSupression pulumi.IntPtrInput `pulumi:"registerSupression"`
	// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses MulticastPimSmGlobalRpAddressArrayInput `pulumi:"rpAddresses"`
	// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
	RpRegisterKeepalive pulumi.IntPtrInput `pulumi:"rpRegisterKeepalive"`
	// Enable/disable switching to source specific trees. Valid values: `enable`, `disable`.
	SptThreshold pulumi.StringPtrInput `pulumi:"sptThreshold"`
	// Groups allowed to switch to source tree.
	SptThresholdGroup pulumi.StringPtrInput `pulumi:"sptThresholdGroup"`
	// Enable/disable source specific multicast. Valid values: `enable`, `disable`.
	Ssm pulumi.StringPtrInput `pulumi:"ssm"`
	// Groups allowed to source specific multicast.
	SsmRange pulumi.StringPtrInput `pulumi:"ssmRange"`
}

func (MulticastPimSmGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastPimSmGlobal)(nil)).Elem()
}

func (i MulticastPimSmGlobalArgs) ToMulticastPimSmGlobalOutput() MulticastPimSmGlobalOutput {
	return i.ToMulticastPimSmGlobalOutputWithContext(context.Background())
}

func (i MulticastPimSmGlobalArgs) ToMulticastPimSmGlobalOutputWithContext(ctx context.Context) MulticastPimSmGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastPimSmGlobalOutput)
}

func (i MulticastPimSmGlobalArgs) ToMulticastPimSmGlobalPtrOutput() MulticastPimSmGlobalPtrOutput {
	return i.ToMulticastPimSmGlobalPtrOutputWithContext(context.Background())
}

func (i MulticastPimSmGlobalArgs) ToMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) MulticastPimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastPimSmGlobalOutput).ToMulticastPimSmGlobalPtrOutputWithContext(ctx)
}

// MulticastPimSmGlobalPtrInput is an input type that accepts MulticastPimSmGlobalArgs, MulticastPimSmGlobalPtr and MulticastPimSmGlobalPtrOutput values.
// You can construct a concrete instance of `MulticastPimSmGlobalPtrInput` via:
//
//	        MulticastPimSmGlobalArgs{...}
//
//	or:
//
//	        nil
type MulticastPimSmGlobalPtrInput interface {
	pulumi.Input

	ToMulticastPimSmGlobalPtrOutput() MulticastPimSmGlobalPtrOutput
	ToMulticastPimSmGlobalPtrOutputWithContext(context.Context) MulticastPimSmGlobalPtrOutput
}

type multicastPimSmGlobalPtrType MulticastPimSmGlobalArgs

func MulticastPimSmGlobalPtr(v *MulticastPimSmGlobalArgs) MulticastPimSmGlobalPtrInput {
	return (*multicastPimSmGlobalPtrType)(v)
}

func (*multicastPimSmGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MulticastPimSmGlobal)(nil)).Elem()
}

func (i *multicastPimSmGlobalPtrType) ToMulticastPimSmGlobalPtrOutput() MulticastPimSmGlobalPtrOutput {
	return i.ToMulticastPimSmGlobalPtrOutputWithContext(context.Background())
}

func (i *multicastPimSmGlobalPtrType) ToMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) MulticastPimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastPimSmGlobalPtrOutput)
}

type MulticastPimSmGlobalOutput struct{ *pulumi.OutputState }

func (MulticastPimSmGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastPimSmGlobal)(nil)).Elem()
}

func (o MulticastPimSmGlobalOutput) ToMulticastPimSmGlobalOutput() MulticastPimSmGlobalOutput {
	return o
}

func (o MulticastPimSmGlobalOutput) ToMulticastPimSmGlobalOutputWithContext(ctx context.Context) MulticastPimSmGlobalOutput {
	return o
}

func (o MulticastPimSmGlobalOutput) ToMulticastPimSmGlobalPtrOutput() MulticastPimSmGlobalPtrOutput {
	return o.ToMulticastPimSmGlobalPtrOutputWithContext(context.Background())
}

func (o MulticastPimSmGlobalOutput) ToMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) MulticastPimSmGlobalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MulticastPimSmGlobal) *MulticastPimSmGlobal {
		return &v
	}).(MulticastPimSmGlobalPtrOutput)
}

// Sources allowed to register packets with this Rendezvous Point (RP).
func (o MulticastPimSmGlobalOutput) AcceptRegisterList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.AcceptRegisterList }).(pulumi.StringPtrOutput)
}

// Sources allowed to send multicast traffic.
func (o MulticastPimSmGlobalOutput) AcceptSourceList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.AcceptSourceList }).(pulumi.StringPtrOutput)
}

// Enable/disable accept BSR quick refresh packets from neighbors. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalOutput) BsrAllowQuickRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.BsrAllowQuickRefresh }).(pulumi.StringPtrOutput)
}

// Enable/disable allowing this router to become a bootstrap router (BSR). Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalOutput) BsrCandidate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.BsrCandidate }).(pulumi.StringPtrOutput)
}

// BSR hash length (0 - 32, default = 10).
func (o MulticastPimSmGlobalOutput) BsrHash() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *int { return v.BsrHash }).(pulumi.IntPtrOutput)
}

// Interface to advertise as candidate BSR.
func (o MulticastPimSmGlobalOutput) BsrInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.BsrInterface }).(pulumi.StringPtrOutput)
}

// BSR priority (0 - 255, default = 0).
func (o MulticastPimSmGlobalOutput) BsrPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *int { return v.BsrPriority }).(pulumi.IntPtrOutput)
}

// Enable/disable making candidate RP compatible with old Cisco IOS. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalOutput) CiscoCrpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.CiscoCrpPrefix }).(pulumi.StringPtrOutput)
}

// Use only hash for RP selection (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalOutput) CiscoIgnoreRpSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.CiscoIgnoreRpSetPriority }).(pulumi.StringPtrOutput)
}

// Checksum entire register packet(for old Cisco IOS compatibility). Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalOutput) CiscoRegisterChecksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.CiscoRegisterChecksum }).(pulumi.StringPtrOutput)
}

// Cisco register checksum only these groups.
func (o MulticastPimSmGlobalOutput) CiscoRegisterChecksumGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.CiscoRegisterChecksumGroup }).(pulumi.StringPtrOutput)
}

// Join/prune holdtime (1 - 65535, default = 210).
func (o MulticastPimSmGlobalOutput) JoinPruneHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *int { return v.JoinPruneHoldtime }).(pulumi.IntPtrOutput)
}

// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
func (o MulticastPimSmGlobalOutput) MessageInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *int { return v.MessageInterval }).(pulumi.IntPtrOutput)
}

// Maximum retries of null register (1 - 20, default = 1).
func (o MulticastPimSmGlobalOutput) NullRegisterRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *int { return v.NullRegisterRetries }).(pulumi.IntPtrOutput)
}

// Enable/disable use of SDWAN when checking RPF neighbor and sending of REG packet. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalOutput) PimUseSdwan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.PimUseSdwan }).(pulumi.StringPtrOutput)
}

// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
func (o MulticastPimSmGlobalOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *int { return v.RegisterRateLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable check RP is reachable before registering packets. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalOutput) RegisterRpReachability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.RegisterRpReachability }).(pulumi.StringPtrOutput)
}

// Override source address in register packets. Valid values: `disable`, `interface`, `ip-address`.
func (o MulticastPimSmGlobalOutput) RegisterSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.RegisterSource }).(pulumi.StringPtrOutput)
}

// Override with primary interface address.
func (o MulticastPimSmGlobalOutput) RegisterSourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.RegisterSourceInterface }).(pulumi.StringPtrOutput)
}

// Override with local IP address.
func (o MulticastPimSmGlobalOutput) RegisterSourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.RegisterSourceIp }).(pulumi.StringPtrOutput)
}

// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
func (o MulticastPimSmGlobalOutput) RegisterSupression() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *int { return v.RegisterSupression }).(pulumi.IntPtrOutput)
}

// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
func (o MulticastPimSmGlobalOutput) RpAddresses() MulticastPimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) []MulticastPimSmGlobalRpAddress { return v.RpAddresses }).(MulticastPimSmGlobalRpAddressArrayOutput)
}

// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
func (o MulticastPimSmGlobalOutput) RpRegisterKeepalive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *int { return v.RpRegisterKeepalive }).(pulumi.IntPtrOutput)
}

// Enable/disable switching to source specific trees. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalOutput) SptThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.SptThreshold }).(pulumi.StringPtrOutput)
}

// Groups allowed to switch to source tree.
func (o MulticastPimSmGlobalOutput) SptThresholdGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.SptThresholdGroup }).(pulumi.StringPtrOutput)
}

// Enable/disable source specific multicast. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalOutput) Ssm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.Ssm }).(pulumi.StringPtrOutput)
}

// Groups allowed to source specific multicast.
func (o MulticastPimSmGlobalOutput) SsmRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobal) *string { return v.SsmRange }).(pulumi.StringPtrOutput)
}

type MulticastPimSmGlobalPtrOutput struct{ *pulumi.OutputState }

func (MulticastPimSmGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MulticastPimSmGlobal)(nil)).Elem()
}

func (o MulticastPimSmGlobalPtrOutput) ToMulticastPimSmGlobalPtrOutput() MulticastPimSmGlobalPtrOutput {
	return o
}

func (o MulticastPimSmGlobalPtrOutput) ToMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) MulticastPimSmGlobalPtrOutput {
	return o
}

func (o MulticastPimSmGlobalPtrOutput) Elem() MulticastPimSmGlobalOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) MulticastPimSmGlobal {
		if v != nil {
			return *v
		}
		var ret MulticastPimSmGlobal
		return ret
	}).(MulticastPimSmGlobalOutput)
}

// Sources allowed to register packets with this Rendezvous Point (RP).
func (o MulticastPimSmGlobalPtrOutput) AcceptRegisterList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.AcceptRegisterList
	}).(pulumi.StringPtrOutput)
}

// Sources allowed to send multicast traffic.
func (o MulticastPimSmGlobalPtrOutput) AcceptSourceList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.AcceptSourceList
	}).(pulumi.StringPtrOutput)
}

// Enable/disable accept BSR quick refresh packets from neighbors. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalPtrOutput) BsrAllowQuickRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.BsrAllowQuickRefresh
	}).(pulumi.StringPtrOutput)
}

// Enable/disable allowing this router to become a bootstrap router (BSR). Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalPtrOutput) BsrCandidate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.BsrCandidate
	}).(pulumi.StringPtrOutput)
}

// BSR hash length (0 - 32, default = 10).
func (o MulticastPimSmGlobalPtrOutput) BsrHash() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.BsrHash
	}).(pulumi.IntPtrOutput)
}

// Interface to advertise as candidate BSR.
func (o MulticastPimSmGlobalPtrOutput) BsrInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.BsrInterface
	}).(pulumi.StringPtrOutput)
}

// BSR priority (0 - 255, default = 0).
func (o MulticastPimSmGlobalPtrOutput) BsrPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.BsrPriority
	}).(pulumi.IntPtrOutput)
}

// Enable/disable making candidate RP compatible with old Cisco IOS. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalPtrOutput) CiscoCrpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoCrpPrefix
	}).(pulumi.StringPtrOutput)
}

// Use only hash for RP selection (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalPtrOutput) CiscoIgnoreRpSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoIgnoreRpSetPriority
	}).(pulumi.StringPtrOutput)
}

// Checksum entire register packet(for old Cisco IOS compatibility). Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalPtrOutput) CiscoRegisterChecksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoRegisterChecksum
	}).(pulumi.StringPtrOutput)
}

// Cisco register checksum only these groups.
func (o MulticastPimSmGlobalPtrOutput) CiscoRegisterChecksumGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoRegisterChecksumGroup
	}).(pulumi.StringPtrOutput)
}

// Join/prune holdtime (1 - 65535, default = 210).
func (o MulticastPimSmGlobalPtrOutput) JoinPruneHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.JoinPruneHoldtime
	}).(pulumi.IntPtrOutput)
}

// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
func (o MulticastPimSmGlobalPtrOutput) MessageInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.MessageInterval
	}).(pulumi.IntPtrOutput)
}

// Maximum retries of null register (1 - 20, default = 1).
func (o MulticastPimSmGlobalPtrOutput) NullRegisterRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.NullRegisterRetries
	}).(pulumi.IntPtrOutput)
}

// Enable/disable use of SDWAN when checking RPF neighbor and sending of REG packet. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalPtrOutput) PimUseSdwan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.PimUseSdwan
	}).(pulumi.StringPtrOutput)
}

// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
func (o MulticastPimSmGlobalPtrOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RegisterRateLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable check RP is reachable before registering packets. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalPtrOutput) RegisterRpReachability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterRpReachability
	}).(pulumi.StringPtrOutput)
}

// Override source address in register packets. Valid values: `disable`, `interface`, `ip-address`.
func (o MulticastPimSmGlobalPtrOutput) RegisterSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterSource
	}).(pulumi.StringPtrOutput)
}

// Override with primary interface address.
func (o MulticastPimSmGlobalPtrOutput) RegisterSourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterSourceInterface
	}).(pulumi.StringPtrOutput)
}

// Override with local IP address.
func (o MulticastPimSmGlobalPtrOutput) RegisterSourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterSourceIp
	}).(pulumi.StringPtrOutput)
}

// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
func (o MulticastPimSmGlobalPtrOutput) RegisterSupression() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RegisterSupression
	}).(pulumi.IntPtrOutput)
}

// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
func (o MulticastPimSmGlobalPtrOutput) RpAddresses() MulticastPimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) []MulticastPimSmGlobalRpAddress {
		if v == nil {
			return nil
		}
		return v.RpAddresses
	}).(MulticastPimSmGlobalRpAddressArrayOutput)
}

// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
func (o MulticastPimSmGlobalPtrOutput) RpRegisterKeepalive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RpRegisterKeepalive
	}).(pulumi.IntPtrOutput)
}

// Enable/disable switching to source specific trees. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalPtrOutput) SptThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.SptThreshold
	}).(pulumi.StringPtrOutput)
}

// Groups allowed to switch to source tree.
func (o MulticastPimSmGlobalPtrOutput) SptThresholdGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.SptThresholdGroup
	}).(pulumi.StringPtrOutput)
}

// Enable/disable source specific multicast. Valid values: `enable`, `disable`.
func (o MulticastPimSmGlobalPtrOutput) Ssm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Ssm
	}).(pulumi.StringPtrOutput)
}

// Groups allowed to source specific multicast.
func (o MulticastPimSmGlobalPtrOutput) SsmRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.SsmRange
	}).(pulumi.StringPtrOutput)
}

type MulticastPimSmGlobalRpAddress struct {
	// Groups to use this RP.
	Group *string `pulumi:"group"`
	// ID.
	Id *int `pulumi:"id"`
	// RP router address.
	IpAddress *string `pulumi:"ipAddress"`
}

// MulticastPimSmGlobalRpAddressInput is an input type that accepts MulticastPimSmGlobalRpAddressArgs and MulticastPimSmGlobalRpAddressOutput values.
// You can construct a concrete instance of `MulticastPimSmGlobalRpAddressInput` via:
//
//	MulticastPimSmGlobalRpAddressArgs{...}
type MulticastPimSmGlobalRpAddressInput interface {
	pulumi.Input

	ToMulticastPimSmGlobalRpAddressOutput() MulticastPimSmGlobalRpAddressOutput
	ToMulticastPimSmGlobalRpAddressOutputWithContext(context.Context) MulticastPimSmGlobalRpAddressOutput
}

type MulticastPimSmGlobalRpAddressArgs struct {
	// Groups to use this RP.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// RP router address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (MulticastPimSmGlobalRpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (i MulticastPimSmGlobalRpAddressArgs) ToMulticastPimSmGlobalRpAddressOutput() MulticastPimSmGlobalRpAddressOutput {
	return i.ToMulticastPimSmGlobalRpAddressOutputWithContext(context.Background())
}

func (i MulticastPimSmGlobalRpAddressArgs) ToMulticastPimSmGlobalRpAddressOutputWithContext(ctx context.Context) MulticastPimSmGlobalRpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastPimSmGlobalRpAddressOutput)
}

// MulticastPimSmGlobalRpAddressArrayInput is an input type that accepts MulticastPimSmGlobalRpAddressArray and MulticastPimSmGlobalRpAddressArrayOutput values.
// You can construct a concrete instance of `MulticastPimSmGlobalRpAddressArrayInput` via:
//
//	MulticastPimSmGlobalRpAddressArray{ MulticastPimSmGlobalRpAddressArgs{...} }
type MulticastPimSmGlobalRpAddressArrayInput interface {
	pulumi.Input

	ToMulticastPimSmGlobalRpAddressArrayOutput() MulticastPimSmGlobalRpAddressArrayOutput
	ToMulticastPimSmGlobalRpAddressArrayOutputWithContext(context.Context) MulticastPimSmGlobalRpAddressArrayOutput
}

type MulticastPimSmGlobalRpAddressArray []MulticastPimSmGlobalRpAddressInput

func (MulticastPimSmGlobalRpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (i MulticastPimSmGlobalRpAddressArray) ToMulticastPimSmGlobalRpAddressArrayOutput() MulticastPimSmGlobalRpAddressArrayOutput {
	return i.ToMulticastPimSmGlobalRpAddressArrayOutputWithContext(context.Background())
}

func (i MulticastPimSmGlobalRpAddressArray) ToMulticastPimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) MulticastPimSmGlobalRpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastPimSmGlobalRpAddressArrayOutput)
}

type MulticastPimSmGlobalRpAddressOutput struct{ *pulumi.OutputState }

func (MulticastPimSmGlobalRpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (o MulticastPimSmGlobalRpAddressOutput) ToMulticastPimSmGlobalRpAddressOutput() MulticastPimSmGlobalRpAddressOutput {
	return o
}

func (o MulticastPimSmGlobalRpAddressOutput) ToMulticastPimSmGlobalRpAddressOutputWithContext(ctx context.Context) MulticastPimSmGlobalRpAddressOutput {
	return o
}

// Groups to use this RP.
func (o MulticastPimSmGlobalRpAddressOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobalRpAddress) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// ID.
func (o MulticastPimSmGlobalRpAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobalRpAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// RP router address.
func (o MulticastPimSmGlobalRpAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastPimSmGlobalRpAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type MulticastPimSmGlobalRpAddressArrayOutput struct{ *pulumi.OutputState }

func (MulticastPimSmGlobalRpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (o MulticastPimSmGlobalRpAddressArrayOutput) ToMulticastPimSmGlobalRpAddressArrayOutput() MulticastPimSmGlobalRpAddressArrayOutput {
	return o
}

func (o MulticastPimSmGlobalRpAddressArrayOutput) ToMulticastPimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) MulticastPimSmGlobalRpAddressArrayOutput {
	return o
}

func (o MulticastPimSmGlobalRpAddressArrayOutput) Index(i pulumi.IntInput) MulticastPimSmGlobalRpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MulticastPimSmGlobalRpAddress {
		return vs[0].([]MulticastPimSmGlobalRpAddress)[vs[1].(int)]
	}).(MulticastPimSmGlobalRpAddressOutput)
}

type MulticastflowFlow struct {
	// Multicast group IP address.
	GroupAddr *string `pulumi:"groupAddr"`
	// Flow ID.
	Id *int `pulumi:"id"`
	// Multicast source IP address.
	SourceAddr *string `pulumi:"sourceAddr"`
}

// MulticastflowFlowInput is an input type that accepts MulticastflowFlowArgs and MulticastflowFlowOutput values.
// You can construct a concrete instance of `MulticastflowFlowInput` via:
//
//	MulticastflowFlowArgs{...}
type MulticastflowFlowInput interface {
	pulumi.Input

	ToMulticastflowFlowOutput() MulticastflowFlowOutput
	ToMulticastflowFlowOutputWithContext(context.Context) MulticastflowFlowOutput
}

type MulticastflowFlowArgs struct {
	// Multicast group IP address.
	GroupAddr pulumi.StringPtrInput `pulumi:"groupAddr"`
	// Flow ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Multicast source IP address.
	SourceAddr pulumi.StringPtrInput `pulumi:"sourceAddr"`
}

func (MulticastflowFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastflowFlow)(nil)).Elem()
}

func (i MulticastflowFlowArgs) ToMulticastflowFlowOutput() MulticastflowFlowOutput {
	return i.ToMulticastflowFlowOutputWithContext(context.Background())
}

func (i MulticastflowFlowArgs) ToMulticastflowFlowOutputWithContext(ctx context.Context) MulticastflowFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastflowFlowOutput)
}

// MulticastflowFlowArrayInput is an input type that accepts MulticastflowFlowArray and MulticastflowFlowArrayOutput values.
// You can construct a concrete instance of `MulticastflowFlowArrayInput` via:
//
//	MulticastflowFlowArray{ MulticastflowFlowArgs{...} }
type MulticastflowFlowArrayInput interface {
	pulumi.Input

	ToMulticastflowFlowArrayOutput() MulticastflowFlowArrayOutput
	ToMulticastflowFlowArrayOutputWithContext(context.Context) MulticastflowFlowArrayOutput
}

type MulticastflowFlowArray []MulticastflowFlowInput

func (MulticastflowFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastflowFlow)(nil)).Elem()
}

func (i MulticastflowFlowArray) ToMulticastflowFlowArrayOutput() MulticastflowFlowArrayOutput {
	return i.ToMulticastflowFlowArrayOutputWithContext(context.Background())
}

func (i MulticastflowFlowArray) ToMulticastflowFlowArrayOutputWithContext(ctx context.Context) MulticastflowFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastflowFlowArrayOutput)
}

type MulticastflowFlowOutput struct{ *pulumi.OutputState }

func (MulticastflowFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastflowFlow)(nil)).Elem()
}

func (o MulticastflowFlowOutput) ToMulticastflowFlowOutput() MulticastflowFlowOutput {
	return o
}

func (o MulticastflowFlowOutput) ToMulticastflowFlowOutputWithContext(ctx context.Context) MulticastflowFlowOutput {
	return o
}

// Multicast group IP address.
func (o MulticastflowFlowOutput) GroupAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastflowFlow) *string { return v.GroupAddr }).(pulumi.StringPtrOutput)
}

// Flow ID.
func (o MulticastflowFlowOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MulticastflowFlow) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Multicast source IP address.
func (o MulticastflowFlowOutput) SourceAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastflowFlow) *string { return v.SourceAddr }).(pulumi.StringPtrOutput)
}

type MulticastflowFlowArrayOutput struct{ *pulumi.OutputState }

func (MulticastflowFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastflowFlow)(nil)).Elem()
}

func (o MulticastflowFlowArrayOutput) ToMulticastflowFlowArrayOutput() MulticastflowFlowArrayOutput {
	return o
}

func (o MulticastflowFlowArrayOutput) ToMulticastflowFlowArrayOutputWithContext(ctx context.Context) MulticastflowFlowArrayOutput {
	return o
}

func (o MulticastflowFlowArrayOutput) Index(i pulumi.IntInput) MulticastflowFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MulticastflowFlow {
		return vs[0].([]MulticastflowFlow)[vs[1].(int)]
	}).(MulticastflowFlowOutput)
}

type Ospf6Area struct {
	// Authentication mode. Valid values: `none`, `ah`, `esp`.
	Authentication *string `pulumi:"authentication"`
	// Summary default cost of stub or NSSA area.
	DefaultCost *int `pulumi:"defaultCost"`
	// Area entry IP address.
	Id *string `pulumi:"id"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []Ospf6AreaIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval *int `pulumi:"keyRolloverInterval"`
	// Enable/disable originate type 7 default into NSSA area. Valid values: `enable`, `disable`.
	NssaDefaultInformationOriginate *string `pulumi:"nssaDefaultInformationOriginate"`
	// OSPFv3 default metric.
	NssaDefaultInformationOriginateMetric *int `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPFv3 metric type for default routes. Valid values: `1`, `2`.
	NssaDefaultInformationOriginateMetricType *string `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
	NssaRedistribution *string `pulumi:"nssaRedistribution"`
	// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
	NssaTranslatorRole *string `pulumi:"nssaTranslatorRole"`
	// OSPF6 area range configuration. The structure of `range` block is documented below.
	Ranges []Ospf6AreaRange `pulumi:"ranges"`
	// Stub summary setting. Valid values: `no-summary`, `summary`.
	StubType *string `pulumi:"stubType"`
	// Area type setting. Valid values: `regular`, `nssa`, `stub`.
	Type *string `pulumi:"type"`
	// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks []Ospf6AreaVirtualLink `pulumi:"virtualLinks"`
}

// Ospf6AreaInput is an input type that accepts Ospf6AreaArgs and Ospf6AreaOutput values.
// You can construct a concrete instance of `Ospf6AreaInput` via:
//
//	Ospf6AreaArgs{...}
type Ospf6AreaInput interface {
	pulumi.Input

	ToOspf6AreaOutput() Ospf6AreaOutput
	ToOspf6AreaOutputWithContext(context.Context) Ospf6AreaOutput
}

type Ospf6AreaArgs struct {
	// Authentication mode. Valid values: `none`, `ah`, `esp`.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Summary default cost of stub or NSSA area.
	DefaultCost pulumi.IntPtrInput `pulumi:"defaultCost"`
	// Area entry IP address.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys Ospf6AreaIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntPtrInput `pulumi:"keyRolloverInterval"`
	// Enable/disable originate type 7 default into NSSA area. Valid values: `enable`, `disable`.
	NssaDefaultInformationOriginate pulumi.StringPtrInput `pulumi:"nssaDefaultInformationOriginate"`
	// OSPFv3 default metric.
	NssaDefaultInformationOriginateMetric pulumi.IntPtrInput `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPFv3 metric type for default routes. Valid values: `1`, `2`.
	NssaDefaultInformationOriginateMetricType pulumi.StringPtrInput `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
	NssaRedistribution pulumi.StringPtrInput `pulumi:"nssaRedistribution"`
	// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
	NssaTranslatorRole pulumi.StringPtrInput `pulumi:"nssaTranslatorRole"`
	// OSPF6 area range configuration. The structure of `range` block is documented below.
	Ranges Ospf6AreaRangeArrayInput `pulumi:"ranges"`
	// Stub summary setting. Valid values: `no-summary`, `summary`.
	StubType pulumi.StringPtrInput `pulumi:"stubType"`
	// Area type setting. Valid values: `regular`, `nssa`, `stub`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks Ospf6AreaVirtualLinkArrayInput `pulumi:"virtualLinks"`
}

func (Ospf6AreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6Area)(nil)).Elem()
}

func (i Ospf6AreaArgs) ToOspf6AreaOutput() Ospf6AreaOutput {
	return i.ToOspf6AreaOutputWithContext(context.Background())
}

func (i Ospf6AreaArgs) ToOspf6AreaOutputWithContext(ctx context.Context) Ospf6AreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6AreaOutput)
}

// Ospf6AreaArrayInput is an input type that accepts Ospf6AreaArray and Ospf6AreaArrayOutput values.
// You can construct a concrete instance of `Ospf6AreaArrayInput` via:
//
//	Ospf6AreaArray{ Ospf6AreaArgs{...} }
type Ospf6AreaArrayInput interface {
	pulumi.Input

	ToOspf6AreaArrayOutput() Ospf6AreaArrayOutput
	ToOspf6AreaArrayOutputWithContext(context.Context) Ospf6AreaArrayOutput
}

type Ospf6AreaArray []Ospf6AreaInput

func (Ospf6AreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6Area)(nil)).Elem()
}

func (i Ospf6AreaArray) ToOspf6AreaArrayOutput() Ospf6AreaArrayOutput {
	return i.ToOspf6AreaArrayOutputWithContext(context.Background())
}

func (i Ospf6AreaArray) ToOspf6AreaArrayOutputWithContext(ctx context.Context) Ospf6AreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6AreaArrayOutput)
}

type Ospf6AreaOutput struct{ *pulumi.OutputState }

func (Ospf6AreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6Area)(nil)).Elem()
}

func (o Ospf6AreaOutput) ToOspf6AreaOutput() Ospf6AreaOutput {
	return o
}

func (o Ospf6AreaOutput) ToOspf6AreaOutputWithContext(ctx context.Context) Ospf6AreaOutput {
	return o
}

// Authentication mode. Valid values: `none`, `ah`, `esp`.
func (o Ospf6AreaOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Summary default cost of stub or NSSA area.
func (o Ospf6AreaOutput) DefaultCost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *int { return v.DefaultCost }).(pulumi.IntPtrOutput)
}

// Area entry IP address.
func (o Ospf6AreaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
func (o Ospf6AreaOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
func (o Ospf6AreaOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o Ospf6AreaOutput) IpsecKeys() Ospf6AreaIpsecKeyArrayOutput {
	return o.ApplyT(func(v Ospf6Area) []Ospf6AreaIpsecKey { return v.IpsecKeys }).(Ospf6AreaIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o Ospf6AreaOutput) KeyRolloverInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *int { return v.KeyRolloverInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable originate type 7 default into NSSA area. Valid values: `enable`, `disable`.
func (o Ospf6AreaOutput) NssaDefaultInformationOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *string { return v.NssaDefaultInformationOriginate }).(pulumi.StringPtrOutput)
}

// OSPFv3 default metric.
func (o Ospf6AreaOutput) NssaDefaultInformationOriginateMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *int { return v.NssaDefaultInformationOriginateMetric }).(pulumi.IntPtrOutput)
}

// OSPFv3 metric type for default routes. Valid values: `1`, `2`.
func (o Ospf6AreaOutput) NssaDefaultInformationOriginateMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *string { return v.NssaDefaultInformationOriginateMetricType }).(pulumi.StringPtrOutput)
}

// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
func (o Ospf6AreaOutput) NssaRedistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *string { return v.NssaRedistribution }).(pulumi.StringPtrOutput)
}

// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
func (o Ospf6AreaOutput) NssaTranslatorRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *string { return v.NssaTranslatorRole }).(pulumi.StringPtrOutput)
}

// OSPF6 area range configuration. The structure of `range` block is documented below.
func (o Ospf6AreaOutput) Ranges() Ospf6AreaRangeArrayOutput {
	return o.ApplyT(func(v Ospf6Area) []Ospf6AreaRange { return v.Ranges }).(Ospf6AreaRangeArrayOutput)
}

// Stub summary setting. Valid values: `no-summary`, `summary`.
func (o Ospf6AreaOutput) StubType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *string { return v.StubType }).(pulumi.StringPtrOutput)
}

// Area type setting. Valid values: `regular`, `nssa`, `stub`.
func (o Ospf6AreaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Area) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
func (o Ospf6AreaOutput) VirtualLinks() Ospf6AreaVirtualLinkArrayOutput {
	return o.ApplyT(func(v Ospf6Area) []Ospf6AreaVirtualLink { return v.VirtualLinks }).(Ospf6AreaVirtualLinkArrayOutput)
}

type Ospf6AreaArrayOutput struct{ *pulumi.OutputState }

func (Ospf6AreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6Area)(nil)).Elem()
}

func (o Ospf6AreaArrayOutput) ToOspf6AreaArrayOutput() Ospf6AreaArrayOutput {
	return o
}

func (o Ospf6AreaArrayOutput) ToOspf6AreaArrayOutputWithContext(ctx context.Context) Ospf6AreaArrayOutput {
	return o
}

func (o Ospf6AreaArrayOutput) Index(i pulumi.IntInput) Ospf6AreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ospf6Area {
		return vs[0].([]Ospf6Area)[vs[1].(int)]
	}).(Ospf6AreaOutput)
}

type Ospf6AreaIpsecKey struct {
	// Authentication key.
	AuthKey *string `pulumi:"authKey"`
	// Encryption key.
	EncKey *string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi *int `pulumi:"spi"`
}

// Ospf6AreaIpsecKeyInput is an input type that accepts Ospf6AreaIpsecKeyArgs and Ospf6AreaIpsecKeyOutput values.
// You can construct a concrete instance of `Ospf6AreaIpsecKeyInput` via:
//
//	Ospf6AreaIpsecKeyArgs{...}
type Ospf6AreaIpsecKeyInput interface {
	pulumi.Input

	ToOspf6AreaIpsecKeyOutput() Ospf6AreaIpsecKeyOutput
	ToOspf6AreaIpsecKeyOutputWithContext(context.Context) Ospf6AreaIpsecKeyOutput
}

type Ospf6AreaIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringPtrInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntPtrInput `pulumi:"spi"`
}

func (Ospf6AreaIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6AreaIpsecKey)(nil)).Elem()
}

func (i Ospf6AreaIpsecKeyArgs) ToOspf6AreaIpsecKeyOutput() Ospf6AreaIpsecKeyOutput {
	return i.ToOspf6AreaIpsecKeyOutputWithContext(context.Background())
}

func (i Ospf6AreaIpsecKeyArgs) ToOspf6AreaIpsecKeyOutputWithContext(ctx context.Context) Ospf6AreaIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6AreaIpsecKeyOutput)
}

// Ospf6AreaIpsecKeyArrayInput is an input type that accepts Ospf6AreaIpsecKeyArray and Ospf6AreaIpsecKeyArrayOutput values.
// You can construct a concrete instance of `Ospf6AreaIpsecKeyArrayInput` via:
//
//	Ospf6AreaIpsecKeyArray{ Ospf6AreaIpsecKeyArgs{...} }
type Ospf6AreaIpsecKeyArrayInput interface {
	pulumi.Input

	ToOspf6AreaIpsecKeyArrayOutput() Ospf6AreaIpsecKeyArrayOutput
	ToOspf6AreaIpsecKeyArrayOutputWithContext(context.Context) Ospf6AreaIpsecKeyArrayOutput
}

type Ospf6AreaIpsecKeyArray []Ospf6AreaIpsecKeyInput

func (Ospf6AreaIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6AreaIpsecKey)(nil)).Elem()
}

func (i Ospf6AreaIpsecKeyArray) ToOspf6AreaIpsecKeyArrayOutput() Ospf6AreaIpsecKeyArrayOutput {
	return i.ToOspf6AreaIpsecKeyArrayOutputWithContext(context.Background())
}

func (i Ospf6AreaIpsecKeyArray) ToOspf6AreaIpsecKeyArrayOutputWithContext(ctx context.Context) Ospf6AreaIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6AreaIpsecKeyArrayOutput)
}

type Ospf6AreaIpsecKeyOutput struct{ *pulumi.OutputState }

func (Ospf6AreaIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6AreaIpsecKey)(nil)).Elem()
}

func (o Ospf6AreaIpsecKeyOutput) ToOspf6AreaIpsecKeyOutput() Ospf6AreaIpsecKeyOutput {
	return o
}

func (o Ospf6AreaIpsecKeyOutput) ToOspf6AreaIpsecKeyOutputWithContext(ctx context.Context) Ospf6AreaIpsecKeyOutput {
	return o
}

// Authentication key.
func (o Ospf6AreaIpsecKeyOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6AreaIpsecKey) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// Encryption key.
func (o Ospf6AreaIpsecKeyOutput) EncKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6AreaIpsecKey) *string { return v.EncKey }).(pulumi.StringPtrOutput)
}

// Security Parameters Index.
func (o Ospf6AreaIpsecKeyOutput) Spi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6AreaIpsecKey) *int { return v.Spi }).(pulumi.IntPtrOutput)
}

type Ospf6AreaIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (Ospf6AreaIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6AreaIpsecKey)(nil)).Elem()
}

func (o Ospf6AreaIpsecKeyArrayOutput) ToOspf6AreaIpsecKeyArrayOutput() Ospf6AreaIpsecKeyArrayOutput {
	return o
}

func (o Ospf6AreaIpsecKeyArrayOutput) ToOspf6AreaIpsecKeyArrayOutputWithContext(ctx context.Context) Ospf6AreaIpsecKeyArrayOutput {
	return o
}

func (o Ospf6AreaIpsecKeyArrayOutput) Index(i pulumi.IntInput) Ospf6AreaIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ospf6AreaIpsecKey {
		return vs[0].([]Ospf6AreaIpsecKey)[vs[1].(int)]
	}).(Ospf6AreaIpsecKeyOutput)
}

type Ospf6AreaRange struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise *string `pulumi:"advertise"`
	// Range entry ID.
	Id *int `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
}

// Ospf6AreaRangeInput is an input type that accepts Ospf6AreaRangeArgs and Ospf6AreaRangeOutput values.
// You can construct a concrete instance of `Ospf6AreaRangeInput` via:
//
//	Ospf6AreaRangeArgs{...}
type Ospf6AreaRangeInput interface {
	pulumi.Input

	ToOspf6AreaRangeOutput() Ospf6AreaRangeOutput
	ToOspf6AreaRangeOutputWithContext(context.Context) Ospf6AreaRangeOutput
}

type Ospf6AreaRangeArgs struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise pulumi.StringPtrInput `pulumi:"advertise"`
	// Range entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (Ospf6AreaRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6AreaRange)(nil)).Elem()
}

func (i Ospf6AreaRangeArgs) ToOspf6AreaRangeOutput() Ospf6AreaRangeOutput {
	return i.ToOspf6AreaRangeOutputWithContext(context.Background())
}

func (i Ospf6AreaRangeArgs) ToOspf6AreaRangeOutputWithContext(ctx context.Context) Ospf6AreaRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6AreaRangeOutput)
}

// Ospf6AreaRangeArrayInput is an input type that accepts Ospf6AreaRangeArray and Ospf6AreaRangeArrayOutput values.
// You can construct a concrete instance of `Ospf6AreaRangeArrayInput` via:
//
//	Ospf6AreaRangeArray{ Ospf6AreaRangeArgs{...} }
type Ospf6AreaRangeArrayInput interface {
	pulumi.Input

	ToOspf6AreaRangeArrayOutput() Ospf6AreaRangeArrayOutput
	ToOspf6AreaRangeArrayOutputWithContext(context.Context) Ospf6AreaRangeArrayOutput
}

type Ospf6AreaRangeArray []Ospf6AreaRangeInput

func (Ospf6AreaRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6AreaRange)(nil)).Elem()
}

func (i Ospf6AreaRangeArray) ToOspf6AreaRangeArrayOutput() Ospf6AreaRangeArrayOutput {
	return i.ToOspf6AreaRangeArrayOutputWithContext(context.Background())
}

func (i Ospf6AreaRangeArray) ToOspf6AreaRangeArrayOutputWithContext(ctx context.Context) Ospf6AreaRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6AreaRangeArrayOutput)
}

type Ospf6AreaRangeOutput struct{ *pulumi.OutputState }

func (Ospf6AreaRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6AreaRange)(nil)).Elem()
}

func (o Ospf6AreaRangeOutput) ToOspf6AreaRangeOutput() Ospf6AreaRangeOutput {
	return o
}

func (o Ospf6AreaRangeOutput) ToOspf6AreaRangeOutputWithContext(ctx context.Context) Ospf6AreaRangeOutput {
	return o
}

// Enable/disable advertise status. Valid values: `disable`, `enable`.
func (o Ospf6AreaRangeOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6AreaRange) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

// Range entry ID.
func (o Ospf6AreaRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6AreaRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 prefix.
func (o Ospf6AreaRangeOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6AreaRange) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type Ospf6AreaRangeArrayOutput struct{ *pulumi.OutputState }

func (Ospf6AreaRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6AreaRange)(nil)).Elem()
}

func (o Ospf6AreaRangeArrayOutput) ToOspf6AreaRangeArrayOutput() Ospf6AreaRangeArrayOutput {
	return o
}

func (o Ospf6AreaRangeArrayOutput) ToOspf6AreaRangeArrayOutputWithContext(ctx context.Context) Ospf6AreaRangeArrayOutput {
	return o
}

func (o Ospf6AreaRangeArrayOutput) Index(i pulumi.IntInput) Ospf6AreaRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ospf6AreaRange {
		return vs[0].([]Ospf6AreaRange)[vs[1].(int)]
	}).(Ospf6AreaRangeOutput)
}

type Ospf6AreaVirtualLink struct {
	// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
	Authentication *string `pulumi:"authentication"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []Ospf6AreaVirtualLinkIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval *int `pulumi:"keyRolloverInterval"`
	// Virtual link entry name.
	Name *string `pulumi:"name"`
	// A.B.C.D, peer router ID.
	Peer *string `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
}

// Ospf6AreaVirtualLinkInput is an input type that accepts Ospf6AreaVirtualLinkArgs and Ospf6AreaVirtualLinkOutput values.
// You can construct a concrete instance of `Ospf6AreaVirtualLinkInput` via:
//
//	Ospf6AreaVirtualLinkArgs{...}
type Ospf6AreaVirtualLinkInput interface {
	pulumi.Input

	ToOspf6AreaVirtualLinkOutput() Ospf6AreaVirtualLinkOutput
	ToOspf6AreaVirtualLinkOutputWithContext(context.Context) Ospf6AreaVirtualLinkOutput
}

type Ospf6AreaVirtualLinkArgs struct {
	// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Dead interval.
	DeadInterval pulumi.IntPtrInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys Ospf6AreaVirtualLinkIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntPtrInput `pulumi:"keyRolloverInterval"`
	// Virtual link entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A.B.C.D, peer router ID.
	Peer pulumi.StringPtrInput `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput `pulumi:"transmitDelay"`
}

func (Ospf6AreaVirtualLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6AreaVirtualLink)(nil)).Elem()
}

func (i Ospf6AreaVirtualLinkArgs) ToOspf6AreaVirtualLinkOutput() Ospf6AreaVirtualLinkOutput {
	return i.ToOspf6AreaVirtualLinkOutputWithContext(context.Background())
}

func (i Ospf6AreaVirtualLinkArgs) ToOspf6AreaVirtualLinkOutputWithContext(ctx context.Context) Ospf6AreaVirtualLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6AreaVirtualLinkOutput)
}

// Ospf6AreaVirtualLinkArrayInput is an input type that accepts Ospf6AreaVirtualLinkArray and Ospf6AreaVirtualLinkArrayOutput values.
// You can construct a concrete instance of `Ospf6AreaVirtualLinkArrayInput` via:
//
//	Ospf6AreaVirtualLinkArray{ Ospf6AreaVirtualLinkArgs{...} }
type Ospf6AreaVirtualLinkArrayInput interface {
	pulumi.Input

	ToOspf6AreaVirtualLinkArrayOutput() Ospf6AreaVirtualLinkArrayOutput
	ToOspf6AreaVirtualLinkArrayOutputWithContext(context.Context) Ospf6AreaVirtualLinkArrayOutput
}

type Ospf6AreaVirtualLinkArray []Ospf6AreaVirtualLinkInput

func (Ospf6AreaVirtualLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6AreaVirtualLink)(nil)).Elem()
}

func (i Ospf6AreaVirtualLinkArray) ToOspf6AreaVirtualLinkArrayOutput() Ospf6AreaVirtualLinkArrayOutput {
	return i.ToOspf6AreaVirtualLinkArrayOutputWithContext(context.Background())
}

func (i Ospf6AreaVirtualLinkArray) ToOspf6AreaVirtualLinkArrayOutputWithContext(ctx context.Context) Ospf6AreaVirtualLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6AreaVirtualLinkArrayOutput)
}

type Ospf6AreaVirtualLinkOutput struct{ *pulumi.OutputState }

func (Ospf6AreaVirtualLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6AreaVirtualLink)(nil)).Elem()
}

func (o Ospf6AreaVirtualLinkOutput) ToOspf6AreaVirtualLinkOutput() Ospf6AreaVirtualLinkOutput {
	return o
}

func (o Ospf6AreaVirtualLinkOutput) ToOspf6AreaVirtualLinkOutputWithContext(ctx context.Context) Ospf6AreaVirtualLinkOutput {
	return o
}

// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
func (o Ospf6AreaVirtualLinkOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLink) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Dead interval.
func (o Ospf6AreaVirtualLinkOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLink) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

// Hello interval.
func (o Ospf6AreaVirtualLinkOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLink) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
func (o Ospf6AreaVirtualLinkOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLink) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
func (o Ospf6AreaVirtualLinkOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLink) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o Ospf6AreaVirtualLinkOutput) IpsecKeys() Ospf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLink) []Ospf6AreaVirtualLinkIpsecKey { return v.IpsecKeys }).(Ospf6AreaVirtualLinkIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o Ospf6AreaVirtualLinkOutput) KeyRolloverInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLink) *int { return v.KeyRolloverInterval }).(pulumi.IntPtrOutput)
}

// Virtual link entry name.
func (o Ospf6AreaVirtualLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A.B.C.D, peer router ID.
func (o Ospf6AreaVirtualLinkOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLink) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

// Retransmit interval.
func (o Ospf6AreaVirtualLinkOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLink) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

// Transmit delay.
func (o Ospf6AreaVirtualLinkOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLink) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type Ospf6AreaVirtualLinkArrayOutput struct{ *pulumi.OutputState }

func (Ospf6AreaVirtualLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6AreaVirtualLink)(nil)).Elem()
}

func (o Ospf6AreaVirtualLinkArrayOutput) ToOspf6AreaVirtualLinkArrayOutput() Ospf6AreaVirtualLinkArrayOutput {
	return o
}

func (o Ospf6AreaVirtualLinkArrayOutput) ToOspf6AreaVirtualLinkArrayOutputWithContext(ctx context.Context) Ospf6AreaVirtualLinkArrayOutput {
	return o
}

func (o Ospf6AreaVirtualLinkArrayOutput) Index(i pulumi.IntInput) Ospf6AreaVirtualLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ospf6AreaVirtualLink {
		return vs[0].([]Ospf6AreaVirtualLink)[vs[1].(int)]
	}).(Ospf6AreaVirtualLinkOutput)
}

type Ospf6AreaVirtualLinkIpsecKey struct {
	// Authentication key.
	AuthKey *string `pulumi:"authKey"`
	// Encryption key.
	EncKey *string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi *int `pulumi:"spi"`
}

// Ospf6AreaVirtualLinkIpsecKeyInput is an input type that accepts Ospf6AreaVirtualLinkIpsecKeyArgs and Ospf6AreaVirtualLinkIpsecKeyOutput values.
// You can construct a concrete instance of `Ospf6AreaVirtualLinkIpsecKeyInput` via:
//
//	Ospf6AreaVirtualLinkIpsecKeyArgs{...}
type Ospf6AreaVirtualLinkIpsecKeyInput interface {
	pulumi.Input

	ToOspf6AreaVirtualLinkIpsecKeyOutput() Ospf6AreaVirtualLinkIpsecKeyOutput
	ToOspf6AreaVirtualLinkIpsecKeyOutputWithContext(context.Context) Ospf6AreaVirtualLinkIpsecKeyOutput
}

type Ospf6AreaVirtualLinkIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringPtrInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntPtrInput `pulumi:"spi"`
}

func (Ospf6AreaVirtualLinkIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (i Ospf6AreaVirtualLinkIpsecKeyArgs) ToOspf6AreaVirtualLinkIpsecKeyOutput() Ospf6AreaVirtualLinkIpsecKeyOutput {
	return i.ToOspf6AreaVirtualLinkIpsecKeyOutputWithContext(context.Background())
}

func (i Ospf6AreaVirtualLinkIpsecKeyArgs) ToOspf6AreaVirtualLinkIpsecKeyOutputWithContext(ctx context.Context) Ospf6AreaVirtualLinkIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6AreaVirtualLinkIpsecKeyOutput)
}

// Ospf6AreaVirtualLinkIpsecKeyArrayInput is an input type that accepts Ospf6AreaVirtualLinkIpsecKeyArray and Ospf6AreaVirtualLinkIpsecKeyArrayOutput values.
// You can construct a concrete instance of `Ospf6AreaVirtualLinkIpsecKeyArrayInput` via:
//
//	Ospf6AreaVirtualLinkIpsecKeyArray{ Ospf6AreaVirtualLinkIpsecKeyArgs{...} }
type Ospf6AreaVirtualLinkIpsecKeyArrayInput interface {
	pulumi.Input

	ToOspf6AreaVirtualLinkIpsecKeyArrayOutput() Ospf6AreaVirtualLinkIpsecKeyArrayOutput
	ToOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(context.Context) Ospf6AreaVirtualLinkIpsecKeyArrayOutput
}

type Ospf6AreaVirtualLinkIpsecKeyArray []Ospf6AreaVirtualLinkIpsecKeyInput

func (Ospf6AreaVirtualLinkIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (i Ospf6AreaVirtualLinkIpsecKeyArray) ToOspf6AreaVirtualLinkIpsecKeyArrayOutput() Ospf6AreaVirtualLinkIpsecKeyArrayOutput {
	return i.ToOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(context.Background())
}

func (i Ospf6AreaVirtualLinkIpsecKeyArray) ToOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(ctx context.Context) Ospf6AreaVirtualLinkIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6AreaVirtualLinkIpsecKeyArrayOutput)
}

type Ospf6AreaVirtualLinkIpsecKeyOutput struct{ *pulumi.OutputState }

func (Ospf6AreaVirtualLinkIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (o Ospf6AreaVirtualLinkIpsecKeyOutput) ToOspf6AreaVirtualLinkIpsecKeyOutput() Ospf6AreaVirtualLinkIpsecKeyOutput {
	return o
}

func (o Ospf6AreaVirtualLinkIpsecKeyOutput) ToOspf6AreaVirtualLinkIpsecKeyOutputWithContext(ctx context.Context) Ospf6AreaVirtualLinkIpsecKeyOutput {
	return o
}

// Authentication key.
func (o Ospf6AreaVirtualLinkIpsecKeyOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLinkIpsecKey) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// Encryption key.
func (o Ospf6AreaVirtualLinkIpsecKeyOutput) EncKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLinkIpsecKey) *string { return v.EncKey }).(pulumi.StringPtrOutput)
}

// Security Parameters Index.
func (o Ospf6AreaVirtualLinkIpsecKeyOutput) Spi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6AreaVirtualLinkIpsecKey) *int { return v.Spi }).(pulumi.IntPtrOutput)
}

type Ospf6AreaVirtualLinkIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (Ospf6AreaVirtualLinkIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (o Ospf6AreaVirtualLinkIpsecKeyArrayOutput) ToOspf6AreaVirtualLinkIpsecKeyArrayOutput() Ospf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o
}

func (o Ospf6AreaVirtualLinkIpsecKeyArrayOutput) ToOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(ctx context.Context) Ospf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o
}

func (o Ospf6AreaVirtualLinkIpsecKeyArrayOutput) Index(i pulumi.IntInput) Ospf6AreaVirtualLinkIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ospf6AreaVirtualLinkIpsecKey {
		return vs[0].([]Ospf6AreaVirtualLinkIpsecKey)[vs[1].(int)]
	}).(Ospf6AreaVirtualLinkIpsecKeyOutput)
}

type Ospf6Ospf6Interface struct {
	// A.B.C.D, in IPv4 address format.
	AreaId *string `pulumi:"areaId"`
	// Authentication mode. Valid values: `none`, `ah`, `esp`.
	Authentication *string `pulumi:"authentication"`
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Configuration interface name.
	Interface *string `pulumi:"interface"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []Ospf6Ospf6InterfaceIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval *int `pulumi:"keyRolloverInterval"`
	// MTU for OSPFv3 packets.
	Mtu *int `pulumi:"mtu"`
	// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
	MtuIgnore *string `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name *string `pulumi:"name"`
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors []Ospf6Ospf6InterfaceNeighbor `pulumi:"neighbors"`
	// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType *string `pulumi:"networkType"`
	// priority
	Priority *int `pulumi:"priority"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
}

// Ospf6Ospf6InterfaceInput is an input type that accepts Ospf6Ospf6InterfaceArgs and Ospf6Ospf6InterfaceOutput values.
// You can construct a concrete instance of `Ospf6Ospf6InterfaceInput` via:
//
//	Ospf6Ospf6InterfaceArgs{...}
type Ospf6Ospf6InterfaceInput interface {
	pulumi.Input

	ToOspf6Ospf6InterfaceOutput() Ospf6Ospf6InterfaceOutput
	ToOspf6Ospf6InterfaceOutputWithContext(context.Context) Ospf6Ospf6InterfaceOutput
}

type Ospf6Ospf6InterfaceArgs struct {
	// A.B.C.D, in IPv4 address format.
	AreaId pulumi.StringPtrInput `pulumi:"areaId"`
	// Authentication mode. Valid values: `none`, `ah`, `esp`.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// Dead interval.
	DeadInterval pulumi.IntPtrInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// Configuration interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys Ospf6Ospf6InterfaceIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntPtrInput `pulumi:"keyRolloverInterval"`
	// MTU for OSPFv3 packets.
	Mtu pulumi.IntPtrInput `pulumi:"mtu"`
	// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
	MtuIgnore pulumi.StringPtrInput `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors Ospf6Ospf6InterfaceNeighborArrayInput `pulumi:"neighbors"`
	// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// priority
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput `pulumi:"retransmitInterval"`
	// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput `pulumi:"transmitDelay"`
}

func (Ospf6Ospf6InterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6Ospf6Interface)(nil)).Elem()
}

func (i Ospf6Ospf6InterfaceArgs) ToOspf6Ospf6InterfaceOutput() Ospf6Ospf6InterfaceOutput {
	return i.ToOspf6Ospf6InterfaceOutputWithContext(context.Background())
}

func (i Ospf6Ospf6InterfaceArgs) ToOspf6Ospf6InterfaceOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6Ospf6InterfaceOutput)
}

// Ospf6Ospf6InterfaceArrayInput is an input type that accepts Ospf6Ospf6InterfaceArray and Ospf6Ospf6InterfaceArrayOutput values.
// You can construct a concrete instance of `Ospf6Ospf6InterfaceArrayInput` via:
//
//	Ospf6Ospf6InterfaceArray{ Ospf6Ospf6InterfaceArgs{...} }
type Ospf6Ospf6InterfaceArrayInput interface {
	pulumi.Input

	ToOspf6Ospf6InterfaceArrayOutput() Ospf6Ospf6InterfaceArrayOutput
	ToOspf6Ospf6InterfaceArrayOutputWithContext(context.Context) Ospf6Ospf6InterfaceArrayOutput
}

type Ospf6Ospf6InterfaceArray []Ospf6Ospf6InterfaceInput

func (Ospf6Ospf6InterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6Ospf6Interface)(nil)).Elem()
}

func (i Ospf6Ospf6InterfaceArray) ToOspf6Ospf6InterfaceArrayOutput() Ospf6Ospf6InterfaceArrayOutput {
	return i.ToOspf6Ospf6InterfaceArrayOutputWithContext(context.Background())
}

func (i Ospf6Ospf6InterfaceArray) ToOspf6Ospf6InterfaceArrayOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6Ospf6InterfaceArrayOutput)
}

type Ospf6Ospf6InterfaceOutput struct{ *pulumi.OutputState }

func (Ospf6Ospf6InterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6Ospf6Interface)(nil)).Elem()
}

func (o Ospf6Ospf6InterfaceOutput) ToOspf6Ospf6InterfaceOutput() Ospf6Ospf6InterfaceOutput {
	return o
}

func (o Ospf6Ospf6InterfaceOutput) ToOspf6Ospf6InterfaceOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceOutput {
	return o
}

// A.B.C.D, in IPv4 address format.
func (o Ospf6Ospf6InterfaceOutput) AreaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *string { return v.AreaId }).(pulumi.StringPtrOutput)
}

// Authentication mode. Valid values: `none`, `ah`, `esp`.
func (o Ospf6Ospf6InterfaceOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
func (o Ospf6Ospf6InterfaceOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o Ospf6Ospf6InterfaceOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// Dead interval.
func (o Ospf6Ospf6InterfaceOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

// Hello interval.
func (o Ospf6Ospf6InterfaceOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// Configuration interface name.
func (o Ospf6Ospf6InterfaceOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
func (o Ospf6Ospf6InterfaceOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
func (o Ospf6Ospf6InterfaceOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o Ospf6Ospf6InterfaceOutput) IpsecKeys() Ospf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) []Ospf6Ospf6InterfaceIpsecKey { return v.IpsecKeys }).(Ospf6Ospf6InterfaceIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o Ospf6Ospf6InterfaceOutput) KeyRolloverInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *int { return v.KeyRolloverInterval }).(pulumi.IntPtrOutput)
}

// MTU for OSPFv3 packets.
func (o Ospf6Ospf6InterfaceOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
func (o Ospf6Ospf6InterfaceOutput) MtuIgnore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *string { return v.MtuIgnore }).(pulumi.StringPtrOutput)
}

// Interface entry name.
func (o Ospf6Ospf6InterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
func (o Ospf6Ospf6InterfaceOutput) Neighbors() Ospf6Ospf6InterfaceNeighborArrayOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) []Ospf6Ospf6InterfaceNeighbor { return v.Neighbors }).(Ospf6Ospf6InterfaceNeighborArrayOutput)
}

// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
func (o Ospf6Ospf6InterfaceOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// priority
func (o Ospf6Ospf6InterfaceOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Retransmit interval.
func (o Ospf6Ospf6InterfaceOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
func (o Ospf6Ospf6InterfaceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Transmit delay.
func (o Ospf6Ospf6InterfaceOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6Interface) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type Ospf6Ospf6InterfaceArrayOutput struct{ *pulumi.OutputState }

func (Ospf6Ospf6InterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6Ospf6Interface)(nil)).Elem()
}

func (o Ospf6Ospf6InterfaceArrayOutput) ToOspf6Ospf6InterfaceArrayOutput() Ospf6Ospf6InterfaceArrayOutput {
	return o
}

func (o Ospf6Ospf6InterfaceArrayOutput) ToOspf6Ospf6InterfaceArrayOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceArrayOutput {
	return o
}

func (o Ospf6Ospf6InterfaceArrayOutput) Index(i pulumi.IntInput) Ospf6Ospf6InterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ospf6Ospf6Interface {
		return vs[0].([]Ospf6Ospf6Interface)[vs[1].(int)]
	}).(Ospf6Ospf6InterfaceOutput)
}

type Ospf6Ospf6InterfaceIpsecKey struct {
	// Authentication key.
	AuthKey *string `pulumi:"authKey"`
	// Encryption key.
	EncKey *string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi *int `pulumi:"spi"`
}

// Ospf6Ospf6InterfaceIpsecKeyInput is an input type that accepts Ospf6Ospf6InterfaceIpsecKeyArgs and Ospf6Ospf6InterfaceIpsecKeyOutput values.
// You can construct a concrete instance of `Ospf6Ospf6InterfaceIpsecKeyInput` via:
//
//	Ospf6Ospf6InterfaceIpsecKeyArgs{...}
type Ospf6Ospf6InterfaceIpsecKeyInput interface {
	pulumi.Input

	ToOspf6Ospf6InterfaceIpsecKeyOutput() Ospf6Ospf6InterfaceIpsecKeyOutput
	ToOspf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Context) Ospf6Ospf6InterfaceIpsecKeyOutput
}

type Ospf6Ospf6InterfaceIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringPtrInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntPtrInput `pulumi:"spi"`
}

func (Ospf6Ospf6InterfaceIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i Ospf6Ospf6InterfaceIpsecKeyArgs) ToOspf6Ospf6InterfaceIpsecKeyOutput() Ospf6Ospf6InterfaceIpsecKeyOutput {
	return i.ToOspf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Background())
}

func (i Ospf6Ospf6InterfaceIpsecKeyArgs) ToOspf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6Ospf6InterfaceIpsecKeyOutput)
}

// Ospf6Ospf6InterfaceIpsecKeyArrayInput is an input type that accepts Ospf6Ospf6InterfaceIpsecKeyArray and Ospf6Ospf6InterfaceIpsecKeyArrayOutput values.
// You can construct a concrete instance of `Ospf6Ospf6InterfaceIpsecKeyArrayInput` via:
//
//	Ospf6Ospf6InterfaceIpsecKeyArray{ Ospf6Ospf6InterfaceIpsecKeyArgs{...} }
type Ospf6Ospf6InterfaceIpsecKeyArrayInput interface {
	pulumi.Input

	ToOspf6Ospf6InterfaceIpsecKeyArrayOutput() Ospf6Ospf6InterfaceIpsecKeyArrayOutput
	ToOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Context) Ospf6Ospf6InterfaceIpsecKeyArrayOutput
}

type Ospf6Ospf6InterfaceIpsecKeyArray []Ospf6Ospf6InterfaceIpsecKeyInput

func (Ospf6Ospf6InterfaceIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i Ospf6Ospf6InterfaceIpsecKeyArray) ToOspf6Ospf6InterfaceIpsecKeyArrayOutput() Ospf6Ospf6InterfaceIpsecKeyArrayOutput {
	return i.ToOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Background())
}

func (i Ospf6Ospf6InterfaceIpsecKeyArray) ToOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6Ospf6InterfaceIpsecKeyArrayOutput)
}

type Ospf6Ospf6InterfaceIpsecKeyOutput struct{ *pulumi.OutputState }

func (Ospf6Ospf6InterfaceIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o Ospf6Ospf6InterfaceIpsecKeyOutput) ToOspf6Ospf6InterfaceIpsecKeyOutput() Ospf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

func (o Ospf6Ospf6InterfaceIpsecKeyOutput) ToOspf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

// Authentication key.
func (o Ospf6Ospf6InterfaceIpsecKeyOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6InterfaceIpsecKey) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// Encryption key.
func (o Ospf6Ospf6InterfaceIpsecKeyOutput) EncKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6InterfaceIpsecKey) *string { return v.EncKey }).(pulumi.StringPtrOutput)
}

// Security Parameters Index.
func (o Ospf6Ospf6InterfaceIpsecKeyOutput) Spi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6InterfaceIpsecKey) *int { return v.Spi }).(pulumi.IntPtrOutput)
}

type Ospf6Ospf6InterfaceIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (Ospf6Ospf6InterfaceIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o Ospf6Ospf6InterfaceIpsecKeyArrayOutput) ToOspf6Ospf6InterfaceIpsecKeyArrayOutput() Ospf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o Ospf6Ospf6InterfaceIpsecKeyArrayOutput) ToOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o Ospf6Ospf6InterfaceIpsecKeyArrayOutput) Index(i pulumi.IntInput) Ospf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ospf6Ospf6InterfaceIpsecKey {
		return vs[0].([]Ospf6Ospf6InterfaceIpsecKey)[vs[1].(int)]
	}).(Ospf6Ospf6InterfaceIpsecKeyOutput)
}

type Ospf6Ospf6InterfaceNeighbor struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// IPv6 link local address of the neighbor.
	Ip6 *string `pulumi:"ip6"`
	// Poll interval time in seconds.
	PollInterval *int `pulumi:"pollInterval"`
	// priority
	Priority *int `pulumi:"priority"`
}

// Ospf6Ospf6InterfaceNeighborInput is an input type that accepts Ospf6Ospf6InterfaceNeighborArgs and Ospf6Ospf6InterfaceNeighborOutput values.
// You can construct a concrete instance of `Ospf6Ospf6InterfaceNeighborInput` via:
//
//	Ospf6Ospf6InterfaceNeighborArgs{...}
type Ospf6Ospf6InterfaceNeighborInput interface {
	pulumi.Input

	ToOspf6Ospf6InterfaceNeighborOutput() Ospf6Ospf6InterfaceNeighborOutput
	ToOspf6Ospf6InterfaceNeighborOutputWithContext(context.Context) Ospf6Ospf6InterfaceNeighborOutput
}

type Ospf6Ospf6InterfaceNeighborArgs struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// IPv6 link local address of the neighbor.
	Ip6 pulumi.StringPtrInput `pulumi:"ip6"`
	// Poll interval time in seconds.
	PollInterval pulumi.IntPtrInput `pulumi:"pollInterval"`
	// priority
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (Ospf6Ospf6InterfaceNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i Ospf6Ospf6InterfaceNeighborArgs) ToOspf6Ospf6InterfaceNeighborOutput() Ospf6Ospf6InterfaceNeighborOutput {
	return i.ToOspf6Ospf6InterfaceNeighborOutputWithContext(context.Background())
}

func (i Ospf6Ospf6InterfaceNeighborArgs) ToOspf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6Ospf6InterfaceNeighborOutput)
}

// Ospf6Ospf6InterfaceNeighborArrayInput is an input type that accepts Ospf6Ospf6InterfaceNeighborArray and Ospf6Ospf6InterfaceNeighborArrayOutput values.
// You can construct a concrete instance of `Ospf6Ospf6InterfaceNeighborArrayInput` via:
//
//	Ospf6Ospf6InterfaceNeighborArray{ Ospf6Ospf6InterfaceNeighborArgs{...} }
type Ospf6Ospf6InterfaceNeighborArrayInput interface {
	pulumi.Input

	ToOspf6Ospf6InterfaceNeighborArrayOutput() Ospf6Ospf6InterfaceNeighborArrayOutput
	ToOspf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Context) Ospf6Ospf6InterfaceNeighborArrayOutput
}

type Ospf6Ospf6InterfaceNeighborArray []Ospf6Ospf6InterfaceNeighborInput

func (Ospf6Ospf6InterfaceNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i Ospf6Ospf6InterfaceNeighborArray) ToOspf6Ospf6InterfaceNeighborArrayOutput() Ospf6Ospf6InterfaceNeighborArrayOutput {
	return i.ToOspf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Background())
}

func (i Ospf6Ospf6InterfaceNeighborArray) ToOspf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6Ospf6InterfaceNeighborArrayOutput)
}

type Ospf6Ospf6InterfaceNeighborOutput struct{ *pulumi.OutputState }

func (Ospf6Ospf6InterfaceNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o Ospf6Ospf6InterfaceNeighborOutput) ToOspf6Ospf6InterfaceNeighborOutput() Ospf6Ospf6InterfaceNeighborOutput {
	return o
}

func (o Ospf6Ospf6InterfaceNeighborOutput) ToOspf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceNeighborOutput {
	return o
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o Ospf6Ospf6InterfaceNeighborOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6InterfaceNeighbor) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// IPv6 link local address of the neighbor.
func (o Ospf6Ospf6InterfaceNeighborOutput) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6InterfaceNeighbor) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

// Poll interval time in seconds.
func (o Ospf6Ospf6InterfaceNeighborOutput) PollInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6InterfaceNeighbor) *int { return v.PollInterval }).(pulumi.IntPtrOutput)
}

// priority
func (o Ospf6Ospf6InterfaceNeighborOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Ospf6InterfaceNeighbor) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type Ospf6Ospf6InterfaceNeighborArrayOutput struct{ *pulumi.OutputState }

func (Ospf6Ospf6InterfaceNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o Ospf6Ospf6InterfaceNeighborArrayOutput) ToOspf6Ospf6InterfaceNeighborArrayOutput() Ospf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o Ospf6Ospf6InterfaceNeighborArrayOutput) ToOspf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) Ospf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o Ospf6Ospf6InterfaceNeighborArrayOutput) Index(i pulumi.IntInput) Ospf6Ospf6InterfaceNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ospf6Ospf6InterfaceNeighbor {
		return vs[0].([]Ospf6Ospf6InterfaceNeighbor)[vs[1].(int)]
	}).(Ospf6Ospf6InterfaceNeighborOutput)
}

type Ospf6PassiveInterface struct {
	// Passive interface name.
	Name *string `pulumi:"name"`
}

// Ospf6PassiveInterfaceInput is an input type that accepts Ospf6PassiveInterfaceArgs and Ospf6PassiveInterfaceOutput values.
// You can construct a concrete instance of `Ospf6PassiveInterfaceInput` via:
//
//	Ospf6PassiveInterfaceArgs{...}
type Ospf6PassiveInterfaceInput interface {
	pulumi.Input

	ToOspf6PassiveInterfaceOutput() Ospf6PassiveInterfaceOutput
	ToOspf6PassiveInterfaceOutputWithContext(context.Context) Ospf6PassiveInterfaceOutput
}

type Ospf6PassiveInterfaceArgs struct {
	// Passive interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Ospf6PassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6PassiveInterface)(nil)).Elem()
}

func (i Ospf6PassiveInterfaceArgs) ToOspf6PassiveInterfaceOutput() Ospf6PassiveInterfaceOutput {
	return i.ToOspf6PassiveInterfaceOutputWithContext(context.Background())
}

func (i Ospf6PassiveInterfaceArgs) ToOspf6PassiveInterfaceOutputWithContext(ctx context.Context) Ospf6PassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6PassiveInterfaceOutput)
}

// Ospf6PassiveInterfaceArrayInput is an input type that accepts Ospf6PassiveInterfaceArray and Ospf6PassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `Ospf6PassiveInterfaceArrayInput` via:
//
//	Ospf6PassiveInterfaceArray{ Ospf6PassiveInterfaceArgs{...} }
type Ospf6PassiveInterfaceArrayInput interface {
	pulumi.Input

	ToOspf6PassiveInterfaceArrayOutput() Ospf6PassiveInterfaceArrayOutput
	ToOspf6PassiveInterfaceArrayOutputWithContext(context.Context) Ospf6PassiveInterfaceArrayOutput
}

type Ospf6PassiveInterfaceArray []Ospf6PassiveInterfaceInput

func (Ospf6PassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6PassiveInterface)(nil)).Elem()
}

func (i Ospf6PassiveInterfaceArray) ToOspf6PassiveInterfaceArrayOutput() Ospf6PassiveInterfaceArrayOutput {
	return i.ToOspf6PassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i Ospf6PassiveInterfaceArray) ToOspf6PassiveInterfaceArrayOutputWithContext(ctx context.Context) Ospf6PassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6PassiveInterfaceArrayOutput)
}

type Ospf6PassiveInterfaceOutput struct{ *pulumi.OutputState }

func (Ospf6PassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6PassiveInterface)(nil)).Elem()
}

func (o Ospf6PassiveInterfaceOutput) ToOspf6PassiveInterfaceOutput() Ospf6PassiveInterfaceOutput {
	return o
}

func (o Ospf6PassiveInterfaceOutput) ToOspf6PassiveInterfaceOutputWithContext(ctx context.Context) Ospf6PassiveInterfaceOutput {
	return o
}

// Passive interface name.
func (o Ospf6PassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6PassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Ospf6PassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (Ospf6PassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6PassiveInterface)(nil)).Elem()
}

func (o Ospf6PassiveInterfaceArrayOutput) ToOspf6PassiveInterfaceArrayOutput() Ospf6PassiveInterfaceArrayOutput {
	return o
}

func (o Ospf6PassiveInterfaceArrayOutput) ToOspf6PassiveInterfaceArrayOutputWithContext(ctx context.Context) Ospf6PassiveInterfaceArrayOutput {
	return o
}

func (o Ospf6PassiveInterfaceArrayOutput) Index(i pulumi.IntInput) Ospf6PassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ospf6PassiveInterface {
		return vs[0].([]Ospf6PassiveInterface)[vs[1].(int)]
	}).(Ospf6PassiveInterfaceOutput)
}

type Ospf6Redistribute struct {
	// Redistribute metric setting.
	Metric *int `pulumi:"metric"`
	// Metric type. Valid values: `1`, `2`.
	MetricType *string `pulumi:"metricType"`
	// Redistribute name.
	Name *string `pulumi:"name"`
	// Route map name.
	Routemap *string `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// Ospf6RedistributeInput is an input type that accepts Ospf6RedistributeArgs and Ospf6RedistributeOutput values.
// You can construct a concrete instance of `Ospf6RedistributeInput` via:
//
//	Ospf6RedistributeArgs{...}
type Ospf6RedistributeInput interface {
	pulumi.Input

	ToOspf6RedistributeOutput() Ospf6RedistributeOutput
	ToOspf6RedistributeOutputWithContext(context.Context) Ospf6RedistributeOutput
}

type Ospf6RedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Metric type. Valid values: `1`, `2`.
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	// Redistribute name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (Ospf6RedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6Redistribute)(nil)).Elem()
}

func (i Ospf6RedistributeArgs) ToOspf6RedistributeOutput() Ospf6RedistributeOutput {
	return i.ToOspf6RedistributeOutputWithContext(context.Background())
}

func (i Ospf6RedistributeArgs) ToOspf6RedistributeOutputWithContext(ctx context.Context) Ospf6RedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6RedistributeOutput)
}

// Ospf6RedistributeArrayInput is an input type that accepts Ospf6RedistributeArray and Ospf6RedistributeArrayOutput values.
// You can construct a concrete instance of `Ospf6RedistributeArrayInput` via:
//
//	Ospf6RedistributeArray{ Ospf6RedistributeArgs{...} }
type Ospf6RedistributeArrayInput interface {
	pulumi.Input

	ToOspf6RedistributeArrayOutput() Ospf6RedistributeArrayOutput
	ToOspf6RedistributeArrayOutputWithContext(context.Context) Ospf6RedistributeArrayOutput
}

type Ospf6RedistributeArray []Ospf6RedistributeInput

func (Ospf6RedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6Redistribute)(nil)).Elem()
}

func (i Ospf6RedistributeArray) ToOspf6RedistributeArrayOutput() Ospf6RedistributeArrayOutput {
	return i.ToOspf6RedistributeArrayOutputWithContext(context.Background())
}

func (i Ospf6RedistributeArray) ToOspf6RedistributeArrayOutputWithContext(ctx context.Context) Ospf6RedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6RedistributeArrayOutput)
}

type Ospf6RedistributeOutput struct{ *pulumi.OutputState }

func (Ospf6RedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6Redistribute)(nil)).Elem()
}

func (o Ospf6RedistributeOutput) ToOspf6RedistributeOutput() Ospf6RedistributeOutput {
	return o
}

func (o Ospf6RedistributeOutput) ToOspf6RedistributeOutputWithContext(ctx context.Context) Ospf6RedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o Ospf6RedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6Redistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Metric type. Valid values: `1`, `2`.
func (o Ospf6RedistributeOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Redistribute) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

// Redistribute name.
func (o Ospf6RedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Redistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o Ospf6RedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Redistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o Ospf6RedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6Redistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type Ospf6RedistributeArrayOutput struct{ *pulumi.OutputState }

func (Ospf6RedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6Redistribute)(nil)).Elem()
}

func (o Ospf6RedistributeArrayOutput) ToOspf6RedistributeArrayOutput() Ospf6RedistributeArrayOutput {
	return o
}

func (o Ospf6RedistributeArrayOutput) ToOspf6RedistributeArrayOutputWithContext(ctx context.Context) Ospf6RedistributeArrayOutput {
	return o
}

func (o Ospf6RedistributeArrayOutput) Index(i pulumi.IntInput) Ospf6RedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ospf6Redistribute {
		return vs[0].([]Ospf6Redistribute)[vs[1].(int)]
	}).(Ospf6RedistributeOutput)
}

type Ospf6SummaryAddress struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise *string `pulumi:"advertise"`
	// Summary address entry ID.
	Id *int `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
	// Tag value.
	Tag *int `pulumi:"tag"`
}

// Ospf6SummaryAddressInput is an input type that accepts Ospf6SummaryAddressArgs and Ospf6SummaryAddressOutput values.
// You can construct a concrete instance of `Ospf6SummaryAddressInput` via:
//
//	Ospf6SummaryAddressArgs{...}
type Ospf6SummaryAddressInput interface {
	pulumi.Input

	ToOspf6SummaryAddressOutput() Ospf6SummaryAddressOutput
	ToOspf6SummaryAddressOutputWithContext(context.Context) Ospf6SummaryAddressOutput
}

type Ospf6SummaryAddressArgs struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise pulumi.StringPtrInput `pulumi:"advertise"`
	// Summary address entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
	// Tag value.
	Tag pulumi.IntPtrInput `pulumi:"tag"`
}

func (Ospf6SummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6SummaryAddress)(nil)).Elem()
}

func (i Ospf6SummaryAddressArgs) ToOspf6SummaryAddressOutput() Ospf6SummaryAddressOutput {
	return i.ToOspf6SummaryAddressOutputWithContext(context.Background())
}

func (i Ospf6SummaryAddressArgs) ToOspf6SummaryAddressOutputWithContext(ctx context.Context) Ospf6SummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6SummaryAddressOutput)
}

// Ospf6SummaryAddressArrayInput is an input type that accepts Ospf6SummaryAddressArray and Ospf6SummaryAddressArrayOutput values.
// You can construct a concrete instance of `Ospf6SummaryAddressArrayInput` via:
//
//	Ospf6SummaryAddressArray{ Ospf6SummaryAddressArgs{...} }
type Ospf6SummaryAddressArrayInput interface {
	pulumi.Input

	ToOspf6SummaryAddressArrayOutput() Ospf6SummaryAddressArrayOutput
	ToOspf6SummaryAddressArrayOutputWithContext(context.Context) Ospf6SummaryAddressArrayOutput
}

type Ospf6SummaryAddressArray []Ospf6SummaryAddressInput

func (Ospf6SummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6SummaryAddress)(nil)).Elem()
}

func (i Ospf6SummaryAddressArray) ToOspf6SummaryAddressArrayOutput() Ospf6SummaryAddressArrayOutput {
	return i.ToOspf6SummaryAddressArrayOutputWithContext(context.Background())
}

func (i Ospf6SummaryAddressArray) ToOspf6SummaryAddressArrayOutputWithContext(ctx context.Context) Ospf6SummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6SummaryAddressArrayOutput)
}

type Ospf6SummaryAddressOutput struct{ *pulumi.OutputState }

func (Ospf6SummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ospf6SummaryAddress)(nil)).Elem()
}

func (o Ospf6SummaryAddressOutput) ToOspf6SummaryAddressOutput() Ospf6SummaryAddressOutput {
	return o
}

func (o Ospf6SummaryAddressOutput) ToOspf6SummaryAddressOutputWithContext(ctx context.Context) Ospf6SummaryAddressOutput {
	return o
}

// Enable/disable advertise status. Valid values: `disable`, `enable`.
func (o Ospf6SummaryAddressOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6SummaryAddress) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

// Summary address entry ID.
func (o Ospf6SummaryAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6SummaryAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 prefix.
func (o Ospf6SummaryAddressOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ospf6SummaryAddress) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

// Tag value.
func (o Ospf6SummaryAddressOutput) Tag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ospf6SummaryAddress) *int { return v.Tag }).(pulumi.IntPtrOutput)
}

type Ospf6SummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (Ospf6SummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ospf6SummaryAddress)(nil)).Elem()
}

func (o Ospf6SummaryAddressArrayOutput) ToOspf6SummaryAddressArrayOutput() Ospf6SummaryAddressArrayOutput {
	return o
}

func (o Ospf6SummaryAddressArrayOutput) ToOspf6SummaryAddressArrayOutputWithContext(ctx context.Context) Ospf6SummaryAddressArrayOutput {
	return o
}

func (o Ospf6SummaryAddressArrayOutput) Index(i pulumi.IntInput) Ospf6SummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ospf6SummaryAddress {
		return vs[0].([]Ospf6SummaryAddress)[vs[1].(int)]
	}).(Ospf6SummaryAddressOutput)
}

type OspfArea struct {
	// Authentication type.
	Authentication *string `pulumi:"authentication"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Summary default cost of stub or NSSA area.
	DefaultCost *int `pulumi:"defaultCost"`
	// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
	FilterLists []OspfAreaFilterList `pulumi:"filterLists"`
	// Area entry IP address.
	Id *string `pulumi:"id"`
	// Redistribute, advertise, or do not originate Type-7 default route into NSSA area. Valid values: `enable`, `always`, `disable`.
	NssaDefaultInformationOriginate *string `pulumi:"nssaDefaultInformationOriginate"`
	// OSPF default metric.
	NssaDefaultInformationOriginateMetric *int `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPF metric type for default routes. Valid values: `1`, `2`.
	NssaDefaultInformationOriginateMetricType *string `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
	NssaRedistribution *string `pulumi:"nssaRedistribution"`
	// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
	NssaTranslatorRole *string `pulumi:"nssaTranslatorRole"`
	// OSPF area range configuration. The structure of `range` block is documented below.
	Ranges []OspfAreaRange `pulumi:"ranges"`
	// Enable/disable shortcut option. Valid values: `disable`, `enable`, `default`.
	Shortcut *string `pulumi:"shortcut"`
	// Stub summary setting. Valid values: `no-summary`, `summary`.
	StubType *string `pulumi:"stubType"`
	// Area type setting. Valid values: `regular`, `nssa`, `stub`.
	Type *string `pulumi:"type"`
	// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks []OspfAreaVirtualLink `pulumi:"virtualLinks"`
}

// OspfAreaInput is an input type that accepts OspfAreaArgs and OspfAreaOutput values.
// You can construct a concrete instance of `OspfAreaInput` via:
//
//	OspfAreaArgs{...}
type OspfAreaInput interface {
	pulumi.Input

	ToOspfAreaOutput() OspfAreaOutput
	ToOspfAreaOutputWithContext(context.Context) OspfAreaOutput
}

type OspfAreaArgs struct {
	// Authentication type.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Comment.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Summary default cost of stub or NSSA area.
	DefaultCost pulumi.IntPtrInput `pulumi:"defaultCost"`
	// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
	FilterLists OspfAreaFilterListArrayInput `pulumi:"filterLists"`
	// Area entry IP address.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Redistribute, advertise, or do not originate Type-7 default route into NSSA area. Valid values: `enable`, `always`, `disable`.
	NssaDefaultInformationOriginate pulumi.StringPtrInput `pulumi:"nssaDefaultInformationOriginate"`
	// OSPF default metric.
	NssaDefaultInformationOriginateMetric pulumi.IntPtrInput `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPF metric type for default routes. Valid values: `1`, `2`.
	NssaDefaultInformationOriginateMetricType pulumi.StringPtrInput `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
	NssaRedistribution pulumi.StringPtrInput `pulumi:"nssaRedistribution"`
	// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
	NssaTranslatorRole pulumi.StringPtrInput `pulumi:"nssaTranslatorRole"`
	// OSPF area range configuration. The structure of `range` block is documented below.
	Ranges OspfAreaRangeArrayInput `pulumi:"ranges"`
	// Enable/disable shortcut option. Valid values: `disable`, `enable`, `default`.
	Shortcut pulumi.StringPtrInput `pulumi:"shortcut"`
	// Stub summary setting. Valid values: `no-summary`, `summary`.
	StubType pulumi.StringPtrInput `pulumi:"stubType"`
	// Area type setting. Valid values: `regular`, `nssa`, `stub`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks OspfAreaVirtualLinkArrayInput `pulumi:"virtualLinks"`
}

func (OspfAreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfArea)(nil)).Elem()
}

func (i OspfAreaArgs) ToOspfAreaOutput() OspfAreaOutput {
	return i.ToOspfAreaOutputWithContext(context.Background())
}

func (i OspfAreaArgs) ToOspfAreaOutputWithContext(ctx context.Context) OspfAreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAreaOutput)
}

// OspfAreaArrayInput is an input type that accepts OspfAreaArray and OspfAreaArrayOutput values.
// You can construct a concrete instance of `OspfAreaArrayInput` via:
//
//	OspfAreaArray{ OspfAreaArgs{...} }
type OspfAreaArrayInput interface {
	pulumi.Input

	ToOspfAreaArrayOutput() OspfAreaArrayOutput
	ToOspfAreaArrayOutputWithContext(context.Context) OspfAreaArrayOutput
}

type OspfAreaArray []OspfAreaInput

func (OspfAreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfArea)(nil)).Elem()
}

func (i OspfAreaArray) ToOspfAreaArrayOutput() OspfAreaArrayOutput {
	return i.ToOspfAreaArrayOutputWithContext(context.Background())
}

func (i OspfAreaArray) ToOspfAreaArrayOutputWithContext(ctx context.Context) OspfAreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAreaArrayOutput)
}

type OspfAreaOutput struct{ *pulumi.OutputState }

func (OspfAreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfArea)(nil)).Elem()
}

func (o OspfAreaOutput) ToOspfAreaOutput() OspfAreaOutput {
	return o
}

func (o OspfAreaOutput) ToOspfAreaOutputWithContext(ctx context.Context) OspfAreaOutput {
	return o
}

// Authentication type.
func (o OspfAreaOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfArea) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Comment.
func (o OspfAreaOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfArea) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Summary default cost of stub or NSSA area.
func (o OspfAreaOutput) DefaultCost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfArea) *int { return v.DefaultCost }).(pulumi.IntPtrOutput)
}

// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
func (o OspfAreaOutput) FilterLists() OspfAreaFilterListArrayOutput {
	return o.ApplyT(func(v OspfArea) []OspfAreaFilterList { return v.FilterLists }).(OspfAreaFilterListArrayOutput)
}

// Area entry IP address.
func (o OspfAreaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfArea) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Redistribute, advertise, or do not originate Type-7 default route into NSSA area. Valid values: `enable`, `always`, `disable`.
func (o OspfAreaOutput) NssaDefaultInformationOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfArea) *string { return v.NssaDefaultInformationOriginate }).(pulumi.StringPtrOutput)
}

// OSPF default metric.
func (o OspfAreaOutput) NssaDefaultInformationOriginateMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfArea) *int { return v.NssaDefaultInformationOriginateMetric }).(pulumi.IntPtrOutput)
}

// OSPF metric type for default routes. Valid values: `1`, `2`.
func (o OspfAreaOutput) NssaDefaultInformationOriginateMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfArea) *string { return v.NssaDefaultInformationOriginateMetricType }).(pulumi.StringPtrOutput)
}

// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
func (o OspfAreaOutput) NssaRedistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfArea) *string { return v.NssaRedistribution }).(pulumi.StringPtrOutput)
}

// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
func (o OspfAreaOutput) NssaTranslatorRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfArea) *string { return v.NssaTranslatorRole }).(pulumi.StringPtrOutput)
}

// OSPF area range configuration. The structure of `range` block is documented below.
func (o OspfAreaOutput) Ranges() OspfAreaRangeArrayOutput {
	return o.ApplyT(func(v OspfArea) []OspfAreaRange { return v.Ranges }).(OspfAreaRangeArrayOutput)
}

// Enable/disable shortcut option. Valid values: `disable`, `enable`, `default`.
func (o OspfAreaOutput) Shortcut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfArea) *string { return v.Shortcut }).(pulumi.StringPtrOutput)
}

// Stub summary setting. Valid values: `no-summary`, `summary`.
func (o OspfAreaOutput) StubType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfArea) *string { return v.StubType }).(pulumi.StringPtrOutput)
}

// Area type setting. Valid values: `regular`, `nssa`, `stub`.
func (o OspfAreaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfArea) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
func (o OspfAreaOutput) VirtualLinks() OspfAreaVirtualLinkArrayOutput {
	return o.ApplyT(func(v OspfArea) []OspfAreaVirtualLink { return v.VirtualLinks }).(OspfAreaVirtualLinkArrayOutput)
}

type OspfAreaArrayOutput struct{ *pulumi.OutputState }

func (OspfAreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfArea)(nil)).Elem()
}

func (o OspfAreaArrayOutput) ToOspfAreaArrayOutput() OspfAreaArrayOutput {
	return o
}

func (o OspfAreaArrayOutput) ToOspfAreaArrayOutputWithContext(ctx context.Context) OspfAreaArrayOutput {
	return o
}

func (o OspfAreaArrayOutput) Index(i pulumi.IntInput) OspfAreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfArea {
		return vs[0].([]OspfArea)[vs[1].(int)]
	}).(OspfAreaOutput)
}

type OspfAreaFilterList struct {
	// Direction. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// Filter list entry ID.
	Id *int `pulumi:"id"`
	// Access-list or prefix-list name.
	List *string `pulumi:"list"`
}

// OspfAreaFilterListInput is an input type that accepts OspfAreaFilterListArgs and OspfAreaFilterListOutput values.
// You can construct a concrete instance of `OspfAreaFilterListInput` via:
//
//	OspfAreaFilterListArgs{...}
type OspfAreaFilterListInput interface {
	pulumi.Input

	ToOspfAreaFilterListOutput() OspfAreaFilterListOutput
	ToOspfAreaFilterListOutputWithContext(context.Context) OspfAreaFilterListOutput
}

type OspfAreaFilterListArgs struct {
	// Direction. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Filter list entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Access-list or prefix-list name.
	List pulumi.StringPtrInput `pulumi:"list"`
}

func (OspfAreaFilterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfAreaFilterList)(nil)).Elem()
}

func (i OspfAreaFilterListArgs) ToOspfAreaFilterListOutput() OspfAreaFilterListOutput {
	return i.ToOspfAreaFilterListOutputWithContext(context.Background())
}

func (i OspfAreaFilterListArgs) ToOspfAreaFilterListOutputWithContext(ctx context.Context) OspfAreaFilterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAreaFilterListOutput)
}

// OspfAreaFilterListArrayInput is an input type that accepts OspfAreaFilterListArray and OspfAreaFilterListArrayOutput values.
// You can construct a concrete instance of `OspfAreaFilterListArrayInput` via:
//
//	OspfAreaFilterListArray{ OspfAreaFilterListArgs{...} }
type OspfAreaFilterListArrayInput interface {
	pulumi.Input

	ToOspfAreaFilterListArrayOutput() OspfAreaFilterListArrayOutput
	ToOspfAreaFilterListArrayOutputWithContext(context.Context) OspfAreaFilterListArrayOutput
}

type OspfAreaFilterListArray []OspfAreaFilterListInput

func (OspfAreaFilterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfAreaFilterList)(nil)).Elem()
}

func (i OspfAreaFilterListArray) ToOspfAreaFilterListArrayOutput() OspfAreaFilterListArrayOutput {
	return i.ToOspfAreaFilterListArrayOutputWithContext(context.Background())
}

func (i OspfAreaFilterListArray) ToOspfAreaFilterListArrayOutputWithContext(ctx context.Context) OspfAreaFilterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAreaFilterListArrayOutput)
}

type OspfAreaFilterListOutput struct{ *pulumi.OutputState }

func (OspfAreaFilterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfAreaFilterList)(nil)).Elem()
}

func (o OspfAreaFilterListOutput) ToOspfAreaFilterListOutput() OspfAreaFilterListOutput {
	return o
}

func (o OspfAreaFilterListOutput) ToOspfAreaFilterListOutputWithContext(ctx context.Context) OspfAreaFilterListOutput {
	return o
}

// Direction. Valid values: `in`, `out`.
func (o OspfAreaFilterListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaFilterList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Filter list entry ID.
func (o OspfAreaFilterListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfAreaFilterList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Access-list or prefix-list name.
func (o OspfAreaFilterListOutput) List() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaFilterList) *string { return v.List }).(pulumi.StringPtrOutput)
}

type OspfAreaFilterListArrayOutput struct{ *pulumi.OutputState }

func (OspfAreaFilterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfAreaFilterList)(nil)).Elem()
}

func (o OspfAreaFilterListArrayOutput) ToOspfAreaFilterListArrayOutput() OspfAreaFilterListArrayOutput {
	return o
}

func (o OspfAreaFilterListArrayOutput) ToOspfAreaFilterListArrayOutputWithContext(ctx context.Context) OspfAreaFilterListArrayOutput {
	return o
}

func (o OspfAreaFilterListArrayOutput) Index(i pulumi.IntInput) OspfAreaFilterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfAreaFilterList {
		return vs[0].([]OspfAreaFilterList)[vs[1].(int)]
	}).(OspfAreaFilterListOutput)
}

type OspfAreaRange struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise *string `pulumi:"advertise"`
	// Range entry ID.
	Id *int `pulumi:"id"`
	// Prefix.
	Prefix *string `pulumi:"prefix"`
	// Substitute prefix.
	Substitute *string `pulumi:"substitute"`
	// Enable/disable substitute status. Valid values: `enable`, `disable`.
	SubstituteStatus *string `pulumi:"substituteStatus"`
}

// OspfAreaRangeInput is an input type that accepts OspfAreaRangeArgs and OspfAreaRangeOutput values.
// You can construct a concrete instance of `OspfAreaRangeInput` via:
//
//	OspfAreaRangeArgs{...}
type OspfAreaRangeInput interface {
	pulumi.Input

	ToOspfAreaRangeOutput() OspfAreaRangeOutput
	ToOspfAreaRangeOutputWithContext(context.Context) OspfAreaRangeOutput
}

type OspfAreaRangeArgs struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise pulumi.StringPtrInput `pulumi:"advertise"`
	// Range entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Substitute prefix.
	Substitute pulumi.StringPtrInput `pulumi:"substitute"`
	// Enable/disable substitute status. Valid values: `enable`, `disable`.
	SubstituteStatus pulumi.StringPtrInput `pulumi:"substituteStatus"`
}

func (OspfAreaRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfAreaRange)(nil)).Elem()
}

func (i OspfAreaRangeArgs) ToOspfAreaRangeOutput() OspfAreaRangeOutput {
	return i.ToOspfAreaRangeOutputWithContext(context.Background())
}

func (i OspfAreaRangeArgs) ToOspfAreaRangeOutputWithContext(ctx context.Context) OspfAreaRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAreaRangeOutput)
}

// OspfAreaRangeArrayInput is an input type that accepts OspfAreaRangeArray and OspfAreaRangeArrayOutput values.
// You can construct a concrete instance of `OspfAreaRangeArrayInput` via:
//
//	OspfAreaRangeArray{ OspfAreaRangeArgs{...} }
type OspfAreaRangeArrayInput interface {
	pulumi.Input

	ToOspfAreaRangeArrayOutput() OspfAreaRangeArrayOutput
	ToOspfAreaRangeArrayOutputWithContext(context.Context) OspfAreaRangeArrayOutput
}

type OspfAreaRangeArray []OspfAreaRangeInput

func (OspfAreaRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfAreaRange)(nil)).Elem()
}

func (i OspfAreaRangeArray) ToOspfAreaRangeArrayOutput() OspfAreaRangeArrayOutput {
	return i.ToOspfAreaRangeArrayOutputWithContext(context.Background())
}

func (i OspfAreaRangeArray) ToOspfAreaRangeArrayOutputWithContext(ctx context.Context) OspfAreaRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAreaRangeArrayOutput)
}

type OspfAreaRangeOutput struct{ *pulumi.OutputState }

func (OspfAreaRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfAreaRange)(nil)).Elem()
}

func (o OspfAreaRangeOutput) ToOspfAreaRangeOutput() OspfAreaRangeOutput {
	return o
}

func (o OspfAreaRangeOutput) ToOspfAreaRangeOutputWithContext(ctx context.Context) OspfAreaRangeOutput {
	return o
}

// Enable/disable advertise status. Valid values: `disable`, `enable`.
func (o OspfAreaRangeOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaRange) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

// Range entry ID.
func (o OspfAreaRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfAreaRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Prefix.
func (o OspfAreaRangeOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaRange) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Substitute prefix.
func (o OspfAreaRangeOutput) Substitute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaRange) *string { return v.Substitute }).(pulumi.StringPtrOutput)
}

// Enable/disable substitute status. Valid values: `enable`, `disable`.
func (o OspfAreaRangeOutput) SubstituteStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaRange) *string { return v.SubstituteStatus }).(pulumi.StringPtrOutput)
}

type OspfAreaRangeArrayOutput struct{ *pulumi.OutputState }

func (OspfAreaRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfAreaRange)(nil)).Elem()
}

func (o OspfAreaRangeArrayOutput) ToOspfAreaRangeArrayOutput() OspfAreaRangeArrayOutput {
	return o
}

func (o OspfAreaRangeArrayOutput) ToOspfAreaRangeArrayOutputWithContext(ctx context.Context) OspfAreaRangeArrayOutput {
	return o
}

func (o OspfAreaRangeArrayOutput) Index(i pulumi.IntInput) OspfAreaRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfAreaRange {
		return vs[0].([]OspfAreaRange)[vs[1].(int)]
	}).(OspfAreaRangeOutput)
}

type OspfAreaVirtualLink struct {
	// Authentication type.
	Authentication *string `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey *string `pulumi:"authenticationKey"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Message-digest key-chain name.
	Keychain *string `pulumi:"keychain"`
	// MD5 key.
	Md5Key *string `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain *string `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	//
	// The `md5Keys` block supports:
	Md5Keys []OspfAreaVirtualLinkMd5Key `pulumi:"md5Keys"`
	// Virtual link entry name.
	Name *string `pulumi:"name"`
	// Peer IP.
	Peer *string `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
}

// OspfAreaVirtualLinkInput is an input type that accepts OspfAreaVirtualLinkArgs and OspfAreaVirtualLinkOutput values.
// You can construct a concrete instance of `OspfAreaVirtualLinkInput` via:
//
//	OspfAreaVirtualLinkArgs{...}
type OspfAreaVirtualLinkInput interface {
	pulumi.Input

	ToOspfAreaVirtualLinkOutput() OspfAreaVirtualLinkOutput
	ToOspfAreaVirtualLinkOutputWithContext(context.Context) OspfAreaVirtualLinkOutput
}

type OspfAreaVirtualLinkArgs struct {
	// Authentication type.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey pulumi.StringPtrInput `pulumi:"authenticationKey"`
	// Dead interval.
	DeadInterval pulumi.IntPtrInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// Message-digest key-chain name.
	Keychain pulumi.StringPtrInput `pulumi:"keychain"`
	// MD5 key.
	Md5Key pulumi.StringPtrInput `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain pulumi.StringPtrInput `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	//
	// The `md5Keys` block supports:
	Md5Keys OspfAreaVirtualLinkMd5KeyArrayInput `pulumi:"md5Keys"`
	// Virtual link entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Peer IP.
	Peer pulumi.StringPtrInput `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput `pulumi:"transmitDelay"`
}

func (OspfAreaVirtualLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfAreaVirtualLink)(nil)).Elem()
}

func (i OspfAreaVirtualLinkArgs) ToOspfAreaVirtualLinkOutput() OspfAreaVirtualLinkOutput {
	return i.ToOspfAreaVirtualLinkOutputWithContext(context.Background())
}

func (i OspfAreaVirtualLinkArgs) ToOspfAreaVirtualLinkOutputWithContext(ctx context.Context) OspfAreaVirtualLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAreaVirtualLinkOutput)
}

// OspfAreaVirtualLinkArrayInput is an input type that accepts OspfAreaVirtualLinkArray and OspfAreaVirtualLinkArrayOutput values.
// You can construct a concrete instance of `OspfAreaVirtualLinkArrayInput` via:
//
//	OspfAreaVirtualLinkArray{ OspfAreaVirtualLinkArgs{...} }
type OspfAreaVirtualLinkArrayInput interface {
	pulumi.Input

	ToOspfAreaVirtualLinkArrayOutput() OspfAreaVirtualLinkArrayOutput
	ToOspfAreaVirtualLinkArrayOutputWithContext(context.Context) OspfAreaVirtualLinkArrayOutput
}

type OspfAreaVirtualLinkArray []OspfAreaVirtualLinkInput

func (OspfAreaVirtualLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfAreaVirtualLink)(nil)).Elem()
}

func (i OspfAreaVirtualLinkArray) ToOspfAreaVirtualLinkArrayOutput() OspfAreaVirtualLinkArrayOutput {
	return i.ToOspfAreaVirtualLinkArrayOutputWithContext(context.Background())
}

func (i OspfAreaVirtualLinkArray) ToOspfAreaVirtualLinkArrayOutputWithContext(ctx context.Context) OspfAreaVirtualLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAreaVirtualLinkArrayOutput)
}

type OspfAreaVirtualLinkOutput struct{ *pulumi.OutputState }

func (OspfAreaVirtualLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfAreaVirtualLink)(nil)).Elem()
}

func (o OspfAreaVirtualLinkOutput) ToOspfAreaVirtualLinkOutput() OspfAreaVirtualLinkOutput {
	return o
}

func (o OspfAreaVirtualLinkOutput) ToOspfAreaVirtualLinkOutputWithContext(ctx context.Context) OspfAreaVirtualLinkOutput {
	return o
}

// Authentication type.
func (o OspfAreaVirtualLinkOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Authentication key.
func (o OspfAreaVirtualLinkOutput) AuthenticationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) *string { return v.AuthenticationKey }).(pulumi.StringPtrOutput)
}

// Dead interval.
func (o OspfAreaVirtualLinkOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

// Hello interval.
func (o OspfAreaVirtualLinkOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// Message-digest key-chain name.
func (o OspfAreaVirtualLinkOutput) Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) *string { return v.Keychain }).(pulumi.StringPtrOutput)
}

// MD5 key.
func (o OspfAreaVirtualLinkOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

// Authentication MD5 key-chain name.
func (o OspfAreaVirtualLinkOutput) Md5Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) *string { return v.Md5Keychain }).(pulumi.StringPtrOutput)
}

// MD5 key. The structure of `md5Keys` block is documented below.
//
// The `md5Keys` block supports:
func (o OspfAreaVirtualLinkOutput) Md5Keys() OspfAreaVirtualLinkMd5KeyArrayOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) []OspfAreaVirtualLinkMd5Key { return v.Md5Keys }).(OspfAreaVirtualLinkMd5KeyArrayOutput)
}

// Virtual link entry name.
func (o OspfAreaVirtualLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Peer IP.
func (o OspfAreaVirtualLinkOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

// Retransmit interval.
func (o OspfAreaVirtualLinkOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

// Transmit delay.
func (o OspfAreaVirtualLinkOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLink) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type OspfAreaVirtualLinkArrayOutput struct{ *pulumi.OutputState }

func (OspfAreaVirtualLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfAreaVirtualLink)(nil)).Elem()
}

func (o OspfAreaVirtualLinkArrayOutput) ToOspfAreaVirtualLinkArrayOutput() OspfAreaVirtualLinkArrayOutput {
	return o
}

func (o OspfAreaVirtualLinkArrayOutput) ToOspfAreaVirtualLinkArrayOutputWithContext(ctx context.Context) OspfAreaVirtualLinkArrayOutput {
	return o
}

func (o OspfAreaVirtualLinkArrayOutput) Index(i pulumi.IntInput) OspfAreaVirtualLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfAreaVirtualLink {
		return vs[0].([]OspfAreaVirtualLink)[vs[1].(int)]
	}).(OspfAreaVirtualLinkOutput)
}

type OspfAreaVirtualLinkMd5Key struct {
	// Area entry IP address.
	Id *int `pulumi:"id"`
	// Password for the key.
	KeyString *string `pulumi:"keyString"`
}

// OspfAreaVirtualLinkMd5KeyInput is an input type that accepts OspfAreaVirtualLinkMd5KeyArgs and OspfAreaVirtualLinkMd5KeyOutput values.
// You can construct a concrete instance of `OspfAreaVirtualLinkMd5KeyInput` via:
//
//	OspfAreaVirtualLinkMd5KeyArgs{...}
type OspfAreaVirtualLinkMd5KeyInput interface {
	pulumi.Input

	ToOspfAreaVirtualLinkMd5KeyOutput() OspfAreaVirtualLinkMd5KeyOutput
	ToOspfAreaVirtualLinkMd5KeyOutputWithContext(context.Context) OspfAreaVirtualLinkMd5KeyOutput
}

type OspfAreaVirtualLinkMd5KeyArgs struct {
	// Area entry IP address.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Password for the key.
	KeyString pulumi.StringPtrInput `pulumi:"keyString"`
}

func (OspfAreaVirtualLinkMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (i OspfAreaVirtualLinkMd5KeyArgs) ToOspfAreaVirtualLinkMd5KeyOutput() OspfAreaVirtualLinkMd5KeyOutput {
	return i.ToOspfAreaVirtualLinkMd5KeyOutputWithContext(context.Background())
}

func (i OspfAreaVirtualLinkMd5KeyArgs) ToOspfAreaVirtualLinkMd5KeyOutputWithContext(ctx context.Context) OspfAreaVirtualLinkMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAreaVirtualLinkMd5KeyOutput)
}

// OspfAreaVirtualLinkMd5KeyArrayInput is an input type that accepts OspfAreaVirtualLinkMd5KeyArray and OspfAreaVirtualLinkMd5KeyArrayOutput values.
// You can construct a concrete instance of `OspfAreaVirtualLinkMd5KeyArrayInput` via:
//
//	OspfAreaVirtualLinkMd5KeyArray{ OspfAreaVirtualLinkMd5KeyArgs{...} }
type OspfAreaVirtualLinkMd5KeyArrayInput interface {
	pulumi.Input

	ToOspfAreaVirtualLinkMd5KeyArrayOutput() OspfAreaVirtualLinkMd5KeyArrayOutput
	ToOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(context.Context) OspfAreaVirtualLinkMd5KeyArrayOutput
}

type OspfAreaVirtualLinkMd5KeyArray []OspfAreaVirtualLinkMd5KeyInput

func (OspfAreaVirtualLinkMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (i OspfAreaVirtualLinkMd5KeyArray) ToOspfAreaVirtualLinkMd5KeyArrayOutput() OspfAreaVirtualLinkMd5KeyArrayOutput {
	return i.ToOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(context.Background())
}

func (i OspfAreaVirtualLinkMd5KeyArray) ToOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(ctx context.Context) OspfAreaVirtualLinkMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfAreaVirtualLinkMd5KeyArrayOutput)
}

type OspfAreaVirtualLinkMd5KeyOutput struct{ *pulumi.OutputState }

func (OspfAreaVirtualLinkMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (o OspfAreaVirtualLinkMd5KeyOutput) ToOspfAreaVirtualLinkMd5KeyOutput() OspfAreaVirtualLinkMd5KeyOutput {
	return o
}

func (o OspfAreaVirtualLinkMd5KeyOutput) ToOspfAreaVirtualLinkMd5KeyOutputWithContext(ctx context.Context) OspfAreaVirtualLinkMd5KeyOutput {
	return o
}

// Area entry IP address.
func (o OspfAreaVirtualLinkMd5KeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLinkMd5Key) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Password for the key.
func (o OspfAreaVirtualLinkMd5KeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfAreaVirtualLinkMd5Key) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

type OspfAreaVirtualLinkMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (OspfAreaVirtualLinkMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (o OspfAreaVirtualLinkMd5KeyArrayOutput) ToOspfAreaVirtualLinkMd5KeyArrayOutput() OspfAreaVirtualLinkMd5KeyArrayOutput {
	return o
}

func (o OspfAreaVirtualLinkMd5KeyArrayOutput) ToOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(ctx context.Context) OspfAreaVirtualLinkMd5KeyArrayOutput {
	return o
}

func (o OspfAreaVirtualLinkMd5KeyArrayOutput) Index(i pulumi.IntInput) OspfAreaVirtualLinkMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfAreaVirtualLinkMd5Key {
		return vs[0].([]OspfAreaVirtualLinkMd5Key)[vs[1].(int)]
	}).(OspfAreaVirtualLinkMd5KeyOutput)
}

type OspfDistributeList struct {
	// Access list name.
	AccessList *string `pulumi:"accessList"`
	// Distribute list entry ID.
	Id *int `pulumi:"id"`
	// Protocol type. Valid values: `connected`, `static`, `rip`.
	Protocol *string `pulumi:"protocol"`
}

// OspfDistributeListInput is an input type that accepts OspfDistributeListArgs and OspfDistributeListOutput values.
// You can construct a concrete instance of `OspfDistributeListInput` via:
//
//	OspfDistributeListArgs{...}
type OspfDistributeListInput interface {
	pulumi.Input

	ToOspfDistributeListOutput() OspfDistributeListOutput
	ToOspfDistributeListOutputWithContext(context.Context) OspfDistributeListOutput
}

type OspfDistributeListArgs struct {
	// Access list name.
	AccessList pulumi.StringPtrInput `pulumi:"accessList"`
	// Distribute list entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Protocol type. Valid values: `connected`, `static`, `rip`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (OspfDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfDistributeList)(nil)).Elem()
}

func (i OspfDistributeListArgs) ToOspfDistributeListOutput() OspfDistributeListOutput {
	return i.ToOspfDistributeListOutputWithContext(context.Background())
}

func (i OspfDistributeListArgs) ToOspfDistributeListOutputWithContext(ctx context.Context) OspfDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfDistributeListOutput)
}

// OspfDistributeListArrayInput is an input type that accepts OspfDistributeListArray and OspfDistributeListArrayOutput values.
// You can construct a concrete instance of `OspfDistributeListArrayInput` via:
//
//	OspfDistributeListArray{ OspfDistributeListArgs{...} }
type OspfDistributeListArrayInput interface {
	pulumi.Input

	ToOspfDistributeListArrayOutput() OspfDistributeListArrayOutput
	ToOspfDistributeListArrayOutputWithContext(context.Context) OspfDistributeListArrayOutput
}

type OspfDistributeListArray []OspfDistributeListInput

func (OspfDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfDistributeList)(nil)).Elem()
}

func (i OspfDistributeListArray) ToOspfDistributeListArrayOutput() OspfDistributeListArrayOutput {
	return i.ToOspfDistributeListArrayOutputWithContext(context.Background())
}

func (i OspfDistributeListArray) ToOspfDistributeListArrayOutputWithContext(ctx context.Context) OspfDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfDistributeListArrayOutput)
}

type OspfDistributeListOutput struct{ *pulumi.OutputState }

func (OspfDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfDistributeList)(nil)).Elem()
}

func (o OspfDistributeListOutput) ToOspfDistributeListOutput() OspfDistributeListOutput {
	return o
}

func (o OspfDistributeListOutput) ToOspfDistributeListOutputWithContext(ctx context.Context) OspfDistributeListOutput {
	return o
}

// Access list name.
func (o OspfDistributeListOutput) AccessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfDistributeList) *string { return v.AccessList }).(pulumi.StringPtrOutput)
}

// Distribute list entry ID.
func (o OspfDistributeListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfDistributeList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Protocol type. Valid values: `connected`, `static`, `rip`.
func (o OspfDistributeListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfDistributeList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type OspfDistributeListArrayOutput struct{ *pulumi.OutputState }

func (OspfDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfDistributeList)(nil)).Elem()
}

func (o OspfDistributeListArrayOutput) ToOspfDistributeListArrayOutput() OspfDistributeListArrayOutput {
	return o
}

func (o OspfDistributeListArrayOutput) ToOspfDistributeListArrayOutputWithContext(ctx context.Context) OspfDistributeListArrayOutput {
	return o
}

func (o OspfDistributeListArrayOutput) Index(i pulumi.IntInput) OspfDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfDistributeList {
		return vs[0].([]OspfDistributeList)[vs[1].(int)]
	}).(OspfDistributeListOutput)
}

type OspfNeighbor struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// Neighbor entry ID.
	Id *int `pulumi:"id"`
	// Interface IP address of the neighbor.
	Ip *string `pulumi:"ip"`
	// Poll interval time in seconds.
	PollInterval *int `pulumi:"pollInterval"`
	// Priority.
	Priority *int `pulumi:"priority"`
}

// OspfNeighborInput is an input type that accepts OspfNeighborArgs and OspfNeighborOutput values.
// You can construct a concrete instance of `OspfNeighborInput` via:
//
//	OspfNeighborArgs{...}
type OspfNeighborInput interface {
	pulumi.Input

	ToOspfNeighborOutput() OspfNeighborOutput
	ToOspfNeighborOutputWithContext(context.Context) OspfNeighborOutput
}

type OspfNeighborArgs struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// Neighbor entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface IP address of the neighbor.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Poll interval time in seconds.
	PollInterval pulumi.IntPtrInput `pulumi:"pollInterval"`
	// Priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (OspfNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfNeighbor)(nil)).Elem()
}

func (i OspfNeighborArgs) ToOspfNeighborOutput() OspfNeighborOutput {
	return i.ToOspfNeighborOutputWithContext(context.Background())
}

func (i OspfNeighborArgs) ToOspfNeighborOutputWithContext(ctx context.Context) OspfNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfNeighborOutput)
}

// OspfNeighborArrayInput is an input type that accepts OspfNeighborArray and OspfNeighborArrayOutput values.
// You can construct a concrete instance of `OspfNeighborArrayInput` via:
//
//	OspfNeighborArray{ OspfNeighborArgs{...} }
type OspfNeighborArrayInput interface {
	pulumi.Input

	ToOspfNeighborArrayOutput() OspfNeighborArrayOutput
	ToOspfNeighborArrayOutputWithContext(context.Context) OspfNeighborArrayOutput
}

type OspfNeighborArray []OspfNeighborInput

func (OspfNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfNeighbor)(nil)).Elem()
}

func (i OspfNeighborArray) ToOspfNeighborArrayOutput() OspfNeighborArrayOutput {
	return i.ToOspfNeighborArrayOutputWithContext(context.Background())
}

func (i OspfNeighborArray) ToOspfNeighborArrayOutputWithContext(ctx context.Context) OspfNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfNeighborArrayOutput)
}

type OspfNeighborOutput struct{ *pulumi.OutputState }

func (OspfNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfNeighbor)(nil)).Elem()
}

func (o OspfNeighborOutput) ToOspfNeighborOutput() OspfNeighborOutput {
	return o
}

func (o OspfNeighborOutput) ToOspfNeighborOutputWithContext(ctx context.Context) OspfNeighborOutput {
	return o
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o OspfNeighborOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfNeighbor) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// Neighbor entry ID.
func (o OspfNeighborOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfNeighbor) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface IP address of the neighbor.
func (o OspfNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Poll interval time in seconds.
func (o OspfNeighborOutput) PollInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfNeighbor) *int { return v.PollInterval }).(pulumi.IntPtrOutput)
}

// Priority.
func (o OspfNeighborOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfNeighbor) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type OspfNeighborArrayOutput struct{ *pulumi.OutputState }

func (OspfNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfNeighbor)(nil)).Elem()
}

func (o OspfNeighborArrayOutput) ToOspfNeighborArrayOutput() OspfNeighborArrayOutput {
	return o
}

func (o OspfNeighborArrayOutput) ToOspfNeighborArrayOutputWithContext(ctx context.Context) OspfNeighborArrayOutput {
	return o
}

func (o OspfNeighborArrayOutput) Index(i pulumi.IntInput) OspfNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfNeighbor {
		return vs[0].([]OspfNeighbor)[vs[1].(int)]
	}).(OspfNeighborOutput)
}

type OspfNetwork struct {
	// Attach the network to area.
	Area *string `pulumi:"area"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Network entry ID.
	Id *int `pulumi:"id"`
	// Prefix.
	Prefix *string `pulumi:"prefix"`
}

// OspfNetworkInput is an input type that accepts OspfNetworkArgs and OspfNetworkOutput values.
// You can construct a concrete instance of `OspfNetworkInput` via:
//
//	OspfNetworkArgs{...}
type OspfNetworkInput interface {
	pulumi.Input

	ToOspfNetworkOutput() OspfNetworkOutput
	ToOspfNetworkOutputWithContext(context.Context) OspfNetworkOutput
}

type OspfNetworkArgs struct {
	// Attach the network to area.
	Area pulumi.StringPtrInput `pulumi:"area"`
	// Comment.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Network entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (OspfNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfNetwork)(nil)).Elem()
}

func (i OspfNetworkArgs) ToOspfNetworkOutput() OspfNetworkOutput {
	return i.ToOspfNetworkOutputWithContext(context.Background())
}

func (i OspfNetworkArgs) ToOspfNetworkOutputWithContext(ctx context.Context) OspfNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfNetworkOutput)
}

// OspfNetworkArrayInput is an input type that accepts OspfNetworkArray and OspfNetworkArrayOutput values.
// You can construct a concrete instance of `OspfNetworkArrayInput` via:
//
//	OspfNetworkArray{ OspfNetworkArgs{...} }
type OspfNetworkArrayInput interface {
	pulumi.Input

	ToOspfNetworkArrayOutput() OspfNetworkArrayOutput
	ToOspfNetworkArrayOutputWithContext(context.Context) OspfNetworkArrayOutput
}

type OspfNetworkArray []OspfNetworkInput

func (OspfNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfNetwork)(nil)).Elem()
}

func (i OspfNetworkArray) ToOspfNetworkArrayOutput() OspfNetworkArrayOutput {
	return i.ToOspfNetworkArrayOutputWithContext(context.Background())
}

func (i OspfNetworkArray) ToOspfNetworkArrayOutputWithContext(ctx context.Context) OspfNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfNetworkArrayOutput)
}

type OspfNetworkOutput struct{ *pulumi.OutputState }

func (OspfNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfNetwork)(nil)).Elem()
}

func (o OspfNetworkOutput) ToOspfNetworkOutput() OspfNetworkOutput {
	return o
}

func (o OspfNetworkOutput) ToOspfNetworkOutputWithContext(ctx context.Context) OspfNetworkOutput {
	return o
}

// Attach the network to area.
func (o OspfNetworkOutput) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfNetwork) *string { return v.Area }).(pulumi.StringPtrOutput)
}

// Comment.
func (o OspfNetworkOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfNetwork) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Network entry ID.
func (o OspfNetworkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfNetwork) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Prefix.
func (o OspfNetworkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfNetwork) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type OspfNetworkArrayOutput struct{ *pulumi.OutputState }

func (OspfNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfNetwork)(nil)).Elem()
}

func (o OspfNetworkArrayOutput) ToOspfNetworkArrayOutput() OspfNetworkArrayOutput {
	return o
}

func (o OspfNetworkArrayOutput) ToOspfNetworkArrayOutputWithContext(ctx context.Context) OspfNetworkArrayOutput {
	return o
}

func (o OspfNetworkArrayOutput) Index(i pulumi.IntInput) OspfNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfNetwork {
		return vs[0].([]OspfNetwork)[vs[1].(int)]
	}).(OspfNetworkOutput)
}

type OspfOspfInterface struct {
	// Authentication type.
	Authentication *string `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey *string `pulumi:"authenticationKey"`
	// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
	DatabaseFilterOut *string `pulumi:"databaseFilterOut"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Number of hello packets within dead interval.
	HelloMultiplier *int `pulumi:"helloMultiplier"`
	// Configuration interface name.
	Interface *string `pulumi:"interface"`
	// IP address.
	Ip *string `pulumi:"ip"`
	// Message-digest key-chain name.
	Keychain *string `pulumi:"keychain"`
	// MD5 key.
	Md5Key *string `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain *string `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	//
	// The `md5Keys` block supports:
	Md5Keys []OspfOspfInterfaceMd5Key `pulumi:"md5Keys"`
	// MTU for database description packets.
	Mtu *int `pulumi:"mtu"`
	// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
	MtuIgnore *string `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name *string `pulumi:"name"`
	// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType *string `pulumi:"networkType"`
	// Prefix length.
	PrefixLength *int `pulumi:"prefixLength"`
	// Priority.
	Priority *int `pulumi:"priority"`
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout *int `pulumi:"resyncTimeout"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Enable/disable status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
}

// OspfOspfInterfaceInput is an input type that accepts OspfOspfInterfaceArgs and OspfOspfInterfaceOutput values.
// You can construct a concrete instance of `OspfOspfInterfaceInput` via:
//
//	OspfOspfInterfaceArgs{...}
type OspfOspfInterfaceInput interface {
	pulumi.Input

	ToOspfOspfInterfaceOutput() OspfOspfInterfaceOutput
	ToOspfOspfInterfaceOutputWithContext(context.Context) OspfOspfInterfaceOutput
}

type OspfOspfInterfaceArgs struct {
	// Authentication type.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey pulumi.StringPtrInput `pulumi:"authenticationKey"`
	// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Comment.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
	DatabaseFilterOut pulumi.StringPtrInput `pulumi:"databaseFilterOut"`
	// Dead interval.
	DeadInterval pulumi.IntPtrInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// Number of hello packets within dead interval.
	HelloMultiplier pulumi.IntPtrInput `pulumi:"helloMultiplier"`
	// Configuration interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IP address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Message-digest key-chain name.
	Keychain pulumi.StringPtrInput `pulumi:"keychain"`
	// MD5 key.
	Md5Key pulumi.StringPtrInput `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain pulumi.StringPtrInput `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	//
	// The `md5Keys` block supports:
	Md5Keys OspfOspfInterfaceMd5KeyArrayInput `pulumi:"md5Keys"`
	// MTU for database description packets.
	Mtu pulumi.IntPtrInput `pulumi:"mtu"`
	// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
	MtuIgnore pulumi.StringPtrInput `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// Prefix length.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// Priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout pulumi.IntPtrInput `pulumi:"resyncTimeout"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput `pulumi:"retransmitInterval"`
	// Enable/disable status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput `pulumi:"transmitDelay"`
}

func (OspfOspfInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfOspfInterface)(nil)).Elem()
}

func (i OspfOspfInterfaceArgs) ToOspfOspfInterfaceOutput() OspfOspfInterfaceOutput {
	return i.ToOspfOspfInterfaceOutputWithContext(context.Background())
}

func (i OspfOspfInterfaceArgs) ToOspfOspfInterfaceOutputWithContext(ctx context.Context) OspfOspfInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfOspfInterfaceOutput)
}

// OspfOspfInterfaceArrayInput is an input type that accepts OspfOspfInterfaceArray and OspfOspfInterfaceArrayOutput values.
// You can construct a concrete instance of `OspfOspfInterfaceArrayInput` via:
//
//	OspfOspfInterfaceArray{ OspfOspfInterfaceArgs{...} }
type OspfOspfInterfaceArrayInput interface {
	pulumi.Input

	ToOspfOspfInterfaceArrayOutput() OspfOspfInterfaceArrayOutput
	ToOspfOspfInterfaceArrayOutputWithContext(context.Context) OspfOspfInterfaceArrayOutput
}

type OspfOspfInterfaceArray []OspfOspfInterfaceInput

func (OspfOspfInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfOspfInterface)(nil)).Elem()
}

func (i OspfOspfInterfaceArray) ToOspfOspfInterfaceArrayOutput() OspfOspfInterfaceArrayOutput {
	return i.ToOspfOspfInterfaceArrayOutputWithContext(context.Background())
}

func (i OspfOspfInterfaceArray) ToOspfOspfInterfaceArrayOutputWithContext(ctx context.Context) OspfOspfInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfOspfInterfaceArrayOutput)
}

type OspfOspfInterfaceOutput struct{ *pulumi.OutputState }

func (OspfOspfInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfOspfInterface)(nil)).Elem()
}

func (o OspfOspfInterfaceOutput) ToOspfOspfInterfaceOutput() OspfOspfInterfaceOutput {
	return o
}

func (o OspfOspfInterfaceOutput) ToOspfOspfInterfaceOutputWithContext(ctx context.Context) OspfOspfInterfaceOutput {
	return o
}

// Authentication type.
func (o OspfOspfInterfaceOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Authentication key.
func (o OspfOspfInterfaceOutput) AuthenticationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.AuthenticationKey }).(pulumi.StringPtrOutput)
}

// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
func (o OspfOspfInterfaceOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Comment.
func (o OspfOspfInterfaceOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o OspfOspfInterfaceOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
func (o OspfOspfInterfaceOutput) DatabaseFilterOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.DatabaseFilterOut }).(pulumi.StringPtrOutput)
}

// Dead interval.
func (o OspfOspfInterfaceOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

// Hello interval.
func (o OspfOspfInterfaceOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// Number of hello packets within dead interval.
func (o OspfOspfInterfaceOutput) HelloMultiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *int { return v.HelloMultiplier }).(pulumi.IntPtrOutput)
}

// Configuration interface name.
func (o OspfOspfInterfaceOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IP address.
func (o OspfOspfInterfaceOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Message-digest key-chain name.
func (o OspfOspfInterfaceOutput) Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.Keychain }).(pulumi.StringPtrOutput)
}

// MD5 key.
func (o OspfOspfInterfaceOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

// Authentication MD5 key-chain name.
func (o OspfOspfInterfaceOutput) Md5Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.Md5Keychain }).(pulumi.StringPtrOutput)
}

// MD5 key. The structure of `md5Keys` block is documented below.
//
// The `md5Keys` block supports:
func (o OspfOspfInterfaceOutput) Md5Keys() OspfOspfInterfaceMd5KeyArrayOutput {
	return o.ApplyT(func(v OspfOspfInterface) []OspfOspfInterfaceMd5Key { return v.Md5Keys }).(OspfOspfInterfaceMd5KeyArrayOutput)
}

// MTU for database description packets.
func (o OspfOspfInterfaceOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
func (o OspfOspfInterfaceOutput) MtuIgnore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.MtuIgnore }).(pulumi.StringPtrOutput)
}

// Interface entry name.
func (o OspfOspfInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
func (o OspfOspfInterfaceOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// Prefix length.
func (o OspfOspfInterfaceOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// Priority.
func (o OspfOspfInterfaceOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Graceful restart neighbor resynchronization timeout.
func (o OspfOspfInterfaceOutput) ResyncTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *int { return v.ResyncTimeout }).(pulumi.IntPtrOutput)
}

// Retransmit interval.
func (o OspfOspfInterfaceOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable status. Valid values: `disable`, `enable`.
func (o OspfOspfInterfaceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Transmit delay.
func (o OspfOspfInterfaceOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfOspfInterface) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type OspfOspfInterfaceArrayOutput struct{ *pulumi.OutputState }

func (OspfOspfInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfOspfInterface)(nil)).Elem()
}

func (o OspfOspfInterfaceArrayOutput) ToOspfOspfInterfaceArrayOutput() OspfOspfInterfaceArrayOutput {
	return o
}

func (o OspfOspfInterfaceArrayOutput) ToOspfOspfInterfaceArrayOutputWithContext(ctx context.Context) OspfOspfInterfaceArrayOutput {
	return o
}

func (o OspfOspfInterfaceArrayOutput) Index(i pulumi.IntInput) OspfOspfInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfOspfInterface {
		return vs[0].([]OspfOspfInterface)[vs[1].(int)]
	}).(OspfOspfInterfaceOutput)
}

type OspfOspfInterfaceMd5Key struct {
	// Area entry IP address.
	Id *int `pulumi:"id"`
	// Password for the key.
	KeyString *string `pulumi:"keyString"`
}

// OspfOspfInterfaceMd5KeyInput is an input type that accepts OspfOspfInterfaceMd5KeyArgs and OspfOspfInterfaceMd5KeyOutput values.
// You can construct a concrete instance of `OspfOspfInterfaceMd5KeyInput` via:
//
//	OspfOspfInterfaceMd5KeyArgs{...}
type OspfOspfInterfaceMd5KeyInput interface {
	pulumi.Input

	ToOspfOspfInterfaceMd5KeyOutput() OspfOspfInterfaceMd5KeyOutput
	ToOspfOspfInterfaceMd5KeyOutputWithContext(context.Context) OspfOspfInterfaceMd5KeyOutput
}

type OspfOspfInterfaceMd5KeyArgs struct {
	// Area entry IP address.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Password for the key.
	KeyString pulumi.StringPtrInput `pulumi:"keyString"`
}

func (OspfOspfInterfaceMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i OspfOspfInterfaceMd5KeyArgs) ToOspfOspfInterfaceMd5KeyOutput() OspfOspfInterfaceMd5KeyOutput {
	return i.ToOspfOspfInterfaceMd5KeyOutputWithContext(context.Background())
}

func (i OspfOspfInterfaceMd5KeyArgs) ToOspfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) OspfOspfInterfaceMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfOspfInterfaceMd5KeyOutput)
}

// OspfOspfInterfaceMd5KeyArrayInput is an input type that accepts OspfOspfInterfaceMd5KeyArray and OspfOspfInterfaceMd5KeyArrayOutput values.
// You can construct a concrete instance of `OspfOspfInterfaceMd5KeyArrayInput` via:
//
//	OspfOspfInterfaceMd5KeyArray{ OspfOspfInterfaceMd5KeyArgs{...} }
type OspfOspfInterfaceMd5KeyArrayInput interface {
	pulumi.Input

	ToOspfOspfInterfaceMd5KeyArrayOutput() OspfOspfInterfaceMd5KeyArrayOutput
	ToOspfOspfInterfaceMd5KeyArrayOutputWithContext(context.Context) OspfOspfInterfaceMd5KeyArrayOutput
}

type OspfOspfInterfaceMd5KeyArray []OspfOspfInterfaceMd5KeyInput

func (OspfOspfInterfaceMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i OspfOspfInterfaceMd5KeyArray) ToOspfOspfInterfaceMd5KeyArrayOutput() OspfOspfInterfaceMd5KeyArrayOutput {
	return i.ToOspfOspfInterfaceMd5KeyArrayOutputWithContext(context.Background())
}

func (i OspfOspfInterfaceMd5KeyArray) ToOspfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) OspfOspfInterfaceMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfOspfInterfaceMd5KeyArrayOutput)
}

type OspfOspfInterfaceMd5KeyOutput struct{ *pulumi.OutputState }

func (OspfOspfInterfaceMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o OspfOspfInterfaceMd5KeyOutput) ToOspfOspfInterfaceMd5KeyOutput() OspfOspfInterfaceMd5KeyOutput {
	return o
}

func (o OspfOspfInterfaceMd5KeyOutput) ToOspfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) OspfOspfInterfaceMd5KeyOutput {
	return o
}

// Area entry IP address.
func (o OspfOspfInterfaceMd5KeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfOspfInterfaceMd5Key) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Password for the key.
func (o OspfOspfInterfaceMd5KeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfOspfInterfaceMd5Key) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

type OspfOspfInterfaceMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (OspfOspfInterfaceMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o OspfOspfInterfaceMd5KeyArrayOutput) ToOspfOspfInterfaceMd5KeyArrayOutput() OspfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o OspfOspfInterfaceMd5KeyArrayOutput) ToOspfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) OspfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o OspfOspfInterfaceMd5KeyArrayOutput) Index(i pulumi.IntInput) OspfOspfInterfaceMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfOspfInterfaceMd5Key {
		return vs[0].([]OspfOspfInterfaceMd5Key)[vs[1].(int)]
	}).(OspfOspfInterfaceMd5KeyOutput)
}

type OspfPassiveInterface struct {
	// Passive interface name.
	Name *string `pulumi:"name"`
}

// OspfPassiveInterfaceInput is an input type that accepts OspfPassiveInterfaceArgs and OspfPassiveInterfaceOutput values.
// You can construct a concrete instance of `OspfPassiveInterfaceInput` via:
//
//	OspfPassiveInterfaceArgs{...}
type OspfPassiveInterfaceInput interface {
	pulumi.Input

	ToOspfPassiveInterfaceOutput() OspfPassiveInterfaceOutput
	ToOspfPassiveInterfaceOutputWithContext(context.Context) OspfPassiveInterfaceOutput
}

type OspfPassiveInterfaceArgs struct {
	// Passive interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (OspfPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfPassiveInterface)(nil)).Elem()
}

func (i OspfPassiveInterfaceArgs) ToOspfPassiveInterfaceOutput() OspfPassiveInterfaceOutput {
	return i.ToOspfPassiveInterfaceOutputWithContext(context.Background())
}

func (i OspfPassiveInterfaceArgs) ToOspfPassiveInterfaceOutputWithContext(ctx context.Context) OspfPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfPassiveInterfaceOutput)
}

// OspfPassiveInterfaceArrayInput is an input type that accepts OspfPassiveInterfaceArray and OspfPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `OspfPassiveInterfaceArrayInput` via:
//
//	OspfPassiveInterfaceArray{ OspfPassiveInterfaceArgs{...} }
type OspfPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToOspfPassiveInterfaceArrayOutput() OspfPassiveInterfaceArrayOutput
	ToOspfPassiveInterfaceArrayOutputWithContext(context.Context) OspfPassiveInterfaceArrayOutput
}

type OspfPassiveInterfaceArray []OspfPassiveInterfaceInput

func (OspfPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfPassiveInterface)(nil)).Elem()
}

func (i OspfPassiveInterfaceArray) ToOspfPassiveInterfaceArrayOutput() OspfPassiveInterfaceArrayOutput {
	return i.ToOspfPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i OspfPassiveInterfaceArray) ToOspfPassiveInterfaceArrayOutputWithContext(ctx context.Context) OspfPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfPassiveInterfaceArrayOutput)
}

type OspfPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (OspfPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfPassiveInterface)(nil)).Elem()
}

func (o OspfPassiveInterfaceOutput) ToOspfPassiveInterfaceOutput() OspfPassiveInterfaceOutput {
	return o
}

func (o OspfPassiveInterfaceOutput) ToOspfPassiveInterfaceOutputWithContext(ctx context.Context) OspfPassiveInterfaceOutput {
	return o
}

// Passive interface name.
func (o OspfPassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfPassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OspfPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (OspfPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfPassiveInterface)(nil)).Elem()
}

func (o OspfPassiveInterfaceArrayOutput) ToOspfPassiveInterfaceArrayOutput() OspfPassiveInterfaceArrayOutput {
	return o
}

func (o OspfPassiveInterfaceArrayOutput) ToOspfPassiveInterfaceArrayOutputWithContext(ctx context.Context) OspfPassiveInterfaceArrayOutput {
	return o
}

func (o OspfPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) OspfPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfPassiveInterface {
		return vs[0].([]OspfPassiveInterface)[vs[1].(int)]
	}).(OspfPassiveInterfaceOutput)
}

type OspfRedistribute struct {
	// Redistribute metric setting.
	Metric *int `pulumi:"metric"`
	// Metric type. Valid values: `1`, `2`.
	MetricType *string `pulumi:"metricType"`
	// Redistribute name.
	Name *string `pulumi:"name"`
	// Route map name.
	Routemap *string `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Tag value.
	Tag *int `pulumi:"tag"`
}

// OspfRedistributeInput is an input type that accepts OspfRedistributeArgs and OspfRedistributeOutput values.
// You can construct a concrete instance of `OspfRedistributeInput` via:
//
//	OspfRedistributeArgs{...}
type OspfRedistributeInput interface {
	pulumi.Input

	ToOspfRedistributeOutput() OspfRedistributeOutput
	ToOspfRedistributeOutputWithContext(context.Context) OspfRedistributeOutput
}

type OspfRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Metric type. Valid values: `1`, `2`.
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	// Redistribute name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Tag value.
	Tag pulumi.IntPtrInput `pulumi:"tag"`
}

func (OspfRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfRedistribute)(nil)).Elem()
}

func (i OspfRedistributeArgs) ToOspfRedistributeOutput() OspfRedistributeOutput {
	return i.ToOspfRedistributeOutputWithContext(context.Background())
}

func (i OspfRedistributeArgs) ToOspfRedistributeOutputWithContext(ctx context.Context) OspfRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfRedistributeOutput)
}

// OspfRedistributeArrayInput is an input type that accepts OspfRedistributeArray and OspfRedistributeArrayOutput values.
// You can construct a concrete instance of `OspfRedistributeArrayInput` via:
//
//	OspfRedistributeArray{ OspfRedistributeArgs{...} }
type OspfRedistributeArrayInput interface {
	pulumi.Input

	ToOspfRedistributeArrayOutput() OspfRedistributeArrayOutput
	ToOspfRedistributeArrayOutputWithContext(context.Context) OspfRedistributeArrayOutput
}

type OspfRedistributeArray []OspfRedistributeInput

func (OspfRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfRedistribute)(nil)).Elem()
}

func (i OspfRedistributeArray) ToOspfRedistributeArrayOutput() OspfRedistributeArrayOutput {
	return i.ToOspfRedistributeArrayOutputWithContext(context.Background())
}

func (i OspfRedistributeArray) ToOspfRedistributeArrayOutputWithContext(ctx context.Context) OspfRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfRedistributeArrayOutput)
}

type OspfRedistributeOutput struct{ *pulumi.OutputState }

func (OspfRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfRedistribute)(nil)).Elem()
}

func (o OspfRedistributeOutput) ToOspfRedistributeOutput() OspfRedistributeOutput {
	return o
}

func (o OspfRedistributeOutput) ToOspfRedistributeOutputWithContext(ctx context.Context) OspfRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o OspfRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Metric type. Valid values: `1`, `2`.
func (o OspfRedistributeOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfRedistribute) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

// Redistribute name.
func (o OspfRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o OspfRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o OspfRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Tag value.
func (o OspfRedistributeOutput) Tag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfRedistribute) *int { return v.Tag }).(pulumi.IntPtrOutput)
}

type OspfRedistributeArrayOutput struct{ *pulumi.OutputState }

func (OspfRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfRedistribute)(nil)).Elem()
}

func (o OspfRedistributeArrayOutput) ToOspfRedistributeArrayOutput() OspfRedistributeArrayOutput {
	return o
}

func (o OspfRedistributeArrayOutput) ToOspfRedistributeArrayOutputWithContext(ctx context.Context) OspfRedistributeArrayOutput {
	return o
}

func (o OspfRedistributeArrayOutput) Index(i pulumi.IntInput) OspfRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfRedistribute {
		return vs[0].([]OspfRedistribute)[vs[1].(int)]
	}).(OspfRedistributeOutput)
}

type OspfSummaryAddress struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise *string `pulumi:"advertise"`
	// Summary address entry ID.
	Id *int `pulumi:"id"`
	// Prefix.
	Prefix *string `pulumi:"prefix"`
	// Tag value.
	Tag *int `pulumi:"tag"`
}

// OspfSummaryAddressInput is an input type that accepts OspfSummaryAddressArgs and OspfSummaryAddressOutput values.
// You can construct a concrete instance of `OspfSummaryAddressInput` via:
//
//	OspfSummaryAddressArgs{...}
type OspfSummaryAddressInput interface {
	pulumi.Input

	ToOspfSummaryAddressOutput() OspfSummaryAddressOutput
	ToOspfSummaryAddressOutputWithContext(context.Context) OspfSummaryAddressOutput
}

type OspfSummaryAddressArgs struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise pulumi.StringPtrInput `pulumi:"advertise"`
	// Summary address entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Tag value.
	Tag pulumi.IntPtrInput `pulumi:"tag"`
}

func (OspfSummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfSummaryAddress)(nil)).Elem()
}

func (i OspfSummaryAddressArgs) ToOspfSummaryAddressOutput() OspfSummaryAddressOutput {
	return i.ToOspfSummaryAddressOutputWithContext(context.Background())
}

func (i OspfSummaryAddressArgs) ToOspfSummaryAddressOutputWithContext(ctx context.Context) OspfSummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfSummaryAddressOutput)
}

// OspfSummaryAddressArrayInput is an input type that accepts OspfSummaryAddressArray and OspfSummaryAddressArrayOutput values.
// You can construct a concrete instance of `OspfSummaryAddressArrayInput` via:
//
//	OspfSummaryAddressArray{ OspfSummaryAddressArgs{...} }
type OspfSummaryAddressArrayInput interface {
	pulumi.Input

	ToOspfSummaryAddressArrayOutput() OspfSummaryAddressArrayOutput
	ToOspfSummaryAddressArrayOutputWithContext(context.Context) OspfSummaryAddressArrayOutput
}

type OspfSummaryAddressArray []OspfSummaryAddressInput

func (OspfSummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfSummaryAddress)(nil)).Elem()
}

func (i OspfSummaryAddressArray) ToOspfSummaryAddressArrayOutput() OspfSummaryAddressArrayOutput {
	return i.ToOspfSummaryAddressArrayOutputWithContext(context.Background())
}

func (i OspfSummaryAddressArray) ToOspfSummaryAddressArrayOutputWithContext(ctx context.Context) OspfSummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfSummaryAddressArrayOutput)
}

type OspfSummaryAddressOutput struct{ *pulumi.OutputState }

func (OspfSummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfSummaryAddress)(nil)).Elem()
}

func (o OspfSummaryAddressOutput) ToOspfSummaryAddressOutput() OspfSummaryAddressOutput {
	return o
}

func (o OspfSummaryAddressOutput) ToOspfSummaryAddressOutputWithContext(ctx context.Context) OspfSummaryAddressOutput {
	return o
}

// Enable/disable advertise status. Valid values: `disable`, `enable`.
func (o OspfSummaryAddressOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfSummaryAddress) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

// Summary address entry ID.
func (o OspfSummaryAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfSummaryAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Prefix.
func (o OspfSummaryAddressOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfSummaryAddress) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Tag value.
func (o OspfSummaryAddressOutput) Tag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfSummaryAddress) *int { return v.Tag }).(pulumi.IntPtrOutput)
}

type OspfSummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (OspfSummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfSummaryAddress)(nil)).Elem()
}

func (o OspfSummaryAddressArrayOutput) ToOspfSummaryAddressArrayOutput() OspfSummaryAddressArrayOutput {
	return o
}

func (o OspfSummaryAddressArrayOutput) ToOspfSummaryAddressArrayOutputWithContext(ctx context.Context) OspfSummaryAddressArrayOutput {
	return o
}

func (o OspfSummaryAddressArrayOutput) Index(i pulumi.IntInput) OspfSummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfSummaryAddress {
		return vs[0].([]OspfSummaryAddress)[vs[1].(int)]
	}).(OspfSummaryAddressOutput)
}

type Policy6Dstaddr struct {
	// Address/group name.
	Name *string `pulumi:"name"`
}

// Policy6DstaddrInput is an input type that accepts Policy6DstaddrArgs and Policy6DstaddrOutput values.
// You can construct a concrete instance of `Policy6DstaddrInput` via:
//
//	Policy6DstaddrArgs{...}
type Policy6DstaddrInput interface {
	pulumi.Input

	ToPolicy6DstaddrOutput() Policy6DstaddrOutput
	ToPolicy6DstaddrOutputWithContext(context.Context) Policy6DstaddrOutput
}

type Policy6DstaddrArgs struct {
	// Address/group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Dstaddr)(nil)).Elem()
}

func (i Policy6DstaddrArgs) ToPolicy6DstaddrOutput() Policy6DstaddrOutput {
	return i.ToPolicy6DstaddrOutputWithContext(context.Background())
}

func (i Policy6DstaddrArgs) ToPolicy6DstaddrOutputWithContext(ctx context.Context) Policy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6DstaddrOutput)
}

// Policy6DstaddrArrayInput is an input type that accepts Policy6DstaddrArray and Policy6DstaddrArrayOutput values.
// You can construct a concrete instance of `Policy6DstaddrArrayInput` via:
//
//	Policy6DstaddrArray{ Policy6DstaddrArgs{...} }
type Policy6DstaddrArrayInput interface {
	pulumi.Input

	ToPolicy6DstaddrArrayOutput() Policy6DstaddrArrayOutput
	ToPolicy6DstaddrArrayOutputWithContext(context.Context) Policy6DstaddrArrayOutput
}

type Policy6DstaddrArray []Policy6DstaddrInput

func (Policy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Dstaddr)(nil)).Elem()
}

func (i Policy6DstaddrArray) ToPolicy6DstaddrArrayOutput() Policy6DstaddrArrayOutput {
	return i.ToPolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i Policy6DstaddrArray) ToPolicy6DstaddrArrayOutputWithContext(ctx context.Context) Policy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6DstaddrArrayOutput)
}

type Policy6DstaddrOutput struct{ *pulumi.OutputState }

func (Policy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Dstaddr)(nil)).Elem()
}

func (o Policy6DstaddrOutput) ToPolicy6DstaddrOutput() Policy6DstaddrOutput {
	return o
}

func (o Policy6DstaddrOutput) ToPolicy6DstaddrOutputWithContext(ctx context.Context) Policy6DstaddrOutput {
	return o
}

// Address/group name.
func (o Policy6DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (Policy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Dstaddr)(nil)).Elem()
}

func (o Policy6DstaddrArrayOutput) ToPolicy6DstaddrArrayOutput() Policy6DstaddrArrayOutput {
	return o
}

func (o Policy6DstaddrArrayOutput) ToPolicy6DstaddrArrayOutputWithContext(ctx context.Context) Policy6DstaddrArrayOutput {
	return o
}

func (o Policy6DstaddrArrayOutput) Index(i pulumi.IntInput) Policy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6Dstaddr {
		return vs[0].([]Policy6Dstaddr)[vs[1].(int)]
	}).(Policy6DstaddrOutput)
}

type Policy6InternetServiceCustom struct {
	// Custom Destination Internet Service name.
	Name *string `pulumi:"name"`
}

// Policy6InternetServiceCustomInput is an input type that accepts Policy6InternetServiceCustomArgs and Policy6InternetServiceCustomOutput values.
// You can construct a concrete instance of `Policy6InternetServiceCustomInput` via:
//
//	Policy6InternetServiceCustomArgs{...}
type Policy6InternetServiceCustomInput interface {
	pulumi.Input

	ToPolicy6InternetServiceCustomOutput() Policy6InternetServiceCustomOutput
	ToPolicy6InternetServiceCustomOutputWithContext(context.Context) Policy6InternetServiceCustomOutput
}

type Policy6InternetServiceCustomArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6InternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6InternetServiceCustom)(nil)).Elem()
}

func (i Policy6InternetServiceCustomArgs) ToPolicy6InternetServiceCustomOutput() Policy6InternetServiceCustomOutput {
	return i.ToPolicy6InternetServiceCustomOutputWithContext(context.Background())
}

func (i Policy6InternetServiceCustomArgs) ToPolicy6InternetServiceCustomOutputWithContext(ctx context.Context) Policy6InternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6InternetServiceCustomOutput)
}

// Policy6InternetServiceCustomArrayInput is an input type that accepts Policy6InternetServiceCustomArray and Policy6InternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `Policy6InternetServiceCustomArrayInput` via:
//
//	Policy6InternetServiceCustomArray{ Policy6InternetServiceCustomArgs{...} }
type Policy6InternetServiceCustomArrayInput interface {
	pulumi.Input

	ToPolicy6InternetServiceCustomArrayOutput() Policy6InternetServiceCustomArrayOutput
	ToPolicy6InternetServiceCustomArrayOutputWithContext(context.Context) Policy6InternetServiceCustomArrayOutput
}

type Policy6InternetServiceCustomArray []Policy6InternetServiceCustomInput

func (Policy6InternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6InternetServiceCustom)(nil)).Elem()
}

func (i Policy6InternetServiceCustomArray) ToPolicy6InternetServiceCustomArrayOutput() Policy6InternetServiceCustomArrayOutput {
	return i.ToPolicy6InternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i Policy6InternetServiceCustomArray) ToPolicy6InternetServiceCustomArrayOutputWithContext(ctx context.Context) Policy6InternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6InternetServiceCustomArrayOutput)
}

type Policy6InternetServiceCustomOutput struct{ *pulumi.OutputState }

func (Policy6InternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6InternetServiceCustom)(nil)).Elem()
}

func (o Policy6InternetServiceCustomOutput) ToPolicy6InternetServiceCustomOutput() Policy6InternetServiceCustomOutput {
	return o
}

func (o Policy6InternetServiceCustomOutput) ToPolicy6InternetServiceCustomOutputWithContext(ctx context.Context) Policy6InternetServiceCustomOutput {
	return o
}

// Custom Destination Internet Service name.
func (o Policy6InternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6InternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6InternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (Policy6InternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6InternetServiceCustom)(nil)).Elem()
}

func (o Policy6InternetServiceCustomArrayOutput) ToPolicy6InternetServiceCustomArrayOutput() Policy6InternetServiceCustomArrayOutput {
	return o
}

func (o Policy6InternetServiceCustomArrayOutput) ToPolicy6InternetServiceCustomArrayOutputWithContext(ctx context.Context) Policy6InternetServiceCustomArrayOutput {
	return o
}

func (o Policy6InternetServiceCustomArrayOutput) Index(i pulumi.IntInput) Policy6InternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6InternetServiceCustom {
		return vs[0].([]Policy6InternetServiceCustom)[vs[1].(int)]
	}).(Policy6InternetServiceCustomOutput)
}

type Policy6InternetServiceId struct {
	// Destination Internet Service ID.
	Id *int `pulumi:"id"`
}

// Policy6InternetServiceIdInput is an input type that accepts Policy6InternetServiceIdArgs and Policy6InternetServiceIdOutput values.
// You can construct a concrete instance of `Policy6InternetServiceIdInput` via:
//
//	Policy6InternetServiceIdArgs{...}
type Policy6InternetServiceIdInput interface {
	pulumi.Input

	ToPolicy6InternetServiceIdOutput() Policy6InternetServiceIdOutput
	ToPolicy6InternetServiceIdOutputWithContext(context.Context) Policy6InternetServiceIdOutput
}

type Policy6InternetServiceIdArgs struct {
	// Destination Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Policy6InternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6InternetServiceId)(nil)).Elem()
}

func (i Policy6InternetServiceIdArgs) ToPolicy6InternetServiceIdOutput() Policy6InternetServiceIdOutput {
	return i.ToPolicy6InternetServiceIdOutputWithContext(context.Background())
}

func (i Policy6InternetServiceIdArgs) ToPolicy6InternetServiceIdOutputWithContext(ctx context.Context) Policy6InternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6InternetServiceIdOutput)
}

// Policy6InternetServiceIdArrayInput is an input type that accepts Policy6InternetServiceIdArray and Policy6InternetServiceIdArrayOutput values.
// You can construct a concrete instance of `Policy6InternetServiceIdArrayInput` via:
//
//	Policy6InternetServiceIdArray{ Policy6InternetServiceIdArgs{...} }
type Policy6InternetServiceIdArrayInput interface {
	pulumi.Input

	ToPolicy6InternetServiceIdArrayOutput() Policy6InternetServiceIdArrayOutput
	ToPolicy6InternetServiceIdArrayOutputWithContext(context.Context) Policy6InternetServiceIdArrayOutput
}

type Policy6InternetServiceIdArray []Policy6InternetServiceIdInput

func (Policy6InternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6InternetServiceId)(nil)).Elem()
}

func (i Policy6InternetServiceIdArray) ToPolicy6InternetServiceIdArrayOutput() Policy6InternetServiceIdArrayOutput {
	return i.ToPolicy6InternetServiceIdArrayOutputWithContext(context.Background())
}

func (i Policy6InternetServiceIdArray) ToPolicy6InternetServiceIdArrayOutputWithContext(ctx context.Context) Policy6InternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6InternetServiceIdArrayOutput)
}

type Policy6InternetServiceIdOutput struct{ *pulumi.OutputState }

func (Policy6InternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6InternetServiceId)(nil)).Elem()
}

func (o Policy6InternetServiceIdOutput) ToPolicy6InternetServiceIdOutput() Policy6InternetServiceIdOutput {
	return o
}

func (o Policy6InternetServiceIdOutput) ToPolicy6InternetServiceIdOutputWithContext(ctx context.Context) Policy6InternetServiceIdOutput {
	return o
}

// Destination Internet Service ID.
func (o Policy6InternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Policy6InternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Policy6InternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (Policy6InternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6InternetServiceId)(nil)).Elem()
}

func (o Policy6InternetServiceIdArrayOutput) ToPolicy6InternetServiceIdArrayOutput() Policy6InternetServiceIdArrayOutput {
	return o
}

func (o Policy6InternetServiceIdArrayOutput) ToPolicy6InternetServiceIdArrayOutputWithContext(ctx context.Context) Policy6InternetServiceIdArrayOutput {
	return o
}

func (o Policy6InternetServiceIdArrayOutput) Index(i pulumi.IntInput) Policy6InternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6InternetServiceId {
		return vs[0].([]Policy6InternetServiceId)[vs[1].(int)]
	}).(Policy6InternetServiceIdOutput)
}

type Policy6Srcaddr struct {
	// Address/group name.
	Name *string `pulumi:"name"`
}

// Policy6SrcaddrInput is an input type that accepts Policy6SrcaddrArgs and Policy6SrcaddrOutput values.
// You can construct a concrete instance of `Policy6SrcaddrInput` via:
//
//	Policy6SrcaddrArgs{...}
type Policy6SrcaddrInput interface {
	pulumi.Input

	ToPolicy6SrcaddrOutput() Policy6SrcaddrOutput
	ToPolicy6SrcaddrOutputWithContext(context.Context) Policy6SrcaddrOutput
}

type Policy6SrcaddrArgs struct {
	// Address/group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Srcaddr)(nil)).Elem()
}

func (i Policy6SrcaddrArgs) ToPolicy6SrcaddrOutput() Policy6SrcaddrOutput {
	return i.ToPolicy6SrcaddrOutputWithContext(context.Background())
}

func (i Policy6SrcaddrArgs) ToPolicy6SrcaddrOutputWithContext(ctx context.Context) Policy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6SrcaddrOutput)
}

// Policy6SrcaddrArrayInput is an input type that accepts Policy6SrcaddrArray and Policy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `Policy6SrcaddrArrayInput` via:
//
//	Policy6SrcaddrArray{ Policy6SrcaddrArgs{...} }
type Policy6SrcaddrArrayInput interface {
	pulumi.Input

	ToPolicy6SrcaddrArrayOutput() Policy6SrcaddrArrayOutput
	ToPolicy6SrcaddrArrayOutputWithContext(context.Context) Policy6SrcaddrArrayOutput
}

type Policy6SrcaddrArray []Policy6SrcaddrInput

func (Policy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Srcaddr)(nil)).Elem()
}

func (i Policy6SrcaddrArray) ToPolicy6SrcaddrArrayOutput() Policy6SrcaddrArrayOutput {
	return i.ToPolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i Policy6SrcaddrArray) ToPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) Policy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6SrcaddrArrayOutput)
}

type Policy6SrcaddrOutput struct{ *pulumi.OutputState }

func (Policy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Srcaddr)(nil)).Elem()
}

func (o Policy6SrcaddrOutput) ToPolicy6SrcaddrOutput() Policy6SrcaddrOutput {
	return o
}

func (o Policy6SrcaddrOutput) ToPolicy6SrcaddrOutputWithContext(ctx context.Context) Policy6SrcaddrOutput {
	return o
}

// Address/group name.
func (o Policy6SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (Policy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Srcaddr)(nil)).Elem()
}

func (o Policy6SrcaddrArrayOutput) ToPolicy6SrcaddrArrayOutput() Policy6SrcaddrArrayOutput {
	return o
}

func (o Policy6SrcaddrArrayOutput) ToPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) Policy6SrcaddrArrayOutput {
	return o
}

func (o Policy6SrcaddrArrayOutput) Index(i pulumi.IntInput) Policy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6Srcaddr {
		return vs[0].([]Policy6Srcaddr)[vs[1].(int)]
	}).(Policy6SrcaddrOutput)
}

type PolicyDst struct {
	// IP and mask.
	Subnet *string `pulumi:"subnet"`
}

// PolicyDstInput is an input type that accepts PolicyDstArgs and PolicyDstOutput values.
// You can construct a concrete instance of `PolicyDstInput` via:
//
//	PolicyDstArgs{...}
type PolicyDstInput interface {
	pulumi.Input

	ToPolicyDstOutput() PolicyDstOutput
	ToPolicyDstOutputWithContext(context.Context) PolicyDstOutput
}

type PolicyDstArgs struct {
	// IP and mask.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (PolicyDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDst)(nil)).Elem()
}

func (i PolicyDstArgs) ToPolicyDstOutput() PolicyDstOutput {
	return i.ToPolicyDstOutputWithContext(context.Background())
}

func (i PolicyDstArgs) ToPolicyDstOutputWithContext(ctx context.Context) PolicyDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstOutput)
}

// PolicyDstArrayInput is an input type that accepts PolicyDstArray and PolicyDstArrayOutput values.
// You can construct a concrete instance of `PolicyDstArrayInput` via:
//
//	PolicyDstArray{ PolicyDstArgs{...} }
type PolicyDstArrayInput interface {
	pulumi.Input

	ToPolicyDstArrayOutput() PolicyDstArrayOutput
	ToPolicyDstArrayOutputWithContext(context.Context) PolicyDstArrayOutput
}

type PolicyDstArray []PolicyDstInput

func (PolicyDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDst)(nil)).Elem()
}

func (i PolicyDstArray) ToPolicyDstArrayOutput() PolicyDstArrayOutput {
	return i.ToPolicyDstArrayOutputWithContext(context.Background())
}

func (i PolicyDstArray) ToPolicyDstArrayOutputWithContext(ctx context.Context) PolicyDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstArrayOutput)
}

type PolicyDstOutput struct{ *pulumi.OutputState }

func (PolicyDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDst)(nil)).Elem()
}

func (o PolicyDstOutput) ToPolicyDstOutput() PolicyDstOutput {
	return o
}

func (o PolicyDstOutput) ToPolicyDstOutputWithContext(ctx context.Context) PolicyDstOutput {
	return o
}

// IP and mask.
func (o PolicyDstOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDst) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type PolicyDstArrayOutput struct{ *pulumi.OutputState }

func (PolicyDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDst)(nil)).Elem()
}

func (o PolicyDstArrayOutput) ToPolicyDstArrayOutput() PolicyDstArrayOutput {
	return o
}

func (o PolicyDstArrayOutput) ToPolicyDstArrayOutputWithContext(ctx context.Context) PolicyDstArrayOutput {
	return o
}

func (o PolicyDstArrayOutput) Index(i pulumi.IntInput) PolicyDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDst {
		return vs[0].([]PolicyDst)[vs[1].(int)]
	}).(PolicyDstOutput)
}

type PolicyDstaddr struct {
	// Address/group name.
	Name *string `pulumi:"name"`
}

// PolicyDstaddrInput is an input type that accepts PolicyDstaddrArgs and PolicyDstaddrOutput values.
// You can construct a concrete instance of `PolicyDstaddrInput` via:
//
//	PolicyDstaddrArgs{...}
type PolicyDstaddrInput interface {
	pulumi.Input

	ToPolicyDstaddrOutput() PolicyDstaddrOutput
	ToPolicyDstaddrOutputWithContext(context.Context) PolicyDstaddrOutput
}

type PolicyDstaddrArgs struct {
	// Address/group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstaddr)(nil)).Elem()
}

func (i PolicyDstaddrArgs) ToPolicyDstaddrOutput() PolicyDstaddrOutput {
	return i.ToPolicyDstaddrOutputWithContext(context.Background())
}

func (i PolicyDstaddrArgs) ToPolicyDstaddrOutputWithContext(ctx context.Context) PolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstaddrOutput)
}

// PolicyDstaddrArrayInput is an input type that accepts PolicyDstaddrArray and PolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `PolicyDstaddrArrayInput` via:
//
//	PolicyDstaddrArray{ PolicyDstaddrArgs{...} }
type PolicyDstaddrArrayInput interface {
	pulumi.Input

	ToPolicyDstaddrArrayOutput() PolicyDstaddrArrayOutput
	ToPolicyDstaddrArrayOutputWithContext(context.Context) PolicyDstaddrArrayOutput
}

type PolicyDstaddrArray []PolicyDstaddrInput

func (PolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstaddr)(nil)).Elem()
}

func (i PolicyDstaddrArray) ToPolicyDstaddrArrayOutput() PolicyDstaddrArrayOutput {
	return i.ToPolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i PolicyDstaddrArray) ToPolicyDstaddrArrayOutputWithContext(ctx context.Context) PolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstaddrArrayOutput)
}

type PolicyDstaddrOutput struct{ *pulumi.OutputState }

func (PolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstaddr)(nil)).Elem()
}

func (o PolicyDstaddrOutput) ToPolicyDstaddrOutput() PolicyDstaddrOutput {
	return o
}

func (o PolicyDstaddrOutput) ToPolicyDstaddrOutputWithContext(ctx context.Context) PolicyDstaddrOutput {
	return o
}

// Address/group name.
func (o PolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (PolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstaddr)(nil)).Elem()
}

func (o PolicyDstaddrArrayOutput) ToPolicyDstaddrArrayOutput() PolicyDstaddrArrayOutput {
	return o
}

func (o PolicyDstaddrArrayOutput) ToPolicyDstaddrArrayOutputWithContext(ctx context.Context) PolicyDstaddrArrayOutput {
	return o
}

func (o PolicyDstaddrArrayOutput) Index(i pulumi.IntInput) PolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDstaddr {
		return vs[0].([]PolicyDstaddr)[vs[1].(int)]
	}).(PolicyDstaddrOutput)
}

type PolicyInputDevice struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// PolicyInputDeviceInput is an input type that accepts PolicyInputDeviceArgs and PolicyInputDeviceOutput values.
// You can construct a concrete instance of `PolicyInputDeviceInput` via:
//
//	PolicyInputDeviceArgs{...}
type PolicyInputDeviceInput interface {
	pulumi.Input

	ToPolicyInputDeviceOutput() PolicyInputDeviceOutput
	ToPolicyInputDeviceOutputWithContext(context.Context) PolicyInputDeviceOutput
}

type PolicyInputDeviceArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInputDevice)(nil)).Elem()
}

func (i PolicyInputDeviceArgs) ToPolicyInputDeviceOutput() PolicyInputDeviceOutput {
	return i.ToPolicyInputDeviceOutputWithContext(context.Background())
}

func (i PolicyInputDeviceArgs) ToPolicyInputDeviceOutputWithContext(ctx context.Context) PolicyInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInputDeviceOutput)
}

// PolicyInputDeviceArrayInput is an input type that accepts PolicyInputDeviceArray and PolicyInputDeviceArrayOutput values.
// You can construct a concrete instance of `PolicyInputDeviceArrayInput` via:
//
//	PolicyInputDeviceArray{ PolicyInputDeviceArgs{...} }
type PolicyInputDeviceArrayInput interface {
	pulumi.Input

	ToPolicyInputDeviceArrayOutput() PolicyInputDeviceArrayOutput
	ToPolicyInputDeviceArrayOutputWithContext(context.Context) PolicyInputDeviceArrayOutput
}

type PolicyInputDeviceArray []PolicyInputDeviceInput

func (PolicyInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInputDevice)(nil)).Elem()
}

func (i PolicyInputDeviceArray) ToPolicyInputDeviceArrayOutput() PolicyInputDeviceArrayOutput {
	return i.ToPolicyInputDeviceArrayOutputWithContext(context.Background())
}

func (i PolicyInputDeviceArray) ToPolicyInputDeviceArrayOutputWithContext(ctx context.Context) PolicyInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInputDeviceArrayOutput)
}

type PolicyInputDeviceOutput struct{ *pulumi.OutputState }

func (PolicyInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInputDevice)(nil)).Elem()
}

func (o PolicyInputDeviceOutput) ToPolicyInputDeviceOutput() PolicyInputDeviceOutput {
	return o
}

func (o PolicyInputDeviceOutput) ToPolicyInputDeviceOutputWithContext(ctx context.Context) PolicyInputDeviceOutput {
	return o
}

// Interface name.
func (o PolicyInputDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInputDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (PolicyInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInputDevice)(nil)).Elem()
}

func (o PolicyInputDeviceArrayOutput) ToPolicyInputDeviceArrayOutput() PolicyInputDeviceArrayOutput {
	return o
}

func (o PolicyInputDeviceArrayOutput) ToPolicyInputDeviceArrayOutputWithContext(ctx context.Context) PolicyInputDeviceArrayOutput {
	return o
}

func (o PolicyInputDeviceArrayOutput) Index(i pulumi.IntInput) PolicyInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInputDevice {
		return vs[0].([]PolicyInputDevice)[vs[1].(int)]
	}).(PolicyInputDeviceOutput)
}

type PolicyInternetServiceCustom struct {
	// Custom Destination Internet Service name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceCustomInput is an input type that accepts PolicyInternetServiceCustomArgs and PolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `PolicyInternetServiceCustomInput` via:
//
//	PolicyInternetServiceCustomArgs{...}
type PolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToPolicyInternetServiceCustomOutput() PolicyInternetServiceCustomOutput
	ToPolicyInternetServiceCustomOutputWithContext(context.Context) PolicyInternetServiceCustomOutput
}

type PolicyInternetServiceCustomArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceCustom)(nil)).Elem()
}

func (i PolicyInternetServiceCustomArgs) ToPolicyInternetServiceCustomOutput() PolicyInternetServiceCustomOutput {
	return i.ToPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i PolicyInternetServiceCustomArgs) ToPolicyInternetServiceCustomOutputWithContext(ctx context.Context) PolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceCustomOutput)
}

// PolicyInternetServiceCustomArrayInput is an input type that accepts PolicyInternetServiceCustomArray and PolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceCustomArrayInput` via:
//
//	PolicyInternetServiceCustomArray{ PolicyInternetServiceCustomArgs{...} }
type PolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceCustomArrayOutput() PolicyInternetServiceCustomArrayOutput
	ToPolicyInternetServiceCustomArrayOutputWithContext(context.Context) PolicyInternetServiceCustomArrayOutput
}

type PolicyInternetServiceCustomArray []PolicyInternetServiceCustomInput

func (PolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceCustom)(nil)).Elem()
}

func (i PolicyInternetServiceCustomArray) ToPolicyInternetServiceCustomArrayOutput() PolicyInternetServiceCustomArrayOutput {
	return i.ToPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceCustomArray) ToPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) PolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceCustomArrayOutput)
}

type PolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceCustom)(nil)).Elem()
}

func (o PolicyInternetServiceCustomOutput) ToPolicyInternetServiceCustomOutput() PolicyInternetServiceCustomOutput {
	return o
}

func (o PolicyInternetServiceCustomOutput) ToPolicyInternetServiceCustomOutputWithContext(ctx context.Context) PolicyInternetServiceCustomOutput {
	return o
}

// Custom Destination Internet Service name.
func (o PolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceCustom)(nil)).Elem()
}

func (o PolicyInternetServiceCustomArrayOutput) ToPolicyInternetServiceCustomArrayOutput() PolicyInternetServiceCustomArrayOutput {
	return o
}

func (o PolicyInternetServiceCustomArrayOutput) ToPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) PolicyInternetServiceCustomArrayOutput {
	return o
}

func (o PolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceCustom {
		return vs[0].([]PolicyInternetServiceCustom)[vs[1].(int)]
	}).(PolicyInternetServiceCustomOutput)
}

type PolicyInternetServiceId struct {
	// Destination Internet Service ID.
	Id *int `pulumi:"id"`
}

// PolicyInternetServiceIdInput is an input type that accepts PolicyInternetServiceIdArgs and PolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `PolicyInternetServiceIdInput` via:
//
//	PolicyInternetServiceIdArgs{...}
type PolicyInternetServiceIdInput interface {
	pulumi.Input

	ToPolicyInternetServiceIdOutput() PolicyInternetServiceIdOutput
	ToPolicyInternetServiceIdOutputWithContext(context.Context) PolicyInternetServiceIdOutput
}

type PolicyInternetServiceIdArgs struct {
	// Destination Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceId)(nil)).Elem()
}

func (i PolicyInternetServiceIdArgs) ToPolicyInternetServiceIdOutput() PolicyInternetServiceIdOutput {
	return i.ToPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i PolicyInternetServiceIdArgs) ToPolicyInternetServiceIdOutputWithContext(ctx context.Context) PolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceIdOutput)
}

// PolicyInternetServiceIdArrayInput is an input type that accepts PolicyInternetServiceIdArray and PolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceIdArrayInput` via:
//
//	PolicyInternetServiceIdArray{ PolicyInternetServiceIdArgs{...} }
type PolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceIdArrayOutput() PolicyInternetServiceIdArrayOutput
	ToPolicyInternetServiceIdArrayOutputWithContext(context.Context) PolicyInternetServiceIdArrayOutput
}

type PolicyInternetServiceIdArray []PolicyInternetServiceIdInput

func (PolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceId)(nil)).Elem()
}

func (i PolicyInternetServiceIdArray) ToPolicyInternetServiceIdArrayOutput() PolicyInternetServiceIdArrayOutput {
	return i.ToPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceIdArray) ToPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) PolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceIdArrayOutput)
}

type PolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceId)(nil)).Elem()
}

func (o PolicyInternetServiceIdOutput) ToPolicyInternetServiceIdOutput() PolicyInternetServiceIdOutput {
	return o
}

func (o PolicyInternetServiceIdOutput) ToPolicyInternetServiceIdOutputWithContext(ctx context.Context) PolicyInternetServiceIdOutput {
	return o
}

// Destination Internet Service ID.
func (o PolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceId)(nil)).Elem()
}

func (o PolicyInternetServiceIdArrayOutput) ToPolicyInternetServiceIdArrayOutput() PolicyInternetServiceIdArrayOutput {
	return o
}

func (o PolicyInternetServiceIdArrayOutput) ToPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) PolicyInternetServiceIdArrayOutput {
	return o
}

func (o PolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceId {
		return vs[0].([]PolicyInternetServiceId)[vs[1].(int)]
	}).(PolicyInternetServiceIdOutput)
}

type PolicySrc struct {
	// IP and mask.
	Subnet *string `pulumi:"subnet"`
}

// PolicySrcInput is an input type that accepts PolicySrcArgs and PolicySrcOutput values.
// You can construct a concrete instance of `PolicySrcInput` via:
//
//	PolicySrcArgs{...}
type PolicySrcInput interface {
	pulumi.Input

	ToPolicySrcOutput() PolicySrcOutput
	ToPolicySrcOutputWithContext(context.Context) PolicySrcOutput
}

type PolicySrcArgs struct {
	// IP and mask.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (PolicySrcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrc)(nil)).Elem()
}

func (i PolicySrcArgs) ToPolicySrcOutput() PolicySrcOutput {
	return i.ToPolicySrcOutputWithContext(context.Background())
}

func (i PolicySrcArgs) ToPolicySrcOutputWithContext(ctx context.Context) PolicySrcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcOutput)
}

// PolicySrcArrayInput is an input type that accepts PolicySrcArray and PolicySrcArrayOutput values.
// You can construct a concrete instance of `PolicySrcArrayInput` via:
//
//	PolicySrcArray{ PolicySrcArgs{...} }
type PolicySrcArrayInput interface {
	pulumi.Input

	ToPolicySrcArrayOutput() PolicySrcArrayOutput
	ToPolicySrcArrayOutputWithContext(context.Context) PolicySrcArrayOutput
}

type PolicySrcArray []PolicySrcInput

func (PolicySrcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrc)(nil)).Elem()
}

func (i PolicySrcArray) ToPolicySrcArrayOutput() PolicySrcArrayOutput {
	return i.ToPolicySrcArrayOutputWithContext(context.Background())
}

func (i PolicySrcArray) ToPolicySrcArrayOutputWithContext(ctx context.Context) PolicySrcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcArrayOutput)
}

type PolicySrcOutput struct{ *pulumi.OutputState }

func (PolicySrcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrc)(nil)).Elem()
}

func (o PolicySrcOutput) ToPolicySrcOutput() PolicySrcOutput {
	return o
}

func (o PolicySrcOutput) ToPolicySrcOutputWithContext(ctx context.Context) PolicySrcOutput {
	return o
}

// IP and mask.
func (o PolicySrcOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySrc) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type PolicySrcArrayOutput struct{ *pulumi.OutputState }

func (PolicySrcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrc)(nil)).Elem()
}

func (o PolicySrcArrayOutput) ToPolicySrcArrayOutput() PolicySrcArrayOutput {
	return o
}

func (o PolicySrcArrayOutput) ToPolicySrcArrayOutputWithContext(ctx context.Context) PolicySrcArrayOutput {
	return o
}

func (o PolicySrcArrayOutput) Index(i pulumi.IntInput) PolicySrcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySrc {
		return vs[0].([]PolicySrc)[vs[1].(int)]
	}).(PolicySrcOutput)
}

type PolicySrcaddr struct {
	// Address/group name.
	Name *string `pulumi:"name"`
}

// PolicySrcaddrInput is an input type that accepts PolicySrcaddrArgs and PolicySrcaddrOutput values.
// You can construct a concrete instance of `PolicySrcaddrInput` via:
//
//	PolicySrcaddrArgs{...}
type PolicySrcaddrInput interface {
	pulumi.Input

	ToPolicySrcaddrOutput() PolicySrcaddrOutput
	ToPolicySrcaddrOutputWithContext(context.Context) PolicySrcaddrOutput
}

type PolicySrcaddrArgs struct {
	// Address/group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcaddr)(nil)).Elem()
}

func (i PolicySrcaddrArgs) ToPolicySrcaddrOutput() PolicySrcaddrOutput {
	return i.ToPolicySrcaddrOutputWithContext(context.Background())
}

func (i PolicySrcaddrArgs) ToPolicySrcaddrOutputWithContext(ctx context.Context) PolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcaddrOutput)
}

// PolicySrcaddrArrayInput is an input type that accepts PolicySrcaddrArray and PolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `PolicySrcaddrArrayInput` via:
//
//	PolicySrcaddrArray{ PolicySrcaddrArgs{...} }
type PolicySrcaddrArrayInput interface {
	pulumi.Input

	ToPolicySrcaddrArrayOutput() PolicySrcaddrArrayOutput
	ToPolicySrcaddrArrayOutputWithContext(context.Context) PolicySrcaddrArrayOutput
}

type PolicySrcaddrArray []PolicySrcaddrInput

func (PolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcaddr)(nil)).Elem()
}

func (i PolicySrcaddrArray) ToPolicySrcaddrArrayOutput() PolicySrcaddrArrayOutput {
	return i.ToPolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i PolicySrcaddrArray) ToPolicySrcaddrArrayOutputWithContext(ctx context.Context) PolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcaddrArrayOutput)
}

type PolicySrcaddrOutput struct{ *pulumi.OutputState }

func (PolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcaddr)(nil)).Elem()
}

func (o PolicySrcaddrOutput) ToPolicySrcaddrOutput() PolicySrcaddrOutput {
	return o
}

func (o PolicySrcaddrOutput) ToPolicySrcaddrOutputWithContext(ctx context.Context) PolicySrcaddrOutput {
	return o
}

// Address/group name.
func (o PolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (PolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcaddr)(nil)).Elem()
}

func (o PolicySrcaddrArrayOutput) ToPolicySrcaddrArrayOutput() PolicySrcaddrArrayOutput {
	return o
}

func (o PolicySrcaddrArrayOutput) ToPolicySrcaddrArrayOutputWithContext(ctx context.Context) PolicySrcaddrArrayOutput {
	return o
}

func (o PolicySrcaddrArrayOutput) Index(i pulumi.IntInput) PolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySrcaddr {
		return vs[0].([]PolicySrcaddr)[vs[1].(int)]
	}).(PolicySrcaddrOutput)
}

type Prefixlist6Rule struct {
	// Permit or deny packets that match this rule. Valid values: `permit`, `deny`.
	Action *string `pulumi:"action"`
	// Flags.
	Flags *int `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 128).
	Ge *int `pulumi:"ge"`
	// Rule ID.
	Id *int `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 128).
	Le *int `pulumi:"le"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 *string `pulumi:"prefix6"`
}

// Prefixlist6RuleInput is an input type that accepts Prefixlist6RuleArgs and Prefixlist6RuleOutput values.
// You can construct a concrete instance of `Prefixlist6RuleInput` via:
//
//	Prefixlist6RuleArgs{...}
type Prefixlist6RuleInput interface {
	pulumi.Input

	ToPrefixlist6RuleOutput() Prefixlist6RuleOutput
	ToPrefixlist6RuleOutputWithContext(context.Context) Prefixlist6RuleOutput
}

type Prefixlist6RuleArgs struct {
	// Permit or deny packets that match this rule. Valid values: `permit`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Flags.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 128).
	Ge pulumi.IntPtrInput `pulumi:"ge"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 128).
	Le pulumi.IntPtrInput `pulumi:"le"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (Prefixlist6RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Prefixlist6Rule)(nil)).Elem()
}

func (i Prefixlist6RuleArgs) ToPrefixlist6RuleOutput() Prefixlist6RuleOutput {
	return i.ToPrefixlist6RuleOutputWithContext(context.Background())
}

func (i Prefixlist6RuleArgs) ToPrefixlist6RuleOutputWithContext(ctx context.Context) Prefixlist6RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Prefixlist6RuleOutput)
}

// Prefixlist6RuleArrayInput is an input type that accepts Prefixlist6RuleArray and Prefixlist6RuleArrayOutput values.
// You can construct a concrete instance of `Prefixlist6RuleArrayInput` via:
//
//	Prefixlist6RuleArray{ Prefixlist6RuleArgs{...} }
type Prefixlist6RuleArrayInput interface {
	pulumi.Input

	ToPrefixlist6RuleArrayOutput() Prefixlist6RuleArrayOutput
	ToPrefixlist6RuleArrayOutputWithContext(context.Context) Prefixlist6RuleArrayOutput
}

type Prefixlist6RuleArray []Prefixlist6RuleInput

func (Prefixlist6RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Prefixlist6Rule)(nil)).Elem()
}

func (i Prefixlist6RuleArray) ToPrefixlist6RuleArrayOutput() Prefixlist6RuleArrayOutput {
	return i.ToPrefixlist6RuleArrayOutputWithContext(context.Background())
}

func (i Prefixlist6RuleArray) ToPrefixlist6RuleArrayOutputWithContext(ctx context.Context) Prefixlist6RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Prefixlist6RuleArrayOutput)
}

type Prefixlist6RuleOutput struct{ *pulumi.OutputState }

func (Prefixlist6RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Prefixlist6Rule)(nil)).Elem()
}

func (o Prefixlist6RuleOutput) ToPrefixlist6RuleOutput() Prefixlist6RuleOutput {
	return o
}

func (o Prefixlist6RuleOutput) ToPrefixlist6RuleOutputWithContext(ctx context.Context) Prefixlist6RuleOutput {
	return o
}

// Permit or deny packets that match this rule. Valid values: `permit`, `deny`.
func (o Prefixlist6RuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Prefixlist6Rule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Flags.
func (o Prefixlist6RuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Prefixlist6Rule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Minimum prefix length to be matched (0 - 128).
func (o Prefixlist6RuleOutput) Ge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Prefixlist6Rule) *int { return v.Ge }).(pulumi.IntPtrOutput)
}

// Rule ID.
func (o Prefixlist6RuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Prefixlist6Rule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Maximum prefix length to be matched (0 - 128).
func (o Prefixlist6RuleOutput) Le() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Prefixlist6Rule) *int { return v.Le }).(pulumi.IntPtrOutput)
}

// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
func (o Prefixlist6RuleOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Prefixlist6Rule) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type Prefixlist6RuleArrayOutput struct{ *pulumi.OutputState }

func (Prefixlist6RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Prefixlist6Rule)(nil)).Elem()
}

func (o Prefixlist6RuleArrayOutput) ToPrefixlist6RuleArrayOutput() Prefixlist6RuleArrayOutput {
	return o
}

func (o Prefixlist6RuleArrayOutput) ToPrefixlist6RuleArrayOutputWithContext(ctx context.Context) Prefixlist6RuleArrayOutput {
	return o
}

func (o Prefixlist6RuleArrayOutput) Index(i pulumi.IntInput) Prefixlist6RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Prefixlist6Rule {
		return vs[0].([]Prefixlist6Rule)[vs[1].(int)]
	}).(Prefixlist6RuleOutput)
}

type PrefixlistRule struct {
	// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
	Action *string `pulumi:"action"`
	// Flags.
	Flags *int `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 32).
	Ge *int `pulumi:"ge"`
	// Rule ID.
	Id *int `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 32).
	Le *int `pulumi:"le"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix *string `pulumi:"prefix"`
}

// PrefixlistRuleInput is an input type that accepts PrefixlistRuleArgs and PrefixlistRuleOutput values.
// You can construct a concrete instance of `PrefixlistRuleInput` via:
//
//	PrefixlistRuleArgs{...}
type PrefixlistRuleInput interface {
	pulumi.Input

	ToPrefixlistRuleOutput() PrefixlistRuleOutput
	ToPrefixlistRuleOutputWithContext(context.Context) PrefixlistRuleOutput
}

type PrefixlistRuleArgs struct {
	// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Flags.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 32).
	Ge pulumi.IntPtrInput `pulumi:"ge"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 32).
	Le pulumi.IntPtrInput `pulumi:"le"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (PrefixlistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixlistRule)(nil)).Elem()
}

func (i PrefixlistRuleArgs) ToPrefixlistRuleOutput() PrefixlistRuleOutput {
	return i.ToPrefixlistRuleOutputWithContext(context.Background())
}

func (i PrefixlistRuleArgs) ToPrefixlistRuleOutputWithContext(ctx context.Context) PrefixlistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixlistRuleOutput)
}

// PrefixlistRuleArrayInput is an input type that accepts PrefixlistRuleArray and PrefixlistRuleArrayOutput values.
// You can construct a concrete instance of `PrefixlistRuleArrayInput` via:
//
//	PrefixlistRuleArray{ PrefixlistRuleArgs{...} }
type PrefixlistRuleArrayInput interface {
	pulumi.Input

	ToPrefixlistRuleArrayOutput() PrefixlistRuleArrayOutput
	ToPrefixlistRuleArrayOutputWithContext(context.Context) PrefixlistRuleArrayOutput
}

type PrefixlistRuleArray []PrefixlistRuleInput

func (PrefixlistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixlistRule)(nil)).Elem()
}

func (i PrefixlistRuleArray) ToPrefixlistRuleArrayOutput() PrefixlistRuleArrayOutput {
	return i.ToPrefixlistRuleArrayOutputWithContext(context.Background())
}

func (i PrefixlistRuleArray) ToPrefixlistRuleArrayOutputWithContext(ctx context.Context) PrefixlistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixlistRuleArrayOutput)
}

type PrefixlistRuleOutput struct{ *pulumi.OutputState }

func (PrefixlistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixlistRule)(nil)).Elem()
}

func (o PrefixlistRuleOutput) ToPrefixlistRuleOutput() PrefixlistRuleOutput {
	return o
}

func (o PrefixlistRuleOutput) ToPrefixlistRuleOutputWithContext(ctx context.Context) PrefixlistRuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
func (o PrefixlistRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixlistRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Flags.
func (o PrefixlistRuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PrefixlistRule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Minimum prefix length to be matched (0 - 32).
func (o PrefixlistRuleOutput) Ge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PrefixlistRule) *int { return v.Ge }).(pulumi.IntPtrOutput)
}

// Rule ID.
func (o PrefixlistRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PrefixlistRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Maximum prefix length to be matched (0 - 32).
func (o PrefixlistRuleOutput) Le() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PrefixlistRule) *int { return v.Le }).(pulumi.IntPtrOutput)
}

// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
func (o PrefixlistRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixlistRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type PrefixlistRuleArrayOutput struct{ *pulumi.OutputState }

func (PrefixlistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixlistRule)(nil)).Elem()
}

func (o PrefixlistRuleArrayOutput) ToPrefixlistRuleArrayOutput() PrefixlistRuleArrayOutput {
	return o
}

func (o PrefixlistRuleArrayOutput) ToPrefixlistRuleArrayOutputWithContext(ctx context.Context) PrefixlistRuleArrayOutput {
	return o
}

func (o PrefixlistRuleArrayOutput) Index(i pulumi.IntInput) PrefixlistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixlistRule {
		return vs[0].([]PrefixlistRule)[vs[1].(int)]
	}).(PrefixlistRuleOutput)
}

type RipDistance struct {
	// Access list for route destination.
	AccessList *string `pulumi:"accessList"`
	// Distance (1 - 255).
	Distance *int `pulumi:"distance"`
	// Distance ID.
	Id *int `pulumi:"id"`
	// Distance prefix.
	Prefix *string `pulumi:"prefix"`
}

// RipDistanceInput is an input type that accepts RipDistanceArgs and RipDistanceOutput values.
// You can construct a concrete instance of `RipDistanceInput` via:
//
//	RipDistanceArgs{...}
type RipDistanceInput interface {
	pulumi.Input

	ToRipDistanceOutput() RipDistanceOutput
	ToRipDistanceOutputWithContext(context.Context) RipDistanceOutput
}

type RipDistanceArgs struct {
	// Access list for route destination.
	AccessList pulumi.StringPtrInput `pulumi:"accessList"`
	// Distance (1 - 255).
	Distance pulumi.IntPtrInput `pulumi:"distance"`
	// Distance ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Distance prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RipDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipDistance)(nil)).Elem()
}

func (i RipDistanceArgs) ToRipDistanceOutput() RipDistanceOutput {
	return i.ToRipDistanceOutputWithContext(context.Background())
}

func (i RipDistanceArgs) ToRipDistanceOutputWithContext(ctx context.Context) RipDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipDistanceOutput)
}

// RipDistanceArrayInput is an input type that accepts RipDistanceArray and RipDistanceArrayOutput values.
// You can construct a concrete instance of `RipDistanceArrayInput` via:
//
//	RipDistanceArray{ RipDistanceArgs{...} }
type RipDistanceArrayInput interface {
	pulumi.Input

	ToRipDistanceArrayOutput() RipDistanceArrayOutput
	ToRipDistanceArrayOutputWithContext(context.Context) RipDistanceArrayOutput
}

type RipDistanceArray []RipDistanceInput

func (RipDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipDistance)(nil)).Elem()
}

func (i RipDistanceArray) ToRipDistanceArrayOutput() RipDistanceArrayOutput {
	return i.ToRipDistanceArrayOutputWithContext(context.Background())
}

func (i RipDistanceArray) ToRipDistanceArrayOutputWithContext(ctx context.Context) RipDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipDistanceArrayOutput)
}

type RipDistanceOutput struct{ *pulumi.OutputState }

func (RipDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipDistance)(nil)).Elem()
}

func (o RipDistanceOutput) ToRipDistanceOutput() RipDistanceOutput {
	return o
}

func (o RipDistanceOutput) ToRipDistanceOutputWithContext(ctx context.Context) RipDistanceOutput {
	return o
}

// Access list for route destination.
func (o RipDistanceOutput) AccessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipDistance) *string { return v.AccessList }).(pulumi.StringPtrOutput)
}

// Distance (1 - 255).
func (o RipDistanceOutput) Distance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipDistance) *int { return v.Distance }).(pulumi.IntPtrOutput)
}

// Distance ID.
func (o RipDistanceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipDistance) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Distance prefix.
func (o RipDistanceOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipDistance) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RipDistanceArrayOutput struct{ *pulumi.OutputState }

func (RipDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipDistance)(nil)).Elem()
}

func (o RipDistanceArrayOutput) ToRipDistanceArrayOutput() RipDistanceArrayOutput {
	return o
}

func (o RipDistanceArrayOutput) ToRipDistanceArrayOutputWithContext(ctx context.Context) RipDistanceArrayOutput {
	return o
}

func (o RipDistanceArrayOutput) Index(i pulumi.IntInput) RipDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipDistance {
		return vs[0].([]RipDistance)[vs[1].(int)]
	}).(RipDistanceOutput)
}

type RipDistributeList struct {
	// Distribute list direction. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// Distribute list ID.
	Id *int `pulumi:"id"`
	// Distribute list interface name.
	Interface *string `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname *string `pulumi:"listname"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RipDistributeListInput is an input type that accepts RipDistributeListArgs and RipDistributeListOutput values.
// You can construct a concrete instance of `RipDistributeListInput` via:
//
//	RipDistributeListArgs{...}
type RipDistributeListInput interface {
	pulumi.Input

	ToRipDistributeListOutput() RipDistributeListOutput
	ToRipDistributeListOutputWithContext(context.Context) RipDistributeListOutput
}

type RipDistributeListArgs struct {
	// Distribute list direction. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Distribute list ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Distribute list interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname pulumi.StringPtrInput `pulumi:"listname"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RipDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipDistributeList)(nil)).Elem()
}

func (i RipDistributeListArgs) ToRipDistributeListOutput() RipDistributeListOutput {
	return i.ToRipDistributeListOutputWithContext(context.Background())
}

func (i RipDistributeListArgs) ToRipDistributeListOutputWithContext(ctx context.Context) RipDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipDistributeListOutput)
}

// RipDistributeListArrayInput is an input type that accepts RipDistributeListArray and RipDistributeListArrayOutput values.
// You can construct a concrete instance of `RipDistributeListArrayInput` via:
//
//	RipDistributeListArray{ RipDistributeListArgs{...} }
type RipDistributeListArrayInput interface {
	pulumi.Input

	ToRipDistributeListArrayOutput() RipDistributeListArrayOutput
	ToRipDistributeListArrayOutputWithContext(context.Context) RipDistributeListArrayOutput
}

type RipDistributeListArray []RipDistributeListInput

func (RipDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipDistributeList)(nil)).Elem()
}

func (i RipDistributeListArray) ToRipDistributeListArrayOutput() RipDistributeListArrayOutput {
	return i.ToRipDistributeListArrayOutputWithContext(context.Background())
}

func (i RipDistributeListArray) ToRipDistributeListArrayOutputWithContext(ctx context.Context) RipDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipDistributeListArrayOutput)
}

type RipDistributeListOutput struct{ *pulumi.OutputState }

func (RipDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipDistributeList)(nil)).Elem()
}

func (o RipDistributeListOutput) ToRipDistributeListOutput() RipDistributeListOutput {
	return o
}

func (o RipDistributeListOutput) ToRipDistributeListOutputWithContext(ctx context.Context) RipDistributeListOutput {
	return o
}

// Distribute list direction. Valid values: `in`, `out`.
func (o RipDistributeListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipDistributeList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Distribute list ID.
func (o RipDistributeListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipDistributeList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Distribute list interface name.
func (o RipDistributeListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipDistributeList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Distribute access/prefix list name.
func (o RipDistributeListOutput) Listname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipDistributeList) *string { return v.Listname }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RipDistributeListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipDistributeList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RipDistributeListArrayOutput struct{ *pulumi.OutputState }

func (RipDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipDistributeList)(nil)).Elem()
}

func (o RipDistributeListArrayOutput) ToRipDistributeListArrayOutput() RipDistributeListArrayOutput {
	return o
}

func (o RipDistributeListArrayOutput) ToRipDistributeListArrayOutputWithContext(ctx context.Context) RipDistributeListArrayOutput {
	return o
}

func (o RipDistributeListArrayOutput) Index(i pulumi.IntInput) RipDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipDistributeList {
		return vs[0].([]RipDistributeList)[vs[1].(int)]
	}).(RipDistributeListOutput)
}

type RipInterface struct {
	// Authentication key-chain name.
	AuthKeychain *string `pulumi:"authKeychain"`
	// Authentication mode. Valid values: `none`, `text`, `md5`.
	AuthMode *string `pulumi:"authMode"`
	// Authentication string/password.
	AuthString *string `pulumi:"authString"`
	// flags
	Flags *int `pulumi:"flags"`
	// Interface name.
	Name *string `pulumi:"name"`
	// Receive version. Valid values: `1`, `2`.
	ReceiveVersion *string `pulumi:"receiveVersion"`
	// Send version. Valid values: `1`, `2`.
	SendVersion *string `pulumi:"sendVersion"`
	// Enable/disable broadcast version 1 compatible packets. Valid values: `disable`, `enable`.
	SendVersion2Broadcast *string `pulumi:"sendVersion2Broadcast"`
	// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
	SplitHorizon *string `pulumi:"splitHorizon"`
	// Enable/disable split horizon. Valid values: `enable`, `disable`.
	SplitHorizonStatus *string `pulumi:"splitHorizonStatus"`
}

// RipInterfaceInput is an input type that accepts RipInterfaceArgs and RipInterfaceOutput values.
// You can construct a concrete instance of `RipInterfaceInput` via:
//
//	RipInterfaceArgs{...}
type RipInterfaceInput interface {
	pulumi.Input

	ToRipInterfaceOutput() RipInterfaceOutput
	ToRipInterfaceOutputWithContext(context.Context) RipInterfaceOutput
}

type RipInterfaceArgs struct {
	// Authentication key-chain name.
	AuthKeychain pulumi.StringPtrInput `pulumi:"authKeychain"`
	// Authentication mode. Valid values: `none`, `text`, `md5`.
	AuthMode pulumi.StringPtrInput `pulumi:"authMode"`
	// Authentication string/password.
	AuthString pulumi.StringPtrInput `pulumi:"authString"`
	// flags
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Receive version. Valid values: `1`, `2`.
	ReceiveVersion pulumi.StringPtrInput `pulumi:"receiveVersion"`
	// Send version. Valid values: `1`, `2`.
	SendVersion pulumi.StringPtrInput `pulumi:"sendVersion"`
	// Enable/disable broadcast version 1 compatible packets. Valid values: `disable`, `enable`.
	SendVersion2Broadcast pulumi.StringPtrInput `pulumi:"sendVersion2Broadcast"`
	// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
	SplitHorizon pulumi.StringPtrInput `pulumi:"splitHorizon"`
	// Enable/disable split horizon. Valid values: `enable`, `disable`.
	SplitHorizonStatus pulumi.StringPtrInput `pulumi:"splitHorizonStatus"`
}

func (RipInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipInterface)(nil)).Elem()
}

func (i RipInterfaceArgs) ToRipInterfaceOutput() RipInterfaceOutput {
	return i.ToRipInterfaceOutputWithContext(context.Background())
}

func (i RipInterfaceArgs) ToRipInterfaceOutputWithContext(ctx context.Context) RipInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipInterfaceOutput)
}

// RipInterfaceArrayInput is an input type that accepts RipInterfaceArray and RipInterfaceArrayOutput values.
// You can construct a concrete instance of `RipInterfaceArrayInput` via:
//
//	RipInterfaceArray{ RipInterfaceArgs{...} }
type RipInterfaceArrayInput interface {
	pulumi.Input

	ToRipInterfaceArrayOutput() RipInterfaceArrayOutput
	ToRipInterfaceArrayOutputWithContext(context.Context) RipInterfaceArrayOutput
}

type RipInterfaceArray []RipInterfaceInput

func (RipInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipInterface)(nil)).Elem()
}

func (i RipInterfaceArray) ToRipInterfaceArrayOutput() RipInterfaceArrayOutput {
	return i.ToRipInterfaceArrayOutputWithContext(context.Background())
}

func (i RipInterfaceArray) ToRipInterfaceArrayOutputWithContext(ctx context.Context) RipInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipInterfaceArrayOutput)
}

type RipInterfaceOutput struct{ *pulumi.OutputState }

func (RipInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipInterface)(nil)).Elem()
}

func (o RipInterfaceOutput) ToRipInterfaceOutput() RipInterfaceOutput {
	return o
}

func (o RipInterfaceOutput) ToRipInterfaceOutputWithContext(ctx context.Context) RipInterfaceOutput {
	return o
}

// Authentication key-chain name.
func (o RipInterfaceOutput) AuthKeychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipInterface) *string { return v.AuthKeychain }).(pulumi.StringPtrOutput)
}

// Authentication mode. Valid values: `none`, `text`, `md5`.
func (o RipInterfaceOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipInterface) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// Authentication string/password.
func (o RipInterfaceOutput) AuthString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipInterface) *string { return v.AuthString }).(pulumi.StringPtrOutput)
}

// flags
func (o RipInterfaceOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipInterface) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o RipInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Receive version. Valid values: `1`, `2`.
func (o RipInterfaceOutput) ReceiveVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipInterface) *string { return v.ReceiveVersion }).(pulumi.StringPtrOutput)
}

// Send version. Valid values: `1`, `2`.
func (o RipInterfaceOutput) SendVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipInterface) *string { return v.SendVersion }).(pulumi.StringPtrOutput)
}

// Enable/disable broadcast version 1 compatible packets. Valid values: `disable`, `enable`.
func (o RipInterfaceOutput) SendVersion2Broadcast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipInterface) *string { return v.SendVersion2Broadcast }).(pulumi.StringPtrOutput)
}

// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
func (o RipInterfaceOutput) SplitHorizon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipInterface) *string { return v.SplitHorizon }).(pulumi.StringPtrOutput)
}

// Enable/disable split horizon. Valid values: `enable`, `disable`.
func (o RipInterfaceOutput) SplitHorizonStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipInterface) *string { return v.SplitHorizonStatus }).(pulumi.StringPtrOutput)
}

type RipInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RipInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipInterface)(nil)).Elem()
}

func (o RipInterfaceArrayOutput) ToRipInterfaceArrayOutput() RipInterfaceArrayOutput {
	return o
}

func (o RipInterfaceArrayOutput) ToRipInterfaceArrayOutputWithContext(ctx context.Context) RipInterfaceArrayOutput {
	return o
}

func (o RipInterfaceArrayOutput) Index(i pulumi.IntInput) RipInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipInterface {
		return vs[0].([]RipInterface)[vs[1].(int)]
	}).(RipInterfaceOutput)
}

type RipNeighbor struct {
	// Neighbor entry ID.
	Id *int `pulumi:"id"`
	// IP address.
	Ip *string `pulumi:"ip"`
}

// RipNeighborInput is an input type that accepts RipNeighborArgs and RipNeighborOutput values.
// You can construct a concrete instance of `RipNeighborInput` via:
//
//	RipNeighborArgs{...}
type RipNeighborInput interface {
	pulumi.Input

	ToRipNeighborOutput() RipNeighborOutput
	ToRipNeighborOutputWithContext(context.Context) RipNeighborOutput
}

type RipNeighborArgs struct {
	// Neighbor entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IP address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (RipNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipNeighbor)(nil)).Elem()
}

func (i RipNeighborArgs) ToRipNeighborOutput() RipNeighborOutput {
	return i.ToRipNeighborOutputWithContext(context.Background())
}

func (i RipNeighborArgs) ToRipNeighborOutputWithContext(ctx context.Context) RipNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipNeighborOutput)
}

// RipNeighborArrayInput is an input type that accepts RipNeighborArray and RipNeighborArrayOutput values.
// You can construct a concrete instance of `RipNeighborArrayInput` via:
//
//	RipNeighborArray{ RipNeighborArgs{...} }
type RipNeighborArrayInput interface {
	pulumi.Input

	ToRipNeighborArrayOutput() RipNeighborArrayOutput
	ToRipNeighborArrayOutputWithContext(context.Context) RipNeighborArrayOutput
}

type RipNeighborArray []RipNeighborInput

func (RipNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipNeighbor)(nil)).Elem()
}

func (i RipNeighborArray) ToRipNeighborArrayOutput() RipNeighborArrayOutput {
	return i.ToRipNeighborArrayOutputWithContext(context.Background())
}

func (i RipNeighborArray) ToRipNeighborArrayOutputWithContext(ctx context.Context) RipNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipNeighborArrayOutput)
}

type RipNeighborOutput struct{ *pulumi.OutputState }

func (RipNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipNeighbor)(nil)).Elem()
}

func (o RipNeighborOutput) ToRipNeighborOutput() RipNeighborOutput {
	return o
}

func (o RipNeighborOutput) ToRipNeighborOutputWithContext(ctx context.Context) RipNeighborOutput {
	return o
}

// Neighbor entry ID.
func (o RipNeighborOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipNeighbor) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IP address.
func (o RipNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type RipNeighborArrayOutput struct{ *pulumi.OutputState }

func (RipNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipNeighbor)(nil)).Elem()
}

func (o RipNeighborArrayOutput) ToRipNeighborArrayOutput() RipNeighborArrayOutput {
	return o
}

func (o RipNeighborArrayOutput) ToRipNeighborArrayOutputWithContext(ctx context.Context) RipNeighborArrayOutput {
	return o
}

func (o RipNeighborArrayOutput) Index(i pulumi.IntInput) RipNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipNeighbor {
		return vs[0].([]RipNeighbor)[vs[1].(int)]
	}).(RipNeighborOutput)
}

type RipNetwork struct {
	// Network entry ID.
	Id *int `pulumi:"id"`
	// Network prefix.
	Prefix *string `pulumi:"prefix"`
}

// RipNetworkInput is an input type that accepts RipNetworkArgs and RipNetworkOutput values.
// You can construct a concrete instance of `RipNetworkInput` via:
//
//	RipNetworkArgs{...}
type RipNetworkInput interface {
	pulumi.Input

	ToRipNetworkOutput() RipNetworkOutput
	ToRipNetworkOutputWithContext(context.Context) RipNetworkOutput
}

type RipNetworkArgs struct {
	// Network entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Network prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RipNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipNetwork)(nil)).Elem()
}

func (i RipNetworkArgs) ToRipNetworkOutput() RipNetworkOutput {
	return i.ToRipNetworkOutputWithContext(context.Background())
}

func (i RipNetworkArgs) ToRipNetworkOutputWithContext(ctx context.Context) RipNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipNetworkOutput)
}

// RipNetworkArrayInput is an input type that accepts RipNetworkArray and RipNetworkArrayOutput values.
// You can construct a concrete instance of `RipNetworkArrayInput` via:
//
//	RipNetworkArray{ RipNetworkArgs{...} }
type RipNetworkArrayInput interface {
	pulumi.Input

	ToRipNetworkArrayOutput() RipNetworkArrayOutput
	ToRipNetworkArrayOutputWithContext(context.Context) RipNetworkArrayOutput
}

type RipNetworkArray []RipNetworkInput

func (RipNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipNetwork)(nil)).Elem()
}

func (i RipNetworkArray) ToRipNetworkArrayOutput() RipNetworkArrayOutput {
	return i.ToRipNetworkArrayOutputWithContext(context.Background())
}

func (i RipNetworkArray) ToRipNetworkArrayOutputWithContext(ctx context.Context) RipNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipNetworkArrayOutput)
}

type RipNetworkOutput struct{ *pulumi.OutputState }

func (RipNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipNetwork)(nil)).Elem()
}

func (o RipNetworkOutput) ToRipNetworkOutput() RipNetworkOutput {
	return o
}

func (o RipNetworkOutput) ToRipNetworkOutputWithContext(ctx context.Context) RipNetworkOutput {
	return o
}

// Network entry ID.
func (o RipNetworkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipNetwork) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Network prefix.
func (o RipNetworkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipNetwork) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RipNetworkArrayOutput struct{ *pulumi.OutputState }

func (RipNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipNetwork)(nil)).Elem()
}

func (o RipNetworkArrayOutput) ToRipNetworkArrayOutput() RipNetworkArrayOutput {
	return o
}

func (o RipNetworkArrayOutput) ToRipNetworkArrayOutputWithContext(ctx context.Context) RipNetworkArrayOutput {
	return o
}

func (o RipNetworkArrayOutput) Index(i pulumi.IntInput) RipNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipNetwork {
		return vs[0].([]RipNetwork)[vs[1].(int)]
	}).(RipNetworkOutput)
}

type RipOffsetList struct {
	// Access list name.
	AccessList *string `pulumi:"accessList"`
	// Offset list direction. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// Offset-list ID.
	Id *int `pulumi:"id"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// offset
	Offset *int `pulumi:"offset"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RipOffsetListInput is an input type that accepts RipOffsetListArgs and RipOffsetListOutput values.
// You can construct a concrete instance of `RipOffsetListInput` via:
//
//	RipOffsetListArgs{...}
type RipOffsetListInput interface {
	pulumi.Input

	ToRipOffsetListOutput() RipOffsetListOutput
	ToRipOffsetListOutputWithContext(context.Context) RipOffsetListOutput
}

type RipOffsetListArgs struct {
	// Access list name.
	AccessList pulumi.StringPtrInput `pulumi:"accessList"`
	// Offset list direction. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// offset
	Offset pulumi.IntPtrInput `pulumi:"offset"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RipOffsetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipOffsetList)(nil)).Elem()
}

func (i RipOffsetListArgs) ToRipOffsetListOutput() RipOffsetListOutput {
	return i.ToRipOffsetListOutputWithContext(context.Background())
}

func (i RipOffsetListArgs) ToRipOffsetListOutputWithContext(ctx context.Context) RipOffsetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipOffsetListOutput)
}

// RipOffsetListArrayInput is an input type that accepts RipOffsetListArray and RipOffsetListArrayOutput values.
// You can construct a concrete instance of `RipOffsetListArrayInput` via:
//
//	RipOffsetListArray{ RipOffsetListArgs{...} }
type RipOffsetListArrayInput interface {
	pulumi.Input

	ToRipOffsetListArrayOutput() RipOffsetListArrayOutput
	ToRipOffsetListArrayOutputWithContext(context.Context) RipOffsetListArrayOutput
}

type RipOffsetListArray []RipOffsetListInput

func (RipOffsetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipOffsetList)(nil)).Elem()
}

func (i RipOffsetListArray) ToRipOffsetListArrayOutput() RipOffsetListArrayOutput {
	return i.ToRipOffsetListArrayOutputWithContext(context.Background())
}

func (i RipOffsetListArray) ToRipOffsetListArrayOutputWithContext(ctx context.Context) RipOffsetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipOffsetListArrayOutput)
}

type RipOffsetListOutput struct{ *pulumi.OutputState }

func (RipOffsetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipOffsetList)(nil)).Elem()
}

func (o RipOffsetListOutput) ToRipOffsetListOutput() RipOffsetListOutput {
	return o
}

func (o RipOffsetListOutput) ToRipOffsetListOutputWithContext(ctx context.Context) RipOffsetListOutput {
	return o
}

// Access list name.
func (o RipOffsetListOutput) AccessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipOffsetList) *string { return v.AccessList }).(pulumi.StringPtrOutput)
}

// Offset list direction. Valid values: `in`, `out`.
func (o RipOffsetListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipOffsetList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Offset-list ID.
func (o RipOffsetListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipOffsetList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o RipOffsetListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipOffsetList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// offset
func (o RipOffsetListOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipOffsetList) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RipOffsetListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipOffsetList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RipOffsetListArrayOutput struct{ *pulumi.OutputState }

func (RipOffsetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipOffsetList)(nil)).Elem()
}

func (o RipOffsetListArrayOutput) ToRipOffsetListArrayOutput() RipOffsetListArrayOutput {
	return o
}

func (o RipOffsetListArrayOutput) ToRipOffsetListArrayOutputWithContext(ctx context.Context) RipOffsetListArrayOutput {
	return o
}

func (o RipOffsetListArrayOutput) Index(i pulumi.IntInput) RipOffsetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipOffsetList {
		return vs[0].([]RipOffsetList)[vs[1].(int)]
	}).(RipOffsetListOutput)
}

type RipPassiveInterface struct {
	// Passive interface name.
	Name *string `pulumi:"name"`
}

// RipPassiveInterfaceInput is an input type that accepts RipPassiveInterfaceArgs and RipPassiveInterfaceOutput values.
// You can construct a concrete instance of `RipPassiveInterfaceInput` via:
//
//	RipPassiveInterfaceArgs{...}
type RipPassiveInterfaceInput interface {
	pulumi.Input

	ToRipPassiveInterfaceOutput() RipPassiveInterfaceOutput
	ToRipPassiveInterfaceOutputWithContext(context.Context) RipPassiveInterfaceOutput
}

type RipPassiveInterfaceArgs struct {
	// Passive interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RipPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipPassiveInterface)(nil)).Elem()
}

func (i RipPassiveInterfaceArgs) ToRipPassiveInterfaceOutput() RipPassiveInterfaceOutput {
	return i.ToRipPassiveInterfaceOutputWithContext(context.Background())
}

func (i RipPassiveInterfaceArgs) ToRipPassiveInterfaceOutputWithContext(ctx context.Context) RipPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipPassiveInterfaceOutput)
}

// RipPassiveInterfaceArrayInput is an input type that accepts RipPassiveInterfaceArray and RipPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `RipPassiveInterfaceArrayInput` via:
//
//	RipPassiveInterfaceArray{ RipPassiveInterfaceArgs{...} }
type RipPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToRipPassiveInterfaceArrayOutput() RipPassiveInterfaceArrayOutput
	ToRipPassiveInterfaceArrayOutputWithContext(context.Context) RipPassiveInterfaceArrayOutput
}

type RipPassiveInterfaceArray []RipPassiveInterfaceInput

func (RipPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipPassiveInterface)(nil)).Elem()
}

func (i RipPassiveInterfaceArray) ToRipPassiveInterfaceArrayOutput() RipPassiveInterfaceArrayOutput {
	return i.ToRipPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i RipPassiveInterfaceArray) ToRipPassiveInterfaceArrayOutputWithContext(ctx context.Context) RipPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipPassiveInterfaceArrayOutput)
}

type RipPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (RipPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipPassiveInterface)(nil)).Elem()
}

func (o RipPassiveInterfaceOutput) ToRipPassiveInterfaceOutput() RipPassiveInterfaceOutput {
	return o
}

func (o RipPassiveInterfaceOutput) ToRipPassiveInterfaceOutputWithContext(ctx context.Context) RipPassiveInterfaceOutput {
	return o
}

// Passive interface name.
func (o RipPassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipPassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RipPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RipPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipPassiveInterface)(nil)).Elem()
}

func (o RipPassiveInterfaceArrayOutput) ToRipPassiveInterfaceArrayOutput() RipPassiveInterfaceArrayOutput {
	return o
}

func (o RipPassiveInterfaceArrayOutput) ToRipPassiveInterfaceArrayOutputWithContext(ctx context.Context) RipPassiveInterfaceArrayOutput {
	return o
}

func (o RipPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) RipPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipPassiveInterface {
		return vs[0].([]RipPassiveInterface)[vs[1].(int)]
	}).(RipPassiveInterfaceOutput)
}

type RipRedistribute struct {
	// Redistribute metric setting.
	Metric *int `pulumi:"metric"`
	// Redistribute name.
	Name *string `pulumi:"name"`
	// Route map name.
	Routemap *string `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RipRedistributeInput is an input type that accepts RipRedistributeArgs and RipRedistributeOutput values.
// You can construct a concrete instance of `RipRedistributeInput` via:
//
//	RipRedistributeArgs{...}
type RipRedistributeInput interface {
	pulumi.Input

	ToRipRedistributeOutput() RipRedistributeOutput
	ToRipRedistributeOutputWithContext(context.Context) RipRedistributeOutput
}

type RipRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Redistribute name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RipRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipRedistribute)(nil)).Elem()
}

func (i RipRedistributeArgs) ToRipRedistributeOutput() RipRedistributeOutput {
	return i.ToRipRedistributeOutputWithContext(context.Background())
}

func (i RipRedistributeArgs) ToRipRedistributeOutputWithContext(ctx context.Context) RipRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipRedistributeOutput)
}

// RipRedistributeArrayInput is an input type that accepts RipRedistributeArray and RipRedistributeArrayOutput values.
// You can construct a concrete instance of `RipRedistributeArrayInput` via:
//
//	RipRedistributeArray{ RipRedistributeArgs{...} }
type RipRedistributeArrayInput interface {
	pulumi.Input

	ToRipRedistributeArrayOutput() RipRedistributeArrayOutput
	ToRipRedistributeArrayOutputWithContext(context.Context) RipRedistributeArrayOutput
}

type RipRedistributeArray []RipRedistributeInput

func (RipRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipRedistribute)(nil)).Elem()
}

func (i RipRedistributeArray) ToRipRedistributeArrayOutput() RipRedistributeArrayOutput {
	return i.ToRipRedistributeArrayOutputWithContext(context.Background())
}

func (i RipRedistributeArray) ToRipRedistributeArrayOutputWithContext(ctx context.Context) RipRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipRedistributeArrayOutput)
}

type RipRedistributeOutput struct{ *pulumi.OutputState }

func (RipRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipRedistribute)(nil)).Elem()
}

func (o RipRedistributeOutput) ToRipRedistributeOutput() RipRedistributeOutput {
	return o
}

func (o RipRedistributeOutput) ToRipRedistributeOutputWithContext(ctx context.Context) RipRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o RipRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Redistribute name.
func (o RipRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o RipRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RipRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RipRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RipRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipRedistribute)(nil)).Elem()
}

func (o RipRedistributeArrayOutput) ToRipRedistributeArrayOutput() RipRedistributeArrayOutput {
	return o
}

func (o RipRedistributeArrayOutput) ToRipRedistributeArrayOutputWithContext(ctx context.Context) RipRedistributeArrayOutput {
	return o
}

func (o RipRedistributeArrayOutput) Index(i pulumi.IntInput) RipRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipRedistribute {
		return vs[0].([]RipRedistribute)[vs[1].(int)]
	}).(RipRedistributeOutput)
}

type RipngAggregateAddress struct {
	// Aggregate address entry ID.
	Id *int `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 *string `pulumi:"prefix6"`
}

// RipngAggregateAddressInput is an input type that accepts RipngAggregateAddressArgs and RipngAggregateAddressOutput values.
// You can construct a concrete instance of `RipngAggregateAddressInput` via:
//
//	RipngAggregateAddressArgs{...}
type RipngAggregateAddressInput interface {
	pulumi.Input

	ToRipngAggregateAddressOutput() RipngAggregateAddressOutput
	ToRipngAggregateAddressOutputWithContext(context.Context) RipngAggregateAddressOutput
}

type RipngAggregateAddressArgs struct {
	// Aggregate address entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RipngAggregateAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngAggregateAddress)(nil)).Elem()
}

func (i RipngAggregateAddressArgs) ToRipngAggregateAddressOutput() RipngAggregateAddressOutput {
	return i.ToRipngAggregateAddressOutputWithContext(context.Background())
}

func (i RipngAggregateAddressArgs) ToRipngAggregateAddressOutputWithContext(ctx context.Context) RipngAggregateAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngAggregateAddressOutput)
}

// RipngAggregateAddressArrayInput is an input type that accepts RipngAggregateAddressArray and RipngAggregateAddressArrayOutput values.
// You can construct a concrete instance of `RipngAggregateAddressArrayInput` via:
//
//	RipngAggregateAddressArray{ RipngAggregateAddressArgs{...} }
type RipngAggregateAddressArrayInput interface {
	pulumi.Input

	ToRipngAggregateAddressArrayOutput() RipngAggregateAddressArrayOutput
	ToRipngAggregateAddressArrayOutputWithContext(context.Context) RipngAggregateAddressArrayOutput
}

type RipngAggregateAddressArray []RipngAggregateAddressInput

func (RipngAggregateAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngAggregateAddress)(nil)).Elem()
}

func (i RipngAggregateAddressArray) ToRipngAggregateAddressArrayOutput() RipngAggregateAddressArrayOutput {
	return i.ToRipngAggregateAddressArrayOutputWithContext(context.Background())
}

func (i RipngAggregateAddressArray) ToRipngAggregateAddressArrayOutputWithContext(ctx context.Context) RipngAggregateAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngAggregateAddressArrayOutput)
}

type RipngAggregateAddressOutput struct{ *pulumi.OutputState }

func (RipngAggregateAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngAggregateAddress)(nil)).Elem()
}

func (o RipngAggregateAddressOutput) ToRipngAggregateAddressOutput() RipngAggregateAddressOutput {
	return o
}

func (o RipngAggregateAddressOutput) ToRipngAggregateAddressOutputWithContext(ctx context.Context) RipngAggregateAddressOutput {
	return o
}

// Aggregate address entry ID.
func (o RipngAggregateAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipngAggregateAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Aggregate address prefix.
func (o RipngAggregateAddressOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngAggregateAddress) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RipngAggregateAddressArrayOutput struct{ *pulumi.OutputState }

func (RipngAggregateAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngAggregateAddress)(nil)).Elem()
}

func (o RipngAggregateAddressArrayOutput) ToRipngAggregateAddressArrayOutput() RipngAggregateAddressArrayOutput {
	return o
}

func (o RipngAggregateAddressArrayOutput) ToRipngAggregateAddressArrayOutputWithContext(ctx context.Context) RipngAggregateAddressArrayOutput {
	return o
}

func (o RipngAggregateAddressArrayOutput) Index(i pulumi.IntInput) RipngAggregateAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipngAggregateAddress {
		return vs[0].([]RipngAggregateAddress)[vs[1].(int)]
	}).(RipngAggregateAddressOutput)
}

type RipngDistance struct {
	// Access list for route destination.
	AccessList6 *string `pulumi:"accessList6"`
	// Distance (1 - 255).
	Distance *int `pulumi:"distance"`
	// Distance ID.
	Id *int `pulumi:"id"`
	// Distance prefix6.
	Prefix6 *string `pulumi:"prefix6"`
}

// RipngDistanceInput is an input type that accepts RipngDistanceArgs and RipngDistanceOutput values.
// You can construct a concrete instance of `RipngDistanceInput` via:
//
//	RipngDistanceArgs{...}
type RipngDistanceInput interface {
	pulumi.Input

	ToRipngDistanceOutput() RipngDistanceOutput
	ToRipngDistanceOutputWithContext(context.Context) RipngDistanceOutput
}

type RipngDistanceArgs struct {
	// Access list for route destination.
	AccessList6 pulumi.StringPtrInput `pulumi:"accessList6"`
	// Distance (1 - 255).
	Distance pulumi.IntPtrInput `pulumi:"distance"`
	// Distance ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Distance prefix6.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RipngDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngDistance)(nil)).Elem()
}

func (i RipngDistanceArgs) ToRipngDistanceOutput() RipngDistanceOutput {
	return i.ToRipngDistanceOutputWithContext(context.Background())
}

func (i RipngDistanceArgs) ToRipngDistanceOutputWithContext(ctx context.Context) RipngDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngDistanceOutput)
}

// RipngDistanceArrayInput is an input type that accepts RipngDistanceArray and RipngDistanceArrayOutput values.
// You can construct a concrete instance of `RipngDistanceArrayInput` via:
//
//	RipngDistanceArray{ RipngDistanceArgs{...} }
type RipngDistanceArrayInput interface {
	pulumi.Input

	ToRipngDistanceArrayOutput() RipngDistanceArrayOutput
	ToRipngDistanceArrayOutputWithContext(context.Context) RipngDistanceArrayOutput
}

type RipngDistanceArray []RipngDistanceInput

func (RipngDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngDistance)(nil)).Elem()
}

func (i RipngDistanceArray) ToRipngDistanceArrayOutput() RipngDistanceArrayOutput {
	return i.ToRipngDistanceArrayOutputWithContext(context.Background())
}

func (i RipngDistanceArray) ToRipngDistanceArrayOutputWithContext(ctx context.Context) RipngDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngDistanceArrayOutput)
}

type RipngDistanceOutput struct{ *pulumi.OutputState }

func (RipngDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngDistance)(nil)).Elem()
}

func (o RipngDistanceOutput) ToRipngDistanceOutput() RipngDistanceOutput {
	return o
}

func (o RipngDistanceOutput) ToRipngDistanceOutputWithContext(ctx context.Context) RipngDistanceOutput {
	return o
}

// Access list for route destination.
func (o RipngDistanceOutput) AccessList6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngDistance) *string { return v.AccessList6 }).(pulumi.StringPtrOutput)
}

// Distance (1 - 255).
func (o RipngDistanceOutput) Distance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipngDistance) *int { return v.Distance }).(pulumi.IntPtrOutput)
}

// Distance ID.
func (o RipngDistanceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipngDistance) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Distance prefix6.
func (o RipngDistanceOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngDistance) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RipngDistanceArrayOutput struct{ *pulumi.OutputState }

func (RipngDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngDistance)(nil)).Elem()
}

func (o RipngDistanceArrayOutput) ToRipngDistanceArrayOutput() RipngDistanceArrayOutput {
	return o
}

func (o RipngDistanceArrayOutput) ToRipngDistanceArrayOutputWithContext(ctx context.Context) RipngDistanceArrayOutput {
	return o
}

func (o RipngDistanceArrayOutput) Index(i pulumi.IntInput) RipngDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipngDistance {
		return vs[0].([]RipngDistance)[vs[1].(int)]
	}).(RipngDistanceOutput)
}

type RipngDistributeList struct {
	// Distribute list direction. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// Distribute list ID.
	Id *int `pulumi:"id"`
	// Distribute list interface name.
	Interface *string `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname *string `pulumi:"listname"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RipngDistributeListInput is an input type that accepts RipngDistributeListArgs and RipngDistributeListOutput values.
// You can construct a concrete instance of `RipngDistributeListInput` via:
//
//	RipngDistributeListArgs{...}
type RipngDistributeListInput interface {
	pulumi.Input

	ToRipngDistributeListOutput() RipngDistributeListOutput
	ToRipngDistributeListOutputWithContext(context.Context) RipngDistributeListOutput
}

type RipngDistributeListArgs struct {
	// Distribute list direction. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Distribute list ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Distribute list interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname pulumi.StringPtrInput `pulumi:"listname"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RipngDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngDistributeList)(nil)).Elem()
}

func (i RipngDistributeListArgs) ToRipngDistributeListOutput() RipngDistributeListOutput {
	return i.ToRipngDistributeListOutputWithContext(context.Background())
}

func (i RipngDistributeListArgs) ToRipngDistributeListOutputWithContext(ctx context.Context) RipngDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngDistributeListOutput)
}

// RipngDistributeListArrayInput is an input type that accepts RipngDistributeListArray and RipngDistributeListArrayOutput values.
// You can construct a concrete instance of `RipngDistributeListArrayInput` via:
//
//	RipngDistributeListArray{ RipngDistributeListArgs{...} }
type RipngDistributeListArrayInput interface {
	pulumi.Input

	ToRipngDistributeListArrayOutput() RipngDistributeListArrayOutput
	ToRipngDistributeListArrayOutputWithContext(context.Context) RipngDistributeListArrayOutput
}

type RipngDistributeListArray []RipngDistributeListInput

func (RipngDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngDistributeList)(nil)).Elem()
}

func (i RipngDistributeListArray) ToRipngDistributeListArrayOutput() RipngDistributeListArrayOutput {
	return i.ToRipngDistributeListArrayOutputWithContext(context.Background())
}

func (i RipngDistributeListArray) ToRipngDistributeListArrayOutputWithContext(ctx context.Context) RipngDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngDistributeListArrayOutput)
}

type RipngDistributeListOutput struct{ *pulumi.OutputState }

func (RipngDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngDistributeList)(nil)).Elem()
}

func (o RipngDistributeListOutput) ToRipngDistributeListOutput() RipngDistributeListOutput {
	return o
}

func (o RipngDistributeListOutput) ToRipngDistributeListOutputWithContext(ctx context.Context) RipngDistributeListOutput {
	return o
}

// Distribute list direction. Valid values: `in`, `out`.
func (o RipngDistributeListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngDistributeList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Distribute list ID.
func (o RipngDistributeListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipngDistributeList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Distribute list interface name.
func (o RipngDistributeListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngDistributeList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Distribute access/prefix list name.
func (o RipngDistributeListOutput) Listname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngDistributeList) *string { return v.Listname }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RipngDistributeListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngDistributeList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RipngDistributeListArrayOutput struct{ *pulumi.OutputState }

func (RipngDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngDistributeList)(nil)).Elem()
}

func (o RipngDistributeListArrayOutput) ToRipngDistributeListArrayOutput() RipngDistributeListArrayOutput {
	return o
}

func (o RipngDistributeListArrayOutput) ToRipngDistributeListArrayOutputWithContext(ctx context.Context) RipngDistributeListArrayOutput {
	return o
}

func (o RipngDistributeListArrayOutput) Index(i pulumi.IntInput) RipngDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipngDistributeList {
		return vs[0].([]RipngDistributeList)[vs[1].(int)]
	}).(RipngDistributeListOutput)
}

type RipngInterface struct {
	// Flags.
	Flags *int `pulumi:"flags"`
	// Interface name.
	Name *string `pulumi:"name"`
	// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
	SplitHorizon *string `pulumi:"splitHorizon"`
	// Enable/disable split horizon. Valid values: `enable`, `disable`.
	SplitHorizonStatus *string `pulumi:"splitHorizonStatus"`
}

// RipngInterfaceInput is an input type that accepts RipngInterfaceArgs and RipngInterfaceOutput values.
// You can construct a concrete instance of `RipngInterfaceInput` via:
//
//	RipngInterfaceArgs{...}
type RipngInterfaceInput interface {
	pulumi.Input

	ToRipngInterfaceOutput() RipngInterfaceOutput
	ToRipngInterfaceOutputWithContext(context.Context) RipngInterfaceOutput
}

type RipngInterfaceArgs struct {
	// Flags.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
	SplitHorizon pulumi.StringPtrInput `pulumi:"splitHorizon"`
	// Enable/disable split horizon. Valid values: `enable`, `disable`.
	SplitHorizonStatus pulumi.StringPtrInput `pulumi:"splitHorizonStatus"`
}

func (RipngInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngInterface)(nil)).Elem()
}

func (i RipngInterfaceArgs) ToRipngInterfaceOutput() RipngInterfaceOutput {
	return i.ToRipngInterfaceOutputWithContext(context.Background())
}

func (i RipngInterfaceArgs) ToRipngInterfaceOutputWithContext(ctx context.Context) RipngInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngInterfaceOutput)
}

// RipngInterfaceArrayInput is an input type that accepts RipngInterfaceArray and RipngInterfaceArrayOutput values.
// You can construct a concrete instance of `RipngInterfaceArrayInput` via:
//
//	RipngInterfaceArray{ RipngInterfaceArgs{...} }
type RipngInterfaceArrayInput interface {
	pulumi.Input

	ToRipngInterfaceArrayOutput() RipngInterfaceArrayOutput
	ToRipngInterfaceArrayOutputWithContext(context.Context) RipngInterfaceArrayOutput
}

type RipngInterfaceArray []RipngInterfaceInput

func (RipngInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngInterface)(nil)).Elem()
}

func (i RipngInterfaceArray) ToRipngInterfaceArrayOutput() RipngInterfaceArrayOutput {
	return i.ToRipngInterfaceArrayOutputWithContext(context.Background())
}

func (i RipngInterfaceArray) ToRipngInterfaceArrayOutputWithContext(ctx context.Context) RipngInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngInterfaceArrayOutput)
}

type RipngInterfaceOutput struct{ *pulumi.OutputState }

func (RipngInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngInterface)(nil)).Elem()
}

func (o RipngInterfaceOutput) ToRipngInterfaceOutput() RipngInterfaceOutput {
	return o
}

func (o RipngInterfaceOutput) ToRipngInterfaceOutputWithContext(ctx context.Context) RipngInterfaceOutput {
	return o
}

// Flags.
func (o RipngInterfaceOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipngInterface) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o RipngInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
func (o RipngInterfaceOutput) SplitHorizon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngInterface) *string { return v.SplitHorizon }).(pulumi.StringPtrOutput)
}

// Enable/disable split horizon. Valid values: `enable`, `disable`.
func (o RipngInterfaceOutput) SplitHorizonStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngInterface) *string { return v.SplitHorizonStatus }).(pulumi.StringPtrOutput)
}

type RipngInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RipngInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngInterface)(nil)).Elem()
}

func (o RipngInterfaceArrayOutput) ToRipngInterfaceArrayOutput() RipngInterfaceArrayOutput {
	return o
}

func (o RipngInterfaceArrayOutput) ToRipngInterfaceArrayOutputWithContext(ctx context.Context) RipngInterfaceArrayOutput {
	return o
}

func (o RipngInterfaceArrayOutput) Index(i pulumi.IntInput) RipngInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipngInterface {
		return vs[0].([]RipngInterface)[vs[1].(int)]
	}).(RipngInterfaceOutput)
}

type RipngNeighbor struct {
	// Neighbor entry ID.
	Id *int `pulumi:"id"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// IPv6 link-local address.
	Ip6 *string `pulumi:"ip6"`
}

// RipngNeighborInput is an input type that accepts RipngNeighborArgs and RipngNeighborOutput values.
// You can construct a concrete instance of `RipngNeighborInput` via:
//
//	RipngNeighborArgs{...}
type RipngNeighborInput interface {
	pulumi.Input

	ToRipngNeighborOutput() RipngNeighborOutput
	ToRipngNeighborOutputWithContext(context.Context) RipngNeighborOutput
}

type RipngNeighborArgs struct {
	// Neighbor entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IPv6 link-local address.
	Ip6 pulumi.StringPtrInput `pulumi:"ip6"`
}

func (RipngNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngNeighbor)(nil)).Elem()
}

func (i RipngNeighborArgs) ToRipngNeighborOutput() RipngNeighborOutput {
	return i.ToRipngNeighborOutputWithContext(context.Background())
}

func (i RipngNeighborArgs) ToRipngNeighborOutputWithContext(ctx context.Context) RipngNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngNeighborOutput)
}

// RipngNeighborArrayInput is an input type that accepts RipngNeighborArray and RipngNeighborArrayOutput values.
// You can construct a concrete instance of `RipngNeighborArrayInput` via:
//
//	RipngNeighborArray{ RipngNeighborArgs{...} }
type RipngNeighborArrayInput interface {
	pulumi.Input

	ToRipngNeighborArrayOutput() RipngNeighborArrayOutput
	ToRipngNeighborArrayOutputWithContext(context.Context) RipngNeighborArrayOutput
}

type RipngNeighborArray []RipngNeighborInput

func (RipngNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngNeighbor)(nil)).Elem()
}

func (i RipngNeighborArray) ToRipngNeighborArrayOutput() RipngNeighborArrayOutput {
	return i.ToRipngNeighborArrayOutputWithContext(context.Background())
}

func (i RipngNeighborArray) ToRipngNeighborArrayOutputWithContext(ctx context.Context) RipngNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngNeighborArrayOutput)
}

type RipngNeighborOutput struct{ *pulumi.OutputState }

func (RipngNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngNeighbor)(nil)).Elem()
}

func (o RipngNeighborOutput) ToRipngNeighborOutput() RipngNeighborOutput {
	return o
}

func (o RipngNeighborOutput) ToRipngNeighborOutputWithContext(ctx context.Context) RipngNeighborOutput {
	return o
}

// Neighbor entry ID.
func (o RipngNeighborOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipngNeighbor) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o RipngNeighborOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngNeighbor) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IPv6 link-local address.
func (o RipngNeighborOutput) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngNeighbor) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

type RipngNeighborArrayOutput struct{ *pulumi.OutputState }

func (RipngNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngNeighbor)(nil)).Elem()
}

func (o RipngNeighborArrayOutput) ToRipngNeighborArrayOutput() RipngNeighborArrayOutput {
	return o
}

func (o RipngNeighborArrayOutput) ToRipngNeighborArrayOutputWithContext(ctx context.Context) RipngNeighborArrayOutput {
	return o
}

func (o RipngNeighborArrayOutput) Index(i pulumi.IntInput) RipngNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipngNeighbor {
		return vs[0].([]RipngNeighbor)[vs[1].(int)]
	}).(RipngNeighborOutput)
}

type RipngNetwork struct {
	// Network entry ID.
	Id *int `pulumi:"id"`
	// Network IPv6 link-local prefix.
	Prefix *string `pulumi:"prefix"`
}

// RipngNetworkInput is an input type that accepts RipngNetworkArgs and RipngNetworkOutput values.
// You can construct a concrete instance of `RipngNetworkInput` via:
//
//	RipngNetworkArgs{...}
type RipngNetworkInput interface {
	pulumi.Input

	ToRipngNetworkOutput() RipngNetworkOutput
	ToRipngNetworkOutputWithContext(context.Context) RipngNetworkOutput
}

type RipngNetworkArgs struct {
	// Network entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Network IPv6 link-local prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RipngNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngNetwork)(nil)).Elem()
}

func (i RipngNetworkArgs) ToRipngNetworkOutput() RipngNetworkOutput {
	return i.ToRipngNetworkOutputWithContext(context.Background())
}

func (i RipngNetworkArgs) ToRipngNetworkOutputWithContext(ctx context.Context) RipngNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngNetworkOutput)
}

// RipngNetworkArrayInput is an input type that accepts RipngNetworkArray and RipngNetworkArrayOutput values.
// You can construct a concrete instance of `RipngNetworkArrayInput` via:
//
//	RipngNetworkArray{ RipngNetworkArgs{...} }
type RipngNetworkArrayInput interface {
	pulumi.Input

	ToRipngNetworkArrayOutput() RipngNetworkArrayOutput
	ToRipngNetworkArrayOutputWithContext(context.Context) RipngNetworkArrayOutput
}

type RipngNetworkArray []RipngNetworkInput

func (RipngNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngNetwork)(nil)).Elem()
}

func (i RipngNetworkArray) ToRipngNetworkArrayOutput() RipngNetworkArrayOutput {
	return i.ToRipngNetworkArrayOutputWithContext(context.Background())
}

func (i RipngNetworkArray) ToRipngNetworkArrayOutputWithContext(ctx context.Context) RipngNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngNetworkArrayOutput)
}

type RipngNetworkOutput struct{ *pulumi.OutputState }

func (RipngNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngNetwork)(nil)).Elem()
}

func (o RipngNetworkOutput) ToRipngNetworkOutput() RipngNetworkOutput {
	return o
}

func (o RipngNetworkOutput) ToRipngNetworkOutputWithContext(ctx context.Context) RipngNetworkOutput {
	return o
}

// Network entry ID.
func (o RipngNetworkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipngNetwork) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Network IPv6 link-local prefix.
func (o RipngNetworkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngNetwork) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RipngNetworkArrayOutput struct{ *pulumi.OutputState }

func (RipngNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngNetwork)(nil)).Elem()
}

func (o RipngNetworkArrayOutput) ToRipngNetworkArrayOutput() RipngNetworkArrayOutput {
	return o
}

func (o RipngNetworkArrayOutput) ToRipngNetworkArrayOutputWithContext(ctx context.Context) RipngNetworkArrayOutput {
	return o
}

func (o RipngNetworkArrayOutput) Index(i pulumi.IntInput) RipngNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipngNetwork {
		return vs[0].([]RipngNetwork)[vs[1].(int)]
	}).(RipngNetworkOutput)
}

type RipngOffsetList struct {
	// IPv6 access list name.
	AccessList6 *string `pulumi:"accessList6"`
	// Offset list direction. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// Offset-list ID.
	Id *int `pulumi:"id"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// offset
	Offset *int `pulumi:"offset"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RipngOffsetListInput is an input type that accepts RipngOffsetListArgs and RipngOffsetListOutput values.
// You can construct a concrete instance of `RipngOffsetListInput` via:
//
//	RipngOffsetListArgs{...}
type RipngOffsetListInput interface {
	pulumi.Input

	ToRipngOffsetListOutput() RipngOffsetListOutput
	ToRipngOffsetListOutputWithContext(context.Context) RipngOffsetListOutput
}

type RipngOffsetListArgs struct {
	// IPv6 access list name.
	AccessList6 pulumi.StringPtrInput `pulumi:"accessList6"`
	// Offset list direction. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// offset
	Offset pulumi.IntPtrInput `pulumi:"offset"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RipngOffsetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngOffsetList)(nil)).Elem()
}

func (i RipngOffsetListArgs) ToRipngOffsetListOutput() RipngOffsetListOutput {
	return i.ToRipngOffsetListOutputWithContext(context.Background())
}

func (i RipngOffsetListArgs) ToRipngOffsetListOutputWithContext(ctx context.Context) RipngOffsetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngOffsetListOutput)
}

// RipngOffsetListArrayInput is an input type that accepts RipngOffsetListArray and RipngOffsetListArrayOutput values.
// You can construct a concrete instance of `RipngOffsetListArrayInput` via:
//
//	RipngOffsetListArray{ RipngOffsetListArgs{...} }
type RipngOffsetListArrayInput interface {
	pulumi.Input

	ToRipngOffsetListArrayOutput() RipngOffsetListArrayOutput
	ToRipngOffsetListArrayOutputWithContext(context.Context) RipngOffsetListArrayOutput
}

type RipngOffsetListArray []RipngOffsetListInput

func (RipngOffsetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngOffsetList)(nil)).Elem()
}

func (i RipngOffsetListArray) ToRipngOffsetListArrayOutput() RipngOffsetListArrayOutput {
	return i.ToRipngOffsetListArrayOutputWithContext(context.Background())
}

func (i RipngOffsetListArray) ToRipngOffsetListArrayOutputWithContext(ctx context.Context) RipngOffsetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngOffsetListArrayOutput)
}

type RipngOffsetListOutput struct{ *pulumi.OutputState }

func (RipngOffsetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngOffsetList)(nil)).Elem()
}

func (o RipngOffsetListOutput) ToRipngOffsetListOutput() RipngOffsetListOutput {
	return o
}

func (o RipngOffsetListOutput) ToRipngOffsetListOutputWithContext(ctx context.Context) RipngOffsetListOutput {
	return o
}

// IPv6 access list name.
func (o RipngOffsetListOutput) AccessList6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngOffsetList) *string { return v.AccessList6 }).(pulumi.StringPtrOutput)
}

// Offset list direction. Valid values: `in`, `out`.
func (o RipngOffsetListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngOffsetList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Offset-list ID.
func (o RipngOffsetListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipngOffsetList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o RipngOffsetListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngOffsetList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// offset
func (o RipngOffsetListOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipngOffsetList) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RipngOffsetListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngOffsetList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RipngOffsetListArrayOutput struct{ *pulumi.OutputState }

func (RipngOffsetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngOffsetList)(nil)).Elem()
}

func (o RipngOffsetListArrayOutput) ToRipngOffsetListArrayOutput() RipngOffsetListArrayOutput {
	return o
}

func (o RipngOffsetListArrayOutput) ToRipngOffsetListArrayOutputWithContext(ctx context.Context) RipngOffsetListArrayOutput {
	return o
}

func (o RipngOffsetListArrayOutput) Index(i pulumi.IntInput) RipngOffsetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipngOffsetList {
		return vs[0].([]RipngOffsetList)[vs[1].(int)]
	}).(RipngOffsetListOutput)
}

type RipngPassiveInterface struct {
	// Passive interface name.
	Name *string `pulumi:"name"`
}

// RipngPassiveInterfaceInput is an input type that accepts RipngPassiveInterfaceArgs and RipngPassiveInterfaceOutput values.
// You can construct a concrete instance of `RipngPassiveInterfaceInput` via:
//
//	RipngPassiveInterfaceArgs{...}
type RipngPassiveInterfaceInput interface {
	pulumi.Input

	ToRipngPassiveInterfaceOutput() RipngPassiveInterfaceOutput
	ToRipngPassiveInterfaceOutputWithContext(context.Context) RipngPassiveInterfaceOutput
}

type RipngPassiveInterfaceArgs struct {
	// Passive interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RipngPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngPassiveInterface)(nil)).Elem()
}

func (i RipngPassiveInterfaceArgs) ToRipngPassiveInterfaceOutput() RipngPassiveInterfaceOutput {
	return i.ToRipngPassiveInterfaceOutputWithContext(context.Background())
}

func (i RipngPassiveInterfaceArgs) ToRipngPassiveInterfaceOutputWithContext(ctx context.Context) RipngPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngPassiveInterfaceOutput)
}

// RipngPassiveInterfaceArrayInput is an input type that accepts RipngPassiveInterfaceArray and RipngPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `RipngPassiveInterfaceArrayInput` via:
//
//	RipngPassiveInterfaceArray{ RipngPassiveInterfaceArgs{...} }
type RipngPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToRipngPassiveInterfaceArrayOutput() RipngPassiveInterfaceArrayOutput
	ToRipngPassiveInterfaceArrayOutputWithContext(context.Context) RipngPassiveInterfaceArrayOutput
}

type RipngPassiveInterfaceArray []RipngPassiveInterfaceInput

func (RipngPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngPassiveInterface)(nil)).Elem()
}

func (i RipngPassiveInterfaceArray) ToRipngPassiveInterfaceArrayOutput() RipngPassiveInterfaceArrayOutput {
	return i.ToRipngPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i RipngPassiveInterfaceArray) ToRipngPassiveInterfaceArrayOutputWithContext(ctx context.Context) RipngPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngPassiveInterfaceArrayOutput)
}

type RipngPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (RipngPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngPassiveInterface)(nil)).Elem()
}

func (o RipngPassiveInterfaceOutput) ToRipngPassiveInterfaceOutput() RipngPassiveInterfaceOutput {
	return o
}

func (o RipngPassiveInterfaceOutput) ToRipngPassiveInterfaceOutputWithContext(ctx context.Context) RipngPassiveInterfaceOutput {
	return o
}

// Passive interface name.
func (o RipngPassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngPassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RipngPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RipngPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngPassiveInterface)(nil)).Elem()
}

func (o RipngPassiveInterfaceArrayOutput) ToRipngPassiveInterfaceArrayOutput() RipngPassiveInterfaceArrayOutput {
	return o
}

func (o RipngPassiveInterfaceArrayOutput) ToRipngPassiveInterfaceArrayOutputWithContext(ctx context.Context) RipngPassiveInterfaceArrayOutput {
	return o
}

func (o RipngPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) RipngPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipngPassiveInterface {
		return vs[0].([]RipngPassiveInterface)[vs[1].(int)]
	}).(RipngPassiveInterfaceOutput)
}

type RipngRedistribute struct {
	// Redistribute metric setting.
	Metric *int `pulumi:"metric"`
	// Redistribute name.
	Name *string `pulumi:"name"`
	// Route map name.
	Routemap *string `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RipngRedistributeInput is an input type that accepts RipngRedistributeArgs and RipngRedistributeOutput values.
// You can construct a concrete instance of `RipngRedistributeInput` via:
//
//	RipngRedistributeArgs{...}
type RipngRedistributeInput interface {
	pulumi.Input

	ToRipngRedistributeOutput() RipngRedistributeOutput
	ToRipngRedistributeOutputWithContext(context.Context) RipngRedistributeOutput
}

type RipngRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Redistribute name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RipngRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngRedistribute)(nil)).Elem()
}

func (i RipngRedistributeArgs) ToRipngRedistributeOutput() RipngRedistributeOutput {
	return i.ToRipngRedistributeOutputWithContext(context.Background())
}

func (i RipngRedistributeArgs) ToRipngRedistributeOutputWithContext(ctx context.Context) RipngRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngRedistributeOutput)
}

// RipngRedistributeArrayInput is an input type that accepts RipngRedistributeArray and RipngRedistributeArrayOutput values.
// You can construct a concrete instance of `RipngRedistributeArrayInput` via:
//
//	RipngRedistributeArray{ RipngRedistributeArgs{...} }
type RipngRedistributeArrayInput interface {
	pulumi.Input

	ToRipngRedistributeArrayOutput() RipngRedistributeArrayOutput
	ToRipngRedistributeArrayOutputWithContext(context.Context) RipngRedistributeArrayOutput
}

type RipngRedistributeArray []RipngRedistributeInput

func (RipngRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngRedistribute)(nil)).Elem()
}

func (i RipngRedistributeArray) ToRipngRedistributeArrayOutput() RipngRedistributeArrayOutput {
	return i.ToRipngRedistributeArrayOutputWithContext(context.Background())
}

func (i RipngRedistributeArray) ToRipngRedistributeArrayOutputWithContext(ctx context.Context) RipngRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngRedistributeArrayOutput)
}

type RipngRedistributeOutput struct{ *pulumi.OutputState }

func (RipngRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RipngRedistribute)(nil)).Elem()
}

func (o RipngRedistributeOutput) ToRipngRedistributeOutput() RipngRedistributeOutput {
	return o
}

func (o RipngRedistributeOutput) ToRipngRedistributeOutputWithContext(ctx context.Context) RipngRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o RipngRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RipngRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Redistribute name.
func (o RipngRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o RipngRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RipngRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RipngRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RipngRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RipngRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RipngRedistribute)(nil)).Elem()
}

func (o RipngRedistributeArrayOutput) ToRipngRedistributeArrayOutput() RipngRedistributeArrayOutput {
	return o
}

func (o RipngRedistributeArrayOutput) ToRipngRedistributeArrayOutputWithContext(ctx context.Context) RipngRedistributeArrayOutput {
	return o
}

func (o RipngRedistributeArrayOutput) Index(i pulumi.IntInput) RipngRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RipngRedistribute {
		return vs[0].([]RipngRedistribute)[vs[1].(int)]
	}).(RipngRedistributeOutput)
}

type RoutemapRule struct {
	// Action. Valid values: `permit`, `deny`.
	Action *string `pulumi:"action"`
	// Rule ID.
	Id *int `pulumi:"id"`
	// Match BGP AS path list.
	MatchAsPath *string `pulumi:"matchAsPath"`
	// Match BGP community list.
	MatchCommunity *string `pulumi:"matchCommunity"`
	// Enable/disable exact matching of communities. Valid values: `enable`, `disable`.
	MatchCommunityExact *string `pulumi:"matchCommunityExact"`
	// Match BGP extended community list.
	MatchExtcommunity *string `pulumi:"matchExtcommunity"`
	// Enable/disable exact matching of extended communities. Valid values: `enable`, `disable`.
	MatchExtcommunityExact *string `pulumi:"matchExtcommunityExact"`
	// BGP flag value to match (0 - 65535)
	MatchFlags *int `pulumi:"matchFlags"`
	// Match interface configuration.
	MatchInterface *string `pulumi:"matchInterface"`
	// Match IPv6 address permitted by access-list6 or prefix-list6.
	MatchIp6Address *string `pulumi:"matchIp6Address"`
	// Match next hop IPv6 address passed by access-list6 or prefix-list6.
	MatchIp6Nexthop *string `pulumi:"matchIp6Nexthop"`
	// Match IP address permitted by access-list or prefix-list.
	MatchIpAddress *string `pulumi:"matchIpAddress"`
	// Match next hop IP address passed by access-list or prefix-list.
	MatchIpNexthop *string `pulumi:"matchIpNexthop"`
	// Match metric for redistribute routes.
	MatchMetric *int `pulumi:"matchMetric"`
	// Match BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
	MatchOrigin *string `pulumi:"matchOrigin"`
	// Match route type.
	MatchRouteType *string `pulumi:"matchRouteType"`
	// Match tag.
	MatchTag *int `pulumi:"matchTag"`
	// Match VRF ID.
	MatchVrf *int `pulumi:"matchVrf"`
	// BGP aggregator AS.
	SetAggregatorAs *int `pulumi:"setAggregatorAs"`
	// BGP aggregator IP.
	SetAggregatorIp *string `pulumi:"setAggregatorIp"`
	// Specify preferred action of set-aspath. Valid values: `prepend`, `replace`.
	SetAspathAction *string `pulumi:"setAspathAction"`
	// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
	SetAspaths []RoutemapRuleSetAspath `pulumi:"setAspaths"`
	// Enable/disable BGP atomic aggregate attribute. Valid values: `enable`, `disable`.
	SetAtomicAggregate *string `pulumi:"setAtomicAggregate"`
	// BGP community attribute. The structure of `setCommunity` block is documented below.
	SetCommunities []RoutemapRuleSetCommunity `pulumi:"setCommunities"`
	// Enable/disable adding set-community to existing community. Valid values: `enable`, `disable`.
	SetCommunityAdditive *string `pulumi:"setCommunityAdditive"`
	// Delete communities matching community list.
	SetCommunityDelete *string `pulumi:"setCommunityDelete"`
	// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
	SetDampeningMaxSuppress *int `pulumi:"setDampeningMaxSuppress"`
	// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
	SetDampeningReachabilityHalfLife *int `pulumi:"setDampeningReachabilityHalfLife"`
	// Value to start reusing a route (1 - 20000, 0 = unset).
	SetDampeningReuse *int `pulumi:"setDampeningReuse"`
	// Value to start suppressing a route (1 - 20000, 0 = unset).
	SetDampeningSuppress *int `pulumi:"setDampeningSuppress"`
	// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
	SetDampeningUnreachabilityHalfLife *int `pulumi:"setDampeningUnreachabilityHalfLife"`
	// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
	SetExtcommunityRts []RoutemapRuleSetExtcommunityRt `pulumi:"setExtcommunityRts"`
	// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
	SetExtcommunitySoos []RoutemapRuleSetExtcommunitySoo `pulumi:"setExtcommunitySoos"`
	// BGP flags value (0 - 65535)
	SetFlags *int `pulumi:"setFlags"`
	// IPv6 global address of next hop.
	SetIp6Nexthop *string `pulumi:"setIp6Nexthop"`
	// IPv6 local address of next hop.
	SetIp6NexthopLocal *string `pulumi:"setIp6NexthopLocal"`
	// IP address of next hop.
	SetIpNexthop *string `pulumi:"setIpNexthop"`
	// IP address of preferred source.
	SetIpPrefsrc *string `pulumi:"setIpPrefsrc"`
	// BGP local preference path attribute.
	SetLocalPreference *int `pulumi:"setLocalPreference"`
	// Metric value.
	SetMetric *int `pulumi:"setMetric"`
	// Metric type.
	SetMetricType *string `pulumi:"setMetricType"`
	// BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
	SetOrigin *string `pulumi:"setOrigin"`
	// BGP originator ID attribute.
	SetOriginatorId *string `pulumi:"setOriginatorId"`
	// Priority for routing table.
	SetPriority *int `pulumi:"setPriority"`
	// Route tag for routing table.
	SetRouteTag *int `pulumi:"setRouteTag"`
	// Tag value.
	SetTag *int `pulumi:"setTag"`
	// IP address of VPNv4 next-hop.
	SetVpnv4Nexthop *string `pulumi:"setVpnv4Nexthop"`
	// IPv6 global address of VPNv6 next-hop.
	SetVpnv6Nexthop *string `pulumi:"setVpnv6Nexthop"`
	// IPv6 link-local address of VPNv6 next-hop.
	SetVpnv6NexthopLocal *string `pulumi:"setVpnv6NexthopLocal"`
	// BGP weight for routing table.
	SetWeight *int `pulumi:"setWeight"`
}

// RoutemapRuleInput is an input type that accepts RoutemapRuleArgs and RoutemapRuleOutput values.
// You can construct a concrete instance of `RoutemapRuleInput` via:
//
//	RoutemapRuleArgs{...}
type RoutemapRuleInput interface {
	pulumi.Input

	ToRoutemapRuleOutput() RoutemapRuleOutput
	ToRoutemapRuleOutputWithContext(context.Context) RoutemapRuleOutput
}

type RoutemapRuleArgs struct {
	// Action. Valid values: `permit`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Match BGP AS path list.
	MatchAsPath pulumi.StringPtrInput `pulumi:"matchAsPath"`
	// Match BGP community list.
	MatchCommunity pulumi.StringPtrInput `pulumi:"matchCommunity"`
	// Enable/disable exact matching of communities. Valid values: `enable`, `disable`.
	MatchCommunityExact pulumi.StringPtrInput `pulumi:"matchCommunityExact"`
	// Match BGP extended community list.
	MatchExtcommunity pulumi.StringPtrInput `pulumi:"matchExtcommunity"`
	// Enable/disable exact matching of extended communities. Valid values: `enable`, `disable`.
	MatchExtcommunityExact pulumi.StringPtrInput `pulumi:"matchExtcommunityExact"`
	// BGP flag value to match (0 - 65535)
	MatchFlags pulumi.IntPtrInput `pulumi:"matchFlags"`
	// Match interface configuration.
	MatchInterface pulumi.StringPtrInput `pulumi:"matchInterface"`
	// Match IPv6 address permitted by access-list6 or prefix-list6.
	MatchIp6Address pulumi.StringPtrInput `pulumi:"matchIp6Address"`
	// Match next hop IPv6 address passed by access-list6 or prefix-list6.
	MatchIp6Nexthop pulumi.StringPtrInput `pulumi:"matchIp6Nexthop"`
	// Match IP address permitted by access-list or prefix-list.
	MatchIpAddress pulumi.StringPtrInput `pulumi:"matchIpAddress"`
	// Match next hop IP address passed by access-list or prefix-list.
	MatchIpNexthop pulumi.StringPtrInput `pulumi:"matchIpNexthop"`
	// Match metric for redistribute routes.
	MatchMetric pulumi.IntPtrInput `pulumi:"matchMetric"`
	// Match BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
	MatchOrigin pulumi.StringPtrInput `pulumi:"matchOrigin"`
	// Match route type.
	MatchRouteType pulumi.StringPtrInput `pulumi:"matchRouteType"`
	// Match tag.
	MatchTag pulumi.IntPtrInput `pulumi:"matchTag"`
	// Match VRF ID.
	MatchVrf pulumi.IntPtrInput `pulumi:"matchVrf"`
	// BGP aggregator AS.
	SetAggregatorAs pulumi.IntPtrInput `pulumi:"setAggregatorAs"`
	// BGP aggregator IP.
	SetAggregatorIp pulumi.StringPtrInput `pulumi:"setAggregatorIp"`
	// Specify preferred action of set-aspath. Valid values: `prepend`, `replace`.
	SetAspathAction pulumi.StringPtrInput `pulumi:"setAspathAction"`
	// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
	SetAspaths RoutemapRuleSetAspathArrayInput `pulumi:"setAspaths"`
	// Enable/disable BGP atomic aggregate attribute. Valid values: `enable`, `disable`.
	SetAtomicAggregate pulumi.StringPtrInput `pulumi:"setAtomicAggregate"`
	// BGP community attribute. The structure of `setCommunity` block is documented below.
	SetCommunities RoutemapRuleSetCommunityArrayInput `pulumi:"setCommunities"`
	// Enable/disable adding set-community to existing community. Valid values: `enable`, `disable`.
	SetCommunityAdditive pulumi.StringPtrInput `pulumi:"setCommunityAdditive"`
	// Delete communities matching community list.
	SetCommunityDelete pulumi.StringPtrInput `pulumi:"setCommunityDelete"`
	// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
	SetDampeningMaxSuppress pulumi.IntPtrInput `pulumi:"setDampeningMaxSuppress"`
	// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
	SetDampeningReachabilityHalfLife pulumi.IntPtrInput `pulumi:"setDampeningReachabilityHalfLife"`
	// Value to start reusing a route (1 - 20000, 0 = unset).
	SetDampeningReuse pulumi.IntPtrInput `pulumi:"setDampeningReuse"`
	// Value to start suppressing a route (1 - 20000, 0 = unset).
	SetDampeningSuppress pulumi.IntPtrInput `pulumi:"setDampeningSuppress"`
	// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
	SetDampeningUnreachabilityHalfLife pulumi.IntPtrInput `pulumi:"setDampeningUnreachabilityHalfLife"`
	// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
	SetExtcommunityRts RoutemapRuleSetExtcommunityRtArrayInput `pulumi:"setExtcommunityRts"`
	// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
	SetExtcommunitySoos RoutemapRuleSetExtcommunitySooArrayInput `pulumi:"setExtcommunitySoos"`
	// BGP flags value (0 - 65535)
	SetFlags pulumi.IntPtrInput `pulumi:"setFlags"`
	// IPv6 global address of next hop.
	SetIp6Nexthop pulumi.StringPtrInput `pulumi:"setIp6Nexthop"`
	// IPv6 local address of next hop.
	SetIp6NexthopLocal pulumi.StringPtrInput `pulumi:"setIp6NexthopLocal"`
	// IP address of next hop.
	SetIpNexthop pulumi.StringPtrInput `pulumi:"setIpNexthop"`
	// IP address of preferred source.
	SetIpPrefsrc pulumi.StringPtrInput `pulumi:"setIpPrefsrc"`
	// BGP local preference path attribute.
	SetLocalPreference pulumi.IntPtrInput `pulumi:"setLocalPreference"`
	// Metric value.
	SetMetric pulumi.IntPtrInput `pulumi:"setMetric"`
	// Metric type.
	SetMetricType pulumi.StringPtrInput `pulumi:"setMetricType"`
	// BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
	SetOrigin pulumi.StringPtrInput `pulumi:"setOrigin"`
	// BGP originator ID attribute.
	SetOriginatorId pulumi.StringPtrInput `pulumi:"setOriginatorId"`
	// Priority for routing table.
	SetPriority pulumi.IntPtrInput `pulumi:"setPriority"`
	// Route tag for routing table.
	SetRouteTag pulumi.IntPtrInput `pulumi:"setRouteTag"`
	// Tag value.
	SetTag pulumi.IntPtrInput `pulumi:"setTag"`
	// IP address of VPNv4 next-hop.
	SetVpnv4Nexthop pulumi.StringPtrInput `pulumi:"setVpnv4Nexthop"`
	// IPv6 global address of VPNv6 next-hop.
	SetVpnv6Nexthop pulumi.StringPtrInput `pulumi:"setVpnv6Nexthop"`
	// IPv6 link-local address of VPNv6 next-hop.
	SetVpnv6NexthopLocal pulumi.StringPtrInput `pulumi:"setVpnv6NexthopLocal"`
	// BGP weight for routing table.
	SetWeight pulumi.IntPtrInput `pulumi:"setWeight"`
}

func (RoutemapRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutemapRule)(nil)).Elem()
}

func (i RoutemapRuleArgs) ToRoutemapRuleOutput() RoutemapRuleOutput {
	return i.ToRoutemapRuleOutputWithContext(context.Background())
}

func (i RoutemapRuleArgs) ToRoutemapRuleOutputWithContext(ctx context.Context) RoutemapRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutemapRuleOutput)
}

// RoutemapRuleArrayInput is an input type that accepts RoutemapRuleArray and RoutemapRuleArrayOutput values.
// You can construct a concrete instance of `RoutemapRuleArrayInput` via:
//
//	RoutemapRuleArray{ RoutemapRuleArgs{...} }
type RoutemapRuleArrayInput interface {
	pulumi.Input

	ToRoutemapRuleArrayOutput() RoutemapRuleArrayOutput
	ToRoutemapRuleArrayOutputWithContext(context.Context) RoutemapRuleArrayOutput
}

type RoutemapRuleArray []RoutemapRuleInput

func (RoutemapRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutemapRule)(nil)).Elem()
}

func (i RoutemapRuleArray) ToRoutemapRuleArrayOutput() RoutemapRuleArrayOutput {
	return i.ToRoutemapRuleArrayOutputWithContext(context.Background())
}

func (i RoutemapRuleArray) ToRoutemapRuleArrayOutputWithContext(ctx context.Context) RoutemapRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutemapRuleArrayOutput)
}

type RoutemapRuleOutput struct{ *pulumi.OutputState }

func (RoutemapRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutemapRule)(nil)).Elem()
}

func (o RoutemapRuleOutput) ToRoutemapRuleOutput() RoutemapRuleOutput {
	return o
}

func (o RoutemapRuleOutput) ToRoutemapRuleOutputWithContext(ctx context.Context) RoutemapRuleOutput {
	return o
}

// Action. Valid values: `permit`, `deny`.
func (o RoutemapRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Rule ID.
func (o RoutemapRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Match BGP AS path list.
func (o RoutemapRuleOutput) MatchAsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchAsPath }).(pulumi.StringPtrOutput)
}

// Match BGP community list.
func (o RoutemapRuleOutput) MatchCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchCommunity }).(pulumi.StringPtrOutput)
}

// Enable/disable exact matching of communities. Valid values: `enable`, `disable`.
func (o RoutemapRuleOutput) MatchCommunityExact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchCommunityExact }).(pulumi.StringPtrOutput)
}

// Match BGP extended community list.
func (o RoutemapRuleOutput) MatchExtcommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchExtcommunity }).(pulumi.StringPtrOutput)
}

// Enable/disable exact matching of extended communities. Valid values: `enable`, `disable`.
func (o RoutemapRuleOutput) MatchExtcommunityExact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchExtcommunityExact }).(pulumi.StringPtrOutput)
}

// BGP flag value to match (0 - 65535)
func (o RoutemapRuleOutput) MatchFlags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.MatchFlags }).(pulumi.IntPtrOutput)
}

// Match interface configuration.
func (o RoutemapRuleOutput) MatchInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchInterface }).(pulumi.StringPtrOutput)
}

// Match IPv6 address permitted by access-list6 or prefix-list6.
func (o RoutemapRuleOutput) MatchIp6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchIp6Address }).(pulumi.StringPtrOutput)
}

// Match next hop IPv6 address passed by access-list6 or prefix-list6.
func (o RoutemapRuleOutput) MatchIp6Nexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchIp6Nexthop }).(pulumi.StringPtrOutput)
}

// Match IP address permitted by access-list or prefix-list.
func (o RoutemapRuleOutput) MatchIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchIpAddress }).(pulumi.StringPtrOutput)
}

// Match next hop IP address passed by access-list or prefix-list.
func (o RoutemapRuleOutput) MatchIpNexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchIpNexthop }).(pulumi.StringPtrOutput)
}

// Match metric for redistribute routes.
func (o RoutemapRuleOutput) MatchMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.MatchMetric }).(pulumi.IntPtrOutput)
}

// Match BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
func (o RoutemapRuleOutput) MatchOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchOrigin }).(pulumi.StringPtrOutput)
}

// Match route type.
func (o RoutemapRuleOutput) MatchRouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.MatchRouteType }).(pulumi.StringPtrOutput)
}

// Match tag.
func (o RoutemapRuleOutput) MatchTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.MatchTag }).(pulumi.IntPtrOutput)
}

// Match VRF ID.
func (o RoutemapRuleOutput) MatchVrf() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.MatchVrf }).(pulumi.IntPtrOutput)
}

// BGP aggregator AS.
func (o RoutemapRuleOutput) SetAggregatorAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetAggregatorAs }).(pulumi.IntPtrOutput)
}

// BGP aggregator IP.
func (o RoutemapRuleOutput) SetAggregatorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetAggregatorIp }).(pulumi.StringPtrOutput)
}

// Specify preferred action of set-aspath. Valid values: `prepend`, `replace`.
func (o RoutemapRuleOutput) SetAspathAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetAspathAction }).(pulumi.StringPtrOutput)
}

// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
func (o RoutemapRuleOutput) SetAspaths() RoutemapRuleSetAspathArrayOutput {
	return o.ApplyT(func(v RoutemapRule) []RoutemapRuleSetAspath { return v.SetAspaths }).(RoutemapRuleSetAspathArrayOutput)
}

// Enable/disable BGP atomic aggregate attribute. Valid values: `enable`, `disable`.
func (o RoutemapRuleOutput) SetAtomicAggregate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetAtomicAggregate }).(pulumi.StringPtrOutput)
}

// BGP community attribute. The structure of `setCommunity` block is documented below.
func (o RoutemapRuleOutput) SetCommunities() RoutemapRuleSetCommunityArrayOutput {
	return o.ApplyT(func(v RoutemapRule) []RoutemapRuleSetCommunity { return v.SetCommunities }).(RoutemapRuleSetCommunityArrayOutput)
}

// Enable/disable adding set-community to existing community. Valid values: `enable`, `disable`.
func (o RoutemapRuleOutput) SetCommunityAdditive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetCommunityAdditive }).(pulumi.StringPtrOutput)
}

// Delete communities matching community list.
func (o RoutemapRuleOutput) SetCommunityDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetCommunityDelete }).(pulumi.StringPtrOutput)
}

// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
func (o RoutemapRuleOutput) SetDampeningMaxSuppress() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetDampeningMaxSuppress }).(pulumi.IntPtrOutput)
}

// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
func (o RoutemapRuleOutput) SetDampeningReachabilityHalfLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetDampeningReachabilityHalfLife }).(pulumi.IntPtrOutput)
}

// Value to start reusing a route (1 - 20000, 0 = unset).
func (o RoutemapRuleOutput) SetDampeningReuse() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetDampeningReuse }).(pulumi.IntPtrOutput)
}

// Value to start suppressing a route (1 - 20000, 0 = unset).
func (o RoutemapRuleOutput) SetDampeningSuppress() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetDampeningSuppress }).(pulumi.IntPtrOutput)
}

// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
func (o RoutemapRuleOutput) SetDampeningUnreachabilityHalfLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetDampeningUnreachabilityHalfLife }).(pulumi.IntPtrOutput)
}

// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
func (o RoutemapRuleOutput) SetExtcommunityRts() RoutemapRuleSetExtcommunityRtArrayOutput {
	return o.ApplyT(func(v RoutemapRule) []RoutemapRuleSetExtcommunityRt { return v.SetExtcommunityRts }).(RoutemapRuleSetExtcommunityRtArrayOutput)
}

// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
func (o RoutemapRuleOutput) SetExtcommunitySoos() RoutemapRuleSetExtcommunitySooArrayOutput {
	return o.ApplyT(func(v RoutemapRule) []RoutemapRuleSetExtcommunitySoo { return v.SetExtcommunitySoos }).(RoutemapRuleSetExtcommunitySooArrayOutput)
}

// BGP flags value (0 - 65535)
func (o RoutemapRuleOutput) SetFlags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetFlags }).(pulumi.IntPtrOutput)
}

// IPv6 global address of next hop.
func (o RoutemapRuleOutput) SetIp6Nexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetIp6Nexthop }).(pulumi.StringPtrOutput)
}

// IPv6 local address of next hop.
func (o RoutemapRuleOutput) SetIp6NexthopLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetIp6NexthopLocal }).(pulumi.StringPtrOutput)
}

// IP address of next hop.
func (o RoutemapRuleOutput) SetIpNexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetIpNexthop }).(pulumi.StringPtrOutput)
}

// IP address of preferred source.
func (o RoutemapRuleOutput) SetIpPrefsrc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetIpPrefsrc }).(pulumi.StringPtrOutput)
}

// BGP local preference path attribute.
func (o RoutemapRuleOutput) SetLocalPreference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetLocalPreference }).(pulumi.IntPtrOutput)
}

// Metric value.
func (o RoutemapRuleOutput) SetMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetMetric }).(pulumi.IntPtrOutput)
}

// Metric type.
func (o RoutemapRuleOutput) SetMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetMetricType }).(pulumi.StringPtrOutput)
}

// BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
func (o RoutemapRuleOutput) SetOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetOrigin }).(pulumi.StringPtrOutput)
}

// BGP originator ID attribute.
func (o RoutemapRuleOutput) SetOriginatorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetOriginatorId }).(pulumi.StringPtrOutput)
}

// Priority for routing table.
func (o RoutemapRuleOutput) SetPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetPriority }).(pulumi.IntPtrOutput)
}

// Route tag for routing table.
func (o RoutemapRuleOutput) SetRouteTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetRouteTag }).(pulumi.IntPtrOutput)
}

// Tag value.
func (o RoutemapRuleOutput) SetTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetTag }).(pulumi.IntPtrOutput)
}

// IP address of VPNv4 next-hop.
func (o RoutemapRuleOutput) SetVpnv4Nexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetVpnv4Nexthop }).(pulumi.StringPtrOutput)
}

// IPv6 global address of VPNv6 next-hop.
func (o RoutemapRuleOutput) SetVpnv6Nexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetVpnv6Nexthop }).(pulumi.StringPtrOutput)
}

// IPv6 link-local address of VPNv6 next-hop.
func (o RoutemapRuleOutput) SetVpnv6NexthopLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *string { return v.SetVpnv6NexthopLocal }).(pulumi.StringPtrOutput)
}

// BGP weight for routing table.
func (o RoutemapRuleOutput) SetWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutemapRule) *int { return v.SetWeight }).(pulumi.IntPtrOutput)
}

type RoutemapRuleArrayOutput struct{ *pulumi.OutputState }

func (RoutemapRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutemapRule)(nil)).Elem()
}

func (o RoutemapRuleArrayOutput) ToRoutemapRuleArrayOutput() RoutemapRuleArrayOutput {
	return o
}

func (o RoutemapRuleArrayOutput) ToRoutemapRuleArrayOutputWithContext(ctx context.Context) RoutemapRuleArrayOutput {
	return o
}

func (o RoutemapRuleArrayOutput) Index(i pulumi.IntInput) RoutemapRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutemapRule {
		return vs[0].([]RoutemapRule)[vs[1].(int)]
	}).(RoutemapRuleOutput)
}

type RoutemapRuleSetAspath struct {
	// AS number. Use quotes for repeating numbers, For example, "1 1 2". On FortiOS versions 6.2.0-7.0.0: 0 - 42949672. On FortiOS versions 7.0.1-7.0.3: 0 - 4294967295.
	As *string `pulumi:"as"`
}

// RoutemapRuleSetAspathInput is an input type that accepts RoutemapRuleSetAspathArgs and RoutemapRuleSetAspathOutput values.
// You can construct a concrete instance of `RoutemapRuleSetAspathInput` via:
//
//	RoutemapRuleSetAspathArgs{...}
type RoutemapRuleSetAspathInput interface {
	pulumi.Input

	ToRoutemapRuleSetAspathOutput() RoutemapRuleSetAspathOutput
	ToRoutemapRuleSetAspathOutputWithContext(context.Context) RoutemapRuleSetAspathOutput
}

type RoutemapRuleSetAspathArgs struct {
	// AS number. Use quotes for repeating numbers, For example, "1 1 2". On FortiOS versions 6.2.0-7.0.0: 0 - 42949672. On FortiOS versions 7.0.1-7.0.3: 0 - 4294967295.
	As pulumi.StringPtrInput `pulumi:"as"`
}

func (RoutemapRuleSetAspathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutemapRuleSetAspath)(nil)).Elem()
}

func (i RoutemapRuleSetAspathArgs) ToRoutemapRuleSetAspathOutput() RoutemapRuleSetAspathOutput {
	return i.ToRoutemapRuleSetAspathOutputWithContext(context.Background())
}

func (i RoutemapRuleSetAspathArgs) ToRoutemapRuleSetAspathOutputWithContext(ctx context.Context) RoutemapRuleSetAspathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutemapRuleSetAspathOutput)
}

// RoutemapRuleSetAspathArrayInput is an input type that accepts RoutemapRuleSetAspathArray and RoutemapRuleSetAspathArrayOutput values.
// You can construct a concrete instance of `RoutemapRuleSetAspathArrayInput` via:
//
//	RoutemapRuleSetAspathArray{ RoutemapRuleSetAspathArgs{...} }
type RoutemapRuleSetAspathArrayInput interface {
	pulumi.Input

	ToRoutemapRuleSetAspathArrayOutput() RoutemapRuleSetAspathArrayOutput
	ToRoutemapRuleSetAspathArrayOutputWithContext(context.Context) RoutemapRuleSetAspathArrayOutput
}

type RoutemapRuleSetAspathArray []RoutemapRuleSetAspathInput

func (RoutemapRuleSetAspathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutemapRuleSetAspath)(nil)).Elem()
}

func (i RoutemapRuleSetAspathArray) ToRoutemapRuleSetAspathArrayOutput() RoutemapRuleSetAspathArrayOutput {
	return i.ToRoutemapRuleSetAspathArrayOutputWithContext(context.Background())
}

func (i RoutemapRuleSetAspathArray) ToRoutemapRuleSetAspathArrayOutputWithContext(ctx context.Context) RoutemapRuleSetAspathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutemapRuleSetAspathArrayOutput)
}

type RoutemapRuleSetAspathOutput struct{ *pulumi.OutputState }

func (RoutemapRuleSetAspathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutemapRuleSetAspath)(nil)).Elem()
}

func (o RoutemapRuleSetAspathOutput) ToRoutemapRuleSetAspathOutput() RoutemapRuleSetAspathOutput {
	return o
}

func (o RoutemapRuleSetAspathOutput) ToRoutemapRuleSetAspathOutputWithContext(ctx context.Context) RoutemapRuleSetAspathOutput {
	return o
}

// AS number. Use quotes for repeating numbers, For example, "1 1 2". On FortiOS versions 6.2.0-7.0.0: 0 - 42949672. On FortiOS versions 7.0.1-7.0.3: 0 - 4294967295.
func (o RoutemapRuleSetAspathOutput) As() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRuleSetAspath) *string { return v.As }).(pulumi.StringPtrOutput)
}

type RoutemapRuleSetAspathArrayOutput struct{ *pulumi.OutputState }

func (RoutemapRuleSetAspathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutemapRuleSetAspath)(nil)).Elem()
}

func (o RoutemapRuleSetAspathArrayOutput) ToRoutemapRuleSetAspathArrayOutput() RoutemapRuleSetAspathArrayOutput {
	return o
}

func (o RoutemapRuleSetAspathArrayOutput) ToRoutemapRuleSetAspathArrayOutputWithContext(ctx context.Context) RoutemapRuleSetAspathArrayOutput {
	return o
}

func (o RoutemapRuleSetAspathArrayOutput) Index(i pulumi.IntInput) RoutemapRuleSetAspathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutemapRuleSetAspath {
		return vs[0].([]RoutemapRuleSetAspath)[vs[1].(int)]
	}).(RoutemapRuleSetAspathOutput)
}

type RoutemapRuleSetCommunity struct {
	// Attribute: AA|AA:NN|internet|local-AS|no-advertise|no-export.
	Community *string `pulumi:"community"`
}

// RoutemapRuleSetCommunityInput is an input type that accepts RoutemapRuleSetCommunityArgs and RoutemapRuleSetCommunityOutput values.
// You can construct a concrete instance of `RoutemapRuleSetCommunityInput` via:
//
//	RoutemapRuleSetCommunityArgs{...}
type RoutemapRuleSetCommunityInput interface {
	pulumi.Input

	ToRoutemapRuleSetCommunityOutput() RoutemapRuleSetCommunityOutput
	ToRoutemapRuleSetCommunityOutputWithContext(context.Context) RoutemapRuleSetCommunityOutput
}

type RoutemapRuleSetCommunityArgs struct {
	// Attribute: AA|AA:NN|internet|local-AS|no-advertise|no-export.
	Community pulumi.StringPtrInput `pulumi:"community"`
}

func (RoutemapRuleSetCommunityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutemapRuleSetCommunity)(nil)).Elem()
}

func (i RoutemapRuleSetCommunityArgs) ToRoutemapRuleSetCommunityOutput() RoutemapRuleSetCommunityOutput {
	return i.ToRoutemapRuleSetCommunityOutputWithContext(context.Background())
}

func (i RoutemapRuleSetCommunityArgs) ToRoutemapRuleSetCommunityOutputWithContext(ctx context.Context) RoutemapRuleSetCommunityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutemapRuleSetCommunityOutput)
}

// RoutemapRuleSetCommunityArrayInput is an input type that accepts RoutemapRuleSetCommunityArray and RoutemapRuleSetCommunityArrayOutput values.
// You can construct a concrete instance of `RoutemapRuleSetCommunityArrayInput` via:
//
//	RoutemapRuleSetCommunityArray{ RoutemapRuleSetCommunityArgs{...} }
type RoutemapRuleSetCommunityArrayInput interface {
	pulumi.Input

	ToRoutemapRuleSetCommunityArrayOutput() RoutemapRuleSetCommunityArrayOutput
	ToRoutemapRuleSetCommunityArrayOutputWithContext(context.Context) RoutemapRuleSetCommunityArrayOutput
}

type RoutemapRuleSetCommunityArray []RoutemapRuleSetCommunityInput

func (RoutemapRuleSetCommunityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutemapRuleSetCommunity)(nil)).Elem()
}

func (i RoutemapRuleSetCommunityArray) ToRoutemapRuleSetCommunityArrayOutput() RoutemapRuleSetCommunityArrayOutput {
	return i.ToRoutemapRuleSetCommunityArrayOutputWithContext(context.Background())
}

func (i RoutemapRuleSetCommunityArray) ToRoutemapRuleSetCommunityArrayOutputWithContext(ctx context.Context) RoutemapRuleSetCommunityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutemapRuleSetCommunityArrayOutput)
}

type RoutemapRuleSetCommunityOutput struct{ *pulumi.OutputState }

func (RoutemapRuleSetCommunityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutemapRuleSetCommunity)(nil)).Elem()
}

func (o RoutemapRuleSetCommunityOutput) ToRoutemapRuleSetCommunityOutput() RoutemapRuleSetCommunityOutput {
	return o
}

func (o RoutemapRuleSetCommunityOutput) ToRoutemapRuleSetCommunityOutputWithContext(ctx context.Context) RoutemapRuleSetCommunityOutput {
	return o
}

// Attribute: AA|AA:NN|internet|local-AS|no-advertise|no-export.
func (o RoutemapRuleSetCommunityOutput) Community() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRuleSetCommunity) *string { return v.Community }).(pulumi.StringPtrOutput)
}

type RoutemapRuleSetCommunityArrayOutput struct{ *pulumi.OutputState }

func (RoutemapRuleSetCommunityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutemapRuleSetCommunity)(nil)).Elem()
}

func (o RoutemapRuleSetCommunityArrayOutput) ToRoutemapRuleSetCommunityArrayOutput() RoutemapRuleSetCommunityArrayOutput {
	return o
}

func (o RoutemapRuleSetCommunityArrayOutput) ToRoutemapRuleSetCommunityArrayOutputWithContext(ctx context.Context) RoutemapRuleSetCommunityArrayOutput {
	return o
}

func (o RoutemapRuleSetCommunityArrayOutput) Index(i pulumi.IntInput) RoutemapRuleSetCommunityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutemapRuleSetCommunity {
		return vs[0].([]RoutemapRuleSetCommunity)[vs[1].(int)]
	}).(RoutemapRuleSetCommunityOutput)
}

type RoutemapRuleSetExtcommunityRt struct {
	// AA:NN.
	Community *string `pulumi:"community"`
}

// RoutemapRuleSetExtcommunityRtInput is an input type that accepts RoutemapRuleSetExtcommunityRtArgs and RoutemapRuleSetExtcommunityRtOutput values.
// You can construct a concrete instance of `RoutemapRuleSetExtcommunityRtInput` via:
//
//	RoutemapRuleSetExtcommunityRtArgs{...}
type RoutemapRuleSetExtcommunityRtInput interface {
	pulumi.Input

	ToRoutemapRuleSetExtcommunityRtOutput() RoutemapRuleSetExtcommunityRtOutput
	ToRoutemapRuleSetExtcommunityRtOutputWithContext(context.Context) RoutemapRuleSetExtcommunityRtOutput
}

type RoutemapRuleSetExtcommunityRtArgs struct {
	// AA:NN.
	Community pulumi.StringPtrInput `pulumi:"community"`
}

func (RoutemapRuleSetExtcommunityRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (i RoutemapRuleSetExtcommunityRtArgs) ToRoutemapRuleSetExtcommunityRtOutput() RoutemapRuleSetExtcommunityRtOutput {
	return i.ToRoutemapRuleSetExtcommunityRtOutputWithContext(context.Background())
}

func (i RoutemapRuleSetExtcommunityRtArgs) ToRoutemapRuleSetExtcommunityRtOutputWithContext(ctx context.Context) RoutemapRuleSetExtcommunityRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutemapRuleSetExtcommunityRtOutput)
}

// RoutemapRuleSetExtcommunityRtArrayInput is an input type that accepts RoutemapRuleSetExtcommunityRtArray and RoutemapRuleSetExtcommunityRtArrayOutput values.
// You can construct a concrete instance of `RoutemapRuleSetExtcommunityRtArrayInput` via:
//
//	RoutemapRuleSetExtcommunityRtArray{ RoutemapRuleSetExtcommunityRtArgs{...} }
type RoutemapRuleSetExtcommunityRtArrayInput interface {
	pulumi.Input

	ToRoutemapRuleSetExtcommunityRtArrayOutput() RoutemapRuleSetExtcommunityRtArrayOutput
	ToRoutemapRuleSetExtcommunityRtArrayOutputWithContext(context.Context) RoutemapRuleSetExtcommunityRtArrayOutput
}

type RoutemapRuleSetExtcommunityRtArray []RoutemapRuleSetExtcommunityRtInput

func (RoutemapRuleSetExtcommunityRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (i RoutemapRuleSetExtcommunityRtArray) ToRoutemapRuleSetExtcommunityRtArrayOutput() RoutemapRuleSetExtcommunityRtArrayOutput {
	return i.ToRoutemapRuleSetExtcommunityRtArrayOutputWithContext(context.Background())
}

func (i RoutemapRuleSetExtcommunityRtArray) ToRoutemapRuleSetExtcommunityRtArrayOutputWithContext(ctx context.Context) RoutemapRuleSetExtcommunityRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutemapRuleSetExtcommunityRtArrayOutput)
}

type RoutemapRuleSetExtcommunityRtOutput struct{ *pulumi.OutputState }

func (RoutemapRuleSetExtcommunityRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (o RoutemapRuleSetExtcommunityRtOutput) ToRoutemapRuleSetExtcommunityRtOutput() RoutemapRuleSetExtcommunityRtOutput {
	return o
}

func (o RoutemapRuleSetExtcommunityRtOutput) ToRoutemapRuleSetExtcommunityRtOutputWithContext(ctx context.Context) RoutemapRuleSetExtcommunityRtOutput {
	return o
}

// AA:NN.
func (o RoutemapRuleSetExtcommunityRtOutput) Community() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRuleSetExtcommunityRt) *string { return v.Community }).(pulumi.StringPtrOutput)
}

type RoutemapRuleSetExtcommunityRtArrayOutput struct{ *pulumi.OutputState }

func (RoutemapRuleSetExtcommunityRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (o RoutemapRuleSetExtcommunityRtArrayOutput) ToRoutemapRuleSetExtcommunityRtArrayOutput() RoutemapRuleSetExtcommunityRtArrayOutput {
	return o
}

func (o RoutemapRuleSetExtcommunityRtArrayOutput) ToRoutemapRuleSetExtcommunityRtArrayOutputWithContext(ctx context.Context) RoutemapRuleSetExtcommunityRtArrayOutput {
	return o
}

func (o RoutemapRuleSetExtcommunityRtArrayOutput) Index(i pulumi.IntInput) RoutemapRuleSetExtcommunityRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutemapRuleSetExtcommunityRt {
		return vs[0].([]RoutemapRuleSetExtcommunityRt)[vs[1].(int)]
	}).(RoutemapRuleSetExtcommunityRtOutput)
}

type RoutemapRuleSetExtcommunitySoo struct {
	// Community (format = AA:NN).
	Community *string `pulumi:"community"`
}

// RoutemapRuleSetExtcommunitySooInput is an input type that accepts RoutemapRuleSetExtcommunitySooArgs and RoutemapRuleSetExtcommunitySooOutput values.
// You can construct a concrete instance of `RoutemapRuleSetExtcommunitySooInput` via:
//
//	RoutemapRuleSetExtcommunitySooArgs{...}
type RoutemapRuleSetExtcommunitySooInput interface {
	pulumi.Input

	ToRoutemapRuleSetExtcommunitySooOutput() RoutemapRuleSetExtcommunitySooOutput
	ToRoutemapRuleSetExtcommunitySooOutputWithContext(context.Context) RoutemapRuleSetExtcommunitySooOutput
}

type RoutemapRuleSetExtcommunitySooArgs struct {
	// Community (format = AA:NN).
	Community pulumi.StringPtrInput `pulumi:"community"`
}

func (RoutemapRuleSetExtcommunitySooArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (i RoutemapRuleSetExtcommunitySooArgs) ToRoutemapRuleSetExtcommunitySooOutput() RoutemapRuleSetExtcommunitySooOutput {
	return i.ToRoutemapRuleSetExtcommunitySooOutputWithContext(context.Background())
}

func (i RoutemapRuleSetExtcommunitySooArgs) ToRoutemapRuleSetExtcommunitySooOutputWithContext(ctx context.Context) RoutemapRuleSetExtcommunitySooOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutemapRuleSetExtcommunitySooOutput)
}

// RoutemapRuleSetExtcommunitySooArrayInput is an input type that accepts RoutemapRuleSetExtcommunitySooArray and RoutemapRuleSetExtcommunitySooArrayOutput values.
// You can construct a concrete instance of `RoutemapRuleSetExtcommunitySooArrayInput` via:
//
//	RoutemapRuleSetExtcommunitySooArray{ RoutemapRuleSetExtcommunitySooArgs{...} }
type RoutemapRuleSetExtcommunitySooArrayInput interface {
	pulumi.Input

	ToRoutemapRuleSetExtcommunitySooArrayOutput() RoutemapRuleSetExtcommunitySooArrayOutput
	ToRoutemapRuleSetExtcommunitySooArrayOutputWithContext(context.Context) RoutemapRuleSetExtcommunitySooArrayOutput
}

type RoutemapRuleSetExtcommunitySooArray []RoutemapRuleSetExtcommunitySooInput

func (RoutemapRuleSetExtcommunitySooArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (i RoutemapRuleSetExtcommunitySooArray) ToRoutemapRuleSetExtcommunitySooArrayOutput() RoutemapRuleSetExtcommunitySooArrayOutput {
	return i.ToRoutemapRuleSetExtcommunitySooArrayOutputWithContext(context.Background())
}

func (i RoutemapRuleSetExtcommunitySooArray) ToRoutemapRuleSetExtcommunitySooArrayOutputWithContext(ctx context.Context) RoutemapRuleSetExtcommunitySooArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutemapRuleSetExtcommunitySooArrayOutput)
}

type RoutemapRuleSetExtcommunitySooOutput struct{ *pulumi.OutputState }

func (RoutemapRuleSetExtcommunitySooOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (o RoutemapRuleSetExtcommunitySooOutput) ToRoutemapRuleSetExtcommunitySooOutput() RoutemapRuleSetExtcommunitySooOutput {
	return o
}

func (o RoutemapRuleSetExtcommunitySooOutput) ToRoutemapRuleSetExtcommunitySooOutputWithContext(ctx context.Context) RoutemapRuleSetExtcommunitySooOutput {
	return o
}

// Community (format = AA:NN).
func (o RoutemapRuleSetExtcommunitySooOutput) Community() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutemapRuleSetExtcommunitySoo) *string { return v.Community }).(pulumi.StringPtrOutput)
}

type RoutemapRuleSetExtcommunitySooArrayOutput struct{ *pulumi.OutputState }

func (RoutemapRuleSetExtcommunitySooArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (o RoutemapRuleSetExtcommunitySooArrayOutput) ToRoutemapRuleSetExtcommunitySooArrayOutput() RoutemapRuleSetExtcommunitySooArrayOutput {
	return o
}

func (o RoutemapRuleSetExtcommunitySooArrayOutput) ToRoutemapRuleSetExtcommunitySooArrayOutputWithContext(ctx context.Context) RoutemapRuleSetExtcommunitySooArrayOutput {
	return o
}

func (o RoutemapRuleSetExtcommunitySooArrayOutput) Index(i pulumi.IntInput) RoutemapRuleSetExtcommunitySooOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutemapRuleSetExtcommunitySoo {
		return vs[0].([]RoutemapRuleSetExtcommunitySoo)[vs[1].(int)]
	}).(RoutemapRuleSetExtcommunitySooOutput)
}

type Static6SdwanZone struct {
	// SD-WAN zone name.
	Name *string `pulumi:"name"`
}

// Static6SdwanZoneInput is an input type that accepts Static6SdwanZoneArgs and Static6SdwanZoneOutput values.
// You can construct a concrete instance of `Static6SdwanZoneInput` via:
//
//	Static6SdwanZoneArgs{...}
type Static6SdwanZoneInput interface {
	pulumi.Input

	ToStatic6SdwanZoneOutput() Static6SdwanZoneOutput
	ToStatic6SdwanZoneOutputWithContext(context.Context) Static6SdwanZoneOutput
}

type Static6SdwanZoneArgs struct {
	// SD-WAN zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Static6SdwanZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Static6SdwanZone)(nil)).Elem()
}

func (i Static6SdwanZoneArgs) ToStatic6SdwanZoneOutput() Static6SdwanZoneOutput {
	return i.ToStatic6SdwanZoneOutputWithContext(context.Background())
}

func (i Static6SdwanZoneArgs) ToStatic6SdwanZoneOutputWithContext(ctx context.Context) Static6SdwanZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Static6SdwanZoneOutput)
}

// Static6SdwanZoneArrayInput is an input type that accepts Static6SdwanZoneArray and Static6SdwanZoneArrayOutput values.
// You can construct a concrete instance of `Static6SdwanZoneArrayInput` via:
//
//	Static6SdwanZoneArray{ Static6SdwanZoneArgs{...} }
type Static6SdwanZoneArrayInput interface {
	pulumi.Input

	ToStatic6SdwanZoneArrayOutput() Static6SdwanZoneArrayOutput
	ToStatic6SdwanZoneArrayOutputWithContext(context.Context) Static6SdwanZoneArrayOutput
}

type Static6SdwanZoneArray []Static6SdwanZoneInput

func (Static6SdwanZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Static6SdwanZone)(nil)).Elem()
}

func (i Static6SdwanZoneArray) ToStatic6SdwanZoneArrayOutput() Static6SdwanZoneArrayOutput {
	return i.ToStatic6SdwanZoneArrayOutputWithContext(context.Background())
}

func (i Static6SdwanZoneArray) ToStatic6SdwanZoneArrayOutputWithContext(ctx context.Context) Static6SdwanZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Static6SdwanZoneArrayOutput)
}

type Static6SdwanZoneOutput struct{ *pulumi.OutputState }

func (Static6SdwanZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Static6SdwanZone)(nil)).Elem()
}

func (o Static6SdwanZoneOutput) ToStatic6SdwanZoneOutput() Static6SdwanZoneOutput {
	return o
}

func (o Static6SdwanZoneOutput) ToStatic6SdwanZoneOutputWithContext(ctx context.Context) Static6SdwanZoneOutput {
	return o
}

// SD-WAN zone name.
func (o Static6SdwanZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Static6SdwanZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Static6SdwanZoneArrayOutput struct{ *pulumi.OutputState }

func (Static6SdwanZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Static6SdwanZone)(nil)).Elem()
}

func (o Static6SdwanZoneArrayOutput) ToStatic6SdwanZoneArrayOutput() Static6SdwanZoneArrayOutput {
	return o
}

func (o Static6SdwanZoneArrayOutput) ToStatic6SdwanZoneArrayOutputWithContext(ctx context.Context) Static6SdwanZoneArrayOutput {
	return o
}

func (o Static6SdwanZoneArrayOutput) Index(i pulumi.IntInput) Static6SdwanZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Static6SdwanZone {
		return vs[0].([]Static6SdwanZone)[vs[1].(int)]
	}).(Static6SdwanZoneOutput)
}

type StaticSdwanZone struct {
	// SD-WAN zone name.
	Name *string `pulumi:"name"`
}

// StaticSdwanZoneInput is an input type that accepts StaticSdwanZoneArgs and StaticSdwanZoneOutput values.
// You can construct a concrete instance of `StaticSdwanZoneInput` via:
//
//	StaticSdwanZoneArgs{...}
type StaticSdwanZoneInput interface {
	pulumi.Input

	ToStaticSdwanZoneOutput() StaticSdwanZoneOutput
	ToStaticSdwanZoneOutputWithContext(context.Context) StaticSdwanZoneOutput
}

type StaticSdwanZoneArgs struct {
	// SD-WAN zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StaticSdwanZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSdwanZone)(nil)).Elem()
}

func (i StaticSdwanZoneArgs) ToStaticSdwanZoneOutput() StaticSdwanZoneOutput {
	return i.ToStaticSdwanZoneOutputWithContext(context.Background())
}

func (i StaticSdwanZoneArgs) ToStaticSdwanZoneOutputWithContext(ctx context.Context) StaticSdwanZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSdwanZoneOutput)
}

// StaticSdwanZoneArrayInput is an input type that accepts StaticSdwanZoneArray and StaticSdwanZoneArrayOutput values.
// You can construct a concrete instance of `StaticSdwanZoneArrayInput` via:
//
//	StaticSdwanZoneArray{ StaticSdwanZoneArgs{...} }
type StaticSdwanZoneArrayInput interface {
	pulumi.Input

	ToStaticSdwanZoneArrayOutput() StaticSdwanZoneArrayOutput
	ToStaticSdwanZoneArrayOutputWithContext(context.Context) StaticSdwanZoneArrayOutput
}

type StaticSdwanZoneArray []StaticSdwanZoneInput

func (StaticSdwanZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticSdwanZone)(nil)).Elem()
}

func (i StaticSdwanZoneArray) ToStaticSdwanZoneArrayOutput() StaticSdwanZoneArrayOutput {
	return i.ToStaticSdwanZoneArrayOutputWithContext(context.Background())
}

func (i StaticSdwanZoneArray) ToStaticSdwanZoneArrayOutputWithContext(ctx context.Context) StaticSdwanZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSdwanZoneArrayOutput)
}

type StaticSdwanZoneOutput struct{ *pulumi.OutputState }

func (StaticSdwanZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSdwanZone)(nil)).Elem()
}

func (o StaticSdwanZoneOutput) ToStaticSdwanZoneOutput() StaticSdwanZoneOutput {
	return o
}

func (o StaticSdwanZoneOutput) ToStaticSdwanZoneOutputWithContext(ctx context.Context) StaticSdwanZoneOutput {
	return o
}

// SD-WAN zone name.
func (o StaticSdwanZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSdwanZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StaticSdwanZoneArrayOutput struct{ *pulumi.OutputState }

func (StaticSdwanZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticSdwanZone)(nil)).Elem()
}

func (o StaticSdwanZoneArrayOutput) ToStaticSdwanZoneArrayOutput() StaticSdwanZoneArrayOutput {
	return o
}

func (o StaticSdwanZoneArrayOutput) ToStaticSdwanZoneArrayOutputWithContext(ctx context.Context) StaticSdwanZoneArrayOutput {
	return o
}

func (o StaticSdwanZoneArrayOutput) Index(i pulumi.IntInput) StaticSdwanZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticSdwanZone {
		return vs[0].([]StaticSdwanZone)[vs[1].(int)]
	}).(StaticSdwanZoneOutput)
}

type GetAccesslist6Rule struct {
	// Permit or deny this IP address and netmask prefix.
	Action string `pulumi:"action"`
	// Enable/disable exact prefix match.
	ExactMatch string `pulumi:"exactMatch"`
	// Flags.
	Flags int `pulumi:"flags"`
	// Rule ID.
	Id int `pulumi:"id"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 string `pulumi:"prefix6"`
}

// GetAccesslist6RuleInput is an input type that accepts GetAccesslist6RuleArgs and GetAccesslist6RuleOutput values.
// You can construct a concrete instance of `GetAccesslist6RuleInput` via:
//
//	GetAccesslist6RuleArgs{...}
type GetAccesslist6RuleInput interface {
	pulumi.Input

	ToGetAccesslist6RuleOutput() GetAccesslist6RuleOutput
	ToGetAccesslist6RuleOutputWithContext(context.Context) GetAccesslist6RuleOutput
}

type GetAccesslist6RuleArgs struct {
	// Permit or deny this IP address and netmask prefix.
	Action pulumi.StringInput `pulumi:"action"`
	// Enable/disable exact prefix match.
	ExactMatch pulumi.StringInput `pulumi:"exactMatch"`
	// Flags.
	Flags pulumi.IntInput `pulumi:"flags"`
	// Rule ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetAccesslist6RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccesslist6Rule)(nil)).Elem()
}

func (i GetAccesslist6RuleArgs) ToGetAccesslist6RuleOutput() GetAccesslist6RuleOutput {
	return i.ToGetAccesslist6RuleOutputWithContext(context.Background())
}

func (i GetAccesslist6RuleArgs) ToGetAccesslist6RuleOutputWithContext(ctx context.Context) GetAccesslist6RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccesslist6RuleOutput)
}

// GetAccesslist6RuleArrayInput is an input type that accepts GetAccesslist6RuleArray and GetAccesslist6RuleArrayOutput values.
// You can construct a concrete instance of `GetAccesslist6RuleArrayInput` via:
//
//	GetAccesslist6RuleArray{ GetAccesslist6RuleArgs{...} }
type GetAccesslist6RuleArrayInput interface {
	pulumi.Input

	ToGetAccesslist6RuleArrayOutput() GetAccesslist6RuleArrayOutput
	ToGetAccesslist6RuleArrayOutputWithContext(context.Context) GetAccesslist6RuleArrayOutput
}

type GetAccesslist6RuleArray []GetAccesslist6RuleInput

func (GetAccesslist6RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccesslist6Rule)(nil)).Elem()
}

func (i GetAccesslist6RuleArray) ToGetAccesslist6RuleArrayOutput() GetAccesslist6RuleArrayOutput {
	return i.ToGetAccesslist6RuleArrayOutputWithContext(context.Background())
}

func (i GetAccesslist6RuleArray) ToGetAccesslist6RuleArrayOutputWithContext(ctx context.Context) GetAccesslist6RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccesslist6RuleArrayOutput)
}

type GetAccesslist6RuleOutput struct{ *pulumi.OutputState }

func (GetAccesslist6RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccesslist6Rule)(nil)).Elem()
}

func (o GetAccesslist6RuleOutput) ToGetAccesslist6RuleOutput() GetAccesslist6RuleOutput {
	return o
}

func (o GetAccesslist6RuleOutput) ToGetAccesslist6RuleOutputWithContext(ctx context.Context) GetAccesslist6RuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix.
func (o GetAccesslist6RuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccesslist6Rule) string { return v.Action }).(pulumi.StringOutput)
}

// Enable/disable exact prefix match.
func (o GetAccesslist6RuleOutput) ExactMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccesslist6Rule) string { return v.ExactMatch }).(pulumi.StringOutput)
}

// Flags.
func (o GetAccesslist6RuleOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccesslist6Rule) int { return v.Flags }).(pulumi.IntOutput)
}

// Rule ID.
func (o GetAccesslist6RuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccesslist6Rule) int { return v.Id }).(pulumi.IntOutput)
}

// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
func (o GetAccesslist6RuleOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccesslist6Rule) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetAccesslist6RuleArrayOutput struct{ *pulumi.OutputState }

func (GetAccesslist6RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccesslist6Rule)(nil)).Elem()
}

func (o GetAccesslist6RuleArrayOutput) ToGetAccesslist6RuleArrayOutput() GetAccesslist6RuleArrayOutput {
	return o
}

func (o GetAccesslist6RuleArrayOutput) ToGetAccesslist6RuleArrayOutputWithContext(ctx context.Context) GetAccesslist6RuleArrayOutput {
	return o
}

func (o GetAccesslist6RuleArrayOutput) Index(i pulumi.IntInput) GetAccesslist6RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccesslist6Rule {
		return vs[0].([]GetAccesslist6Rule)[vs[1].(int)]
	}).(GetAccesslist6RuleOutput)
}

type GetAccesslistRule struct {
	// Permit or deny this IP address and netmask prefix.
	Action string `pulumi:"action"`
	// Enable/disable exact match.
	ExactMatch string `pulumi:"exactMatch"`
	// Flags.
	Flags int `pulumi:"flags"`
	// Rule ID.
	Id int `pulumi:"id"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix string `pulumi:"prefix"`
	// Wildcard to define Cisco-style wildcard filter criteria.
	Wildcard string `pulumi:"wildcard"`
}

// GetAccesslistRuleInput is an input type that accepts GetAccesslistRuleArgs and GetAccesslistRuleOutput values.
// You can construct a concrete instance of `GetAccesslistRuleInput` via:
//
//	GetAccesslistRuleArgs{...}
type GetAccesslistRuleInput interface {
	pulumi.Input

	ToGetAccesslistRuleOutput() GetAccesslistRuleOutput
	ToGetAccesslistRuleOutputWithContext(context.Context) GetAccesslistRuleOutput
}

type GetAccesslistRuleArgs struct {
	// Permit or deny this IP address and netmask prefix.
	Action pulumi.StringInput `pulumi:"action"`
	// Enable/disable exact match.
	ExactMatch pulumi.StringInput `pulumi:"exactMatch"`
	// Flags.
	Flags pulumi.IntInput `pulumi:"flags"`
	// Rule ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Wildcard to define Cisco-style wildcard filter criteria.
	Wildcard pulumi.StringInput `pulumi:"wildcard"`
}

func (GetAccesslistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccesslistRule)(nil)).Elem()
}

func (i GetAccesslistRuleArgs) ToGetAccesslistRuleOutput() GetAccesslistRuleOutput {
	return i.ToGetAccesslistRuleOutputWithContext(context.Background())
}

func (i GetAccesslistRuleArgs) ToGetAccesslistRuleOutputWithContext(ctx context.Context) GetAccesslistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccesslistRuleOutput)
}

// GetAccesslistRuleArrayInput is an input type that accepts GetAccesslistRuleArray and GetAccesslistRuleArrayOutput values.
// You can construct a concrete instance of `GetAccesslistRuleArrayInput` via:
//
//	GetAccesslistRuleArray{ GetAccesslistRuleArgs{...} }
type GetAccesslistRuleArrayInput interface {
	pulumi.Input

	ToGetAccesslistRuleArrayOutput() GetAccesslistRuleArrayOutput
	ToGetAccesslistRuleArrayOutputWithContext(context.Context) GetAccesslistRuleArrayOutput
}

type GetAccesslistRuleArray []GetAccesslistRuleInput

func (GetAccesslistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccesslistRule)(nil)).Elem()
}

func (i GetAccesslistRuleArray) ToGetAccesslistRuleArrayOutput() GetAccesslistRuleArrayOutput {
	return i.ToGetAccesslistRuleArrayOutputWithContext(context.Background())
}

func (i GetAccesslistRuleArray) ToGetAccesslistRuleArrayOutputWithContext(ctx context.Context) GetAccesslistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccesslistRuleArrayOutput)
}

type GetAccesslistRuleOutput struct{ *pulumi.OutputState }

func (GetAccesslistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccesslistRule)(nil)).Elem()
}

func (o GetAccesslistRuleOutput) ToGetAccesslistRuleOutput() GetAccesslistRuleOutput {
	return o
}

func (o GetAccesslistRuleOutput) ToGetAccesslistRuleOutputWithContext(ctx context.Context) GetAccesslistRuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix.
func (o GetAccesslistRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccesslistRule) string { return v.Action }).(pulumi.StringOutput)
}

// Enable/disable exact match.
func (o GetAccesslistRuleOutput) ExactMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccesslistRule) string { return v.ExactMatch }).(pulumi.StringOutput)
}

// Flags.
func (o GetAccesslistRuleOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccesslistRule) int { return v.Flags }).(pulumi.IntOutput)
}

// Rule ID.
func (o GetAccesslistRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccesslistRule) int { return v.Id }).(pulumi.IntOutput)
}

// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
func (o GetAccesslistRuleOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccesslistRule) string { return v.Prefix }).(pulumi.StringOutput)
}

// Wildcard to define Cisco-style wildcard filter criteria.
func (o GetAccesslistRuleOutput) Wildcard() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccesslistRule) string { return v.Wildcard }).(pulumi.StringOutput)
}

type GetAccesslistRuleArrayOutput struct{ *pulumi.OutputState }

func (GetAccesslistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccesslistRule)(nil)).Elem()
}

func (o GetAccesslistRuleArrayOutput) ToGetAccesslistRuleArrayOutput() GetAccesslistRuleArrayOutput {
	return o
}

func (o GetAccesslistRuleArrayOutput) ToGetAccesslistRuleArrayOutputWithContext(ctx context.Context) GetAccesslistRuleArrayOutput {
	return o
}

func (o GetAccesslistRuleArrayOutput) Index(i pulumi.IntInput) GetAccesslistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccesslistRule {
		return vs[0].([]GetAccesslistRule)[vs[1].(int)]
	}).(GetAccesslistRuleOutput)
}

type GetAspathlistRule struct {
	// Permit or deny route-based operations, based on the route's AS_PATH attribute.
	Action string `pulumi:"action"`
	// ID.
	Id int `pulumi:"id"`
	// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
	Regexp string `pulumi:"regexp"`
}

// GetAspathlistRuleInput is an input type that accepts GetAspathlistRuleArgs and GetAspathlistRuleOutput values.
// You can construct a concrete instance of `GetAspathlistRuleInput` via:
//
//	GetAspathlistRuleArgs{...}
type GetAspathlistRuleInput interface {
	pulumi.Input

	ToGetAspathlistRuleOutput() GetAspathlistRuleOutput
	ToGetAspathlistRuleOutputWithContext(context.Context) GetAspathlistRuleOutput
}

type GetAspathlistRuleArgs struct {
	// Permit or deny route-based operations, based on the route's AS_PATH attribute.
	Action pulumi.StringInput `pulumi:"action"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
	Regexp pulumi.StringInput `pulumi:"regexp"`
}

func (GetAspathlistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAspathlistRule)(nil)).Elem()
}

func (i GetAspathlistRuleArgs) ToGetAspathlistRuleOutput() GetAspathlistRuleOutput {
	return i.ToGetAspathlistRuleOutputWithContext(context.Background())
}

func (i GetAspathlistRuleArgs) ToGetAspathlistRuleOutputWithContext(ctx context.Context) GetAspathlistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAspathlistRuleOutput)
}

// GetAspathlistRuleArrayInput is an input type that accepts GetAspathlistRuleArray and GetAspathlistRuleArrayOutput values.
// You can construct a concrete instance of `GetAspathlistRuleArrayInput` via:
//
//	GetAspathlistRuleArray{ GetAspathlistRuleArgs{...} }
type GetAspathlistRuleArrayInput interface {
	pulumi.Input

	ToGetAspathlistRuleArrayOutput() GetAspathlistRuleArrayOutput
	ToGetAspathlistRuleArrayOutputWithContext(context.Context) GetAspathlistRuleArrayOutput
}

type GetAspathlistRuleArray []GetAspathlistRuleInput

func (GetAspathlistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAspathlistRule)(nil)).Elem()
}

func (i GetAspathlistRuleArray) ToGetAspathlistRuleArrayOutput() GetAspathlistRuleArrayOutput {
	return i.ToGetAspathlistRuleArrayOutputWithContext(context.Background())
}

func (i GetAspathlistRuleArray) ToGetAspathlistRuleArrayOutputWithContext(ctx context.Context) GetAspathlistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAspathlistRuleArrayOutput)
}

type GetAspathlistRuleOutput struct{ *pulumi.OutputState }

func (GetAspathlistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAspathlistRule)(nil)).Elem()
}

func (o GetAspathlistRuleOutput) ToGetAspathlistRuleOutput() GetAspathlistRuleOutput {
	return o
}

func (o GetAspathlistRuleOutput) ToGetAspathlistRuleOutputWithContext(ctx context.Context) GetAspathlistRuleOutput {
	return o
}

// Permit or deny route-based operations, based on the route's AS_PATH attribute.
func (o GetAspathlistRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAspathlistRule) string { return v.Action }).(pulumi.StringOutput)
}

// ID.
func (o GetAspathlistRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAspathlistRule) int { return v.Id }).(pulumi.IntOutput)
}

// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
func (o GetAspathlistRuleOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAspathlistRule) string { return v.Regexp }).(pulumi.StringOutput)
}

type GetAspathlistRuleArrayOutput struct{ *pulumi.OutputState }

func (GetAspathlistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAspathlistRule)(nil)).Elem()
}

func (o GetAspathlistRuleArrayOutput) ToGetAspathlistRuleArrayOutput() GetAspathlistRuleArrayOutput {
	return o
}

func (o GetAspathlistRuleArrayOutput) ToGetAspathlistRuleArrayOutputWithContext(ctx context.Context) GetAspathlistRuleArrayOutput {
	return o
}

func (o GetAspathlistRuleArrayOutput) Index(i pulumi.IntInput) GetAspathlistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAspathlistRule {
		return vs[0].([]GetAspathlistRule)[vs[1].(int)]
	}).(GetAspathlistRuleOutput)
}

type GetBfd6MultihopTemplate struct {
	// Authentication mode.
	AuthMode string `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx int `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult int `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx int `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst string `pulumi:"dst"`
	// ID.
	Id int `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key string `pulumi:"md5Key"`
	// Source prefix.
	Src string `pulumi:"src"`
}

// GetBfd6MultihopTemplateInput is an input type that accepts GetBfd6MultihopTemplateArgs and GetBfd6MultihopTemplateOutput values.
// You can construct a concrete instance of `GetBfd6MultihopTemplateInput` via:
//
//	GetBfd6MultihopTemplateArgs{...}
type GetBfd6MultihopTemplateInput interface {
	pulumi.Input

	ToGetBfd6MultihopTemplateOutput() GetBfd6MultihopTemplateOutput
	ToGetBfd6MultihopTemplateOutputWithContext(context.Context) GetBfd6MultihopTemplateOutput
}

type GetBfd6MultihopTemplateArgs struct {
	// Authentication mode.
	AuthMode pulumi.StringInput `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx pulumi.IntInput `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult pulumi.IntInput `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx pulumi.IntInput `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst pulumi.StringInput `pulumi:"dst"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key pulumi.StringInput `pulumi:"md5Key"`
	// Source prefix.
	Src pulumi.StringInput `pulumi:"src"`
}

func (GetBfd6MultihopTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBfd6MultihopTemplate)(nil)).Elem()
}

func (i GetBfd6MultihopTemplateArgs) ToGetBfd6MultihopTemplateOutput() GetBfd6MultihopTemplateOutput {
	return i.ToGetBfd6MultihopTemplateOutputWithContext(context.Background())
}

func (i GetBfd6MultihopTemplateArgs) ToGetBfd6MultihopTemplateOutputWithContext(ctx context.Context) GetBfd6MultihopTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBfd6MultihopTemplateOutput)
}

// GetBfd6MultihopTemplateArrayInput is an input type that accepts GetBfd6MultihopTemplateArray and GetBfd6MultihopTemplateArrayOutput values.
// You can construct a concrete instance of `GetBfd6MultihopTemplateArrayInput` via:
//
//	GetBfd6MultihopTemplateArray{ GetBfd6MultihopTemplateArgs{...} }
type GetBfd6MultihopTemplateArrayInput interface {
	pulumi.Input

	ToGetBfd6MultihopTemplateArrayOutput() GetBfd6MultihopTemplateArrayOutput
	ToGetBfd6MultihopTemplateArrayOutputWithContext(context.Context) GetBfd6MultihopTemplateArrayOutput
}

type GetBfd6MultihopTemplateArray []GetBfd6MultihopTemplateInput

func (GetBfd6MultihopTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBfd6MultihopTemplate)(nil)).Elem()
}

func (i GetBfd6MultihopTemplateArray) ToGetBfd6MultihopTemplateArrayOutput() GetBfd6MultihopTemplateArrayOutput {
	return i.ToGetBfd6MultihopTemplateArrayOutputWithContext(context.Background())
}

func (i GetBfd6MultihopTemplateArray) ToGetBfd6MultihopTemplateArrayOutputWithContext(ctx context.Context) GetBfd6MultihopTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBfd6MultihopTemplateArrayOutput)
}

type GetBfd6MultihopTemplateOutput struct{ *pulumi.OutputState }

func (GetBfd6MultihopTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBfd6MultihopTemplate)(nil)).Elem()
}

func (o GetBfd6MultihopTemplateOutput) ToGetBfd6MultihopTemplateOutput() GetBfd6MultihopTemplateOutput {
	return o
}

func (o GetBfd6MultihopTemplateOutput) ToGetBfd6MultihopTemplateOutputWithContext(ctx context.Context) GetBfd6MultihopTemplateOutput {
	return o
}

// Authentication mode.
func (o GetBfd6MultihopTemplateOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfd6MultihopTemplate) string { return v.AuthMode }).(pulumi.StringOutput)
}

// BFD desired minimal transmit interval (milliseconds).
func (o GetBfd6MultihopTemplateOutput) BfdDesiredMinTx() pulumi.IntOutput {
	return o.ApplyT(func(v GetBfd6MultihopTemplate) int { return v.BfdDesiredMinTx }).(pulumi.IntOutput)
}

// BFD detection multiplier.
func (o GetBfd6MultihopTemplateOutput) BfdDetectMult() pulumi.IntOutput {
	return o.ApplyT(func(v GetBfd6MultihopTemplate) int { return v.BfdDetectMult }).(pulumi.IntOutput)
}

// BFD required minimal receive interval (milliseconds).
func (o GetBfd6MultihopTemplateOutput) BfdRequiredMinRx() pulumi.IntOutput {
	return o.ApplyT(func(v GetBfd6MultihopTemplate) int { return v.BfdRequiredMinRx }).(pulumi.IntOutput)
}

// Destination prefix.
func (o GetBfd6MultihopTemplateOutput) Dst() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfd6MultihopTemplate) string { return v.Dst }).(pulumi.StringOutput)
}

// ID.
func (o GetBfd6MultihopTemplateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetBfd6MultihopTemplate) int { return v.Id }).(pulumi.IntOutput)
}

// MD5 key of key ID 1.
func (o GetBfd6MultihopTemplateOutput) Md5Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfd6MultihopTemplate) string { return v.Md5Key }).(pulumi.StringOutput)
}

// Source prefix.
func (o GetBfd6MultihopTemplateOutput) Src() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfd6MultihopTemplate) string { return v.Src }).(pulumi.StringOutput)
}

type GetBfd6MultihopTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetBfd6MultihopTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBfd6MultihopTemplate)(nil)).Elem()
}

func (o GetBfd6MultihopTemplateArrayOutput) ToGetBfd6MultihopTemplateArrayOutput() GetBfd6MultihopTemplateArrayOutput {
	return o
}

func (o GetBfd6MultihopTemplateArrayOutput) ToGetBfd6MultihopTemplateArrayOutputWithContext(ctx context.Context) GetBfd6MultihopTemplateArrayOutput {
	return o
}

func (o GetBfd6MultihopTemplateArrayOutput) Index(i pulumi.IntInput) GetBfd6MultihopTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBfd6MultihopTemplate {
		return vs[0].([]GetBfd6MultihopTemplate)[vs[1].(int)]
	}).(GetBfd6MultihopTemplateOutput)
}

type GetBfd6Neighbor struct {
	// Interface to the BFD neighbor.
	Interface string `pulumi:"interface"`
	// IPv6 address of the BFD neighbor.
	Ip6Address string `pulumi:"ip6Address"`
}

// GetBfd6NeighborInput is an input type that accepts GetBfd6NeighborArgs and GetBfd6NeighborOutput values.
// You can construct a concrete instance of `GetBfd6NeighborInput` via:
//
//	GetBfd6NeighborArgs{...}
type GetBfd6NeighborInput interface {
	pulumi.Input

	ToGetBfd6NeighborOutput() GetBfd6NeighborOutput
	ToGetBfd6NeighborOutputWithContext(context.Context) GetBfd6NeighborOutput
}

type GetBfd6NeighborArgs struct {
	// Interface to the BFD neighbor.
	Interface pulumi.StringInput `pulumi:"interface"`
	// IPv6 address of the BFD neighbor.
	Ip6Address pulumi.StringInput `pulumi:"ip6Address"`
}

func (GetBfd6NeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBfd6Neighbor)(nil)).Elem()
}

func (i GetBfd6NeighborArgs) ToGetBfd6NeighborOutput() GetBfd6NeighborOutput {
	return i.ToGetBfd6NeighborOutputWithContext(context.Background())
}

func (i GetBfd6NeighborArgs) ToGetBfd6NeighborOutputWithContext(ctx context.Context) GetBfd6NeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBfd6NeighborOutput)
}

// GetBfd6NeighborArrayInput is an input type that accepts GetBfd6NeighborArray and GetBfd6NeighborArrayOutput values.
// You can construct a concrete instance of `GetBfd6NeighborArrayInput` via:
//
//	GetBfd6NeighborArray{ GetBfd6NeighborArgs{...} }
type GetBfd6NeighborArrayInput interface {
	pulumi.Input

	ToGetBfd6NeighborArrayOutput() GetBfd6NeighborArrayOutput
	ToGetBfd6NeighborArrayOutputWithContext(context.Context) GetBfd6NeighborArrayOutput
}

type GetBfd6NeighborArray []GetBfd6NeighborInput

func (GetBfd6NeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBfd6Neighbor)(nil)).Elem()
}

func (i GetBfd6NeighborArray) ToGetBfd6NeighborArrayOutput() GetBfd6NeighborArrayOutput {
	return i.ToGetBfd6NeighborArrayOutputWithContext(context.Background())
}

func (i GetBfd6NeighborArray) ToGetBfd6NeighborArrayOutputWithContext(ctx context.Context) GetBfd6NeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBfd6NeighborArrayOutput)
}

type GetBfd6NeighborOutput struct{ *pulumi.OutputState }

func (GetBfd6NeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBfd6Neighbor)(nil)).Elem()
}

func (o GetBfd6NeighborOutput) ToGetBfd6NeighborOutput() GetBfd6NeighborOutput {
	return o
}

func (o GetBfd6NeighborOutput) ToGetBfd6NeighborOutputWithContext(ctx context.Context) GetBfd6NeighborOutput {
	return o
}

// Interface to the BFD neighbor.
func (o GetBfd6NeighborOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfd6Neighbor) string { return v.Interface }).(pulumi.StringOutput)
}

// IPv6 address of the BFD neighbor.
func (o GetBfd6NeighborOutput) Ip6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfd6Neighbor) string { return v.Ip6Address }).(pulumi.StringOutput)
}

type GetBfd6NeighborArrayOutput struct{ *pulumi.OutputState }

func (GetBfd6NeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBfd6Neighbor)(nil)).Elem()
}

func (o GetBfd6NeighborArrayOutput) ToGetBfd6NeighborArrayOutput() GetBfd6NeighborArrayOutput {
	return o
}

func (o GetBfd6NeighborArrayOutput) ToGetBfd6NeighborArrayOutputWithContext(ctx context.Context) GetBfd6NeighborArrayOutput {
	return o
}

func (o GetBfd6NeighborArrayOutput) Index(i pulumi.IntInput) GetBfd6NeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBfd6Neighbor {
		return vs[0].([]GetBfd6Neighbor)[vs[1].(int)]
	}).(GetBfd6NeighborOutput)
}

type GetBfdMultihopTemplate struct {
	// Authentication mode.
	AuthMode string `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx int `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult int `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx int `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst string `pulumi:"dst"`
	// ID.
	Id int `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key string `pulumi:"md5Key"`
	// Source prefix.
	Src string `pulumi:"src"`
}

// GetBfdMultihopTemplateInput is an input type that accepts GetBfdMultihopTemplateArgs and GetBfdMultihopTemplateOutput values.
// You can construct a concrete instance of `GetBfdMultihopTemplateInput` via:
//
//	GetBfdMultihopTemplateArgs{...}
type GetBfdMultihopTemplateInput interface {
	pulumi.Input

	ToGetBfdMultihopTemplateOutput() GetBfdMultihopTemplateOutput
	ToGetBfdMultihopTemplateOutputWithContext(context.Context) GetBfdMultihopTemplateOutput
}

type GetBfdMultihopTemplateArgs struct {
	// Authentication mode.
	AuthMode pulumi.StringInput `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx pulumi.IntInput `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult pulumi.IntInput `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx pulumi.IntInput `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst pulumi.StringInput `pulumi:"dst"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key pulumi.StringInput `pulumi:"md5Key"`
	// Source prefix.
	Src pulumi.StringInput `pulumi:"src"`
}

func (GetBfdMultihopTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBfdMultihopTemplate)(nil)).Elem()
}

func (i GetBfdMultihopTemplateArgs) ToGetBfdMultihopTemplateOutput() GetBfdMultihopTemplateOutput {
	return i.ToGetBfdMultihopTemplateOutputWithContext(context.Background())
}

func (i GetBfdMultihopTemplateArgs) ToGetBfdMultihopTemplateOutputWithContext(ctx context.Context) GetBfdMultihopTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBfdMultihopTemplateOutput)
}

// GetBfdMultihopTemplateArrayInput is an input type that accepts GetBfdMultihopTemplateArray and GetBfdMultihopTemplateArrayOutput values.
// You can construct a concrete instance of `GetBfdMultihopTemplateArrayInput` via:
//
//	GetBfdMultihopTemplateArray{ GetBfdMultihopTemplateArgs{...} }
type GetBfdMultihopTemplateArrayInput interface {
	pulumi.Input

	ToGetBfdMultihopTemplateArrayOutput() GetBfdMultihopTemplateArrayOutput
	ToGetBfdMultihopTemplateArrayOutputWithContext(context.Context) GetBfdMultihopTemplateArrayOutput
}

type GetBfdMultihopTemplateArray []GetBfdMultihopTemplateInput

func (GetBfdMultihopTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBfdMultihopTemplate)(nil)).Elem()
}

func (i GetBfdMultihopTemplateArray) ToGetBfdMultihopTemplateArrayOutput() GetBfdMultihopTemplateArrayOutput {
	return i.ToGetBfdMultihopTemplateArrayOutputWithContext(context.Background())
}

func (i GetBfdMultihopTemplateArray) ToGetBfdMultihopTemplateArrayOutputWithContext(ctx context.Context) GetBfdMultihopTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBfdMultihopTemplateArrayOutput)
}

type GetBfdMultihopTemplateOutput struct{ *pulumi.OutputState }

func (GetBfdMultihopTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBfdMultihopTemplate)(nil)).Elem()
}

func (o GetBfdMultihopTemplateOutput) ToGetBfdMultihopTemplateOutput() GetBfdMultihopTemplateOutput {
	return o
}

func (o GetBfdMultihopTemplateOutput) ToGetBfdMultihopTemplateOutputWithContext(ctx context.Context) GetBfdMultihopTemplateOutput {
	return o
}

// Authentication mode.
func (o GetBfdMultihopTemplateOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfdMultihopTemplate) string { return v.AuthMode }).(pulumi.StringOutput)
}

// BFD desired minimal transmit interval (milliseconds).
func (o GetBfdMultihopTemplateOutput) BfdDesiredMinTx() pulumi.IntOutput {
	return o.ApplyT(func(v GetBfdMultihopTemplate) int { return v.BfdDesiredMinTx }).(pulumi.IntOutput)
}

// BFD detection multiplier.
func (o GetBfdMultihopTemplateOutput) BfdDetectMult() pulumi.IntOutput {
	return o.ApplyT(func(v GetBfdMultihopTemplate) int { return v.BfdDetectMult }).(pulumi.IntOutput)
}

// BFD required minimal receive interval (milliseconds).
func (o GetBfdMultihopTemplateOutput) BfdRequiredMinRx() pulumi.IntOutput {
	return o.ApplyT(func(v GetBfdMultihopTemplate) int { return v.BfdRequiredMinRx }).(pulumi.IntOutput)
}

// Destination prefix.
func (o GetBfdMultihopTemplateOutput) Dst() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfdMultihopTemplate) string { return v.Dst }).(pulumi.StringOutput)
}

// ID.
func (o GetBfdMultihopTemplateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetBfdMultihopTemplate) int { return v.Id }).(pulumi.IntOutput)
}

// MD5 key of key ID 1.
func (o GetBfdMultihopTemplateOutput) Md5Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfdMultihopTemplate) string { return v.Md5Key }).(pulumi.StringOutput)
}

// Source prefix.
func (o GetBfdMultihopTemplateOutput) Src() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfdMultihopTemplate) string { return v.Src }).(pulumi.StringOutput)
}

type GetBfdMultihopTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetBfdMultihopTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBfdMultihopTemplate)(nil)).Elem()
}

func (o GetBfdMultihopTemplateArrayOutput) ToGetBfdMultihopTemplateArrayOutput() GetBfdMultihopTemplateArrayOutput {
	return o
}

func (o GetBfdMultihopTemplateArrayOutput) ToGetBfdMultihopTemplateArrayOutputWithContext(ctx context.Context) GetBfdMultihopTemplateArrayOutput {
	return o
}

func (o GetBfdMultihopTemplateArrayOutput) Index(i pulumi.IntInput) GetBfdMultihopTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBfdMultihopTemplate {
		return vs[0].([]GetBfdMultihopTemplate)[vs[1].(int)]
	}).(GetBfdMultihopTemplateOutput)
}

type GetBfdNeighbor struct {
	// Interface name.
	Interface string `pulumi:"interface"`
	// IPv4 address of the BFD neighbor.
	Ip string `pulumi:"ip"`
}

// GetBfdNeighborInput is an input type that accepts GetBfdNeighborArgs and GetBfdNeighborOutput values.
// You can construct a concrete instance of `GetBfdNeighborInput` via:
//
//	GetBfdNeighborArgs{...}
type GetBfdNeighborInput interface {
	pulumi.Input

	ToGetBfdNeighborOutput() GetBfdNeighborOutput
	ToGetBfdNeighborOutputWithContext(context.Context) GetBfdNeighborOutput
}

type GetBfdNeighborArgs struct {
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// IPv4 address of the BFD neighbor.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetBfdNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBfdNeighbor)(nil)).Elem()
}

func (i GetBfdNeighborArgs) ToGetBfdNeighborOutput() GetBfdNeighborOutput {
	return i.ToGetBfdNeighborOutputWithContext(context.Background())
}

func (i GetBfdNeighborArgs) ToGetBfdNeighborOutputWithContext(ctx context.Context) GetBfdNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBfdNeighborOutput)
}

// GetBfdNeighborArrayInput is an input type that accepts GetBfdNeighborArray and GetBfdNeighborArrayOutput values.
// You can construct a concrete instance of `GetBfdNeighborArrayInput` via:
//
//	GetBfdNeighborArray{ GetBfdNeighborArgs{...} }
type GetBfdNeighborArrayInput interface {
	pulumi.Input

	ToGetBfdNeighborArrayOutput() GetBfdNeighborArrayOutput
	ToGetBfdNeighborArrayOutputWithContext(context.Context) GetBfdNeighborArrayOutput
}

type GetBfdNeighborArray []GetBfdNeighborInput

func (GetBfdNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBfdNeighbor)(nil)).Elem()
}

func (i GetBfdNeighborArray) ToGetBfdNeighborArrayOutput() GetBfdNeighborArrayOutput {
	return i.ToGetBfdNeighborArrayOutputWithContext(context.Background())
}

func (i GetBfdNeighborArray) ToGetBfdNeighborArrayOutputWithContext(ctx context.Context) GetBfdNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBfdNeighborArrayOutput)
}

type GetBfdNeighborOutput struct{ *pulumi.OutputState }

func (GetBfdNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBfdNeighbor)(nil)).Elem()
}

func (o GetBfdNeighborOutput) ToGetBfdNeighborOutput() GetBfdNeighborOutput {
	return o
}

func (o GetBfdNeighborOutput) ToGetBfdNeighborOutputWithContext(ctx context.Context) GetBfdNeighborOutput {
	return o
}

// Interface name.
func (o GetBfdNeighborOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfdNeighbor) string { return v.Interface }).(pulumi.StringOutput)
}

// IPv4 address of the BFD neighbor.
func (o GetBfdNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetBfdNeighbor) string { return v.Ip }).(pulumi.StringOutput)
}

type GetBfdNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetBfdNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBfdNeighbor)(nil)).Elem()
}

func (o GetBfdNeighborArrayOutput) ToGetBfdNeighborArrayOutput() GetBfdNeighborArrayOutput {
	return o
}

func (o GetBfdNeighborArrayOutput) ToGetBfdNeighborArrayOutputWithContext(ctx context.Context) GetBfdNeighborArrayOutput {
	return o
}

func (o GetBfdNeighborArrayOutput) Index(i pulumi.IntInput) GetBfdNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBfdNeighbor {
		return vs[0].([]GetBfdNeighbor)[vs[1].(int)]
	}).(GetBfdNeighborOutput)
}

type GetBgpAdminDistance struct {
	// Administrative distance to apply (1 - 255).
	Distance int `pulumi:"distance"`
	// ID.
	Id int `pulumi:"id"`
	// Neighbor address prefix.
	NeighbourPrefix string `pulumi:"neighbourPrefix"`
	// Access list of routes to apply new distance to.
	RouteList string `pulumi:"routeList"`
}

// GetBgpAdminDistanceInput is an input type that accepts GetBgpAdminDistanceArgs and GetBgpAdminDistanceOutput values.
// You can construct a concrete instance of `GetBgpAdminDistanceInput` via:
//
//	GetBgpAdminDistanceArgs{...}
type GetBgpAdminDistanceInput interface {
	pulumi.Input

	ToGetBgpAdminDistanceOutput() GetBgpAdminDistanceOutput
	ToGetBgpAdminDistanceOutputWithContext(context.Context) GetBgpAdminDistanceOutput
}

type GetBgpAdminDistanceArgs struct {
	// Administrative distance to apply (1 - 255).
	Distance pulumi.IntInput `pulumi:"distance"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Neighbor address prefix.
	NeighbourPrefix pulumi.StringInput `pulumi:"neighbourPrefix"`
	// Access list of routes to apply new distance to.
	RouteList pulumi.StringInput `pulumi:"routeList"`
}

func (GetBgpAdminDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpAdminDistance)(nil)).Elem()
}

func (i GetBgpAdminDistanceArgs) ToGetBgpAdminDistanceOutput() GetBgpAdminDistanceOutput {
	return i.ToGetBgpAdminDistanceOutputWithContext(context.Background())
}

func (i GetBgpAdminDistanceArgs) ToGetBgpAdminDistanceOutputWithContext(ctx context.Context) GetBgpAdminDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpAdminDistanceOutput)
}

// GetBgpAdminDistanceArrayInput is an input type that accepts GetBgpAdminDistanceArray and GetBgpAdminDistanceArrayOutput values.
// You can construct a concrete instance of `GetBgpAdminDistanceArrayInput` via:
//
//	GetBgpAdminDistanceArray{ GetBgpAdminDistanceArgs{...} }
type GetBgpAdminDistanceArrayInput interface {
	pulumi.Input

	ToGetBgpAdminDistanceArrayOutput() GetBgpAdminDistanceArrayOutput
	ToGetBgpAdminDistanceArrayOutputWithContext(context.Context) GetBgpAdminDistanceArrayOutput
}

type GetBgpAdminDistanceArray []GetBgpAdminDistanceInput

func (GetBgpAdminDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpAdminDistance)(nil)).Elem()
}

func (i GetBgpAdminDistanceArray) ToGetBgpAdminDistanceArrayOutput() GetBgpAdminDistanceArrayOutput {
	return i.ToGetBgpAdminDistanceArrayOutputWithContext(context.Background())
}

func (i GetBgpAdminDistanceArray) ToGetBgpAdminDistanceArrayOutputWithContext(ctx context.Context) GetBgpAdminDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpAdminDistanceArrayOutput)
}

type GetBgpAdminDistanceOutput struct{ *pulumi.OutputState }

func (GetBgpAdminDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpAdminDistance)(nil)).Elem()
}

func (o GetBgpAdminDistanceOutput) ToGetBgpAdminDistanceOutput() GetBgpAdminDistanceOutput {
	return o
}

func (o GetBgpAdminDistanceOutput) ToGetBgpAdminDistanceOutputWithContext(ctx context.Context) GetBgpAdminDistanceOutput {
	return o
}

// Administrative distance to apply (1 - 255).
func (o GetBgpAdminDistanceOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpAdminDistance) int { return v.Distance }).(pulumi.IntOutput)
}

// ID.
func (o GetBgpAdminDistanceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpAdminDistance) int { return v.Id }).(pulumi.IntOutput)
}

// Neighbor address prefix.
func (o GetBgpAdminDistanceOutput) NeighbourPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpAdminDistance) string { return v.NeighbourPrefix }).(pulumi.StringOutput)
}

// Access list of routes to apply new distance to.
func (o GetBgpAdminDistanceOutput) RouteList() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpAdminDistance) string { return v.RouteList }).(pulumi.StringOutput)
}

type GetBgpAdminDistanceArrayOutput struct{ *pulumi.OutputState }

func (GetBgpAdminDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpAdminDistance)(nil)).Elem()
}

func (o GetBgpAdminDistanceArrayOutput) ToGetBgpAdminDistanceArrayOutput() GetBgpAdminDistanceArrayOutput {
	return o
}

func (o GetBgpAdminDistanceArrayOutput) ToGetBgpAdminDistanceArrayOutputWithContext(ctx context.Context) GetBgpAdminDistanceArrayOutput {
	return o
}

func (o GetBgpAdminDistanceArrayOutput) Index(i pulumi.IntInput) GetBgpAdminDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpAdminDistance {
		return vs[0].([]GetBgpAdminDistance)[vs[1].(int)]
	}).(GetBgpAdminDistanceOutput)
}

type GetBgpAggregateAddress6 struct {
	// Enable/disable generate AS set path information.
	AsSet string `pulumi:"asSet"`
	// ID.
	Id int `pulumi:"id"`
	// Network IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
	// Enable/disable filter more specific routes from updates.
	SummaryOnly string `pulumi:"summaryOnly"`
}

// GetBgpAggregateAddress6Input is an input type that accepts GetBgpAggregateAddress6Args and GetBgpAggregateAddress6Output values.
// You can construct a concrete instance of `GetBgpAggregateAddress6Input` via:
//
//	GetBgpAggregateAddress6Args{...}
type GetBgpAggregateAddress6Input interface {
	pulumi.Input

	ToGetBgpAggregateAddress6Output() GetBgpAggregateAddress6Output
	ToGetBgpAggregateAddress6OutputWithContext(context.Context) GetBgpAggregateAddress6Output
}

type GetBgpAggregateAddress6Args struct {
	// Enable/disable generate AS set path information.
	AsSet pulumi.StringInput `pulumi:"asSet"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Network IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
	// Enable/disable filter more specific routes from updates.
	SummaryOnly pulumi.StringInput `pulumi:"summaryOnly"`
}

func (GetBgpAggregateAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpAggregateAddress6)(nil)).Elem()
}

func (i GetBgpAggregateAddress6Args) ToGetBgpAggregateAddress6Output() GetBgpAggregateAddress6Output {
	return i.ToGetBgpAggregateAddress6OutputWithContext(context.Background())
}

func (i GetBgpAggregateAddress6Args) ToGetBgpAggregateAddress6OutputWithContext(ctx context.Context) GetBgpAggregateAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpAggregateAddress6Output)
}

// GetBgpAggregateAddress6ArrayInput is an input type that accepts GetBgpAggregateAddress6Array and GetBgpAggregateAddress6ArrayOutput values.
// You can construct a concrete instance of `GetBgpAggregateAddress6ArrayInput` via:
//
//	GetBgpAggregateAddress6Array{ GetBgpAggregateAddress6Args{...} }
type GetBgpAggregateAddress6ArrayInput interface {
	pulumi.Input

	ToGetBgpAggregateAddress6ArrayOutput() GetBgpAggregateAddress6ArrayOutput
	ToGetBgpAggregateAddress6ArrayOutputWithContext(context.Context) GetBgpAggregateAddress6ArrayOutput
}

type GetBgpAggregateAddress6Array []GetBgpAggregateAddress6Input

func (GetBgpAggregateAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpAggregateAddress6)(nil)).Elem()
}

func (i GetBgpAggregateAddress6Array) ToGetBgpAggregateAddress6ArrayOutput() GetBgpAggregateAddress6ArrayOutput {
	return i.ToGetBgpAggregateAddress6ArrayOutputWithContext(context.Background())
}

func (i GetBgpAggregateAddress6Array) ToGetBgpAggregateAddress6ArrayOutputWithContext(ctx context.Context) GetBgpAggregateAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpAggregateAddress6ArrayOutput)
}

type GetBgpAggregateAddress6Output struct{ *pulumi.OutputState }

func (GetBgpAggregateAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpAggregateAddress6)(nil)).Elem()
}

func (o GetBgpAggregateAddress6Output) ToGetBgpAggregateAddress6Output() GetBgpAggregateAddress6Output {
	return o
}

func (o GetBgpAggregateAddress6Output) ToGetBgpAggregateAddress6OutputWithContext(ctx context.Context) GetBgpAggregateAddress6Output {
	return o
}

// Enable/disable generate AS set path information.
func (o GetBgpAggregateAddress6Output) AsSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpAggregateAddress6) string { return v.AsSet }).(pulumi.StringOutput)
}

// ID.
func (o GetBgpAggregateAddress6Output) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpAggregateAddress6) int { return v.Id }).(pulumi.IntOutput)
}

// Network IPv6 prefix.
func (o GetBgpAggregateAddress6Output) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpAggregateAddress6) string { return v.Prefix6 }).(pulumi.StringOutput)
}

// Enable/disable filter more specific routes from updates.
func (o GetBgpAggregateAddress6Output) SummaryOnly() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpAggregateAddress6) string { return v.SummaryOnly }).(pulumi.StringOutput)
}

type GetBgpAggregateAddress6ArrayOutput struct{ *pulumi.OutputState }

func (GetBgpAggregateAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpAggregateAddress6)(nil)).Elem()
}

func (o GetBgpAggregateAddress6ArrayOutput) ToGetBgpAggregateAddress6ArrayOutput() GetBgpAggregateAddress6ArrayOutput {
	return o
}

func (o GetBgpAggregateAddress6ArrayOutput) ToGetBgpAggregateAddress6ArrayOutputWithContext(ctx context.Context) GetBgpAggregateAddress6ArrayOutput {
	return o
}

func (o GetBgpAggregateAddress6ArrayOutput) Index(i pulumi.IntInput) GetBgpAggregateAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpAggregateAddress6 {
		return vs[0].([]GetBgpAggregateAddress6)[vs[1].(int)]
	}).(GetBgpAggregateAddress6Output)
}

type GetBgpAggregateAddress struct {
	// Enable/disable generate AS set path information.
	AsSet string `pulumi:"asSet"`
	// ID.
	Id int `pulumi:"id"`
	// Network prefix.
	Prefix string `pulumi:"prefix"`
	// Enable/disable filter more specific routes from updates.
	SummaryOnly string `pulumi:"summaryOnly"`
}

// GetBgpAggregateAddressInput is an input type that accepts GetBgpAggregateAddressArgs and GetBgpAggregateAddressOutput values.
// You can construct a concrete instance of `GetBgpAggregateAddressInput` via:
//
//	GetBgpAggregateAddressArgs{...}
type GetBgpAggregateAddressInput interface {
	pulumi.Input

	ToGetBgpAggregateAddressOutput() GetBgpAggregateAddressOutput
	ToGetBgpAggregateAddressOutputWithContext(context.Context) GetBgpAggregateAddressOutput
}

type GetBgpAggregateAddressArgs struct {
	// Enable/disable generate AS set path information.
	AsSet pulumi.StringInput `pulumi:"asSet"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Network prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Enable/disable filter more specific routes from updates.
	SummaryOnly pulumi.StringInput `pulumi:"summaryOnly"`
}

func (GetBgpAggregateAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpAggregateAddress)(nil)).Elem()
}

func (i GetBgpAggregateAddressArgs) ToGetBgpAggregateAddressOutput() GetBgpAggregateAddressOutput {
	return i.ToGetBgpAggregateAddressOutputWithContext(context.Background())
}

func (i GetBgpAggregateAddressArgs) ToGetBgpAggregateAddressOutputWithContext(ctx context.Context) GetBgpAggregateAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpAggregateAddressOutput)
}

// GetBgpAggregateAddressArrayInput is an input type that accepts GetBgpAggregateAddressArray and GetBgpAggregateAddressArrayOutput values.
// You can construct a concrete instance of `GetBgpAggregateAddressArrayInput` via:
//
//	GetBgpAggregateAddressArray{ GetBgpAggregateAddressArgs{...} }
type GetBgpAggregateAddressArrayInput interface {
	pulumi.Input

	ToGetBgpAggregateAddressArrayOutput() GetBgpAggregateAddressArrayOutput
	ToGetBgpAggregateAddressArrayOutputWithContext(context.Context) GetBgpAggregateAddressArrayOutput
}

type GetBgpAggregateAddressArray []GetBgpAggregateAddressInput

func (GetBgpAggregateAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpAggregateAddress)(nil)).Elem()
}

func (i GetBgpAggregateAddressArray) ToGetBgpAggregateAddressArrayOutput() GetBgpAggregateAddressArrayOutput {
	return i.ToGetBgpAggregateAddressArrayOutputWithContext(context.Background())
}

func (i GetBgpAggregateAddressArray) ToGetBgpAggregateAddressArrayOutputWithContext(ctx context.Context) GetBgpAggregateAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpAggregateAddressArrayOutput)
}

type GetBgpAggregateAddressOutput struct{ *pulumi.OutputState }

func (GetBgpAggregateAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpAggregateAddress)(nil)).Elem()
}

func (o GetBgpAggregateAddressOutput) ToGetBgpAggregateAddressOutput() GetBgpAggregateAddressOutput {
	return o
}

func (o GetBgpAggregateAddressOutput) ToGetBgpAggregateAddressOutputWithContext(ctx context.Context) GetBgpAggregateAddressOutput {
	return o
}

// Enable/disable generate AS set path information.
func (o GetBgpAggregateAddressOutput) AsSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpAggregateAddress) string { return v.AsSet }).(pulumi.StringOutput)
}

// ID.
func (o GetBgpAggregateAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpAggregateAddress) int { return v.Id }).(pulumi.IntOutput)
}

// Network prefix.
func (o GetBgpAggregateAddressOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpAggregateAddress) string { return v.Prefix }).(pulumi.StringOutput)
}

// Enable/disable filter more specific routes from updates.
func (o GetBgpAggregateAddressOutput) SummaryOnly() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpAggregateAddress) string { return v.SummaryOnly }).(pulumi.StringOutput)
}

type GetBgpAggregateAddressArrayOutput struct{ *pulumi.OutputState }

func (GetBgpAggregateAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpAggregateAddress)(nil)).Elem()
}

func (o GetBgpAggregateAddressArrayOutput) ToGetBgpAggregateAddressArrayOutput() GetBgpAggregateAddressArrayOutput {
	return o
}

func (o GetBgpAggregateAddressArrayOutput) ToGetBgpAggregateAddressArrayOutputWithContext(ctx context.Context) GetBgpAggregateAddressArrayOutput {
	return o
}

func (o GetBgpAggregateAddressArrayOutput) Index(i pulumi.IntInput) GetBgpAggregateAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpAggregateAddress {
		return vs[0].([]GetBgpAggregateAddress)[vs[1].(int)]
	}).(GetBgpAggregateAddressOutput)
}

type GetBgpConfederationPeer struct {
	// Peer ID.
	Peer string `pulumi:"peer"`
}

// GetBgpConfederationPeerInput is an input type that accepts GetBgpConfederationPeerArgs and GetBgpConfederationPeerOutput values.
// You can construct a concrete instance of `GetBgpConfederationPeerInput` via:
//
//	GetBgpConfederationPeerArgs{...}
type GetBgpConfederationPeerInput interface {
	pulumi.Input

	ToGetBgpConfederationPeerOutput() GetBgpConfederationPeerOutput
	ToGetBgpConfederationPeerOutputWithContext(context.Context) GetBgpConfederationPeerOutput
}

type GetBgpConfederationPeerArgs struct {
	// Peer ID.
	Peer pulumi.StringInput `pulumi:"peer"`
}

func (GetBgpConfederationPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpConfederationPeer)(nil)).Elem()
}

func (i GetBgpConfederationPeerArgs) ToGetBgpConfederationPeerOutput() GetBgpConfederationPeerOutput {
	return i.ToGetBgpConfederationPeerOutputWithContext(context.Background())
}

func (i GetBgpConfederationPeerArgs) ToGetBgpConfederationPeerOutputWithContext(ctx context.Context) GetBgpConfederationPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpConfederationPeerOutput)
}

// GetBgpConfederationPeerArrayInput is an input type that accepts GetBgpConfederationPeerArray and GetBgpConfederationPeerArrayOutput values.
// You can construct a concrete instance of `GetBgpConfederationPeerArrayInput` via:
//
//	GetBgpConfederationPeerArray{ GetBgpConfederationPeerArgs{...} }
type GetBgpConfederationPeerArrayInput interface {
	pulumi.Input

	ToGetBgpConfederationPeerArrayOutput() GetBgpConfederationPeerArrayOutput
	ToGetBgpConfederationPeerArrayOutputWithContext(context.Context) GetBgpConfederationPeerArrayOutput
}

type GetBgpConfederationPeerArray []GetBgpConfederationPeerInput

func (GetBgpConfederationPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpConfederationPeer)(nil)).Elem()
}

func (i GetBgpConfederationPeerArray) ToGetBgpConfederationPeerArrayOutput() GetBgpConfederationPeerArrayOutput {
	return i.ToGetBgpConfederationPeerArrayOutputWithContext(context.Background())
}

func (i GetBgpConfederationPeerArray) ToGetBgpConfederationPeerArrayOutputWithContext(ctx context.Context) GetBgpConfederationPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpConfederationPeerArrayOutput)
}

type GetBgpConfederationPeerOutput struct{ *pulumi.OutputState }

func (GetBgpConfederationPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpConfederationPeer)(nil)).Elem()
}

func (o GetBgpConfederationPeerOutput) ToGetBgpConfederationPeerOutput() GetBgpConfederationPeerOutput {
	return o
}

func (o GetBgpConfederationPeerOutput) ToGetBgpConfederationPeerOutputWithContext(ctx context.Context) GetBgpConfederationPeerOutput {
	return o
}

// Peer ID.
func (o GetBgpConfederationPeerOutput) Peer() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpConfederationPeer) string { return v.Peer }).(pulumi.StringOutput)
}

type GetBgpConfederationPeerArrayOutput struct{ *pulumi.OutputState }

func (GetBgpConfederationPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpConfederationPeer)(nil)).Elem()
}

func (o GetBgpConfederationPeerArrayOutput) ToGetBgpConfederationPeerArrayOutput() GetBgpConfederationPeerArrayOutput {
	return o
}

func (o GetBgpConfederationPeerArrayOutput) ToGetBgpConfederationPeerArrayOutputWithContext(ctx context.Context) GetBgpConfederationPeerArrayOutput {
	return o
}

func (o GetBgpConfederationPeerArrayOutput) Index(i pulumi.IntInput) GetBgpConfederationPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpConfederationPeer {
		return vs[0].([]GetBgpConfederationPeer)[vs[1].(int)]
	}).(GetBgpConfederationPeerOutput)
}

type GetBgpNeighbor struct {
	// Enable/disable address family IPv4 for this neighbor.
	Activate string `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor.
	Activate6 string `pulumi:"activate6"`
	// Enable/disable address family L2VPN EVPN for this neighbor.
	ActivateEvpn string `pulumi:"activateEvpn"`
	// Enable/disable address family VPNv4 for this neighbor.
	ActivateVpnv4 string `pulumi:"activateVpnv4"`
	// Enable/disable address family VPNv6 for this neighbor.
	ActivateVpnv6 string `pulumi:"activateVpnv6"`
	// Enable/disable IPv4 additional-path capability.
	AdditionalPath string `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability.
	AdditionalPath6 string `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability.
	AdditionalPathVpnv4 string `pulumi:"additionalPathVpnv4"`
	// Enable/disable VPNv6 additional-path capability.
	AdditionalPathVpnv6 string `pulumi:"additionalPathVpnv6"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath int `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 int `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 int `pulumi:"advAdditionalPathVpnv4"`
	// Number of VPNv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv6 int `pulumi:"advAdditionalPathVpnv6"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval int `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn int `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 int `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path.
	AllowasInEnable string `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path.
	AllowasInEnable6 string `pulumi:"allowasInEnable6"`
	// Enable/disable to allow my AS in AS path for L2VPN EVPN route.
	AllowasInEnableEvpn string `pulumi:"allowasInEnableEvpn"`
	// Enable/disable to allow my AS in AS path for VPNv4 route.
	AllowasInEnableVpnv4 string `pulumi:"allowasInEnableVpnv4"`
	// Enable/disable use of my AS in AS path for VPNv6 route.
	AllowasInEnableVpnv6 string `pulumi:"allowasInEnableVpnv6"`
	// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
	AllowasInEvpn int `pulumi:"allowasInEvpn"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 int `pulumi:"allowasInVpnv4"`
	// The maximum number of occurrence of my AS number allowed for VPNv6 route.
	AllowasInVpnv6 int `pulumi:"allowasInVpnv6"`
	// Enable/disable replace peer AS with own AS for IPv4.
	AsOverride string `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6.
	AsOverride6 string `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged.
	AttributeUnchanged string `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged.
	AttributeUnchanged6 string `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route.
	AttributeUnchangedVpnv4 string `pulumi:"attributeUnchangedVpnv4"`
	// List of attributes that should not be changed for VPNv6 route.
	AttributeUnchangedVpnv6 string `pulumi:"attributeUnchangedVpnv6"`
	// Key-chain name for TCP authentication options.
	AuthOptions string `pulumi:"authOptions"`
	// Enable/disable BFD for this neighbor.
	Bfd string `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor.
	CapabilityDefaultOriginate string `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor.
	CapabilityDefaultOriginate6 string `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor.
	CapabilityDynamic string `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestart string `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestart6 string `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor.
	CapabilityGracefulRestartEvpn string `pulumi:"capabilityGracefulRestartEvpn"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv4 string `pulumi:"capabilityGracefulRestartVpnv4"`
	// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv6 string `pulumi:"capabilityGracefulRestartVpnv6"`
	// Accept/Send IPv4 ORF lists to/from this neighbor.
	CapabilityOrf string `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor.
	CapabilityOrf6 string `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor.
	CapabilityRouteRefresh string `pulumi:"capabilityRouteRefresh"`
	// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
	ConditionalAdvertise6s []GetBgpNeighborConditionalAdvertise6 `pulumi:"conditionalAdvertise6s"`
	// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
	ConditionalAdvertises []GetBgpNeighborConditionalAdvertise `pulumi:"conditionalAdvertises"`
	// Interval (sec) for connect timer.
	ConnectTimer int `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap string `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 string `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description string `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn string `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 string `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 string `pulumi:"distributeListInVpnv4"`
	// Filter for VPNv6 updates from this neighbor.
	DistributeListInVpnv6 string `pulumi:"distributeListInVpnv6"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut string `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 string `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 string `pulumi:"distributeListOutVpnv4"`
	// Filter for VPNv6 updates to this neighbor.
	DistributeListOutVpnv6 string `pulumi:"distributeListOutVpnv6"`
	// Don't negotiate capabilities with this neighbor
	DontCapabilityNegotiate string `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors.
	EbgpEnforceMultihop string `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl int `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn string `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 string `pulumi:"filterListIn6"`
	// BGP filter for VPNv4 inbound routes.
	FilterListInVpnv4 string `pulumi:"filterListInVpnv4"`
	// BGP filter for VPNv6 inbound routes.
	FilterListInVpnv6 string `pulumi:"filterListInVpnv6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut string `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 string `pulumi:"filterListOut6"`
	// BGP filter for VPNv4 outbound routes.
	FilterListOutVpnv4 string `pulumi:"filterListOutVpnv4"`
	// BGP filter for VPNv6 outbound routes.
	FilterListOutVpnv6 string `pulumi:"filterListOutVpnv6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer int `pulumi:"holdtimeTimer"`
	// Interface which is used to leak routes to target VRF.
	Interface string `pulumi:"interface"`
	// IP/IPv6 address of neighbor.
	Ip string `pulumi:"ip"`
	// Keep alive timer interval (sec).
	KeepAliveTimer int `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down.
	LinkDownFailover string `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs int `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates.
	LocalAsNoPrepend string `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates.
	LocalAsReplaceAs string `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix int `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 int `pulumi:"maximumPrefix6"`
	// Maximum number of L2VPN EVPN prefixes to accept from this peer.
	MaximumPrefixEvpn int `pulumi:"maximumPrefixEvpn"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold int `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 int `pulumi:"maximumPrefixThreshold6"`
	// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdEvpn int `pulumi:"maximumPrefixThresholdEvpn"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 int `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum VPNv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv6 int `pulumi:"maximumPrefixThresholdVpnv6"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 int `pulumi:"maximumPrefixVpnv4"`
	// Maximum number of VPNv6 prefixes to accept from this peer.
	MaximumPrefixVpnv6 int `pulumi:"maximumPrefixVpnv6"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly string `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly6 string `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes.
	MaximumPrefixWarningOnlyEvpn string `pulumi:"maximumPrefixWarningOnlyEvpn"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
	MaximumPrefixWarningOnlyVpnv4 string `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable warning message when limit is exceeded for VPNv6 routes.
	MaximumPrefixWarningOnlyVpnv6 string `pulumi:"maximumPrefixWarningOnlyVpnv6"`
	// Enable/disable IPv4 next-hop calculation for this neighbor.
	NextHopSelf string `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor.
	NextHopSelf6 string `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
	NextHopSelfRr string `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
	NextHopSelfRr6 string `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
	NextHopSelfVpnv4 string `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor.
	NextHopSelfVpnv6 string `pulumi:"nextHopSelfVpnv6"`
	// Enable/disable override result of capability negotiation.
	OverrideCapability string `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor.
	Passive string `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password string `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn string `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 string `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 string `pulumi:"prefixListInVpnv4"`
	// Inbound filter for VPNv6 updates from this neighbor.
	PrefixListInVpnv6 string `pulumi:"prefixListInVpnv6"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut string `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 string `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 string `pulumi:"prefixListOutVpnv4"`
	// Outbound filter for VPNv6 updates to this neighbor.
	PrefixListOutVpnv6 string `pulumi:"prefixListOutVpnv6"`
	// AS number of neighbor.
	RemoteAs int `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates.
	RemovePrivateAs string `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates.
	RemovePrivateAs6 string `pulumi:"removePrivateAs6"`
	// Enable/disable removing private AS number from L2VPN EVPN outbound updates.
	RemovePrivateAsEvpn string `pulumi:"removePrivateAsEvpn"`
	// Enable/disable remove private AS number from VPNv4 outbound updates.
	RemovePrivateAsVpnv4 string `pulumi:"removePrivateAsVpnv4"`
	// Enable/disable to remove private AS number from VPNv6 outbound updates.
	RemovePrivateAsVpnv6 string `pulumi:"removePrivateAsVpnv6"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime int `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime int `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn string `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 string `pulumi:"routeMapIn6"`
	// L2VPN EVPN inbound route map filter.
	RouteMapInEvpn string `pulumi:"routeMapInEvpn"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 string `pulumi:"routeMapInVpnv4"`
	// VPNv6 inbound route map filter.
	RouteMapInVpnv6 string `pulumi:"routeMapInVpnv6"`
	// IPv4 Outbound route map filter.
	RouteMapOut string `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 string `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable string `pulumi:"routeMapOut6Preferable"`
	// L2VPN EVPN outbound route map filter.
	RouteMapOutEvpn string `pulumi:"routeMapOutEvpn"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable string `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 string `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable string `pulumi:"routeMapOutVpnv4Preferable"`
	// VPNv6 outbound route map filter.
	RouteMapOutVpnv6 string `pulumi:"routeMapOutVpnv6"`
	// VPNv6 outbound route map filter if this neighbor is preferred.
	RouteMapOutVpnv6Preferable string `pulumi:"routeMapOutVpnv6Preferable"`
	// Enable/disable IPv4 AS route reflector client.
	RouteReflectorClient string `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client.
	RouteReflectorClient6 string `pulumi:"routeReflectorClient6"`
	// Enable/disable L2VPN EVPN AS route reflector client for this neighbor.
	RouteReflectorClientEvpn string `pulumi:"routeReflectorClientEvpn"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv4 string `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable VPNv6 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv6 string `pulumi:"routeReflectorClientVpnv6"`
	// Enable/disable IPv4 AS route server client.
	RouteServerClient string `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client.
	RouteServerClient6 string `pulumi:"routeServerClient6"`
	// Enable/disable L2VPN EVPN AS route server client for this neighbor.
	RouteServerClientEvpn string `pulumi:"routeServerClientEvpn"`
	// Enable/disable VPNv4 AS route server client for this neighbor.
	RouteServerClientVpnv4 string `pulumi:"routeServerClientVpnv4"`
	// Enable/disable VPNv6 AS route server client for this neighbor.
	RouteServerClientVpnv6 string `pulumi:"routeServerClientVpnv6"`
	// IPv4 Send community attribute to neighbor.
	SendCommunity string `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor.
	SendCommunity6 string `pulumi:"sendCommunity6"`
	// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family.
	SendCommunityEvpn string `pulumi:"sendCommunityEvpn"`
	// Send community attribute to neighbor for VPNv4 address family.
	SendCommunityVpnv4 string `pulumi:"sendCommunityVpnv4"`
	// Enable/disable sending community attribute to this neighbor for VPNv6 address family.
	SendCommunityVpnv6 string `pulumi:"sendCommunityVpnv6"`
	// Enable/disable shutdown this neighbor.
	Shutdown string `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration.
	SoftReconfiguration string `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration.
	SoftReconfiguration6 string `pulumi:"softReconfiguration6"`
	// Enable/disable L2VPN EVPN inbound soft reconfiguration.
	SoftReconfigurationEvpn string `pulumi:"softReconfigurationEvpn"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration.
	SoftReconfigurationVpnv4 string `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable VPNv6 inbound soft reconfiguration.
	SoftReconfigurationVpnv6 string `pulumi:"softReconfigurationVpnv6"`
	// Enable/disable stale route after neighbor down.
	StaleRoute string `pulumi:"staleRoute"`
	// Enable/disable strict capability matching.
	StrictCapabilityMatch string `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap string `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 string `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource string `pulumi:"updateSource"`
	// Neighbor weight.
	Weight int `pulumi:"weight"`
}

// GetBgpNeighborInput is an input type that accepts GetBgpNeighborArgs and GetBgpNeighborOutput values.
// You can construct a concrete instance of `GetBgpNeighborInput` via:
//
//	GetBgpNeighborArgs{...}
type GetBgpNeighborInput interface {
	pulumi.Input

	ToGetBgpNeighborOutput() GetBgpNeighborOutput
	ToGetBgpNeighborOutputWithContext(context.Context) GetBgpNeighborOutput
}

type GetBgpNeighborArgs struct {
	// Enable/disable address family IPv4 for this neighbor.
	Activate pulumi.StringInput `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor.
	Activate6 pulumi.StringInput `pulumi:"activate6"`
	// Enable/disable address family L2VPN EVPN for this neighbor.
	ActivateEvpn pulumi.StringInput `pulumi:"activateEvpn"`
	// Enable/disable address family VPNv4 for this neighbor.
	ActivateVpnv4 pulumi.StringInput `pulumi:"activateVpnv4"`
	// Enable/disable address family VPNv6 for this neighbor.
	ActivateVpnv6 pulumi.StringInput `pulumi:"activateVpnv6"`
	// Enable/disable IPv4 additional-path capability.
	AdditionalPath pulumi.StringInput `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability.
	AdditionalPath6 pulumi.StringInput `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability.
	AdditionalPathVpnv4 pulumi.StringInput `pulumi:"additionalPathVpnv4"`
	// Enable/disable VPNv6 additional-path capability.
	AdditionalPathVpnv6 pulumi.StringInput `pulumi:"additionalPathVpnv6"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath pulumi.IntInput `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 pulumi.IntInput `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 pulumi.IntInput `pulumi:"advAdditionalPathVpnv4"`
	// Number of VPNv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv6 pulumi.IntInput `pulumi:"advAdditionalPathVpnv6"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval pulumi.IntInput `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn pulumi.IntInput `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 pulumi.IntInput `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path.
	AllowasInEnable pulumi.StringInput `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path.
	AllowasInEnable6 pulumi.StringInput `pulumi:"allowasInEnable6"`
	// Enable/disable to allow my AS in AS path for L2VPN EVPN route.
	AllowasInEnableEvpn pulumi.StringInput `pulumi:"allowasInEnableEvpn"`
	// Enable/disable to allow my AS in AS path for VPNv4 route.
	AllowasInEnableVpnv4 pulumi.StringInput `pulumi:"allowasInEnableVpnv4"`
	// Enable/disable use of my AS in AS path for VPNv6 route.
	AllowasInEnableVpnv6 pulumi.StringInput `pulumi:"allowasInEnableVpnv6"`
	// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
	AllowasInEvpn pulumi.IntInput `pulumi:"allowasInEvpn"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 pulumi.IntInput `pulumi:"allowasInVpnv4"`
	// The maximum number of occurrence of my AS number allowed for VPNv6 route.
	AllowasInVpnv6 pulumi.IntInput `pulumi:"allowasInVpnv6"`
	// Enable/disable replace peer AS with own AS for IPv4.
	AsOverride pulumi.StringInput `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6.
	AsOverride6 pulumi.StringInput `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged.
	AttributeUnchanged pulumi.StringInput `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged.
	AttributeUnchanged6 pulumi.StringInput `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route.
	AttributeUnchangedVpnv4 pulumi.StringInput `pulumi:"attributeUnchangedVpnv4"`
	// List of attributes that should not be changed for VPNv6 route.
	AttributeUnchangedVpnv6 pulumi.StringInput `pulumi:"attributeUnchangedVpnv6"`
	// Key-chain name for TCP authentication options.
	AuthOptions pulumi.StringInput `pulumi:"authOptions"`
	// Enable/disable BFD for this neighbor.
	Bfd pulumi.StringInput `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor.
	CapabilityDefaultOriginate pulumi.StringInput `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor.
	CapabilityDefaultOriginate6 pulumi.StringInput `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor.
	CapabilityDynamic pulumi.StringInput `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestart pulumi.StringInput `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestart6 pulumi.StringInput `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor.
	CapabilityGracefulRestartEvpn pulumi.StringInput `pulumi:"capabilityGracefulRestartEvpn"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv4 pulumi.StringInput `pulumi:"capabilityGracefulRestartVpnv4"`
	// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv6 pulumi.StringInput `pulumi:"capabilityGracefulRestartVpnv6"`
	// Accept/Send IPv4 ORF lists to/from this neighbor.
	CapabilityOrf pulumi.StringInput `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor.
	CapabilityOrf6 pulumi.StringInput `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor.
	CapabilityRouteRefresh pulumi.StringInput `pulumi:"capabilityRouteRefresh"`
	// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
	ConditionalAdvertise6s GetBgpNeighborConditionalAdvertise6ArrayInput `pulumi:"conditionalAdvertise6s"`
	// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
	ConditionalAdvertises GetBgpNeighborConditionalAdvertiseArrayInput `pulumi:"conditionalAdvertises"`
	// Interval (sec) for connect timer.
	ConnectTimer pulumi.IntInput `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap pulumi.StringInput `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 pulumi.StringInput `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn pulumi.StringInput `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 pulumi.StringInput `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 pulumi.StringInput `pulumi:"distributeListInVpnv4"`
	// Filter for VPNv6 updates from this neighbor.
	DistributeListInVpnv6 pulumi.StringInput `pulumi:"distributeListInVpnv6"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut pulumi.StringInput `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 pulumi.StringInput `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 pulumi.StringInput `pulumi:"distributeListOutVpnv4"`
	// Filter for VPNv6 updates to this neighbor.
	DistributeListOutVpnv6 pulumi.StringInput `pulumi:"distributeListOutVpnv6"`
	// Don't negotiate capabilities with this neighbor
	DontCapabilityNegotiate pulumi.StringInput `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors.
	EbgpEnforceMultihop pulumi.StringInput `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl pulumi.IntInput `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn pulumi.StringInput `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 pulumi.StringInput `pulumi:"filterListIn6"`
	// BGP filter for VPNv4 inbound routes.
	FilterListInVpnv4 pulumi.StringInput `pulumi:"filterListInVpnv4"`
	// BGP filter for VPNv6 inbound routes.
	FilterListInVpnv6 pulumi.StringInput `pulumi:"filterListInVpnv6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut pulumi.StringInput `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 pulumi.StringInput `pulumi:"filterListOut6"`
	// BGP filter for VPNv4 outbound routes.
	FilterListOutVpnv4 pulumi.StringInput `pulumi:"filterListOutVpnv4"`
	// BGP filter for VPNv6 outbound routes.
	FilterListOutVpnv6 pulumi.StringInput `pulumi:"filterListOutVpnv6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer pulumi.IntInput `pulumi:"holdtimeTimer"`
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringInput `pulumi:"interface"`
	// IP/IPv6 address of neighbor.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Keep alive timer interval (sec).
	KeepAliveTimer pulumi.IntInput `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down.
	LinkDownFailover pulumi.StringInput `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs pulumi.IntInput `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates.
	LocalAsNoPrepend pulumi.StringInput `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates.
	LocalAsReplaceAs pulumi.StringInput `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix pulumi.IntInput `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 pulumi.IntInput `pulumi:"maximumPrefix6"`
	// Maximum number of L2VPN EVPN prefixes to accept from this peer.
	MaximumPrefixEvpn pulumi.IntInput `pulumi:"maximumPrefixEvpn"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold pulumi.IntInput `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 pulumi.IntInput `pulumi:"maximumPrefixThreshold6"`
	// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdEvpn pulumi.IntInput `pulumi:"maximumPrefixThresholdEvpn"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 pulumi.IntInput `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum VPNv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv6 pulumi.IntInput `pulumi:"maximumPrefixThresholdVpnv6"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 pulumi.IntInput `pulumi:"maximumPrefixVpnv4"`
	// Maximum number of VPNv6 prefixes to accept from this peer.
	MaximumPrefixVpnv6 pulumi.IntInput `pulumi:"maximumPrefixVpnv6"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly pulumi.StringInput `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly6 pulumi.StringInput `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes.
	MaximumPrefixWarningOnlyEvpn pulumi.StringInput `pulumi:"maximumPrefixWarningOnlyEvpn"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
	MaximumPrefixWarningOnlyVpnv4 pulumi.StringInput `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable warning message when limit is exceeded for VPNv6 routes.
	MaximumPrefixWarningOnlyVpnv6 pulumi.StringInput `pulumi:"maximumPrefixWarningOnlyVpnv6"`
	// Enable/disable IPv4 next-hop calculation for this neighbor.
	NextHopSelf pulumi.StringInput `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor.
	NextHopSelf6 pulumi.StringInput `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
	NextHopSelfRr pulumi.StringInput `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
	NextHopSelfRr6 pulumi.StringInput `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
	NextHopSelfVpnv4 pulumi.StringInput `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor.
	NextHopSelfVpnv6 pulumi.StringInput `pulumi:"nextHopSelfVpnv6"`
	// Enable/disable override result of capability negotiation.
	OverrideCapability pulumi.StringInput `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor.
	Passive pulumi.StringInput `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password pulumi.StringInput `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn pulumi.StringInput `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 pulumi.StringInput `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 pulumi.StringInput `pulumi:"prefixListInVpnv4"`
	// Inbound filter for VPNv6 updates from this neighbor.
	PrefixListInVpnv6 pulumi.StringInput `pulumi:"prefixListInVpnv6"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut pulumi.StringInput `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 pulumi.StringInput `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 pulumi.StringInput `pulumi:"prefixListOutVpnv4"`
	// Outbound filter for VPNv6 updates to this neighbor.
	PrefixListOutVpnv6 pulumi.StringInput `pulumi:"prefixListOutVpnv6"`
	// AS number of neighbor.
	RemoteAs pulumi.IntInput `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates.
	RemovePrivateAs pulumi.StringInput `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates.
	RemovePrivateAs6 pulumi.StringInput `pulumi:"removePrivateAs6"`
	// Enable/disable removing private AS number from L2VPN EVPN outbound updates.
	RemovePrivateAsEvpn pulumi.StringInput `pulumi:"removePrivateAsEvpn"`
	// Enable/disable remove private AS number from VPNv4 outbound updates.
	RemovePrivateAsVpnv4 pulumi.StringInput `pulumi:"removePrivateAsVpnv4"`
	// Enable/disable to remove private AS number from VPNv6 outbound updates.
	RemovePrivateAsVpnv6 pulumi.StringInput `pulumi:"removePrivateAsVpnv6"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime pulumi.IntInput `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime pulumi.IntInput `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn pulumi.StringInput `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 pulumi.StringInput `pulumi:"routeMapIn6"`
	// L2VPN EVPN inbound route map filter.
	RouteMapInEvpn pulumi.StringInput `pulumi:"routeMapInEvpn"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 pulumi.StringInput `pulumi:"routeMapInVpnv4"`
	// VPNv6 inbound route map filter.
	RouteMapInVpnv6 pulumi.StringInput `pulumi:"routeMapInVpnv6"`
	// IPv4 Outbound route map filter.
	RouteMapOut pulumi.StringInput `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 pulumi.StringInput `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable pulumi.StringInput `pulumi:"routeMapOut6Preferable"`
	// L2VPN EVPN outbound route map filter.
	RouteMapOutEvpn pulumi.StringInput `pulumi:"routeMapOutEvpn"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable pulumi.StringInput `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 pulumi.StringInput `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable pulumi.StringInput `pulumi:"routeMapOutVpnv4Preferable"`
	// VPNv6 outbound route map filter.
	RouteMapOutVpnv6 pulumi.StringInput `pulumi:"routeMapOutVpnv6"`
	// VPNv6 outbound route map filter if this neighbor is preferred.
	RouteMapOutVpnv6Preferable pulumi.StringInput `pulumi:"routeMapOutVpnv6Preferable"`
	// Enable/disable IPv4 AS route reflector client.
	RouteReflectorClient pulumi.StringInput `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client.
	RouteReflectorClient6 pulumi.StringInput `pulumi:"routeReflectorClient6"`
	// Enable/disable L2VPN EVPN AS route reflector client for this neighbor.
	RouteReflectorClientEvpn pulumi.StringInput `pulumi:"routeReflectorClientEvpn"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv4 pulumi.StringInput `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable VPNv6 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv6 pulumi.StringInput `pulumi:"routeReflectorClientVpnv6"`
	// Enable/disable IPv4 AS route server client.
	RouteServerClient pulumi.StringInput `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client.
	RouteServerClient6 pulumi.StringInput `pulumi:"routeServerClient6"`
	// Enable/disable L2VPN EVPN AS route server client for this neighbor.
	RouteServerClientEvpn pulumi.StringInput `pulumi:"routeServerClientEvpn"`
	// Enable/disable VPNv4 AS route server client for this neighbor.
	RouteServerClientVpnv4 pulumi.StringInput `pulumi:"routeServerClientVpnv4"`
	// Enable/disable VPNv6 AS route server client for this neighbor.
	RouteServerClientVpnv6 pulumi.StringInput `pulumi:"routeServerClientVpnv6"`
	// IPv4 Send community attribute to neighbor.
	SendCommunity pulumi.StringInput `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor.
	SendCommunity6 pulumi.StringInput `pulumi:"sendCommunity6"`
	// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family.
	SendCommunityEvpn pulumi.StringInput `pulumi:"sendCommunityEvpn"`
	// Send community attribute to neighbor for VPNv4 address family.
	SendCommunityVpnv4 pulumi.StringInput `pulumi:"sendCommunityVpnv4"`
	// Enable/disable sending community attribute to this neighbor for VPNv6 address family.
	SendCommunityVpnv6 pulumi.StringInput `pulumi:"sendCommunityVpnv6"`
	// Enable/disable shutdown this neighbor.
	Shutdown pulumi.StringInput `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration.
	SoftReconfiguration pulumi.StringInput `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration.
	SoftReconfiguration6 pulumi.StringInput `pulumi:"softReconfiguration6"`
	// Enable/disable L2VPN EVPN inbound soft reconfiguration.
	SoftReconfigurationEvpn pulumi.StringInput `pulumi:"softReconfigurationEvpn"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration.
	SoftReconfigurationVpnv4 pulumi.StringInput `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable VPNv6 inbound soft reconfiguration.
	SoftReconfigurationVpnv6 pulumi.StringInput `pulumi:"softReconfigurationVpnv6"`
	// Enable/disable stale route after neighbor down.
	StaleRoute pulumi.StringInput `pulumi:"staleRoute"`
	// Enable/disable strict capability matching.
	StrictCapabilityMatch pulumi.StringInput `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap pulumi.StringInput `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 pulumi.StringInput `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource pulumi.StringInput `pulumi:"updateSource"`
	// Neighbor weight.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetBgpNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighbor)(nil)).Elem()
}

func (i GetBgpNeighborArgs) ToGetBgpNeighborOutput() GetBgpNeighborOutput {
	return i.ToGetBgpNeighborOutputWithContext(context.Background())
}

func (i GetBgpNeighborArgs) ToGetBgpNeighborOutputWithContext(ctx context.Context) GetBgpNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborOutput)
}

// GetBgpNeighborArrayInput is an input type that accepts GetBgpNeighborArray and GetBgpNeighborArrayOutput values.
// You can construct a concrete instance of `GetBgpNeighborArrayInput` via:
//
//	GetBgpNeighborArray{ GetBgpNeighborArgs{...} }
type GetBgpNeighborArrayInput interface {
	pulumi.Input

	ToGetBgpNeighborArrayOutput() GetBgpNeighborArrayOutput
	ToGetBgpNeighborArrayOutputWithContext(context.Context) GetBgpNeighborArrayOutput
}

type GetBgpNeighborArray []GetBgpNeighborInput

func (GetBgpNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighbor)(nil)).Elem()
}

func (i GetBgpNeighborArray) ToGetBgpNeighborArrayOutput() GetBgpNeighborArrayOutput {
	return i.ToGetBgpNeighborArrayOutputWithContext(context.Background())
}

func (i GetBgpNeighborArray) ToGetBgpNeighborArrayOutputWithContext(ctx context.Context) GetBgpNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborArrayOutput)
}

type GetBgpNeighborOutput struct{ *pulumi.OutputState }

func (GetBgpNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighbor)(nil)).Elem()
}

func (o GetBgpNeighborOutput) ToGetBgpNeighborOutput() GetBgpNeighborOutput {
	return o
}

func (o GetBgpNeighborOutput) ToGetBgpNeighborOutputWithContext(ctx context.Context) GetBgpNeighborOutput {
	return o
}

// Enable/disable address family IPv4 for this neighbor.
func (o GetBgpNeighborOutput) Activate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.Activate }).(pulumi.StringOutput)
}

// Enable/disable address family IPv6 for this neighbor.
func (o GetBgpNeighborOutput) Activate6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.Activate6 }).(pulumi.StringOutput)
}

// Enable/disable address family L2VPN EVPN for this neighbor.
func (o GetBgpNeighborOutput) ActivateEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.ActivateEvpn }).(pulumi.StringOutput)
}

// Enable/disable address family VPNv4 for this neighbor.
func (o GetBgpNeighborOutput) ActivateVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.ActivateVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable address family VPNv6 for this neighbor.
func (o GetBgpNeighborOutput) ActivateVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.ActivateVpnv6 }).(pulumi.StringOutput)
}

// Enable/disable IPv4 additional-path capability.
func (o GetBgpNeighborOutput) AdditionalPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AdditionalPath }).(pulumi.StringOutput)
}

// Enable/disable IPv6 additional-path capability.
func (o GetBgpNeighborOutput) AdditionalPath6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AdditionalPath6 }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 additional-path capability.
func (o GetBgpNeighborOutput) AdditionalPathVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AdditionalPathVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable VPNv6 additional-path capability.
func (o GetBgpNeighborOutput) AdditionalPathVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AdditionalPathVpnv6 }).(pulumi.StringOutput)
}

// Number of IPv4 additional paths that can be advertised to this neighbor.
func (o GetBgpNeighborOutput) AdvAdditionalPath() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.AdvAdditionalPath }).(pulumi.IntOutput)
}

// Number of IPv6 additional paths that can be advertised to this neighbor.
func (o GetBgpNeighborOutput) AdvAdditionalPath6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.AdvAdditionalPath6 }).(pulumi.IntOutput)
}

// Number of VPNv4 additional paths that can be advertised to this neighbor.
func (o GetBgpNeighborOutput) AdvAdditionalPathVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.AdvAdditionalPathVpnv4 }).(pulumi.IntOutput)
}

// Number of VPNv6 additional paths that can be advertised to this neighbor.
func (o GetBgpNeighborOutput) AdvAdditionalPathVpnv6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.AdvAdditionalPathVpnv6 }).(pulumi.IntOutput)
}

// Minimum interval (sec) between sending updates.
func (o GetBgpNeighborOutput) AdvertisementInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.AdvertisementInterval }).(pulumi.IntOutput)
}

// IPv4 The maximum number of occurrence of my AS number allowed.
func (o GetBgpNeighborOutput) AllowasIn() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.AllowasIn }).(pulumi.IntOutput)
}

// IPv6 The maximum number of occurrence of my AS number allowed.
func (o GetBgpNeighborOutput) AllowasIn6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.AllowasIn6 }).(pulumi.IntOutput)
}

// Enable/disable IPv4 Enable to allow my AS in AS path.
func (o GetBgpNeighborOutput) AllowasInEnable() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AllowasInEnable }).(pulumi.StringOutput)
}

// Enable/disable IPv6 Enable to allow my AS in AS path.
func (o GetBgpNeighborOutput) AllowasInEnable6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AllowasInEnable6 }).(pulumi.StringOutput)
}

// Enable/disable to allow my AS in AS path for L2VPN EVPN route.
func (o GetBgpNeighborOutput) AllowasInEnableEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AllowasInEnableEvpn }).(pulumi.StringOutput)
}

// Enable/disable to allow my AS in AS path for VPNv4 route.
func (o GetBgpNeighborOutput) AllowasInEnableVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AllowasInEnableVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable use of my AS in AS path for VPNv6 route.
func (o GetBgpNeighborOutput) AllowasInEnableVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AllowasInEnableVpnv6 }).(pulumi.StringOutput)
}

// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
func (o GetBgpNeighborOutput) AllowasInEvpn() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.AllowasInEvpn }).(pulumi.IntOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv4 route.
func (o GetBgpNeighborOutput) AllowasInVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.AllowasInVpnv4 }).(pulumi.IntOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv6 route.
func (o GetBgpNeighborOutput) AllowasInVpnv6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.AllowasInVpnv6 }).(pulumi.IntOutput)
}

// Enable/disable replace peer AS with own AS for IPv4.
func (o GetBgpNeighborOutput) AsOverride() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AsOverride }).(pulumi.StringOutput)
}

// Enable/disable replace peer AS with own AS for IPv6.
func (o GetBgpNeighborOutput) AsOverride6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AsOverride6 }).(pulumi.StringOutput)
}

// IPv4 List of attributes that should be unchanged.
func (o GetBgpNeighborOutput) AttributeUnchanged() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AttributeUnchanged }).(pulumi.StringOutput)
}

// IPv6 List of attributes that should be unchanged.
func (o GetBgpNeighborOutput) AttributeUnchanged6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AttributeUnchanged6 }).(pulumi.StringOutput)
}

// List of attributes that should be unchanged for VPNv4 route.
func (o GetBgpNeighborOutput) AttributeUnchangedVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AttributeUnchangedVpnv4 }).(pulumi.StringOutput)
}

// List of attributes that should not be changed for VPNv6 route.
func (o GetBgpNeighborOutput) AttributeUnchangedVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AttributeUnchangedVpnv6 }).(pulumi.StringOutput)
}

// Key-chain name for TCP authentication options.
func (o GetBgpNeighborOutput) AuthOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.AuthOptions }).(pulumi.StringOutput)
}

// Enable/disable BFD for this neighbor.
func (o GetBgpNeighborOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.Bfd }).(pulumi.StringOutput)
}

// Enable/disable advertise default IPv4 route to this neighbor.
func (o GetBgpNeighborOutput) CapabilityDefaultOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.CapabilityDefaultOriginate }).(pulumi.StringOutput)
}

// Enable/disable advertise default IPv6 route to this neighbor.
func (o GetBgpNeighborOutput) CapabilityDefaultOriginate6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.CapabilityDefaultOriginate6 }).(pulumi.StringOutput)
}

// Enable/disable advertise dynamic capability to this neighbor.
func (o GetBgpNeighborOutput) CapabilityDynamic() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.CapabilityDynamic }).(pulumi.StringOutput)
}

// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
func (o GetBgpNeighborOutput) CapabilityGracefulRestart() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.CapabilityGracefulRestart }).(pulumi.StringOutput)
}

// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
func (o GetBgpNeighborOutput) CapabilityGracefulRestart6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.CapabilityGracefulRestart6 }).(pulumi.StringOutput)
}

// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor.
func (o GetBgpNeighborOutput) CapabilityGracefulRestartEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.CapabilityGracefulRestartEvpn }).(pulumi.StringOutput)
}

// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
func (o GetBgpNeighborOutput) CapabilityGracefulRestartVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.CapabilityGracefulRestartVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor.
func (o GetBgpNeighborOutput) CapabilityGracefulRestartVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.CapabilityGracefulRestartVpnv6 }).(pulumi.StringOutput)
}

// Accept/Send IPv4 ORF lists to/from this neighbor.
func (o GetBgpNeighborOutput) CapabilityOrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.CapabilityOrf }).(pulumi.StringOutput)
}

// Accept/Send IPv6 ORF lists to/from this neighbor.
func (o GetBgpNeighborOutput) CapabilityOrf6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.CapabilityOrf6 }).(pulumi.StringOutput)
}

// Enable/disable advertise route refresh capability to this neighbor.
func (o GetBgpNeighborOutput) CapabilityRouteRefresh() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.CapabilityRouteRefresh }).(pulumi.StringOutput)
}

// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
func (o GetBgpNeighborOutput) ConditionalAdvertise6s() GetBgpNeighborConditionalAdvertise6ArrayOutput {
	return o.ApplyT(func(v GetBgpNeighbor) []GetBgpNeighborConditionalAdvertise6 { return v.ConditionalAdvertise6s }).(GetBgpNeighborConditionalAdvertise6ArrayOutput)
}

// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
func (o GetBgpNeighborOutput) ConditionalAdvertises() GetBgpNeighborConditionalAdvertiseArrayOutput {
	return o.ApplyT(func(v GetBgpNeighbor) []GetBgpNeighborConditionalAdvertise { return v.ConditionalAdvertises }).(GetBgpNeighborConditionalAdvertiseArrayOutput)
}

// Interval (sec) for connect timer.
func (o GetBgpNeighborOutput) ConnectTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.ConnectTimer }).(pulumi.IntOutput)
}

// Route map to specify criteria to originate IPv4 default.
func (o GetBgpNeighborOutput) DefaultOriginateRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.DefaultOriginateRoutemap }).(pulumi.StringOutput)
}

// Route map to specify criteria to originate IPv6 default.
func (o GetBgpNeighborOutput) DefaultOriginateRoutemap6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.DefaultOriginateRoutemap6 }).(pulumi.StringOutput)
}

// Description.
func (o GetBgpNeighborOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.Description }).(pulumi.StringOutput)
}

// Filter for IPv4 updates from this neighbor.
func (o GetBgpNeighborOutput) DistributeListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.DistributeListIn }).(pulumi.StringOutput)
}

// Filter for IPv6 updates from this neighbor.
func (o GetBgpNeighborOutput) DistributeListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.DistributeListIn6 }).(pulumi.StringOutput)
}

// Filter for VPNv4 updates from this neighbor.
func (o GetBgpNeighborOutput) DistributeListInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.DistributeListInVpnv4 }).(pulumi.StringOutput)
}

// Filter for VPNv6 updates from this neighbor.
func (o GetBgpNeighborOutput) DistributeListInVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.DistributeListInVpnv6 }).(pulumi.StringOutput)
}

// Filter for IPv4 updates to this neighbor.
func (o GetBgpNeighborOutput) DistributeListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.DistributeListOut }).(pulumi.StringOutput)
}

// Filter for IPv6 updates to this neighbor.
func (o GetBgpNeighborOutput) DistributeListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.DistributeListOut6 }).(pulumi.StringOutput)
}

// Filter for VPNv4 updates to this neighbor.
func (o GetBgpNeighborOutput) DistributeListOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.DistributeListOutVpnv4 }).(pulumi.StringOutput)
}

// Filter for VPNv6 updates to this neighbor.
func (o GetBgpNeighborOutput) DistributeListOutVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.DistributeListOutVpnv6 }).(pulumi.StringOutput)
}

// Don't negotiate capabilities with this neighbor
func (o GetBgpNeighborOutput) DontCapabilityNegotiate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.DontCapabilityNegotiate }).(pulumi.StringOutput)
}

// Enable/disable allow multi-hop EBGP neighbors.
func (o GetBgpNeighborOutput) EbgpEnforceMultihop() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.EbgpEnforceMultihop }).(pulumi.StringOutput)
}

// EBGP multihop TTL for this peer.
func (o GetBgpNeighborOutput) EbgpMultihopTtl() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.EbgpMultihopTtl }).(pulumi.IntOutput)
}

// BGP filter for IPv4 inbound routes.
func (o GetBgpNeighborOutput) FilterListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.FilterListIn }).(pulumi.StringOutput)
}

// BGP filter for IPv6 inbound routes.
func (o GetBgpNeighborOutput) FilterListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.FilterListIn6 }).(pulumi.StringOutput)
}

// BGP filter for VPNv4 inbound routes.
func (o GetBgpNeighborOutput) FilterListInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.FilterListInVpnv4 }).(pulumi.StringOutput)
}

// BGP filter for VPNv6 inbound routes.
func (o GetBgpNeighborOutput) FilterListInVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.FilterListInVpnv6 }).(pulumi.StringOutput)
}

// BGP filter for IPv4 outbound routes.
func (o GetBgpNeighborOutput) FilterListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.FilterListOut }).(pulumi.StringOutput)
}

// BGP filter for IPv6 outbound routes.
func (o GetBgpNeighborOutput) FilterListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.FilterListOut6 }).(pulumi.StringOutput)
}

// BGP filter for VPNv4 outbound routes.
func (o GetBgpNeighborOutput) FilterListOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.FilterListOutVpnv4 }).(pulumi.StringOutput)
}

// BGP filter for VPNv6 outbound routes.
func (o GetBgpNeighborOutput) FilterListOutVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.FilterListOutVpnv6 }).(pulumi.StringOutput)
}

// Interval (sec) before peer considered dead.
func (o GetBgpNeighborOutput) HoldtimeTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.HoldtimeTimer }).(pulumi.IntOutput)
}

// Interface which is used to leak routes to target VRF.
func (o GetBgpNeighborOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.Interface }).(pulumi.StringOutput)
}

// IP/IPv6 address of neighbor.
func (o GetBgpNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.Ip }).(pulumi.StringOutput)
}

// Keep alive timer interval (sec).
func (o GetBgpNeighborOutput) KeepAliveTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.KeepAliveTimer }).(pulumi.IntOutput)
}

// Enable/disable failover upon link down.
func (o GetBgpNeighborOutput) LinkDownFailover() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.LinkDownFailover }).(pulumi.StringOutput)
}

// Local AS number of neighbor.
func (o GetBgpNeighborOutput) LocalAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.LocalAs }).(pulumi.IntOutput)
}

// Do not prepend local-as to incoming updates.
func (o GetBgpNeighborOutput) LocalAsNoPrepend() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.LocalAsNoPrepend }).(pulumi.StringOutput)
}

// Replace real AS with local-as in outgoing updates.
func (o GetBgpNeighborOutput) LocalAsReplaceAs() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.LocalAsReplaceAs }).(pulumi.StringOutput)
}

// Maximum number of IPv4 prefixes to accept from this peer.
func (o GetBgpNeighborOutput) MaximumPrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.MaximumPrefix }).(pulumi.IntOutput)
}

// Maximum number of IPv6 prefixes to accept from this peer.
func (o GetBgpNeighborOutput) MaximumPrefix6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.MaximumPrefix6 }).(pulumi.IntOutput)
}

// Maximum number of L2VPN EVPN prefixes to accept from this peer.
func (o GetBgpNeighborOutput) MaximumPrefixEvpn() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.MaximumPrefixEvpn }).(pulumi.IntOutput)
}

// Maximum IPv4 prefix threshold value (1 - 100 percent).
func (o GetBgpNeighborOutput) MaximumPrefixThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.MaximumPrefixThreshold }).(pulumi.IntOutput)
}

// Maximum IPv6 prefix threshold value (1 - 100 percent).
func (o GetBgpNeighborOutput) MaximumPrefixThreshold6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.MaximumPrefixThreshold6 }).(pulumi.IntOutput)
}

// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
func (o GetBgpNeighborOutput) MaximumPrefixThresholdEvpn() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.MaximumPrefixThresholdEvpn }).(pulumi.IntOutput)
}

// Maximum VPNv4 prefix threshold value (1 - 100 percent).
func (o GetBgpNeighborOutput) MaximumPrefixThresholdVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.MaximumPrefixThresholdVpnv4 }).(pulumi.IntOutput)
}

// Maximum VPNv6 prefix threshold value (1 - 100 percent).
func (o GetBgpNeighborOutput) MaximumPrefixThresholdVpnv6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.MaximumPrefixThresholdVpnv6 }).(pulumi.IntOutput)
}

// Maximum number of VPNv4 prefixes to accept from this peer.
func (o GetBgpNeighborOutput) MaximumPrefixVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.MaximumPrefixVpnv4 }).(pulumi.IntOutput)
}

// Maximum number of VPNv6 prefixes to accept from this peer.
func (o GetBgpNeighborOutput) MaximumPrefixVpnv6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.MaximumPrefixVpnv6 }).(pulumi.IntOutput)
}

// Enable/disable IPv4 Only give warning message when limit is exceeded.
func (o GetBgpNeighborOutput) MaximumPrefixWarningOnly() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.MaximumPrefixWarningOnly }).(pulumi.StringOutput)
}

// Enable/disable IPv6 Only give warning message when limit is exceeded.
func (o GetBgpNeighborOutput) MaximumPrefixWarningOnly6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.MaximumPrefixWarningOnly6 }).(pulumi.StringOutput)
}

// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes.
func (o GetBgpNeighborOutput) MaximumPrefixWarningOnlyEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.MaximumPrefixWarningOnlyEvpn }).(pulumi.StringOutput)
}

// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
func (o GetBgpNeighborOutput) MaximumPrefixWarningOnlyVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.MaximumPrefixWarningOnlyVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable warning message when limit is exceeded for VPNv6 routes.
func (o GetBgpNeighborOutput) MaximumPrefixWarningOnlyVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.MaximumPrefixWarningOnlyVpnv6 }).(pulumi.StringOutput)
}

// Enable/disable IPv4 next-hop calculation for this neighbor.
func (o GetBgpNeighborOutput) NextHopSelf() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.NextHopSelf }).(pulumi.StringOutput)
}

// Enable/disable IPv6 next-hop calculation for this neighbor.
func (o GetBgpNeighborOutput) NextHopSelf6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.NextHopSelf6 }).(pulumi.StringOutput)
}

// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
func (o GetBgpNeighborOutput) NextHopSelfRr() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.NextHopSelfRr }).(pulumi.StringOutput)
}

// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
func (o GetBgpNeighborOutput) NextHopSelfRr6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.NextHopSelfRr6 }).(pulumi.StringOutput)
}

// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
func (o GetBgpNeighborOutput) NextHopSelfVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.NextHopSelfVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor.
func (o GetBgpNeighborOutput) NextHopSelfVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.NextHopSelfVpnv6 }).(pulumi.StringOutput)
}

// Enable/disable override result of capability negotiation.
func (o GetBgpNeighborOutput) OverrideCapability() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.OverrideCapability }).(pulumi.StringOutput)
}

// Enable/disable sending of open messages to this neighbor.
func (o GetBgpNeighborOutput) Passive() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.Passive }).(pulumi.StringOutput)
}

// Password used in MD5 authentication.
func (o GetBgpNeighborOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.Password }).(pulumi.StringOutput)
}

// IPv4 Inbound filter for updates from this neighbor.
func (o GetBgpNeighborOutput) PrefixListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.PrefixListIn }).(pulumi.StringOutput)
}

// IPv6 Inbound filter for updates from this neighbor.
func (o GetBgpNeighborOutput) PrefixListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.PrefixListIn6 }).(pulumi.StringOutput)
}

// Inbound filter for VPNv4 updates from this neighbor.
func (o GetBgpNeighborOutput) PrefixListInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.PrefixListInVpnv4 }).(pulumi.StringOutput)
}

// Inbound filter for VPNv6 updates from this neighbor.
func (o GetBgpNeighborOutput) PrefixListInVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.PrefixListInVpnv6 }).(pulumi.StringOutput)
}

// IPv4 Outbound filter for updates to this neighbor.
func (o GetBgpNeighborOutput) PrefixListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.PrefixListOut }).(pulumi.StringOutput)
}

// IPv6 Outbound filter for updates to this neighbor.
func (o GetBgpNeighborOutput) PrefixListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.PrefixListOut6 }).(pulumi.StringOutput)
}

// Outbound filter for VPNv4 updates to this neighbor.
func (o GetBgpNeighborOutput) PrefixListOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.PrefixListOutVpnv4 }).(pulumi.StringOutput)
}

// Outbound filter for VPNv6 updates to this neighbor.
func (o GetBgpNeighborOutput) PrefixListOutVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.PrefixListOutVpnv6 }).(pulumi.StringOutput)
}

// AS number of neighbor.
func (o GetBgpNeighborOutput) RemoteAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.RemoteAs }).(pulumi.IntOutput)
}

// Enable/disable remove private AS number from IPv4 outbound updates.
func (o GetBgpNeighborOutput) RemovePrivateAs() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RemovePrivateAs }).(pulumi.StringOutput)
}

// Enable/disable remove private AS number from IPv6 outbound updates.
func (o GetBgpNeighborOutput) RemovePrivateAs6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RemovePrivateAs6 }).(pulumi.StringOutput)
}

// Enable/disable removing private AS number from L2VPN EVPN outbound updates.
func (o GetBgpNeighborOutput) RemovePrivateAsEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RemovePrivateAsEvpn }).(pulumi.StringOutput)
}

// Enable/disable remove private AS number from VPNv4 outbound updates.
func (o GetBgpNeighborOutput) RemovePrivateAsVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RemovePrivateAsVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable to remove private AS number from VPNv6 outbound updates.
func (o GetBgpNeighborOutput) RemovePrivateAsVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RemovePrivateAsVpnv6 }).(pulumi.StringOutput)
}

// Graceful restart delay time (sec, 0 = global default).
func (o GetBgpNeighborOutput) RestartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.RestartTime }).(pulumi.IntOutput)
}

// Time to retain stale routes.
func (o GetBgpNeighborOutput) RetainStaleTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.RetainStaleTime }).(pulumi.IntOutput)
}

// IPv4 Inbound route map filter.
func (o GetBgpNeighborOutput) RouteMapIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapIn }).(pulumi.StringOutput)
}

// IPv6 Inbound route map filter.
func (o GetBgpNeighborOutput) RouteMapIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapIn6 }).(pulumi.StringOutput)
}

// L2VPN EVPN inbound route map filter.
func (o GetBgpNeighborOutput) RouteMapInEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapInEvpn }).(pulumi.StringOutput)
}

// VPNv4 inbound route map filter.
func (o GetBgpNeighborOutput) RouteMapInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapInVpnv4 }).(pulumi.StringOutput)
}

// VPNv6 inbound route map filter.
func (o GetBgpNeighborOutput) RouteMapInVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapInVpnv6 }).(pulumi.StringOutput)
}

// IPv4 Outbound route map filter.
func (o GetBgpNeighborOutput) RouteMapOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapOut }).(pulumi.StringOutput)
}

// IPv6 Outbound route map filter.
func (o GetBgpNeighborOutput) RouteMapOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapOut6 }).(pulumi.StringOutput)
}

// IPv6 outbound route map filter if the peer is preferred.
func (o GetBgpNeighborOutput) RouteMapOut6Preferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapOut6Preferable }).(pulumi.StringOutput)
}

// L2VPN EVPN outbound route map filter.
func (o GetBgpNeighborOutput) RouteMapOutEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapOutEvpn }).(pulumi.StringOutput)
}

// IPv4 outbound route map filter if the peer is preferred.
func (o GetBgpNeighborOutput) RouteMapOutPreferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapOutPreferable }).(pulumi.StringOutput)
}

// VPNv4 outbound route map filter.
func (o GetBgpNeighborOutput) RouteMapOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapOutVpnv4 }).(pulumi.StringOutput)
}

// VPNv4 outbound route map filter if the peer is preferred.
func (o GetBgpNeighborOutput) RouteMapOutVpnv4Preferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapOutVpnv4Preferable }).(pulumi.StringOutput)
}

// VPNv6 outbound route map filter.
func (o GetBgpNeighborOutput) RouteMapOutVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapOutVpnv6 }).(pulumi.StringOutput)
}

// VPNv6 outbound route map filter if this neighbor is preferred.
func (o GetBgpNeighborOutput) RouteMapOutVpnv6Preferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteMapOutVpnv6Preferable }).(pulumi.StringOutput)
}

// Enable/disable IPv4 AS route reflector client.
func (o GetBgpNeighborOutput) RouteReflectorClient() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteReflectorClient }).(pulumi.StringOutput)
}

// Enable/disable IPv6 AS route reflector client.
func (o GetBgpNeighborOutput) RouteReflectorClient6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteReflectorClient6 }).(pulumi.StringOutput)
}

// Enable/disable L2VPN EVPN AS route reflector client for this neighbor.
func (o GetBgpNeighborOutput) RouteReflectorClientEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteReflectorClientEvpn }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 AS route reflector client for this neighbor.
func (o GetBgpNeighborOutput) RouteReflectorClientVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteReflectorClientVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable VPNv6 AS route reflector client for this neighbor.
func (o GetBgpNeighborOutput) RouteReflectorClientVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteReflectorClientVpnv6 }).(pulumi.StringOutput)
}

// Enable/disable IPv4 AS route server client.
func (o GetBgpNeighborOutput) RouteServerClient() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteServerClient }).(pulumi.StringOutput)
}

// Enable/disable IPv6 AS route server client.
func (o GetBgpNeighborOutput) RouteServerClient6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteServerClient6 }).(pulumi.StringOutput)
}

// Enable/disable L2VPN EVPN AS route server client for this neighbor.
func (o GetBgpNeighborOutput) RouteServerClientEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteServerClientEvpn }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 AS route server client for this neighbor.
func (o GetBgpNeighborOutput) RouteServerClientVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteServerClientVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable VPNv6 AS route server client for this neighbor.
func (o GetBgpNeighborOutput) RouteServerClientVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.RouteServerClientVpnv6 }).(pulumi.StringOutput)
}

// IPv4 Send community attribute to neighbor.
func (o GetBgpNeighborOutput) SendCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.SendCommunity }).(pulumi.StringOutput)
}

// IPv6 Send community attribute to neighbor.
func (o GetBgpNeighborOutput) SendCommunity6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.SendCommunity6 }).(pulumi.StringOutput)
}

// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family.
func (o GetBgpNeighborOutput) SendCommunityEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.SendCommunityEvpn }).(pulumi.StringOutput)
}

// Send community attribute to neighbor for VPNv4 address family.
func (o GetBgpNeighborOutput) SendCommunityVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.SendCommunityVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable sending community attribute to this neighbor for VPNv6 address family.
func (o GetBgpNeighborOutput) SendCommunityVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.SendCommunityVpnv6 }).(pulumi.StringOutput)
}

// Enable/disable shutdown this neighbor.
func (o GetBgpNeighborOutput) Shutdown() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.Shutdown }).(pulumi.StringOutput)
}

// Enable/disable allow IPv4 inbound soft reconfiguration.
func (o GetBgpNeighborOutput) SoftReconfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.SoftReconfiguration }).(pulumi.StringOutput)
}

// Enable/disable allow IPv6 inbound soft reconfiguration.
func (o GetBgpNeighborOutput) SoftReconfiguration6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.SoftReconfiguration6 }).(pulumi.StringOutput)
}

// Enable/disable L2VPN EVPN inbound soft reconfiguration.
func (o GetBgpNeighborOutput) SoftReconfigurationEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.SoftReconfigurationEvpn }).(pulumi.StringOutput)
}

// Enable/disable allow VPNv4 inbound soft reconfiguration.
func (o GetBgpNeighborOutput) SoftReconfigurationVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.SoftReconfigurationVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable VPNv6 inbound soft reconfiguration.
func (o GetBgpNeighborOutput) SoftReconfigurationVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.SoftReconfigurationVpnv6 }).(pulumi.StringOutput)
}

// Enable/disable stale route after neighbor down.
func (o GetBgpNeighborOutput) StaleRoute() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.StaleRoute }).(pulumi.StringOutput)
}

// Enable/disable strict capability matching.
func (o GetBgpNeighborOutput) StrictCapabilityMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.StrictCapabilityMatch }).(pulumi.StringOutput)
}

// IPv4 Route map to selectively unsuppress suppressed routes.
func (o GetBgpNeighborOutput) UnsuppressMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.UnsuppressMap }).(pulumi.StringOutput)
}

// IPv6 Route map to selectively unsuppress suppressed routes.
func (o GetBgpNeighborOutput) UnsuppressMap6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.UnsuppressMap6 }).(pulumi.StringOutput)
}

// Interface to use as source IP/IPv6 address of TCP connections.
func (o GetBgpNeighborOutput) UpdateSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighbor) string { return v.UpdateSource }).(pulumi.StringOutput)
}

// Neighbor weight.
func (o GetBgpNeighborOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighbor) int { return v.Weight }).(pulumi.IntOutput)
}

type GetBgpNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetBgpNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighbor)(nil)).Elem()
}

func (o GetBgpNeighborArrayOutput) ToGetBgpNeighborArrayOutput() GetBgpNeighborArrayOutput {
	return o
}

func (o GetBgpNeighborArrayOutput) ToGetBgpNeighborArrayOutputWithContext(ctx context.Context) GetBgpNeighborArrayOutput {
	return o
}

func (o GetBgpNeighborArrayOutput) Index(i pulumi.IntInput) GetBgpNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpNeighbor {
		return vs[0].([]GetBgpNeighbor)[vs[1].(int)]
	}).(GetBgpNeighborOutput)
}

type GetBgpNeighborConditionalAdvertise6 struct {
	// Name of advertising route map.
	AdvertiseRoutemap string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap string `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType string `pulumi:"conditionType"`
}

// GetBgpNeighborConditionalAdvertise6Input is an input type that accepts GetBgpNeighborConditionalAdvertise6Args and GetBgpNeighborConditionalAdvertise6Output values.
// You can construct a concrete instance of `GetBgpNeighborConditionalAdvertise6Input` via:
//
//	GetBgpNeighborConditionalAdvertise6Args{...}
type GetBgpNeighborConditionalAdvertise6Input interface {
	pulumi.Input

	ToGetBgpNeighborConditionalAdvertise6Output() GetBgpNeighborConditionalAdvertise6Output
	ToGetBgpNeighborConditionalAdvertise6OutputWithContext(context.Context) GetBgpNeighborConditionalAdvertise6Output
}

type GetBgpNeighborConditionalAdvertise6Args struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringInput `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (GetBgpNeighborConditionalAdvertise6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i GetBgpNeighborConditionalAdvertise6Args) ToGetBgpNeighborConditionalAdvertise6Output() GetBgpNeighborConditionalAdvertise6Output {
	return i.ToGetBgpNeighborConditionalAdvertise6OutputWithContext(context.Background())
}

func (i GetBgpNeighborConditionalAdvertise6Args) ToGetBgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) GetBgpNeighborConditionalAdvertise6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborConditionalAdvertise6Output)
}

// GetBgpNeighborConditionalAdvertise6ArrayInput is an input type that accepts GetBgpNeighborConditionalAdvertise6Array and GetBgpNeighborConditionalAdvertise6ArrayOutput values.
// You can construct a concrete instance of `GetBgpNeighborConditionalAdvertise6ArrayInput` via:
//
//	GetBgpNeighborConditionalAdvertise6Array{ GetBgpNeighborConditionalAdvertise6Args{...} }
type GetBgpNeighborConditionalAdvertise6ArrayInput interface {
	pulumi.Input

	ToGetBgpNeighborConditionalAdvertise6ArrayOutput() GetBgpNeighborConditionalAdvertise6ArrayOutput
	ToGetBgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Context) GetBgpNeighborConditionalAdvertise6ArrayOutput
}

type GetBgpNeighborConditionalAdvertise6Array []GetBgpNeighborConditionalAdvertise6Input

func (GetBgpNeighborConditionalAdvertise6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i GetBgpNeighborConditionalAdvertise6Array) ToGetBgpNeighborConditionalAdvertise6ArrayOutput() GetBgpNeighborConditionalAdvertise6ArrayOutput {
	return i.ToGetBgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Background())
}

func (i GetBgpNeighborConditionalAdvertise6Array) ToGetBgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) GetBgpNeighborConditionalAdvertise6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborConditionalAdvertise6ArrayOutput)
}

type GetBgpNeighborConditionalAdvertise6Output struct{ *pulumi.OutputState }

func (GetBgpNeighborConditionalAdvertise6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o GetBgpNeighborConditionalAdvertise6Output) ToGetBgpNeighborConditionalAdvertise6Output() GetBgpNeighborConditionalAdvertise6Output {
	return o
}

func (o GetBgpNeighborConditionalAdvertise6Output) ToGetBgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) GetBgpNeighborConditionalAdvertise6Output {
	return o
}

// Name of advertising route map.
func (o GetBgpNeighborConditionalAdvertise6Output) AdvertiseRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborConditionalAdvertise6) string { return v.AdvertiseRoutemap }).(pulumi.StringOutput)
}

// Name of condition route map.
func (o GetBgpNeighborConditionalAdvertise6Output) ConditionRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborConditionalAdvertise6) string { return v.ConditionRoutemap }).(pulumi.StringOutput)
}

// Type of condition.
func (o GetBgpNeighborConditionalAdvertise6Output) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborConditionalAdvertise6) string { return v.ConditionType }).(pulumi.StringOutput)
}

type GetBgpNeighborConditionalAdvertise6ArrayOutput struct{ *pulumi.OutputState }

func (GetBgpNeighborConditionalAdvertise6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o GetBgpNeighborConditionalAdvertise6ArrayOutput) ToGetBgpNeighborConditionalAdvertise6ArrayOutput() GetBgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o GetBgpNeighborConditionalAdvertise6ArrayOutput) ToGetBgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) GetBgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o GetBgpNeighborConditionalAdvertise6ArrayOutput) Index(i pulumi.IntInput) GetBgpNeighborConditionalAdvertise6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpNeighborConditionalAdvertise6 {
		return vs[0].([]GetBgpNeighborConditionalAdvertise6)[vs[1].(int)]
	}).(GetBgpNeighborConditionalAdvertise6Output)
}

type GetBgpNeighborConditionalAdvertise struct {
	// Name of advertising route map.
	AdvertiseRoutemap string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap string `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType string `pulumi:"conditionType"`
}

// GetBgpNeighborConditionalAdvertiseInput is an input type that accepts GetBgpNeighborConditionalAdvertiseArgs and GetBgpNeighborConditionalAdvertiseOutput values.
// You can construct a concrete instance of `GetBgpNeighborConditionalAdvertiseInput` via:
//
//	GetBgpNeighborConditionalAdvertiseArgs{...}
type GetBgpNeighborConditionalAdvertiseInput interface {
	pulumi.Input

	ToGetBgpNeighborConditionalAdvertiseOutput() GetBgpNeighborConditionalAdvertiseOutput
	ToGetBgpNeighborConditionalAdvertiseOutputWithContext(context.Context) GetBgpNeighborConditionalAdvertiseOutput
}

type GetBgpNeighborConditionalAdvertiseArgs struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringInput `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (GetBgpNeighborConditionalAdvertiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i GetBgpNeighborConditionalAdvertiseArgs) ToGetBgpNeighborConditionalAdvertiseOutput() GetBgpNeighborConditionalAdvertiseOutput {
	return i.ToGetBgpNeighborConditionalAdvertiseOutputWithContext(context.Background())
}

func (i GetBgpNeighborConditionalAdvertiseArgs) ToGetBgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) GetBgpNeighborConditionalAdvertiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborConditionalAdvertiseOutput)
}

// GetBgpNeighborConditionalAdvertiseArrayInput is an input type that accepts GetBgpNeighborConditionalAdvertiseArray and GetBgpNeighborConditionalAdvertiseArrayOutput values.
// You can construct a concrete instance of `GetBgpNeighborConditionalAdvertiseArrayInput` via:
//
//	GetBgpNeighborConditionalAdvertiseArray{ GetBgpNeighborConditionalAdvertiseArgs{...} }
type GetBgpNeighborConditionalAdvertiseArrayInput interface {
	pulumi.Input

	ToGetBgpNeighborConditionalAdvertiseArrayOutput() GetBgpNeighborConditionalAdvertiseArrayOutput
	ToGetBgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Context) GetBgpNeighborConditionalAdvertiseArrayOutput
}

type GetBgpNeighborConditionalAdvertiseArray []GetBgpNeighborConditionalAdvertiseInput

func (GetBgpNeighborConditionalAdvertiseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i GetBgpNeighborConditionalAdvertiseArray) ToGetBgpNeighborConditionalAdvertiseArrayOutput() GetBgpNeighborConditionalAdvertiseArrayOutput {
	return i.ToGetBgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Background())
}

func (i GetBgpNeighborConditionalAdvertiseArray) ToGetBgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) GetBgpNeighborConditionalAdvertiseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborConditionalAdvertiseArrayOutput)
}

type GetBgpNeighborConditionalAdvertiseOutput struct{ *pulumi.OutputState }

func (GetBgpNeighborConditionalAdvertiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o GetBgpNeighborConditionalAdvertiseOutput) ToGetBgpNeighborConditionalAdvertiseOutput() GetBgpNeighborConditionalAdvertiseOutput {
	return o
}

func (o GetBgpNeighborConditionalAdvertiseOutput) ToGetBgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) GetBgpNeighborConditionalAdvertiseOutput {
	return o
}

// Name of advertising route map.
func (o GetBgpNeighborConditionalAdvertiseOutput) AdvertiseRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborConditionalAdvertise) string { return v.AdvertiseRoutemap }).(pulumi.StringOutput)
}

// Name of condition route map.
func (o GetBgpNeighborConditionalAdvertiseOutput) ConditionRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborConditionalAdvertise) string { return v.ConditionRoutemap }).(pulumi.StringOutput)
}

// Type of condition.
func (o GetBgpNeighborConditionalAdvertiseOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborConditionalAdvertise) string { return v.ConditionType }).(pulumi.StringOutput)
}

type GetBgpNeighborConditionalAdvertiseArrayOutput struct{ *pulumi.OutputState }

func (GetBgpNeighborConditionalAdvertiseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o GetBgpNeighborConditionalAdvertiseArrayOutput) ToGetBgpNeighborConditionalAdvertiseArrayOutput() GetBgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o GetBgpNeighborConditionalAdvertiseArrayOutput) ToGetBgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) GetBgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o GetBgpNeighborConditionalAdvertiseArrayOutput) Index(i pulumi.IntInput) GetBgpNeighborConditionalAdvertiseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpNeighborConditionalAdvertise {
		return vs[0].([]GetBgpNeighborConditionalAdvertise)[vs[1].(int)]
	}).(GetBgpNeighborConditionalAdvertiseOutput)
}

type GetBgpNeighborGroup struct {
	// Enable/disable address family IPv4 for this neighbor.
	Activate string `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor.
	Activate6 string `pulumi:"activate6"`
	// Enable/disable address family L2VPN EVPN for this neighbor.
	ActivateEvpn string `pulumi:"activateEvpn"`
	// Enable/disable address family VPNv4 for this neighbor.
	ActivateVpnv4 string `pulumi:"activateVpnv4"`
	// Enable/disable address family VPNv6 for this neighbor.
	ActivateVpnv6 string `pulumi:"activateVpnv6"`
	// Enable/disable IPv4 additional-path capability.
	AdditionalPath string `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability.
	AdditionalPath6 string `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability.
	AdditionalPathVpnv4 string `pulumi:"additionalPathVpnv4"`
	// Enable/disable VPNv6 additional-path capability.
	AdditionalPathVpnv6 string `pulumi:"additionalPathVpnv6"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath int `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 int `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 int `pulumi:"advAdditionalPathVpnv4"`
	// Number of VPNv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv6 int `pulumi:"advAdditionalPathVpnv6"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval int `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn int `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 int `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path.
	AllowasInEnable string `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path.
	AllowasInEnable6 string `pulumi:"allowasInEnable6"`
	// Enable/disable to allow my AS in AS path for L2VPN EVPN route.
	AllowasInEnableEvpn string `pulumi:"allowasInEnableEvpn"`
	// Enable/disable to allow my AS in AS path for VPNv4 route.
	AllowasInEnableVpnv4 string `pulumi:"allowasInEnableVpnv4"`
	// Enable/disable use of my AS in AS path for VPNv6 route.
	AllowasInEnableVpnv6 string `pulumi:"allowasInEnableVpnv6"`
	// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
	AllowasInEvpn int `pulumi:"allowasInEvpn"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 int `pulumi:"allowasInVpnv4"`
	// The maximum number of occurrence of my AS number allowed for VPNv6 route.
	AllowasInVpnv6 int `pulumi:"allowasInVpnv6"`
	// Enable/disable replace peer AS with own AS for IPv4.
	AsOverride string `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6.
	AsOverride6 string `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged.
	AttributeUnchanged string `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged.
	AttributeUnchanged6 string `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route.
	AttributeUnchangedVpnv4 string `pulumi:"attributeUnchangedVpnv4"`
	// List of attributes that should not be changed for VPNv6 route.
	AttributeUnchangedVpnv6 string `pulumi:"attributeUnchangedVpnv6"`
	// Key-chain name for TCP authentication options.
	AuthOptions string `pulumi:"authOptions"`
	// Enable/disable BFD for this neighbor.
	Bfd string `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor.
	CapabilityDefaultOriginate string `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor.
	CapabilityDefaultOriginate6 string `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor.
	CapabilityDynamic string `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestart string `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestart6 string `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor.
	CapabilityGracefulRestartEvpn string `pulumi:"capabilityGracefulRestartEvpn"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv4 string `pulumi:"capabilityGracefulRestartVpnv4"`
	// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv6 string `pulumi:"capabilityGracefulRestartVpnv6"`
	// Accept/Send IPv4 ORF lists to/from this neighbor.
	CapabilityOrf string `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor.
	CapabilityOrf6 string `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor.
	CapabilityRouteRefresh string `pulumi:"capabilityRouteRefresh"`
	// Interval (sec) for connect timer.
	ConnectTimer int `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap string `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 string `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description string `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn string `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 string `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 string `pulumi:"distributeListInVpnv4"`
	// Filter for VPNv6 updates from this neighbor.
	DistributeListInVpnv6 string `pulumi:"distributeListInVpnv6"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut string `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 string `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 string `pulumi:"distributeListOutVpnv4"`
	// Filter for VPNv6 updates to this neighbor.
	DistributeListOutVpnv6 string `pulumi:"distributeListOutVpnv6"`
	// Don't negotiate capabilities with this neighbor
	DontCapabilityNegotiate string `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors.
	EbgpEnforceMultihop string `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl int `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn string `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 string `pulumi:"filterListIn6"`
	// BGP filter for VPNv4 inbound routes.
	FilterListInVpnv4 string `pulumi:"filterListInVpnv4"`
	// BGP filter for VPNv6 inbound routes.
	FilterListInVpnv6 string `pulumi:"filterListInVpnv6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut string `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 string `pulumi:"filterListOut6"`
	// BGP filter for VPNv4 outbound routes.
	FilterListOutVpnv4 string `pulumi:"filterListOutVpnv4"`
	// BGP filter for VPNv6 outbound routes.
	FilterListOutVpnv6 string `pulumi:"filterListOutVpnv6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer int `pulumi:"holdtimeTimer"`
	// Interface which is used to leak routes to target VRF.
	Interface string `pulumi:"interface"`
	// Keep alive timer interval (sec).
	KeepAliveTimer int `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down.
	LinkDownFailover string `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs int `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates.
	LocalAsNoPrepend string `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates.
	LocalAsReplaceAs string `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix int `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 int `pulumi:"maximumPrefix6"`
	// Maximum number of L2VPN EVPN prefixes to accept from this peer.
	MaximumPrefixEvpn int `pulumi:"maximumPrefixEvpn"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold int `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 int `pulumi:"maximumPrefixThreshold6"`
	// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdEvpn int `pulumi:"maximumPrefixThresholdEvpn"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 int `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum VPNv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv6 int `pulumi:"maximumPrefixThresholdVpnv6"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 int `pulumi:"maximumPrefixVpnv4"`
	// Maximum number of VPNv6 prefixes to accept from this peer.
	MaximumPrefixVpnv6 int `pulumi:"maximumPrefixVpnv6"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly string `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly6 string `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes.
	MaximumPrefixWarningOnlyEvpn string `pulumi:"maximumPrefixWarningOnlyEvpn"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
	MaximumPrefixWarningOnlyVpnv4 string `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable warning message when limit is exceeded for VPNv6 routes.
	MaximumPrefixWarningOnlyVpnv6 string `pulumi:"maximumPrefixWarningOnlyVpnv6"`
	// Distribute list entry name.
	Name string `pulumi:"name"`
	// Enable/disable IPv4 next-hop calculation for this neighbor.
	NextHopSelf string `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor.
	NextHopSelf6 string `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
	NextHopSelfRr string `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
	NextHopSelfRr6 string `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
	NextHopSelfVpnv4 string `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor.
	NextHopSelfVpnv6 string `pulumi:"nextHopSelfVpnv6"`
	// Enable/disable override result of capability negotiation.
	OverrideCapability string `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor.
	Passive string `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password string `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn string `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 string `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 string `pulumi:"prefixListInVpnv4"`
	// Inbound filter for VPNv6 updates from this neighbor.
	PrefixListInVpnv6 string `pulumi:"prefixListInVpnv6"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut string `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 string `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 string `pulumi:"prefixListOutVpnv4"`
	// Outbound filter for VPNv6 updates to this neighbor.
	PrefixListOutVpnv6 string `pulumi:"prefixListOutVpnv6"`
	// AS number of neighbor.
	RemoteAs int `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates.
	RemovePrivateAs string `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates.
	RemovePrivateAs6 string `pulumi:"removePrivateAs6"`
	// Enable/disable removing private AS number from L2VPN EVPN outbound updates.
	RemovePrivateAsEvpn string `pulumi:"removePrivateAsEvpn"`
	// Enable/disable remove private AS number from VPNv4 outbound updates.
	RemovePrivateAsVpnv4 string `pulumi:"removePrivateAsVpnv4"`
	// Enable/disable to remove private AS number from VPNv6 outbound updates.
	RemovePrivateAsVpnv6 string `pulumi:"removePrivateAsVpnv6"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime int `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime int `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn string `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 string `pulumi:"routeMapIn6"`
	// L2VPN EVPN inbound route map filter.
	RouteMapInEvpn string `pulumi:"routeMapInEvpn"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 string `pulumi:"routeMapInVpnv4"`
	// VPNv6 inbound route map filter.
	RouteMapInVpnv6 string `pulumi:"routeMapInVpnv6"`
	// IPv4 Outbound route map filter.
	RouteMapOut string `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 string `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable string `pulumi:"routeMapOut6Preferable"`
	// L2VPN EVPN outbound route map filter.
	RouteMapOutEvpn string `pulumi:"routeMapOutEvpn"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable string `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 string `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable string `pulumi:"routeMapOutVpnv4Preferable"`
	// VPNv6 outbound route map filter.
	RouteMapOutVpnv6 string `pulumi:"routeMapOutVpnv6"`
	// VPNv6 outbound route map filter if this neighbor is preferred.
	RouteMapOutVpnv6Preferable string `pulumi:"routeMapOutVpnv6Preferable"`
	// Enable/disable IPv4 AS route reflector client.
	RouteReflectorClient string `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client.
	RouteReflectorClient6 string `pulumi:"routeReflectorClient6"`
	// Enable/disable L2VPN EVPN AS route reflector client for this neighbor.
	RouteReflectorClientEvpn string `pulumi:"routeReflectorClientEvpn"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv4 string `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable VPNv6 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv6 string `pulumi:"routeReflectorClientVpnv6"`
	// Enable/disable IPv4 AS route server client.
	RouteServerClient string `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client.
	RouteServerClient6 string `pulumi:"routeServerClient6"`
	// Enable/disable L2VPN EVPN AS route server client for this neighbor.
	RouteServerClientEvpn string `pulumi:"routeServerClientEvpn"`
	// Enable/disable VPNv4 AS route server client for this neighbor.
	RouteServerClientVpnv4 string `pulumi:"routeServerClientVpnv4"`
	// Enable/disable VPNv6 AS route server client for this neighbor.
	RouteServerClientVpnv6 string `pulumi:"routeServerClientVpnv6"`
	// IPv4 Send community attribute to neighbor.
	SendCommunity string `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor.
	SendCommunity6 string `pulumi:"sendCommunity6"`
	// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family.
	SendCommunityEvpn string `pulumi:"sendCommunityEvpn"`
	// Send community attribute to neighbor for VPNv4 address family.
	SendCommunityVpnv4 string `pulumi:"sendCommunityVpnv4"`
	// Enable/disable sending community attribute to this neighbor for VPNv6 address family.
	SendCommunityVpnv6 string `pulumi:"sendCommunityVpnv6"`
	// Enable/disable shutdown this neighbor.
	Shutdown string `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration.
	SoftReconfiguration string `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration.
	SoftReconfiguration6 string `pulumi:"softReconfiguration6"`
	// Enable/disable L2VPN EVPN inbound soft reconfiguration.
	SoftReconfigurationEvpn string `pulumi:"softReconfigurationEvpn"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration.
	SoftReconfigurationVpnv4 string `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable VPNv6 inbound soft reconfiguration.
	SoftReconfigurationVpnv6 string `pulumi:"softReconfigurationVpnv6"`
	// Enable/disable stale route after neighbor down.
	StaleRoute string `pulumi:"staleRoute"`
	// Enable/disable strict capability matching.
	StrictCapabilityMatch string `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap string `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 string `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource string `pulumi:"updateSource"`
	// Neighbor weight.
	Weight int `pulumi:"weight"`
}

// GetBgpNeighborGroupInput is an input type that accepts GetBgpNeighborGroupArgs and GetBgpNeighborGroupOutput values.
// You can construct a concrete instance of `GetBgpNeighborGroupInput` via:
//
//	GetBgpNeighborGroupArgs{...}
type GetBgpNeighborGroupInput interface {
	pulumi.Input

	ToGetBgpNeighborGroupOutput() GetBgpNeighborGroupOutput
	ToGetBgpNeighborGroupOutputWithContext(context.Context) GetBgpNeighborGroupOutput
}

type GetBgpNeighborGroupArgs struct {
	// Enable/disable address family IPv4 for this neighbor.
	Activate pulumi.StringInput `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor.
	Activate6 pulumi.StringInput `pulumi:"activate6"`
	// Enable/disable address family L2VPN EVPN for this neighbor.
	ActivateEvpn pulumi.StringInput `pulumi:"activateEvpn"`
	// Enable/disable address family VPNv4 for this neighbor.
	ActivateVpnv4 pulumi.StringInput `pulumi:"activateVpnv4"`
	// Enable/disable address family VPNv6 for this neighbor.
	ActivateVpnv6 pulumi.StringInput `pulumi:"activateVpnv6"`
	// Enable/disable IPv4 additional-path capability.
	AdditionalPath pulumi.StringInput `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability.
	AdditionalPath6 pulumi.StringInput `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability.
	AdditionalPathVpnv4 pulumi.StringInput `pulumi:"additionalPathVpnv4"`
	// Enable/disable VPNv6 additional-path capability.
	AdditionalPathVpnv6 pulumi.StringInput `pulumi:"additionalPathVpnv6"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath pulumi.IntInput `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 pulumi.IntInput `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 pulumi.IntInput `pulumi:"advAdditionalPathVpnv4"`
	// Number of VPNv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv6 pulumi.IntInput `pulumi:"advAdditionalPathVpnv6"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval pulumi.IntInput `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn pulumi.IntInput `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 pulumi.IntInput `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path.
	AllowasInEnable pulumi.StringInput `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path.
	AllowasInEnable6 pulumi.StringInput `pulumi:"allowasInEnable6"`
	// Enable/disable to allow my AS in AS path for L2VPN EVPN route.
	AllowasInEnableEvpn pulumi.StringInput `pulumi:"allowasInEnableEvpn"`
	// Enable/disable to allow my AS in AS path for VPNv4 route.
	AllowasInEnableVpnv4 pulumi.StringInput `pulumi:"allowasInEnableVpnv4"`
	// Enable/disable use of my AS in AS path for VPNv6 route.
	AllowasInEnableVpnv6 pulumi.StringInput `pulumi:"allowasInEnableVpnv6"`
	// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
	AllowasInEvpn pulumi.IntInput `pulumi:"allowasInEvpn"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 pulumi.IntInput `pulumi:"allowasInVpnv4"`
	// The maximum number of occurrence of my AS number allowed for VPNv6 route.
	AllowasInVpnv6 pulumi.IntInput `pulumi:"allowasInVpnv6"`
	// Enable/disable replace peer AS with own AS for IPv4.
	AsOverride pulumi.StringInput `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6.
	AsOverride6 pulumi.StringInput `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged.
	AttributeUnchanged pulumi.StringInput `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged.
	AttributeUnchanged6 pulumi.StringInput `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route.
	AttributeUnchangedVpnv4 pulumi.StringInput `pulumi:"attributeUnchangedVpnv4"`
	// List of attributes that should not be changed for VPNv6 route.
	AttributeUnchangedVpnv6 pulumi.StringInput `pulumi:"attributeUnchangedVpnv6"`
	// Key-chain name for TCP authentication options.
	AuthOptions pulumi.StringInput `pulumi:"authOptions"`
	// Enable/disable BFD for this neighbor.
	Bfd pulumi.StringInput `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor.
	CapabilityDefaultOriginate pulumi.StringInput `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor.
	CapabilityDefaultOriginate6 pulumi.StringInput `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor.
	CapabilityDynamic pulumi.StringInput `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestart pulumi.StringInput `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestart6 pulumi.StringInput `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor.
	CapabilityGracefulRestartEvpn pulumi.StringInput `pulumi:"capabilityGracefulRestartEvpn"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv4 pulumi.StringInput `pulumi:"capabilityGracefulRestartVpnv4"`
	// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor.
	CapabilityGracefulRestartVpnv6 pulumi.StringInput `pulumi:"capabilityGracefulRestartVpnv6"`
	// Accept/Send IPv4 ORF lists to/from this neighbor.
	CapabilityOrf pulumi.StringInput `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor.
	CapabilityOrf6 pulumi.StringInput `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor.
	CapabilityRouteRefresh pulumi.StringInput `pulumi:"capabilityRouteRefresh"`
	// Interval (sec) for connect timer.
	ConnectTimer pulumi.IntInput `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap pulumi.StringInput `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 pulumi.StringInput `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn pulumi.StringInput `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 pulumi.StringInput `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 pulumi.StringInput `pulumi:"distributeListInVpnv4"`
	// Filter for VPNv6 updates from this neighbor.
	DistributeListInVpnv6 pulumi.StringInput `pulumi:"distributeListInVpnv6"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut pulumi.StringInput `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 pulumi.StringInput `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 pulumi.StringInput `pulumi:"distributeListOutVpnv4"`
	// Filter for VPNv6 updates to this neighbor.
	DistributeListOutVpnv6 pulumi.StringInput `pulumi:"distributeListOutVpnv6"`
	// Don't negotiate capabilities with this neighbor
	DontCapabilityNegotiate pulumi.StringInput `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors.
	EbgpEnforceMultihop pulumi.StringInput `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl pulumi.IntInput `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn pulumi.StringInput `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 pulumi.StringInput `pulumi:"filterListIn6"`
	// BGP filter for VPNv4 inbound routes.
	FilterListInVpnv4 pulumi.StringInput `pulumi:"filterListInVpnv4"`
	// BGP filter for VPNv6 inbound routes.
	FilterListInVpnv6 pulumi.StringInput `pulumi:"filterListInVpnv6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut pulumi.StringInput `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 pulumi.StringInput `pulumi:"filterListOut6"`
	// BGP filter for VPNv4 outbound routes.
	FilterListOutVpnv4 pulumi.StringInput `pulumi:"filterListOutVpnv4"`
	// BGP filter for VPNv6 outbound routes.
	FilterListOutVpnv6 pulumi.StringInput `pulumi:"filterListOutVpnv6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer pulumi.IntInput `pulumi:"holdtimeTimer"`
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Keep alive timer interval (sec).
	KeepAliveTimer pulumi.IntInput `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down.
	LinkDownFailover pulumi.StringInput `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs pulumi.IntInput `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates.
	LocalAsNoPrepend pulumi.StringInput `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates.
	LocalAsReplaceAs pulumi.StringInput `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix pulumi.IntInput `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 pulumi.IntInput `pulumi:"maximumPrefix6"`
	// Maximum number of L2VPN EVPN prefixes to accept from this peer.
	MaximumPrefixEvpn pulumi.IntInput `pulumi:"maximumPrefixEvpn"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold pulumi.IntInput `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 pulumi.IntInput `pulumi:"maximumPrefixThreshold6"`
	// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdEvpn pulumi.IntInput `pulumi:"maximumPrefixThresholdEvpn"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 pulumi.IntInput `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum VPNv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv6 pulumi.IntInput `pulumi:"maximumPrefixThresholdVpnv6"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 pulumi.IntInput `pulumi:"maximumPrefixVpnv4"`
	// Maximum number of VPNv6 prefixes to accept from this peer.
	MaximumPrefixVpnv6 pulumi.IntInput `pulumi:"maximumPrefixVpnv6"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly pulumi.StringInput `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded.
	MaximumPrefixWarningOnly6 pulumi.StringInput `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes.
	MaximumPrefixWarningOnlyEvpn pulumi.StringInput `pulumi:"maximumPrefixWarningOnlyEvpn"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
	MaximumPrefixWarningOnlyVpnv4 pulumi.StringInput `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable warning message when limit is exceeded for VPNv6 routes.
	MaximumPrefixWarningOnlyVpnv6 pulumi.StringInput `pulumi:"maximumPrefixWarningOnlyVpnv6"`
	// Distribute list entry name.
	Name pulumi.StringInput `pulumi:"name"`
	// Enable/disable IPv4 next-hop calculation for this neighbor.
	NextHopSelf pulumi.StringInput `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor.
	NextHopSelf6 pulumi.StringInput `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
	NextHopSelfRr pulumi.StringInput `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
	NextHopSelfRr6 pulumi.StringInput `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
	NextHopSelfVpnv4 pulumi.StringInput `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor.
	NextHopSelfVpnv6 pulumi.StringInput `pulumi:"nextHopSelfVpnv6"`
	// Enable/disable override result of capability negotiation.
	OverrideCapability pulumi.StringInput `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor.
	Passive pulumi.StringInput `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password pulumi.StringInput `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn pulumi.StringInput `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 pulumi.StringInput `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 pulumi.StringInput `pulumi:"prefixListInVpnv4"`
	// Inbound filter for VPNv6 updates from this neighbor.
	PrefixListInVpnv6 pulumi.StringInput `pulumi:"prefixListInVpnv6"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut pulumi.StringInput `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 pulumi.StringInput `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 pulumi.StringInput `pulumi:"prefixListOutVpnv4"`
	// Outbound filter for VPNv6 updates to this neighbor.
	PrefixListOutVpnv6 pulumi.StringInput `pulumi:"prefixListOutVpnv6"`
	// AS number of neighbor.
	RemoteAs pulumi.IntInput `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates.
	RemovePrivateAs pulumi.StringInput `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates.
	RemovePrivateAs6 pulumi.StringInput `pulumi:"removePrivateAs6"`
	// Enable/disable removing private AS number from L2VPN EVPN outbound updates.
	RemovePrivateAsEvpn pulumi.StringInput `pulumi:"removePrivateAsEvpn"`
	// Enable/disable remove private AS number from VPNv4 outbound updates.
	RemovePrivateAsVpnv4 pulumi.StringInput `pulumi:"removePrivateAsVpnv4"`
	// Enable/disable to remove private AS number from VPNv6 outbound updates.
	RemovePrivateAsVpnv6 pulumi.StringInput `pulumi:"removePrivateAsVpnv6"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime pulumi.IntInput `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime pulumi.IntInput `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn pulumi.StringInput `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 pulumi.StringInput `pulumi:"routeMapIn6"`
	// L2VPN EVPN inbound route map filter.
	RouteMapInEvpn pulumi.StringInput `pulumi:"routeMapInEvpn"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 pulumi.StringInput `pulumi:"routeMapInVpnv4"`
	// VPNv6 inbound route map filter.
	RouteMapInVpnv6 pulumi.StringInput `pulumi:"routeMapInVpnv6"`
	// IPv4 Outbound route map filter.
	RouteMapOut pulumi.StringInput `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 pulumi.StringInput `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable pulumi.StringInput `pulumi:"routeMapOut6Preferable"`
	// L2VPN EVPN outbound route map filter.
	RouteMapOutEvpn pulumi.StringInput `pulumi:"routeMapOutEvpn"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable pulumi.StringInput `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 pulumi.StringInput `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable pulumi.StringInput `pulumi:"routeMapOutVpnv4Preferable"`
	// VPNv6 outbound route map filter.
	RouteMapOutVpnv6 pulumi.StringInput `pulumi:"routeMapOutVpnv6"`
	// VPNv6 outbound route map filter if this neighbor is preferred.
	RouteMapOutVpnv6Preferable pulumi.StringInput `pulumi:"routeMapOutVpnv6Preferable"`
	// Enable/disable IPv4 AS route reflector client.
	RouteReflectorClient pulumi.StringInput `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client.
	RouteReflectorClient6 pulumi.StringInput `pulumi:"routeReflectorClient6"`
	// Enable/disable L2VPN EVPN AS route reflector client for this neighbor.
	RouteReflectorClientEvpn pulumi.StringInput `pulumi:"routeReflectorClientEvpn"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv4 pulumi.StringInput `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable VPNv6 AS route reflector client for this neighbor.
	RouteReflectorClientVpnv6 pulumi.StringInput `pulumi:"routeReflectorClientVpnv6"`
	// Enable/disable IPv4 AS route server client.
	RouteServerClient pulumi.StringInput `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client.
	RouteServerClient6 pulumi.StringInput `pulumi:"routeServerClient6"`
	// Enable/disable L2VPN EVPN AS route server client for this neighbor.
	RouteServerClientEvpn pulumi.StringInput `pulumi:"routeServerClientEvpn"`
	// Enable/disable VPNv4 AS route server client for this neighbor.
	RouteServerClientVpnv4 pulumi.StringInput `pulumi:"routeServerClientVpnv4"`
	// Enable/disable VPNv6 AS route server client for this neighbor.
	RouteServerClientVpnv6 pulumi.StringInput `pulumi:"routeServerClientVpnv6"`
	// IPv4 Send community attribute to neighbor.
	SendCommunity pulumi.StringInput `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor.
	SendCommunity6 pulumi.StringInput `pulumi:"sendCommunity6"`
	// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family.
	SendCommunityEvpn pulumi.StringInput `pulumi:"sendCommunityEvpn"`
	// Send community attribute to neighbor for VPNv4 address family.
	SendCommunityVpnv4 pulumi.StringInput `pulumi:"sendCommunityVpnv4"`
	// Enable/disable sending community attribute to this neighbor for VPNv6 address family.
	SendCommunityVpnv6 pulumi.StringInput `pulumi:"sendCommunityVpnv6"`
	// Enable/disable shutdown this neighbor.
	Shutdown pulumi.StringInput `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration.
	SoftReconfiguration pulumi.StringInput `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration.
	SoftReconfiguration6 pulumi.StringInput `pulumi:"softReconfiguration6"`
	// Enable/disable L2VPN EVPN inbound soft reconfiguration.
	SoftReconfigurationEvpn pulumi.StringInput `pulumi:"softReconfigurationEvpn"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration.
	SoftReconfigurationVpnv4 pulumi.StringInput `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable VPNv6 inbound soft reconfiguration.
	SoftReconfigurationVpnv6 pulumi.StringInput `pulumi:"softReconfigurationVpnv6"`
	// Enable/disable stale route after neighbor down.
	StaleRoute pulumi.StringInput `pulumi:"staleRoute"`
	// Enable/disable strict capability matching.
	StrictCapabilityMatch pulumi.StringInput `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap pulumi.StringInput `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 pulumi.StringInput `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource pulumi.StringInput `pulumi:"updateSource"`
	// Neighbor weight.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetBgpNeighborGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighborGroup)(nil)).Elem()
}

func (i GetBgpNeighborGroupArgs) ToGetBgpNeighborGroupOutput() GetBgpNeighborGroupOutput {
	return i.ToGetBgpNeighborGroupOutputWithContext(context.Background())
}

func (i GetBgpNeighborGroupArgs) ToGetBgpNeighborGroupOutputWithContext(ctx context.Context) GetBgpNeighborGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborGroupOutput)
}

// GetBgpNeighborGroupArrayInput is an input type that accepts GetBgpNeighborGroupArray and GetBgpNeighborGroupArrayOutput values.
// You can construct a concrete instance of `GetBgpNeighborGroupArrayInput` via:
//
//	GetBgpNeighborGroupArray{ GetBgpNeighborGroupArgs{...} }
type GetBgpNeighborGroupArrayInput interface {
	pulumi.Input

	ToGetBgpNeighborGroupArrayOutput() GetBgpNeighborGroupArrayOutput
	ToGetBgpNeighborGroupArrayOutputWithContext(context.Context) GetBgpNeighborGroupArrayOutput
}

type GetBgpNeighborGroupArray []GetBgpNeighborGroupInput

func (GetBgpNeighborGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighborGroup)(nil)).Elem()
}

func (i GetBgpNeighborGroupArray) ToGetBgpNeighborGroupArrayOutput() GetBgpNeighborGroupArrayOutput {
	return i.ToGetBgpNeighborGroupArrayOutputWithContext(context.Background())
}

func (i GetBgpNeighborGroupArray) ToGetBgpNeighborGroupArrayOutputWithContext(ctx context.Context) GetBgpNeighborGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborGroupArrayOutput)
}

type GetBgpNeighborGroupOutput struct{ *pulumi.OutputState }

func (GetBgpNeighborGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighborGroup)(nil)).Elem()
}

func (o GetBgpNeighborGroupOutput) ToGetBgpNeighborGroupOutput() GetBgpNeighborGroupOutput {
	return o
}

func (o GetBgpNeighborGroupOutput) ToGetBgpNeighborGroupOutputWithContext(ctx context.Context) GetBgpNeighborGroupOutput {
	return o
}

// Enable/disable address family IPv4 for this neighbor.
func (o GetBgpNeighborGroupOutput) Activate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.Activate }).(pulumi.StringOutput)
}

// Enable/disable address family IPv6 for this neighbor.
func (o GetBgpNeighborGroupOutput) Activate6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.Activate6 }).(pulumi.StringOutput)
}

// Enable/disable address family L2VPN EVPN for this neighbor.
func (o GetBgpNeighborGroupOutput) ActivateEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.ActivateEvpn }).(pulumi.StringOutput)
}

// Enable/disable address family VPNv4 for this neighbor.
func (o GetBgpNeighborGroupOutput) ActivateVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.ActivateVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable address family VPNv6 for this neighbor.
func (o GetBgpNeighborGroupOutput) ActivateVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.ActivateVpnv6 }).(pulumi.StringOutput)
}

// Enable/disable IPv4 additional-path capability.
func (o GetBgpNeighborGroupOutput) AdditionalPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AdditionalPath }).(pulumi.StringOutput)
}

// Enable/disable IPv6 additional-path capability.
func (o GetBgpNeighborGroupOutput) AdditionalPath6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AdditionalPath6 }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 additional-path capability.
func (o GetBgpNeighborGroupOutput) AdditionalPathVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AdditionalPathVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable VPNv6 additional-path capability.
func (o GetBgpNeighborGroupOutput) AdditionalPathVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AdditionalPathVpnv6 }).(pulumi.StringOutput)
}

// Number of IPv4 additional paths that can be advertised to this neighbor.
func (o GetBgpNeighborGroupOutput) AdvAdditionalPath() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.AdvAdditionalPath }).(pulumi.IntOutput)
}

// Number of IPv6 additional paths that can be advertised to this neighbor.
func (o GetBgpNeighborGroupOutput) AdvAdditionalPath6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.AdvAdditionalPath6 }).(pulumi.IntOutput)
}

// Number of VPNv4 additional paths that can be advertised to this neighbor.
func (o GetBgpNeighborGroupOutput) AdvAdditionalPathVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.AdvAdditionalPathVpnv4 }).(pulumi.IntOutput)
}

// Number of VPNv6 additional paths that can be advertised to this neighbor.
func (o GetBgpNeighborGroupOutput) AdvAdditionalPathVpnv6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.AdvAdditionalPathVpnv6 }).(pulumi.IntOutput)
}

// Minimum interval (sec) between sending updates.
func (o GetBgpNeighborGroupOutput) AdvertisementInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.AdvertisementInterval }).(pulumi.IntOutput)
}

// IPv4 The maximum number of occurrence of my AS number allowed.
func (o GetBgpNeighborGroupOutput) AllowasIn() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.AllowasIn }).(pulumi.IntOutput)
}

// IPv6 The maximum number of occurrence of my AS number allowed.
func (o GetBgpNeighborGroupOutput) AllowasIn6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.AllowasIn6 }).(pulumi.IntOutput)
}

// Enable/disable IPv4 Enable to allow my AS in AS path.
func (o GetBgpNeighborGroupOutput) AllowasInEnable() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AllowasInEnable }).(pulumi.StringOutput)
}

// Enable/disable IPv6 Enable to allow my AS in AS path.
func (o GetBgpNeighborGroupOutput) AllowasInEnable6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AllowasInEnable6 }).(pulumi.StringOutput)
}

// Enable/disable to allow my AS in AS path for L2VPN EVPN route.
func (o GetBgpNeighborGroupOutput) AllowasInEnableEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AllowasInEnableEvpn }).(pulumi.StringOutput)
}

// Enable/disable to allow my AS in AS path for VPNv4 route.
func (o GetBgpNeighborGroupOutput) AllowasInEnableVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AllowasInEnableVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable use of my AS in AS path for VPNv6 route.
func (o GetBgpNeighborGroupOutput) AllowasInEnableVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AllowasInEnableVpnv6 }).(pulumi.StringOutput)
}

// The maximum number of occurrence of my AS number allowed for L2VPN EVPN route.
func (o GetBgpNeighborGroupOutput) AllowasInEvpn() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.AllowasInEvpn }).(pulumi.IntOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv4 route.
func (o GetBgpNeighborGroupOutput) AllowasInVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.AllowasInVpnv4 }).(pulumi.IntOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv6 route.
func (o GetBgpNeighborGroupOutput) AllowasInVpnv6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.AllowasInVpnv6 }).(pulumi.IntOutput)
}

// Enable/disable replace peer AS with own AS for IPv4.
func (o GetBgpNeighborGroupOutput) AsOverride() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AsOverride }).(pulumi.StringOutput)
}

// Enable/disable replace peer AS with own AS for IPv6.
func (o GetBgpNeighborGroupOutput) AsOverride6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AsOverride6 }).(pulumi.StringOutput)
}

// IPv4 List of attributes that should be unchanged.
func (o GetBgpNeighborGroupOutput) AttributeUnchanged() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AttributeUnchanged }).(pulumi.StringOutput)
}

// IPv6 List of attributes that should be unchanged.
func (o GetBgpNeighborGroupOutput) AttributeUnchanged6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AttributeUnchanged6 }).(pulumi.StringOutput)
}

// List of attributes that should be unchanged for VPNv4 route.
func (o GetBgpNeighborGroupOutput) AttributeUnchangedVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AttributeUnchangedVpnv4 }).(pulumi.StringOutput)
}

// List of attributes that should not be changed for VPNv6 route.
func (o GetBgpNeighborGroupOutput) AttributeUnchangedVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AttributeUnchangedVpnv6 }).(pulumi.StringOutput)
}

// Key-chain name for TCP authentication options.
func (o GetBgpNeighborGroupOutput) AuthOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.AuthOptions }).(pulumi.StringOutput)
}

// Enable/disable BFD for this neighbor.
func (o GetBgpNeighborGroupOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.Bfd }).(pulumi.StringOutput)
}

// Enable/disable advertise default IPv4 route to this neighbor.
func (o GetBgpNeighborGroupOutput) CapabilityDefaultOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.CapabilityDefaultOriginate }).(pulumi.StringOutput)
}

// Enable/disable advertise default IPv6 route to this neighbor.
func (o GetBgpNeighborGroupOutput) CapabilityDefaultOriginate6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.CapabilityDefaultOriginate6 }).(pulumi.StringOutput)
}

// Enable/disable advertise dynamic capability to this neighbor.
func (o GetBgpNeighborGroupOutput) CapabilityDynamic() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.CapabilityDynamic }).(pulumi.StringOutput)
}

// Enable/disable advertise IPv4 graceful restart capability to this neighbor.
func (o GetBgpNeighborGroupOutput) CapabilityGracefulRestart() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.CapabilityGracefulRestart }).(pulumi.StringOutput)
}

// Enable/disable advertise IPv6 graceful restart capability to this neighbor.
func (o GetBgpNeighborGroupOutput) CapabilityGracefulRestart6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.CapabilityGracefulRestart6 }).(pulumi.StringOutput)
}

// Enable/disable advertisement of L2VPN EVPN graceful restart capability to this neighbor.
func (o GetBgpNeighborGroupOutput) CapabilityGracefulRestartEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.CapabilityGracefulRestartEvpn }).(pulumi.StringOutput)
}

// Enable/disable advertise VPNv4 graceful restart capability to this neighbor.
func (o GetBgpNeighborGroupOutput) CapabilityGracefulRestartVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.CapabilityGracefulRestartVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable advertisement of VPNv6 graceful restart capability to this neighbor.
func (o GetBgpNeighborGroupOutput) CapabilityGracefulRestartVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.CapabilityGracefulRestartVpnv6 }).(pulumi.StringOutput)
}

// Accept/Send IPv4 ORF lists to/from this neighbor.
func (o GetBgpNeighborGroupOutput) CapabilityOrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.CapabilityOrf }).(pulumi.StringOutput)
}

// Accept/Send IPv6 ORF lists to/from this neighbor.
func (o GetBgpNeighborGroupOutput) CapabilityOrf6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.CapabilityOrf6 }).(pulumi.StringOutput)
}

// Enable/disable advertise route refresh capability to this neighbor.
func (o GetBgpNeighborGroupOutput) CapabilityRouteRefresh() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.CapabilityRouteRefresh }).(pulumi.StringOutput)
}

// Interval (sec) for connect timer.
func (o GetBgpNeighborGroupOutput) ConnectTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.ConnectTimer }).(pulumi.IntOutput)
}

// Route map to specify criteria to originate IPv4 default.
func (o GetBgpNeighborGroupOutput) DefaultOriginateRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.DefaultOriginateRoutemap }).(pulumi.StringOutput)
}

// Route map to specify criteria to originate IPv6 default.
func (o GetBgpNeighborGroupOutput) DefaultOriginateRoutemap6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.DefaultOriginateRoutemap6 }).(pulumi.StringOutput)
}

// Description.
func (o GetBgpNeighborGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.Description }).(pulumi.StringOutput)
}

// Filter for IPv4 updates from this neighbor.
func (o GetBgpNeighborGroupOutput) DistributeListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.DistributeListIn }).(pulumi.StringOutput)
}

// Filter for IPv6 updates from this neighbor.
func (o GetBgpNeighborGroupOutput) DistributeListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.DistributeListIn6 }).(pulumi.StringOutput)
}

// Filter for VPNv4 updates from this neighbor.
func (o GetBgpNeighborGroupOutput) DistributeListInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.DistributeListInVpnv4 }).(pulumi.StringOutput)
}

// Filter for VPNv6 updates from this neighbor.
func (o GetBgpNeighborGroupOutput) DistributeListInVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.DistributeListInVpnv6 }).(pulumi.StringOutput)
}

// Filter for IPv4 updates to this neighbor.
func (o GetBgpNeighborGroupOutput) DistributeListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.DistributeListOut }).(pulumi.StringOutput)
}

// Filter for IPv6 updates to this neighbor.
func (o GetBgpNeighborGroupOutput) DistributeListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.DistributeListOut6 }).(pulumi.StringOutput)
}

// Filter for VPNv4 updates to this neighbor.
func (o GetBgpNeighborGroupOutput) DistributeListOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.DistributeListOutVpnv4 }).(pulumi.StringOutput)
}

// Filter for VPNv6 updates to this neighbor.
func (o GetBgpNeighborGroupOutput) DistributeListOutVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.DistributeListOutVpnv6 }).(pulumi.StringOutput)
}

// Don't negotiate capabilities with this neighbor
func (o GetBgpNeighborGroupOutput) DontCapabilityNegotiate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.DontCapabilityNegotiate }).(pulumi.StringOutput)
}

// Enable/disable allow multi-hop EBGP neighbors.
func (o GetBgpNeighborGroupOutput) EbgpEnforceMultihop() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.EbgpEnforceMultihop }).(pulumi.StringOutput)
}

// EBGP multihop TTL for this peer.
func (o GetBgpNeighborGroupOutput) EbgpMultihopTtl() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.EbgpMultihopTtl }).(pulumi.IntOutput)
}

// BGP filter for IPv4 inbound routes.
func (o GetBgpNeighborGroupOutput) FilterListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.FilterListIn }).(pulumi.StringOutput)
}

// BGP filter for IPv6 inbound routes.
func (o GetBgpNeighborGroupOutput) FilterListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.FilterListIn6 }).(pulumi.StringOutput)
}

// BGP filter for VPNv4 inbound routes.
func (o GetBgpNeighborGroupOutput) FilterListInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.FilterListInVpnv4 }).(pulumi.StringOutput)
}

// BGP filter for VPNv6 inbound routes.
func (o GetBgpNeighborGroupOutput) FilterListInVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.FilterListInVpnv6 }).(pulumi.StringOutput)
}

// BGP filter for IPv4 outbound routes.
func (o GetBgpNeighborGroupOutput) FilterListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.FilterListOut }).(pulumi.StringOutput)
}

// BGP filter for IPv6 outbound routes.
func (o GetBgpNeighborGroupOutput) FilterListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.FilterListOut6 }).(pulumi.StringOutput)
}

// BGP filter for VPNv4 outbound routes.
func (o GetBgpNeighborGroupOutput) FilterListOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.FilterListOutVpnv4 }).(pulumi.StringOutput)
}

// BGP filter for VPNv6 outbound routes.
func (o GetBgpNeighborGroupOutput) FilterListOutVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.FilterListOutVpnv6 }).(pulumi.StringOutput)
}

// Interval (sec) before peer considered dead.
func (o GetBgpNeighborGroupOutput) HoldtimeTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.HoldtimeTimer }).(pulumi.IntOutput)
}

// Interface which is used to leak routes to target VRF.
func (o GetBgpNeighborGroupOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.Interface }).(pulumi.StringOutput)
}

// Keep alive timer interval (sec).
func (o GetBgpNeighborGroupOutput) KeepAliveTimer() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.KeepAliveTimer }).(pulumi.IntOutput)
}

// Enable/disable failover upon link down.
func (o GetBgpNeighborGroupOutput) LinkDownFailover() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.LinkDownFailover }).(pulumi.StringOutput)
}

// Local AS number of neighbor.
func (o GetBgpNeighborGroupOutput) LocalAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.LocalAs }).(pulumi.IntOutput)
}

// Do not prepend local-as to incoming updates.
func (o GetBgpNeighborGroupOutput) LocalAsNoPrepend() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.LocalAsNoPrepend }).(pulumi.StringOutput)
}

// Replace real AS with local-as in outgoing updates.
func (o GetBgpNeighborGroupOutput) LocalAsReplaceAs() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.LocalAsReplaceAs }).(pulumi.StringOutput)
}

// Maximum number of IPv4 prefixes to accept from this peer.
func (o GetBgpNeighborGroupOutput) MaximumPrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.MaximumPrefix }).(pulumi.IntOutput)
}

// Maximum number of IPv6 prefixes to accept from this peer.
func (o GetBgpNeighborGroupOutput) MaximumPrefix6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.MaximumPrefix6 }).(pulumi.IntOutput)
}

// Maximum number of L2VPN EVPN prefixes to accept from this peer.
func (o GetBgpNeighborGroupOutput) MaximumPrefixEvpn() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.MaximumPrefixEvpn }).(pulumi.IntOutput)
}

// Maximum IPv4 prefix threshold value (1 - 100 percent).
func (o GetBgpNeighborGroupOutput) MaximumPrefixThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.MaximumPrefixThreshold }).(pulumi.IntOutput)
}

// Maximum IPv6 prefix threshold value (1 - 100 percent).
func (o GetBgpNeighborGroupOutput) MaximumPrefixThreshold6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.MaximumPrefixThreshold6 }).(pulumi.IntOutput)
}

// Maximum L2VPN EVPN prefix threshold value (1 - 100 percent).
func (o GetBgpNeighborGroupOutput) MaximumPrefixThresholdEvpn() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.MaximumPrefixThresholdEvpn }).(pulumi.IntOutput)
}

// Maximum VPNv4 prefix threshold value (1 - 100 percent).
func (o GetBgpNeighborGroupOutput) MaximumPrefixThresholdVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.MaximumPrefixThresholdVpnv4 }).(pulumi.IntOutput)
}

// Maximum VPNv6 prefix threshold value (1 - 100 percent).
func (o GetBgpNeighborGroupOutput) MaximumPrefixThresholdVpnv6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.MaximumPrefixThresholdVpnv6 }).(pulumi.IntOutput)
}

// Maximum number of VPNv4 prefixes to accept from this peer.
func (o GetBgpNeighborGroupOutput) MaximumPrefixVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.MaximumPrefixVpnv4 }).(pulumi.IntOutput)
}

// Maximum number of VPNv6 prefixes to accept from this peer.
func (o GetBgpNeighborGroupOutput) MaximumPrefixVpnv6() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.MaximumPrefixVpnv6 }).(pulumi.IntOutput)
}

// Enable/disable IPv4 Only give warning message when limit is exceeded.
func (o GetBgpNeighborGroupOutput) MaximumPrefixWarningOnly() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.MaximumPrefixWarningOnly }).(pulumi.StringOutput)
}

// Enable/disable IPv6 Only give warning message when limit is exceeded.
func (o GetBgpNeighborGroupOutput) MaximumPrefixWarningOnly6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.MaximumPrefixWarningOnly6 }).(pulumi.StringOutput)
}

// Enable/disable only sending warning message when exceeding limit of L2VPN EVPN routes.
func (o GetBgpNeighborGroupOutput) MaximumPrefixWarningOnlyEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.MaximumPrefixWarningOnlyEvpn }).(pulumi.StringOutput)
}

// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes.
func (o GetBgpNeighborGroupOutput) MaximumPrefixWarningOnlyVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.MaximumPrefixWarningOnlyVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable warning message when limit is exceeded for VPNv6 routes.
func (o GetBgpNeighborGroupOutput) MaximumPrefixWarningOnlyVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.MaximumPrefixWarningOnlyVpnv6 }).(pulumi.StringOutput)
}

// Distribute list entry name.
func (o GetBgpNeighborGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable IPv4 next-hop calculation for this neighbor.
func (o GetBgpNeighborGroupOutput) NextHopSelf() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.NextHopSelf }).(pulumi.StringOutput)
}

// Enable/disable IPv6 next-hop calculation for this neighbor.
func (o GetBgpNeighborGroupOutput) NextHopSelf6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.NextHopSelf6 }).(pulumi.StringOutput)
}

// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.
func (o GetBgpNeighborGroupOutput) NextHopSelfRr() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.NextHopSelfRr }).(pulumi.StringOutput)
}

// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.
func (o GetBgpNeighborGroupOutput) NextHopSelfRr6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.NextHopSelfRr6 }).(pulumi.StringOutput)
}

// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor.
func (o GetBgpNeighborGroupOutput) NextHopSelfVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.NextHopSelfVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable use of outgoing interface's IP address as VPNv6 next-hop for this neighbor.
func (o GetBgpNeighborGroupOutput) NextHopSelfVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.NextHopSelfVpnv6 }).(pulumi.StringOutput)
}

// Enable/disable override result of capability negotiation.
func (o GetBgpNeighborGroupOutput) OverrideCapability() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.OverrideCapability }).(pulumi.StringOutput)
}

// Enable/disable sending of open messages to this neighbor.
func (o GetBgpNeighborGroupOutput) Passive() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.Passive }).(pulumi.StringOutput)
}

// Password used in MD5 authentication.
func (o GetBgpNeighborGroupOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.Password }).(pulumi.StringOutput)
}

// IPv4 Inbound filter for updates from this neighbor.
func (o GetBgpNeighborGroupOutput) PrefixListIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.PrefixListIn }).(pulumi.StringOutput)
}

// IPv6 Inbound filter for updates from this neighbor.
func (o GetBgpNeighborGroupOutput) PrefixListIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.PrefixListIn6 }).(pulumi.StringOutput)
}

// Inbound filter for VPNv4 updates from this neighbor.
func (o GetBgpNeighborGroupOutput) PrefixListInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.PrefixListInVpnv4 }).(pulumi.StringOutput)
}

// Inbound filter for VPNv6 updates from this neighbor.
func (o GetBgpNeighborGroupOutput) PrefixListInVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.PrefixListInVpnv6 }).(pulumi.StringOutput)
}

// IPv4 Outbound filter for updates to this neighbor.
func (o GetBgpNeighborGroupOutput) PrefixListOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.PrefixListOut }).(pulumi.StringOutput)
}

// IPv6 Outbound filter for updates to this neighbor.
func (o GetBgpNeighborGroupOutput) PrefixListOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.PrefixListOut6 }).(pulumi.StringOutput)
}

// Outbound filter for VPNv4 updates to this neighbor.
func (o GetBgpNeighborGroupOutput) PrefixListOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.PrefixListOutVpnv4 }).(pulumi.StringOutput)
}

// Outbound filter for VPNv6 updates to this neighbor.
func (o GetBgpNeighborGroupOutput) PrefixListOutVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.PrefixListOutVpnv6 }).(pulumi.StringOutput)
}

// AS number of neighbor.
func (o GetBgpNeighborGroupOutput) RemoteAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.RemoteAs }).(pulumi.IntOutput)
}

// Enable/disable remove private AS number from IPv4 outbound updates.
func (o GetBgpNeighborGroupOutput) RemovePrivateAs() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RemovePrivateAs }).(pulumi.StringOutput)
}

// Enable/disable remove private AS number from IPv6 outbound updates.
func (o GetBgpNeighborGroupOutput) RemovePrivateAs6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RemovePrivateAs6 }).(pulumi.StringOutput)
}

// Enable/disable removing private AS number from L2VPN EVPN outbound updates.
func (o GetBgpNeighborGroupOutput) RemovePrivateAsEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RemovePrivateAsEvpn }).(pulumi.StringOutput)
}

// Enable/disable remove private AS number from VPNv4 outbound updates.
func (o GetBgpNeighborGroupOutput) RemovePrivateAsVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RemovePrivateAsVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable to remove private AS number from VPNv6 outbound updates.
func (o GetBgpNeighborGroupOutput) RemovePrivateAsVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RemovePrivateAsVpnv6 }).(pulumi.StringOutput)
}

// Graceful restart delay time (sec, 0 = global default).
func (o GetBgpNeighborGroupOutput) RestartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.RestartTime }).(pulumi.IntOutput)
}

// Time to retain stale routes.
func (o GetBgpNeighborGroupOutput) RetainStaleTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.RetainStaleTime }).(pulumi.IntOutput)
}

// IPv4 Inbound route map filter.
func (o GetBgpNeighborGroupOutput) RouteMapIn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapIn }).(pulumi.StringOutput)
}

// IPv6 Inbound route map filter.
func (o GetBgpNeighborGroupOutput) RouteMapIn6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapIn6 }).(pulumi.StringOutput)
}

// L2VPN EVPN inbound route map filter.
func (o GetBgpNeighborGroupOutput) RouteMapInEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapInEvpn }).(pulumi.StringOutput)
}

// VPNv4 inbound route map filter.
func (o GetBgpNeighborGroupOutput) RouteMapInVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapInVpnv4 }).(pulumi.StringOutput)
}

// VPNv6 inbound route map filter.
func (o GetBgpNeighborGroupOutput) RouteMapInVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapInVpnv6 }).(pulumi.StringOutput)
}

// IPv4 Outbound route map filter.
func (o GetBgpNeighborGroupOutput) RouteMapOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapOut }).(pulumi.StringOutput)
}

// IPv6 Outbound route map filter.
func (o GetBgpNeighborGroupOutput) RouteMapOut6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapOut6 }).(pulumi.StringOutput)
}

// IPv6 outbound route map filter if the peer is preferred.
func (o GetBgpNeighborGroupOutput) RouteMapOut6Preferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapOut6Preferable }).(pulumi.StringOutput)
}

// L2VPN EVPN outbound route map filter.
func (o GetBgpNeighborGroupOutput) RouteMapOutEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapOutEvpn }).(pulumi.StringOutput)
}

// IPv4 outbound route map filter if the peer is preferred.
func (o GetBgpNeighborGroupOutput) RouteMapOutPreferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapOutPreferable }).(pulumi.StringOutput)
}

// VPNv4 outbound route map filter.
func (o GetBgpNeighborGroupOutput) RouteMapOutVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapOutVpnv4 }).(pulumi.StringOutput)
}

// VPNv4 outbound route map filter if the peer is preferred.
func (o GetBgpNeighborGroupOutput) RouteMapOutVpnv4Preferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapOutVpnv4Preferable }).(pulumi.StringOutput)
}

// VPNv6 outbound route map filter.
func (o GetBgpNeighborGroupOutput) RouteMapOutVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapOutVpnv6 }).(pulumi.StringOutput)
}

// VPNv6 outbound route map filter if this neighbor is preferred.
func (o GetBgpNeighborGroupOutput) RouteMapOutVpnv6Preferable() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteMapOutVpnv6Preferable }).(pulumi.StringOutput)
}

// Enable/disable IPv4 AS route reflector client.
func (o GetBgpNeighborGroupOutput) RouteReflectorClient() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteReflectorClient }).(pulumi.StringOutput)
}

// Enable/disable IPv6 AS route reflector client.
func (o GetBgpNeighborGroupOutput) RouteReflectorClient6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteReflectorClient6 }).(pulumi.StringOutput)
}

// Enable/disable L2VPN EVPN AS route reflector client for this neighbor.
func (o GetBgpNeighborGroupOutput) RouteReflectorClientEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteReflectorClientEvpn }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 AS route reflector client for this neighbor.
func (o GetBgpNeighborGroupOutput) RouteReflectorClientVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteReflectorClientVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable VPNv6 AS route reflector client for this neighbor.
func (o GetBgpNeighborGroupOutput) RouteReflectorClientVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteReflectorClientVpnv6 }).(pulumi.StringOutput)
}

// Enable/disable IPv4 AS route server client.
func (o GetBgpNeighborGroupOutput) RouteServerClient() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteServerClient }).(pulumi.StringOutput)
}

// Enable/disable IPv6 AS route server client.
func (o GetBgpNeighborGroupOutput) RouteServerClient6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteServerClient6 }).(pulumi.StringOutput)
}

// Enable/disable L2VPN EVPN AS route server client for this neighbor.
func (o GetBgpNeighborGroupOutput) RouteServerClientEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteServerClientEvpn }).(pulumi.StringOutput)
}

// Enable/disable VPNv4 AS route server client for this neighbor.
func (o GetBgpNeighborGroupOutput) RouteServerClientVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteServerClientVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable VPNv6 AS route server client for this neighbor.
func (o GetBgpNeighborGroupOutput) RouteServerClientVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.RouteServerClientVpnv6 }).(pulumi.StringOutput)
}

// IPv4 Send community attribute to neighbor.
func (o GetBgpNeighborGroupOutput) SendCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.SendCommunity }).(pulumi.StringOutput)
}

// IPv6 Send community attribute to neighbor.
func (o GetBgpNeighborGroupOutput) SendCommunity6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.SendCommunity6 }).(pulumi.StringOutput)
}

// Enable/disable sending community attribute to neighbor for L2VPN EVPN address family.
func (o GetBgpNeighborGroupOutput) SendCommunityEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.SendCommunityEvpn }).(pulumi.StringOutput)
}

// Send community attribute to neighbor for VPNv4 address family.
func (o GetBgpNeighborGroupOutput) SendCommunityVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.SendCommunityVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable sending community attribute to this neighbor for VPNv6 address family.
func (o GetBgpNeighborGroupOutput) SendCommunityVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.SendCommunityVpnv6 }).(pulumi.StringOutput)
}

// Enable/disable shutdown this neighbor.
func (o GetBgpNeighborGroupOutput) Shutdown() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.Shutdown }).(pulumi.StringOutput)
}

// Enable/disable allow IPv4 inbound soft reconfiguration.
func (o GetBgpNeighborGroupOutput) SoftReconfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.SoftReconfiguration }).(pulumi.StringOutput)
}

// Enable/disable allow IPv6 inbound soft reconfiguration.
func (o GetBgpNeighborGroupOutput) SoftReconfiguration6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.SoftReconfiguration6 }).(pulumi.StringOutput)
}

// Enable/disable L2VPN EVPN inbound soft reconfiguration.
func (o GetBgpNeighborGroupOutput) SoftReconfigurationEvpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.SoftReconfigurationEvpn }).(pulumi.StringOutput)
}

// Enable/disable allow VPNv4 inbound soft reconfiguration.
func (o GetBgpNeighborGroupOutput) SoftReconfigurationVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.SoftReconfigurationVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable VPNv6 inbound soft reconfiguration.
func (o GetBgpNeighborGroupOutput) SoftReconfigurationVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.SoftReconfigurationVpnv6 }).(pulumi.StringOutput)
}

// Enable/disable stale route after neighbor down.
func (o GetBgpNeighborGroupOutput) StaleRoute() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.StaleRoute }).(pulumi.StringOutput)
}

// Enable/disable strict capability matching.
func (o GetBgpNeighborGroupOutput) StrictCapabilityMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.StrictCapabilityMatch }).(pulumi.StringOutput)
}

// IPv4 Route map to selectively unsuppress suppressed routes.
func (o GetBgpNeighborGroupOutput) UnsuppressMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.UnsuppressMap }).(pulumi.StringOutput)
}

// IPv6 Route map to selectively unsuppress suppressed routes.
func (o GetBgpNeighborGroupOutput) UnsuppressMap6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.UnsuppressMap6 }).(pulumi.StringOutput)
}

// Interface to use as source IP/IPv6 address of TCP connections.
func (o GetBgpNeighborGroupOutput) UpdateSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) string { return v.UpdateSource }).(pulumi.StringOutput)
}

// Neighbor weight.
func (o GetBgpNeighborGroupOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborGroup) int { return v.Weight }).(pulumi.IntOutput)
}

type GetBgpNeighborGroupArrayOutput struct{ *pulumi.OutputState }

func (GetBgpNeighborGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighborGroup)(nil)).Elem()
}

func (o GetBgpNeighborGroupArrayOutput) ToGetBgpNeighborGroupArrayOutput() GetBgpNeighborGroupArrayOutput {
	return o
}

func (o GetBgpNeighborGroupArrayOutput) ToGetBgpNeighborGroupArrayOutputWithContext(ctx context.Context) GetBgpNeighborGroupArrayOutput {
	return o
}

func (o GetBgpNeighborGroupArrayOutput) Index(i pulumi.IntInput) GetBgpNeighborGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpNeighborGroup {
		return vs[0].([]GetBgpNeighborGroup)[vs[1].(int)]
	}).(GetBgpNeighborGroupOutput)
}

type GetBgpNeighborRange6 struct {
	// ID.
	Id int `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum int `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup string `pulumi:"neighborGroup"`
	// Network IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
}

// GetBgpNeighborRange6Input is an input type that accepts GetBgpNeighborRange6Args and GetBgpNeighborRange6Output values.
// You can construct a concrete instance of `GetBgpNeighborRange6Input` via:
//
//	GetBgpNeighborRange6Args{...}
type GetBgpNeighborRange6Input interface {
	pulumi.Input

	ToGetBgpNeighborRange6Output() GetBgpNeighborRange6Output
	ToGetBgpNeighborRange6OutputWithContext(context.Context) GetBgpNeighborRange6Output
}

type GetBgpNeighborRange6Args struct {
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum pulumi.IntInput `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup pulumi.StringInput `pulumi:"neighborGroup"`
	// Network IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetBgpNeighborRange6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighborRange6)(nil)).Elem()
}

func (i GetBgpNeighborRange6Args) ToGetBgpNeighborRange6Output() GetBgpNeighborRange6Output {
	return i.ToGetBgpNeighborRange6OutputWithContext(context.Background())
}

func (i GetBgpNeighborRange6Args) ToGetBgpNeighborRange6OutputWithContext(ctx context.Context) GetBgpNeighborRange6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborRange6Output)
}

// GetBgpNeighborRange6ArrayInput is an input type that accepts GetBgpNeighborRange6Array and GetBgpNeighborRange6ArrayOutput values.
// You can construct a concrete instance of `GetBgpNeighborRange6ArrayInput` via:
//
//	GetBgpNeighborRange6Array{ GetBgpNeighborRange6Args{...} }
type GetBgpNeighborRange6ArrayInput interface {
	pulumi.Input

	ToGetBgpNeighborRange6ArrayOutput() GetBgpNeighborRange6ArrayOutput
	ToGetBgpNeighborRange6ArrayOutputWithContext(context.Context) GetBgpNeighborRange6ArrayOutput
}

type GetBgpNeighborRange6Array []GetBgpNeighborRange6Input

func (GetBgpNeighborRange6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighborRange6)(nil)).Elem()
}

func (i GetBgpNeighborRange6Array) ToGetBgpNeighborRange6ArrayOutput() GetBgpNeighborRange6ArrayOutput {
	return i.ToGetBgpNeighborRange6ArrayOutputWithContext(context.Background())
}

func (i GetBgpNeighborRange6Array) ToGetBgpNeighborRange6ArrayOutputWithContext(ctx context.Context) GetBgpNeighborRange6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborRange6ArrayOutput)
}

type GetBgpNeighborRange6Output struct{ *pulumi.OutputState }

func (GetBgpNeighborRange6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighborRange6)(nil)).Elem()
}

func (o GetBgpNeighborRange6Output) ToGetBgpNeighborRange6Output() GetBgpNeighborRange6Output {
	return o
}

func (o GetBgpNeighborRange6Output) ToGetBgpNeighborRange6OutputWithContext(ctx context.Context) GetBgpNeighborRange6Output {
	return o
}

// ID.
func (o GetBgpNeighborRange6Output) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborRange6) int { return v.Id }).(pulumi.IntOutput)
}

// Maximum number of neighbors.
func (o GetBgpNeighborRange6Output) MaxNeighborNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborRange6) int { return v.MaxNeighborNum }).(pulumi.IntOutput)
}

// Neighbor group name.
func (o GetBgpNeighborRange6Output) NeighborGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborRange6) string { return v.NeighborGroup }).(pulumi.StringOutput)
}

// Network IPv6 prefix.
func (o GetBgpNeighborRange6Output) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborRange6) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetBgpNeighborRange6ArrayOutput struct{ *pulumi.OutputState }

func (GetBgpNeighborRange6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighborRange6)(nil)).Elem()
}

func (o GetBgpNeighborRange6ArrayOutput) ToGetBgpNeighborRange6ArrayOutput() GetBgpNeighborRange6ArrayOutput {
	return o
}

func (o GetBgpNeighborRange6ArrayOutput) ToGetBgpNeighborRange6ArrayOutputWithContext(ctx context.Context) GetBgpNeighborRange6ArrayOutput {
	return o
}

func (o GetBgpNeighborRange6ArrayOutput) Index(i pulumi.IntInput) GetBgpNeighborRange6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpNeighborRange6 {
		return vs[0].([]GetBgpNeighborRange6)[vs[1].(int)]
	}).(GetBgpNeighborRange6Output)
}

type GetBgpNeighborRange struct {
	// ID.
	Id int `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum int `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup string `pulumi:"neighborGroup"`
	// Network prefix.
	Prefix string `pulumi:"prefix"`
}

// GetBgpNeighborRangeInput is an input type that accepts GetBgpNeighborRangeArgs and GetBgpNeighborRangeOutput values.
// You can construct a concrete instance of `GetBgpNeighborRangeInput` via:
//
//	GetBgpNeighborRangeArgs{...}
type GetBgpNeighborRangeInput interface {
	pulumi.Input

	ToGetBgpNeighborRangeOutput() GetBgpNeighborRangeOutput
	ToGetBgpNeighborRangeOutputWithContext(context.Context) GetBgpNeighborRangeOutput
}

type GetBgpNeighborRangeArgs struct {
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum pulumi.IntInput `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup pulumi.StringInput `pulumi:"neighborGroup"`
	// Network prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetBgpNeighborRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighborRange)(nil)).Elem()
}

func (i GetBgpNeighborRangeArgs) ToGetBgpNeighborRangeOutput() GetBgpNeighborRangeOutput {
	return i.ToGetBgpNeighborRangeOutputWithContext(context.Background())
}

func (i GetBgpNeighborRangeArgs) ToGetBgpNeighborRangeOutputWithContext(ctx context.Context) GetBgpNeighborRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborRangeOutput)
}

// GetBgpNeighborRangeArrayInput is an input type that accepts GetBgpNeighborRangeArray and GetBgpNeighborRangeArrayOutput values.
// You can construct a concrete instance of `GetBgpNeighborRangeArrayInput` via:
//
//	GetBgpNeighborRangeArray{ GetBgpNeighborRangeArgs{...} }
type GetBgpNeighborRangeArrayInput interface {
	pulumi.Input

	ToGetBgpNeighborRangeArrayOutput() GetBgpNeighborRangeArrayOutput
	ToGetBgpNeighborRangeArrayOutputWithContext(context.Context) GetBgpNeighborRangeArrayOutput
}

type GetBgpNeighborRangeArray []GetBgpNeighborRangeInput

func (GetBgpNeighborRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighborRange)(nil)).Elem()
}

func (i GetBgpNeighborRangeArray) ToGetBgpNeighborRangeArrayOutput() GetBgpNeighborRangeArrayOutput {
	return i.ToGetBgpNeighborRangeArrayOutputWithContext(context.Background())
}

func (i GetBgpNeighborRangeArray) ToGetBgpNeighborRangeArrayOutputWithContext(ctx context.Context) GetBgpNeighborRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNeighborRangeArrayOutput)
}

type GetBgpNeighborRangeOutput struct{ *pulumi.OutputState }

func (GetBgpNeighborRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNeighborRange)(nil)).Elem()
}

func (o GetBgpNeighborRangeOutput) ToGetBgpNeighborRangeOutput() GetBgpNeighborRangeOutput {
	return o
}

func (o GetBgpNeighborRangeOutput) ToGetBgpNeighborRangeOutputWithContext(ctx context.Context) GetBgpNeighborRangeOutput {
	return o
}

// ID.
func (o GetBgpNeighborRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborRange) int { return v.Id }).(pulumi.IntOutput)
}

// Maximum number of neighbors.
func (o GetBgpNeighborRangeOutput) MaxNeighborNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNeighborRange) int { return v.MaxNeighborNum }).(pulumi.IntOutput)
}

// Neighbor group name.
func (o GetBgpNeighborRangeOutput) NeighborGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborRange) string { return v.NeighborGroup }).(pulumi.StringOutput)
}

// Network prefix.
func (o GetBgpNeighborRangeOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNeighborRange) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetBgpNeighborRangeArrayOutput struct{ *pulumi.OutputState }

func (GetBgpNeighborRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNeighborRange)(nil)).Elem()
}

func (o GetBgpNeighborRangeArrayOutput) ToGetBgpNeighborRangeArrayOutput() GetBgpNeighborRangeArrayOutput {
	return o
}

func (o GetBgpNeighborRangeArrayOutput) ToGetBgpNeighborRangeArrayOutputWithContext(ctx context.Context) GetBgpNeighborRangeArrayOutput {
	return o
}

func (o GetBgpNeighborRangeArrayOutput) Index(i pulumi.IntInput) GetBgpNeighborRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpNeighborRange {
		return vs[0].([]GetBgpNeighborRange)[vs[1].(int)]
	}).(GetBgpNeighborRangeOutput)
}

type GetBgpNetwork6 struct {
	// Enable/disable route as backdoor.
	Backdoor string `pulumi:"backdoor"`
	// ID.
	Id int `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP.
	NetworkImportCheck string `pulumi:"networkImportCheck"`
	// Network IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
}

// GetBgpNetwork6Input is an input type that accepts GetBgpNetwork6Args and GetBgpNetwork6Output values.
// You can construct a concrete instance of `GetBgpNetwork6Input` via:
//
//	GetBgpNetwork6Args{...}
type GetBgpNetwork6Input interface {
	pulumi.Input

	ToGetBgpNetwork6Output() GetBgpNetwork6Output
	ToGetBgpNetwork6OutputWithContext(context.Context) GetBgpNetwork6Output
}

type GetBgpNetwork6Args struct {
	// Enable/disable route as backdoor.
	Backdoor pulumi.StringInput `pulumi:"backdoor"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP.
	NetworkImportCheck pulumi.StringInput `pulumi:"networkImportCheck"`
	// Network IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
}

func (GetBgpNetwork6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNetwork6)(nil)).Elem()
}

func (i GetBgpNetwork6Args) ToGetBgpNetwork6Output() GetBgpNetwork6Output {
	return i.ToGetBgpNetwork6OutputWithContext(context.Background())
}

func (i GetBgpNetwork6Args) ToGetBgpNetwork6OutputWithContext(ctx context.Context) GetBgpNetwork6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNetwork6Output)
}

// GetBgpNetwork6ArrayInput is an input type that accepts GetBgpNetwork6Array and GetBgpNetwork6ArrayOutput values.
// You can construct a concrete instance of `GetBgpNetwork6ArrayInput` via:
//
//	GetBgpNetwork6Array{ GetBgpNetwork6Args{...} }
type GetBgpNetwork6ArrayInput interface {
	pulumi.Input

	ToGetBgpNetwork6ArrayOutput() GetBgpNetwork6ArrayOutput
	ToGetBgpNetwork6ArrayOutputWithContext(context.Context) GetBgpNetwork6ArrayOutput
}

type GetBgpNetwork6Array []GetBgpNetwork6Input

func (GetBgpNetwork6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNetwork6)(nil)).Elem()
}

func (i GetBgpNetwork6Array) ToGetBgpNetwork6ArrayOutput() GetBgpNetwork6ArrayOutput {
	return i.ToGetBgpNetwork6ArrayOutputWithContext(context.Background())
}

func (i GetBgpNetwork6Array) ToGetBgpNetwork6ArrayOutputWithContext(ctx context.Context) GetBgpNetwork6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNetwork6ArrayOutput)
}

type GetBgpNetwork6Output struct{ *pulumi.OutputState }

func (GetBgpNetwork6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNetwork6)(nil)).Elem()
}

func (o GetBgpNetwork6Output) ToGetBgpNetwork6Output() GetBgpNetwork6Output {
	return o
}

func (o GetBgpNetwork6Output) ToGetBgpNetwork6OutputWithContext(ctx context.Context) GetBgpNetwork6Output {
	return o
}

// Enable/disable route as backdoor.
func (o GetBgpNetwork6Output) Backdoor() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetwork6) string { return v.Backdoor }).(pulumi.StringOutput)
}

// ID.
func (o GetBgpNetwork6Output) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNetwork6) int { return v.Id }).(pulumi.IntOutput)
}

// Configure insurance of BGP network route existence in IGP.
func (o GetBgpNetwork6Output) NetworkImportCheck() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetwork6) string { return v.NetworkImportCheck }).(pulumi.StringOutput)
}

// Network IPv6 prefix.
func (o GetBgpNetwork6Output) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetwork6) string { return v.Prefix6 }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetBgpNetwork6Output) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetwork6) string { return v.RouteMap }).(pulumi.StringOutput)
}

type GetBgpNetwork6ArrayOutput struct{ *pulumi.OutputState }

func (GetBgpNetwork6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNetwork6)(nil)).Elem()
}

func (o GetBgpNetwork6ArrayOutput) ToGetBgpNetwork6ArrayOutput() GetBgpNetwork6ArrayOutput {
	return o
}

func (o GetBgpNetwork6ArrayOutput) ToGetBgpNetwork6ArrayOutputWithContext(ctx context.Context) GetBgpNetwork6ArrayOutput {
	return o
}

func (o GetBgpNetwork6ArrayOutput) Index(i pulumi.IntInput) GetBgpNetwork6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpNetwork6 {
		return vs[0].([]GetBgpNetwork6)[vs[1].(int)]
	}).(GetBgpNetwork6Output)
}

type GetBgpNetwork struct {
	// Enable/disable route as backdoor.
	Backdoor string `pulumi:"backdoor"`
	// ID.
	Id int `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP.
	NetworkImportCheck string `pulumi:"networkImportCheck"`
	// Network prefix.
	Prefix string `pulumi:"prefix"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
}

// GetBgpNetworkInput is an input type that accepts GetBgpNetworkArgs and GetBgpNetworkOutput values.
// You can construct a concrete instance of `GetBgpNetworkInput` via:
//
//	GetBgpNetworkArgs{...}
type GetBgpNetworkInput interface {
	pulumi.Input

	ToGetBgpNetworkOutput() GetBgpNetworkOutput
	ToGetBgpNetworkOutputWithContext(context.Context) GetBgpNetworkOutput
}

type GetBgpNetworkArgs struct {
	// Enable/disable route as backdoor.
	Backdoor pulumi.StringInput `pulumi:"backdoor"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP.
	NetworkImportCheck pulumi.StringInput `pulumi:"networkImportCheck"`
	// Network prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
}

func (GetBgpNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNetwork)(nil)).Elem()
}

func (i GetBgpNetworkArgs) ToGetBgpNetworkOutput() GetBgpNetworkOutput {
	return i.ToGetBgpNetworkOutputWithContext(context.Background())
}

func (i GetBgpNetworkArgs) ToGetBgpNetworkOutputWithContext(ctx context.Context) GetBgpNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNetworkOutput)
}

// GetBgpNetworkArrayInput is an input type that accepts GetBgpNetworkArray and GetBgpNetworkArrayOutput values.
// You can construct a concrete instance of `GetBgpNetworkArrayInput` via:
//
//	GetBgpNetworkArray{ GetBgpNetworkArgs{...} }
type GetBgpNetworkArrayInput interface {
	pulumi.Input

	ToGetBgpNetworkArrayOutput() GetBgpNetworkArrayOutput
	ToGetBgpNetworkArrayOutputWithContext(context.Context) GetBgpNetworkArrayOutput
}

type GetBgpNetworkArray []GetBgpNetworkInput

func (GetBgpNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNetwork)(nil)).Elem()
}

func (i GetBgpNetworkArray) ToGetBgpNetworkArrayOutput() GetBgpNetworkArrayOutput {
	return i.ToGetBgpNetworkArrayOutputWithContext(context.Background())
}

func (i GetBgpNetworkArray) ToGetBgpNetworkArrayOutputWithContext(ctx context.Context) GetBgpNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNetworkArrayOutput)
}

type GetBgpNetworkOutput struct{ *pulumi.OutputState }

func (GetBgpNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNetwork)(nil)).Elem()
}

func (o GetBgpNetworkOutput) ToGetBgpNetworkOutput() GetBgpNetworkOutput {
	return o
}

func (o GetBgpNetworkOutput) ToGetBgpNetworkOutputWithContext(ctx context.Context) GetBgpNetworkOutput {
	return o
}

// Enable/disable route as backdoor.
func (o GetBgpNetworkOutput) Backdoor() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetwork) string { return v.Backdoor }).(pulumi.StringOutput)
}

// ID.
func (o GetBgpNetworkOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpNetwork) int { return v.Id }).(pulumi.IntOutput)
}

// Configure insurance of BGP network route existence in IGP.
func (o GetBgpNetworkOutput) NetworkImportCheck() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetwork) string { return v.NetworkImportCheck }).(pulumi.StringOutput)
}

// Network prefix.
func (o GetBgpNetworkOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetwork) string { return v.Prefix }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetBgpNetworkOutput) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetwork) string { return v.RouteMap }).(pulumi.StringOutput)
}

type GetBgpNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetBgpNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNetwork)(nil)).Elem()
}

func (o GetBgpNetworkArrayOutput) ToGetBgpNetworkArrayOutput() GetBgpNetworkArrayOutput {
	return o
}

func (o GetBgpNetworkArrayOutput) ToGetBgpNetworkArrayOutputWithContext(ctx context.Context) GetBgpNetworkArrayOutput {
	return o
}

func (o GetBgpNetworkArrayOutput) Index(i pulumi.IntInput) GetBgpNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpNetwork {
		return vs[0].([]GetBgpNetwork)[vs[1].(int)]
	}).(GetBgpNetworkOutput)
}

type GetBgpRedistribute6 struct {
	// Distribute list entry name.
	Name string `pulumi:"name"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
	// Status
	Status string `pulumi:"status"`
}

// GetBgpRedistribute6Input is an input type that accepts GetBgpRedistribute6Args and GetBgpRedistribute6Output values.
// You can construct a concrete instance of `GetBgpRedistribute6Input` via:
//
//	GetBgpRedistribute6Args{...}
type GetBgpRedistribute6Input interface {
	pulumi.Input

	ToGetBgpRedistribute6Output() GetBgpRedistribute6Output
	ToGetBgpRedistribute6OutputWithContext(context.Context) GetBgpRedistribute6Output
}

type GetBgpRedistribute6Args struct {
	// Distribute list entry name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
	// Status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBgpRedistribute6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpRedistribute6)(nil)).Elem()
}

func (i GetBgpRedistribute6Args) ToGetBgpRedistribute6Output() GetBgpRedistribute6Output {
	return i.ToGetBgpRedistribute6OutputWithContext(context.Background())
}

func (i GetBgpRedistribute6Args) ToGetBgpRedistribute6OutputWithContext(ctx context.Context) GetBgpRedistribute6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpRedistribute6Output)
}

// GetBgpRedistribute6ArrayInput is an input type that accepts GetBgpRedistribute6Array and GetBgpRedistribute6ArrayOutput values.
// You can construct a concrete instance of `GetBgpRedistribute6ArrayInput` via:
//
//	GetBgpRedistribute6Array{ GetBgpRedistribute6Args{...} }
type GetBgpRedistribute6ArrayInput interface {
	pulumi.Input

	ToGetBgpRedistribute6ArrayOutput() GetBgpRedistribute6ArrayOutput
	ToGetBgpRedistribute6ArrayOutputWithContext(context.Context) GetBgpRedistribute6ArrayOutput
}

type GetBgpRedistribute6Array []GetBgpRedistribute6Input

func (GetBgpRedistribute6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpRedistribute6)(nil)).Elem()
}

func (i GetBgpRedistribute6Array) ToGetBgpRedistribute6ArrayOutput() GetBgpRedistribute6ArrayOutput {
	return i.ToGetBgpRedistribute6ArrayOutputWithContext(context.Background())
}

func (i GetBgpRedistribute6Array) ToGetBgpRedistribute6ArrayOutputWithContext(ctx context.Context) GetBgpRedistribute6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpRedistribute6ArrayOutput)
}

type GetBgpRedistribute6Output struct{ *pulumi.OutputState }

func (GetBgpRedistribute6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpRedistribute6)(nil)).Elem()
}

func (o GetBgpRedistribute6Output) ToGetBgpRedistribute6Output() GetBgpRedistribute6Output {
	return o
}

func (o GetBgpRedistribute6Output) ToGetBgpRedistribute6OutputWithContext(ctx context.Context) GetBgpRedistribute6Output {
	return o
}

// Distribute list entry name.
func (o GetBgpRedistribute6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpRedistribute6) string { return v.Name }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetBgpRedistribute6Output) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpRedistribute6) string { return v.RouteMap }).(pulumi.StringOutput)
}

// Status
func (o GetBgpRedistribute6Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpRedistribute6) string { return v.Status }).(pulumi.StringOutput)
}

type GetBgpRedistribute6ArrayOutput struct{ *pulumi.OutputState }

func (GetBgpRedistribute6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpRedistribute6)(nil)).Elem()
}

func (o GetBgpRedistribute6ArrayOutput) ToGetBgpRedistribute6ArrayOutput() GetBgpRedistribute6ArrayOutput {
	return o
}

func (o GetBgpRedistribute6ArrayOutput) ToGetBgpRedistribute6ArrayOutputWithContext(ctx context.Context) GetBgpRedistribute6ArrayOutput {
	return o
}

func (o GetBgpRedistribute6ArrayOutput) Index(i pulumi.IntInput) GetBgpRedistribute6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpRedistribute6 {
		return vs[0].([]GetBgpRedistribute6)[vs[1].(int)]
	}).(GetBgpRedistribute6Output)
}

type GetBgpRedistribute struct {
	// Distribute list entry name.
	Name string `pulumi:"name"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
	// Status
	Status string `pulumi:"status"`
}

// GetBgpRedistributeInput is an input type that accepts GetBgpRedistributeArgs and GetBgpRedistributeOutput values.
// You can construct a concrete instance of `GetBgpRedistributeInput` via:
//
//	GetBgpRedistributeArgs{...}
type GetBgpRedistributeInput interface {
	pulumi.Input

	ToGetBgpRedistributeOutput() GetBgpRedistributeOutput
	ToGetBgpRedistributeOutputWithContext(context.Context) GetBgpRedistributeOutput
}

type GetBgpRedistributeArgs struct {
	// Distribute list entry name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
	// Status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBgpRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpRedistribute)(nil)).Elem()
}

func (i GetBgpRedistributeArgs) ToGetBgpRedistributeOutput() GetBgpRedistributeOutput {
	return i.ToGetBgpRedistributeOutputWithContext(context.Background())
}

func (i GetBgpRedistributeArgs) ToGetBgpRedistributeOutputWithContext(ctx context.Context) GetBgpRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpRedistributeOutput)
}

// GetBgpRedistributeArrayInput is an input type that accepts GetBgpRedistributeArray and GetBgpRedistributeArrayOutput values.
// You can construct a concrete instance of `GetBgpRedistributeArrayInput` via:
//
//	GetBgpRedistributeArray{ GetBgpRedistributeArgs{...} }
type GetBgpRedistributeArrayInput interface {
	pulumi.Input

	ToGetBgpRedistributeArrayOutput() GetBgpRedistributeArrayOutput
	ToGetBgpRedistributeArrayOutputWithContext(context.Context) GetBgpRedistributeArrayOutput
}

type GetBgpRedistributeArray []GetBgpRedistributeInput

func (GetBgpRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpRedistribute)(nil)).Elem()
}

func (i GetBgpRedistributeArray) ToGetBgpRedistributeArrayOutput() GetBgpRedistributeArrayOutput {
	return i.ToGetBgpRedistributeArrayOutputWithContext(context.Background())
}

func (i GetBgpRedistributeArray) ToGetBgpRedistributeArrayOutputWithContext(ctx context.Context) GetBgpRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpRedistributeArrayOutput)
}

type GetBgpRedistributeOutput struct{ *pulumi.OutputState }

func (GetBgpRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpRedistribute)(nil)).Elem()
}

func (o GetBgpRedistributeOutput) ToGetBgpRedistributeOutput() GetBgpRedistributeOutput {
	return o
}

func (o GetBgpRedistributeOutput) ToGetBgpRedistributeOutputWithContext(ctx context.Context) GetBgpRedistributeOutput {
	return o
}

// Distribute list entry name.
func (o GetBgpRedistributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpRedistribute) string { return v.Name }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetBgpRedistributeOutput) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpRedistribute) string { return v.RouteMap }).(pulumi.StringOutput)
}

// Status
func (o GetBgpRedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpRedistribute) string { return v.Status }).(pulumi.StringOutput)
}

type GetBgpRedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetBgpRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpRedistribute)(nil)).Elem()
}

func (o GetBgpRedistributeArrayOutput) ToGetBgpRedistributeArrayOutput() GetBgpRedistributeArrayOutput {
	return o
}

func (o GetBgpRedistributeArrayOutput) ToGetBgpRedistributeArrayOutputWithContext(ctx context.Context) GetBgpRedistributeArrayOutput {
	return o
}

func (o GetBgpRedistributeArrayOutput) Index(i pulumi.IntInput) GetBgpRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpRedistribute {
		return vs[0].([]GetBgpRedistribute)[vs[1].(int)]
	}).(GetBgpRedistributeOutput)
}

type GetBgpVrf6 struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts []GetBgpVrf6ExportRt `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap string `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts []GetBgpVrf6ImportRt `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets []GetBgpVrf6LeakTarget `pulumi:"leakTargets"`
	// Route Distinguisher: AA:NN|A.B.C.D:NN.
	Rd string `pulumi:"rd"`
	// VRF role.
	Role string `pulumi:"role"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetBgpVrf6Input is an input type that accepts GetBgpVrf6Args and GetBgpVrf6Output values.
// You can construct a concrete instance of `GetBgpVrf6Input` via:
//
//	GetBgpVrf6Args{...}
type GetBgpVrf6Input interface {
	pulumi.Input

	ToGetBgpVrf6Output() GetBgpVrf6Output
	ToGetBgpVrf6OutputWithContext(context.Context) GetBgpVrf6Output
}

type GetBgpVrf6Args struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts GetBgpVrf6ExportRtArrayInput `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap pulumi.StringInput `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts GetBgpVrf6ImportRtArrayInput `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets GetBgpVrf6LeakTargetArrayInput `pulumi:"leakTargets"`
	// Route Distinguisher: AA:NN|A.B.C.D:NN.
	Rd pulumi.StringInput `pulumi:"rd"`
	// VRF role.
	Role pulumi.StringInput `pulumi:"role"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetBgpVrf6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrf6)(nil)).Elem()
}

func (i GetBgpVrf6Args) ToGetBgpVrf6Output() GetBgpVrf6Output {
	return i.ToGetBgpVrf6OutputWithContext(context.Background())
}

func (i GetBgpVrf6Args) ToGetBgpVrf6OutputWithContext(ctx context.Context) GetBgpVrf6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrf6Output)
}

// GetBgpVrf6ArrayInput is an input type that accepts GetBgpVrf6Array and GetBgpVrf6ArrayOutput values.
// You can construct a concrete instance of `GetBgpVrf6ArrayInput` via:
//
//	GetBgpVrf6Array{ GetBgpVrf6Args{...} }
type GetBgpVrf6ArrayInput interface {
	pulumi.Input

	ToGetBgpVrf6ArrayOutput() GetBgpVrf6ArrayOutput
	ToGetBgpVrf6ArrayOutputWithContext(context.Context) GetBgpVrf6ArrayOutput
}

type GetBgpVrf6Array []GetBgpVrf6Input

func (GetBgpVrf6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrf6)(nil)).Elem()
}

func (i GetBgpVrf6Array) ToGetBgpVrf6ArrayOutput() GetBgpVrf6ArrayOutput {
	return i.ToGetBgpVrf6ArrayOutputWithContext(context.Background())
}

func (i GetBgpVrf6Array) ToGetBgpVrf6ArrayOutputWithContext(ctx context.Context) GetBgpVrf6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrf6ArrayOutput)
}

type GetBgpVrf6Output struct{ *pulumi.OutputState }

func (GetBgpVrf6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrf6)(nil)).Elem()
}

func (o GetBgpVrf6Output) ToGetBgpVrf6Output() GetBgpVrf6Output {
	return o
}

func (o GetBgpVrf6Output) ToGetBgpVrf6OutputWithContext(ctx context.Context) GetBgpVrf6Output {
	return o
}

// List of export route target. The structure of `exportRt` block is documented below.
func (o GetBgpVrf6Output) ExportRts() GetBgpVrf6ExportRtArrayOutput {
	return o.ApplyT(func(v GetBgpVrf6) []GetBgpVrf6ExportRt { return v.ExportRts }).(GetBgpVrf6ExportRtArrayOutput)
}

// Import route map.
func (o GetBgpVrf6Output) ImportRouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf6) string { return v.ImportRouteMap }).(pulumi.StringOutput)
}

// List of import route target. The structure of `importRt` block is documented below.
func (o GetBgpVrf6Output) ImportRts() GetBgpVrf6ImportRtArrayOutput {
	return o.ApplyT(func(v GetBgpVrf6) []GetBgpVrf6ImportRt { return v.ImportRts }).(GetBgpVrf6ImportRtArrayOutput)
}

// Target VRF table. The structure of `leakTarget` block is documented below.
func (o GetBgpVrf6Output) LeakTargets() GetBgpVrf6LeakTargetArrayOutput {
	return o.ApplyT(func(v GetBgpVrf6) []GetBgpVrf6LeakTarget { return v.LeakTargets }).(GetBgpVrf6LeakTargetArrayOutput)
}

// Route Distinguisher: AA:NN|A.B.C.D:NN.
func (o GetBgpVrf6Output) Rd() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf6) string { return v.Rd }).(pulumi.StringOutput)
}

// VRF role.
func (o GetBgpVrf6Output) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf6) string { return v.Role }).(pulumi.StringOutput)
}

// Target VRF ID <0 - 31>.
func (o GetBgpVrf6Output) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf6) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetBgpVrf6ArrayOutput struct{ *pulumi.OutputState }

func (GetBgpVrf6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrf6)(nil)).Elem()
}

func (o GetBgpVrf6ArrayOutput) ToGetBgpVrf6ArrayOutput() GetBgpVrf6ArrayOutput {
	return o
}

func (o GetBgpVrf6ArrayOutput) ToGetBgpVrf6ArrayOutputWithContext(ctx context.Context) GetBgpVrf6ArrayOutput {
	return o
}

func (o GetBgpVrf6ArrayOutput) Index(i pulumi.IntInput) GetBgpVrf6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpVrf6 {
		return vs[0].([]GetBgpVrf6)[vs[1].(int)]
	}).(GetBgpVrf6Output)
}

type GetBgpVrf6ExportRt struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget string `pulumi:"routeTarget"`
}

// GetBgpVrf6ExportRtInput is an input type that accepts GetBgpVrf6ExportRtArgs and GetBgpVrf6ExportRtOutput values.
// You can construct a concrete instance of `GetBgpVrf6ExportRtInput` via:
//
//	GetBgpVrf6ExportRtArgs{...}
type GetBgpVrf6ExportRtInput interface {
	pulumi.Input

	ToGetBgpVrf6ExportRtOutput() GetBgpVrf6ExportRtOutput
	ToGetBgpVrf6ExportRtOutputWithContext(context.Context) GetBgpVrf6ExportRtOutput
}

type GetBgpVrf6ExportRtArgs struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget pulumi.StringInput `pulumi:"routeTarget"`
}

func (GetBgpVrf6ExportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrf6ExportRt)(nil)).Elem()
}

func (i GetBgpVrf6ExportRtArgs) ToGetBgpVrf6ExportRtOutput() GetBgpVrf6ExportRtOutput {
	return i.ToGetBgpVrf6ExportRtOutputWithContext(context.Background())
}

func (i GetBgpVrf6ExportRtArgs) ToGetBgpVrf6ExportRtOutputWithContext(ctx context.Context) GetBgpVrf6ExportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrf6ExportRtOutput)
}

// GetBgpVrf6ExportRtArrayInput is an input type that accepts GetBgpVrf6ExportRtArray and GetBgpVrf6ExportRtArrayOutput values.
// You can construct a concrete instance of `GetBgpVrf6ExportRtArrayInput` via:
//
//	GetBgpVrf6ExportRtArray{ GetBgpVrf6ExportRtArgs{...} }
type GetBgpVrf6ExportRtArrayInput interface {
	pulumi.Input

	ToGetBgpVrf6ExportRtArrayOutput() GetBgpVrf6ExportRtArrayOutput
	ToGetBgpVrf6ExportRtArrayOutputWithContext(context.Context) GetBgpVrf6ExportRtArrayOutput
}

type GetBgpVrf6ExportRtArray []GetBgpVrf6ExportRtInput

func (GetBgpVrf6ExportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrf6ExportRt)(nil)).Elem()
}

func (i GetBgpVrf6ExportRtArray) ToGetBgpVrf6ExportRtArrayOutput() GetBgpVrf6ExportRtArrayOutput {
	return i.ToGetBgpVrf6ExportRtArrayOutputWithContext(context.Background())
}

func (i GetBgpVrf6ExportRtArray) ToGetBgpVrf6ExportRtArrayOutputWithContext(ctx context.Context) GetBgpVrf6ExportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrf6ExportRtArrayOutput)
}

type GetBgpVrf6ExportRtOutput struct{ *pulumi.OutputState }

func (GetBgpVrf6ExportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrf6ExportRt)(nil)).Elem()
}

func (o GetBgpVrf6ExportRtOutput) ToGetBgpVrf6ExportRtOutput() GetBgpVrf6ExportRtOutput {
	return o
}

func (o GetBgpVrf6ExportRtOutput) ToGetBgpVrf6ExportRtOutputWithContext(ctx context.Context) GetBgpVrf6ExportRtOutput {
	return o
}

// Attribute: AA:NN|A.B.C.D:NN
func (o GetBgpVrf6ExportRtOutput) RouteTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf6ExportRt) string { return v.RouteTarget }).(pulumi.StringOutput)
}

type GetBgpVrf6ExportRtArrayOutput struct{ *pulumi.OutputState }

func (GetBgpVrf6ExportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrf6ExportRt)(nil)).Elem()
}

func (o GetBgpVrf6ExportRtArrayOutput) ToGetBgpVrf6ExportRtArrayOutput() GetBgpVrf6ExportRtArrayOutput {
	return o
}

func (o GetBgpVrf6ExportRtArrayOutput) ToGetBgpVrf6ExportRtArrayOutputWithContext(ctx context.Context) GetBgpVrf6ExportRtArrayOutput {
	return o
}

func (o GetBgpVrf6ExportRtArrayOutput) Index(i pulumi.IntInput) GetBgpVrf6ExportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpVrf6ExportRt {
		return vs[0].([]GetBgpVrf6ExportRt)[vs[1].(int)]
	}).(GetBgpVrf6ExportRtOutput)
}

type GetBgpVrf6ImportRt struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget string `pulumi:"routeTarget"`
}

// GetBgpVrf6ImportRtInput is an input type that accepts GetBgpVrf6ImportRtArgs and GetBgpVrf6ImportRtOutput values.
// You can construct a concrete instance of `GetBgpVrf6ImportRtInput` via:
//
//	GetBgpVrf6ImportRtArgs{...}
type GetBgpVrf6ImportRtInput interface {
	pulumi.Input

	ToGetBgpVrf6ImportRtOutput() GetBgpVrf6ImportRtOutput
	ToGetBgpVrf6ImportRtOutputWithContext(context.Context) GetBgpVrf6ImportRtOutput
}

type GetBgpVrf6ImportRtArgs struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget pulumi.StringInput `pulumi:"routeTarget"`
}

func (GetBgpVrf6ImportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrf6ImportRt)(nil)).Elem()
}

func (i GetBgpVrf6ImportRtArgs) ToGetBgpVrf6ImportRtOutput() GetBgpVrf6ImportRtOutput {
	return i.ToGetBgpVrf6ImportRtOutputWithContext(context.Background())
}

func (i GetBgpVrf6ImportRtArgs) ToGetBgpVrf6ImportRtOutputWithContext(ctx context.Context) GetBgpVrf6ImportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrf6ImportRtOutput)
}

// GetBgpVrf6ImportRtArrayInput is an input type that accepts GetBgpVrf6ImportRtArray and GetBgpVrf6ImportRtArrayOutput values.
// You can construct a concrete instance of `GetBgpVrf6ImportRtArrayInput` via:
//
//	GetBgpVrf6ImportRtArray{ GetBgpVrf6ImportRtArgs{...} }
type GetBgpVrf6ImportRtArrayInput interface {
	pulumi.Input

	ToGetBgpVrf6ImportRtArrayOutput() GetBgpVrf6ImportRtArrayOutput
	ToGetBgpVrf6ImportRtArrayOutputWithContext(context.Context) GetBgpVrf6ImportRtArrayOutput
}

type GetBgpVrf6ImportRtArray []GetBgpVrf6ImportRtInput

func (GetBgpVrf6ImportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrf6ImportRt)(nil)).Elem()
}

func (i GetBgpVrf6ImportRtArray) ToGetBgpVrf6ImportRtArrayOutput() GetBgpVrf6ImportRtArrayOutput {
	return i.ToGetBgpVrf6ImportRtArrayOutputWithContext(context.Background())
}

func (i GetBgpVrf6ImportRtArray) ToGetBgpVrf6ImportRtArrayOutputWithContext(ctx context.Context) GetBgpVrf6ImportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrf6ImportRtArrayOutput)
}

type GetBgpVrf6ImportRtOutput struct{ *pulumi.OutputState }

func (GetBgpVrf6ImportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrf6ImportRt)(nil)).Elem()
}

func (o GetBgpVrf6ImportRtOutput) ToGetBgpVrf6ImportRtOutput() GetBgpVrf6ImportRtOutput {
	return o
}

func (o GetBgpVrf6ImportRtOutput) ToGetBgpVrf6ImportRtOutputWithContext(ctx context.Context) GetBgpVrf6ImportRtOutput {
	return o
}

// Attribute: AA:NN|A.B.C.D:NN
func (o GetBgpVrf6ImportRtOutput) RouteTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf6ImportRt) string { return v.RouteTarget }).(pulumi.StringOutput)
}

type GetBgpVrf6ImportRtArrayOutput struct{ *pulumi.OutputState }

func (GetBgpVrf6ImportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrf6ImportRt)(nil)).Elem()
}

func (o GetBgpVrf6ImportRtArrayOutput) ToGetBgpVrf6ImportRtArrayOutput() GetBgpVrf6ImportRtArrayOutput {
	return o
}

func (o GetBgpVrf6ImportRtArrayOutput) ToGetBgpVrf6ImportRtArrayOutputWithContext(ctx context.Context) GetBgpVrf6ImportRtArrayOutput {
	return o
}

func (o GetBgpVrf6ImportRtArrayOutput) Index(i pulumi.IntInput) GetBgpVrf6ImportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpVrf6ImportRt {
		return vs[0].([]GetBgpVrf6ImportRt)[vs[1].(int)]
	}).(GetBgpVrf6ImportRtOutput)
}

type GetBgpVrf6LeakTarget struct {
	// Interface which is used to leak routes to target VRF.
	Interface string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetBgpVrf6LeakTargetInput is an input type that accepts GetBgpVrf6LeakTargetArgs and GetBgpVrf6LeakTargetOutput values.
// You can construct a concrete instance of `GetBgpVrf6LeakTargetInput` via:
//
//	GetBgpVrf6LeakTargetArgs{...}
type GetBgpVrf6LeakTargetInput interface {
	pulumi.Input

	ToGetBgpVrf6LeakTargetOutput() GetBgpVrf6LeakTargetOutput
	ToGetBgpVrf6LeakTargetOutputWithContext(context.Context) GetBgpVrf6LeakTargetOutput
}

type GetBgpVrf6LeakTargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetBgpVrf6LeakTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrf6LeakTarget)(nil)).Elem()
}

func (i GetBgpVrf6LeakTargetArgs) ToGetBgpVrf6LeakTargetOutput() GetBgpVrf6LeakTargetOutput {
	return i.ToGetBgpVrf6LeakTargetOutputWithContext(context.Background())
}

func (i GetBgpVrf6LeakTargetArgs) ToGetBgpVrf6LeakTargetOutputWithContext(ctx context.Context) GetBgpVrf6LeakTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrf6LeakTargetOutput)
}

// GetBgpVrf6LeakTargetArrayInput is an input type that accepts GetBgpVrf6LeakTargetArray and GetBgpVrf6LeakTargetArrayOutput values.
// You can construct a concrete instance of `GetBgpVrf6LeakTargetArrayInput` via:
//
//	GetBgpVrf6LeakTargetArray{ GetBgpVrf6LeakTargetArgs{...} }
type GetBgpVrf6LeakTargetArrayInput interface {
	pulumi.Input

	ToGetBgpVrf6LeakTargetArrayOutput() GetBgpVrf6LeakTargetArrayOutput
	ToGetBgpVrf6LeakTargetArrayOutputWithContext(context.Context) GetBgpVrf6LeakTargetArrayOutput
}

type GetBgpVrf6LeakTargetArray []GetBgpVrf6LeakTargetInput

func (GetBgpVrf6LeakTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrf6LeakTarget)(nil)).Elem()
}

func (i GetBgpVrf6LeakTargetArray) ToGetBgpVrf6LeakTargetArrayOutput() GetBgpVrf6LeakTargetArrayOutput {
	return i.ToGetBgpVrf6LeakTargetArrayOutputWithContext(context.Background())
}

func (i GetBgpVrf6LeakTargetArray) ToGetBgpVrf6LeakTargetArrayOutputWithContext(ctx context.Context) GetBgpVrf6LeakTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrf6LeakTargetArrayOutput)
}

type GetBgpVrf6LeakTargetOutput struct{ *pulumi.OutputState }

func (GetBgpVrf6LeakTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrf6LeakTarget)(nil)).Elem()
}

func (o GetBgpVrf6LeakTargetOutput) ToGetBgpVrf6LeakTargetOutput() GetBgpVrf6LeakTargetOutput {
	return o
}

func (o GetBgpVrf6LeakTargetOutput) ToGetBgpVrf6LeakTargetOutputWithContext(ctx context.Context) GetBgpVrf6LeakTargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o GetBgpVrf6LeakTargetOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf6LeakTarget) string { return v.Interface }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetBgpVrf6LeakTargetOutput) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf6LeakTarget) string { return v.RouteMap }).(pulumi.StringOutput)
}

// Target VRF ID <0 - 31>.
func (o GetBgpVrf6LeakTargetOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf6LeakTarget) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetBgpVrf6LeakTargetArrayOutput struct{ *pulumi.OutputState }

func (GetBgpVrf6LeakTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrf6LeakTarget)(nil)).Elem()
}

func (o GetBgpVrf6LeakTargetArrayOutput) ToGetBgpVrf6LeakTargetArrayOutput() GetBgpVrf6LeakTargetArrayOutput {
	return o
}

func (o GetBgpVrf6LeakTargetArrayOutput) ToGetBgpVrf6LeakTargetArrayOutputWithContext(ctx context.Context) GetBgpVrf6LeakTargetArrayOutput {
	return o
}

func (o GetBgpVrf6LeakTargetArrayOutput) Index(i pulumi.IntInput) GetBgpVrf6LeakTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpVrf6LeakTarget {
		return vs[0].([]GetBgpVrf6LeakTarget)[vs[1].(int)]
	}).(GetBgpVrf6LeakTargetOutput)
}

type GetBgpVrf struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts []GetBgpVrfExportRt `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap string `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts []GetBgpVrfImportRt `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets []GetBgpVrfLeakTarget `pulumi:"leakTargets"`
	// Route Distinguisher: AA:NN|A.B.C.D:NN.
	Rd string `pulumi:"rd"`
	// VRF role.
	Role string `pulumi:"role"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetBgpVrfInput is an input type that accepts GetBgpVrfArgs and GetBgpVrfOutput values.
// You can construct a concrete instance of `GetBgpVrfInput` via:
//
//	GetBgpVrfArgs{...}
type GetBgpVrfInput interface {
	pulumi.Input

	ToGetBgpVrfOutput() GetBgpVrfOutput
	ToGetBgpVrfOutputWithContext(context.Context) GetBgpVrfOutput
}

type GetBgpVrfArgs struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts GetBgpVrfExportRtArrayInput `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap pulumi.StringInput `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts GetBgpVrfImportRtArrayInput `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets GetBgpVrfLeakTargetArrayInput `pulumi:"leakTargets"`
	// Route Distinguisher: AA:NN|A.B.C.D:NN.
	Rd pulumi.StringInput `pulumi:"rd"`
	// VRF role.
	Role pulumi.StringInput `pulumi:"role"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetBgpVrfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrf)(nil)).Elem()
}

func (i GetBgpVrfArgs) ToGetBgpVrfOutput() GetBgpVrfOutput {
	return i.ToGetBgpVrfOutputWithContext(context.Background())
}

func (i GetBgpVrfArgs) ToGetBgpVrfOutputWithContext(ctx context.Context) GetBgpVrfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfOutput)
}

// GetBgpVrfArrayInput is an input type that accepts GetBgpVrfArray and GetBgpVrfArrayOutput values.
// You can construct a concrete instance of `GetBgpVrfArrayInput` via:
//
//	GetBgpVrfArray{ GetBgpVrfArgs{...} }
type GetBgpVrfArrayInput interface {
	pulumi.Input

	ToGetBgpVrfArrayOutput() GetBgpVrfArrayOutput
	ToGetBgpVrfArrayOutputWithContext(context.Context) GetBgpVrfArrayOutput
}

type GetBgpVrfArray []GetBgpVrfInput

func (GetBgpVrfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrf)(nil)).Elem()
}

func (i GetBgpVrfArray) ToGetBgpVrfArrayOutput() GetBgpVrfArrayOutput {
	return i.ToGetBgpVrfArrayOutputWithContext(context.Background())
}

func (i GetBgpVrfArray) ToGetBgpVrfArrayOutputWithContext(ctx context.Context) GetBgpVrfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfArrayOutput)
}

type GetBgpVrfOutput struct{ *pulumi.OutputState }

func (GetBgpVrfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrf)(nil)).Elem()
}

func (o GetBgpVrfOutput) ToGetBgpVrfOutput() GetBgpVrfOutput {
	return o
}

func (o GetBgpVrfOutput) ToGetBgpVrfOutputWithContext(ctx context.Context) GetBgpVrfOutput {
	return o
}

// List of export route target. The structure of `exportRt` block is documented below.
func (o GetBgpVrfOutput) ExportRts() GetBgpVrfExportRtArrayOutput {
	return o.ApplyT(func(v GetBgpVrf) []GetBgpVrfExportRt { return v.ExportRts }).(GetBgpVrfExportRtArrayOutput)
}

// Import route map.
func (o GetBgpVrfOutput) ImportRouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf) string { return v.ImportRouteMap }).(pulumi.StringOutput)
}

// List of import route target. The structure of `importRt` block is documented below.
func (o GetBgpVrfOutput) ImportRts() GetBgpVrfImportRtArrayOutput {
	return o.ApplyT(func(v GetBgpVrf) []GetBgpVrfImportRt { return v.ImportRts }).(GetBgpVrfImportRtArrayOutput)
}

// Target VRF table. The structure of `leakTarget` block is documented below.
func (o GetBgpVrfOutput) LeakTargets() GetBgpVrfLeakTargetArrayOutput {
	return o.ApplyT(func(v GetBgpVrf) []GetBgpVrfLeakTarget { return v.LeakTargets }).(GetBgpVrfLeakTargetArrayOutput)
}

// Route Distinguisher: AA:NN|A.B.C.D:NN.
func (o GetBgpVrfOutput) Rd() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf) string { return v.Rd }).(pulumi.StringOutput)
}

// VRF role.
func (o GetBgpVrfOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf) string { return v.Role }).(pulumi.StringOutput)
}

// Target VRF ID <0 - 31>.
func (o GetBgpVrfOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrf) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetBgpVrfArrayOutput struct{ *pulumi.OutputState }

func (GetBgpVrfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrf)(nil)).Elem()
}

func (o GetBgpVrfArrayOutput) ToGetBgpVrfArrayOutput() GetBgpVrfArrayOutput {
	return o
}

func (o GetBgpVrfArrayOutput) ToGetBgpVrfArrayOutputWithContext(ctx context.Context) GetBgpVrfArrayOutput {
	return o
}

func (o GetBgpVrfArrayOutput) Index(i pulumi.IntInput) GetBgpVrfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpVrf {
		return vs[0].([]GetBgpVrf)[vs[1].(int)]
	}).(GetBgpVrfOutput)
}

type GetBgpVrfExportRt struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget string `pulumi:"routeTarget"`
}

// GetBgpVrfExportRtInput is an input type that accepts GetBgpVrfExportRtArgs and GetBgpVrfExportRtOutput values.
// You can construct a concrete instance of `GetBgpVrfExportRtInput` via:
//
//	GetBgpVrfExportRtArgs{...}
type GetBgpVrfExportRtInput interface {
	pulumi.Input

	ToGetBgpVrfExportRtOutput() GetBgpVrfExportRtOutput
	ToGetBgpVrfExportRtOutputWithContext(context.Context) GetBgpVrfExportRtOutput
}

type GetBgpVrfExportRtArgs struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget pulumi.StringInput `pulumi:"routeTarget"`
}

func (GetBgpVrfExportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfExportRt)(nil)).Elem()
}

func (i GetBgpVrfExportRtArgs) ToGetBgpVrfExportRtOutput() GetBgpVrfExportRtOutput {
	return i.ToGetBgpVrfExportRtOutputWithContext(context.Background())
}

func (i GetBgpVrfExportRtArgs) ToGetBgpVrfExportRtOutputWithContext(ctx context.Context) GetBgpVrfExportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfExportRtOutput)
}

// GetBgpVrfExportRtArrayInput is an input type that accepts GetBgpVrfExportRtArray and GetBgpVrfExportRtArrayOutput values.
// You can construct a concrete instance of `GetBgpVrfExportRtArrayInput` via:
//
//	GetBgpVrfExportRtArray{ GetBgpVrfExportRtArgs{...} }
type GetBgpVrfExportRtArrayInput interface {
	pulumi.Input

	ToGetBgpVrfExportRtArrayOutput() GetBgpVrfExportRtArrayOutput
	ToGetBgpVrfExportRtArrayOutputWithContext(context.Context) GetBgpVrfExportRtArrayOutput
}

type GetBgpVrfExportRtArray []GetBgpVrfExportRtInput

func (GetBgpVrfExportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfExportRt)(nil)).Elem()
}

func (i GetBgpVrfExportRtArray) ToGetBgpVrfExportRtArrayOutput() GetBgpVrfExportRtArrayOutput {
	return i.ToGetBgpVrfExportRtArrayOutputWithContext(context.Background())
}

func (i GetBgpVrfExportRtArray) ToGetBgpVrfExportRtArrayOutputWithContext(ctx context.Context) GetBgpVrfExportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfExportRtArrayOutput)
}

type GetBgpVrfExportRtOutput struct{ *pulumi.OutputState }

func (GetBgpVrfExportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfExportRt)(nil)).Elem()
}

func (o GetBgpVrfExportRtOutput) ToGetBgpVrfExportRtOutput() GetBgpVrfExportRtOutput {
	return o
}

func (o GetBgpVrfExportRtOutput) ToGetBgpVrfExportRtOutputWithContext(ctx context.Context) GetBgpVrfExportRtOutput {
	return o
}

// Attribute: AA:NN|A.B.C.D:NN
func (o GetBgpVrfExportRtOutput) RouteTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrfExportRt) string { return v.RouteTarget }).(pulumi.StringOutput)
}

type GetBgpVrfExportRtArrayOutput struct{ *pulumi.OutputState }

func (GetBgpVrfExportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfExportRt)(nil)).Elem()
}

func (o GetBgpVrfExportRtArrayOutput) ToGetBgpVrfExportRtArrayOutput() GetBgpVrfExportRtArrayOutput {
	return o
}

func (o GetBgpVrfExportRtArrayOutput) ToGetBgpVrfExportRtArrayOutputWithContext(ctx context.Context) GetBgpVrfExportRtArrayOutput {
	return o
}

func (o GetBgpVrfExportRtArrayOutput) Index(i pulumi.IntInput) GetBgpVrfExportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpVrfExportRt {
		return vs[0].([]GetBgpVrfExportRt)[vs[1].(int)]
	}).(GetBgpVrfExportRtOutput)
}

type GetBgpVrfImportRt struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget string `pulumi:"routeTarget"`
}

// GetBgpVrfImportRtInput is an input type that accepts GetBgpVrfImportRtArgs and GetBgpVrfImportRtOutput values.
// You can construct a concrete instance of `GetBgpVrfImportRtInput` via:
//
//	GetBgpVrfImportRtArgs{...}
type GetBgpVrfImportRtInput interface {
	pulumi.Input

	ToGetBgpVrfImportRtOutput() GetBgpVrfImportRtOutput
	ToGetBgpVrfImportRtOutputWithContext(context.Context) GetBgpVrfImportRtOutput
}

type GetBgpVrfImportRtArgs struct {
	// Attribute: AA:NN|A.B.C.D:NN
	RouteTarget pulumi.StringInput `pulumi:"routeTarget"`
}

func (GetBgpVrfImportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfImportRt)(nil)).Elem()
}

func (i GetBgpVrfImportRtArgs) ToGetBgpVrfImportRtOutput() GetBgpVrfImportRtOutput {
	return i.ToGetBgpVrfImportRtOutputWithContext(context.Background())
}

func (i GetBgpVrfImportRtArgs) ToGetBgpVrfImportRtOutputWithContext(ctx context.Context) GetBgpVrfImportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfImportRtOutput)
}

// GetBgpVrfImportRtArrayInput is an input type that accepts GetBgpVrfImportRtArray and GetBgpVrfImportRtArrayOutput values.
// You can construct a concrete instance of `GetBgpVrfImportRtArrayInput` via:
//
//	GetBgpVrfImportRtArray{ GetBgpVrfImportRtArgs{...} }
type GetBgpVrfImportRtArrayInput interface {
	pulumi.Input

	ToGetBgpVrfImportRtArrayOutput() GetBgpVrfImportRtArrayOutput
	ToGetBgpVrfImportRtArrayOutputWithContext(context.Context) GetBgpVrfImportRtArrayOutput
}

type GetBgpVrfImportRtArray []GetBgpVrfImportRtInput

func (GetBgpVrfImportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfImportRt)(nil)).Elem()
}

func (i GetBgpVrfImportRtArray) ToGetBgpVrfImportRtArrayOutput() GetBgpVrfImportRtArrayOutput {
	return i.ToGetBgpVrfImportRtArrayOutputWithContext(context.Background())
}

func (i GetBgpVrfImportRtArray) ToGetBgpVrfImportRtArrayOutputWithContext(ctx context.Context) GetBgpVrfImportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfImportRtArrayOutput)
}

type GetBgpVrfImportRtOutput struct{ *pulumi.OutputState }

func (GetBgpVrfImportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfImportRt)(nil)).Elem()
}

func (o GetBgpVrfImportRtOutput) ToGetBgpVrfImportRtOutput() GetBgpVrfImportRtOutput {
	return o
}

func (o GetBgpVrfImportRtOutput) ToGetBgpVrfImportRtOutputWithContext(ctx context.Context) GetBgpVrfImportRtOutput {
	return o
}

// Attribute: AA:NN|A.B.C.D:NN
func (o GetBgpVrfImportRtOutput) RouteTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrfImportRt) string { return v.RouteTarget }).(pulumi.StringOutput)
}

type GetBgpVrfImportRtArrayOutput struct{ *pulumi.OutputState }

func (GetBgpVrfImportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfImportRt)(nil)).Elem()
}

func (o GetBgpVrfImportRtArrayOutput) ToGetBgpVrfImportRtArrayOutput() GetBgpVrfImportRtArrayOutput {
	return o
}

func (o GetBgpVrfImportRtArrayOutput) ToGetBgpVrfImportRtArrayOutputWithContext(ctx context.Context) GetBgpVrfImportRtArrayOutput {
	return o
}

func (o GetBgpVrfImportRtArrayOutput) Index(i pulumi.IntInput) GetBgpVrfImportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpVrfImportRt {
		return vs[0].([]GetBgpVrfImportRt)[vs[1].(int)]
	}).(GetBgpVrfImportRtOutput)
}

type GetBgpVrfLeak6 struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets []GetBgpVrfLeak6Target `pulumi:"targets"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetBgpVrfLeak6Input is an input type that accepts GetBgpVrfLeak6Args and GetBgpVrfLeak6Output values.
// You can construct a concrete instance of `GetBgpVrfLeak6Input` via:
//
//	GetBgpVrfLeak6Args{...}
type GetBgpVrfLeak6Input interface {
	pulumi.Input

	ToGetBgpVrfLeak6Output() GetBgpVrfLeak6Output
	ToGetBgpVrfLeak6OutputWithContext(context.Context) GetBgpVrfLeak6Output
}

type GetBgpVrfLeak6Args struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets GetBgpVrfLeak6TargetArrayInput `pulumi:"targets"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetBgpVrfLeak6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfLeak6)(nil)).Elem()
}

func (i GetBgpVrfLeak6Args) ToGetBgpVrfLeak6Output() GetBgpVrfLeak6Output {
	return i.ToGetBgpVrfLeak6OutputWithContext(context.Background())
}

func (i GetBgpVrfLeak6Args) ToGetBgpVrfLeak6OutputWithContext(ctx context.Context) GetBgpVrfLeak6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfLeak6Output)
}

// GetBgpVrfLeak6ArrayInput is an input type that accepts GetBgpVrfLeak6Array and GetBgpVrfLeak6ArrayOutput values.
// You can construct a concrete instance of `GetBgpVrfLeak6ArrayInput` via:
//
//	GetBgpVrfLeak6Array{ GetBgpVrfLeak6Args{...} }
type GetBgpVrfLeak6ArrayInput interface {
	pulumi.Input

	ToGetBgpVrfLeak6ArrayOutput() GetBgpVrfLeak6ArrayOutput
	ToGetBgpVrfLeak6ArrayOutputWithContext(context.Context) GetBgpVrfLeak6ArrayOutput
}

type GetBgpVrfLeak6Array []GetBgpVrfLeak6Input

func (GetBgpVrfLeak6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfLeak6)(nil)).Elem()
}

func (i GetBgpVrfLeak6Array) ToGetBgpVrfLeak6ArrayOutput() GetBgpVrfLeak6ArrayOutput {
	return i.ToGetBgpVrfLeak6ArrayOutputWithContext(context.Background())
}

func (i GetBgpVrfLeak6Array) ToGetBgpVrfLeak6ArrayOutputWithContext(ctx context.Context) GetBgpVrfLeak6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfLeak6ArrayOutput)
}

type GetBgpVrfLeak6Output struct{ *pulumi.OutputState }

func (GetBgpVrfLeak6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfLeak6)(nil)).Elem()
}

func (o GetBgpVrfLeak6Output) ToGetBgpVrfLeak6Output() GetBgpVrfLeak6Output {
	return o
}

func (o GetBgpVrfLeak6Output) ToGetBgpVrfLeak6OutputWithContext(ctx context.Context) GetBgpVrfLeak6Output {
	return o
}

// Target VRF table. The structure of `target` block is documented below.
func (o GetBgpVrfLeak6Output) Targets() GetBgpVrfLeak6TargetArrayOutput {
	return o.ApplyT(func(v GetBgpVrfLeak6) []GetBgpVrfLeak6Target { return v.Targets }).(GetBgpVrfLeak6TargetArrayOutput)
}

// Target VRF ID <0 - 31>.
func (o GetBgpVrfLeak6Output) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrfLeak6) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetBgpVrfLeak6ArrayOutput struct{ *pulumi.OutputState }

func (GetBgpVrfLeak6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfLeak6)(nil)).Elem()
}

func (o GetBgpVrfLeak6ArrayOutput) ToGetBgpVrfLeak6ArrayOutput() GetBgpVrfLeak6ArrayOutput {
	return o
}

func (o GetBgpVrfLeak6ArrayOutput) ToGetBgpVrfLeak6ArrayOutputWithContext(ctx context.Context) GetBgpVrfLeak6ArrayOutput {
	return o
}

func (o GetBgpVrfLeak6ArrayOutput) Index(i pulumi.IntInput) GetBgpVrfLeak6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpVrfLeak6 {
		return vs[0].([]GetBgpVrfLeak6)[vs[1].(int)]
	}).(GetBgpVrfLeak6Output)
}

type GetBgpVrfLeak6Target struct {
	// Interface which is used to leak routes to target VRF.
	Interface string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetBgpVrfLeak6TargetInput is an input type that accepts GetBgpVrfLeak6TargetArgs and GetBgpVrfLeak6TargetOutput values.
// You can construct a concrete instance of `GetBgpVrfLeak6TargetInput` via:
//
//	GetBgpVrfLeak6TargetArgs{...}
type GetBgpVrfLeak6TargetInput interface {
	pulumi.Input

	ToGetBgpVrfLeak6TargetOutput() GetBgpVrfLeak6TargetOutput
	ToGetBgpVrfLeak6TargetOutputWithContext(context.Context) GetBgpVrfLeak6TargetOutput
}

type GetBgpVrfLeak6TargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetBgpVrfLeak6TargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfLeak6Target)(nil)).Elem()
}

func (i GetBgpVrfLeak6TargetArgs) ToGetBgpVrfLeak6TargetOutput() GetBgpVrfLeak6TargetOutput {
	return i.ToGetBgpVrfLeak6TargetOutputWithContext(context.Background())
}

func (i GetBgpVrfLeak6TargetArgs) ToGetBgpVrfLeak6TargetOutputWithContext(ctx context.Context) GetBgpVrfLeak6TargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfLeak6TargetOutput)
}

// GetBgpVrfLeak6TargetArrayInput is an input type that accepts GetBgpVrfLeak6TargetArray and GetBgpVrfLeak6TargetArrayOutput values.
// You can construct a concrete instance of `GetBgpVrfLeak6TargetArrayInput` via:
//
//	GetBgpVrfLeak6TargetArray{ GetBgpVrfLeak6TargetArgs{...} }
type GetBgpVrfLeak6TargetArrayInput interface {
	pulumi.Input

	ToGetBgpVrfLeak6TargetArrayOutput() GetBgpVrfLeak6TargetArrayOutput
	ToGetBgpVrfLeak6TargetArrayOutputWithContext(context.Context) GetBgpVrfLeak6TargetArrayOutput
}

type GetBgpVrfLeak6TargetArray []GetBgpVrfLeak6TargetInput

func (GetBgpVrfLeak6TargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfLeak6Target)(nil)).Elem()
}

func (i GetBgpVrfLeak6TargetArray) ToGetBgpVrfLeak6TargetArrayOutput() GetBgpVrfLeak6TargetArrayOutput {
	return i.ToGetBgpVrfLeak6TargetArrayOutputWithContext(context.Background())
}

func (i GetBgpVrfLeak6TargetArray) ToGetBgpVrfLeak6TargetArrayOutputWithContext(ctx context.Context) GetBgpVrfLeak6TargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfLeak6TargetArrayOutput)
}

type GetBgpVrfLeak6TargetOutput struct{ *pulumi.OutputState }

func (GetBgpVrfLeak6TargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfLeak6Target)(nil)).Elem()
}

func (o GetBgpVrfLeak6TargetOutput) ToGetBgpVrfLeak6TargetOutput() GetBgpVrfLeak6TargetOutput {
	return o
}

func (o GetBgpVrfLeak6TargetOutput) ToGetBgpVrfLeak6TargetOutputWithContext(ctx context.Context) GetBgpVrfLeak6TargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o GetBgpVrfLeak6TargetOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrfLeak6Target) string { return v.Interface }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetBgpVrfLeak6TargetOutput) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrfLeak6Target) string { return v.RouteMap }).(pulumi.StringOutput)
}

// Target VRF ID <0 - 31>.
func (o GetBgpVrfLeak6TargetOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrfLeak6Target) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetBgpVrfLeak6TargetArrayOutput struct{ *pulumi.OutputState }

func (GetBgpVrfLeak6TargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfLeak6Target)(nil)).Elem()
}

func (o GetBgpVrfLeak6TargetArrayOutput) ToGetBgpVrfLeak6TargetArrayOutput() GetBgpVrfLeak6TargetArrayOutput {
	return o
}

func (o GetBgpVrfLeak6TargetArrayOutput) ToGetBgpVrfLeak6TargetArrayOutputWithContext(ctx context.Context) GetBgpVrfLeak6TargetArrayOutput {
	return o
}

func (o GetBgpVrfLeak6TargetArrayOutput) Index(i pulumi.IntInput) GetBgpVrfLeak6TargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpVrfLeak6Target {
		return vs[0].([]GetBgpVrfLeak6Target)[vs[1].(int)]
	}).(GetBgpVrfLeak6TargetOutput)
}

type GetBgpVrfLeak struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets []GetBgpVrfLeakTarget `pulumi:"targets"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetBgpVrfLeakInput is an input type that accepts GetBgpVrfLeakArgs and GetBgpVrfLeakOutput values.
// You can construct a concrete instance of `GetBgpVrfLeakInput` via:
//
//	GetBgpVrfLeakArgs{...}
type GetBgpVrfLeakInput interface {
	pulumi.Input

	ToGetBgpVrfLeakOutput() GetBgpVrfLeakOutput
	ToGetBgpVrfLeakOutputWithContext(context.Context) GetBgpVrfLeakOutput
}

type GetBgpVrfLeakArgs struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets GetBgpVrfLeakTargetArrayInput `pulumi:"targets"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetBgpVrfLeakArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfLeak)(nil)).Elem()
}

func (i GetBgpVrfLeakArgs) ToGetBgpVrfLeakOutput() GetBgpVrfLeakOutput {
	return i.ToGetBgpVrfLeakOutputWithContext(context.Background())
}

func (i GetBgpVrfLeakArgs) ToGetBgpVrfLeakOutputWithContext(ctx context.Context) GetBgpVrfLeakOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfLeakOutput)
}

// GetBgpVrfLeakArrayInput is an input type that accepts GetBgpVrfLeakArray and GetBgpVrfLeakArrayOutput values.
// You can construct a concrete instance of `GetBgpVrfLeakArrayInput` via:
//
//	GetBgpVrfLeakArray{ GetBgpVrfLeakArgs{...} }
type GetBgpVrfLeakArrayInput interface {
	pulumi.Input

	ToGetBgpVrfLeakArrayOutput() GetBgpVrfLeakArrayOutput
	ToGetBgpVrfLeakArrayOutputWithContext(context.Context) GetBgpVrfLeakArrayOutput
}

type GetBgpVrfLeakArray []GetBgpVrfLeakInput

func (GetBgpVrfLeakArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfLeak)(nil)).Elem()
}

func (i GetBgpVrfLeakArray) ToGetBgpVrfLeakArrayOutput() GetBgpVrfLeakArrayOutput {
	return i.ToGetBgpVrfLeakArrayOutputWithContext(context.Background())
}

func (i GetBgpVrfLeakArray) ToGetBgpVrfLeakArrayOutputWithContext(ctx context.Context) GetBgpVrfLeakArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfLeakArrayOutput)
}

type GetBgpVrfLeakOutput struct{ *pulumi.OutputState }

func (GetBgpVrfLeakOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfLeak)(nil)).Elem()
}

func (o GetBgpVrfLeakOutput) ToGetBgpVrfLeakOutput() GetBgpVrfLeakOutput {
	return o
}

func (o GetBgpVrfLeakOutput) ToGetBgpVrfLeakOutputWithContext(ctx context.Context) GetBgpVrfLeakOutput {
	return o
}

// Target VRF table. The structure of `target` block is documented below.
func (o GetBgpVrfLeakOutput) Targets() GetBgpVrfLeakTargetArrayOutput {
	return o.ApplyT(func(v GetBgpVrfLeak) []GetBgpVrfLeakTarget { return v.Targets }).(GetBgpVrfLeakTargetArrayOutput)
}

// Target VRF ID <0 - 31>.
func (o GetBgpVrfLeakOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrfLeak) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetBgpVrfLeakArrayOutput struct{ *pulumi.OutputState }

func (GetBgpVrfLeakArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfLeak)(nil)).Elem()
}

func (o GetBgpVrfLeakArrayOutput) ToGetBgpVrfLeakArrayOutput() GetBgpVrfLeakArrayOutput {
	return o
}

func (o GetBgpVrfLeakArrayOutput) ToGetBgpVrfLeakArrayOutputWithContext(ctx context.Context) GetBgpVrfLeakArrayOutput {
	return o
}

func (o GetBgpVrfLeakArrayOutput) Index(i pulumi.IntInput) GetBgpVrfLeakOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpVrfLeak {
		return vs[0].([]GetBgpVrfLeak)[vs[1].(int)]
	}).(GetBgpVrfLeakOutput)
}

type GetBgpVrfLeakTarget struct {
	// Interface which is used to leak routes to target VRF.
	Interface string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap string `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf string `pulumi:"vrf"`
}

// GetBgpVrfLeakTargetInput is an input type that accepts GetBgpVrfLeakTargetArgs and GetBgpVrfLeakTargetOutput values.
// You can construct a concrete instance of `GetBgpVrfLeakTargetInput` via:
//
//	GetBgpVrfLeakTargetArgs{...}
type GetBgpVrfLeakTargetInput interface {
	pulumi.Input

	ToGetBgpVrfLeakTargetOutput() GetBgpVrfLeakTargetOutput
	ToGetBgpVrfLeakTargetOutputWithContext(context.Context) GetBgpVrfLeakTargetOutput
}

type GetBgpVrfLeakTargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringInput `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (GetBgpVrfLeakTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfLeakTarget)(nil)).Elem()
}

func (i GetBgpVrfLeakTargetArgs) ToGetBgpVrfLeakTargetOutput() GetBgpVrfLeakTargetOutput {
	return i.ToGetBgpVrfLeakTargetOutputWithContext(context.Background())
}

func (i GetBgpVrfLeakTargetArgs) ToGetBgpVrfLeakTargetOutputWithContext(ctx context.Context) GetBgpVrfLeakTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfLeakTargetOutput)
}

// GetBgpVrfLeakTargetArrayInput is an input type that accepts GetBgpVrfLeakTargetArray and GetBgpVrfLeakTargetArrayOutput values.
// You can construct a concrete instance of `GetBgpVrfLeakTargetArrayInput` via:
//
//	GetBgpVrfLeakTargetArray{ GetBgpVrfLeakTargetArgs{...} }
type GetBgpVrfLeakTargetArrayInput interface {
	pulumi.Input

	ToGetBgpVrfLeakTargetArrayOutput() GetBgpVrfLeakTargetArrayOutput
	ToGetBgpVrfLeakTargetArrayOutputWithContext(context.Context) GetBgpVrfLeakTargetArrayOutput
}

type GetBgpVrfLeakTargetArray []GetBgpVrfLeakTargetInput

func (GetBgpVrfLeakTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfLeakTarget)(nil)).Elem()
}

func (i GetBgpVrfLeakTargetArray) ToGetBgpVrfLeakTargetArrayOutput() GetBgpVrfLeakTargetArrayOutput {
	return i.ToGetBgpVrfLeakTargetArrayOutputWithContext(context.Background())
}

func (i GetBgpVrfLeakTargetArray) ToGetBgpVrfLeakTargetArrayOutputWithContext(ctx context.Context) GetBgpVrfLeakTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpVrfLeakTargetArrayOutput)
}

type GetBgpVrfLeakTargetOutput struct{ *pulumi.OutputState }

func (GetBgpVrfLeakTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpVrfLeakTarget)(nil)).Elem()
}

func (o GetBgpVrfLeakTargetOutput) ToGetBgpVrfLeakTargetOutput() GetBgpVrfLeakTargetOutput {
	return o
}

func (o GetBgpVrfLeakTargetOutput) ToGetBgpVrfLeakTargetOutputWithContext(ctx context.Context) GetBgpVrfLeakTargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o GetBgpVrfLeakTargetOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrfLeakTarget) string { return v.Interface }).(pulumi.StringOutput)
}

// Route map of VRF leaking.
func (o GetBgpVrfLeakTargetOutput) RouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrfLeakTarget) string { return v.RouteMap }).(pulumi.StringOutput)
}

// Target VRF ID <0 - 31>.
func (o GetBgpVrfLeakTargetOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpVrfLeakTarget) string { return v.Vrf }).(pulumi.StringOutput)
}

type GetBgpVrfLeakTargetArrayOutput struct{ *pulumi.OutputState }

func (GetBgpVrfLeakTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpVrfLeakTarget)(nil)).Elem()
}

func (o GetBgpVrfLeakTargetArrayOutput) ToGetBgpVrfLeakTargetArrayOutput() GetBgpVrfLeakTargetArrayOutput {
	return o
}

func (o GetBgpVrfLeakTargetArrayOutput) ToGetBgpVrfLeakTargetArrayOutputWithContext(ctx context.Context) GetBgpVrfLeakTargetArrayOutput {
	return o
}

func (o GetBgpVrfLeakTargetArrayOutput) Index(i pulumi.IntInput) GetBgpVrfLeakTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpVrfLeakTarget {
		return vs[0].([]GetBgpVrfLeakTarget)[vs[1].(int)]
	}).(GetBgpVrfLeakTargetOutput)
}

type GetCommunitylistRule struct {
	// Permit or deny route-based operations, based on the route's COMMUNITY attribute.
	Action string `pulumi:"action"`
	// ID.
	Id int `pulumi:"id"`
	// Community specifications for matching a reserved community.
	Match string `pulumi:"match"`
	// Ordered list of COMMUNITY attributes as a regular expression.
	Regexp string `pulumi:"regexp"`
}

// GetCommunitylistRuleInput is an input type that accepts GetCommunitylistRuleArgs and GetCommunitylistRuleOutput values.
// You can construct a concrete instance of `GetCommunitylistRuleInput` via:
//
//	GetCommunitylistRuleArgs{...}
type GetCommunitylistRuleInput interface {
	pulumi.Input

	ToGetCommunitylistRuleOutput() GetCommunitylistRuleOutput
	ToGetCommunitylistRuleOutputWithContext(context.Context) GetCommunitylistRuleOutput
}

type GetCommunitylistRuleArgs struct {
	// Permit or deny route-based operations, based on the route's COMMUNITY attribute.
	Action pulumi.StringInput `pulumi:"action"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Community specifications for matching a reserved community.
	Match pulumi.StringInput `pulumi:"match"`
	// Ordered list of COMMUNITY attributes as a regular expression.
	Regexp pulumi.StringInput `pulumi:"regexp"`
}

func (GetCommunitylistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommunitylistRule)(nil)).Elem()
}

func (i GetCommunitylistRuleArgs) ToGetCommunitylistRuleOutput() GetCommunitylistRuleOutput {
	return i.ToGetCommunitylistRuleOutputWithContext(context.Background())
}

func (i GetCommunitylistRuleArgs) ToGetCommunitylistRuleOutputWithContext(ctx context.Context) GetCommunitylistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommunitylistRuleOutput)
}

// GetCommunitylistRuleArrayInput is an input type that accepts GetCommunitylistRuleArray and GetCommunitylistRuleArrayOutput values.
// You can construct a concrete instance of `GetCommunitylistRuleArrayInput` via:
//
//	GetCommunitylistRuleArray{ GetCommunitylistRuleArgs{...} }
type GetCommunitylistRuleArrayInput interface {
	pulumi.Input

	ToGetCommunitylistRuleArrayOutput() GetCommunitylistRuleArrayOutput
	ToGetCommunitylistRuleArrayOutputWithContext(context.Context) GetCommunitylistRuleArrayOutput
}

type GetCommunitylistRuleArray []GetCommunitylistRuleInput

func (GetCommunitylistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommunitylistRule)(nil)).Elem()
}

func (i GetCommunitylistRuleArray) ToGetCommunitylistRuleArrayOutput() GetCommunitylistRuleArrayOutput {
	return i.ToGetCommunitylistRuleArrayOutputWithContext(context.Background())
}

func (i GetCommunitylistRuleArray) ToGetCommunitylistRuleArrayOutputWithContext(ctx context.Context) GetCommunitylistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommunitylistRuleArrayOutput)
}

type GetCommunitylistRuleOutput struct{ *pulumi.OutputState }

func (GetCommunitylistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommunitylistRule)(nil)).Elem()
}

func (o GetCommunitylistRuleOutput) ToGetCommunitylistRuleOutput() GetCommunitylistRuleOutput {
	return o
}

func (o GetCommunitylistRuleOutput) ToGetCommunitylistRuleOutputWithContext(ctx context.Context) GetCommunitylistRuleOutput {
	return o
}

// Permit or deny route-based operations, based on the route's COMMUNITY attribute.
func (o GetCommunitylistRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunitylistRule) string { return v.Action }).(pulumi.StringOutput)
}

// ID.
func (o GetCommunitylistRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetCommunitylistRule) int { return v.Id }).(pulumi.IntOutput)
}

// Community specifications for matching a reserved community.
func (o GetCommunitylistRuleOutput) Match() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunitylistRule) string { return v.Match }).(pulumi.StringOutput)
}

// Ordered list of COMMUNITY attributes as a regular expression.
func (o GetCommunitylistRuleOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunitylistRule) string { return v.Regexp }).(pulumi.StringOutput)
}

type GetCommunitylistRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCommunitylistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommunitylistRule)(nil)).Elem()
}

func (o GetCommunitylistRuleArrayOutput) ToGetCommunitylistRuleArrayOutput() GetCommunitylistRuleArrayOutput {
	return o
}

func (o GetCommunitylistRuleArrayOutput) ToGetCommunitylistRuleArrayOutputWithContext(ctx context.Context) GetCommunitylistRuleArrayOutput {
	return o
}

func (o GetCommunitylistRuleArrayOutput) Index(i pulumi.IntInput) GetCommunitylistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommunitylistRule {
		return vs[0].([]GetCommunitylistRule)[vs[1].(int)]
	}).(GetCommunitylistRuleOutput)
}

type GetIsisIsisInterface struct {
	// Authentication key-chain for level 1 PDUs.
	AuthKeychainL1 string `pulumi:"authKeychainL1"`
	// Authentication key-chain for level 2 PDUs.
	AuthKeychainL2 string `pulumi:"authKeychainL2"`
	// Level 1 authentication mode.
	AuthModeL1 string `pulumi:"authModeL1"`
	// Level 2 authentication mode.
	AuthModeL2 string `pulumi:"authModeL2"`
	// Authentication password for level 1 PDUs.
	AuthPasswordL1 string `pulumi:"authPasswordL1"`
	// Authentication password for level 2 PDUs.
	AuthPasswordL2 string `pulumi:"authPasswordL2"`
	// Enable/disable authentication send-only for level 1 PDUs.
	AuthSendOnlyL1 string `pulumi:"authSendOnlyL1"`
	// Enable/disable authentication send-only for level 2 PDUs.
	AuthSendOnlyL2 string `pulumi:"authSendOnlyL2"`
	// IS-IS interface's circuit type
	CircuitType string `pulumi:"circuitType"`
	// Level 1 CSNP interval.
	CsnpIntervalL1 int `pulumi:"csnpIntervalL1"`
	// Level 2 CSNP interval.
	CsnpIntervalL2 int `pulumi:"csnpIntervalL2"`
	// Level 1 hello interval.
	HelloIntervalL1 int `pulumi:"helloIntervalL1"`
	// Level 2 hello interval.
	HelloIntervalL2 int `pulumi:"helloIntervalL2"`
	// Level 1 multiplier for Hello holding time.
	HelloMultiplierL1 int `pulumi:"helloMultiplierL1"`
	// Level 2 multiplier for Hello holding time.
	HelloMultiplierL2 int `pulumi:"helloMultiplierL2"`
	// Enable/disable padding to IS-IS hello packets.
	HelloPadding string `pulumi:"helloPadding"`
	// LSP transmission interval (milliseconds).
	LspInterval int `pulumi:"lspInterval"`
	// LSP retransmission interval (sec).
	LspRetransmitInterval int `pulumi:"lspRetransmitInterval"`
	// Enable/disable IS-IS mesh group.
	MeshGroup string `pulumi:"meshGroup"`
	// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
	MeshGroupId int `pulumi:"meshGroupId"`
	// Level 1 metric for interface.
	MetricL1 int `pulumi:"metricL1"`
	// Level 2 metric for interface.
	MetricL2 int `pulumi:"metricL2"`
	// IS-IS interface name.
	Name string `pulumi:"name"`
	// IS-IS interface's network type
	NetworkType string `pulumi:"networkType"`
	// Level 1 priority.
	PriorityL1 int `pulumi:"priorityL1"`
	// Level 2 priority.
	PriorityL2 int `pulumi:"priorityL2"`
	// Enable/disable redistribution.
	Status string `pulumi:"status"`
	// Enable/disable IPv6 interface for IS-IS.
	Status6 string `pulumi:"status6"`
	// Level 1 wide metric for interface.
	WideMetricL1 int `pulumi:"wideMetricL1"`
	// Level 2 wide metric for interface.
	WideMetricL2 int `pulumi:"wideMetricL2"`
}

// GetIsisIsisInterfaceInput is an input type that accepts GetIsisIsisInterfaceArgs and GetIsisIsisInterfaceOutput values.
// You can construct a concrete instance of `GetIsisIsisInterfaceInput` via:
//
//	GetIsisIsisInterfaceArgs{...}
type GetIsisIsisInterfaceInput interface {
	pulumi.Input

	ToGetIsisIsisInterfaceOutput() GetIsisIsisInterfaceOutput
	ToGetIsisIsisInterfaceOutputWithContext(context.Context) GetIsisIsisInterfaceOutput
}

type GetIsisIsisInterfaceArgs struct {
	// Authentication key-chain for level 1 PDUs.
	AuthKeychainL1 pulumi.StringInput `pulumi:"authKeychainL1"`
	// Authentication key-chain for level 2 PDUs.
	AuthKeychainL2 pulumi.StringInput `pulumi:"authKeychainL2"`
	// Level 1 authentication mode.
	AuthModeL1 pulumi.StringInput `pulumi:"authModeL1"`
	// Level 2 authentication mode.
	AuthModeL2 pulumi.StringInput `pulumi:"authModeL2"`
	// Authentication password for level 1 PDUs.
	AuthPasswordL1 pulumi.StringInput `pulumi:"authPasswordL1"`
	// Authentication password for level 2 PDUs.
	AuthPasswordL2 pulumi.StringInput `pulumi:"authPasswordL2"`
	// Enable/disable authentication send-only for level 1 PDUs.
	AuthSendOnlyL1 pulumi.StringInput `pulumi:"authSendOnlyL1"`
	// Enable/disable authentication send-only for level 2 PDUs.
	AuthSendOnlyL2 pulumi.StringInput `pulumi:"authSendOnlyL2"`
	// IS-IS interface's circuit type
	CircuitType pulumi.StringInput `pulumi:"circuitType"`
	// Level 1 CSNP interval.
	CsnpIntervalL1 pulumi.IntInput `pulumi:"csnpIntervalL1"`
	// Level 2 CSNP interval.
	CsnpIntervalL2 pulumi.IntInput `pulumi:"csnpIntervalL2"`
	// Level 1 hello interval.
	HelloIntervalL1 pulumi.IntInput `pulumi:"helloIntervalL1"`
	// Level 2 hello interval.
	HelloIntervalL2 pulumi.IntInput `pulumi:"helloIntervalL2"`
	// Level 1 multiplier for Hello holding time.
	HelloMultiplierL1 pulumi.IntInput `pulumi:"helloMultiplierL1"`
	// Level 2 multiplier for Hello holding time.
	HelloMultiplierL2 pulumi.IntInput `pulumi:"helloMultiplierL2"`
	// Enable/disable padding to IS-IS hello packets.
	HelloPadding pulumi.StringInput `pulumi:"helloPadding"`
	// LSP transmission interval (milliseconds).
	LspInterval pulumi.IntInput `pulumi:"lspInterval"`
	// LSP retransmission interval (sec).
	LspRetransmitInterval pulumi.IntInput `pulumi:"lspRetransmitInterval"`
	// Enable/disable IS-IS mesh group.
	MeshGroup pulumi.StringInput `pulumi:"meshGroup"`
	// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
	MeshGroupId pulumi.IntInput `pulumi:"meshGroupId"`
	// Level 1 metric for interface.
	MetricL1 pulumi.IntInput `pulumi:"metricL1"`
	// Level 2 metric for interface.
	MetricL2 pulumi.IntInput `pulumi:"metricL2"`
	// IS-IS interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// IS-IS interface's network type
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Level 1 priority.
	PriorityL1 pulumi.IntInput `pulumi:"priorityL1"`
	// Level 2 priority.
	PriorityL2 pulumi.IntInput `pulumi:"priorityL2"`
	// Enable/disable redistribution.
	Status pulumi.StringInput `pulumi:"status"`
	// Enable/disable IPv6 interface for IS-IS.
	Status6 pulumi.StringInput `pulumi:"status6"`
	// Level 1 wide metric for interface.
	WideMetricL1 pulumi.IntInput `pulumi:"wideMetricL1"`
	// Level 2 wide metric for interface.
	WideMetricL2 pulumi.IntInput `pulumi:"wideMetricL2"`
}

func (GetIsisIsisInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisIsisInterface)(nil)).Elem()
}

func (i GetIsisIsisInterfaceArgs) ToGetIsisIsisInterfaceOutput() GetIsisIsisInterfaceOutput {
	return i.ToGetIsisIsisInterfaceOutputWithContext(context.Background())
}

func (i GetIsisIsisInterfaceArgs) ToGetIsisIsisInterfaceOutputWithContext(ctx context.Context) GetIsisIsisInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisIsisInterfaceOutput)
}

// GetIsisIsisInterfaceArrayInput is an input type that accepts GetIsisIsisInterfaceArray and GetIsisIsisInterfaceArrayOutput values.
// You can construct a concrete instance of `GetIsisIsisInterfaceArrayInput` via:
//
//	GetIsisIsisInterfaceArray{ GetIsisIsisInterfaceArgs{...} }
type GetIsisIsisInterfaceArrayInput interface {
	pulumi.Input

	ToGetIsisIsisInterfaceArrayOutput() GetIsisIsisInterfaceArrayOutput
	ToGetIsisIsisInterfaceArrayOutputWithContext(context.Context) GetIsisIsisInterfaceArrayOutput
}

type GetIsisIsisInterfaceArray []GetIsisIsisInterfaceInput

func (GetIsisIsisInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisIsisInterface)(nil)).Elem()
}

func (i GetIsisIsisInterfaceArray) ToGetIsisIsisInterfaceArrayOutput() GetIsisIsisInterfaceArrayOutput {
	return i.ToGetIsisIsisInterfaceArrayOutputWithContext(context.Background())
}

func (i GetIsisIsisInterfaceArray) ToGetIsisIsisInterfaceArrayOutputWithContext(ctx context.Context) GetIsisIsisInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisIsisInterfaceArrayOutput)
}

type GetIsisIsisInterfaceOutput struct{ *pulumi.OutputState }

func (GetIsisIsisInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisIsisInterface)(nil)).Elem()
}

func (o GetIsisIsisInterfaceOutput) ToGetIsisIsisInterfaceOutput() GetIsisIsisInterfaceOutput {
	return o
}

func (o GetIsisIsisInterfaceOutput) ToGetIsisIsisInterfaceOutputWithContext(ctx context.Context) GetIsisIsisInterfaceOutput {
	return o
}

// Authentication key-chain for level 1 PDUs.
func (o GetIsisIsisInterfaceOutput) AuthKeychainL1() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.AuthKeychainL1 }).(pulumi.StringOutput)
}

// Authentication key-chain for level 2 PDUs.
func (o GetIsisIsisInterfaceOutput) AuthKeychainL2() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.AuthKeychainL2 }).(pulumi.StringOutput)
}

// Level 1 authentication mode.
func (o GetIsisIsisInterfaceOutput) AuthModeL1() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.AuthModeL1 }).(pulumi.StringOutput)
}

// Level 2 authentication mode.
func (o GetIsisIsisInterfaceOutput) AuthModeL2() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.AuthModeL2 }).(pulumi.StringOutput)
}

// Authentication password for level 1 PDUs.
func (o GetIsisIsisInterfaceOutput) AuthPasswordL1() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.AuthPasswordL1 }).(pulumi.StringOutput)
}

// Authentication password for level 2 PDUs.
func (o GetIsisIsisInterfaceOutput) AuthPasswordL2() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.AuthPasswordL2 }).(pulumi.StringOutput)
}

// Enable/disable authentication send-only for level 1 PDUs.
func (o GetIsisIsisInterfaceOutput) AuthSendOnlyL1() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.AuthSendOnlyL1 }).(pulumi.StringOutput)
}

// Enable/disable authentication send-only for level 2 PDUs.
func (o GetIsisIsisInterfaceOutput) AuthSendOnlyL2() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.AuthSendOnlyL2 }).(pulumi.StringOutput)
}

// IS-IS interface's circuit type
func (o GetIsisIsisInterfaceOutput) CircuitType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.CircuitType }).(pulumi.StringOutput)
}

// Level 1 CSNP interval.
func (o GetIsisIsisInterfaceOutput) CsnpIntervalL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.CsnpIntervalL1 }).(pulumi.IntOutput)
}

// Level 2 CSNP interval.
func (o GetIsisIsisInterfaceOutput) CsnpIntervalL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.CsnpIntervalL2 }).(pulumi.IntOutput)
}

// Level 1 hello interval.
func (o GetIsisIsisInterfaceOutput) HelloIntervalL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.HelloIntervalL1 }).(pulumi.IntOutput)
}

// Level 2 hello interval.
func (o GetIsisIsisInterfaceOutput) HelloIntervalL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.HelloIntervalL2 }).(pulumi.IntOutput)
}

// Level 1 multiplier for Hello holding time.
func (o GetIsisIsisInterfaceOutput) HelloMultiplierL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.HelloMultiplierL1 }).(pulumi.IntOutput)
}

// Level 2 multiplier for Hello holding time.
func (o GetIsisIsisInterfaceOutput) HelloMultiplierL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.HelloMultiplierL2 }).(pulumi.IntOutput)
}

// Enable/disable padding to IS-IS hello packets.
func (o GetIsisIsisInterfaceOutput) HelloPadding() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.HelloPadding }).(pulumi.StringOutput)
}

// LSP transmission interval (milliseconds).
func (o GetIsisIsisInterfaceOutput) LspInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.LspInterval }).(pulumi.IntOutput)
}

// LSP retransmission interval (sec).
func (o GetIsisIsisInterfaceOutput) LspRetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.LspRetransmitInterval }).(pulumi.IntOutput)
}

// Enable/disable IS-IS mesh group.
func (o GetIsisIsisInterfaceOutput) MeshGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.MeshGroup }).(pulumi.StringOutput)
}

// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
func (o GetIsisIsisInterfaceOutput) MeshGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.MeshGroupId }).(pulumi.IntOutput)
}

// Level 1 metric for interface.
func (o GetIsisIsisInterfaceOutput) MetricL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.MetricL1 }).(pulumi.IntOutput)
}

// Level 2 metric for interface.
func (o GetIsisIsisInterfaceOutput) MetricL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.MetricL2 }).(pulumi.IntOutput)
}

// IS-IS interface name.
func (o GetIsisIsisInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.Name }).(pulumi.StringOutput)
}

// IS-IS interface's network type
func (o GetIsisIsisInterfaceOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Level 1 priority.
func (o GetIsisIsisInterfaceOutput) PriorityL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.PriorityL1 }).(pulumi.IntOutput)
}

// Level 2 priority.
func (o GetIsisIsisInterfaceOutput) PriorityL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.PriorityL2 }).(pulumi.IntOutput)
}

// Enable/disable redistribution.
func (o GetIsisIsisInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.Status }).(pulumi.StringOutput)
}

// Enable/disable IPv6 interface for IS-IS.
func (o GetIsisIsisInterfaceOutput) Status6() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) string { return v.Status6 }).(pulumi.StringOutput)
}

// Level 1 wide metric for interface.
func (o GetIsisIsisInterfaceOutput) WideMetricL1() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.WideMetricL1 }).(pulumi.IntOutput)
}

// Level 2 wide metric for interface.
func (o GetIsisIsisInterfaceOutput) WideMetricL2() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisInterface) int { return v.WideMetricL2 }).(pulumi.IntOutput)
}

type GetIsisIsisInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetIsisIsisInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisIsisInterface)(nil)).Elem()
}

func (o GetIsisIsisInterfaceArrayOutput) ToGetIsisIsisInterfaceArrayOutput() GetIsisIsisInterfaceArrayOutput {
	return o
}

func (o GetIsisIsisInterfaceArrayOutput) ToGetIsisIsisInterfaceArrayOutputWithContext(ctx context.Context) GetIsisIsisInterfaceArrayOutput {
	return o
}

func (o GetIsisIsisInterfaceArrayOutput) Index(i pulumi.IntInput) GetIsisIsisInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIsisIsisInterface {
		return vs[0].([]GetIsisIsisInterface)[vs[1].(int)]
	}).(GetIsisIsisInterfaceOutput)
}

type GetIsisIsisNet struct {
	// Prefix entry ID.
	Id int `pulumi:"id"`
	// IS-IS net xx.xxxx. ... .xxxx.xx.
	Net string `pulumi:"net"`
}

// GetIsisIsisNetInput is an input type that accepts GetIsisIsisNetArgs and GetIsisIsisNetOutput values.
// You can construct a concrete instance of `GetIsisIsisNetInput` via:
//
//	GetIsisIsisNetArgs{...}
type GetIsisIsisNetInput interface {
	pulumi.Input

	ToGetIsisIsisNetOutput() GetIsisIsisNetOutput
	ToGetIsisIsisNetOutputWithContext(context.Context) GetIsisIsisNetOutput
}

type GetIsisIsisNetArgs struct {
	// Prefix entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IS-IS net xx.xxxx. ... .xxxx.xx.
	Net pulumi.StringInput `pulumi:"net"`
}

func (GetIsisIsisNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisIsisNet)(nil)).Elem()
}

func (i GetIsisIsisNetArgs) ToGetIsisIsisNetOutput() GetIsisIsisNetOutput {
	return i.ToGetIsisIsisNetOutputWithContext(context.Background())
}

func (i GetIsisIsisNetArgs) ToGetIsisIsisNetOutputWithContext(ctx context.Context) GetIsisIsisNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisIsisNetOutput)
}

// GetIsisIsisNetArrayInput is an input type that accepts GetIsisIsisNetArray and GetIsisIsisNetArrayOutput values.
// You can construct a concrete instance of `GetIsisIsisNetArrayInput` via:
//
//	GetIsisIsisNetArray{ GetIsisIsisNetArgs{...} }
type GetIsisIsisNetArrayInput interface {
	pulumi.Input

	ToGetIsisIsisNetArrayOutput() GetIsisIsisNetArrayOutput
	ToGetIsisIsisNetArrayOutputWithContext(context.Context) GetIsisIsisNetArrayOutput
}

type GetIsisIsisNetArray []GetIsisIsisNetInput

func (GetIsisIsisNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisIsisNet)(nil)).Elem()
}

func (i GetIsisIsisNetArray) ToGetIsisIsisNetArrayOutput() GetIsisIsisNetArrayOutput {
	return i.ToGetIsisIsisNetArrayOutputWithContext(context.Background())
}

func (i GetIsisIsisNetArray) ToGetIsisIsisNetArrayOutputWithContext(ctx context.Context) GetIsisIsisNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisIsisNetArrayOutput)
}

type GetIsisIsisNetOutput struct{ *pulumi.OutputState }

func (GetIsisIsisNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisIsisNet)(nil)).Elem()
}

func (o GetIsisIsisNetOutput) ToGetIsisIsisNetOutput() GetIsisIsisNetOutput {
	return o
}

func (o GetIsisIsisNetOutput) ToGetIsisIsisNetOutputWithContext(ctx context.Context) GetIsisIsisNetOutput {
	return o
}

// Prefix entry ID.
func (o GetIsisIsisNetOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisIsisNet) int { return v.Id }).(pulumi.IntOutput)
}

// IS-IS net xx.xxxx. ... .xxxx.xx.
func (o GetIsisIsisNetOutput) Net() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisIsisNet) string { return v.Net }).(pulumi.StringOutput)
}

type GetIsisIsisNetArrayOutput struct{ *pulumi.OutputState }

func (GetIsisIsisNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisIsisNet)(nil)).Elem()
}

func (o GetIsisIsisNetArrayOutput) ToGetIsisIsisNetArrayOutput() GetIsisIsisNetArrayOutput {
	return o
}

func (o GetIsisIsisNetArrayOutput) ToGetIsisIsisNetArrayOutputWithContext(ctx context.Context) GetIsisIsisNetArrayOutput {
	return o
}

func (o GetIsisIsisNetArrayOutput) Index(i pulumi.IntInput) GetIsisIsisNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIsisIsisNet {
		return vs[0].([]GetIsisIsisNet)[vs[1].(int)]
	}).(GetIsisIsisNetOutput)
}

type GetIsisRedistribute6 struct {
	// Level.
	Level string `pulumi:"level"`
	// Metric.
	Metric int `pulumi:"metric"`
	// Metric type.
	MetricType string `pulumi:"metricType"`
	// Protocol name.
	Protocol string `pulumi:"protocol"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// Enable/disable redistribution.
	Status string `pulumi:"status"`
}

// GetIsisRedistribute6Input is an input type that accepts GetIsisRedistribute6Args and GetIsisRedistribute6Output values.
// You can construct a concrete instance of `GetIsisRedistribute6Input` via:
//
//	GetIsisRedistribute6Args{...}
type GetIsisRedistribute6Input interface {
	pulumi.Input

	ToGetIsisRedistribute6Output() GetIsisRedistribute6Output
	ToGetIsisRedistribute6OutputWithContext(context.Context) GetIsisRedistribute6Output
}

type GetIsisRedistribute6Args struct {
	// Level.
	Level pulumi.StringInput `pulumi:"level"`
	// Metric.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Metric type.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Protocol name.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// Enable/disable redistribution.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetIsisRedistribute6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisRedistribute6)(nil)).Elem()
}

func (i GetIsisRedistribute6Args) ToGetIsisRedistribute6Output() GetIsisRedistribute6Output {
	return i.ToGetIsisRedistribute6OutputWithContext(context.Background())
}

func (i GetIsisRedistribute6Args) ToGetIsisRedistribute6OutputWithContext(ctx context.Context) GetIsisRedistribute6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisRedistribute6Output)
}

// GetIsisRedistribute6ArrayInput is an input type that accepts GetIsisRedistribute6Array and GetIsisRedistribute6ArrayOutput values.
// You can construct a concrete instance of `GetIsisRedistribute6ArrayInput` via:
//
//	GetIsisRedistribute6Array{ GetIsisRedistribute6Args{...} }
type GetIsisRedistribute6ArrayInput interface {
	pulumi.Input

	ToGetIsisRedistribute6ArrayOutput() GetIsisRedistribute6ArrayOutput
	ToGetIsisRedistribute6ArrayOutputWithContext(context.Context) GetIsisRedistribute6ArrayOutput
}

type GetIsisRedistribute6Array []GetIsisRedistribute6Input

func (GetIsisRedistribute6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisRedistribute6)(nil)).Elem()
}

func (i GetIsisRedistribute6Array) ToGetIsisRedistribute6ArrayOutput() GetIsisRedistribute6ArrayOutput {
	return i.ToGetIsisRedistribute6ArrayOutputWithContext(context.Background())
}

func (i GetIsisRedistribute6Array) ToGetIsisRedistribute6ArrayOutputWithContext(ctx context.Context) GetIsisRedistribute6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisRedistribute6ArrayOutput)
}

type GetIsisRedistribute6Output struct{ *pulumi.OutputState }

func (GetIsisRedistribute6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisRedistribute6)(nil)).Elem()
}

func (o GetIsisRedistribute6Output) ToGetIsisRedistribute6Output() GetIsisRedistribute6Output {
	return o
}

func (o GetIsisRedistribute6Output) ToGetIsisRedistribute6OutputWithContext(ctx context.Context) GetIsisRedistribute6Output {
	return o
}

// Level.
func (o GetIsisRedistribute6Output) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisRedistribute6) string { return v.Level }).(pulumi.StringOutput)
}

// Metric.
func (o GetIsisRedistribute6Output) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisRedistribute6) int { return v.Metric }).(pulumi.IntOutput)
}

// Metric type.
func (o GetIsisRedistribute6Output) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisRedistribute6) string { return v.MetricType }).(pulumi.StringOutput)
}

// Protocol name.
func (o GetIsisRedistribute6Output) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisRedistribute6) string { return v.Protocol }).(pulumi.StringOutput)
}

// Route map name.
func (o GetIsisRedistribute6Output) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisRedistribute6) string { return v.Routemap }).(pulumi.StringOutput)
}

// Enable/disable redistribution.
func (o GetIsisRedistribute6Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisRedistribute6) string { return v.Status }).(pulumi.StringOutput)
}

type GetIsisRedistribute6ArrayOutput struct{ *pulumi.OutputState }

func (GetIsisRedistribute6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisRedistribute6)(nil)).Elem()
}

func (o GetIsisRedistribute6ArrayOutput) ToGetIsisRedistribute6ArrayOutput() GetIsisRedistribute6ArrayOutput {
	return o
}

func (o GetIsisRedistribute6ArrayOutput) ToGetIsisRedistribute6ArrayOutputWithContext(ctx context.Context) GetIsisRedistribute6ArrayOutput {
	return o
}

func (o GetIsisRedistribute6ArrayOutput) Index(i pulumi.IntInput) GetIsisRedistribute6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIsisRedistribute6 {
		return vs[0].([]GetIsisRedistribute6)[vs[1].(int)]
	}).(GetIsisRedistribute6Output)
}

type GetIsisRedistribute struct {
	// Level.
	Level string `pulumi:"level"`
	// Metric.
	Metric int `pulumi:"metric"`
	// Metric type.
	MetricType string `pulumi:"metricType"`
	// Protocol name.
	Protocol string `pulumi:"protocol"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// Enable/disable redistribution.
	Status string `pulumi:"status"`
}

// GetIsisRedistributeInput is an input type that accepts GetIsisRedistributeArgs and GetIsisRedistributeOutput values.
// You can construct a concrete instance of `GetIsisRedistributeInput` via:
//
//	GetIsisRedistributeArgs{...}
type GetIsisRedistributeInput interface {
	pulumi.Input

	ToGetIsisRedistributeOutput() GetIsisRedistributeOutput
	ToGetIsisRedistributeOutputWithContext(context.Context) GetIsisRedistributeOutput
}

type GetIsisRedistributeArgs struct {
	// Level.
	Level pulumi.StringInput `pulumi:"level"`
	// Metric.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Metric type.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Protocol name.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// Enable/disable redistribution.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetIsisRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisRedistribute)(nil)).Elem()
}

func (i GetIsisRedistributeArgs) ToGetIsisRedistributeOutput() GetIsisRedistributeOutput {
	return i.ToGetIsisRedistributeOutputWithContext(context.Background())
}

func (i GetIsisRedistributeArgs) ToGetIsisRedistributeOutputWithContext(ctx context.Context) GetIsisRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisRedistributeOutput)
}

// GetIsisRedistributeArrayInput is an input type that accepts GetIsisRedistributeArray and GetIsisRedistributeArrayOutput values.
// You can construct a concrete instance of `GetIsisRedistributeArrayInput` via:
//
//	GetIsisRedistributeArray{ GetIsisRedistributeArgs{...} }
type GetIsisRedistributeArrayInput interface {
	pulumi.Input

	ToGetIsisRedistributeArrayOutput() GetIsisRedistributeArrayOutput
	ToGetIsisRedistributeArrayOutputWithContext(context.Context) GetIsisRedistributeArrayOutput
}

type GetIsisRedistributeArray []GetIsisRedistributeInput

func (GetIsisRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisRedistribute)(nil)).Elem()
}

func (i GetIsisRedistributeArray) ToGetIsisRedistributeArrayOutput() GetIsisRedistributeArrayOutput {
	return i.ToGetIsisRedistributeArrayOutputWithContext(context.Background())
}

func (i GetIsisRedistributeArray) ToGetIsisRedistributeArrayOutputWithContext(ctx context.Context) GetIsisRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisRedistributeArrayOutput)
}

type GetIsisRedistributeOutput struct{ *pulumi.OutputState }

func (GetIsisRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisRedistribute)(nil)).Elem()
}

func (o GetIsisRedistributeOutput) ToGetIsisRedistributeOutput() GetIsisRedistributeOutput {
	return o
}

func (o GetIsisRedistributeOutput) ToGetIsisRedistributeOutputWithContext(ctx context.Context) GetIsisRedistributeOutput {
	return o
}

// Level.
func (o GetIsisRedistributeOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisRedistribute) string { return v.Level }).(pulumi.StringOutput)
}

// Metric.
func (o GetIsisRedistributeOutput) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisRedistribute) int { return v.Metric }).(pulumi.IntOutput)
}

// Metric type.
func (o GetIsisRedistributeOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisRedistribute) string { return v.MetricType }).(pulumi.StringOutput)
}

// Protocol name.
func (o GetIsisRedistributeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisRedistribute) string { return v.Protocol }).(pulumi.StringOutput)
}

// Route map name.
func (o GetIsisRedistributeOutput) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisRedistribute) string { return v.Routemap }).(pulumi.StringOutput)
}

// Enable/disable redistribution.
func (o GetIsisRedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisRedistribute) string { return v.Status }).(pulumi.StringOutput)
}

type GetIsisRedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetIsisRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisRedistribute)(nil)).Elem()
}

func (o GetIsisRedistributeArrayOutput) ToGetIsisRedistributeArrayOutput() GetIsisRedistributeArrayOutput {
	return o
}

func (o GetIsisRedistributeArrayOutput) ToGetIsisRedistributeArrayOutputWithContext(ctx context.Context) GetIsisRedistributeArrayOutput {
	return o
}

func (o GetIsisRedistributeArrayOutput) Index(i pulumi.IntInput) GetIsisRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIsisRedistribute {
		return vs[0].([]GetIsisRedistribute)[vs[1].(int)]
	}).(GetIsisRedistributeOutput)
}

type GetIsisSummaryAddress6 struct {
	// Prefix entry ID.
	Id int `pulumi:"id"`
	// Level.
	Level string `pulumi:"level"`
	// IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
}

// GetIsisSummaryAddress6Input is an input type that accepts GetIsisSummaryAddress6Args and GetIsisSummaryAddress6Output values.
// You can construct a concrete instance of `GetIsisSummaryAddress6Input` via:
//
//	GetIsisSummaryAddress6Args{...}
type GetIsisSummaryAddress6Input interface {
	pulumi.Input

	ToGetIsisSummaryAddress6Output() GetIsisSummaryAddress6Output
	ToGetIsisSummaryAddress6OutputWithContext(context.Context) GetIsisSummaryAddress6Output
}

type GetIsisSummaryAddress6Args struct {
	// Prefix entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Level.
	Level pulumi.StringInput `pulumi:"level"`
	// IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetIsisSummaryAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisSummaryAddress6)(nil)).Elem()
}

func (i GetIsisSummaryAddress6Args) ToGetIsisSummaryAddress6Output() GetIsisSummaryAddress6Output {
	return i.ToGetIsisSummaryAddress6OutputWithContext(context.Background())
}

func (i GetIsisSummaryAddress6Args) ToGetIsisSummaryAddress6OutputWithContext(ctx context.Context) GetIsisSummaryAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisSummaryAddress6Output)
}

// GetIsisSummaryAddress6ArrayInput is an input type that accepts GetIsisSummaryAddress6Array and GetIsisSummaryAddress6ArrayOutput values.
// You can construct a concrete instance of `GetIsisSummaryAddress6ArrayInput` via:
//
//	GetIsisSummaryAddress6Array{ GetIsisSummaryAddress6Args{...} }
type GetIsisSummaryAddress6ArrayInput interface {
	pulumi.Input

	ToGetIsisSummaryAddress6ArrayOutput() GetIsisSummaryAddress6ArrayOutput
	ToGetIsisSummaryAddress6ArrayOutputWithContext(context.Context) GetIsisSummaryAddress6ArrayOutput
}

type GetIsisSummaryAddress6Array []GetIsisSummaryAddress6Input

func (GetIsisSummaryAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisSummaryAddress6)(nil)).Elem()
}

func (i GetIsisSummaryAddress6Array) ToGetIsisSummaryAddress6ArrayOutput() GetIsisSummaryAddress6ArrayOutput {
	return i.ToGetIsisSummaryAddress6ArrayOutputWithContext(context.Background())
}

func (i GetIsisSummaryAddress6Array) ToGetIsisSummaryAddress6ArrayOutputWithContext(ctx context.Context) GetIsisSummaryAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisSummaryAddress6ArrayOutput)
}

type GetIsisSummaryAddress6Output struct{ *pulumi.OutputState }

func (GetIsisSummaryAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisSummaryAddress6)(nil)).Elem()
}

func (o GetIsisSummaryAddress6Output) ToGetIsisSummaryAddress6Output() GetIsisSummaryAddress6Output {
	return o
}

func (o GetIsisSummaryAddress6Output) ToGetIsisSummaryAddress6OutputWithContext(ctx context.Context) GetIsisSummaryAddress6Output {
	return o
}

// Prefix entry ID.
func (o GetIsisSummaryAddress6Output) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisSummaryAddress6) int { return v.Id }).(pulumi.IntOutput)
}

// Level.
func (o GetIsisSummaryAddress6Output) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisSummaryAddress6) string { return v.Level }).(pulumi.StringOutput)
}

// IPv6 prefix.
func (o GetIsisSummaryAddress6Output) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisSummaryAddress6) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetIsisSummaryAddress6ArrayOutput struct{ *pulumi.OutputState }

func (GetIsisSummaryAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisSummaryAddress6)(nil)).Elem()
}

func (o GetIsisSummaryAddress6ArrayOutput) ToGetIsisSummaryAddress6ArrayOutput() GetIsisSummaryAddress6ArrayOutput {
	return o
}

func (o GetIsisSummaryAddress6ArrayOutput) ToGetIsisSummaryAddress6ArrayOutputWithContext(ctx context.Context) GetIsisSummaryAddress6ArrayOutput {
	return o
}

func (o GetIsisSummaryAddress6ArrayOutput) Index(i pulumi.IntInput) GetIsisSummaryAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIsisSummaryAddress6 {
		return vs[0].([]GetIsisSummaryAddress6)[vs[1].(int)]
	}).(GetIsisSummaryAddress6Output)
}

type GetIsisSummaryAddress struct {
	// Prefix entry ID.
	Id int `pulumi:"id"`
	// Level.
	Level string `pulumi:"level"`
	// Prefix.
	Prefix string `pulumi:"prefix"`
}

// GetIsisSummaryAddressInput is an input type that accepts GetIsisSummaryAddressArgs and GetIsisSummaryAddressOutput values.
// You can construct a concrete instance of `GetIsisSummaryAddressInput` via:
//
//	GetIsisSummaryAddressArgs{...}
type GetIsisSummaryAddressInput interface {
	pulumi.Input

	ToGetIsisSummaryAddressOutput() GetIsisSummaryAddressOutput
	ToGetIsisSummaryAddressOutputWithContext(context.Context) GetIsisSummaryAddressOutput
}

type GetIsisSummaryAddressArgs struct {
	// Prefix entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Level.
	Level pulumi.StringInput `pulumi:"level"`
	// Prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetIsisSummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisSummaryAddress)(nil)).Elem()
}

func (i GetIsisSummaryAddressArgs) ToGetIsisSummaryAddressOutput() GetIsisSummaryAddressOutput {
	return i.ToGetIsisSummaryAddressOutputWithContext(context.Background())
}

func (i GetIsisSummaryAddressArgs) ToGetIsisSummaryAddressOutputWithContext(ctx context.Context) GetIsisSummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisSummaryAddressOutput)
}

// GetIsisSummaryAddressArrayInput is an input type that accepts GetIsisSummaryAddressArray and GetIsisSummaryAddressArrayOutput values.
// You can construct a concrete instance of `GetIsisSummaryAddressArrayInput` via:
//
//	GetIsisSummaryAddressArray{ GetIsisSummaryAddressArgs{...} }
type GetIsisSummaryAddressArrayInput interface {
	pulumi.Input

	ToGetIsisSummaryAddressArrayOutput() GetIsisSummaryAddressArrayOutput
	ToGetIsisSummaryAddressArrayOutputWithContext(context.Context) GetIsisSummaryAddressArrayOutput
}

type GetIsisSummaryAddressArray []GetIsisSummaryAddressInput

func (GetIsisSummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisSummaryAddress)(nil)).Elem()
}

func (i GetIsisSummaryAddressArray) ToGetIsisSummaryAddressArrayOutput() GetIsisSummaryAddressArrayOutput {
	return i.ToGetIsisSummaryAddressArrayOutputWithContext(context.Background())
}

func (i GetIsisSummaryAddressArray) ToGetIsisSummaryAddressArrayOutputWithContext(ctx context.Context) GetIsisSummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIsisSummaryAddressArrayOutput)
}

type GetIsisSummaryAddressOutput struct{ *pulumi.OutputState }

func (GetIsisSummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIsisSummaryAddress)(nil)).Elem()
}

func (o GetIsisSummaryAddressOutput) ToGetIsisSummaryAddressOutput() GetIsisSummaryAddressOutput {
	return o
}

func (o GetIsisSummaryAddressOutput) ToGetIsisSummaryAddressOutputWithContext(ctx context.Context) GetIsisSummaryAddressOutput {
	return o
}

// Prefix entry ID.
func (o GetIsisSummaryAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetIsisSummaryAddress) int { return v.Id }).(pulumi.IntOutput)
}

// Level.
func (o GetIsisSummaryAddressOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisSummaryAddress) string { return v.Level }).(pulumi.StringOutput)
}

// Prefix.
func (o GetIsisSummaryAddressOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetIsisSummaryAddress) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetIsisSummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (GetIsisSummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIsisSummaryAddress)(nil)).Elem()
}

func (o GetIsisSummaryAddressArrayOutput) ToGetIsisSummaryAddressArrayOutput() GetIsisSummaryAddressArrayOutput {
	return o
}

func (o GetIsisSummaryAddressArrayOutput) ToGetIsisSummaryAddressArrayOutputWithContext(ctx context.Context) GetIsisSummaryAddressArrayOutput {
	return o
}

func (o GetIsisSummaryAddressArrayOutput) Index(i pulumi.IntInput) GetIsisSummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIsisSummaryAddress {
		return vs[0].([]GetIsisSummaryAddress)[vs[1].(int)]
	}).(GetIsisSummaryAddressOutput)
}

type GetKeychainKey struct {
	// Lifetime of received authentication key (format: hh:mm:ss day month year).
	AcceptLifetime string `pulumi:"acceptLifetime"`
	// Cryptographic algorithm.
	Algorithm string `pulumi:"algorithm"`
	// Key ID (0 - 2147483647).
	Id int `pulumi:"id"`
	// Password for the key (max. = 35 characters).
	KeyString string `pulumi:"keyString"`
	// Lifetime of sent authentication key (format: hh:mm:ss day month year).
	SendLifetime string `pulumi:"sendLifetime"`
}

// GetKeychainKeyInput is an input type that accepts GetKeychainKeyArgs and GetKeychainKeyOutput values.
// You can construct a concrete instance of `GetKeychainKeyInput` via:
//
//	GetKeychainKeyArgs{...}
type GetKeychainKeyInput interface {
	pulumi.Input

	ToGetKeychainKeyOutput() GetKeychainKeyOutput
	ToGetKeychainKeyOutputWithContext(context.Context) GetKeychainKeyOutput
}

type GetKeychainKeyArgs struct {
	// Lifetime of received authentication key (format: hh:mm:ss day month year).
	AcceptLifetime pulumi.StringInput `pulumi:"acceptLifetime"`
	// Cryptographic algorithm.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Key ID (0 - 2147483647).
	Id pulumi.IntInput `pulumi:"id"`
	// Password for the key (max. = 35 characters).
	KeyString pulumi.StringInput `pulumi:"keyString"`
	// Lifetime of sent authentication key (format: hh:mm:ss day month year).
	SendLifetime pulumi.StringInput `pulumi:"sendLifetime"`
}

func (GetKeychainKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeychainKey)(nil)).Elem()
}

func (i GetKeychainKeyArgs) ToGetKeychainKeyOutput() GetKeychainKeyOutput {
	return i.ToGetKeychainKeyOutputWithContext(context.Background())
}

func (i GetKeychainKeyArgs) ToGetKeychainKeyOutputWithContext(ctx context.Context) GetKeychainKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeychainKeyOutput)
}

// GetKeychainKeyArrayInput is an input type that accepts GetKeychainKeyArray and GetKeychainKeyArrayOutput values.
// You can construct a concrete instance of `GetKeychainKeyArrayInput` via:
//
//	GetKeychainKeyArray{ GetKeychainKeyArgs{...} }
type GetKeychainKeyArrayInput interface {
	pulumi.Input

	ToGetKeychainKeyArrayOutput() GetKeychainKeyArrayOutput
	ToGetKeychainKeyArrayOutputWithContext(context.Context) GetKeychainKeyArrayOutput
}

type GetKeychainKeyArray []GetKeychainKeyInput

func (GetKeychainKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeychainKey)(nil)).Elem()
}

func (i GetKeychainKeyArray) ToGetKeychainKeyArrayOutput() GetKeychainKeyArrayOutput {
	return i.ToGetKeychainKeyArrayOutputWithContext(context.Background())
}

func (i GetKeychainKeyArray) ToGetKeychainKeyArrayOutputWithContext(ctx context.Context) GetKeychainKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeychainKeyArrayOutput)
}

type GetKeychainKeyOutput struct{ *pulumi.OutputState }

func (GetKeychainKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeychainKey)(nil)).Elem()
}

func (o GetKeychainKeyOutput) ToGetKeychainKeyOutput() GetKeychainKeyOutput {
	return o
}

func (o GetKeychainKeyOutput) ToGetKeychainKeyOutputWithContext(ctx context.Context) GetKeychainKeyOutput {
	return o
}

// Lifetime of received authentication key (format: hh:mm:ss day month year).
func (o GetKeychainKeyOutput) AcceptLifetime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeychainKey) string { return v.AcceptLifetime }).(pulumi.StringOutput)
}

// Cryptographic algorithm.
func (o GetKeychainKeyOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeychainKey) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Key ID (0 - 2147483647).
func (o GetKeychainKeyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeychainKey) int { return v.Id }).(pulumi.IntOutput)
}

// Password for the key (max. = 35 characters).
func (o GetKeychainKeyOutput) KeyString() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeychainKey) string { return v.KeyString }).(pulumi.StringOutput)
}

// Lifetime of sent authentication key (format: hh:mm:ss day month year).
func (o GetKeychainKeyOutput) SendLifetime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeychainKey) string { return v.SendLifetime }).(pulumi.StringOutput)
}

type GetKeychainKeyArrayOutput struct{ *pulumi.OutputState }

func (GetKeychainKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeychainKey)(nil)).Elem()
}

func (o GetKeychainKeyArrayOutput) ToGetKeychainKeyArrayOutput() GetKeychainKeyArrayOutput {
	return o
}

func (o GetKeychainKeyArrayOutput) ToGetKeychainKeyArrayOutputWithContext(ctx context.Context) GetKeychainKeyArrayOutput {
	return o
}

func (o GetKeychainKeyArrayOutput) Index(i pulumi.IntInput) GetKeychainKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeychainKey {
		return vs[0].([]GetKeychainKey)[vs[1].(int)]
	}).(GetKeychainKeyOutput)
}

type GetMulticast6Interface struct {
	// Time before old neighbour information expires (1 - 65535 sec, default = 105).
	HelloHoldtime int `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages  (1 - 65535 sec, default = 30)..
	HelloInterval int `pulumi:"helloInterval"`
	// Interface name.
	Name string `pulumi:"name"`
}

// GetMulticast6InterfaceInput is an input type that accepts GetMulticast6InterfaceArgs and GetMulticast6InterfaceOutput values.
// You can construct a concrete instance of `GetMulticast6InterfaceInput` via:
//
//	GetMulticast6InterfaceArgs{...}
type GetMulticast6InterfaceInput interface {
	pulumi.Input

	ToGetMulticast6InterfaceOutput() GetMulticast6InterfaceOutput
	ToGetMulticast6InterfaceOutputWithContext(context.Context) GetMulticast6InterfaceOutput
}

type GetMulticast6InterfaceArgs struct {
	// Time before old neighbour information expires (1 - 65535 sec, default = 105).
	HelloHoldtime pulumi.IntInput `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages  (1 - 65535 sec, default = 30)..
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetMulticast6InterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticast6Interface)(nil)).Elem()
}

func (i GetMulticast6InterfaceArgs) ToGetMulticast6InterfaceOutput() GetMulticast6InterfaceOutput {
	return i.ToGetMulticast6InterfaceOutputWithContext(context.Background())
}

func (i GetMulticast6InterfaceArgs) ToGetMulticast6InterfaceOutputWithContext(ctx context.Context) GetMulticast6InterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticast6InterfaceOutput)
}

// GetMulticast6InterfaceArrayInput is an input type that accepts GetMulticast6InterfaceArray and GetMulticast6InterfaceArrayOutput values.
// You can construct a concrete instance of `GetMulticast6InterfaceArrayInput` via:
//
//	GetMulticast6InterfaceArray{ GetMulticast6InterfaceArgs{...} }
type GetMulticast6InterfaceArrayInput interface {
	pulumi.Input

	ToGetMulticast6InterfaceArrayOutput() GetMulticast6InterfaceArrayOutput
	ToGetMulticast6InterfaceArrayOutputWithContext(context.Context) GetMulticast6InterfaceArrayOutput
}

type GetMulticast6InterfaceArray []GetMulticast6InterfaceInput

func (GetMulticast6InterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticast6Interface)(nil)).Elem()
}

func (i GetMulticast6InterfaceArray) ToGetMulticast6InterfaceArrayOutput() GetMulticast6InterfaceArrayOutput {
	return i.ToGetMulticast6InterfaceArrayOutputWithContext(context.Background())
}

func (i GetMulticast6InterfaceArray) ToGetMulticast6InterfaceArrayOutputWithContext(ctx context.Context) GetMulticast6InterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticast6InterfaceArrayOutput)
}

type GetMulticast6InterfaceOutput struct{ *pulumi.OutputState }

func (GetMulticast6InterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticast6Interface)(nil)).Elem()
}

func (o GetMulticast6InterfaceOutput) ToGetMulticast6InterfaceOutput() GetMulticast6InterfaceOutput {
	return o
}

func (o GetMulticast6InterfaceOutput) ToGetMulticast6InterfaceOutputWithContext(ctx context.Context) GetMulticast6InterfaceOutput {
	return o
}

// Time before old neighbour information expires (1 - 65535 sec, default = 105).
func (o GetMulticast6InterfaceOutput) HelloHoldtime() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticast6Interface) int { return v.HelloHoldtime }).(pulumi.IntOutput)
}

// Interval between sending PIM hello messages  (1 - 65535 sec, default = 30)..
func (o GetMulticast6InterfaceOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticast6Interface) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// Interface name.
func (o GetMulticast6InterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticast6Interface) string { return v.Name }).(pulumi.StringOutput)
}

type GetMulticast6InterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetMulticast6InterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticast6Interface)(nil)).Elem()
}

func (o GetMulticast6InterfaceArrayOutput) ToGetMulticast6InterfaceArrayOutput() GetMulticast6InterfaceArrayOutput {
	return o
}

func (o GetMulticast6InterfaceArrayOutput) ToGetMulticast6InterfaceArrayOutputWithContext(ctx context.Context) GetMulticast6InterfaceArrayOutput {
	return o
}

func (o GetMulticast6InterfaceArrayOutput) Index(i pulumi.IntInput) GetMulticast6InterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticast6Interface {
		return vs[0].([]GetMulticast6Interface)[vs[1].(int)]
	}).(GetMulticast6InterfaceOutput)
}

type GetMulticast6PimSmGlobal struct {
	// Limit of packets/sec per source registered through this RP (0 means unlimited).
	RegisterRateLimit int `pulumi:"registerRateLimit"`
	// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses []GetMulticast6PimSmGlobalRpAddress `pulumi:"rpAddresses"`
}

// GetMulticast6PimSmGlobalInput is an input type that accepts GetMulticast6PimSmGlobalArgs and GetMulticast6PimSmGlobalOutput values.
// You can construct a concrete instance of `GetMulticast6PimSmGlobalInput` via:
//
//	GetMulticast6PimSmGlobalArgs{...}
type GetMulticast6PimSmGlobalInput interface {
	pulumi.Input

	ToGetMulticast6PimSmGlobalOutput() GetMulticast6PimSmGlobalOutput
	ToGetMulticast6PimSmGlobalOutputWithContext(context.Context) GetMulticast6PimSmGlobalOutput
}

type GetMulticast6PimSmGlobalArgs struct {
	// Limit of packets/sec per source registered through this RP (0 means unlimited).
	RegisterRateLimit pulumi.IntInput `pulumi:"registerRateLimit"`
	// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses GetMulticast6PimSmGlobalRpAddressArrayInput `pulumi:"rpAddresses"`
}

func (GetMulticast6PimSmGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticast6PimSmGlobal)(nil)).Elem()
}

func (i GetMulticast6PimSmGlobalArgs) ToGetMulticast6PimSmGlobalOutput() GetMulticast6PimSmGlobalOutput {
	return i.ToGetMulticast6PimSmGlobalOutputWithContext(context.Background())
}

func (i GetMulticast6PimSmGlobalArgs) ToGetMulticast6PimSmGlobalOutputWithContext(ctx context.Context) GetMulticast6PimSmGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticast6PimSmGlobalOutput)
}

// GetMulticast6PimSmGlobalArrayInput is an input type that accepts GetMulticast6PimSmGlobalArray and GetMulticast6PimSmGlobalArrayOutput values.
// You can construct a concrete instance of `GetMulticast6PimSmGlobalArrayInput` via:
//
//	GetMulticast6PimSmGlobalArray{ GetMulticast6PimSmGlobalArgs{...} }
type GetMulticast6PimSmGlobalArrayInput interface {
	pulumi.Input

	ToGetMulticast6PimSmGlobalArrayOutput() GetMulticast6PimSmGlobalArrayOutput
	ToGetMulticast6PimSmGlobalArrayOutputWithContext(context.Context) GetMulticast6PimSmGlobalArrayOutput
}

type GetMulticast6PimSmGlobalArray []GetMulticast6PimSmGlobalInput

func (GetMulticast6PimSmGlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticast6PimSmGlobal)(nil)).Elem()
}

func (i GetMulticast6PimSmGlobalArray) ToGetMulticast6PimSmGlobalArrayOutput() GetMulticast6PimSmGlobalArrayOutput {
	return i.ToGetMulticast6PimSmGlobalArrayOutputWithContext(context.Background())
}

func (i GetMulticast6PimSmGlobalArray) ToGetMulticast6PimSmGlobalArrayOutputWithContext(ctx context.Context) GetMulticast6PimSmGlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticast6PimSmGlobalArrayOutput)
}

type GetMulticast6PimSmGlobalOutput struct{ *pulumi.OutputState }

func (GetMulticast6PimSmGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticast6PimSmGlobal)(nil)).Elem()
}

func (o GetMulticast6PimSmGlobalOutput) ToGetMulticast6PimSmGlobalOutput() GetMulticast6PimSmGlobalOutput {
	return o
}

func (o GetMulticast6PimSmGlobalOutput) ToGetMulticast6PimSmGlobalOutputWithContext(ctx context.Context) GetMulticast6PimSmGlobalOutput {
	return o
}

// Limit of packets/sec per source registered through this RP (0 means unlimited).
func (o GetMulticast6PimSmGlobalOutput) RegisterRateLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticast6PimSmGlobal) int { return v.RegisterRateLimit }).(pulumi.IntOutput)
}

// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
func (o GetMulticast6PimSmGlobalOutput) RpAddresses() GetMulticast6PimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v GetMulticast6PimSmGlobal) []GetMulticast6PimSmGlobalRpAddress { return v.RpAddresses }).(GetMulticast6PimSmGlobalRpAddressArrayOutput)
}

type GetMulticast6PimSmGlobalArrayOutput struct{ *pulumi.OutputState }

func (GetMulticast6PimSmGlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticast6PimSmGlobal)(nil)).Elem()
}

func (o GetMulticast6PimSmGlobalArrayOutput) ToGetMulticast6PimSmGlobalArrayOutput() GetMulticast6PimSmGlobalArrayOutput {
	return o
}

func (o GetMulticast6PimSmGlobalArrayOutput) ToGetMulticast6PimSmGlobalArrayOutputWithContext(ctx context.Context) GetMulticast6PimSmGlobalArrayOutput {
	return o
}

func (o GetMulticast6PimSmGlobalArrayOutput) Index(i pulumi.IntInput) GetMulticast6PimSmGlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticast6PimSmGlobal {
		return vs[0].([]GetMulticast6PimSmGlobal)[vs[1].(int)]
	}).(GetMulticast6PimSmGlobalOutput)
}

type GetMulticast6PimSmGlobalRpAddress struct {
	// ID of the entry.
	Id int `pulumi:"id"`
	// RP router IPv6 address.
	Ip6Address string `pulumi:"ip6Address"`
}

// GetMulticast6PimSmGlobalRpAddressInput is an input type that accepts GetMulticast6PimSmGlobalRpAddressArgs and GetMulticast6PimSmGlobalRpAddressOutput values.
// You can construct a concrete instance of `GetMulticast6PimSmGlobalRpAddressInput` via:
//
//	GetMulticast6PimSmGlobalRpAddressArgs{...}
type GetMulticast6PimSmGlobalRpAddressInput interface {
	pulumi.Input

	ToGetMulticast6PimSmGlobalRpAddressOutput() GetMulticast6PimSmGlobalRpAddressOutput
	ToGetMulticast6PimSmGlobalRpAddressOutputWithContext(context.Context) GetMulticast6PimSmGlobalRpAddressOutput
}

type GetMulticast6PimSmGlobalRpAddressArgs struct {
	// ID of the entry.
	Id pulumi.IntInput `pulumi:"id"`
	// RP router IPv6 address.
	Ip6Address pulumi.StringInput `pulumi:"ip6Address"`
}

func (GetMulticast6PimSmGlobalRpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (i GetMulticast6PimSmGlobalRpAddressArgs) ToGetMulticast6PimSmGlobalRpAddressOutput() GetMulticast6PimSmGlobalRpAddressOutput {
	return i.ToGetMulticast6PimSmGlobalRpAddressOutputWithContext(context.Background())
}

func (i GetMulticast6PimSmGlobalRpAddressArgs) ToGetMulticast6PimSmGlobalRpAddressOutputWithContext(ctx context.Context) GetMulticast6PimSmGlobalRpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticast6PimSmGlobalRpAddressOutput)
}

// GetMulticast6PimSmGlobalRpAddressArrayInput is an input type that accepts GetMulticast6PimSmGlobalRpAddressArray and GetMulticast6PimSmGlobalRpAddressArrayOutput values.
// You can construct a concrete instance of `GetMulticast6PimSmGlobalRpAddressArrayInput` via:
//
//	GetMulticast6PimSmGlobalRpAddressArray{ GetMulticast6PimSmGlobalRpAddressArgs{...} }
type GetMulticast6PimSmGlobalRpAddressArrayInput interface {
	pulumi.Input

	ToGetMulticast6PimSmGlobalRpAddressArrayOutput() GetMulticast6PimSmGlobalRpAddressArrayOutput
	ToGetMulticast6PimSmGlobalRpAddressArrayOutputWithContext(context.Context) GetMulticast6PimSmGlobalRpAddressArrayOutput
}

type GetMulticast6PimSmGlobalRpAddressArray []GetMulticast6PimSmGlobalRpAddressInput

func (GetMulticast6PimSmGlobalRpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (i GetMulticast6PimSmGlobalRpAddressArray) ToGetMulticast6PimSmGlobalRpAddressArrayOutput() GetMulticast6PimSmGlobalRpAddressArrayOutput {
	return i.ToGetMulticast6PimSmGlobalRpAddressArrayOutputWithContext(context.Background())
}

func (i GetMulticast6PimSmGlobalRpAddressArray) ToGetMulticast6PimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) GetMulticast6PimSmGlobalRpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticast6PimSmGlobalRpAddressArrayOutput)
}

type GetMulticast6PimSmGlobalRpAddressOutput struct{ *pulumi.OutputState }

func (GetMulticast6PimSmGlobalRpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (o GetMulticast6PimSmGlobalRpAddressOutput) ToGetMulticast6PimSmGlobalRpAddressOutput() GetMulticast6PimSmGlobalRpAddressOutput {
	return o
}

func (o GetMulticast6PimSmGlobalRpAddressOutput) ToGetMulticast6PimSmGlobalRpAddressOutputWithContext(ctx context.Context) GetMulticast6PimSmGlobalRpAddressOutput {
	return o
}

// ID of the entry.
func (o GetMulticast6PimSmGlobalRpAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticast6PimSmGlobalRpAddress) int { return v.Id }).(pulumi.IntOutput)
}

// RP router IPv6 address.
func (o GetMulticast6PimSmGlobalRpAddressOutput) Ip6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticast6PimSmGlobalRpAddress) string { return v.Ip6Address }).(pulumi.StringOutput)
}

type GetMulticast6PimSmGlobalRpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetMulticast6PimSmGlobalRpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (o GetMulticast6PimSmGlobalRpAddressArrayOutput) ToGetMulticast6PimSmGlobalRpAddressArrayOutput() GetMulticast6PimSmGlobalRpAddressArrayOutput {
	return o
}

func (o GetMulticast6PimSmGlobalRpAddressArrayOutput) ToGetMulticast6PimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) GetMulticast6PimSmGlobalRpAddressArrayOutput {
	return o
}

func (o GetMulticast6PimSmGlobalRpAddressArrayOutput) Index(i pulumi.IntInput) GetMulticast6PimSmGlobalRpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticast6PimSmGlobalRpAddress {
		return vs[0].([]GetMulticast6PimSmGlobalRpAddress)[vs[1].(int)]
	}).(GetMulticast6PimSmGlobalRpAddressOutput)
}

type GetMulticastInterface struct {
	// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).
	Bfd string `pulumi:"bfd"`
	// Exclude GenID from hello packets (compatibility with old Cisco IOS).
	CiscoExcludeGenid string `pulumi:"ciscoExcludeGenid"`
	// DR election priority.
	DrPriority int `pulumi:"drPriority"`
	// Time before old neighbor information expires (0 - 65535 sec, default = 105).
	HelloHoldtime int `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
	HelloInterval int `pulumi:"helloInterval"`
	// IGMP configuration options. The structure of `igmp` block is documented below.
	Igmps []GetMulticastInterfaceIgmp `pulumi:"igmps"`
	// Join multicast groups. The structure of `joinGroup` block is documented below.
	JoinGroups []GetMulticastInterfaceJoinGroup `pulumi:"joinGroups"`
	// Acceptable source for multicast group.
	MulticastFlow string `pulumi:"multicastFlow"`
	// Interface name.
	Name string `pulumi:"name"`
	// Routers acknowledged as neighbor routers.
	NeighbourFilter string `pulumi:"neighbourFilter"`
	// Enable/disable listening to IGMP but not participating in PIM.
	Passive string `pulumi:"passive"`
	// PIM operation mode.
	PimMode string `pulumi:"pimMode"`
	// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
	PropagationDelay int `pulumi:"propagationDelay"`
	// Enable/disable compete to become RP in elections.
	RpCandidate string `pulumi:"rpCandidate"`
	// Multicast groups managed by this RP.
	RpCandidateGroup string `pulumi:"rpCandidateGroup"`
	// RP candidate advertisement interval (1 - 16383 sec, default = 60).
	RpCandidateInterval int `pulumi:"rpCandidateInterval"`
	// Router's priority as RP.
	RpCandidatePriority int `pulumi:"rpCandidatePriority"`
	// Enable/disable fail back for RPF neighbor query.
	RpfNbrFailBack string `pulumi:"rpfNbrFailBack"`
	// Filter for fail back RPF neighbors.
	RpfNbrFailBackFilter string `pulumi:"rpfNbrFailBackFilter"`
	// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
	StateRefreshInterval int `pulumi:"stateRefreshInterval"`
	// Statically set multicast groups to forward out.
	StaticGroup string `pulumi:"staticGroup"`
	// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
	TtlThreshold int `pulumi:"ttlThreshold"`
}

// GetMulticastInterfaceInput is an input type that accepts GetMulticastInterfaceArgs and GetMulticastInterfaceOutput values.
// You can construct a concrete instance of `GetMulticastInterfaceInput` via:
//
//	GetMulticastInterfaceArgs{...}
type GetMulticastInterfaceInput interface {
	pulumi.Input

	ToGetMulticastInterfaceOutput() GetMulticastInterfaceOutput
	ToGetMulticastInterfaceOutputWithContext(context.Context) GetMulticastInterfaceOutput
}

type GetMulticastInterfaceArgs struct {
	// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).
	Bfd pulumi.StringInput `pulumi:"bfd"`
	// Exclude GenID from hello packets (compatibility with old Cisco IOS).
	CiscoExcludeGenid pulumi.StringInput `pulumi:"ciscoExcludeGenid"`
	// DR election priority.
	DrPriority pulumi.IntInput `pulumi:"drPriority"`
	// Time before old neighbor information expires (0 - 65535 sec, default = 105).
	HelloHoldtime pulumi.IntInput `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// IGMP configuration options. The structure of `igmp` block is documented below.
	Igmps GetMulticastInterfaceIgmpArrayInput `pulumi:"igmps"`
	// Join multicast groups. The structure of `joinGroup` block is documented below.
	JoinGroups GetMulticastInterfaceJoinGroupArrayInput `pulumi:"joinGroups"`
	// Acceptable source for multicast group.
	MulticastFlow pulumi.StringInput `pulumi:"multicastFlow"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Routers acknowledged as neighbor routers.
	NeighbourFilter pulumi.StringInput `pulumi:"neighbourFilter"`
	// Enable/disable listening to IGMP but not participating in PIM.
	Passive pulumi.StringInput `pulumi:"passive"`
	// PIM operation mode.
	PimMode pulumi.StringInput `pulumi:"pimMode"`
	// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
	PropagationDelay pulumi.IntInput `pulumi:"propagationDelay"`
	// Enable/disable compete to become RP in elections.
	RpCandidate pulumi.StringInput `pulumi:"rpCandidate"`
	// Multicast groups managed by this RP.
	RpCandidateGroup pulumi.StringInput `pulumi:"rpCandidateGroup"`
	// RP candidate advertisement interval (1 - 16383 sec, default = 60).
	RpCandidateInterval pulumi.IntInput `pulumi:"rpCandidateInterval"`
	// Router's priority as RP.
	RpCandidatePriority pulumi.IntInput `pulumi:"rpCandidatePriority"`
	// Enable/disable fail back for RPF neighbor query.
	RpfNbrFailBack pulumi.StringInput `pulumi:"rpfNbrFailBack"`
	// Filter for fail back RPF neighbors.
	RpfNbrFailBackFilter pulumi.StringInput `pulumi:"rpfNbrFailBackFilter"`
	// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
	StateRefreshInterval pulumi.IntInput `pulumi:"stateRefreshInterval"`
	// Statically set multicast groups to forward out.
	StaticGroup pulumi.StringInput `pulumi:"staticGroup"`
	// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
	TtlThreshold pulumi.IntInput `pulumi:"ttlThreshold"`
}

func (GetMulticastInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastInterface)(nil)).Elem()
}

func (i GetMulticastInterfaceArgs) ToGetMulticastInterfaceOutput() GetMulticastInterfaceOutput {
	return i.ToGetMulticastInterfaceOutputWithContext(context.Background())
}

func (i GetMulticastInterfaceArgs) ToGetMulticastInterfaceOutputWithContext(ctx context.Context) GetMulticastInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastInterfaceOutput)
}

// GetMulticastInterfaceArrayInput is an input type that accepts GetMulticastInterfaceArray and GetMulticastInterfaceArrayOutput values.
// You can construct a concrete instance of `GetMulticastInterfaceArrayInput` via:
//
//	GetMulticastInterfaceArray{ GetMulticastInterfaceArgs{...} }
type GetMulticastInterfaceArrayInput interface {
	pulumi.Input

	ToGetMulticastInterfaceArrayOutput() GetMulticastInterfaceArrayOutput
	ToGetMulticastInterfaceArrayOutputWithContext(context.Context) GetMulticastInterfaceArrayOutput
}

type GetMulticastInterfaceArray []GetMulticastInterfaceInput

func (GetMulticastInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastInterface)(nil)).Elem()
}

func (i GetMulticastInterfaceArray) ToGetMulticastInterfaceArrayOutput() GetMulticastInterfaceArrayOutput {
	return i.ToGetMulticastInterfaceArrayOutputWithContext(context.Background())
}

func (i GetMulticastInterfaceArray) ToGetMulticastInterfaceArrayOutputWithContext(ctx context.Context) GetMulticastInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastInterfaceArrayOutput)
}

type GetMulticastInterfaceOutput struct{ *pulumi.OutputState }

func (GetMulticastInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastInterface)(nil)).Elem()
}

func (o GetMulticastInterfaceOutput) ToGetMulticastInterfaceOutput() GetMulticastInterfaceOutput {
	return o
}

func (o GetMulticastInterfaceOutput) ToGetMulticastInterfaceOutputWithContext(ctx context.Context) GetMulticastInterfaceOutput {
	return o
}

// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).
func (o GetMulticastInterfaceOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.Bfd }).(pulumi.StringOutput)
}

// Exclude GenID from hello packets (compatibility with old Cisco IOS).
func (o GetMulticastInterfaceOutput) CiscoExcludeGenid() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.CiscoExcludeGenid }).(pulumi.StringOutput)
}

// DR election priority.
func (o GetMulticastInterfaceOutput) DrPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterface) int { return v.DrPriority }).(pulumi.IntOutput)
}

// Time before old neighbor information expires (0 - 65535 sec, default = 105).
func (o GetMulticastInterfaceOutput) HelloHoldtime() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterface) int { return v.HelloHoldtime }).(pulumi.IntOutput)
}

// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
func (o GetMulticastInterfaceOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterface) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// IGMP configuration options. The structure of `igmp` block is documented below.
func (o GetMulticastInterfaceOutput) Igmps() GetMulticastInterfaceIgmpArrayOutput {
	return o.ApplyT(func(v GetMulticastInterface) []GetMulticastInterfaceIgmp { return v.Igmps }).(GetMulticastInterfaceIgmpArrayOutput)
}

// Join multicast groups. The structure of `joinGroup` block is documented below.
func (o GetMulticastInterfaceOutput) JoinGroups() GetMulticastInterfaceJoinGroupArrayOutput {
	return o.ApplyT(func(v GetMulticastInterface) []GetMulticastInterfaceJoinGroup { return v.JoinGroups }).(GetMulticastInterfaceJoinGroupArrayOutput)
}

// Acceptable source for multicast group.
func (o GetMulticastInterfaceOutput) MulticastFlow() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.MulticastFlow }).(pulumi.StringOutput)
}

// Interface name.
func (o GetMulticastInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.Name }).(pulumi.StringOutput)
}

// Routers acknowledged as neighbor routers.
func (o GetMulticastInterfaceOutput) NeighbourFilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.NeighbourFilter }).(pulumi.StringOutput)
}

// Enable/disable listening to IGMP but not participating in PIM.
func (o GetMulticastInterfaceOutput) Passive() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.Passive }).(pulumi.StringOutput)
}

// PIM operation mode.
func (o GetMulticastInterfaceOutput) PimMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.PimMode }).(pulumi.StringOutput)
}

// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
func (o GetMulticastInterfaceOutput) PropagationDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterface) int { return v.PropagationDelay }).(pulumi.IntOutput)
}

// Enable/disable compete to become RP in elections.
func (o GetMulticastInterfaceOutput) RpCandidate() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.RpCandidate }).(pulumi.StringOutput)
}

// Multicast groups managed by this RP.
func (o GetMulticastInterfaceOutput) RpCandidateGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.RpCandidateGroup }).(pulumi.StringOutput)
}

// RP candidate advertisement interval (1 - 16383 sec, default = 60).
func (o GetMulticastInterfaceOutput) RpCandidateInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterface) int { return v.RpCandidateInterval }).(pulumi.IntOutput)
}

// Router's priority as RP.
func (o GetMulticastInterfaceOutput) RpCandidatePriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterface) int { return v.RpCandidatePriority }).(pulumi.IntOutput)
}

// Enable/disable fail back for RPF neighbor query.
func (o GetMulticastInterfaceOutput) RpfNbrFailBack() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.RpfNbrFailBack }).(pulumi.StringOutput)
}

// Filter for fail back RPF neighbors.
func (o GetMulticastInterfaceOutput) RpfNbrFailBackFilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.RpfNbrFailBackFilter }).(pulumi.StringOutput)
}

// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
func (o GetMulticastInterfaceOutput) StateRefreshInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterface) int { return v.StateRefreshInterval }).(pulumi.IntOutput)
}

// Statically set multicast groups to forward out.
func (o GetMulticastInterfaceOutput) StaticGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterface) string { return v.StaticGroup }).(pulumi.StringOutput)
}

// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
func (o GetMulticastInterfaceOutput) TtlThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterface) int { return v.TtlThreshold }).(pulumi.IntOutput)
}

type GetMulticastInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastInterface)(nil)).Elem()
}

func (o GetMulticastInterfaceArrayOutput) ToGetMulticastInterfaceArrayOutput() GetMulticastInterfaceArrayOutput {
	return o
}

func (o GetMulticastInterfaceArrayOutput) ToGetMulticastInterfaceArrayOutputWithContext(ctx context.Context) GetMulticastInterfaceArrayOutput {
	return o
}

func (o GetMulticastInterfaceArrayOutput) Index(i pulumi.IntInput) GetMulticastInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastInterface {
		return vs[0].([]GetMulticastInterface)[vs[1].(int)]
	}).(GetMulticastInterfaceOutput)
}

type GetMulticastInterfaceIgmp struct {
	// Groups IGMP hosts are allowed to join.
	AccessGroup string `pulumi:"accessGroup"`
	// Groups to drop membership for immediately after receiving IGMPv2 leave.
	ImmediateLeaveGroup string `pulumi:"immediateLeaveGroup"`
	// Number of group specific queries before removing group (2 - 7, default = 2).
	LastMemberQueryCount int `pulumi:"lastMemberQueryCount"`
	// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
	LastMemberQueryInterval int `pulumi:"lastMemberQueryInterval"`
	// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
	QueryInterval int `pulumi:"queryInterval"`
	// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
	QueryMaxResponseTime int `pulumi:"queryMaxResponseTime"`
	// Timeout between queries before becoming querier for network (60 - 900, default = 255).
	QueryTimeout int `pulumi:"queryTimeout"`
	// Enable/disable require IGMP packets contain router alert option.
	RouterAlertCheck string `pulumi:"routerAlertCheck"`
	// Maximum version of IGMP to support.
	Version string `pulumi:"version"`
}

// GetMulticastInterfaceIgmpInput is an input type that accepts GetMulticastInterfaceIgmpArgs and GetMulticastInterfaceIgmpOutput values.
// You can construct a concrete instance of `GetMulticastInterfaceIgmpInput` via:
//
//	GetMulticastInterfaceIgmpArgs{...}
type GetMulticastInterfaceIgmpInput interface {
	pulumi.Input

	ToGetMulticastInterfaceIgmpOutput() GetMulticastInterfaceIgmpOutput
	ToGetMulticastInterfaceIgmpOutputWithContext(context.Context) GetMulticastInterfaceIgmpOutput
}

type GetMulticastInterfaceIgmpArgs struct {
	// Groups IGMP hosts are allowed to join.
	AccessGroup pulumi.StringInput `pulumi:"accessGroup"`
	// Groups to drop membership for immediately after receiving IGMPv2 leave.
	ImmediateLeaveGroup pulumi.StringInput `pulumi:"immediateLeaveGroup"`
	// Number of group specific queries before removing group (2 - 7, default = 2).
	LastMemberQueryCount pulumi.IntInput `pulumi:"lastMemberQueryCount"`
	// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
	LastMemberQueryInterval pulumi.IntInput `pulumi:"lastMemberQueryInterval"`
	// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
	QueryInterval pulumi.IntInput `pulumi:"queryInterval"`
	// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
	QueryMaxResponseTime pulumi.IntInput `pulumi:"queryMaxResponseTime"`
	// Timeout between queries before becoming querier for network (60 - 900, default = 255).
	QueryTimeout pulumi.IntInput `pulumi:"queryTimeout"`
	// Enable/disable require IGMP packets contain router alert option.
	RouterAlertCheck pulumi.StringInput `pulumi:"routerAlertCheck"`
	// Maximum version of IGMP to support.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMulticastInterfaceIgmpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastInterfaceIgmp)(nil)).Elem()
}

func (i GetMulticastInterfaceIgmpArgs) ToGetMulticastInterfaceIgmpOutput() GetMulticastInterfaceIgmpOutput {
	return i.ToGetMulticastInterfaceIgmpOutputWithContext(context.Background())
}

func (i GetMulticastInterfaceIgmpArgs) ToGetMulticastInterfaceIgmpOutputWithContext(ctx context.Context) GetMulticastInterfaceIgmpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastInterfaceIgmpOutput)
}

// GetMulticastInterfaceIgmpArrayInput is an input type that accepts GetMulticastInterfaceIgmpArray and GetMulticastInterfaceIgmpArrayOutput values.
// You can construct a concrete instance of `GetMulticastInterfaceIgmpArrayInput` via:
//
//	GetMulticastInterfaceIgmpArray{ GetMulticastInterfaceIgmpArgs{...} }
type GetMulticastInterfaceIgmpArrayInput interface {
	pulumi.Input

	ToGetMulticastInterfaceIgmpArrayOutput() GetMulticastInterfaceIgmpArrayOutput
	ToGetMulticastInterfaceIgmpArrayOutputWithContext(context.Context) GetMulticastInterfaceIgmpArrayOutput
}

type GetMulticastInterfaceIgmpArray []GetMulticastInterfaceIgmpInput

func (GetMulticastInterfaceIgmpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastInterfaceIgmp)(nil)).Elem()
}

func (i GetMulticastInterfaceIgmpArray) ToGetMulticastInterfaceIgmpArrayOutput() GetMulticastInterfaceIgmpArrayOutput {
	return i.ToGetMulticastInterfaceIgmpArrayOutputWithContext(context.Background())
}

func (i GetMulticastInterfaceIgmpArray) ToGetMulticastInterfaceIgmpArrayOutputWithContext(ctx context.Context) GetMulticastInterfaceIgmpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastInterfaceIgmpArrayOutput)
}

type GetMulticastInterfaceIgmpOutput struct{ *pulumi.OutputState }

func (GetMulticastInterfaceIgmpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastInterfaceIgmp)(nil)).Elem()
}

func (o GetMulticastInterfaceIgmpOutput) ToGetMulticastInterfaceIgmpOutput() GetMulticastInterfaceIgmpOutput {
	return o
}

func (o GetMulticastInterfaceIgmpOutput) ToGetMulticastInterfaceIgmpOutputWithContext(ctx context.Context) GetMulticastInterfaceIgmpOutput {
	return o
}

// Groups IGMP hosts are allowed to join.
func (o GetMulticastInterfaceIgmpOutput) AccessGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterfaceIgmp) string { return v.AccessGroup }).(pulumi.StringOutput)
}

// Groups to drop membership for immediately after receiving IGMPv2 leave.
func (o GetMulticastInterfaceIgmpOutput) ImmediateLeaveGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterfaceIgmp) string { return v.ImmediateLeaveGroup }).(pulumi.StringOutput)
}

// Number of group specific queries before removing group (2 - 7, default = 2).
func (o GetMulticastInterfaceIgmpOutput) LastMemberQueryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterfaceIgmp) int { return v.LastMemberQueryCount }).(pulumi.IntOutput)
}

// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
func (o GetMulticastInterfaceIgmpOutput) LastMemberQueryInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterfaceIgmp) int { return v.LastMemberQueryInterval }).(pulumi.IntOutput)
}

// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
func (o GetMulticastInterfaceIgmpOutput) QueryInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterfaceIgmp) int { return v.QueryInterval }).(pulumi.IntOutput)
}

// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
func (o GetMulticastInterfaceIgmpOutput) QueryMaxResponseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterfaceIgmp) int { return v.QueryMaxResponseTime }).(pulumi.IntOutput)
}

// Timeout between queries before becoming querier for network (60 - 900, default = 255).
func (o GetMulticastInterfaceIgmpOutput) QueryTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastInterfaceIgmp) int { return v.QueryTimeout }).(pulumi.IntOutput)
}

// Enable/disable require IGMP packets contain router alert option.
func (o GetMulticastInterfaceIgmpOutput) RouterAlertCheck() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterfaceIgmp) string { return v.RouterAlertCheck }).(pulumi.StringOutput)
}

// Maximum version of IGMP to support.
func (o GetMulticastInterfaceIgmpOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterfaceIgmp) string { return v.Version }).(pulumi.StringOutput)
}

type GetMulticastInterfaceIgmpArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastInterfaceIgmpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastInterfaceIgmp)(nil)).Elem()
}

func (o GetMulticastInterfaceIgmpArrayOutput) ToGetMulticastInterfaceIgmpArrayOutput() GetMulticastInterfaceIgmpArrayOutput {
	return o
}

func (o GetMulticastInterfaceIgmpArrayOutput) ToGetMulticastInterfaceIgmpArrayOutputWithContext(ctx context.Context) GetMulticastInterfaceIgmpArrayOutput {
	return o
}

func (o GetMulticastInterfaceIgmpArrayOutput) Index(i pulumi.IntInput) GetMulticastInterfaceIgmpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastInterfaceIgmp {
		return vs[0].([]GetMulticastInterfaceIgmp)[vs[1].(int)]
	}).(GetMulticastInterfaceIgmpOutput)
}

type GetMulticastInterfaceJoinGroup struct {
	// Multicast group IP address.
	Address string `pulumi:"address"`
}

// GetMulticastInterfaceJoinGroupInput is an input type that accepts GetMulticastInterfaceJoinGroupArgs and GetMulticastInterfaceJoinGroupOutput values.
// You can construct a concrete instance of `GetMulticastInterfaceJoinGroupInput` via:
//
//	GetMulticastInterfaceJoinGroupArgs{...}
type GetMulticastInterfaceJoinGroupInput interface {
	pulumi.Input

	ToGetMulticastInterfaceJoinGroupOutput() GetMulticastInterfaceJoinGroupOutput
	ToGetMulticastInterfaceJoinGroupOutputWithContext(context.Context) GetMulticastInterfaceJoinGroupOutput
}

type GetMulticastInterfaceJoinGroupArgs struct {
	// Multicast group IP address.
	Address pulumi.StringInput `pulumi:"address"`
}

func (GetMulticastInterfaceJoinGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (i GetMulticastInterfaceJoinGroupArgs) ToGetMulticastInterfaceJoinGroupOutput() GetMulticastInterfaceJoinGroupOutput {
	return i.ToGetMulticastInterfaceJoinGroupOutputWithContext(context.Background())
}

func (i GetMulticastInterfaceJoinGroupArgs) ToGetMulticastInterfaceJoinGroupOutputWithContext(ctx context.Context) GetMulticastInterfaceJoinGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastInterfaceJoinGroupOutput)
}

// GetMulticastInterfaceJoinGroupArrayInput is an input type that accepts GetMulticastInterfaceJoinGroupArray and GetMulticastInterfaceJoinGroupArrayOutput values.
// You can construct a concrete instance of `GetMulticastInterfaceJoinGroupArrayInput` via:
//
//	GetMulticastInterfaceJoinGroupArray{ GetMulticastInterfaceJoinGroupArgs{...} }
type GetMulticastInterfaceJoinGroupArrayInput interface {
	pulumi.Input

	ToGetMulticastInterfaceJoinGroupArrayOutput() GetMulticastInterfaceJoinGroupArrayOutput
	ToGetMulticastInterfaceJoinGroupArrayOutputWithContext(context.Context) GetMulticastInterfaceJoinGroupArrayOutput
}

type GetMulticastInterfaceJoinGroupArray []GetMulticastInterfaceJoinGroupInput

func (GetMulticastInterfaceJoinGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (i GetMulticastInterfaceJoinGroupArray) ToGetMulticastInterfaceJoinGroupArrayOutput() GetMulticastInterfaceJoinGroupArrayOutput {
	return i.ToGetMulticastInterfaceJoinGroupArrayOutputWithContext(context.Background())
}

func (i GetMulticastInterfaceJoinGroupArray) ToGetMulticastInterfaceJoinGroupArrayOutputWithContext(ctx context.Context) GetMulticastInterfaceJoinGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastInterfaceJoinGroupArrayOutput)
}

type GetMulticastInterfaceJoinGroupOutput struct{ *pulumi.OutputState }

func (GetMulticastInterfaceJoinGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (o GetMulticastInterfaceJoinGroupOutput) ToGetMulticastInterfaceJoinGroupOutput() GetMulticastInterfaceJoinGroupOutput {
	return o
}

func (o GetMulticastInterfaceJoinGroupOutput) ToGetMulticastInterfaceJoinGroupOutputWithContext(ctx context.Context) GetMulticastInterfaceJoinGroupOutput {
	return o
}

// Multicast group IP address.
func (o GetMulticastInterfaceJoinGroupOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastInterfaceJoinGroup) string { return v.Address }).(pulumi.StringOutput)
}

type GetMulticastInterfaceJoinGroupArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastInterfaceJoinGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (o GetMulticastInterfaceJoinGroupArrayOutput) ToGetMulticastInterfaceJoinGroupArrayOutput() GetMulticastInterfaceJoinGroupArrayOutput {
	return o
}

func (o GetMulticastInterfaceJoinGroupArrayOutput) ToGetMulticastInterfaceJoinGroupArrayOutputWithContext(ctx context.Context) GetMulticastInterfaceJoinGroupArrayOutput {
	return o
}

func (o GetMulticastInterfaceJoinGroupArrayOutput) Index(i pulumi.IntInput) GetMulticastInterfaceJoinGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastInterfaceJoinGroup {
		return vs[0].([]GetMulticastInterfaceJoinGroup)[vs[1].(int)]
	}).(GetMulticastInterfaceJoinGroupOutput)
}

type GetMulticastPimSmGlobal struct {
	// Sources allowed to register packets with this Rendezvous Point (RP).
	AcceptRegisterList string `pulumi:"acceptRegisterList"`
	// Sources allowed to send multicast traffic.
	AcceptSourceList string `pulumi:"acceptSourceList"`
	// Enable/disable accept BSR quick refresh packets from neighbors.
	BsrAllowQuickRefresh string `pulumi:"bsrAllowQuickRefresh"`
	// Enable/disable allowing this router to become a bootstrap router (BSR).
	BsrCandidate string `pulumi:"bsrCandidate"`
	// BSR hash length (0 - 32, default = 10).
	BsrHash int `pulumi:"bsrHash"`
	// Interface to advertise as candidate BSR.
	BsrInterface string `pulumi:"bsrInterface"`
	// BSR priority (0 - 255, default = 0).
	BsrPriority int `pulumi:"bsrPriority"`
	// Enable/disable making candidate RP compatible with old Cisco IOS.
	CiscoCrpPrefix string `pulumi:"ciscoCrpPrefix"`
	// Use only hash for RP selection (compatibility with old Cisco IOS).
	CiscoIgnoreRpSetPriority string `pulumi:"ciscoIgnoreRpSetPriority"`
	// Checksum entire register packet(for old Cisco IOS compatibility).
	CiscoRegisterChecksum string `pulumi:"ciscoRegisterChecksum"`
	// Cisco register checksum only these groups.
	CiscoRegisterChecksumGroup string `pulumi:"ciscoRegisterChecksumGroup"`
	// Join/prune holdtime (1 - 65535, default = 210).
	JoinPruneHoldtime int `pulumi:"joinPruneHoldtime"`
	// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
	MessageInterval int `pulumi:"messageInterval"`
	// Maximum retries of null register (1 - 20, default = 1).
	NullRegisterRetries int `pulumi:"nullRegisterRetries"`
	// Enable/disable use of SDWAN when checking RPF neighbor and sending of REG packet.
	PimUseSdwan string `pulumi:"pimUseSdwan"`
	// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
	RegisterRateLimit int `pulumi:"registerRateLimit"`
	// Enable/disable check RP is reachable before registering packets.
	RegisterRpReachability string `pulumi:"registerRpReachability"`
	// Override source address in register packets.
	RegisterSource string `pulumi:"registerSource"`
	// Override with primary interface address.
	RegisterSourceInterface string `pulumi:"registerSourceInterface"`
	// Override with local IP address.
	RegisterSourceIp string `pulumi:"registerSourceIp"`
	// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
	RegisterSupression int `pulumi:"registerSupression"`
	// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses []GetMulticastPimSmGlobalRpAddress `pulumi:"rpAddresses"`
	// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
	RpRegisterKeepalive int `pulumi:"rpRegisterKeepalive"`
	// Enable/disable switching to source specific trees.
	SptThreshold string `pulumi:"sptThreshold"`
	// Groups allowed to switch to source tree.
	SptThresholdGroup string `pulumi:"sptThresholdGroup"`
	// Enable/disable source specific multicast.
	Ssm string `pulumi:"ssm"`
	// Groups allowed to source specific multicast.
	SsmRange string `pulumi:"ssmRange"`
}

// GetMulticastPimSmGlobalInput is an input type that accepts GetMulticastPimSmGlobalArgs and GetMulticastPimSmGlobalOutput values.
// You can construct a concrete instance of `GetMulticastPimSmGlobalInput` via:
//
//	GetMulticastPimSmGlobalArgs{...}
type GetMulticastPimSmGlobalInput interface {
	pulumi.Input

	ToGetMulticastPimSmGlobalOutput() GetMulticastPimSmGlobalOutput
	ToGetMulticastPimSmGlobalOutputWithContext(context.Context) GetMulticastPimSmGlobalOutput
}

type GetMulticastPimSmGlobalArgs struct {
	// Sources allowed to register packets with this Rendezvous Point (RP).
	AcceptRegisterList pulumi.StringInput `pulumi:"acceptRegisterList"`
	// Sources allowed to send multicast traffic.
	AcceptSourceList pulumi.StringInput `pulumi:"acceptSourceList"`
	// Enable/disable accept BSR quick refresh packets from neighbors.
	BsrAllowQuickRefresh pulumi.StringInput `pulumi:"bsrAllowQuickRefresh"`
	// Enable/disable allowing this router to become a bootstrap router (BSR).
	BsrCandidate pulumi.StringInput `pulumi:"bsrCandidate"`
	// BSR hash length (0 - 32, default = 10).
	BsrHash pulumi.IntInput `pulumi:"bsrHash"`
	// Interface to advertise as candidate BSR.
	BsrInterface pulumi.StringInput `pulumi:"bsrInterface"`
	// BSR priority (0 - 255, default = 0).
	BsrPriority pulumi.IntInput `pulumi:"bsrPriority"`
	// Enable/disable making candidate RP compatible with old Cisco IOS.
	CiscoCrpPrefix pulumi.StringInput `pulumi:"ciscoCrpPrefix"`
	// Use only hash for RP selection (compatibility with old Cisco IOS).
	CiscoIgnoreRpSetPriority pulumi.StringInput `pulumi:"ciscoIgnoreRpSetPriority"`
	// Checksum entire register packet(for old Cisco IOS compatibility).
	CiscoRegisterChecksum pulumi.StringInput `pulumi:"ciscoRegisterChecksum"`
	// Cisco register checksum only these groups.
	CiscoRegisterChecksumGroup pulumi.StringInput `pulumi:"ciscoRegisterChecksumGroup"`
	// Join/prune holdtime (1 - 65535, default = 210).
	JoinPruneHoldtime pulumi.IntInput `pulumi:"joinPruneHoldtime"`
	// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
	MessageInterval pulumi.IntInput `pulumi:"messageInterval"`
	// Maximum retries of null register (1 - 20, default = 1).
	NullRegisterRetries pulumi.IntInput `pulumi:"nullRegisterRetries"`
	// Enable/disable use of SDWAN when checking RPF neighbor and sending of REG packet.
	PimUseSdwan pulumi.StringInput `pulumi:"pimUseSdwan"`
	// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
	RegisterRateLimit pulumi.IntInput `pulumi:"registerRateLimit"`
	// Enable/disable check RP is reachable before registering packets.
	RegisterRpReachability pulumi.StringInput `pulumi:"registerRpReachability"`
	// Override source address in register packets.
	RegisterSource pulumi.StringInput `pulumi:"registerSource"`
	// Override with primary interface address.
	RegisterSourceInterface pulumi.StringInput `pulumi:"registerSourceInterface"`
	// Override with local IP address.
	RegisterSourceIp pulumi.StringInput `pulumi:"registerSourceIp"`
	// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
	RegisterSupression pulumi.IntInput `pulumi:"registerSupression"`
	// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses GetMulticastPimSmGlobalRpAddressArrayInput `pulumi:"rpAddresses"`
	// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
	RpRegisterKeepalive pulumi.IntInput `pulumi:"rpRegisterKeepalive"`
	// Enable/disable switching to source specific trees.
	SptThreshold pulumi.StringInput `pulumi:"sptThreshold"`
	// Groups allowed to switch to source tree.
	SptThresholdGroup pulumi.StringInput `pulumi:"sptThresholdGroup"`
	// Enable/disable source specific multicast.
	Ssm pulumi.StringInput `pulumi:"ssm"`
	// Groups allowed to source specific multicast.
	SsmRange pulumi.StringInput `pulumi:"ssmRange"`
}

func (GetMulticastPimSmGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastPimSmGlobal)(nil)).Elem()
}

func (i GetMulticastPimSmGlobalArgs) ToGetMulticastPimSmGlobalOutput() GetMulticastPimSmGlobalOutput {
	return i.ToGetMulticastPimSmGlobalOutputWithContext(context.Background())
}

func (i GetMulticastPimSmGlobalArgs) ToGetMulticastPimSmGlobalOutputWithContext(ctx context.Context) GetMulticastPimSmGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastPimSmGlobalOutput)
}

// GetMulticastPimSmGlobalArrayInput is an input type that accepts GetMulticastPimSmGlobalArray and GetMulticastPimSmGlobalArrayOutput values.
// You can construct a concrete instance of `GetMulticastPimSmGlobalArrayInput` via:
//
//	GetMulticastPimSmGlobalArray{ GetMulticastPimSmGlobalArgs{...} }
type GetMulticastPimSmGlobalArrayInput interface {
	pulumi.Input

	ToGetMulticastPimSmGlobalArrayOutput() GetMulticastPimSmGlobalArrayOutput
	ToGetMulticastPimSmGlobalArrayOutputWithContext(context.Context) GetMulticastPimSmGlobalArrayOutput
}

type GetMulticastPimSmGlobalArray []GetMulticastPimSmGlobalInput

func (GetMulticastPimSmGlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastPimSmGlobal)(nil)).Elem()
}

func (i GetMulticastPimSmGlobalArray) ToGetMulticastPimSmGlobalArrayOutput() GetMulticastPimSmGlobalArrayOutput {
	return i.ToGetMulticastPimSmGlobalArrayOutputWithContext(context.Background())
}

func (i GetMulticastPimSmGlobalArray) ToGetMulticastPimSmGlobalArrayOutputWithContext(ctx context.Context) GetMulticastPimSmGlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastPimSmGlobalArrayOutput)
}

type GetMulticastPimSmGlobalOutput struct{ *pulumi.OutputState }

func (GetMulticastPimSmGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastPimSmGlobal)(nil)).Elem()
}

func (o GetMulticastPimSmGlobalOutput) ToGetMulticastPimSmGlobalOutput() GetMulticastPimSmGlobalOutput {
	return o
}

func (o GetMulticastPimSmGlobalOutput) ToGetMulticastPimSmGlobalOutputWithContext(ctx context.Context) GetMulticastPimSmGlobalOutput {
	return o
}

// Sources allowed to register packets with this Rendezvous Point (RP).
func (o GetMulticastPimSmGlobalOutput) AcceptRegisterList() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.AcceptRegisterList }).(pulumi.StringOutput)
}

// Sources allowed to send multicast traffic.
func (o GetMulticastPimSmGlobalOutput) AcceptSourceList() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.AcceptSourceList }).(pulumi.StringOutput)
}

// Enable/disable accept BSR quick refresh packets from neighbors.
func (o GetMulticastPimSmGlobalOutput) BsrAllowQuickRefresh() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.BsrAllowQuickRefresh }).(pulumi.StringOutput)
}

// Enable/disable allowing this router to become a bootstrap router (BSR).
func (o GetMulticastPimSmGlobalOutput) BsrCandidate() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.BsrCandidate }).(pulumi.StringOutput)
}

// BSR hash length (0 - 32, default = 10).
func (o GetMulticastPimSmGlobalOutput) BsrHash() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) int { return v.BsrHash }).(pulumi.IntOutput)
}

// Interface to advertise as candidate BSR.
func (o GetMulticastPimSmGlobalOutput) BsrInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.BsrInterface }).(pulumi.StringOutput)
}

// BSR priority (0 - 255, default = 0).
func (o GetMulticastPimSmGlobalOutput) BsrPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) int { return v.BsrPriority }).(pulumi.IntOutput)
}

// Enable/disable making candidate RP compatible with old Cisco IOS.
func (o GetMulticastPimSmGlobalOutput) CiscoCrpPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.CiscoCrpPrefix }).(pulumi.StringOutput)
}

// Use only hash for RP selection (compatibility with old Cisco IOS).
func (o GetMulticastPimSmGlobalOutput) CiscoIgnoreRpSetPriority() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.CiscoIgnoreRpSetPriority }).(pulumi.StringOutput)
}

// Checksum entire register packet(for old Cisco IOS compatibility).
func (o GetMulticastPimSmGlobalOutput) CiscoRegisterChecksum() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.CiscoRegisterChecksum }).(pulumi.StringOutput)
}

// Cisco register checksum only these groups.
func (o GetMulticastPimSmGlobalOutput) CiscoRegisterChecksumGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.CiscoRegisterChecksumGroup }).(pulumi.StringOutput)
}

// Join/prune holdtime (1 - 65535, default = 210).
func (o GetMulticastPimSmGlobalOutput) JoinPruneHoldtime() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) int { return v.JoinPruneHoldtime }).(pulumi.IntOutput)
}

// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
func (o GetMulticastPimSmGlobalOutput) MessageInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) int { return v.MessageInterval }).(pulumi.IntOutput)
}

// Maximum retries of null register (1 - 20, default = 1).
func (o GetMulticastPimSmGlobalOutput) NullRegisterRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) int { return v.NullRegisterRetries }).(pulumi.IntOutput)
}

// Enable/disable use of SDWAN when checking RPF neighbor and sending of REG packet.
func (o GetMulticastPimSmGlobalOutput) PimUseSdwan() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.PimUseSdwan }).(pulumi.StringOutput)
}

// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
func (o GetMulticastPimSmGlobalOutput) RegisterRateLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) int { return v.RegisterRateLimit }).(pulumi.IntOutput)
}

// Enable/disable check RP is reachable before registering packets.
func (o GetMulticastPimSmGlobalOutput) RegisterRpReachability() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.RegisterRpReachability }).(pulumi.StringOutput)
}

// Override source address in register packets.
func (o GetMulticastPimSmGlobalOutput) RegisterSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.RegisterSource }).(pulumi.StringOutput)
}

// Override with primary interface address.
func (o GetMulticastPimSmGlobalOutput) RegisterSourceInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.RegisterSourceInterface }).(pulumi.StringOutput)
}

// Override with local IP address.
func (o GetMulticastPimSmGlobalOutput) RegisterSourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.RegisterSourceIp }).(pulumi.StringOutput)
}

// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
func (o GetMulticastPimSmGlobalOutput) RegisterSupression() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) int { return v.RegisterSupression }).(pulumi.IntOutput)
}

// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
func (o GetMulticastPimSmGlobalOutput) RpAddresses() GetMulticastPimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) []GetMulticastPimSmGlobalRpAddress { return v.RpAddresses }).(GetMulticastPimSmGlobalRpAddressArrayOutput)
}

// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
func (o GetMulticastPimSmGlobalOutput) RpRegisterKeepalive() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) int { return v.RpRegisterKeepalive }).(pulumi.IntOutput)
}

// Enable/disable switching to source specific trees.
func (o GetMulticastPimSmGlobalOutput) SptThreshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.SptThreshold }).(pulumi.StringOutput)
}

// Groups allowed to switch to source tree.
func (o GetMulticastPimSmGlobalOutput) SptThresholdGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.SptThresholdGroup }).(pulumi.StringOutput)
}

// Enable/disable source specific multicast.
func (o GetMulticastPimSmGlobalOutput) Ssm() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.Ssm }).(pulumi.StringOutput)
}

// Groups allowed to source specific multicast.
func (o GetMulticastPimSmGlobalOutput) SsmRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobal) string { return v.SsmRange }).(pulumi.StringOutput)
}

type GetMulticastPimSmGlobalArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastPimSmGlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastPimSmGlobal)(nil)).Elem()
}

func (o GetMulticastPimSmGlobalArrayOutput) ToGetMulticastPimSmGlobalArrayOutput() GetMulticastPimSmGlobalArrayOutput {
	return o
}

func (o GetMulticastPimSmGlobalArrayOutput) ToGetMulticastPimSmGlobalArrayOutputWithContext(ctx context.Context) GetMulticastPimSmGlobalArrayOutput {
	return o
}

func (o GetMulticastPimSmGlobalArrayOutput) Index(i pulumi.IntInput) GetMulticastPimSmGlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastPimSmGlobal {
		return vs[0].([]GetMulticastPimSmGlobal)[vs[1].(int)]
	}).(GetMulticastPimSmGlobalOutput)
}

type GetMulticastPimSmGlobalRpAddress struct {
	// Groups to use this RP.
	Group string `pulumi:"group"`
	// ID.
	Id int `pulumi:"id"`
	// RP router address.
	IpAddress string `pulumi:"ipAddress"`
}

// GetMulticastPimSmGlobalRpAddressInput is an input type that accepts GetMulticastPimSmGlobalRpAddressArgs and GetMulticastPimSmGlobalRpAddressOutput values.
// You can construct a concrete instance of `GetMulticastPimSmGlobalRpAddressInput` via:
//
//	GetMulticastPimSmGlobalRpAddressArgs{...}
type GetMulticastPimSmGlobalRpAddressInput interface {
	pulumi.Input

	ToGetMulticastPimSmGlobalRpAddressOutput() GetMulticastPimSmGlobalRpAddressOutput
	ToGetMulticastPimSmGlobalRpAddressOutputWithContext(context.Context) GetMulticastPimSmGlobalRpAddressOutput
}

type GetMulticastPimSmGlobalRpAddressArgs struct {
	// Groups to use this RP.
	Group pulumi.StringInput `pulumi:"group"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// RP router address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
}

func (GetMulticastPimSmGlobalRpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (i GetMulticastPimSmGlobalRpAddressArgs) ToGetMulticastPimSmGlobalRpAddressOutput() GetMulticastPimSmGlobalRpAddressOutput {
	return i.ToGetMulticastPimSmGlobalRpAddressOutputWithContext(context.Background())
}

func (i GetMulticastPimSmGlobalRpAddressArgs) ToGetMulticastPimSmGlobalRpAddressOutputWithContext(ctx context.Context) GetMulticastPimSmGlobalRpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastPimSmGlobalRpAddressOutput)
}

// GetMulticastPimSmGlobalRpAddressArrayInput is an input type that accepts GetMulticastPimSmGlobalRpAddressArray and GetMulticastPimSmGlobalRpAddressArrayOutput values.
// You can construct a concrete instance of `GetMulticastPimSmGlobalRpAddressArrayInput` via:
//
//	GetMulticastPimSmGlobalRpAddressArray{ GetMulticastPimSmGlobalRpAddressArgs{...} }
type GetMulticastPimSmGlobalRpAddressArrayInput interface {
	pulumi.Input

	ToGetMulticastPimSmGlobalRpAddressArrayOutput() GetMulticastPimSmGlobalRpAddressArrayOutput
	ToGetMulticastPimSmGlobalRpAddressArrayOutputWithContext(context.Context) GetMulticastPimSmGlobalRpAddressArrayOutput
}

type GetMulticastPimSmGlobalRpAddressArray []GetMulticastPimSmGlobalRpAddressInput

func (GetMulticastPimSmGlobalRpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (i GetMulticastPimSmGlobalRpAddressArray) ToGetMulticastPimSmGlobalRpAddressArrayOutput() GetMulticastPimSmGlobalRpAddressArrayOutput {
	return i.ToGetMulticastPimSmGlobalRpAddressArrayOutputWithContext(context.Background())
}

func (i GetMulticastPimSmGlobalRpAddressArray) ToGetMulticastPimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) GetMulticastPimSmGlobalRpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastPimSmGlobalRpAddressArrayOutput)
}

type GetMulticastPimSmGlobalRpAddressOutput struct{ *pulumi.OutputState }

func (GetMulticastPimSmGlobalRpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (o GetMulticastPimSmGlobalRpAddressOutput) ToGetMulticastPimSmGlobalRpAddressOutput() GetMulticastPimSmGlobalRpAddressOutput {
	return o
}

func (o GetMulticastPimSmGlobalRpAddressOutput) ToGetMulticastPimSmGlobalRpAddressOutputWithContext(ctx context.Context) GetMulticastPimSmGlobalRpAddressOutput {
	return o
}

// Groups to use this RP.
func (o GetMulticastPimSmGlobalRpAddressOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobalRpAddress) string { return v.Group }).(pulumi.StringOutput)
}

// ID.
func (o GetMulticastPimSmGlobalRpAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobalRpAddress) int { return v.Id }).(pulumi.IntOutput)
}

// RP router address.
func (o GetMulticastPimSmGlobalRpAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastPimSmGlobalRpAddress) string { return v.IpAddress }).(pulumi.StringOutput)
}

type GetMulticastPimSmGlobalRpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastPimSmGlobalRpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (o GetMulticastPimSmGlobalRpAddressArrayOutput) ToGetMulticastPimSmGlobalRpAddressArrayOutput() GetMulticastPimSmGlobalRpAddressArrayOutput {
	return o
}

func (o GetMulticastPimSmGlobalRpAddressArrayOutput) ToGetMulticastPimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) GetMulticastPimSmGlobalRpAddressArrayOutput {
	return o
}

func (o GetMulticastPimSmGlobalRpAddressArrayOutput) Index(i pulumi.IntInput) GetMulticastPimSmGlobalRpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastPimSmGlobalRpAddress {
		return vs[0].([]GetMulticastPimSmGlobalRpAddress)[vs[1].(int)]
	}).(GetMulticastPimSmGlobalRpAddressOutput)
}

type GetMulticastflowFlow struct {
	// Multicast group IP address.
	GroupAddr string `pulumi:"groupAddr"`
	// Flow ID.
	Id int `pulumi:"id"`
	// Multicast source IP address.
	SourceAddr string `pulumi:"sourceAddr"`
}

// GetMulticastflowFlowInput is an input type that accepts GetMulticastflowFlowArgs and GetMulticastflowFlowOutput values.
// You can construct a concrete instance of `GetMulticastflowFlowInput` via:
//
//	GetMulticastflowFlowArgs{...}
type GetMulticastflowFlowInput interface {
	pulumi.Input

	ToGetMulticastflowFlowOutput() GetMulticastflowFlowOutput
	ToGetMulticastflowFlowOutputWithContext(context.Context) GetMulticastflowFlowOutput
}

type GetMulticastflowFlowArgs struct {
	// Multicast group IP address.
	GroupAddr pulumi.StringInput `pulumi:"groupAddr"`
	// Flow ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Multicast source IP address.
	SourceAddr pulumi.StringInput `pulumi:"sourceAddr"`
}

func (GetMulticastflowFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastflowFlow)(nil)).Elem()
}

func (i GetMulticastflowFlowArgs) ToGetMulticastflowFlowOutput() GetMulticastflowFlowOutput {
	return i.ToGetMulticastflowFlowOutputWithContext(context.Background())
}

func (i GetMulticastflowFlowArgs) ToGetMulticastflowFlowOutputWithContext(ctx context.Context) GetMulticastflowFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastflowFlowOutput)
}

// GetMulticastflowFlowArrayInput is an input type that accepts GetMulticastflowFlowArray and GetMulticastflowFlowArrayOutput values.
// You can construct a concrete instance of `GetMulticastflowFlowArrayInput` via:
//
//	GetMulticastflowFlowArray{ GetMulticastflowFlowArgs{...} }
type GetMulticastflowFlowArrayInput interface {
	pulumi.Input

	ToGetMulticastflowFlowArrayOutput() GetMulticastflowFlowArrayOutput
	ToGetMulticastflowFlowArrayOutputWithContext(context.Context) GetMulticastflowFlowArrayOutput
}

type GetMulticastflowFlowArray []GetMulticastflowFlowInput

func (GetMulticastflowFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastflowFlow)(nil)).Elem()
}

func (i GetMulticastflowFlowArray) ToGetMulticastflowFlowArrayOutput() GetMulticastflowFlowArrayOutput {
	return i.ToGetMulticastflowFlowArrayOutputWithContext(context.Background())
}

func (i GetMulticastflowFlowArray) ToGetMulticastflowFlowArrayOutputWithContext(ctx context.Context) GetMulticastflowFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastflowFlowArrayOutput)
}

type GetMulticastflowFlowOutput struct{ *pulumi.OutputState }

func (GetMulticastflowFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastflowFlow)(nil)).Elem()
}

func (o GetMulticastflowFlowOutput) ToGetMulticastflowFlowOutput() GetMulticastflowFlowOutput {
	return o
}

func (o GetMulticastflowFlowOutput) ToGetMulticastflowFlowOutputWithContext(ctx context.Context) GetMulticastflowFlowOutput {
	return o
}

// Multicast group IP address.
func (o GetMulticastflowFlowOutput) GroupAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastflowFlow) string { return v.GroupAddr }).(pulumi.StringOutput)
}

// Flow ID.
func (o GetMulticastflowFlowOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetMulticastflowFlow) int { return v.Id }).(pulumi.IntOutput)
}

// Multicast source IP address.
func (o GetMulticastflowFlowOutput) SourceAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastflowFlow) string { return v.SourceAddr }).(pulumi.StringOutput)
}

type GetMulticastflowFlowArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastflowFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastflowFlow)(nil)).Elem()
}

func (o GetMulticastflowFlowArrayOutput) ToGetMulticastflowFlowArrayOutput() GetMulticastflowFlowArrayOutput {
	return o
}

func (o GetMulticastflowFlowArrayOutput) ToGetMulticastflowFlowArrayOutputWithContext(ctx context.Context) GetMulticastflowFlowArrayOutput {
	return o
}

func (o GetMulticastflowFlowArrayOutput) Index(i pulumi.IntInput) GetMulticastflowFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastflowFlow {
		return vs[0].([]GetMulticastflowFlow)[vs[1].(int)]
	}).(GetMulticastflowFlowOutput)
}

type GetOspf6Area struct {
	// Authentication mode.
	Authentication string `pulumi:"authentication"`
	// Summary default cost of stub or NSSA area.
	DefaultCost int `pulumi:"defaultCost"`
	// Summary address entry ID.
	Id string `pulumi:"id"`
	// Authentication algorithm.
	IpsecAuthAlg string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []GetOspf6AreaIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval int `pulumi:"keyRolloverInterval"`
	// Enable/disable originate type 7 default into NSSA area.
	NssaDefaultInformationOriginate string `pulumi:"nssaDefaultInformationOriginate"`
	// OSPFv3 default metric.
	NssaDefaultInformationOriginateMetric int `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPFv3 metric type for default routes.
	NssaDefaultInformationOriginateMetricType string `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area.
	NssaRedistribution string `pulumi:"nssaRedistribution"`
	// NSSA translator role type.
	NssaTranslatorRole string `pulumi:"nssaTranslatorRole"`
	// OSPF6 area range configuration. The structure of `range` block is documented below.
	Ranges []GetOspf6AreaRange `pulumi:"ranges"`
	// Stub summary setting.
	StubType string `pulumi:"stubType"`
	// Area type setting.
	Type string `pulumi:"type"`
	// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks []GetOspf6AreaVirtualLink `pulumi:"virtualLinks"`
}

// GetOspf6AreaInput is an input type that accepts GetOspf6AreaArgs and GetOspf6AreaOutput values.
// You can construct a concrete instance of `GetOspf6AreaInput` via:
//
//	GetOspf6AreaArgs{...}
type GetOspf6AreaInput interface {
	pulumi.Input

	ToGetOspf6AreaOutput() GetOspf6AreaOutput
	ToGetOspf6AreaOutputWithContext(context.Context) GetOspf6AreaOutput
}

type GetOspf6AreaArgs struct {
	// Authentication mode.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Summary default cost of stub or NSSA area.
	DefaultCost pulumi.IntInput `pulumi:"defaultCost"`
	// Summary address entry ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Authentication algorithm.
	IpsecAuthAlg pulumi.StringInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg pulumi.StringInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys GetOspf6AreaIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntInput `pulumi:"keyRolloverInterval"`
	// Enable/disable originate type 7 default into NSSA area.
	NssaDefaultInformationOriginate pulumi.StringInput `pulumi:"nssaDefaultInformationOriginate"`
	// OSPFv3 default metric.
	NssaDefaultInformationOriginateMetric pulumi.IntInput `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPFv3 metric type for default routes.
	NssaDefaultInformationOriginateMetricType pulumi.StringInput `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area.
	NssaRedistribution pulumi.StringInput `pulumi:"nssaRedistribution"`
	// NSSA translator role type.
	NssaTranslatorRole pulumi.StringInput `pulumi:"nssaTranslatorRole"`
	// OSPF6 area range configuration. The structure of `range` block is documented below.
	Ranges GetOspf6AreaRangeArrayInput `pulumi:"ranges"`
	// Stub summary setting.
	StubType pulumi.StringInput `pulumi:"stubType"`
	// Area type setting.
	Type pulumi.StringInput `pulumi:"type"`
	// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks GetOspf6AreaVirtualLinkArrayInput `pulumi:"virtualLinks"`
}

func (GetOspf6AreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6Area)(nil)).Elem()
}

func (i GetOspf6AreaArgs) ToGetOspf6AreaOutput() GetOspf6AreaOutput {
	return i.ToGetOspf6AreaOutputWithContext(context.Background())
}

func (i GetOspf6AreaArgs) ToGetOspf6AreaOutputWithContext(ctx context.Context) GetOspf6AreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6AreaOutput)
}

// GetOspf6AreaArrayInput is an input type that accepts GetOspf6AreaArray and GetOspf6AreaArrayOutput values.
// You can construct a concrete instance of `GetOspf6AreaArrayInput` via:
//
//	GetOspf6AreaArray{ GetOspf6AreaArgs{...} }
type GetOspf6AreaArrayInput interface {
	pulumi.Input

	ToGetOspf6AreaArrayOutput() GetOspf6AreaArrayOutput
	ToGetOspf6AreaArrayOutputWithContext(context.Context) GetOspf6AreaArrayOutput
}

type GetOspf6AreaArray []GetOspf6AreaInput

func (GetOspf6AreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6Area)(nil)).Elem()
}

func (i GetOspf6AreaArray) ToGetOspf6AreaArrayOutput() GetOspf6AreaArrayOutput {
	return i.ToGetOspf6AreaArrayOutputWithContext(context.Background())
}

func (i GetOspf6AreaArray) ToGetOspf6AreaArrayOutputWithContext(ctx context.Context) GetOspf6AreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6AreaArrayOutput)
}

type GetOspf6AreaOutput struct{ *pulumi.OutputState }

func (GetOspf6AreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6Area)(nil)).Elem()
}

func (o GetOspf6AreaOutput) ToGetOspf6AreaOutput() GetOspf6AreaOutput {
	return o
}

func (o GetOspf6AreaOutput) ToGetOspf6AreaOutputWithContext(ctx context.Context) GetOspf6AreaOutput {
	return o
}

// Authentication mode.
func (o GetOspf6AreaOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Area) string { return v.Authentication }).(pulumi.StringOutput)
}

// Summary default cost of stub or NSSA area.
func (o GetOspf6AreaOutput) DefaultCost() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Area) int { return v.DefaultCost }).(pulumi.IntOutput)
}

// Summary address entry ID.
func (o GetOspf6AreaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Area) string { return v.Id }).(pulumi.StringOutput)
}

// Authentication algorithm.
func (o GetOspf6AreaOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Area) string { return v.IpsecAuthAlg }).(pulumi.StringOutput)
}

// Encryption algorithm.
func (o GetOspf6AreaOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Area) string { return v.IpsecEncAlg }).(pulumi.StringOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o GetOspf6AreaOutput) IpsecKeys() GetOspf6AreaIpsecKeyArrayOutput {
	return o.ApplyT(func(v GetOspf6Area) []GetOspf6AreaIpsecKey { return v.IpsecKeys }).(GetOspf6AreaIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o GetOspf6AreaOutput) KeyRolloverInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Area) int { return v.KeyRolloverInterval }).(pulumi.IntOutput)
}

// Enable/disable originate type 7 default into NSSA area.
func (o GetOspf6AreaOutput) NssaDefaultInformationOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Area) string { return v.NssaDefaultInformationOriginate }).(pulumi.StringOutput)
}

// OSPFv3 default metric.
func (o GetOspf6AreaOutput) NssaDefaultInformationOriginateMetric() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Area) int { return v.NssaDefaultInformationOriginateMetric }).(pulumi.IntOutput)
}

// OSPFv3 metric type for default routes.
func (o GetOspf6AreaOutput) NssaDefaultInformationOriginateMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Area) string { return v.NssaDefaultInformationOriginateMetricType }).(pulumi.StringOutput)
}

// Enable/disable redistribute into NSSA area.
func (o GetOspf6AreaOutput) NssaRedistribution() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Area) string { return v.NssaRedistribution }).(pulumi.StringOutput)
}

// NSSA translator role type.
func (o GetOspf6AreaOutput) NssaTranslatorRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Area) string { return v.NssaTranslatorRole }).(pulumi.StringOutput)
}

// OSPF6 area range configuration. The structure of `range` block is documented below.
func (o GetOspf6AreaOutput) Ranges() GetOspf6AreaRangeArrayOutput {
	return o.ApplyT(func(v GetOspf6Area) []GetOspf6AreaRange { return v.Ranges }).(GetOspf6AreaRangeArrayOutput)
}

// Stub summary setting.
func (o GetOspf6AreaOutput) StubType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Area) string { return v.StubType }).(pulumi.StringOutput)
}

// Area type setting.
func (o GetOspf6AreaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Area) string { return v.Type }).(pulumi.StringOutput)
}

// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
func (o GetOspf6AreaOutput) VirtualLinks() GetOspf6AreaVirtualLinkArrayOutput {
	return o.ApplyT(func(v GetOspf6Area) []GetOspf6AreaVirtualLink { return v.VirtualLinks }).(GetOspf6AreaVirtualLinkArrayOutput)
}

type GetOspf6AreaArrayOutput struct{ *pulumi.OutputState }

func (GetOspf6AreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6Area)(nil)).Elem()
}

func (o GetOspf6AreaArrayOutput) ToGetOspf6AreaArrayOutput() GetOspf6AreaArrayOutput {
	return o
}

func (o GetOspf6AreaArrayOutput) ToGetOspf6AreaArrayOutputWithContext(ctx context.Context) GetOspf6AreaArrayOutput {
	return o
}

func (o GetOspf6AreaArrayOutput) Index(i pulumi.IntInput) GetOspf6AreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspf6Area {
		return vs[0].([]GetOspf6Area)[vs[1].(int)]
	}).(GetOspf6AreaOutput)
}

type GetOspf6AreaIpsecKey struct {
	// Authentication key.
	AuthKey string `pulumi:"authKey"`
	// Encryption key.
	EncKey string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi int `pulumi:"spi"`
}

// GetOspf6AreaIpsecKeyInput is an input type that accepts GetOspf6AreaIpsecKeyArgs and GetOspf6AreaIpsecKeyOutput values.
// You can construct a concrete instance of `GetOspf6AreaIpsecKeyInput` via:
//
//	GetOspf6AreaIpsecKeyArgs{...}
type GetOspf6AreaIpsecKeyInput interface {
	pulumi.Input

	ToGetOspf6AreaIpsecKeyOutput() GetOspf6AreaIpsecKeyOutput
	ToGetOspf6AreaIpsecKeyOutputWithContext(context.Context) GetOspf6AreaIpsecKeyOutput
}

type GetOspf6AreaIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntInput `pulumi:"spi"`
}

func (GetOspf6AreaIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6AreaIpsecKey)(nil)).Elem()
}

func (i GetOspf6AreaIpsecKeyArgs) ToGetOspf6AreaIpsecKeyOutput() GetOspf6AreaIpsecKeyOutput {
	return i.ToGetOspf6AreaIpsecKeyOutputWithContext(context.Background())
}

func (i GetOspf6AreaIpsecKeyArgs) ToGetOspf6AreaIpsecKeyOutputWithContext(ctx context.Context) GetOspf6AreaIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6AreaIpsecKeyOutput)
}

// GetOspf6AreaIpsecKeyArrayInput is an input type that accepts GetOspf6AreaIpsecKeyArray and GetOspf6AreaIpsecKeyArrayOutput values.
// You can construct a concrete instance of `GetOspf6AreaIpsecKeyArrayInput` via:
//
//	GetOspf6AreaIpsecKeyArray{ GetOspf6AreaIpsecKeyArgs{...} }
type GetOspf6AreaIpsecKeyArrayInput interface {
	pulumi.Input

	ToGetOspf6AreaIpsecKeyArrayOutput() GetOspf6AreaIpsecKeyArrayOutput
	ToGetOspf6AreaIpsecKeyArrayOutputWithContext(context.Context) GetOspf6AreaIpsecKeyArrayOutput
}

type GetOspf6AreaIpsecKeyArray []GetOspf6AreaIpsecKeyInput

func (GetOspf6AreaIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6AreaIpsecKey)(nil)).Elem()
}

func (i GetOspf6AreaIpsecKeyArray) ToGetOspf6AreaIpsecKeyArrayOutput() GetOspf6AreaIpsecKeyArrayOutput {
	return i.ToGetOspf6AreaIpsecKeyArrayOutputWithContext(context.Background())
}

func (i GetOspf6AreaIpsecKeyArray) ToGetOspf6AreaIpsecKeyArrayOutputWithContext(ctx context.Context) GetOspf6AreaIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6AreaIpsecKeyArrayOutput)
}

type GetOspf6AreaIpsecKeyOutput struct{ *pulumi.OutputState }

func (GetOspf6AreaIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6AreaIpsecKey)(nil)).Elem()
}

func (o GetOspf6AreaIpsecKeyOutput) ToGetOspf6AreaIpsecKeyOutput() GetOspf6AreaIpsecKeyOutput {
	return o
}

func (o GetOspf6AreaIpsecKeyOutput) ToGetOspf6AreaIpsecKeyOutputWithContext(ctx context.Context) GetOspf6AreaIpsecKeyOutput {
	return o
}

// Authentication key.
func (o GetOspf6AreaIpsecKeyOutput) AuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6AreaIpsecKey) string { return v.AuthKey }).(pulumi.StringOutput)
}

// Encryption key.
func (o GetOspf6AreaIpsecKeyOutput) EncKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6AreaIpsecKey) string { return v.EncKey }).(pulumi.StringOutput)
}

// Security Parameters Index.
func (o GetOspf6AreaIpsecKeyOutput) Spi() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6AreaIpsecKey) int { return v.Spi }).(pulumi.IntOutput)
}

type GetOspf6AreaIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (GetOspf6AreaIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6AreaIpsecKey)(nil)).Elem()
}

func (o GetOspf6AreaIpsecKeyArrayOutput) ToGetOspf6AreaIpsecKeyArrayOutput() GetOspf6AreaIpsecKeyArrayOutput {
	return o
}

func (o GetOspf6AreaIpsecKeyArrayOutput) ToGetOspf6AreaIpsecKeyArrayOutputWithContext(ctx context.Context) GetOspf6AreaIpsecKeyArrayOutput {
	return o
}

func (o GetOspf6AreaIpsecKeyArrayOutput) Index(i pulumi.IntInput) GetOspf6AreaIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspf6AreaIpsecKey {
		return vs[0].([]GetOspf6AreaIpsecKey)[vs[1].(int)]
	}).(GetOspf6AreaIpsecKeyOutput)
}

type GetOspf6AreaRange struct {
	// Enable/disable advertise status.
	Advertise string `pulumi:"advertise"`
	// Summary address entry ID.
	Id int `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
}

// GetOspf6AreaRangeInput is an input type that accepts GetOspf6AreaRangeArgs and GetOspf6AreaRangeOutput values.
// You can construct a concrete instance of `GetOspf6AreaRangeInput` via:
//
//	GetOspf6AreaRangeArgs{...}
type GetOspf6AreaRangeInput interface {
	pulumi.Input

	ToGetOspf6AreaRangeOutput() GetOspf6AreaRangeOutput
	ToGetOspf6AreaRangeOutputWithContext(context.Context) GetOspf6AreaRangeOutput
}

type GetOspf6AreaRangeArgs struct {
	// Enable/disable advertise status.
	Advertise pulumi.StringInput `pulumi:"advertise"`
	// Summary address entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetOspf6AreaRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6AreaRange)(nil)).Elem()
}

func (i GetOspf6AreaRangeArgs) ToGetOspf6AreaRangeOutput() GetOspf6AreaRangeOutput {
	return i.ToGetOspf6AreaRangeOutputWithContext(context.Background())
}

func (i GetOspf6AreaRangeArgs) ToGetOspf6AreaRangeOutputWithContext(ctx context.Context) GetOspf6AreaRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6AreaRangeOutput)
}

// GetOspf6AreaRangeArrayInput is an input type that accepts GetOspf6AreaRangeArray and GetOspf6AreaRangeArrayOutput values.
// You can construct a concrete instance of `GetOspf6AreaRangeArrayInput` via:
//
//	GetOspf6AreaRangeArray{ GetOspf6AreaRangeArgs{...} }
type GetOspf6AreaRangeArrayInput interface {
	pulumi.Input

	ToGetOspf6AreaRangeArrayOutput() GetOspf6AreaRangeArrayOutput
	ToGetOspf6AreaRangeArrayOutputWithContext(context.Context) GetOspf6AreaRangeArrayOutput
}

type GetOspf6AreaRangeArray []GetOspf6AreaRangeInput

func (GetOspf6AreaRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6AreaRange)(nil)).Elem()
}

func (i GetOspf6AreaRangeArray) ToGetOspf6AreaRangeArrayOutput() GetOspf6AreaRangeArrayOutput {
	return i.ToGetOspf6AreaRangeArrayOutputWithContext(context.Background())
}

func (i GetOspf6AreaRangeArray) ToGetOspf6AreaRangeArrayOutputWithContext(ctx context.Context) GetOspf6AreaRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6AreaRangeArrayOutput)
}

type GetOspf6AreaRangeOutput struct{ *pulumi.OutputState }

func (GetOspf6AreaRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6AreaRange)(nil)).Elem()
}

func (o GetOspf6AreaRangeOutput) ToGetOspf6AreaRangeOutput() GetOspf6AreaRangeOutput {
	return o
}

func (o GetOspf6AreaRangeOutput) ToGetOspf6AreaRangeOutputWithContext(ctx context.Context) GetOspf6AreaRangeOutput {
	return o
}

// Enable/disable advertise status.
func (o GetOspf6AreaRangeOutput) Advertise() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6AreaRange) string { return v.Advertise }).(pulumi.StringOutput)
}

// Summary address entry ID.
func (o GetOspf6AreaRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6AreaRange) int { return v.Id }).(pulumi.IntOutput)
}

// IPv6 prefix.
func (o GetOspf6AreaRangeOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6AreaRange) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetOspf6AreaRangeArrayOutput struct{ *pulumi.OutputState }

func (GetOspf6AreaRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6AreaRange)(nil)).Elem()
}

func (o GetOspf6AreaRangeArrayOutput) ToGetOspf6AreaRangeArrayOutput() GetOspf6AreaRangeArrayOutput {
	return o
}

func (o GetOspf6AreaRangeArrayOutput) ToGetOspf6AreaRangeArrayOutputWithContext(ctx context.Context) GetOspf6AreaRangeArrayOutput {
	return o
}

func (o GetOspf6AreaRangeArrayOutput) Index(i pulumi.IntInput) GetOspf6AreaRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspf6AreaRange {
		return vs[0].([]GetOspf6AreaRange)[vs[1].(int)]
	}).(GetOspf6AreaRangeOutput)
}

type GetOspf6AreaVirtualLink struct {
	// Authentication mode.
	Authentication string `pulumi:"authentication"`
	// Dead interval.
	DeadInterval int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval int `pulumi:"helloInterval"`
	// Authentication algorithm.
	IpsecAuthAlg string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []GetOspf6AreaVirtualLinkIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval int `pulumi:"keyRolloverInterval"`
	// Passive interface name.
	Name string `pulumi:"name"`
	// A.B.C.D, peer router ID.
	Peer string `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval int `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay int `pulumi:"transmitDelay"`
}

// GetOspf6AreaVirtualLinkInput is an input type that accepts GetOspf6AreaVirtualLinkArgs and GetOspf6AreaVirtualLinkOutput values.
// You can construct a concrete instance of `GetOspf6AreaVirtualLinkInput` via:
//
//	GetOspf6AreaVirtualLinkArgs{...}
type GetOspf6AreaVirtualLinkInput interface {
	pulumi.Input

	ToGetOspf6AreaVirtualLinkOutput() GetOspf6AreaVirtualLinkOutput
	ToGetOspf6AreaVirtualLinkOutputWithContext(context.Context) GetOspf6AreaVirtualLinkOutput
}

type GetOspf6AreaVirtualLinkArgs struct {
	// Authentication mode.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Dead interval.
	DeadInterval pulumi.IntInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// Authentication algorithm.
	IpsecAuthAlg pulumi.StringInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg pulumi.StringInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys GetOspf6AreaVirtualLinkIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntInput `pulumi:"keyRolloverInterval"`
	// Passive interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// A.B.C.D, peer router ID.
	Peer pulumi.StringInput `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntInput `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay pulumi.IntInput `pulumi:"transmitDelay"`
}

func (GetOspf6AreaVirtualLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6AreaVirtualLink)(nil)).Elem()
}

func (i GetOspf6AreaVirtualLinkArgs) ToGetOspf6AreaVirtualLinkOutput() GetOspf6AreaVirtualLinkOutput {
	return i.ToGetOspf6AreaVirtualLinkOutputWithContext(context.Background())
}

func (i GetOspf6AreaVirtualLinkArgs) ToGetOspf6AreaVirtualLinkOutputWithContext(ctx context.Context) GetOspf6AreaVirtualLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6AreaVirtualLinkOutput)
}

// GetOspf6AreaVirtualLinkArrayInput is an input type that accepts GetOspf6AreaVirtualLinkArray and GetOspf6AreaVirtualLinkArrayOutput values.
// You can construct a concrete instance of `GetOspf6AreaVirtualLinkArrayInput` via:
//
//	GetOspf6AreaVirtualLinkArray{ GetOspf6AreaVirtualLinkArgs{...} }
type GetOspf6AreaVirtualLinkArrayInput interface {
	pulumi.Input

	ToGetOspf6AreaVirtualLinkArrayOutput() GetOspf6AreaVirtualLinkArrayOutput
	ToGetOspf6AreaVirtualLinkArrayOutputWithContext(context.Context) GetOspf6AreaVirtualLinkArrayOutput
}

type GetOspf6AreaVirtualLinkArray []GetOspf6AreaVirtualLinkInput

func (GetOspf6AreaVirtualLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6AreaVirtualLink)(nil)).Elem()
}

func (i GetOspf6AreaVirtualLinkArray) ToGetOspf6AreaVirtualLinkArrayOutput() GetOspf6AreaVirtualLinkArrayOutput {
	return i.ToGetOspf6AreaVirtualLinkArrayOutputWithContext(context.Background())
}

func (i GetOspf6AreaVirtualLinkArray) ToGetOspf6AreaVirtualLinkArrayOutputWithContext(ctx context.Context) GetOspf6AreaVirtualLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6AreaVirtualLinkArrayOutput)
}

type GetOspf6AreaVirtualLinkOutput struct{ *pulumi.OutputState }

func (GetOspf6AreaVirtualLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6AreaVirtualLink)(nil)).Elem()
}

func (o GetOspf6AreaVirtualLinkOutput) ToGetOspf6AreaVirtualLinkOutput() GetOspf6AreaVirtualLinkOutput {
	return o
}

func (o GetOspf6AreaVirtualLinkOutput) ToGetOspf6AreaVirtualLinkOutputWithContext(ctx context.Context) GetOspf6AreaVirtualLinkOutput {
	return o
}

// Authentication mode.
func (o GetOspf6AreaVirtualLinkOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLink) string { return v.Authentication }).(pulumi.StringOutput)
}

// Dead interval.
func (o GetOspf6AreaVirtualLinkOutput) DeadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLink) int { return v.DeadInterval }).(pulumi.IntOutput)
}

// Hello interval.
func (o GetOspf6AreaVirtualLinkOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLink) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// Authentication algorithm.
func (o GetOspf6AreaVirtualLinkOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLink) string { return v.IpsecAuthAlg }).(pulumi.StringOutput)
}

// Encryption algorithm.
func (o GetOspf6AreaVirtualLinkOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLink) string { return v.IpsecEncAlg }).(pulumi.StringOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o GetOspf6AreaVirtualLinkOutput) IpsecKeys() GetOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLink) []GetOspf6AreaVirtualLinkIpsecKey { return v.IpsecKeys }).(GetOspf6AreaVirtualLinkIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o GetOspf6AreaVirtualLinkOutput) KeyRolloverInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLink) int { return v.KeyRolloverInterval }).(pulumi.IntOutput)
}

// Passive interface name.
func (o GetOspf6AreaVirtualLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLink) string { return v.Name }).(pulumi.StringOutput)
}

// A.B.C.D, peer router ID.
func (o GetOspf6AreaVirtualLinkOutput) Peer() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLink) string { return v.Peer }).(pulumi.StringOutput)
}

// Retransmit interval.
func (o GetOspf6AreaVirtualLinkOutput) RetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLink) int { return v.RetransmitInterval }).(pulumi.IntOutput)
}

// Transmit delay.
func (o GetOspf6AreaVirtualLinkOutput) TransmitDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLink) int { return v.TransmitDelay }).(pulumi.IntOutput)
}

type GetOspf6AreaVirtualLinkArrayOutput struct{ *pulumi.OutputState }

func (GetOspf6AreaVirtualLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6AreaVirtualLink)(nil)).Elem()
}

func (o GetOspf6AreaVirtualLinkArrayOutput) ToGetOspf6AreaVirtualLinkArrayOutput() GetOspf6AreaVirtualLinkArrayOutput {
	return o
}

func (o GetOspf6AreaVirtualLinkArrayOutput) ToGetOspf6AreaVirtualLinkArrayOutputWithContext(ctx context.Context) GetOspf6AreaVirtualLinkArrayOutput {
	return o
}

func (o GetOspf6AreaVirtualLinkArrayOutput) Index(i pulumi.IntInput) GetOspf6AreaVirtualLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspf6AreaVirtualLink {
		return vs[0].([]GetOspf6AreaVirtualLink)[vs[1].(int)]
	}).(GetOspf6AreaVirtualLinkOutput)
}

type GetOspf6AreaVirtualLinkIpsecKey struct {
	// Authentication key.
	AuthKey string `pulumi:"authKey"`
	// Encryption key.
	EncKey string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi int `pulumi:"spi"`
}

// GetOspf6AreaVirtualLinkIpsecKeyInput is an input type that accepts GetOspf6AreaVirtualLinkIpsecKeyArgs and GetOspf6AreaVirtualLinkIpsecKeyOutput values.
// You can construct a concrete instance of `GetOspf6AreaVirtualLinkIpsecKeyInput` via:
//
//	GetOspf6AreaVirtualLinkIpsecKeyArgs{...}
type GetOspf6AreaVirtualLinkIpsecKeyInput interface {
	pulumi.Input

	ToGetOspf6AreaVirtualLinkIpsecKeyOutput() GetOspf6AreaVirtualLinkIpsecKeyOutput
	ToGetOspf6AreaVirtualLinkIpsecKeyOutputWithContext(context.Context) GetOspf6AreaVirtualLinkIpsecKeyOutput
}

type GetOspf6AreaVirtualLinkIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntInput `pulumi:"spi"`
}

func (GetOspf6AreaVirtualLinkIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (i GetOspf6AreaVirtualLinkIpsecKeyArgs) ToGetOspf6AreaVirtualLinkIpsecKeyOutput() GetOspf6AreaVirtualLinkIpsecKeyOutput {
	return i.ToGetOspf6AreaVirtualLinkIpsecKeyOutputWithContext(context.Background())
}

func (i GetOspf6AreaVirtualLinkIpsecKeyArgs) ToGetOspf6AreaVirtualLinkIpsecKeyOutputWithContext(ctx context.Context) GetOspf6AreaVirtualLinkIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6AreaVirtualLinkIpsecKeyOutput)
}

// GetOspf6AreaVirtualLinkIpsecKeyArrayInput is an input type that accepts GetOspf6AreaVirtualLinkIpsecKeyArray and GetOspf6AreaVirtualLinkIpsecKeyArrayOutput values.
// You can construct a concrete instance of `GetOspf6AreaVirtualLinkIpsecKeyArrayInput` via:
//
//	GetOspf6AreaVirtualLinkIpsecKeyArray{ GetOspf6AreaVirtualLinkIpsecKeyArgs{...} }
type GetOspf6AreaVirtualLinkIpsecKeyArrayInput interface {
	pulumi.Input

	ToGetOspf6AreaVirtualLinkIpsecKeyArrayOutput() GetOspf6AreaVirtualLinkIpsecKeyArrayOutput
	ToGetOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(context.Context) GetOspf6AreaVirtualLinkIpsecKeyArrayOutput
}

type GetOspf6AreaVirtualLinkIpsecKeyArray []GetOspf6AreaVirtualLinkIpsecKeyInput

func (GetOspf6AreaVirtualLinkIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (i GetOspf6AreaVirtualLinkIpsecKeyArray) ToGetOspf6AreaVirtualLinkIpsecKeyArrayOutput() GetOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return i.ToGetOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(context.Background())
}

func (i GetOspf6AreaVirtualLinkIpsecKeyArray) ToGetOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(ctx context.Context) GetOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6AreaVirtualLinkIpsecKeyArrayOutput)
}

type GetOspf6AreaVirtualLinkIpsecKeyOutput struct{ *pulumi.OutputState }

func (GetOspf6AreaVirtualLinkIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (o GetOspf6AreaVirtualLinkIpsecKeyOutput) ToGetOspf6AreaVirtualLinkIpsecKeyOutput() GetOspf6AreaVirtualLinkIpsecKeyOutput {
	return o
}

func (o GetOspf6AreaVirtualLinkIpsecKeyOutput) ToGetOspf6AreaVirtualLinkIpsecKeyOutputWithContext(ctx context.Context) GetOspf6AreaVirtualLinkIpsecKeyOutput {
	return o
}

// Authentication key.
func (o GetOspf6AreaVirtualLinkIpsecKeyOutput) AuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLinkIpsecKey) string { return v.AuthKey }).(pulumi.StringOutput)
}

// Encryption key.
func (o GetOspf6AreaVirtualLinkIpsecKeyOutput) EncKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLinkIpsecKey) string { return v.EncKey }).(pulumi.StringOutput)
}

// Security Parameters Index.
func (o GetOspf6AreaVirtualLinkIpsecKeyOutput) Spi() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6AreaVirtualLinkIpsecKey) int { return v.Spi }).(pulumi.IntOutput)
}

type GetOspf6AreaVirtualLinkIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (GetOspf6AreaVirtualLinkIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (o GetOspf6AreaVirtualLinkIpsecKeyArrayOutput) ToGetOspf6AreaVirtualLinkIpsecKeyArrayOutput() GetOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o
}

func (o GetOspf6AreaVirtualLinkIpsecKeyArrayOutput) ToGetOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(ctx context.Context) GetOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o
}

func (o GetOspf6AreaVirtualLinkIpsecKeyArrayOutput) Index(i pulumi.IntInput) GetOspf6AreaVirtualLinkIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspf6AreaVirtualLinkIpsecKey {
		return vs[0].([]GetOspf6AreaVirtualLinkIpsecKey)[vs[1].(int)]
	}).(GetOspf6AreaVirtualLinkIpsecKeyOutput)
}

type GetOspf6Ospf6Interface struct {
	// A.B.C.D, in IPv4 address format.
	AreaId string `pulumi:"areaId"`
	// Authentication mode.
	Authentication string `pulumi:"authentication"`
	// Enable/disable Bidirectional Forwarding Detection (BFD).
	Bfd string `pulumi:"bfd"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost int `pulumi:"cost"`
	// Dead interval.
	DeadInterval int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval int `pulumi:"helloInterval"`
	// Configuration interface name.
	Interface string `pulumi:"interface"`
	// Authentication algorithm.
	IpsecAuthAlg string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []GetOspf6Ospf6InterfaceIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval int `pulumi:"keyRolloverInterval"`
	// MTU for OSPFv3 packets.
	Mtu int `pulumi:"mtu"`
	// Enable/disable ignoring MTU field in DBD packets.
	MtuIgnore string `pulumi:"mtuIgnore"`
	// Passive interface name.
	Name string `pulumi:"name"`
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors []GetOspf6Ospf6InterfaceNeighbor `pulumi:"neighbors"`
	// Network type.
	NetworkType string `pulumi:"networkType"`
	// priority
	Priority int `pulumi:"priority"`
	// Retransmit interval.
	RetransmitInterval int `pulumi:"retransmitInterval"`
	// status
	Status string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay int `pulumi:"transmitDelay"`
}

// GetOspf6Ospf6InterfaceInput is an input type that accepts GetOspf6Ospf6InterfaceArgs and GetOspf6Ospf6InterfaceOutput values.
// You can construct a concrete instance of `GetOspf6Ospf6InterfaceInput` via:
//
//	GetOspf6Ospf6InterfaceArgs{...}
type GetOspf6Ospf6InterfaceInput interface {
	pulumi.Input

	ToGetOspf6Ospf6InterfaceOutput() GetOspf6Ospf6InterfaceOutput
	ToGetOspf6Ospf6InterfaceOutputWithContext(context.Context) GetOspf6Ospf6InterfaceOutput
}

type GetOspf6Ospf6InterfaceArgs struct {
	// A.B.C.D, in IPv4 address format.
	AreaId pulumi.StringInput `pulumi:"areaId"`
	// Authentication mode.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Enable/disable Bidirectional Forwarding Detection (BFD).
	Bfd pulumi.StringInput `pulumi:"bfd"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntInput `pulumi:"cost"`
	// Dead interval.
	DeadInterval pulumi.IntInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// Configuration interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Authentication algorithm.
	IpsecAuthAlg pulumi.StringInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm.
	IpsecEncAlg pulumi.StringInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys GetOspf6Ospf6InterfaceIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntInput `pulumi:"keyRolloverInterval"`
	// MTU for OSPFv3 packets.
	Mtu pulumi.IntInput `pulumi:"mtu"`
	// Enable/disable ignoring MTU field in DBD packets.
	MtuIgnore pulumi.StringInput `pulumi:"mtuIgnore"`
	// Passive interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors GetOspf6Ospf6InterfaceNeighborArrayInput `pulumi:"neighbors"`
	// Network type.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// priority
	Priority pulumi.IntInput `pulumi:"priority"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntInput `pulumi:"retransmitInterval"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
	// Transmit delay.
	TransmitDelay pulumi.IntInput `pulumi:"transmitDelay"`
}

func (GetOspf6Ospf6InterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6Ospf6Interface)(nil)).Elem()
}

func (i GetOspf6Ospf6InterfaceArgs) ToGetOspf6Ospf6InterfaceOutput() GetOspf6Ospf6InterfaceOutput {
	return i.ToGetOspf6Ospf6InterfaceOutputWithContext(context.Background())
}

func (i GetOspf6Ospf6InterfaceArgs) ToGetOspf6Ospf6InterfaceOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6Ospf6InterfaceOutput)
}

// GetOspf6Ospf6InterfaceArrayInput is an input type that accepts GetOspf6Ospf6InterfaceArray and GetOspf6Ospf6InterfaceArrayOutput values.
// You can construct a concrete instance of `GetOspf6Ospf6InterfaceArrayInput` via:
//
//	GetOspf6Ospf6InterfaceArray{ GetOspf6Ospf6InterfaceArgs{...} }
type GetOspf6Ospf6InterfaceArrayInput interface {
	pulumi.Input

	ToGetOspf6Ospf6InterfaceArrayOutput() GetOspf6Ospf6InterfaceArrayOutput
	ToGetOspf6Ospf6InterfaceArrayOutputWithContext(context.Context) GetOspf6Ospf6InterfaceArrayOutput
}

type GetOspf6Ospf6InterfaceArray []GetOspf6Ospf6InterfaceInput

func (GetOspf6Ospf6InterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6Ospf6Interface)(nil)).Elem()
}

func (i GetOspf6Ospf6InterfaceArray) ToGetOspf6Ospf6InterfaceArrayOutput() GetOspf6Ospf6InterfaceArrayOutput {
	return i.ToGetOspf6Ospf6InterfaceArrayOutputWithContext(context.Background())
}

func (i GetOspf6Ospf6InterfaceArray) ToGetOspf6Ospf6InterfaceArrayOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6Ospf6InterfaceArrayOutput)
}

type GetOspf6Ospf6InterfaceOutput struct{ *pulumi.OutputState }

func (GetOspf6Ospf6InterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6Ospf6Interface)(nil)).Elem()
}

func (o GetOspf6Ospf6InterfaceOutput) ToGetOspf6Ospf6InterfaceOutput() GetOspf6Ospf6InterfaceOutput {
	return o
}

func (o GetOspf6Ospf6InterfaceOutput) ToGetOspf6Ospf6InterfaceOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceOutput {
	return o
}

// A.B.C.D, in IPv4 address format.
func (o GetOspf6Ospf6InterfaceOutput) AreaId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) string { return v.AreaId }).(pulumi.StringOutput)
}

// Authentication mode.
func (o GetOspf6Ospf6InterfaceOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) string { return v.Authentication }).(pulumi.StringOutput)
}

// Enable/disable Bidirectional Forwarding Detection (BFD).
func (o GetOspf6Ospf6InterfaceOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) string { return v.Bfd }).(pulumi.StringOutput)
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o GetOspf6Ospf6InterfaceOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) int { return v.Cost }).(pulumi.IntOutput)
}

// Dead interval.
func (o GetOspf6Ospf6InterfaceOutput) DeadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) int { return v.DeadInterval }).(pulumi.IntOutput)
}

// Hello interval.
func (o GetOspf6Ospf6InterfaceOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// Configuration interface name.
func (o GetOspf6Ospf6InterfaceOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) string { return v.Interface }).(pulumi.StringOutput)
}

// Authentication algorithm.
func (o GetOspf6Ospf6InterfaceOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) string { return v.IpsecAuthAlg }).(pulumi.StringOutput)
}

// Encryption algorithm.
func (o GetOspf6Ospf6InterfaceOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) string { return v.IpsecEncAlg }).(pulumi.StringOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o GetOspf6Ospf6InterfaceOutput) IpsecKeys() GetOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) []GetOspf6Ospf6InterfaceIpsecKey { return v.IpsecKeys }).(GetOspf6Ospf6InterfaceIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o GetOspf6Ospf6InterfaceOutput) KeyRolloverInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) int { return v.KeyRolloverInterval }).(pulumi.IntOutput)
}

// MTU for OSPFv3 packets.
func (o GetOspf6Ospf6InterfaceOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) int { return v.Mtu }).(pulumi.IntOutput)
}

// Enable/disable ignoring MTU field in DBD packets.
func (o GetOspf6Ospf6InterfaceOutput) MtuIgnore() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) string { return v.MtuIgnore }).(pulumi.StringOutput)
}

// Passive interface name.
func (o GetOspf6Ospf6InterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) string { return v.Name }).(pulumi.StringOutput)
}

// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
func (o GetOspf6Ospf6InterfaceOutput) Neighbors() GetOspf6Ospf6InterfaceNeighborArrayOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) []GetOspf6Ospf6InterfaceNeighbor { return v.Neighbors }).(GetOspf6Ospf6InterfaceNeighborArrayOutput)
}

// Network type.
func (o GetOspf6Ospf6InterfaceOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) string { return v.NetworkType }).(pulumi.StringOutput)
}

// priority
func (o GetOspf6Ospf6InterfaceOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) int { return v.Priority }).(pulumi.IntOutput)
}

// Retransmit interval.
func (o GetOspf6Ospf6InterfaceOutput) RetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) int { return v.RetransmitInterval }).(pulumi.IntOutput)
}

// status
func (o GetOspf6Ospf6InterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) string { return v.Status }).(pulumi.StringOutput)
}

// Transmit delay.
func (o GetOspf6Ospf6InterfaceOutput) TransmitDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6Interface) int { return v.TransmitDelay }).(pulumi.IntOutput)
}

type GetOspf6Ospf6InterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetOspf6Ospf6InterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6Ospf6Interface)(nil)).Elem()
}

func (o GetOspf6Ospf6InterfaceArrayOutput) ToGetOspf6Ospf6InterfaceArrayOutput() GetOspf6Ospf6InterfaceArrayOutput {
	return o
}

func (o GetOspf6Ospf6InterfaceArrayOutput) ToGetOspf6Ospf6InterfaceArrayOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceArrayOutput {
	return o
}

func (o GetOspf6Ospf6InterfaceArrayOutput) Index(i pulumi.IntInput) GetOspf6Ospf6InterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspf6Ospf6Interface {
		return vs[0].([]GetOspf6Ospf6Interface)[vs[1].(int)]
	}).(GetOspf6Ospf6InterfaceOutput)
}

type GetOspf6Ospf6InterfaceIpsecKey struct {
	// Authentication key.
	AuthKey string `pulumi:"authKey"`
	// Encryption key.
	EncKey string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi int `pulumi:"spi"`
}

// GetOspf6Ospf6InterfaceIpsecKeyInput is an input type that accepts GetOspf6Ospf6InterfaceIpsecKeyArgs and GetOspf6Ospf6InterfaceIpsecKeyOutput values.
// You can construct a concrete instance of `GetOspf6Ospf6InterfaceIpsecKeyInput` via:
//
//	GetOspf6Ospf6InterfaceIpsecKeyArgs{...}
type GetOspf6Ospf6InterfaceIpsecKeyInput interface {
	pulumi.Input

	ToGetOspf6Ospf6InterfaceIpsecKeyOutput() GetOspf6Ospf6InterfaceIpsecKeyOutput
	ToGetOspf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Context) GetOspf6Ospf6InterfaceIpsecKeyOutput
}

type GetOspf6Ospf6InterfaceIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntInput `pulumi:"spi"`
}

func (GetOspf6Ospf6InterfaceIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i GetOspf6Ospf6InterfaceIpsecKeyArgs) ToGetOspf6Ospf6InterfaceIpsecKeyOutput() GetOspf6Ospf6InterfaceIpsecKeyOutput {
	return i.ToGetOspf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Background())
}

func (i GetOspf6Ospf6InterfaceIpsecKeyArgs) ToGetOspf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6Ospf6InterfaceIpsecKeyOutput)
}

// GetOspf6Ospf6InterfaceIpsecKeyArrayInput is an input type that accepts GetOspf6Ospf6InterfaceIpsecKeyArray and GetOspf6Ospf6InterfaceIpsecKeyArrayOutput values.
// You can construct a concrete instance of `GetOspf6Ospf6InterfaceIpsecKeyArrayInput` via:
//
//	GetOspf6Ospf6InterfaceIpsecKeyArray{ GetOspf6Ospf6InterfaceIpsecKeyArgs{...} }
type GetOspf6Ospf6InterfaceIpsecKeyArrayInput interface {
	pulumi.Input

	ToGetOspf6Ospf6InterfaceIpsecKeyArrayOutput() GetOspf6Ospf6InterfaceIpsecKeyArrayOutput
	ToGetOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Context) GetOspf6Ospf6InterfaceIpsecKeyArrayOutput
}

type GetOspf6Ospf6InterfaceIpsecKeyArray []GetOspf6Ospf6InterfaceIpsecKeyInput

func (GetOspf6Ospf6InterfaceIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i GetOspf6Ospf6InterfaceIpsecKeyArray) ToGetOspf6Ospf6InterfaceIpsecKeyArrayOutput() GetOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return i.ToGetOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Background())
}

func (i GetOspf6Ospf6InterfaceIpsecKeyArray) ToGetOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6Ospf6InterfaceIpsecKeyArrayOutput)
}

type GetOspf6Ospf6InterfaceIpsecKeyOutput struct{ *pulumi.OutputState }

func (GetOspf6Ospf6InterfaceIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o GetOspf6Ospf6InterfaceIpsecKeyOutput) ToGetOspf6Ospf6InterfaceIpsecKeyOutput() GetOspf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

func (o GetOspf6Ospf6InterfaceIpsecKeyOutput) ToGetOspf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

// Authentication key.
func (o GetOspf6Ospf6InterfaceIpsecKeyOutput) AuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6InterfaceIpsecKey) string { return v.AuthKey }).(pulumi.StringOutput)
}

// Encryption key.
func (o GetOspf6Ospf6InterfaceIpsecKeyOutput) EncKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6InterfaceIpsecKey) string { return v.EncKey }).(pulumi.StringOutput)
}

// Security Parameters Index.
func (o GetOspf6Ospf6InterfaceIpsecKeyOutput) Spi() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6InterfaceIpsecKey) int { return v.Spi }).(pulumi.IntOutput)
}

type GetOspf6Ospf6InterfaceIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (GetOspf6Ospf6InterfaceIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o GetOspf6Ospf6InterfaceIpsecKeyArrayOutput) ToGetOspf6Ospf6InterfaceIpsecKeyArrayOutput() GetOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o GetOspf6Ospf6InterfaceIpsecKeyArrayOutput) ToGetOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o GetOspf6Ospf6InterfaceIpsecKeyArrayOutput) Index(i pulumi.IntInput) GetOspf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspf6Ospf6InterfaceIpsecKey {
		return vs[0].([]GetOspf6Ospf6InterfaceIpsecKey)[vs[1].(int)]
	}).(GetOspf6Ospf6InterfaceIpsecKeyOutput)
}

type GetOspf6Ospf6InterfaceNeighbor struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost int `pulumi:"cost"`
	// IPv6 link local address of the neighbor.
	Ip6 string `pulumi:"ip6"`
	// Poll interval time in seconds.
	PollInterval int `pulumi:"pollInterval"`
	// priority
	Priority int `pulumi:"priority"`
}

// GetOspf6Ospf6InterfaceNeighborInput is an input type that accepts GetOspf6Ospf6InterfaceNeighborArgs and GetOspf6Ospf6InterfaceNeighborOutput values.
// You can construct a concrete instance of `GetOspf6Ospf6InterfaceNeighborInput` via:
//
//	GetOspf6Ospf6InterfaceNeighborArgs{...}
type GetOspf6Ospf6InterfaceNeighborInput interface {
	pulumi.Input

	ToGetOspf6Ospf6InterfaceNeighborOutput() GetOspf6Ospf6InterfaceNeighborOutput
	ToGetOspf6Ospf6InterfaceNeighborOutputWithContext(context.Context) GetOspf6Ospf6InterfaceNeighborOutput
}

type GetOspf6Ospf6InterfaceNeighborArgs struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntInput `pulumi:"cost"`
	// IPv6 link local address of the neighbor.
	Ip6 pulumi.StringInput `pulumi:"ip6"`
	// Poll interval time in seconds.
	PollInterval pulumi.IntInput `pulumi:"pollInterval"`
	// priority
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (GetOspf6Ospf6InterfaceNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i GetOspf6Ospf6InterfaceNeighborArgs) ToGetOspf6Ospf6InterfaceNeighborOutput() GetOspf6Ospf6InterfaceNeighborOutput {
	return i.ToGetOspf6Ospf6InterfaceNeighborOutputWithContext(context.Background())
}

func (i GetOspf6Ospf6InterfaceNeighborArgs) ToGetOspf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6Ospf6InterfaceNeighborOutput)
}

// GetOspf6Ospf6InterfaceNeighborArrayInput is an input type that accepts GetOspf6Ospf6InterfaceNeighborArray and GetOspf6Ospf6InterfaceNeighborArrayOutput values.
// You can construct a concrete instance of `GetOspf6Ospf6InterfaceNeighborArrayInput` via:
//
//	GetOspf6Ospf6InterfaceNeighborArray{ GetOspf6Ospf6InterfaceNeighborArgs{...} }
type GetOspf6Ospf6InterfaceNeighborArrayInput interface {
	pulumi.Input

	ToGetOspf6Ospf6InterfaceNeighborArrayOutput() GetOspf6Ospf6InterfaceNeighborArrayOutput
	ToGetOspf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Context) GetOspf6Ospf6InterfaceNeighborArrayOutput
}

type GetOspf6Ospf6InterfaceNeighborArray []GetOspf6Ospf6InterfaceNeighborInput

func (GetOspf6Ospf6InterfaceNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i GetOspf6Ospf6InterfaceNeighborArray) ToGetOspf6Ospf6InterfaceNeighborArrayOutput() GetOspf6Ospf6InterfaceNeighborArrayOutput {
	return i.ToGetOspf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Background())
}

func (i GetOspf6Ospf6InterfaceNeighborArray) ToGetOspf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6Ospf6InterfaceNeighborArrayOutput)
}

type GetOspf6Ospf6InterfaceNeighborOutput struct{ *pulumi.OutputState }

func (GetOspf6Ospf6InterfaceNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o GetOspf6Ospf6InterfaceNeighborOutput) ToGetOspf6Ospf6InterfaceNeighborOutput() GetOspf6Ospf6InterfaceNeighborOutput {
	return o
}

func (o GetOspf6Ospf6InterfaceNeighborOutput) ToGetOspf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceNeighborOutput {
	return o
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o GetOspf6Ospf6InterfaceNeighborOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6InterfaceNeighbor) int { return v.Cost }).(pulumi.IntOutput)
}

// IPv6 link local address of the neighbor.
func (o GetOspf6Ospf6InterfaceNeighborOutput) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Ospf6InterfaceNeighbor) string { return v.Ip6 }).(pulumi.StringOutput)
}

// Poll interval time in seconds.
func (o GetOspf6Ospf6InterfaceNeighborOutput) PollInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6InterfaceNeighbor) int { return v.PollInterval }).(pulumi.IntOutput)
}

// priority
func (o GetOspf6Ospf6InterfaceNeighborOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Ospf6InterfaceNeighbor) int { return v.Priority }).(pulumi.IntOutput)
}

type GetOspf6Ospf6InterfaceNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetOspf6Ospf6InterfaceNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o GetOspf6Ospf6InterfaceNeighborArrayOutput) ToGetOspf6Ospf6InterfaceNeighborArrayOutput() GetOspf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o GetOspf6Ospf6InterfaceNeighborArrayOutput) ToGetOspf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) GetOspf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o GetOspf6Ospf6InterfaceNeighborArrayOutput) Index(i pulumi.IntInput) GetOspf6Ospf6InterfaceNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspf6Ospf6InterfaceNeighbor {
		return vs[0].([]GetOspf6Ospf6InterfaceNeighbor)[vs[1].(int)]
	}).(GetOspf6Ospf6InterfaceNeighborOutput)
}

type GetOspf6PassiveInterface struct {
	// Passive interface name.
	Name string `pulumi:"name"`
}

// GetOspf6PassiveInterfaceInput is an input type that accepts GetOspf6PassiveInterfaceArgs and GetOspf6PassiveInterfaceOutput values.
// You can construct a concrete instance of `GetOspf6PassiveInterfaceInput` via:
//
//	GetOspf6PassiveInterfaceArgs{...}
type GetOspf6PassiveInterfaceInput interface {
	pulumi.Input

	ToGetOspf6PassiveInterfaceOutput() GetOspf6PassiveInterfaceOutput
	ToGetOspf6PassiveInterfaceOutputWithContext(context.Context) GetOspf6PassiveInterfaceOutput
}

type GetOspf6PassiveInterfaceArgs struct {
	// Passive interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetOspf6PassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6PassiveInterface)(nil)).Elem()
}

func (i GetOspf6PassiveInterfaceArgs) ToGetOspf6PassiveInterfaceOutput() GetOspf6PassiveInterfaceOutput {
	return i.ToGetOspf6PassiveInterfaceOutputWithContext(context.Background())
}

func (i GetOspf6PassiveInterfaceArgs) ToGetOspf6PassiveInterfaceOutputWithContext(ctx context.Context) GetOspf6PassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6PassiveInterfaceOutput)
}

// GetOspf6PassiveInterfaceArrayInput is an input type that accepts GetOspf6PassiveInterfaceArray and GetOspf6PassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `GetOspf6PassiveInterfaceArrayInput` via:
//
//	GetOspf6PassiveInterfaceArray{ GetOspf6PassiveInterfaceArgs{...} }
type GetOspf6PassiveInterfaceArrayInput interface {
	pulumi.Input

	ToGetOspf6PassiveInterfaceArrayOutput() GetOspf6PassiveInterfaceArrayOutput
	ToGetOspf6PassiveInterfaceArrayOutputWithContext(context.Context) GetOspf6PassiveInterfaceArrayOutput
}

type GetOspf6PassiveInterfaceArray []GetOspf6PassiveInterfaceInput

func (GetOspf6PassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6PassiveInterface)(nil)).Elem()
}

func (i GetOspf6PassiveInterfaceArray) ToGetOspf6PassiveInterfaceArrayOutput() GetOspf6PassiveInterfaceArrayOutput {
	return i.ToGetOspf6PassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i GetOspf6PassiveInterfaceArray) ToGetOspf6PassiveInterfaceArrayOutputWithContext(ctx context.Context) GetOspf6PassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6PassiveInterfaceArrayOutput)
}

type GetOspf6PassiveInterfaceOutput struct{ *pulumi.OutputState }

func (GetOspf6PassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6PassiveInterface)(nil)).Elem()
}

func (o GetOspf6PassiveInterfaceOutput) ToGetOspf6PassiveInterfaceOutput() GetOspf6PassiveInterfaceOutput {
	return o
}

func (o GetOspf6PassiveInterfaceOutput) ToGetOspf6PassiveInterfaceOutputWithContext(ctx context.Context) GetOspf6PassiveInterfaceOutput {
	return o
}

// Passive interface name.
func (o GetOspf6PassiveInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6PassiveInterface) string { return v.Name }).(pulumi.StringOutput)
}

type GetOspf6PassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetOspf6PassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6PassiveInterface)(nil)).Elem()
}

func (o GetOspf6PassiveInterfaceArrayOutput) ToGetOspf6PassiveInterfaceArrayOutput() GetOspf6PassiveInterfaceArrayOutput {
	return o
}

func (o GetOspf6PassiveInterfaceArrayOutput) ToGetOspf6PassiveInterfaceArrayOutputWithContext(ctx context.Context) GetOspf6PassiveInterfaceArrayOutput {
	return o
}

func (o GetOspf6PassiveInterfaceArrayOutput) Index(i pulumi.IntInput) GetOspf6PassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspf6PassiveInterface {
		return vs[0].([]GetOspf6PassiveInterface)[vs[1].(int)]
	}).(GetOspf6PassiveInterfaceOutput)
}

type GetOspf6Redistribute struct {
	// Redistribute metric setting.
	Metric int `pulumi:"metric"`
	// Metric type.
	MetricType string `pulumi:"metricType"`
	// Passive interface name.
	Name string `pulumi:"name"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// status
	Status string `pulumi:"status"`
}

// GetOspf6RedistributeInput is an input type that accepts GetOspf6RedistributeArgs and GetOspf6RedistributeOutput values.
// You can construct a concrete instance of `GetOspf6RedistributeInput` via:
//
//	GetOspf6RedistributeArgs{...}
type GetOspf6RedistributeInput interface {
	pulumi.Input

	ToGetOspf6RedistributeOutput() GetOspf6RedistributeOutput
	ToGetOspf6RedistributeOutputWithContext(context.Context) GetOspf6RedistributeOutput
}

type GetOspf6RedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Metric type.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Passive interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetOspf6RedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6Redistribute)(nil)).Elem()
}

func (i GetOspf6RedistributeArgs) ToGetOspf6RedistributeOutput() GetOspf6RedistributeOutput {
	return i.ToGetOspf6RedistributeOutputWithContext(context.Background())
}

func (i GetOspf6RedistributeArgs) ToGetOspf6RedistributeOutputWithContext(ctx context.Context) GetOspf6RedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6RedistributeOutput)
}

// GetOspf6RedistributeArrayInput is an input type that accepts GetOspf6RedistributeArray and GetOspf6RedistributeArrayOutput values.
// You can construct a concrete instance of `GetOspf6RedistributeArrayInput` via:
//
//	GetOspf6RedistributeArray{ GetOspf6RedistributeArgs{...} }
type GetOspf6RedistributeArrayInput interface {
	pulumi.Input

	ToGetOspf6RedistributeArrayOutput() GetOspf6RedistributeArrayOutput
	ToGetOspf6RedistributeArrayOutputWithContext(context.Context) GetOspf6RedistributeArrayOutput
}

type GetOspf6RedistributeArray []GetOspf6RedistributeInput

func (GetOspf6RedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6Redistribute)(nil)).Elem()
}

func (i GetOspf6RedistributeArray) ToGetOspf6RedistributeArrayOutput() GetOspf6RedistributeArrayOutput {
	return i.ToGetOspf6RedistributeArrayOutputWithContext(context.Background())
}

func (i GetOspf6RedistributeArray) ToGetOspf6RedistributeArrayOutputWithContext(ctx context.Context) GetOspf6RedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6RedistributeArrayOutput)
}

type GetOspf6RedistributeOutput struct{ *pulumi.OutputState }

func (GetOspf6RedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6Redistribute)(nil)).Elem()
}

func (o GetOspf6RedistributeOutput) ToGetOspf6RedistributeOutput() GetOspf6RedistributeOutput {
	return o
}

func (o GetOspf6RedistributeOutput) ToGetOspf6RedistributeOutputWithContext(ctx context.Context) GetOspf6RedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o GetOspf6RedistributeOutput) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6Redistribute) int { return v.Metric }).(pulumi.IntOutput)
}

// Metric type.
func (o GetOspf6RedistributeOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Redistribute) string { return v.MetricType }).(pulumi.StringOutput)
}

// Passive interface name.
func (o GetOspf6RedistributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Redistribute) string { return v.Name }).(pulumi.StringOutput)
}

// Route map name.
func (o GetOspf6RedistributeOutput) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Redistribute) string { return v.Routemap }).(pulumi.StringOutput)
}

// status
func (o GetOspf6RedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6Redistribute) string { return v.Status }).(pulumi.StringOutput)
}

type GetOspf6RedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetOspf6RedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6Redistribute)(nil)).Elem()
}

func (o GetOspf6RedistributeArrayOutput) ToGetOspf6RedistributeArrayOutput() GetOspf6RedistributeArrayOutput {
	return o
}

func (o GetOspf6RedistributeArrayOutput) ToGetOspf6RedistributeArrayOutputWithContext(ctx context.Context) GetOspf6RedistributeArrayOutput {
	return o
}

func (o GetOspf6RedistributeArrayOutput) Index(i pulumi.IntInput) GetOspf6RedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspf6Redistribute {
		return vs[0].([]GetOspf6Redistribute)[vs[1].(int)]
	}).(GetOspf6RedistributeOutput)
}

type GetOspf6SummaryAddress struct {
	// Enable/disable advertise status.
	Advertise string `pulumi:"advertise"`
	// Summary address entry ID.
	Id int `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 string `pulumi:"prefix6"`
	// Tag value.
	Tag int `pulumi:"tag"`
}

// GetOspf6SummaryAddressInput is an input type that accepts GetOspf6SummaryAddressArgs and GetOspf6SummaryAddressOutput values.
// You can construct a concrete instance of `GetOspf6SummaryAddressInput` via:
//
//	GetOspf6SummaryAddressArgs{...}
type GetOspf6SummaryAddressInput interface {
	pulumi.Input

	ToGetOspf6SummaryAddressOutput() GetOspf6SummaryAddressOutput
	ToGetOspf6SummaryAddressOutputWithContext(context.Context) GetOspf6SummaryAddressOutput
}

type GetOspf6SummaryAddressArgs struct {
	// Enable/disable advertise status.
	Advertise pulumi.StringInput `pulumi:"advertise"`
	// Summary address entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
	// Tag value.
	Tag pulumi.IntInput `pulumi:"tag"`
}

func (GetOspf6SummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6SummaryAddress)(nil)).Elem()
}

func (i GetOspf6SummaryAddressArgs) ToGetOspf6SummaryAddressOutput() GetOspf6SummaryAddressOutput {
	return i.ToGetOspf6SummaryAddressOutputWithContext(context.Background())
}

func (i GetOspf6SummaryAddressArgs) ToGetOspf6SummaryAddressOutputWithContext(ctx context.Context) GetOspf6SummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6SummaryAddressOutput)
}

// GetOspf6SummaryAddressArrayInput is an input type that accepts GetOspf6SummaryAddressArray and GetOspf6SummaryAddressArrayOutput values.
// You can construct a concrete instance of `GetOspf6SummaryAddressArrayInput` via:
//
//	GetOspf6SummaryAddressArray{ GetOspf6SummaryAddressArgs{...} }
type GetOspf6SummaryAddressArrayInput interface {
	pulumi.Input

	ToGetOspf6SummaryAddressArrayOutput() GetOspf6SummaryAddressArrayOutput
	ToGetOspf6SummaryAddressArrayOutputWithContext(context.Context) GetOspf6SummaryAddressArrayOutput
}

type GetOspf6SummaryAddressArray []GetOspf6SummaryAddressInput

func (GetOspf6SummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6SummaryAddress)(nil)).Elem()
}

func (i GetOspf6SummaryAddressArray) ToGetOspf6SummaryAddressArrayOutput() GetOspf6SummaryAddressArrayOutput {
	return i.ToGetOspf6SummaryAddressArrayOutputWithContext(context.Background())
}

func (i GetOspf6SummaryAddressArray) ToGetOspf6SummaryAddressArrayOutputWithContext(ctx context.Context) GetOspf6SummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspf6SummaryAddressArrayOutput)
}

type GetOspf6SummaryAddressOutput struct{ *pulumi.OutputState }

func (GetOspf6SummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspf6SummaryAddress)(nil)).Elem()
}

func (o GetOspf6SummaryAddressOutput) ToGetOspf6SummaryAddressOutput() GetOspf6SummaryAddressOutput {
	return o
}

func (o GetOspf6SummaryAddressOutput) ToGetOspf6SummaryAddressOutputWithContext(ctx context.Context) GetOspf6SummaryAddressOutput {
	return o
}

// Enable/disable advertise status.
func (o GetOspf6SummaryAddressOutput) Advertise() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6SummaryAddress) string { return v.Advertise }).(pulumi.StringOutput)
}

// Summary address entry ID.
func (o GetOspf6SummaryAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6SummaryAddress) int { return v.Id }).(pulumi.IntOutput)
}

// IPv6 prefix.
func (o GetOspf6SummaryAddressOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspf6SummaryAddress) string { return v.Prefix6 }).(pulumi.StringOutput)
}

// Tag value.
func (o GetOspf6SummaryAddressOutput) Tag() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspf6SummaryAddress) int { return v.Tag }).(pulumi.IntOutput)
}

type GetOspf6SummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (GetOspf6SummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspf6SummaryAddress)(nil)).Elem()
}

func (o GetOspf6SummaryAddressArrayOutput) ToGetOspf6SummaryAddressArrayOutput() GetOspf6SummaryAddressArrayOutput {
	return o
}

func (o GetOspf6SummaryAddressArrayOutput) ToGetOspf6SummaryAddressArrayOutputWithContext(ctx context.Context) GetOspf6SummaryAddressArrayOutput {
	return o
}

func (o GetOspf6SummaryAddressArrayOutput) Index(i pulumi.IntInput) GetOspf6SummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspf6SummaryAddress {
		return vs[0].([]GetOspf6SummaryAddress)[vs[1].(int)]
	}).(GetOspf6SummaryAddressOutput)
}

type GetOspfArea struct {
	// Authentication type.
	Authentication string `pulumi:"authentication"`
	// Comment.
	Comments string `pulumi:"comments"`
	// Summary default cost of stub or NSSA area.
	DefaultCost int `pulumi:"defaultCost"`
	// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
	FilterLists []GetOspfAreaFilterList `pulumi:"filterLists"`
	// Distribute list entry ID.
	Id string `pulumi:"id"`
	// Redistribute, advertise, or do not originate Type-7 default route into NSSA area.
	NssaDefaultInformationOriginate string `pulumi:"nssaDefaultInformationOriginate"`
	// OSPF default metric.
	NssaDefaultInformationOriginateMetric int `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPF metric type for default routes.
	NssaDefaultInformationOriginateMetricType string `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area.
	NssaRedistribution string `pulumi:"nssaRedistribution"`
	// NSSA translator role type.
	NssaTranslatorRole string `pulumi:"nssaTranslatorRole"`
	// OSPF area range configuration. The structure of `range` block is documented below.
	Ranges []GetOspfAreaRange `pulumi:"ranges"`
	// Enable/disable shortcut option.
	Shortcut string `pulumi:"shortcut"`
	// Stub summary setting.
	StubType string `pulumi:"stubType"`
	// Area type setting.
	Type string `pulumi:"type"`
	// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks []GetOspfAreaVirtualLink `pulumi:"virtualLinks"`
}

// GetOspfAreaInput is an input type that accepts GetOspfAreaArgs and GetOspfAreaOutput values.
// You can construct a concrete instance of `GetOspfAreaInput` via:
//
//	GetOspfAreaArgs{...}
type GetOspfAreaInput interface {
	pulumi.Input

	ToGetOspfAreaOutput() GetOspfAreaOutput
	ToGetOspfAreaOutputWithContext(context.Context) GetOspfAreaOutput
}

type GetOspfAreaArgs struct {
	// Authentication type.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Comment.
	Comments pulumi.StringInput `pulumi:"comments"`
	// Summary default cost of stub or NSSA area.
	DefaultCost pulumi.IntInput `pulumi:"defaultCost"`
	// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
	FilterLists GetOspfAreaFilterListArrayInput `pulumi:"filterLists"`
	// Distribute list entry ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Redistribute, advertise, or do not originate Type-7 default route into NSSA area.
	NssaDefaultInformationOriginate pulumi.StringInput `pulumi:"nssaDefaultInformationOriginate"`
	// OSPF default metric.
	NssaDefaultInformationOriginateMetric pulumi.IntInput `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPF metric type for default routes.
	NssaDefaultInformationOriginateMetricType pulumi.StringInput `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area.
	NssaRedistribution pulumi.StringInput `pulumi:"nssaRedistribution"`
	// NSSA translator role type.
	NssaTranslatorRole pulumi.StringInput `pulumi:"nssaTranslatorRole"`
	// OSPF area range configuration. The structure of `range` block is documented below.
	Ranges GetOspfAreaRangeArrayInput `pulumi:"ranges"`
	// Enable/disable shortcut option.
	Shortcut pulumi.StringInput `pulumi:"shortcut"`
	// Stub summary setting.
	StubType pulumi.StringInput `pulumi:"stubType"`
	// Area type setting.
	Type pulumi.StringInput `pulumi:"type"`
	// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks GetOspfAreaVirtualLinkArrayInput `pulumi:"virtualLinks"`
}

func (GetOspfAreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfArea)(nil)).Elem()
}

func (i GetOspfAreaArgs) ToGetOspfAreaOutput() GetOspfAreaOutput {
	return i.ToGetOspfAreaOutputWithContext(context.Background())
}

func (i GetOspfAreaArgs) ToGetOspfAreaOutputWithContext(ctx context.Context) GetOspfAreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfAreaOutput)
}

// GetOspfAreaArrayInput is an input type that accepts GetOspfAreaArray and GetOspfAreaArrayOutput values.
// You can construct a concrete instance of `GetOspfAreaArrayInput` via:
//
//	GetOspfAreaArray{ GetOspfAreaArgs{...} }
type GetOspfAreaArrayInput interface {
	pulumi.Input

	ToGetOspfAreaArrayOutput() GetOspfAreaArrayOutput
	ToGetOspfAreaArrayOutputWithContext(context.Context) GetOspfAreaArrayOutput
}

type GetOspfAreaArray []GetOspfAreaInput

func (GetOspfAreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfArea)(nil)).Elem()
}

func (i GetOspfAreaArray) ToGetOspfAreaArrayOutput() GetOspfAreaArrayOutput {
	return i.ToGetOspfAreaArrayOutputWithContext(context.Background())
}

func (i GetOspfAreaArray) ToGetOspfAreaArrayOutputWithContext(ctx context.Context) GetOspfAreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfAreaArrayOutput)
}

type GetOspfAreaOutput struct{ *pulumi.OutputState }

func (GetOspfAreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfArea)(nil)).Elem()
}

func (o GetOspfAreaOutput) ToGetOspfAreaOutput() GetOspfAreaOutput {
	return o
}

func (o GetOspfAreaOutput) ToGetOspfAreaOutputWithContext(ctx context.Context) GetOspfAreaOutput {
	return o
}

// Authentication type.
func (o GetOspfAreaOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfArea) string { return v.Authentication }).(pulumi.StringOutput)
}

// Comment.
func (o GetOspfAreaOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfArea) string { return v.Comments }).(pulumi.StringOutput)
}

// Summary default cost of stub or NSSA area.
func (o GetOspfAreaOutput) DefaultCost() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfArea) int { return v.DefaultCost }).(pulumi.IntOutput)
}

// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
func (o GetOspfAreaOutput) FilterLists() GetOspfAreaFilterListArrayOutput {
	return o.ApplyT(func(v GetOspfArea) []GetOspfAreaFilterList { return v.FilterLists }).(GetOspfAreaFilterListArrayOutput)
}

// Distribute list entry ID.
func (o GetOspfAreaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfArea) string { return v.Id }).(pulumi.StringOutput)
}

// Redistribute, advertise, or do not originate Type-7 default route into NSSA area.
func (o GetOspfAreaOutput) NssaDefaultInformationOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfArea) string { return v.NssaDefaultInformationOriginate }).(pulumi.StringOutput)
}

// OSPF default metric.
func (o GetOspfAreaOutput) NssaDefaultInformationOriginateMetric() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfArea) int { return v.NssaDefaultInformationOriginateMetric }).(pulumi.IntOutput)
}

// OSPF metric type for default routes.
func (o GetOspfAreaOutput) NssaDefaultInformationOriginateMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfArea) string { return v.NssaDefaultInformationOriginateMetricType }).(pulumi.StringOutput)
}

// Enable/disable redistribute into NSSA area.
func (o GetOspfAreaOutput) NssaRedistribution() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfArea) string { return v.NssaRedistribution }).(pulumi.StringOutput)
}

// NSSA translator role type.
func (o GetOspfAreaOutput) NssaTranslatorRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfArea) string { return v.NssaTranslatorRole }).(pulumi.StringOutput)
}

// OSPF area range configuration. The structure of `range` block is documented below.
func (o GetOspfAreaOutput) Ranges() GetOspfAreaRangeArrayOutput {
	return o.ApplyT(func(v GetOspfArea) []GetOspfAreaRange { return v.Ranges }).(GetOspfAreaRangeArrayOutput)
}

// Enable/disable shortcut option.
func (o GetOspfAreaOutput) Shortcut() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfArea) string { return v.Shortcut }).(pulumi.StringOutput)
}

// Stub summary setting.
func (o GetOspfAreaOutput) StubType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfArea) string { return v.StubType }).(pulumi.StringOutput)
}

// Area type setting.
func (o GetOspfAreaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfArea) string { return v.Type }).(pulumi.StringOutput)
}

// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
func (o GetOspfAreaOutput) VirtualLinks() GetOspfAreaVirtualLinkArrayOutput {
	return o.ApplyT(func(v GetOspfArea) []GetOspfAreaVirtualLink { return v.VirtualLinks }).(GetOspfAreaVirtualLinkArrayOutput)
}

type GetOspfAreaArrayOutput struct{ *pulumi.OutputState }

func (GetOspfAreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfArea)(nil)).Elem()
}

func (o GetOspfAreaArrayOutput) ToGetOspfAreaArrayOutput() GetOspfAreaArrayOutput {
	return o
}

func (o GetOspfAreaArrayOutput) ToGetOspfAreaArrayOutputWithContext(ctx context.Context) GetOspfAreaArrayOutput {
	return o
}

func (o GetOspfAreaArrayOutput) Index(i pulumi.IntInput) GetOspfAreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfArea {
		return vs[0].([]GetOspfArea)[vs[1].(int)]
	}).(GetOspfAreaOutput)
}

type GetOspfAreaFilterList struct {
	// Direction.
	Direction string `pulumi:"direction"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Access-list or prefix-list name.
	List string `pulumi:"list"`
}

// GetOspfAreaFilterListInput is an input type that accepts GetOspfAreaFilterListArgs and GetOspfAreaFilterListOutput values.
// You can construct a concrete instance of `GetOspfAreaFilterListInput` via:
//
//	GetOspfAreaFilterListArgs{...}
type GetOspfAreaFilterListInput interface {
	pulumi.Input

	ToGetOspfAreaFilterListOutput() GetOspfAreaFilterListOutput
	ToGetOspfAreaFilterListOutputWithContext(context.Context) GetOspfAreaFilterListOutput
}

type GetOspfAreaFilterListArgs struct {
	// Direction.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Access-list or prefix-list name.
	List pulumi.StringInput `pulumi:"list"`
}

func (GetOspfAreaFilterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfAreaFilterList)(nil)).Elem()
}

func (i GetOspfAreaFilterListArgs) ToGetOspfAreaFilterListOutput() GetOspfAreaFilterListOutput {
	return i.ToGetOspfAreaFilterListOutputWithContext(context.Background())
}

func (i GetOspfAreaFilterListArgs) ToGetOspfAreaFilterListOutputWithContext(ctx context.Context) GetOspfAreaFilterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfAreaFilterListOutput)
}

// GetOspfAreaFilterListArrayInput is an input type that accepts GetOspfAreaFilterListArray and GetOspfAreaFilterListArrayOutput values.
// You can construct a concrete instance of `GetOspfAreaFilterListArrayInput` via:
//
//	GetOspfAreaFilterListArray{ GetOspfAreaFilterListArgs{...} }
type GetOspfAreaFilterListArrayInput interface {
	pulumi.Input

	ToGetOspfAreaFilterListArrayOutput() GetOspfAreaFilterListArrayOutput
	ToGetOspfAreaFilterListArrayOutputWithContext(context.Context) GetOspfAreaFilterListArrayOutput
}

type GetOspfAreaFilterListArray []GetOspfAreaFilterListInput

func (GetOspfAreaFilterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfAreaFilterList)(nil)).Elem()
}

func (i GetOspfAreaFilterListArray) ToGetOspfAreaFilterListArrayOutput() GetOspfAreaFilterListArrayOutput {
	return i.ToGetOspfAreaFilterListArrayOutputWithContext(context.Background())
}

func (i GetOspfAreaFilterListArray) ToGetOspfAreaFilterListArrayOutputWithContext(ctx context.Context) GetOspfAreaFilterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfAreaFilterListArrayOutput)
}

type GetOspfAreaFilterListOutput struct{ *pulumi.OutputState }

func (GetOspfAreaFilterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfAreaFilterList)(nil)).Elem()
}

func (o GetOspfAreaFilterListOutput) ToGetOspfAreaFilterListOutput() GetOspfAreaFilterListOutput {
	return o
}

func (o GetOspfAreaFilterListOutput) ToGetOspfAreaFilterListOutputWithContext(ctx context.Context) GetOspfAreaFilterListOutput {
	return o
}

// Direction.
func (o GetOspfAreaFilterListOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaFilterList) string { return v.Direction }).(pulumi.StringOutput)
}

// Distribute list entry ID.
func (o GetOspfAreaFilterListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfAreaFilterList) int { return v.Id }).(pulumi.IntOutput)
}

// Access-list or prefix-list name.
func (o GetOspfAreaFilterListOutput) List() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaFilterList) string { return v.List }).(pulumi.StringOutput)
}

type GetOspfAreaFilterListArrayOutput struct{ *pulumi.OutputState }

func (GetOspfAreaFilterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfAreaFilterList)(nil)).Elem()
}

func (o GetOspfAreaFilterListArrayOutput) ToGetOspfAreaFilterListArrayOutput() GetOspfAreaFilterListArrayOutput {
	return o
}

func (o GetOspfAreaFilterListArrayOutput) ToGetOspfAreaFilterListArrayOutputWithContext(ctx context.Context) GetOspfAreaFilterListArrayOutput {
	return o
}

func (o GetOspfAreaFilterListArrayOutput) Index(i pulumi.IntInput) GetOspfAreaFilterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfAreaFilterList {
		return vs[0].([]GetOspfAreaFilterList)[vs[1].(int)]
	}).(GetOspfAreaFilterListOutput)
}

type GetOspfAreaRange struct {
	// Enable/disable advertise status.
	Advertise string `pulumi:"advertise"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Prefix.
	Prefix string `pulumi:"prefix"`
	// Substitute prefix.
	Substitute string `pulumi:"substitute"`
	// Enable/disable substitute status.
	SubstituteStatus string `pulumi:"substituteStatus"`
}

// GetOspfAreaRangeInput is an input type that accepts GetOspfAreaRangeArgs and GetOspfAreaRangeOutput values.
// You can construct a concrete instance of `GetOspfAreaRangeInput` via:
//
//	GetOspfAreaRangeArgs{...}
type GetOspfAreaRangeInput interface {
	pulumi.Input

	ToGetOspfAreaRangeOutput() GetOspfAreaRangeOutput
	ToGetOspfAreaRangeOutputWithContext(context.Context) GetOspfAreaRangeOutput
}

type GetOspfAreaRangeArgs struct {
	// Enable/disable advertise status.
	Advertise pulumi.StringInput `pulumi:"advertise"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Substitute prefix.
	Substitute pulumi.StringInput `pulumi:"substitute"`
	// Enable/disable substitute status.
	SubstituteStatus pulumi.StringInput `pulumi:"substituteStatus"`
}

func (GetOspfAreaRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfAreaRange)(nil)).Elem()
}

func (i GetOspfAreaRangeArgs) ToGetOspfAreaRangeOutput() GetOspfAreaRangeOutput {
	return i.ToGetOspfAreaRangeOutputWithContext(context.Background())
}

func (i GetOspfAreaRangeArgs) ToGetOspfAreaRangeOutputWithContext(ctx context.Context) GetOspfAreaRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfAreaRangeOutput)
}

// GetOspfAreaRangeArrayInput is an input type that accepts GetOspfAreaRangeArray and GetOspfAreaRangeArrayOutput values.
// You can construct a concrete instance of `GetOspfAreaRangeArrayInput` via:
//
//	GetOspfAreaRangeArray{ GetOspfAreaRangeArgs{...} }
type GetOspfAreaRangeArrayInput interface {
	pulumi.Input

	ToGetOspfAreaRangeArrayOutput() GetOspfAreaRangeArrayOutput
	ToGetOspfAreaRangeArrayOutputWithContext(context.Context) GetOspfAreaRangeArrayOutput
}

type GetOspfAreaRangeArray []GetOspfAreaRangeInput

func (GetOspfAreaRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfAreaRange)(nil)).Elem()
}

func (i GetOspfAreaRangeArray) ToGetOspfAreaRangeArrayOutput() GetOspfAreaRangeArrayOutput {
	return i.ToGetOspfAreaRangeArrayOutputWithContext(context.Background())
}

func (i GetOspfAreaRangeArray) ToGetOspfAreaRangeArrayOutputWithContext(ctx context.Context) GetOspfAreaRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfAreaRangeArrayOutput)
}

type GetOspfAreaRangeOutput struct{ *pulumi.OutputState }

func (GetOspfAreaRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfAreaRange)(nil)).Elem()
}

func (o GetOspfAreaRangeOutput) ToGetOspfAreaRangeOutput() GetOspfAreaRangeOutput {
	return o
}

func (o GetOspfAreaRangeOutput) ToGetOspfAreaRangeOutputWithContext(ctx context.Context) GetOspfAreaRangeOutput {
	return o
}

// Enable/disable advertise status.
func (o GetOspfAreaRangeOutput) Advertise() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaRange) string { return v.Advertise }).(pulumi.StringOutput)
}

// Distribute list entry ID.
func (o GetOspfAreaRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfAreaRange) int { return v.Id }).(pulumi.IntOutput)
}

// Prefix.
func (o GetOspfAreaRangeOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaRange) string { return v.Prefix }).(pulumi.StringOutput)
}

// Substitute prefix.
func (o GetOspfAreaRangeOutput) Substitute() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaRange) string { return v.Substitute }).(pulumi.StringOutput)
}

// Enable/disable substitute status.
func (o GetOspfAreaRangeOutput) SubstituteStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaRange) string { return v.SubstituteStatus }).(pulumi.StringOutput)
}

type GetOspfAreaRangeArrayOutput struct{ *pulumi.OutputState }

func (GetOspfAreaRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfAreaRange)(nil)).Elem()
}

func (o GetOspfAreaRangeArrayOutput) ToGetOspfAreaRangeArrayOutput() GetOspfAreaRangeArrayOutput {
	return o
}

func (o GetOspfAreaRangeArrayOutput) ToGetOspfAreaRangeArrayOutputWithContext(ctx context.Context) GetOspfAreaRangeArrayOutput {
	return o
}

func (o GetOspfAreaRangeArrayOutput) Index(i pulumi.IntInput) GetOspfAreaRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfAreaRange {
		return vs[0].([]GetOspfAreaRange)[vs[1].(int)]
	}).(GetOspfAreaRangeOutput)
}

type GetOspfAreaVirtualLink struct {
	// Authentication type.
	Authentication string `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey string `pulumi:"authenticationKey"`
	// Dead interval.
	DeadInterval int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval int `pulumi:"helloInterval"`
	// Message-digest key-chain name.
	Keychain string `pulumi:"keychain"`
	// MD5 key.
	Md5Key string `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain string `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys []GetOspfAreaVirtualLinkMd5Key `pulumi:"md5Keys"`
	// Redistribute name.
	Name string `pulumi:"name"`
	// Peer IP.
	Peer string `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval int `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay int `pulumi:"transmitDelay"`
}

// GetOspfAreaVirtualLinkInput is an input type that accepts GetOspfAreaVirtualLinkArgs and GetOspfAreaVirtualLinkOutput values.
// You can construct a concrete instance of `GetOspfAreaVirtualLinkInput` via:
//
//	GetOspfAreaVirtualLinkArgs{...}
type GetOspfAreaVirtualLinkInput interface {
	pulumi.Input

	ToGetOspfAreaVirtualLinkOutput() GetOspfAreaVirtualLinkOutput
	ToGetOspfAreaVirtualLinkOutputWithContext(context.Context) GetOspfAreaVirtualLinkOutput
}

type GetOspfAreaVirtualLinkArgs struct {
	// Authentication type.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey pulumi.StringInput `pulumi:"authenticationKey"`
	// Dead interval.
	DeadInterval pulumi.IntInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// Message-digest key-chain name.
	Keychain pulumi.StringInput `pulumi:"keychain"`
	// MD5 key.
	Md5Key pulumi.StringInput `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain pulumi.StringInput `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys GetOspfAreaVirtualLinkMd5KeyArrayInput `pulumi:"md5Keys"`
	// Redistribute name.
	Name pulumi.StringInput `pulumi:"name"`
	// Peer IP.
	Peer pulumi.StringInput `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntInput `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay pulumi.IntInput `pulumi:"transmitDelay"`
}

func (GetOspfAreaVirtualLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfAreaVirtualLink)(nil)).Elem()
}

func (i GetOspfAreaVirtualLinkArgs) ToGetOspfAreaVirtualLinkOutput() GetOspfAreaVirtualLinkOutput {
	return i.ToGetOspfAreaVirtualLinkOutputWithContext(context.Background())
}

func (i GetOspfAreaVirtualLinkArgs) ToGetOspfAreaVirtualLinkOutputWithContext(ctx context.Context) GetOspfAreaVirtualLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfAreaVirtualLinkOutput)
}

// GetOspfAreaVirtualLinkArrayInput is an input type that accepts GetOspfAreaVirtualLinkArray and GetOspfAreaVirtualLinkArrayOutput values.
// You can construct a concrete instance of `GetOspfAreaVirtualLinkArrayInput` via:
//
//	GetOspfAreaVirtualLinkArray{ GetOspfAreaVirtualLinkArgs{...} }
type GetOspfAreaVirtualLinkArrayInput interface {
	pulumi.Input

	ToGetOspfAreaVirtualLinkArrayOutput() GetOspfAreaVirtualLinkArrayOutput
	ToGetOspfAreaVirtualLinkArrayOutputWithContext(context.Context) GetOspfAreaVirtualLinkArrayOutput
}

type GetOspfAreaVirtualLinkArray []GetOspfAreaVirtualLinkInput

func (GetOspfAreaVirtualLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfAreaVirtualLink)(nil)).Elem()
}

func (i GetOspfAreaVirtualLinkArray) ToGetOspfAreaVirtualLinkArrayOutput() GetOspfAreaVirtualLinkArrayOutput {
	return i.ToGetOspfAreaVirtualLinkArrayOutputWithContext(context.Background())
}

func (i GetOspfAreaVirtualLinkArray) ToGetOspfAreaVirtualLinkArrayOutputWithContext(ctx context.Context) GetOspfAreaVirtualLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfAreaVirtualLinkArrayOutput)
}

type GetOspfAreaVirtualLinkOutput struct{ *pulumi.OutputState }

func (GetOspfAreaVirtualLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfAreaVirtualLink)(nil)).Elem()
}

func (o GetOspfAreaVirtualLinkOutput) ToGetOspfAreaVirtualLinkOutput() GetOspfAreaVirtualLinkOutput {
	return o
}

func (o GetOspfAreaVirtualLinkOutput) ToGetOspfAreaVirtualLinkOutputWithContext(ctx context.Context) GetOspfAreaVirtualLinkOutput {
	return o
}

// Authentication type.
func (o GetOspfAreaVirtualLinkOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) string { return v.Authentication }).(pulumi.StringOutput)
}

// Authentication key.
func (o GetOspfAreaVirtualLinkOutput) AuthenticationKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) string { return v.AuthenticationKey }).(pulumi.StringOutput)
}

// Dead interval.
func (o GetOspfAreaVirtualLinkOutput) DeadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) int { return v.DeadInterval }).(pulumi.IntOutput)
}

// Hello interval.
func (o GetOspfAreaVirtualLinkOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// Message-digest key-chain name.
func (o GetOspfAreaVirtualLinkOutput) Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) string { return v.Keychain }).(pulumi.StringOutput)
}

// MD5 key.
func (o GetOspfAreaVirtualLinkOutput) Md5Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) string { return v.Md5Key }).(pulumi.StringOutput)
}

// Authentication MD5 key-chain name.
func (o GetOspfAreaVirtualLinkOutput) Md5Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) string { return v.Md5Keychain }).(pulumi.StringOutput)
}

// MD5 key. The structure of `md5Keys` block is documented below.
func (o GetOspfAreaVirtualLinkOutput) Md5Keys() GetOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) []GetOspfAreaVirtualLinkMd5Key { return v.Md5Keys }).(GetOspfAreaVirtualLinkMd5KeyArrayOutput)
}

// Redistribute name.
func (o GetOspfAreaVirtualLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) string { return v.Name }).(pulumi.StringOutput)
}

// Peer IP.
func (o GetOspfAreaVirtualLinkOutput) Peer() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) string { return v.Peer }).(pulumi.StringOutput)
}

// Retransmit interval.
func (o GetOspfAreaVirtualLinkOutput) RetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) int { return v.RetransmitInterval }).(pulumi.IntOutput)
}

// Transmit delay.
func (o GetOspfAreaVirtualLinkOutput) TransmitDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLink) int { return v.TransmitDelay }).(pulumi.IntOutput)
}

type GetOspfAreaVirtualLinkArrayOutput struct{ *pulumi.OutputState }

func (GetOspfAreaVirtualLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfAreaVirtualLink)(nil)).Elem()
}

func (o GetOspfAreaVirtualLinkArrayOutput) ToGetOspfAreaVirtualLinkArrayOutput() GetOspfAreaVirtualLinkArrayOutput {
	return o
}

func (o GetOspfAreaVirtualLinkArrayOutput) ToGetOspfAreaVirtualLinkArrayOutputWithContext(ctx context.Context) GetOspfAreaVirtualLinkArrayOutput {
	return o
}

func (o GetOspfAreaVirtualLinkArrayOutput) Index(i pulumi.IntInput) GetOspfAreaVirtualLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfAreaVirtualLink {
		return vs[0].([]GetOspfAreaVirtualLink)[vs[1].(int)]
	}).(GetOspfAreaVirtualLinkOutput)
}

type GetOspfAreaVirtualLinkMd5Key struct {
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Password for the key.
	KeyString string `pulumi:"keyString"`
}

// GetOspfAreaVirtualLinkMd5KeyInput is an input type that accepts GetOspfAreaVirtualLinkMd5KeyArgs and GetOspfAreaVirtualLinkMd5KeyOutput values.
// You can construct a concrete instance of `GetOspfAreaVirtualLinkMd5KeyInput` via:
//
//	GetOspfAreaVirtualLinkMd5KeyArgs{...}
type GetOspfAreaVirtualLinkMd5KeyInput interface {
	pulumi.Input

	ToGetOspfAreaVirtualLinkMd5KeyOutput() GetOspfAreaVirtualLinkMd5KeyOutput
	ToGetOspfAreaVirtualLinkMd5KeyOutputWithContext(context.Context) GetOspfAreaVirtualLinkMd5KeyOutput
}

type GetOspfAreaVirtualLinkMd5KeyArgs struct {
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Password for the key.
	KeyString pulumi.StringInput `pulumi:"keyString"`
}

func (GetOspfAreaVirtualLinkMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (i GetOspfAreaVirtualLinkMd5KeyArgs) ToGetOspfAreaVirtualLinkMd5KeyOutput() GetOspfAreaVirtualLinkMd5KeyOutput {
	return i.ToGetOspfAreaVirtualLinkMd5KeyOutputWithContext(context.Background())
}

func (i GetOspfAreaVirtualLinkMd5KeyArgs) ToGetOspfAreaVirtualLinkMd5KeyOutputWithContext(ctx context.Context) GetOspfAreaVirtualLinkMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfAreaVirtualLinkMd5KeyOutput)
}

// GetOspfAreaVirtualLinkMd5KeyArrayInput is an input type that accepts GetOspfAreaVirtualLinkMd5KeyArray and GetOspfAreaVirtualLinkMd5KeyArrayOutput values.
// You can construct a concrete instance of `GetOspfAreaVirtualLinkMd5KeyArrayInput` via:
//
//	GetOspfAreaVirtualLinkMd5KeyArray{ GetOspfAreaVirtualLinkMd5KeyArgs{...} }
type GetOspfAreaVirtualLinkMd5KeyArrayInput interface {
	pulumi.Input

	ToGetOspfAreaVirtualLinkMd5KeyArrayOutput() GetOspfAreaVirtualLinkMd5KeyArrayOutput
	ToGetOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(context.Context) GetOspfAreaVirtualLinkMd5KeyArrayOutput
}

type GetOspfAreaVirtualLinkMd5KeyArray []GetOspfAreaVirtualLinkMd5KeyInput

func (GetOspfAreaVirtualLinkMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (i GetOspfAreaVirtualLinkMd5KeyArray) ToGetOspfAreaVirtualLinkMd5KeyArrayOutput() GetOspfAreaVirtualLinkMd5KeyArrayOutput {
	return i.ToGetOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(context.Background())
}

func (i GetOspfAreaVirtualLinkMd5KeyArray) ToGetOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(ctx context.Context) GetOspfAreaVirtualLinkMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfAreaVirtualLinkMd5KeyArrayOutput)
}

type GetOspfAreaVirtualLinkMd5KeyOutput struct{ *pulumi.OutputState }

func (GetOspfAreaVirtualLinkMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (o GetOspfAreaVirtualLinkMd5KeyOutput) ToGetOspfAreaVirtualLinkMd5KeyOutput() GetOspfAreaVirtualLinkMd5KeyOutput {
	return o
}

func (o GetOspfAreaVirtualLinkMd5KeyOutput) ToGetOspfAreaVirtualLinkMd5KeyOutputWithContext(ctx context.Context) GetOspfAreaVirtualLinkMd5KeyOutput {
	return o
}

// Distribute list entry ID.
func (o GetOspfAreaVirtualLinkMd5KeyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLinkMd5Key) int { return v.Id }).(pulumi.IntOutput)
}

// Password for the key.
func (o GetOspfAreaVirtualLinkMd5KeyOutput) KeyString() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfAreaVirtualLinkMd5Key) string { return v.KeyString }).(pulumi.StringOutput)
}

type GetOspfAreaVirtualLinkMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (GetOspfAreaVirtualLinkMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (o GetOspfAreaVirtualLinkMd5KeyArrayOutput) ToGetOspfAreaVirtualLinkMd5KeyArrayOutput() GetOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o
}

func (o GetOspfAreaVirtualLinkMd5KeyArrayOutput) ToGetOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(ctx context.Context) GetOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o
}

func (o GetOspfAreaVirtualLinkMd5KeyArrayOutput) Index(i pulumi.IntInput) GetOspfAreaVirtualLinkMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfAreaVirtualLinkMd5Key {
		return vs[0].([]GetOspfAreaVirtualLinkMd5Key)[vs[1].(int)]
	}).(GetOspfAreaVirtualLinkMd5KeyOutput)
}

type GetOspfDistributeList struct {
	// Access list name.
	AccessList string `pulumi:"accessList"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Protocol type.
	Protocol string `pulumi:"protocol"`
}

// GetOspfDistributeListInput is an input type that accepts GetOspfDistributeListArgs and GetOspfDistributeListOutput values.
// You can construct a concrete instance of `GetOspfDistributeListInput` via:
//
//	GetOspfDistributeListArgs{...}
type GetOspfDistributeListInput interface {
	pulumi.Input

	ToGetOspfDistributeListOutput() GetOspfDistributeListOutput
	ToGetOspfDistributeListOutputWithContext(context.Context) GetOspfDistributeListOutput
}

type GetOspfDistributeListArgs struct {
	// Access list name.
	AccessList pulumi.StringInput `pulumi:"accessList"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Protocol type.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetOspfDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfDistributeList)(nil)).Elem()
}

func (i GetOspfDistributeListArgs) ToGetOspfDistributeListOutput() GetOspfDistributeListOutput {
	return i.ToGetOspfDistributeListOutputWithContext(context.Background())
}

func (i GetOspfDistributeListArgs) ToGetOspfDistributeListOutputWithContext(ctx context.Context) GetOspfDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfDistributeListOutput)
}

// GetOspfDistributeListArrayInput is an input type that accepts GetOspfDistributeListArray and GetOspfDistributeListArrayOutput values.
// You can construct a concrete instance of `GetOspfDistributeListArrayInput` via:
//
//	GetOspfDistributeListArray{ GetOspfDistributeListArgs{...} }
type GetOspfDistributeListArrayInput interface {
	pulumi.Input

	ToGetOspfDistributeListArrayOutput() GetOspfDistributeListArrayOutput
	ToGetOspfDistributeListArrayOutputWithContext(context.Context) GetOspfDistributeListArrayOutput
}

type GetOspfDistributeListArray []GetOspfDistributeListInput

func (GetOspfDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfDistributeList)(nil)).Elem()
}

func (i GetOspfDistributeListArray) ToGetOspfDistributeListArrayOutput() GetOspfDistributeListArrayOutput {
	return i.ToGetOspfDistributeListArrayOutputWithContext(context.Background())
}

func (i GetOspfDistributeListArray) ToGetOspfDistributeListArrayOutputWithContext(ctx context.Context) GetOspfDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfDistributeListArrayOutput)
}

type GetOspfDistributeListOutput struct{ *pulumi.OutputState }

func (GetOspfDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfDistributeList)(nil)).Elem()
}

func (o GetOspfDistributeListOutput) ToGetOspfDistributeListOutput() GetOspfDistributeListOutput {
	return o
}

func (o GetOspfDistributeListOutput) ToGetOspfDistributeListOutputWithContext(ctx context.Context) GetOspfDistributeListOutput {
	return o
}

// Access list name.
func (o GetOspfDistributeListOutput) AccessList() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfDistributeList) string { return v.AccessList }).(pulumi.StringOutput)
}

// Distribute list entry ID.
func (o GetOspfDistributeListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfDistributeList) int { return v.Id }).(pulumi.IntOutput)
}

// Protocol type.
func (o GetOspfDistributeListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfDistributeList) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetOspfDistributeListArrayOutput struct{ *pulumi.OutputState }

func (GetOspfDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfDistributeList)(nil)).Elem()
}

func (o GetOspfDistributeListArrayOutput) ToGetOspfDistributeListArrayOutput() GetOspfDistributeListArrayOutput {
	return o
}

func (o GetOspfDistributeListArrayOutput) ToGetOspfDistributeListArrayOutputWithContext(ctx context.Context) GetOspfDistributeListArrayOutput {
	return o
}

func (o GetOspfDistributeListArrayOutput) Index(i pulumi.IntInput) GetOspfDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfDistributeList {
		return vs[0].([]GetOspfDistributeList)[vs[1].(int)]
	}).(GetOspfDistributeListOutput)
}

type GetOspfNeighbor struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost int `pulumi:"cost"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Interface IP address of the neighbor.
	Ip string `pulumi:"ip"`
	// Poll interval time in seconds.
	PollInterval int `pulumi:"pollInterval"`
	// Priority.
	Priority int `pulumi:"priority"`
}

// GetOspfNeighborInput is an input type that accepts GetOspfNeighborArgs and GetOspfNeighborOutput values.
// You can construct a concrete instance of `GetOspfNeighborInput` via:
//
//	GetOspfNeighborArgs{...}
type GetOspfNeighborInput interface {
	pulumi.Input

	ToGetOspfNeighborOutput() GetOspfNeighborOutput
	ToGetOspfNeighborOutputWithContext(context.Context) GetOspfNeighborOutput
}

type GetOspfNeighborArgs struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntInput `pulumi:"cost"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface IP address of the neighbor.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Poll interval time in seconds.
	PollInterval pulumi.IntInput `pulumi:"pollInterval"`
	// Priority.
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (GetOspfNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfNeighbor)(nil)).Elem()
}

func (i GetOspfNeighborArgs) ToGetOspfNeighborOutput() GetOspfNeighborOutput {
	return i.ToGetOspfNeighborOutputWithContext(context.Background())
}

func (i GetOspfNeighborArgs) ToGetOspfNeighborOutputWithContext(ctx context.Context) GetOspfNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfNeighborOutput)
}

// GetOspfNeighborArrayInput is an input type that accepts GetOspfNeighborArray and GetOspfNeighborArrayOutput values.
// You can construct a concrete instance of `GetOspfNeighborArrayInput` via:
//
//	GetOspfNeighborArray{ GetOspfNeighborArgs{...} }
type GetOspfNeighborArrayInput interface {
	pulumi.Input

	ToGetOspfNeighborArrayOutput() GetOspfNeighborArrayOutput
	ToGetOspfNeighborArrayOutputWithContext(context.Context) GetOspfNeighborArrayOutput
}

type GetOspfNeighborArray []GetOspfNeighborInput

func (GetOspfNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfNeighbor)(nil)).Elem()
}

func (i GetOspfNeighborArray) ToGetOspfNeighborArrayOutput() GetOspfNeighborArrayOutput {
	return i.ToGetOspfNeighborArrayOutputWithContext(context.Background())
}

func (i GetOspfNeighborArray) ToGetOspfNeighborArrayOutputWithContext(ctx context.Context) GetOspfNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfNeighborArrayOutput)
}

type GetOspfNeighborOutput struct{ *pulumi.OutputState }

func (GetOspfNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfNeighbor)(nil)).Elem()
}

func (o GetOspfNeighborOutput) ToGetOspfNeighborOutput() GetOspfNeighborOutput {
	return o
}

func (o GetOspfNeighborOutput) ToGetOspfNeighborOutputWithContext(ctx context.Context) GetOspfNeighborOutput {
	return o
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o GetOspfNeighborOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfNeighbor) int { return v.Cost }).(pulumi.IntOutput)
}

// Distribute list entry ID.
func (o GetOspfNeighborOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfNeighbor) int { return v.Id }).(pulumi.IntOutput)
}

// Interface IP address of the neighbor.
func (o GetOspfNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfNeighbor) string { return v.Ip }).(pulumi.StringOutput)
}

// Poll interval time in seconds.
func (o GetOspfNeighborOutput) PollInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfNeighbor) int { return v.PollInterval }).(pulumi.IntOutput)
}

// Priority.
func (o GetOspfNeighborOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfNeighbor) int { return v.Priority }).(pulumi.IntOutput)
}

type GetOspfNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetOspfNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfNeighbor)(nil)).Elem()
}

func (o GetOspfNeighborArrayOutput) ToGetOspfNeighborArrayOutput() GetOspfNeighborArrayOutput {
	return o
}

func (o GetOspfNeighborArrayOutput) ToGetOspfNeighborArrayOutputWithContext(ctx context.Context) GetOspfNeighborArrayOutput {
	return o
}

func (o GetOspfNeighborArrayOutput) Index(i pulumi.IntInput) GetOspfNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfNeighbor {
		return vs[0].([]GetOspfNeighbor)[vs[1].(int)]
	}).(GetOspfNeighborOutput)
}

type GetOspfNetwork struct {
	// Attach the network to area.
	Area string `pulumi:"area"`
	// Comment.
	Comments string `pulumi:"comments"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Prefix.
	Prefix string `pulumi:"prefix"`
}

// GetOspfNetworkInput is an input type that accepts GetOspfNetworkArgs and GetOspfNetworkOutput values.
// You can construct a concrete instance of `GetOspfNetworkInput` via:
//
//	GetOspfNetworkArgs{...}
type GetOspfNetworkInput interface {
	pulumi.Input

	ToGetOspfNetworkOutput() GetOspfNetworkOutput
	ToGetOspfNetworkOutputWithContext(context.Context) GetOspfNetworkOutput
}

type GetOspfNetworkArgs struct {
	// Attach the network to area.
	Area pulumi.StringInput `pulumi:"area"`
	// Comment.
	Comments pulumi.StringInput `pulumi:"comments"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetOspfNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfNetwork)(nil)).Elem()
}

func (i GetOspfNetworkArgs) ToGetOspfNetworkOutput() GetOspfNetworkOutput {
	return i.ToGetOspfNetworkOutputWithContext(context.Background())
}

func (i GetOspfNetworkArgs) ToGetOspfNetworkOutputWithContext(ctx context.Context) GetOspfNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfNetworkOutput)
}

// GetOspfNetworkArrayInput is an input type that accepts GetOspfNetworkArray and GetOspfNetworkArrayOutput values.
// You can construct a concrete instance of `GetOspfNetworkArrayInput` via:
//
//	GetOspfNetworkArray{ GetOspfNetworkArgs{...} }
type GetOspfNetworkArrayInput interface {
	pulumi.Input

	ToGetOspfNetworkArrayOutput() GetOspfNetworkArrayOutput
	ToGetOspfNetworkArrayOutputWithContext(context.Context) GetOspfNetworkArrayOutput
}

type GetOspfNetworkArray []GetOspfNetworkInput

func (GetOspfNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfNetwork)(nil)).Elem()
}

func (i GetOspfNetworkArray) ToGetOspfNetworkArrayOutput() GetOspfNetworkArrayOutput {
	return i.ToGetOspfNetworkArrayOutputWithContext(context.Background())
}

func (i GetOspfNetworkArray) ToGetOspfNetworkArrayOutputWithContext(ctx context.Context) GetOspfNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfNetworkArrayOutput)
}

type GetOspfNetworkOutput struct{ *pulumi.OutputState }

func (GetOspfNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfNetwork)(nil)).Elem()
}

func (o GetOspfNetworkOutput) ToGetOspfNetworkOutput() GetOspfNetworkOutput {
	return o
}

func (o GetOspfNetworkOutput) ToGetOspfNetworkOutputWithContext(ctx context.Context) GetOspfNetworkOutput {
	return o
}

// Attach the network to area.
func (o GetOspfNetworkOutput) Area() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfNetwork) string { return v.Area }).(pulumi.StringOutput)
}

// Comment.
func (o GetOspfNetworkOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfNetwork) string { return v.Comments }).(pulumi.StringOutput)
}

// Distribute list entry ID.
func (o GetOspfNetworkOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfNetwork) int { return v.Id }).(pulumi.IntOutput)
}

// Prefix.
func (o GetOspfNetworkOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfNetwork) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetOspfNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetOspfNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfNetwork)(nil)).Elem()
}

func (o GetOspfNetworkArrayOutput) ToGetOspfNetworkArrayOutput() GetOspfNetworkArrayOutput {
	return o
}

func (o GetOspfNetworkArrayOutput) ToGetOspfNetworkArrayOutputWithContext(ctx context.Context) GetOspfNetworkArrayOutput {
	return o
}

func (o GetOspfNetworkArrayOutput) Index(i pulumi.IntInput) GetOspfNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfNetwork {
		return vs[0].([]GetOspfNetwork)[vs[1].(int)]
	}).(GetOspfNetworkOutput)
}

type GetOspfOspfInterface struct {
	// Authentication type.
	Authentication string `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey string `pulumi:"authenticationKey"`
	// Bidirectional Forwarding Detection (BFD).
	Bfd string `pulumi:"bfd"`
	// Comment.
	Comments string `pulumi:"comments"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost int `pulumi:"cost"`
	// Enable/disable control of flooding out LSAs.
	DatabaseFilterOut string `pulumi:"databaseFilterOut"`
	// Dead interval.
	DeadInterval int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval int `pulumi:"helloInterval"`
	// Number of hello packets within dead interval.
	HelloMultiplier int `pulumi:"helloMultiplier"`
	// Configuration interface name.
	Interface string `pulumi:"interface"`
	// Interface IP address of the neighbor.
	Ip string `pulumi:"ip"`
	// Message-digest key-chain name.
	Keychain string `pulumi:"keychain"`
	// MD5 key.
	Md5Key string `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain string `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys []GetOspfOspfInterfaceMd5Key `pulumi:"md5Keys"`
	// MTU for database description packets.
	Mtu int `pulumi:"mtu"`
	// Enable/disable ignore MTU.
	MtuIgnore string `pulumi:"mtuIgnore"`
	// Redistribute name.
	Name string `pulumi:"name"`
	// Network type.
	NetworkType string `pulumi:"networkType"`
	// Prefix length.
	PrefixLength int `pulumi:"prefixLength"`
	// Priority.
	Priority int `pulumi:"priority"`
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout int `pulumi:"resyncTimeout"`
	// Retransmit interval.
	RetransmitInterval int `pulumi:"retransmitInterval"`
	// status
	Status string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay int `pulumi:"transmitDelay"`
}

// GetOspfOspfInterfaceInput is an input type that accepts GetOspfOspfInterfaceArgs and GetOspfOspfInterfaceOutput values.
// You can construct a concrete instance of `GetOspfOspfInterfaceInput` via:
//
//	GetOspfOspfInterfaceArgs{...}
type GetOspfOspfInterfaceInput interface {
	pulumi.Input

	ToGetOspfOspfInterfaceOutput() GetOspfOspfInterfaceOutput
	ToGetOspfOspfInterfaceOutputWithContext(context.Context) GetOspfOspfInterfaceOutput
}

type GetOspfOspfInterfaceArgs struct {
	// Authentication type.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey pulumi.StringInput `pulumi:"authenticationKey"`
	// Bidirectional Forwarding Detection (BFD).
	Bfd pulumi.StringInput `pulumi:"bfd"`
	// Comment.
	Comments pulumi.StringInput `pulumi:"comments"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntInput `pulumi:"cost"`
	// Enable/disable control of flooding out LSAs.
	DatabaseFilterOut pulumi.StringInput `pulumi:"databaseFilterOut"`
	// Dead interval.
	DeadInterval pulumi.IntInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntInput `pulumi:"helloInterval"`
	// Number of hello packets within dead interval.
	HelloMultiplier pulumi.IntInput `pulumi:"helloMultiplier"`
	// Configuration interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Interface IP address of the neighbor.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Message-digest key-chain name.
	Keychain pulumi.StringInput `pulumi:"keychain"`
	// MD5 key.
	Md5Key pulumi.StringInput `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain pulumi.StringInput `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys GetOspfOspfInterfaceMd5KeyArrayInput `pulumi:"md5Keys"`
	// MTU for database description packets.
	Mtu pulumi.IntInput `pulumi:"mtu"`
	// Enable/disable ignore MTU.
	MtuIgnore pulumi.StringInput `pulumi:"mtuIgnore"`
	// Redistribute name.
	Name pulumi.StringInput `pulumi:"name"`
	// Network type.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Prefix length.
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// Priority.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout pulumi.IntInput `pulumi:"resyncTimeout"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntInput `pulumi:"retransmitInterval"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
	// Transmit delay.
	TransmitDelay pulumi.IntInput `pulumi:"transmitDelay"`
}

func (GetOspfOspfInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfOspfInterface)(nil)).Elem()
}

func (i GetOspfOspfInterfaceArgs) ToGetOspfOspfInterfaceOutput() GetOspfOspfInterfaceOutput {
	return i.ToGetOspfOspfInterfaceOutputWithContext(context.Background())
}

func (i GetOspfOspfInterfaceArgs) ToGetOspfOspfInterfaceOutputWithContext(ctx context.Context) GetOspfOspfInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfOspfInterfaceOutput)
}

// GetOspfOspfInterfaceArrayInput is an input type that accepts GetOspfOspfInterfaceArray and GetOspfOspfInterfaceArrayOutput values.
// You can construct a concrete instance of `GetOspfOspfInterfaceArrayInput` via:
//
//	GetOspfOspfInterfaceArray{ GetOspfOspfInterfaceArgs{...} }
type GetOspfOspfInterfaceArrayInput interface {
	pulumi.Input

	ToGetOspfOspfInterfaceArrayOutput() GetOspfOspfInterfaceArrayOutput
	ToGetOspfOspfInterfaceArrayOutputWithContext(context.Context) GetOspfOspfInterfaceArrayOutput
}

type GetOspfOspfInterfaceArray []GetOspfOspfInterfaceInput

func (GetOspfOspfInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfOspfInterface)(nil)).Elem()
}

func (i GetOspfOspfInterfaceArray) ToGetOspfOspfInterfaceArrayOutput() GetOspfOspfInterfaceArrayOutput {
	return i.ToGetOspfOspfInterfaceArrayOutputWithContext(context.Background())
}

func (i GetOspfOspfInterfaceArray) ToGetOspfOspfInterfaceArrayOutputWithContext(ctx context.Context) GetOspfOspfInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfOspfInterfaceArrayOutput)
}

type GetOspfOspfInterfaceOutput struct{ *pulumi.OutputState }

func (GetOspfOspfInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfOspfInterface)(nil)).Elem()
}

func (o GetOspfOspfInterfaceOutput) ToGetOspfOspfInterfaceOutput() GetOspfOspfInterfaceOutput {
	return o
}

func (o GetOspfOspfInterfaceOutput) ToGetOspfOspfInterfaceOutputWithContext(ctx context.Context) GetOspfOspfInterfaceOutput {
	return o
}

// Authentication type.
func (o GetOspfOspfInterfaceOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.Authentication }).(pulumi.StringOutput)
}

// Authentication key.
func (o GetOspfOspfInterfaceOutput) AuthenticationKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.AuthenticationKey }).(pulumi.StringOutput)
}

// Bidirectional Forwarding Detection (BFD).
func (o GetOspfOspfInterfaceOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.Bfd }).(pulumi.StringOutput)
}

// Comment.
func (o GetOspfOspfInterfaceOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.Comments }).(pulumi.StringOutput)
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o GetOspfOspfInterfaceOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) int { return v.Cost }).(pulumi.IntOutput)
}

// Enable/disable control of flooding out LSAs.
func (o GetOspfOspfInterfaceOutput) DatabaseFilterOut() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.DatabaseFilterOut }).(pulumi.StringOutput)
}

// Dead interval.
func (o GetOspfOspfInterfaceOutput) DeadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) int { return v.DeadInterval }).(pulumi.IntOutput)
}

// Hello interval.
func (o GetOspfOspfInterfaceOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) int { return v.HelloInterval }).(pulumi.IntOutput)
}

// Number of hello packets within dead interval.
func (o GetOspfOspfInterfaceOutput) HelloMultiplier() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) int { return v.HelloMultiplier }).(pulumi.IntOutput)
}

// Configuration interface name.
func (o GetOspfOspfInterfaceOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.Interface }).(pulumi.StringOutput)
}

// Interface IP address of the neighbor.
func (o GetOspfOspfInterfaceOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.Ip }).(pulumi.StringOutput)
}

// Message-digest key-chain name.
func (o GetOspfOspfInterfaceOutput) Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.Keychain }).(pulumi.StringOutput)
}

// MD5 key.
func (o GetOspfOspfInterfaceOutput) Md5Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.Md5Key }).(pulumi.StringOutput)
}

// Authentication MD5 key-chain name.
func (o GetOspfOspfInterfaceOutput) Md5Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.Md5Keychain }).(pulumi.StringOutput)
}

// MD5 key. The structure of `md5Keys` block is documented below.
func (o GetOspfOspfInterfaceOutput) Md5Keys() GetOspfOspfInterfaceMd5KeyArrayOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) []GetOspfOspfInterfaceMd5Key { return v.Md5Keys }).(GetOspfOspfInterfaceMd5KeyArrayOutput)
}

// MTU for database description packets.
func (o GetOspfOspfInterfaceOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) int { return v.Mtu }).(pulumi.IntOutput)
}

// Enable/disable ignore MTU.
func (o GetOspfOspfInterfaceOutput) MtuIgnore() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.MtuIgnore }).(pulumi.StringOutput)
}

// Redistribute name.
func (o GetOspfOspfInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.Name }).(pulumi.StringOutput)
}

// Network type.
func (o GetOspfOspfInterfaceOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Prefix length.
func (o GetOspfOspfInterfaceOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// Priority.
func (o GetOspfOspfInterfaceOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) int { return v.Priority }).(pulumi.IntOutput)
}

// Graceful restart neighbor resynchronization timeout.
func (o GetOspfOspfInterfaceOutput) ResyncTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) int { return v.ResyncTimeout }).(pulumi.IntOutput)
}

// Retransmit interval.
func (o GetOspfOspfInterfaceOutput) RetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) int { return v.RetransmitInterval }).(pulumi.IntOutput)
}

// status
func (o GetOspfOspfInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) string { return v.Status }).(pulumi.StringOutput)
}

// Transmit delay.
func (o GetOspfOspfInterfaceOutput) TransmitDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfOspfInterface) int { return v.TransmitDelay }).(pulumi.IntOutput)
}

type GetOspfOspfInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetOspfOspfInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfOspfInterface)(nil)).Elem()
}

func (o GetOspfOspfInterfaceArrayOutput) ToGetOspfOspfInterfaceArrayOutput() GetOspfOspfInterfaceArrayOutput {
	return o
}

func (o GetOspfOspfInterfaceArrayOutput) ToGetOspfOspfInterfaceArrayOutputWithContext(ctx context.Context) GetOspfOspfInterfaceArrayOutput {
	return o
}

func (o GetOspfOspfInterfaceArrayOutput) Index(i pulumi.IntInput) GetOspfOspfInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfOspfInterface {
		return vs[0].([]GetOspfOspfInterface)[vs[1].(int)]
	}).(GetOspfOspfInterfaceOutput)
}

type GetOspfOspfInterfaceMd5Key struct {
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Password for the key.
	KeyString string `pulumi:"keyString"`
}

// GetOspfOspfInterfaceMd5KeyInput is an input type that accepts GetOspfOspfInterfaceMd5KeyArgs and GetOspfOspfInterfaceMd5KeyOutput values.
// You can construct a concrete instance of `GetOspfOspfInterfaceMd5KeyInput` via:
//
//	GetOspfOspfInterfaceMd5KeyArgs{...}
type GetOspfOspfInterfaceMd5KeyInput interface {
	pulumi.Input

	ToGetOspfOspfInterfaceMd5KeyOutput() GetOspfOspfInterfaceMd5KeyOutput
	ToGetOspfOspfInterfaceMd5KeyOutputWithContext(context.Context) GetOspfOspfInterfaceMd5KeyOutput
}

type GetOspfOspfInterfaceMd5KeyArgs struct {
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Password for the key.
	KeyString pulumi.StringInput `pulumi:"keyString"`
}

func (GetOspfOspfInterfaceMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i GetOspfOspfInterfaceMd5KeyArgs) ToGetOspfOspfInterfaceMd5KeyOutput() GetOspfOspfInterfaceMd5KeyOutput {
	return i.ToGetOspfOspfInterfaceMd5KeyOutputWithContext(context.Background())
}

func (i GetOspfOspfInterfaceMd5KeyArgs) ToGetOspfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) GetOspfOspfInterfaceMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfOspfInterfaceMd5KeyOutput)
}

// GetOspfOspfInterfaceMd5KeyArrayInput is an input type that accepts GetOspfOspfInterfaceMd5KeyArray and GetOspfOspfInterfaceMd5KeyArrayOutput values.
// You can construct a concrete instance of `GetOspfOspfInterfaceMd5KeyArrayInput` via:
//
//	GetOspfOspfInterfaceMd5KeyArray{ GetOspfOspfInterfaceMd5KeyArgs{...} }
type GetOspfOspfInterfaceMd5KeyArrayInput interface {
	pulumi.Input

	ToGetOspfOspfInterfaceMd5KeyArrayOutput() GetOspfOspfInterfaceMd5KeyArrayOutput
	ToGetOspfOspfInterfaceMd5KeyArrayOutputWithContext(context.Context) GetOspfOspfInterfaceMd5KeyArrayOutput
}

type GetOspfOspfInterfaceMd5KeyArray []GetOspfOspfInterfaceMd5KeyInput

func (GetOspfOspfInterfaceMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i GetOspfOspfInterfaceMd5KeyArray) ToGetOspfOspfInterfaceMd5KeyArrayOutput() GetOspfOspfInterfaceMd5KeyArrayOutput {
	return i.ToGetOspfOspfInterfaceMd5KeyArrayOutputWithContext(context.Background())
}

func (i GetOspfOspfInterfaceMd5KeyArray) ToGetOspfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) GetOspfOspfInterfaceMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfOspfInterfaceMd5KeyArrayOutput)
}

type GetOspfOspfInterfaceMd5KeyOutput struct{ *pulumi.OutputState }

func (GetOspfOspfInterfaceMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o GetOspfOspfInterfaceMd5KeyOutput) ToGetOspfOspfInterfaceMd5KeyOutput() GetOspfOspfInterfaceMd5KeyOutput {
	return o
}

func (o GetOspfOspfInterfaceMd5KeyOutput) ToGetOspfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) GetOspfOspfInterfaceMd5KeyOutput {
	return o
}

// Distribute list entry ID.
func (o GetOspfOspfInterfaceMd5KeyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfOspfInterfaceMd5Key) int { return v.Id }).(pulumi.IntOutput)
}

// Password for the key.
func (o GetOspfOspfInterfaceMd5KeyOutput) KeyString() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfOspfInterfaceMd5Key) string { return v.KeyString }).(pulumi.StringOutput)
}

type GetOspfOspfInterfaceMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (GetOspfOspfInterfaceMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o GetOspfOspfInterfaceMd5KeyArrayOutput) ToGetOspfOspfInterfaceMd5KeyArrayOutput() GetOspfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o GetOspfOspfInterfaceMd5KeyArrayOutput) ToGetOspfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) GetOspfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o GetOspfOspfInterfaceMd5KeyArrayOutput) Index(i pulumi.IntInput) GetOspfOspfInterfaceMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfOspfInterfaceMd5Key {
		return vs[0].([]GetOspfOspfInterfaceMd5Key)[vs[1].(int)]
	}).(GetOspfOspfInterfaceMd5KeyOutput)
}

type GetOspfPassiveInterface struct {
	// Redistribute name.
	Name string `pulumi:"name"`
}

// GetOspfPassiveInterfaceInput is an input type that accepts GetOspfPassiveInterfaceArgs and GetOspfPassiveInterfaceOutput values.
// You can construct a concrete instance of `GetOspfPassiveInterfaceInput` via:
//
//	GetOspfPassiveInterfaceArgs{...}
type GetOspfPassiveInterfaceInput interface {
	pulumi.Input

	ToGetOspfPassiveInterfaceOutput() GetOspfPassiveInterfaceOutput
	ToGetOspfPassiveInterfaceOutputWithContext(context.Context) GetOspfPassiveInterfaceOutput
}

type GetOspfPassiveInterfaceArgs struct {
	// Redistribute name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetOspfPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfPassiveInterface)(nil)).Elem()
}

func (i GetOspfPassiveInterfaceArgs) ToGetOspfPassiveInterfaceOutput() GetOspfPassiveInterfaceOutput {
	return i.ToGetOspfPassiveInterfaceOutputWithContext(context.Background())
}

func (i GetOspfPassiveInterfaceArgs) ToGetOspfPassiveInterfaceOutputWithContext(ctx context.Context) GetOspfPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfPassiveInterfaceOutput)
}

// GetOspfPassiveInterfaceArrayInput is an input type that accepts GetOspfPassiveInterfaceArray and GetOspfPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `GetOspfPassiveInterfaceArrayInput` via:
//
//	GetOspfPassiveInterfaceArray{ GetOspfPassiveInterfaceArgs{...} }
type GetOspfPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToGetOspfPassiveInterfaceArrayOutput() GetOspfPassiveInterfaceArrayOutput
	ToGetOspfPassiveInterfaceArrayOutputWithContext(context.Context) GetOspfPassiveInterfaceArrayOutput
}

type GetOspfPassiveInterfaceArray []GetOspfPassiveInterfaceInput

func (GetOspfPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfPassiveInterface)(nil)).Elem()
}

func (i GetOspfPassiveInterfaceArray) ToGetOspfPassiveInterfaceArrayOutput() GetOspfPassiveInterfaceArrayOutput {
	return i.ToGetOspfPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i GetOspfPassiveInterfaceArray) ToGetOspfPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetOspfPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfPassiveInterfaceArrayOutput)
}

type GetOspfPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (GetOspfPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfPassiveInterface)(nil)).Elem()
}

func (o GetOspfPassiveInterfaceOutput) ToGetOspfPassiveInterfaceOutput() GetOspfPassiveInterfaceOutput {
	return o
}

func (o GetOspfPassiveInterfaceOutput) ToGetOspfPassiveInterfaceOutputWithContext(ctx context.Context) GetOspfPassiveInterfaceOutput {
	return o
}

// Redistribute name.
func (o GetOspfPassiveInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfPassiveInterface) string { return v.Name }).(pulumi.StringOutput)
}

type GetOspfPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetOspfPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfPassiveInterface)(nil)).Elem()
}

func (o GetOspfPassiveInterfaceArrayOutput) ToGetOspfPassiveInterfaceArrayOutput() GetOspfPassiveInterfaceArrayOutput {
	return o
}

func (o GetOspfPassiveInterfaceArrayOutput) ToGetOspfPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetOspfPassiveInterfaceArrayOutput {
	return o
}

func (o GetOspfPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) GetOspfPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfPassiveInterface {
		return vs[0].([]GetOspfPassiveInterface)[vs[1].(int)]
	}).(GetOspfPassiveInterfaceOutput)
}

type GetOspfRedistribute struct {
	// Redistribute metric setting.
	Metric int `pulumi:"metric"`
	// Metric type.
	MetricType string `pulumi:"metricType"`
	// Redistribute name.
	Name string `pulumi:"name"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// status
	Status string `pulumi:"status"`
	// Tag value.
	Tag int `pulumi:"tag"`
}

// GetOspfRedistributeInput is an input type that accepts GetOspfRedistributeArgs and GetOspfRedistributeOutput values.
// You can construct a concrete instance of `GetOspfRedistributeInput` via:
//
//	GetOspfRedistributeArgs{...}
type GetOspfRedistributeInput interface {
	pulumi.Input

	ToGetOspfRedistributeOutput() GetOspfRedistributeOutput
	ToGetOspfRedistributeOutputWithContext(context.Context) GetOspfRedistributeOutput
}

type GetOspfRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Metric type.
	MetricType pulumi.StringInput `pulumi:"metricType"`
	// Redistribute name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
	// Tag value.
	Tag pulumi.IntInput `pulumi:"tag"`
}

func (GetOspfRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfRedistribute)(nil)).Elem()
}

func (i GetOspfRedistributeArgs) ToGetOspfRedistributeOutput() GetOspfRedistributeOutput {
	return i.ToGetOspfRedistributeOutputWithContext(context.Background())
}

func (i GetOspfRedistributeArgs) ToGetOspfRedistributeOutputWithContext(ctx context.Context) GetOspfRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfRedistributeOutput)
}

// GetOspfRedistributeArrayInput is an input type that accepts GetOspfRedistributeArray and GetOspfRedistributeArrayOutput values.
// You can construct a concrete instance of `GetOspfRedistributeArrayInput` via:
//
//	GetOspfRedistributeArray{ GetOspfRedistributeArgs{...} }
type GetOspfRedistributeArrayInput interface {
	pulumi.Input

	ToGetOspfRedistributeArrayOutput() GetOspfRedistributeArrayOutput
	ToGetOspfRedistributeArrayOutputWithContext(context.Context) GetOspfRedistributeArrayOutput
}

type GetOspfRedistributeArray []GetOspfRedistributeInput

func (GetOspfRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfRedistribute)(nil)).Elem()
}

func (i GetOspfRedistributeArray) ToGetOspfRedistributeArrayOutput() GetOspfRedistributeArrayOutput {
	return i.ToGetOspfRedistributeArrayOutputWithContext(context.Background())
}

func (i GetOspfRedistributeArray) ToGetOspfRedistributeArrayOutputWithContext(ctx context.Context) GetOspfRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfRedistributeArrayOutput)
}

type GetOspfRedistributeOutput struct{ *pulumi.OutputState }

func (GetOspfRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfRedistribute)(nil)).Elem()
}

func (o GetOspfRedistributeOutput) ToGetOspfRedistributeOutput() GetOspfRedistributeOutput {
	return o
}

func (o GetOspfRedistributeOutput) ToGetOspfRedistributeOutputWithContext(ctx context.Context) GetOspfRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o GetOspfRedistributeOutput) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfRedistribute) int { return v.Metric }).(pulumi.IntOutput)
}

// Metric type.
func (o GetOspfRedistributeOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfRedistribute) string { return v.MetricType }).(pulumi.StringOutput)
}

// Redistribute name.
func (o GetOspfRedistributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfRedistribute) string { return v.Name }).(pulumi.StringOutput)
}

// Route map name.
func (o GetOspfRedistributeOutput) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfRedistribute) string { return v.Routemap }).(pulumi.StringOutput)
}

// status
func (o GetOspfRedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfRedistribute) string { return v.Status }).(pulumi.StringOutput)
}

// Tag value.
func (o GetOspfRedistributeOutput) Tag() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfRedistribute) int { return v.Tag }).(pulumi.IntOutput)
}

type GetOspfRedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetOspfRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfRedistribute)(nil)).Elem()
}

func (o GetOspfRedistributeArrayOutput) ToGetOspfRedistributeArrayOutput() GetOspfRedistributeArrayOutput {
	return o
}

func (o GetOspfRedistributeArrayOutput) ToGetOspfRedistributeArrayOutputWithContext(ctx context.Context) GetOspfRedistributeArrayOutput {
	return o
}

func (o GetOspfRedistributeArrayOutput) Index(i pulumi.IntInput) GetOspfRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfRedistribute {
		return vs[0].([]GetOspfRedistribute)[vs[1].(int)]
	}).(GetOspfRedistributeOutput)
}

type GetOspfSummaryAddress struct {
	// Enable/disable advertise status.
	Advertise string `pulumi:"advertise"`
	// Distribute list entry ID.
	Id int `pulumi:"id"`
	// Prefix.
	Prefix string `pulumi:"prefix"`
	// Tag value.
	Tag int `pulumi:"tag"`
}

// GetOspfSummaryAddressInput is an input type that accepts GetOspfSummaryAddressArgs and GetOspfSummaryAddressOutput values.
// You can construct a concrete instance of `GetOspfSummaryAddressInput` via:
//
//	GetOspfSummaryAddressArgs{...}
type GetOspfSummaryAddressInput interface {
	pulumi.Input

	ToGetOspfSummaryAddressOutput() GetOspfSummaryAddressOutput
	ToGetOspfSummaryAddressOutputWithContext(context.Context) GetOspfSummaryAddressOutput
}

type GetOspfSummaryAddressArgs struct {
	// Enable/disable advertise status.
	Advertise pulumi.StringInput `pulumi:"advertise"`
	// Distribute list entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Tag value.
	Tag pulumi.IntInput `pulumi:"tag"`
}

func (GetOspfSummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfSummaryAddress)(nil)).Elem()
}

func (i GetOspfSummaryAddressArgs) ToGetOspfSummaryAddressOutput() GetOspfSummaryAddressOutput {
	return i.ToGetOspfSummaryAddressOutputWithContext(context.Background())
}

func (i GetOspfSummaryAddressArgs) ToGetOspfSummaryAddressOutputWithContext(ctx context.Context) GetOspfSummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfSummaryAddressOutput)
}

// GetOspfSummaryAddressArrayInput is an input type that accepts GetOspfSummaryAddressArray and GetOspfSummaryAddressArrayOutput values.
// You can construct a concrete instance of `GetOspfSummaryAddressArrayInput` via:
//
//	GetOspfSummaryAddressArray{ GetOspfSummaryAddressArgs{...} }
type GetOspfSummaryAddressArrayInput interface {
	pulumi.Input

	ToGetOspfSummaryAddressArrayOutput() GetOspfSummaryAddressArrayOutput
	ToGetOspfSummaryAddressArrayOutputWithContext(context.Context) GetOspfSummaryAddressArrayOutput
}

type GetOspfSummaryAddressArray []GetOspfSummaryAddressInput

func (GetOspfSummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfSummaryAddress)(nil)).Elem()
}

func (i GetOspfSummaryAddressArray) ToGetOspfSummaryAddressArrayOutput() GetOspfSummaryAddressArrayOutput {
	return i.ToGetOspfSummaryAddressArrayOutputWithContext(context.Background())
}

func (i GetOspfSummaryAddressArray) ToGetOspfSummaryAddressArrayOutputWithContext(ctx context.Context) GetOspfSummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOspfSummaryAddressArrayOutput)
}

type GetOspfSummaryAddressOutput struct{ *pulumi.OutputState }

func (GetOspfSummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOspfSummaryAddress)(nil)).Elem()
}

func (o GetOspfSummaryAddressOutput) ToGetOspfSummaryAddressOutput() GetOspfSummaryAddressOutput {
	return o
}

func (o GetOspfSummaryAddressOutput) ToGetOspfSummaryAddressOutputWithContext(ctx context.Context) GetOspfSummaryAddressOutput {
	return o
}

// Enable/disable advertise status.
func (o GetOspfSummaryAddressOutput) Advertise() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfSummaryAddress) string { return v.Advertise }).(pulumi.StringOutput)
}

// Distribute list entry ID.
func (o GetOspfSummaryAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfSummaryAddress) int { return v.Id }).(pulumi.IntOutput)
}

// Prefix.
func (o GetOspfSummaryAddressOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetOspfSummaryAddress) string { return v.Prefix }).(pulumi.StringOutput)
}

// Tag value.
func (o GetOspfSummaryAddressOutput) Tag() pulumi.IntOutput {
	return o.ApplyT(func(v GetOspfSummaryAddress) int { return v.Tag }).(pulumi.IntOutput)
}

type GetOspfSummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (GetOspfSummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOspfSummaryAddress)(nil)).Elem()
}

func (o GetOspfSummaryAddressArrayOutput) ToGetOspfSummaryAddressArrayOutput() GetOspfSummaryAddressArrayOutput {
	return o
}

func (o GetOspfSummaryAddressArrayOutput) ToGetOspfSummaryAddressArrayOutputWithContext(ctx context.Context) GetOspfSummaryAddressArrayOutput {
	return o
}

func (o GetOspfSummaryAddressArrayOutput) Index(i pulumi.IntInput) GetOspfSummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOspfSummaryAddress {
		return vs[0].([]GetOspfSummaryAddress)[vs[1].(int)]
	}).(GetOspfSummaryAddressOutput)
}

type GetPolicy6Dstaddr struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetPolicy6DstaddrInput is an input type that accepts GetPolicy6DstaddrArgs and GetPolicy6DstaddrOutput values.
// You can construct a concrete instance of `GetPolicy6DstaddrInput` via:
//
//	GetPolicy6DstaddrArgs{...}
type GetPolicy6DstaddrInput interface {
	pulumi.Input

	ToGetPolicy6DstaddrOutput() GetPolicy6DstaddrOutput
	ToGetPolicy6DstaddrOutputWithContext(context.Context) GetPolicy6DstaddrOutput
}

type GetPolicy6DstaddrArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Dstaddr)(nil)).Elem()
}

func (i GetPolicy6DstaddrArgs) ToGetPolicy6DstaddrOutput() GetPolicy6DstaddrOutput {
	return i.ToGetPolicy6DstaddrOutputWithContext(context.Background())
}

func (i GetPolicy6DstaddrArgs) ToGetPolicy6DstaddrOutputWithContext(ctx context.Context) GetPolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6DstaddrOutput)
}

// GetPolicy6DstaddrArrayInput is an input type that accepts GetPolicy6DstaddrArray and GetPolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicy6DstaddrArrayInput` via:
//
//	GetPolicy6DstaddrArray{ GetPolicy6DstaddrArgs{...} }
type GetPolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToGetPolicy6DstaddrArrayOutput() GetPolicy6DstaddrArrayOutput
	ToGetPolicy6DstaddrArrayOutputWithContext(context.Context) GetPolicy6DstaddrArrayOutput
}

type GetPolicy6DstaddrArray []GetPolicy6DstaddrInput

func (GetPolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Dstaddr)(nil)).Elem()
}

func (i GetPolicy6DstaddrArray) ToGetPolicy6DstaddrArrayOutput() GetPolicy6DstaddrArrayOutput {
	return i.ToGetPolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicy6DstaddrArray) ToGetPolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetPolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6DstaddrArrayOutput)
}

type GetPolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (GetPolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Dstaddr)(nil)).Elem()
}

func (o GetPolicy6DstaddrOutput) ToGetPolicy6DstaddrOutput() GetPolicy6DstaddrOutput {
	return o
}

func (o GetPolicy6DstaddrOutput) ToGetPolicy6DstaddrOutputWithContext(ctx context.Context) GetPolicy6DstaddrOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetPolicy6DstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6Dstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Dstaddr)(nil)).Elem()
}

func (o GetPolicy6DstaddrArrayOutput) ToGetPolicy6DstaddrArrayOutput() GetPolicy6DstaddrArrayOutput {
	return o
}

func (o GetPolicy6DstaddrArrayOutput) ToGetPolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetPolicy6DstaddrArrayOutput {
	return o
}

func (o GetPolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) GetPolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6Dstaddr {
		return vs[0].([]GetPolicy6Dstaddr)[vs[1].(int)]
	}).(GetPolicy6DstaddrOutput)
}

type GetPolicy6InternetServiceCustom struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetPolicy6InternetServiceCustomInput is an input type that accepts GetPolicy6InternetServiceCustomArgs and GetPolicy6InternetServiceCustomOutput values.
// You can construct a concrete instance of `GetPolicy6InternetServiceCustomInput` via:
//
//	GetPolicy6InternetServiceCustomArgs{...}
type GetPolicy6InternetServiceCustomInput interface {
	pulumi.Input

	ToGetPolicy6InternetServiceCustomOutput() GetPolicy6InternetServiceCustomOutput
	ToGetPolicy6InternetServiceCustomOutputWithContext(context.Context) GetPolicy6InternetServiceCustomOutput
}

type GetPolicy6InternetServiceCustomArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6InternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6InternetServiceCustom)(nil)).Elem()
}

func (i GetPolicy6InternetServiceCustomArgs) ToGetPolicy6InternetServiceCustomOutput() GetPolicy6InternetServiceCustomOutput {
	return i.ToGetPolicy6InternetServiceCustomOutputWithContext(context.Background())
}

func (i GetPolicy6InternetServiceCustomArgs) ToGetPolicy6InternetServiceCustomOutputWithContext(ctx context.Context) GetPolicy6InternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6InternetServiceCustomOutput)
}

// GetPolicy6InternetServiceCustomArrayInput is an input type that accepts GetPolicy6InternetServiceCustomArray and GetPolicy6InternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `GetPolicy6InternetServiceCustomArrayInput` via:
//
//	GetPolicy6InternetServiceCustomArray{ GetPolicy6InternetServiceCustomArgs{...} }
type GetPolicy6InternetServiceCustomArrayInput interface {
	pulumi.Input

	ToGetPolicy6InternetServiceCustomArrayOutput() GetPolicy6InternetServiceCustomArrayOutput
	ToGetPolicy6InternetServiceCustomArrayOutputWithContext(context.Context) GetPolicy6InternetServiceCustomArrayOutput
}

type GetPolicy6InternetServiceCustomArray []GetPolicy6InternetServiceCustomInput

func (GetPolicy6InternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6InternetServiceCustom)(nil)).Elem()
}

func (i GetPolicy6InternetServiceCustomArray) ToGetPolicy6InternetServiceCustomArrayOutput() GetPolicy6InternetServiceCustomArrayOutput {
	return i.ToGetPolicy6InternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i GetPolicy6InternetServiceCustomArray) ToGetPolicy6InternetServiceCustomArrayOutputWithContext(ctx context.Context) GetPolicy6InternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6InternetServiceCustomArrayOutput)
}

type GetPolicy6InternetServiceCustomOutput struct{ *pulumi.OutputState }

func (GetPolicy6InternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6InternetServiceCustom)(nil)).Elem()
}

func (o GetPolicy6InternetServiceCustomOutput) ToGetPolicy6InternetServiceCustomOutput() GetPolicy6InternetServiceCustomOutput {
	return o
}

func (o GetPolicy6InternetServiceCustomOutput) ToGetPolicy6InternetServiceCustomOutputWithContext(ctx context.Context) GetPolicy6InternetServiceCustomOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetPolicy6InternetServiceCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6InternetServiceCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6InternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6InternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6InternetServiceCustom)(nil)).Elem()
}

func (o GetPolicy6InternetServiceCustomArrayOutput) ToGetPolicy6InternetServiceCustomArrayOutput() GetPolicy6InternetServiceCustomArrayOutput {
	return o
}

func (o GetPolicy6InternetServiceCustomArrayOutput) ToGetPolicy6InternetServiceCustomArrayOutputWithContext(ctx context.Context) GetPolicy6InternetServiceCustomArrayOutput {
	return o
}

func (o GetPolicy6InternetServiceCustomArrayOutput) Index(i pulumi.IntInput) GetPolicy6InternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6InternetServiceCustom {
		return vs[0].([]GetPolicy6InternetServiceCustom)[vs[1].(int)]
	}).(GetPolicy6InternetServiceCustomOutput)
}

type GetPolicy6InternetServiceId struct {
	// Destination Internet Service ID.
	Id int `pulumi:"id"`
}

// GetPolicy6InternetServiceIdInput is an input type that accepts GetPolicy6InternetServiceIdArgs and GetPolicy6InternetServiceIdOutput values.
// You can construct a concrete instance of `GetPolicy6InternetServiceIdInput` via:
//
//	GetPolicy6InternetServiceIdArgs{...}
type GetPolicy6InternetServiceIdInput interface {
	pulumi.Input

	ToGetPolicy6InternetServiceIdOutput() GetPolicy6InternetServiceIdOutput
	ToGetPolicy6InternetServiceIdOutputWithContext(context.Context) GetPolicy6InternetServiceIdOutput
}

type GetPolicy6InternetServiceIdArgs struct {
	// Destination Internet Service ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicy6InternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6InternetServiceId)(nil)).Elem()
}

func (i GetPolicy6InternetServiceIdArgs) ToGetPolicy6InternetServiceIdOutput() GetPolicy6InternetServiceIdOutput {
	return i.ToGetPolicy6InternetServiceIdOutputWithContext(context.Background())
}

func (i GetPolicy6InternetServiceIdArgs) ToGetPolicy6InternetServiceIdOutputWithContext(ctx context.Context) GetPolicy6InternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6InternetServiceIdOutput)
}

// GetPolicy6InternetServiceIdArrayInput is an input type that accepts GetPolicy6InternetServiceIdArray and GetPolicy6InternetServiceIdArrayOutput values.
// You can construct a concrete instance of `GetPolicy6InternetServiceIdArrayInput` via:
//
//	GetPolicy6InternetServiceIdArray{ GetPolicy6InternetServiceIdArgs{...} }
type GetPolicy6InternetServiceIdArrayInput interface {
	pulumi.Input

	ToGetPolicy6InternetServiceIdArrayOutput() GetPolicy6InternetServiceIdArrayOutput
	ToGetPolicy6InternetServiceIdArrayOutputWithContext(context.Context) GetPolicy6InternetServiceIdArrayOutput
}

type GetPolicy6InternetServiceIdArray []GetPolicy6InternetServiceIdInput

func (GetPolicy6InternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6InternetServiceId)(nil)).Elem()
}

func (i GetPolicy6InternetServiceIdArray) ToGetPolicy6InternetServiceIdArrayOutput() GetPolicy6InternetServiceIdArrayOutput {
	return i.ToGetPolicy6InternetServiceIdArrayOutputWithContext(context.Background())
}

func (i GetPolicy6InternetServiceIdArray) ToGetPolicy6InternetServiceIdArrayOutputWithContext(ctx context.Context) GetPolicy6InternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6InternetServiceIdArrayOutput)
}

type GetPolicy6InternetServiceIdOutput struct{ *pulumi.OutputState }

func (GetPolicy6InternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6InternetServiceId)(nil)).Elem()
}

func (o GetPolicy6InternetServiceIdOutput) ToGetPolicy6InternetServiceIdOutput() GetPolicy6InternetServiceIdOutput {
	return o
}

func (o GetPolicy6InternetServiceIdOutput) ToGetPolicy6InternetServiceIdOutputWithContext(ctx context.Context) GetPolicy6InternetServiceIdOutput {
	return o
}

// Destination Internet Service ID.
func (o GetPolicy6InternetServiceIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicy6InternetServiceId) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicy6InternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6InternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6InternetServiceId)(nil)).Elem()
}

func (o GetPolicy6InternetServiceIdArrayOutput) ToGetPolicy6InternetServiceIdArrayOutput() GetPolicy6InternetServiceIdArrayOutput {
	return o
}

func (o GetPolicy6InternetServiceIdArrayOutput) ToGetPolicy6InternetServiceIdArrayOutputWithContext(ctx context.Context) GetPolicy6InternetServiceIdArrayOutput {
	return o
}

func (o GetPolicy6InternetServiceIdArrayOutput) Index(i pulumi.IntInput) GetPolicy6InternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6InternetServiceId {
		return vs[0].([]GetPolicy6InternetServiceId)[vs[1].(int)]
	}).(GetPolicy6InternetServiceIdOutput)
}

type GetPolicy6Srcaddr struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetPolicy6SrcaddrInput is an input type that accepts GetPolicy6SrcaddrArgs and GetPolicy6SrcaddrOutput values.
// You can construct a concrete instance of `GetPolicy6SrcaddrInput` via:
//
//	GetPolicy6SrcaddrArgs{...}
type GetPolicy6SrcaddrInput interface {
	pulumi.Input

	ToGetPolicy6SrcaddrOutput() GetPolicy6SrcaddrOutput
	ToGetPolicy6SrcaddrOutputWithContext(context.Context) GetPolicy6SrcaddrOutput
}

type GetPolicy6SrcaddrArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Srcaddr)(nil)).Elem()
}

func (i GetPolicy6SrcaddrArgs) ToGetPolicy6SrcaddrOutput() GetPolicy6SrcaddrOutput {
	return i.ToGetPolicy6SrcaddrOutputWithContext(context.Background())
}

func (i GetPolicy6SrcaddrArgs) ToGetPolicy6SrcaddrOutputWithContext(ctx context.Context) GetPolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6SrcaddrOutput)
}

// GetPolicy6SrcaddrArrayInput is an input type that accepts GetPolicy6SrcaddrArray and GetPolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicy6SrcaddrArrayInput` via:
//
//	GetPolicy6SrcaddrArray{ GetPolicy6SrcaddrArgs{...} }
type GetPolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToGetPolicy6SrcaddrArrayOutput() GetPolicy6SrcaddrArrayOutput
	ToGetPolicy6SrcaddrArrayOutputWithContext(context.Context) GetPolicy6SrcaddrArrayOutput
}

type GetPolicy6SrcaddrArray []GetPolicy6SrcaddrInput

func (GetPolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Srcaddr)(nil)).Elem()
}

func (i GetPolicy6SrcaddrArray) ToGetPolicy6SrcaddrArrayOutput() GetPolicy6SrcaddrArrayOutput {
	return i.ToGetPolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicy6SrcaddrArray) ToGetPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetPolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6SrcaddrArrayOutput)
}

type GetPolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (GetPolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Srcaddr)(nil)).Elem()
}

func (o GetPolicy6SrcaddrOutput) ToGetPolicy6SrcaddrOutput() GetPolicy6SrcaddrOutput {
	return o
}

func (o GetPolicy6SrcaddrOutput) ToGetPolicy6SrcaddrOutputWithContext(ctx context.Context) GetPolicy6SrcaddrOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetPolicy6SrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6Srcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Srcaddr)(nil)).Elem()
}

func (o GetPolicy6SrcaddrArrayOutput) ToGetPolicy6SrcaddrArrayOutput() GetPolicy6SrcaddrArrayOutput {
	return o
}

func (o GetPolicy6SrcaddrArrayOutput) ToGetPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetPolicy6SrcaddrArrayOutput {
	return o
}

func (o GetPolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) GetPolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6Srcaddr {
		return vs[0].([]GetPolicy6Srcaddr)[vs[1].(int)]
	}).(GetPolicy6SrcaddrOutput)
}

type GetPolicyDst struct {
	// IP and mask.
	Subnet string `pulumi:"subnet"`
}

// GetPolicyDstInput is an input type that accepts GetPolicyDstArgs and GetPolicyDstOutput values.
// You can construct a concrete instance of `GetPolicyDstInput` via:
//
//	GetPolicyDstArgs{...}
type GetPolicyDstInput interface {
	pulumi.Input

	ToGetPolicyDstOutput() GetPolicyDstOutput
	ToGetPolicyDstOutputWithContext(context.Context) GetPolicyDstOutput
}

type GetPolicyDstArgs struct {
	// IP and mask.
	Subnet pulumi.StringInput `pulumi:"subnet"`
}

func (GetPolicyDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDst)(nil)).Elem()
}

func (i GetPolicyDstArgs) ToGetPolicyDstOutput() GetPolicyDstOutput {
	return i.ToGetPolicyDstOutputWithContext(context.Background())
}

func (i GetPolicyDstArgs) ToGetPolicyDstOutputWithContext(ctx context.Context) GetPolicyDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstOutput)
}

// GetPolicyDstArrayInput is an input type that accepts GetPolicyDstArray and GetPolicyDstArrayOutput values.
// You can construct a concrete instance of `GetPolicyDstArrayInput` via:
//
//	GetPolicyDstArray{ GetPolicyDstArgs{...} }
type GetPolicyDstArrayInput interface {
	pulumi.Input

	ToGetPolicyDstArrayOutput() GetPolicyDstArrayOutput
	ToGetPolicyDstArrayOutputWithContext(context.Context) GetPolicyDstArrayOutput
}

type GetPolicyDstArray []GetPolicyDstInput

func (GetPolicyDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDst)(nil)).Elem()
}

func (i GetPolicyDstArray) ToGetPolicyDstArrayOutput() GetPolicyDstArrayOutput {
	return i.ToGetPolicyDstArrayOutputWithContext(context.Background())
}

func (i GetPolicyDstArray) ToGetPolicyDstArrayOutputWithContext(ctx context.Context) GetPolicyDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstArrayOutput)
}

type GetPolicyDstOutput struct{ *pulumi.OutputState }

func (GetPolicyDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDst)(nil)).Elem()
}

func (o GetPolicyDstOutput) ToGetPolicyDstOutput() GetPolicyDstOutput {
	return o
}

func (o GetPolicyDstOutput) ToGetPolicyDstOutputWithContext(ctx context.Context) GetPolicyDstOutput {
	return o
}

// IP and mask.
func (o GetPolicyDstOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDst) string { return v.Subnet }).(pulumi.StringOutput)
}

type GetPolicyDstArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDst)(nil)).Elem()
}

func (o GetPolicyDstArrayOutput) ToGetPolicyDstArrayOutput() GetPolicyDstArrayOutput {
	return o
}

func (o GetPolicyDstArrayOutput) ToGetPolicyDstArrayOutputWithContext(ctx context.Context) GetPolicyDstArrayOutput {
	return o
}

func (o GetPolicyDstArrayOutput) Index(i pulumi.IntInput) GetPolicyDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDst {
		return vs[0].([]GetPolicyDst)[vs[1].(int)]
	}).(GetPolicyDstOutput)
}

type GetPolicyDstaddr struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetPolicyDstaddrInput is an input type that accepts GetPolicyDstaddrArgs and GetPolicyDstaddrOutput values.
// You can construct a concrete instance of `GetPolicyDstaddrInput` via:
//
//	GetPolicyDstaddrArgs{...}
type GetPolicyDstaddrInput interface {
	pulumi.Input

	ToGetPolicyDstaddrOutput() GetPolicyDstaddrOutput
	ToGetPolicyDstaddrOutputWithContext(context.Context) GetPolicyDstaddrOutput
}

type GetPolicyDstaddrArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstaddr)(nil)).Elem()
}

func (i GetPolicyDstaddrArgs) ToGetPolicyDstaddrOutput() GetPolicyDstaddrOutput {
	return i.ToGetPolicyDstaddrOutputWithContext(context.Background())
}

func (i GetPolicyDstaddrArgs) ToGetPolicyDstaddrOutputWithContext(ctx context.Context) GetPolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstaddrOutput)
}

// GetPolicyDstaddrArrayInput is an input type that accepts GetPolicyDstaddrArray and GetPolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicyDstaddrArrayInput` via:
//
//	GetPolicyDstaddrArray{ GetPolicyDstaddrArgs{...} }
type GetPolicyDstaddrArrayInput interface {
	pulumi.Input

	ToGetPolicyDstaddrArrayOutput() GetPolicyDstaddrArrayOutput
	ToGetPolicyDstaddrArrayOutputWithContext(context.Context) GetPolicyDstaddrArrayOutput
}

type GetPolicyDstaddrArray []GetPolicyDstaddrInput

func (GetPolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstaddr)(nil)).Elem()
}

func (i GetPolicyDstaddrArray) ToGetPolicyDstaddrArrayOutput() GetPolicyDstaddrArrayOutput {
	return i.ToGetPolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicyDstaddrArray) ToGetPolicyDstaddrArrayOutputWithContext(ctx context.Context) GetPolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstaddrArrayOutput)
}

type GetPolicyDstaddrOutput struct{ *pulumi.OutputState }

func (GetPolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstaddr)(nil)).Elem()
}

func (o GetPolicyDstaddrOutput) ToGetPolicyDstaddrOutput() GetPolicyDstaddrOutput {
	return o
}

func (o GetPolicyDstaddrOutput) ToGetPolicyDstaddrOutputWithContext(ctx context.Context) GetPolicyDstaddrOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetPolicyDstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstaddr)(nil)).Elem()
}

func (o GetPolicyDstaddrArrayOutput) ToGetPolicyDstaddrArrayOutput() GetPolicyDstaddrArrayOutput {
	return o
}

func (o GetPolicyDstaddrArrayOutput) ToGetPolicyDstaddrArrayOutputWithContext(ctx context.Context) GetPolicyDstaddrArrayOutput {
	return o
}

func (o GetPolicyDstaddrArrayOutput) Index(i pulumi.IntInput) GetPolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDstaddr {
		return vs[0].([]GetPolicyDstaddr)[vs[1].(int)]
	}).(GetPolicyDstaddrOutput)
}

type GetPolicyInputDevice struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetPolicyInputDeviceInput is an input type that accepts GetPolicyInputDeviceArgs and GetPolicyInputDeviceOutput values.
// You can construct a concrete instance of `GetPolicyInputDeviceInput` via:
//
//	GetPolicyInputDeviceArgs{...}
type GetPolicyInputDeviceInput interface {
	pulumi.Input

	ToGetPolicyInputDeviceOutput() GetPolicyInputDeviceOutput
	ToGetPolicyInputDeviceOutputWithContext(context.Context) GetPolicyInputDeviceOutput
}

type GetPolicyInputDeviceArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInputDevice)(nil)).Elem()
}

func (i GetPolicyInputDeviceArgs) ToGetPolicyInputDeviceOutput() GetPolicyInputDeviceOutput {
	return i.ToGetPolicyInputDeviceOutputWithContext(context.Background())
}

func (i GetPolicyInputDeviceArgs) ToGetPolicyInputDeviceOutputWithContext(ctx context.Context) GetPolicyInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInputDeviceOutput)
}

// GetPolicyInputDeviceArrayInput is an input type that accepts GetPolicyInputDeviceArray and GetPolicyInputDeviceArrayOutput values.
// You can construct a concrete instance of `GetPolicyInputDeviceArrayInput` via:
//
//	GetPolicyInputDeviceArray{ GetPolicyInputDeviceArgs{...} }
type GetPolicyInputDeviceArrayInput interface {
	pulumi.Input

	ToGetPolicyInputDeviceArrayOutput() GetPolicyInputDeviceArrayOutput
	ToGetPolicyInputDeviceArrayOutputWithContext(context.Context) GetPolicyInputDeviceArrayOutput
}

type GetPolicyInputDeviceArray []GetPolicyInputDeviceInput

func (GetPolicyInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInputDevice)(nil)).Elem()
}

func (i GetPolicyInputDeviceArray) ToGetPolicyInputDeviceArrayOutput() GetPolicyInputDeviceArrayOutput {
	return i.ToGetPolicyInputDeviceArrayOutputWithContext(context.Background())
}

func (i GetPolicyInputDeviceArray) ToGetPolicyInputDeviceArrayOutputWithContext(ctx context.Context) GetPolicyInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInputDeviceArrayOutput)
}

type GetPolicyInputDeviceOutput struct{ *pulumi.OutputState }

func (GetPolicyInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInputDevice)(nil)).Elem()
}

func (o GetPolicyInputDeviceOutput) ToGetPolicyInputDeviceOutput() GetPolicyInputDeviceOutput {
	return o
}

func (o GetPolicyInputDeviceOutput) ToGetPolicyInputDeviceOutputWithContext(ctx context.Context) GetPolicyInputDeviceOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetPolicyInputDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInputDevice) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInputDevice)(nil)).Elem()
}

func (o GetPolicyInputDeviceArrayOutput) ToGetPolicyInputDeviceArrayOutput() GetPolicyInputDeviceArrayOutput {
	return o
}

func (o GetPolicyInputDeviceArrayOutput) ToGetPolicyInputDeviceArrayOutputWithContext(ctx context.Context) GetPolicyInputDeviceArrayOutput {
	return o
}

func (o GetPolicyInputDeviceArrayOutput) Index(i pulumi.IntInput) GetPolicyInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInputDevice {
		return vs[0].([]GetPolicyInputDevice)[vs[1].(int)]
	}).(GetPolicyInputDeviceOutput)
}

type GetPolicyInternetServiceCustom struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceCustomInput is an input type that accepts GetPolicyInternetServiceCustomArgs and GetPolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceCustomInput` via:
//
//	GetPolicyInternetServiceCustomArgs{...}
type GetPolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceCustomOutput() GetPolicyInternetServiceCustomOutput
	ToGetPolicyInternetServiceCustomOutputWithContext(context.Context) GetPolicyInternetServiceCustomOutput
}

type GetPolicyInternetServiceCustomArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetPolicyInternetServiceCustomArgs) ToGetPolicyInternetServiceCustomOutput() GetPolicyInternetServiceCustomOutput {
	return i.ToGetPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceCustomArgs) ToGetPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceCustomOutput)
}

// GetPolicyInternetServiceCustomArrayInput is an input type that accepts GetPolicyInternetServiceCustomArray and GetPolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceCustomArrayInput` via:
//
//	GetPolicyInternetServiceCustomArray{ GetPolicyInternetServiceCustomArgs{...} }
type GetPolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceCustomArrayOutput() GetPolicyInternetServiceCustomArrayOutput
	ToGetPolicyInternetServiceCustomArrayOutputWithContext(context.Context) GetPolicyInternetServiceCustomArrayOutput
}

type GetPolicyInternetServiceCustomArray []GetPolicyInternetServiceCustomInput

func (GetPolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetPolicyInternetServiceCustomArray) ToGetPolicyInternetServiceCustomArrayOutput() GetPolicyInternetServiceCustomArrayOutput {
	return i.ToGetPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceCustomArray) ToGetPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceCustomArrayOutput)
}

type GetPolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetPolicyInternetServiceCustomOutput) ToGetPolicyInternetServiceCustomOutput() GetPolicyInternetServiceCustomOutput {
	return o
}

func (o GetPolicyInternetServiceCustomOutput) ToGetPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetPolicyInternetServiceCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetPolicyInternetServiceCustomArrayOutput) ToGetPolicyInternetServiceCustomArrayOutput() GetPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetPolicyInternetServiceCustomArrayOutput) ToGetPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetPolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceCustom {
		return vs[0].([]GetPolicyInternetServiceCustom)[vs[1].(int)]
	}).(GetPolicyInternetServiceCustomOutput)
}

type GetPolicyInternetServiceId struct {
	// Destination Internet Service ID.
	Id int `pulumi:"id"`
}

// GetPolicyInternetServiceIdInput is an input type that accepts GetPolicyInternetServiceIdArgs and GetPolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceIdInput` via:
//
//	GetPolicyInternetServiceIdArgs{...}
type GetPolicyInternetServiceIdInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceIdOutput() GetPolicyInternetServiceIdOutput
	ToGetPolicyInternetServiceIdOutputWithContext(context.Context) GetPolicyInternetServiceIdOutput
}

type GetPolicyInternetServiceIdArgs struct {
	// Destination Internet Service ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceId)(nil)).Elem()
}

func (i GetPolicyInternetServiceIdArgs) ToGetPolicyInternetServiceIdOutput() GetPolicyInternetServiceIdOutput {
	return i.ToGetPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceIdArgs) ToGetPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceIdOutput)
}

// GetPolicyInternetServiceIdArrayInput is an input type that accepts GetPolicyInternetServiceIdArray and GetPolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceIdArrayInput` via:
//
//	GetPolicyInternetServiceIdArray{ GetPolicyInternetServiceIdArgs{...} }
type GetPolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceIdArrayOutput() GetPolicyInternetServiceIdArrayOutput
	ToGetPolicyInternetServiceIdArrayOutputWithContext(context.Context) GetPolicyInternetServiceIdArrayOutput
}

type GetPolicyInternetServiceIdArray []GetPolicyInternetServiceIdInput

func (GetPolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceId)(nil)).Elem()
}

func (i GetPolicyInternetServiceIdArray) ToGetPolicyInternetServiceIdArrayOutput() GetPolicyInternetServiceIdArrayOutput {
	return i.ToGetPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceIdArray) ToGetPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceIdArrayOutput)
}

type GetPolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceId)(nil)).Elem()
}

func (o GetPolicyInternetServiceIdOutput) ToGetPolicyInternetServiceIdOutput() GetPolicyInternetServiceIdOutput {
	return o
}

func (o GetPolicyInternetServiceIdOutput) ToGetPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdOutput {
	return o
}

// Destination Internet Service ID.
func (o GetPolicyInternetServiceIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceId) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceId)(nil)).Elem()
}

func (o GetPolicyInternetServiceIdArrayOutput) ToGetPolicyInternetServiceIdArrayOutput() GetPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetPolicyInternetServiceIdArrayOutput) ToGetPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetPolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceId {
		return vs[0].([]GetPolicyInternetServiceId)[vs[1].(int)]
	}).(GetPolicyInternetServiceIdOutput)
}

type GetPolicySrc struct {
	// IP and mask.
	Subnet string `pulumi:"subnet"`
}

// GetPolicySrcInput is an input type that accepts GetPolicySrcArgs and GetPolicySrcOutput values.
// You can construct a concrete instance of `GetPolicySrcInput` via:
//
//	GetPolicySrcArgs{...}
type GetPolicySrcInput interface {
	pulumi.Input

	ToGetPolicySrcOutput() GetPolicySrcOutput
	ToGetPolicySrcOutputWithContext(context.Context) GetPolicySrcOutput
}

type GetPolicySrcArgs struct {
	// IP and mask.
	Subnet pulumi.StringInput `pulumi:"subnet"`
}

func (GetPolicySrcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrc)(nil)).Elem()
}

func (i GetPolicySrcArgs) ToGetPolicySrcOutput() GetPolicySrcOutput {
	return i.ToGetPolicySrcOutputWithContext(context.Background())
}

func (i GetPolicySrcArgs) ToGetPolicySrcOutputWithContext(ctx context.Context) GetPolicySrcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcOutput)
}

// GetPolicySrcArrayInput is an input type that accepts GetPolicySrcArray and GetPolicySrcArrayOutput values.
// You can construct a concrete instance of `GetPolicySrcArrayInput` via:
//
//	GetPolicySrcArray{ GetPolicySrcArgs{...} }
type GetPolicySrcArrayInput interface {
	pulumi.Input

	ToGetPolicySrcArrayOutput() GetPolicySrcArrayOutput
	ToGetPolicySrcArrayOutputWithContext(context.Context) GetPolicySrcArrayOutput
}

type GetPolicySrcArray []GetPolicySrcInput

func (GetPolicySrcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrc)(nil)).Elem()
}

func (i GetPolicySrcArray) ToGetPolicySrcArrayOutput() GetPolicySrcArrayOutput {
	return i.ToGetPolicySrcArrayOutputWithContext(context.Background())
}

func (i GetPolicySrcArray) ToGetPolicySrcArrayOutputWithContext(ctx context.Context) GetPolicySrcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcArrayOutput)
}

type GetPolicySrcOutput struct{ *pulumi.OutputState }

func (GetPolicySrcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrc)(nil)).Elem()
}

func (o GetPolicySrcOutput) ToGetPolicySrcOutput() GetPolicySrcOutput {
	return o
}

func (o GetPolicySrcOutput) ToGetPolicySrcOutputWithContext(ctx context.Context) GetPolicySrcOutput {
	return o
}

// IP and mask.
func (o GetPolicySrcOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySrc) string { return v.Subnet }).(pulumi.StringOutput)
}

type GetPolicySrcArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySrcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrc)(nil)).Elem()
}

func (o GetPolicySrcArrayOutput) ToGetPolicySrcArrayOutput() GetPolicySrcArrayOutput {
	return o
}

func (o GetPolicySrcArrayOutput) ToGetPolicySrcArrayOutputWithContext(ctx context.Context) GetPolicySrcArrayOutput {
	return o
}

func (o GetPolicySrcArrayOutput) Index(i pulumi.IntInput) GetPolicySrcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySrc {
		return vs[0].([]GetPolicySrc)[vs[1].(int)]
	}).(GetPolicySrcOutput)
}

type GetPolicySrcaddr struct {
	// Custom Destination Internet Service name.
	Name string `pulumi:"name"`
}

// GetPolicySrcaddrInput is an input type that accepts GetPolicySrcaddrArgs and GetPolicySrcaddrOutput values.
// You can construct a concrete instance of `GetPolicySrcaddrInput` via:
//
//	GetPolicySrcaddrArgs{...}
type GetPolicySrcaddrInput interface {
	pulumi.Input

	ToGetPolicySrcaddrOutput() GetPolicySrcaddrOutput
	ToGetPolicySrcaddrOutputWithContext(context.Context) GetPolicySrcaddrOutput
}

type GetPolicySrcaddrArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcaddr)(nil)).Elem()
}

func (i GetPolicySrcaddrArgs) ToGetPolicySrcaddrOutput() GetPolicySrcaddrOutput {
	return i.ToGetPolicySrcaddrOutputWithContext(context.Background())
}

func (i GetPolicySrcaddrArgs) ToGetPolicySrcaddrOutputWithContext(ctx context.Context) GetPolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcaddrOutput)
}

// GetPolicySrcaddrArrayInput is an input type that accepts GetPolicySrcaddrArray and GetPolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicySrcaddrArrayInput` via:
//
//	GetPolicySrcaddrArray{ GetPolicySrcaddrArgs{...} }
type GetPolicySrcaddrArrayInput interface {
	pulumi.Input

	ToGetPolicySrcaddrArrayOutput() GetPolicySrcaddrArrayOutput
	ToGetPolicySrcaddrArrayOutputWithContext(context.Context) GetPolicySrcaddrArrayOutput
}

type GetPolicySrcaddrArray []GetPolicySrcaddrInput

func (GetPolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcaddr)(nil)).Elem()
}

func (i GetPolicySrcaddrArray) ToGetPolicySrcaddrArrayOutput() GetPolicySrcaddrArrayOutput {
	return i.ToGetPolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicySrcaddrArray) ToGetPolicySrcaddrArrayOutputWithContext(ctx context.Context) GetPolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcaddrArrayOutput)
}

type GetPolicySrcaddrOutput struct{ *pulumi.OutputState }

func (GetPolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcaddr)(nil)).Elem()
}

func (o GetPolicySrcaddrOutput) ToGetPolicySrcaddrOutput() GetPolicySrcaddrOutput {
	return o
}

func (o GetPolicySrcaddrOutput) ToGetPolicySrcaddrOutputWithContext(ctx context.Context) GetPolicySrcaddrOutput {
	return o
}

// Custom Destination Internet Service name.
func (o GetPolicySrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySrcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcaddr)(nil)).Elem()
}

func (o GetPolicySrcaddrArrayOutput) ToGetPolicySrcaddrArrayOutput() GetPolicySrcaddrArrayOutput {
	return o
}

func (o GetPolicySrcaddrArrayOutput) ToGetPolicySrcaddrArrayOutputWithContext(ctx context.Context) GetPolicySrcaddrArrayOutput {
	return o
}

func (o GetPolicySrcaddrArrayOutput) Index(i pulumi.IntInput) GetPolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySrcaddr {
		return vs[0].([]GetPolicySrcaddr)[vs[1].(int)]
	}).(GetPolicySrcaddrOutput)
}

type GetPrefixlist6Rule struct {
	// Permit or deny packets that match this rule.
	Action string `pulumi:"action"`
	// Flags.
	Flags int `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 128).
	Ge int `pulumi:"ge"`
	// Rule ID.
	Id int `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 128).
	Le int `pulumi:"le"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 string `pulumi:"prefix6"`
}

// GetPrefixlist6RuleInput is an input type that accepts GetPrefixlist6RuleArgs and GetPrefixlist6RuleOutput values.
// You can construct a concrete instance of `GetPrefixlist6RuleInput` via:
//
//	GetPrefixlist6RuleArgs{...}
type GetPrefixlist6RuleInput interface {
	pulumi.Input

	ToGetPrefixlist6RuleOutput() GetPrefixlist6RuleOutput
	ToGetPrefixlist6RuleOutputWithContext(context.Context) GetPrefixlist6RuleOutput
}

type GetPrefixlist6RuleArgs struct {
	// Permit or deny packets that match this rule.
	Action pulumi.StringInput `pulumi:"action"`
	// Flags.
	Flags pulumi.IntInput `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 128).
	Ge pulumi.IntInput `pulumi:"ge"`
	// Rule ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 128).
	Le pulumi.IntInput `pulumi:"le"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetPrefixlist6RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixlist6Rule)(nil)).Elem()
}

func (i GetPrefixlist6RuleArgs) ToGetPrefixlist6RuleOutput() GetPrefixlist6RuleOutput {
	return i.ToGetPrefixlist6RuleOutputWithContext(context.Background())
}

func (i GetPrefixlist6RuleArgs) ToGetPrefixlist6RuleOutputWithContext(ctx context.Context) GetPrefixlist6RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixlist6RuleOutput)
}

// GetPrefixlist6RuleArrayInput is an input type that accepts GetPrefixlist6RuleArray and GetPrefixlist6RuleArrayOutput values.
// You can construct a concrete instance of `GetPrefixlist6RuleArrayInput` via:
//
//	GetPrefixlist6RuleArray{ GetPrefixlist6RuleArgs{...} }
type GetPrefixlist6RuleArrayInput interface {
	pulumi.Input

	ToGetPrefixlist6RuleArrayOutput() GetPrefixlist6RuleArrayOutput
	ToGetPrefixlist6RuleArrayOutputWithContext(context.Context) GetPrefixlist6RuleArrayOutput
}

type GetPrefixlist6RuleArray []GetPrefixlist6RuleInput

func (GetPrefixlist6RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixlist6Rule)(nil)).Elem()
}

func (i GetPrefixlist6RuleArray) ToGetPrefixlist6RuleArrayOutput() GetPrefixlist6RuleArrayOutput {
	return i.ToGetPrefixlist6RuleArrayOutputWithContext(context.Background())
}

func (i GetPrefixlist6RuleArray) ToGetPrefixlist6RuleArrayOutputWithContext(ctx context.Context) GetPrefixlist6RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixlist6RuleArrayOutput)
}

type GetPrefixlist6RuleOutput struct{ *pulumi.OutputState }

func (GetPrefixlist6RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixlist6Rule)(nil)).Elem()
}

func (o GetPrefixlist6RuleOutput) ToGetPrefixlist6RuleOutput() GetPrefixlist6RuleOutput {
	return o
}

func (o GetPrefixlist6RuleOutput) ToGetPrefixlist6RuleOutputWithContext(ctx context.Context) GetPrefixlist6RuleOutput {
	return o
}

// Permit or deny packets that match this rule.
func (o GetPrefixlist6RuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixlist6Rule) string { return v.Action }).(pulumi.StringOutput)
}

// Flags.
func (o GetPrefixlist6RuleOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixlist6Rule) int { return v.Flags }).(pulumi.IntOutput)
}

// Minimum prefix length to be matched (0 - 128).
func (o GetPrefixlist6RuleOutput) Ge() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixlist6Rule) int { return v.Ge }).(pulumi.IntOutput)
}

// Rule ID.
func (o GetPrefixlist6RuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixlist6Rule) int { return v.Id }).(pulumi.IntOutput)
}

// Maximum prefix length to be matched (0 - 128).
func (o GetPrefixlist6RuleOutput) Le() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixlist6Rule) int { return v.Le }).(pulumi.IntOutput)
}

// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
func (o GetPrefixlist6RuleOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixlist6Rule) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetPrefixlist6RuleArrayOutput struct{ *pulumi.OutputState }

func (GetPrefixlist6RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixlist6Rule)(nil)).Elem()
}

func (o GetPrefixlist6RuleArrayOutput) ToGetPrefixlist6RuleArrayOutput() GetPrefixlist6RuleArrayOutput {
	return o
}

func (o GetPrefixlist6RuleArrayOutput) ToGetPrefixlist6RuleArrayOutputWithContext(ctx context.Context) GetPrefixlist6RuleArrayOutput {
	return o
}

func (o GetPrefixlist6RuleArrayOutput) Index(i pulumi.IntInput) GetPrefixlist6RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrefixlist6Rule {
		return vs[0].([]GetPrefixlist6Rule)[vs[1].(int)]
	}).(GetPrefixlist6RuleOutput)
}

type GetPrefixlistRule struct {
	// Permit or deny this IP address and netmask prefix.
	Action string `pulumi:"action"`
	// Flags.
	Flags int `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 32).
	Ge int `pulumi:"ge"`
	// Rule ID.
	Id int `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 32).
	Le int `pulumi:"le"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix string `pulumi:"prefix"`
}

// GetPrefixlistRuleInput is an input type that accepts GetPrefixlistRuleArgs and GetPrefixlistRuleOutput values.
// You can construct a concrete instance of `GetPrefixlistRuleInput` via:
//
//	GetPrefixlistRuleArgs{...}
type GetPrefixlistRuleInput interface {
	pulumi.Input

	ToGetPrefixlistRuleOutput() GetPrefixlistRuleOutput
	ToGetPrefixlistRuleOutputWithContext(context.Context) GetPrefixlistRuleOutput
}

type GetPrefixlistRuleArgs struct {
	// Permit or deny this IP address and netmask prefix.
	Action pulumi.StringInput `pulumi:"action"`
	// Flags.
	Flags pulumi.IntInput `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 32).
	Ge pulumi.IntInput `pulumi:"ge"`
	// Rule ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 32).
	Le pulumi.IntInput `pulumi:"le"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetPrefixlistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixlistRule)(nil)).Elem()
}

func (i GetPrefixlistRuleArgs) ToGetPrefixlistRuleOutput() GetPrefixlistRuleOutput {
	return i.ToGetPrefixlistRuleOutputWithContext(context.Background())
}

func (i GetPrefixlistRuleArgs) ToGetPrefixlistRuleOutputWithContext(ctx context.Context) GetPrefixlistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixlistRuleOutput)
}

// GetPrefixlistRuleArrayInput is an input type that accepts GetPrefixlistRuleArray and GetPrefixlistRuleArrayOutput values.
// You can construct a concrete instance of `GetPrefixlistRuleArrayInput` via:
//
//	GetPrefixlistRuleArray{ GetPrefixlistRuleArgs{...} }
type GetPrefixlistRuleArrayInput interface {
	pulumi.Input

	ToGetPrefixlistRuleArrayOutput() GetPrefixlistRuleArrayOutput
	ToGetPrefixlistRuleArrayOutputWithContext(context.Context) GetPrefixlistRuleArrayOutput
}

type GetPrefixlistRuleArray []GetPrefixlistRuleInput

func (GetPrefixlistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixlistRule)(nil)).Elem()
}

func (i GetPrefixlistRuleArray) ToGetPrefixlistRuleArrayOutput() GetPrefixlistRuleArrayOutput {
	return i.ToGetPrefixlistRuleArrayOutputWithContext(context.Background())
}

func (i GetPrefixlistRuleArray) ToGetPrefixlistRuleArrayOutputWithContext(ctx context.Context) GetPrefixlistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixlistRuleArrayOutput)
}

type GetPrefixlistRuleOutput struct{ *pulumi.OutputState }

func (GetPrefixlistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixlistRule)(nil)).Elem()
}

func (o GetPrefixlistRuleOutput) ToGetPrefixlistRuleOutput() GetPrefixlistRuleOutput {
	return o
}

func (o GetPrefixlistRuleOutput) ToGetPrefixlistRuleOutputWithContext(ctx context.Context) GetPrefixlistRuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix.
func (o GetPrefixlistRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixlistRule) string { return v.Action }).(pulumi.StringOutput)
}

// Flags.
func (o GetPrefixlistRuleOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixlistRule) int { return v.Flags }).(pulumi.IntOutput)
}

// Minimum prefix length to be matched (0 - 32).
func (o GetPrefixlistRuleOutput) Ge() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixlistRule) int { return v.Ge }).(pulumi.IntOutput)
}

// Rule ID.
func (o GetPrefixlistRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixlistRule) int { return v.Id }).(pulumi.IntOutput)
}

// Maximum prefix length to be matched (0 - 32).
func (o GetPrefixlistRuleOutput) Le() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixlistRule) int { return v.Le }).(pulumi.IntOutput)
}

// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
func (o GetPrefixlistRuleOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixlistRule) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetPrefixlistRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPrefixlistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixlistRule)(nil)).Elem()
}

func (o GetPrefixlistRuleArrayOutput) ToGetPrefixlistRuleArrayOutput() GetPrefixlistRuleArrayOutput {
	return o
}

func (o GetPrefixlistRuleArrayOutput) ToGetPrefixlistRuleArrayOutputWithContext(ctx context.Context) GetPrefixlistRuleArrayOutput {
	return o
}

func (o GetPrefixlistRuleArrayOutput) Index(i pulumi.IntInput) GetPrefixlistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrefixlistRule {
		return vs[0].([]GetPrefixlistRule)[vs[1].(int)]
	}).(GetPrefixlistRuleOutput)
}

type GetRipDistance struct {
	// Access list name.
	AccessList string `pulumi:"accessList"`
	// Distance (1 - 255).
	Distance int `pulumi:"distance"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Network prefix.
	Prefix string `pulumi:"prefix"`
}

// GetRipDistanceInput is an input type that accepts GetRipDistanceArgs and GetRipDistanceOutput values.
// You can construct a concrete instance of `GetRipDistanceInput` via:
//
//	GetRipDistanceArgs{...}
type GetRipDistanceInput interface {
	pulumi.Input

	ToGetRipDistanceOutput() GetRipDistanceOutput
	ToGetRipDistanceOutputWithContext(context.Context) GetRipDistanceOutput
}

type GetRipDistanceArgs struct {
	// Access list name.
	AccessList pulumi.StringInput `pulumi:"accessList"`
	// Distance (1 - 255).
	Distance pulumi.IntInput `pulumi:"distance"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Network prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetRipDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipDistance)(nil)).Elem()
}

func (i GetRipDistanceArgs) ToGetRipDistanceOutput() GetRipDistanceOutput {
	return i.ToGetRipDistanceOutputWithContext(context.Background())
}

func (i GetRipDistanceArgs) ToGetRipDistanceOutputWithContext(ctx context.Context) GetRipDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipDistanceOutput)
}

// GetRipDistanceArrayInput is an input type that accepts GetRipDistanceArray and GetRipDistanceArrayOutput values.
// You can construct a concrete instance of `GetRipDistanceArrayInput` via:
//
//	GetRipDistanceArray{ GetRipDistanceArgs{...} }
type GetRipDistanceArrayInput interface {
	pulumi.Input

	ToGetRipDistanceArrayOutput() GetRipDistanceArrayOutput
	ToGetRipDistanceArrayOutputWithContext(context.Context) GetRipDistanceArrayOutput
}

type GetRipDistanceArray []GetRipDistanceInput

func (GetRipDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipDistance)(nil)).Elem()
}

func (i GetRipDistanceArray) ToGetRipDistanceArrayOutput() GetRipDistanceArrayOutput {
	return i.ToGetRipDistanceArrayOutputWithContext(context.Background())
}

func (i GetRipDistanceArray) ToGetRipDistanceArrayOutputWithContext(ctx context.Context) GetRipDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipDistanceArrayOutput)
}

type GetRipDistanceOutput struct{ *pulumi.OutputState }

func (GetRipDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipDistance)(nil)).Elem()
}

func (o GetRipDistanceOutput) ToGetRipDistanceOutput() GetRipDistanceOutput {
	return o
}

func (o GetRipDistanceOutput) ToGetRipDistanceOutputWithContext(ctx context.Context) GetRipDistanceOutput {
	return o
}

// Access list name.
func (o GetRipDistanceOutput) AccessList() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipDistance) string { return v.AccessList }).(pulumi.StringOutput)
}

// Distance (1 - 255).
func (o GetRipDistanceOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipDistance) int { return v.Distance }).(pulumi.IntOutput)
}

// Offset-list ID.
func (o GetRipDistanceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipDistance) int { return v.Id }).(pulumi.IntOutput)
}

// Network prefix.
func (o GetRipDistanceOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipDistance) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetRipDistanceArrayOutput struct{ *pulumi.OutputState }

func (GetRipDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipDistance)(nil)).Elem()
}

func (o GetRipDistanceArrayOutput) ToGetRipDistanceArrayOutput() GetRipDistanceArrayOutput {
	return o
}

func (o GetRipDistanceArrayOutput) ToGetRipDistanceArrayOutputWithContext(ctx context.Context) GetRipDistanceArrayOutput {
	return o
}

func (o GetRipDistanceArrayOutput) Index(i pulumi.IntInput) GetRipDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipDistance {
		return vs[0].([]GetRipDistance)[vs[1].(int)]
	}).(GetRipDistanceOutput)
}

type GetRipDistributeList struct {
	// Offset list direction.
	Direction string `pulumi:"direction"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Interface name.
	Interface string `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname string `pulumi:"listname"`
	// status
	Status string `pulumi:"status"`
}

// GetRipDistributeListInput is an input type that accepts GetRipDistributeListArgs and GetRipDistributeListOutput values.
// You can construct a concrete instance of `GetRipDistributeListInput` via:
//
//	GetRipDistributeListArgs{...}
type GetRipDistributeListInput interface {
	pulumi.Input

	ToGetRipDistributeListOutput() GetRipDistributeListOutput
	ToGetRipDistributeListOutputWithContext(context.Context) GetRipDistributeListOutput
}

type GetRipDistributeListArgs struct {
	// Offset list direction.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname pulumi.StringInput `pulumi:"listname"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRipDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipDistributeList)(nil)).Elem()
}

func (i GetRipDistributeListArgs) ToGetRipDistributeListOutput() GetRipDistributeListOutput {
	return i.ToGetRipDistributeListOutputWithContext(context.Background())
}

func (i GetRipDistributeListArgs) ToGetRipDistributeListOutputWithContext(ctx context.Context) GetRipDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipDistributeListOutput)
}

// GetRipDistributeListArrayInput is an input type that accepts GetRipDistributeListArray and GetRipDistributeListArrayOutput values.
// You can construct a concrete instance of `GetRipDistributeListArrayInput` via:
//
//	GetRipDistributeListArray{ GetRipDistributeListArgs{...} }
type GetRipDistributeListArrayInput interface {
	pulumi.Input

	ToGetRipDistributeListArrayOutput() GetRipDistributeListArrayOutput
	ToGetRipDistributeListArrayOutputWithContext(context.Context) GetRipDistributeListArrayOutput
}

type GetRipDistributeListArray []GetRipDistributeListInput

func (GetRipDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipDistributeList)(nil)).Elem()
}

func (i GetRipDistributeListArray) ToGetRipDistributeListArrayOutput() GetRipDistributeListArrayOutput {
	return i.ToGetRipDistributeListArrayOutputWithContext(context.Background())
}

func (i GetRipDistributeListArray) ToGetRipDistributeListArrayOutputWithContext(ctx context.Context) GetRipDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipDistributeListArrayOutput)
}

type GetRipDistributeListOutput struct{ *pulumi.OutputState }

func (GetRipDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipDistributeList)(nil)).Elem()
}

func (o GetRipDistributeListOutput) ToGetRipDistributeListOutput() GetRipDistributeListOutput {
	return o
}

func (o GetRipDistributeListOutput) ToGetRipDistributeListOutputWithContext(ctx context.Context) GetRipDistributeListOutput {
	return o
}

// Offset list direction.
func (o GetRipDistributeListOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipDistributeList) string { return v.Direction }).(pulumi.StringOutput)
}

// Offset-list ID.
func (o GetRipDistributeListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipDistributeList) int { return v.Id }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRipDistributeListOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipDistributeList) string { return v.Interface }).(pulumi.StringOutput)
}

// Distribute access/prefix list name.
func (o GetRipDistributeListOutput) Listname() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipDistributeList) string { return v.Listname }).(pulumi.StringOutput)
}

// status
func (o GetRipDistributeListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipDistributeList) string { return v.Status }).(pulumi.StringOutput)
}

type GetRipDistributeListArrayOutput struct{ *pulumi.OutputState }

func (GetRipDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipDistributeList)(nil)).Elem()
}

func (o GetRipDistributeListArrayOutput) ToGetRipDistributeListArrayOutput() GetRipDistributeListArrayOutput {
	return o
}

func (o GetRipDistributeListArrayOutput) ToGetRipDistributeListArrayOutputWithContext(ctx context.Context) GetRipDistributeListArrayOutput {
	return o
}

func (o GetRipDistributeListArrayOutput) Index(i pulumi.IntInput) GetRipDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipDistributeList {
		return vs[0].([]GetRipDistributeList)[vs[1].(int)]
	}).(GetRipDistributeListOutput)
}

type GetRipInterface struct {
	// Authentication key-chain name.
	AuthKeychain string `pulumi:"authKeychain"`
	// Authentication mode.
	AuthMode string `pulumi:"authMode"`
	// Authentication string/password.
	AuthString string `pulumi:"authString"`
	// flags
	Flags int `pulumi:"flags"`
	// Interface name.
	Name string `pulumi:"name"`
	// Receive version.
	ReceiveVersion string `pulumi:"receiveVersion"`
	// Send version.
	SendVersion string `pulumi:"sendVersion"`
	// Enable/disable broadcast version 1 compatible packets.
	SendVersion2Broadcast string `pulumi:"sendVersion2Broadcast"`
	// Enable/disable split horizon.
	SplitHorizon string `pulumi:"splitHorizon"`
	// Enable/disable split horizon.
	SplitHorizonStatus string `pulumi:"splitHorizonStatus"`
}

// GetRipInterfaceInput is an input type that accepts GetRipInterfaceArgs and GetRipInterfaceOutput values.
// You can construct a concrete instance of `GetRipInterfaceInput` via:
//
//	GetRipInterfaceArgs{...}
type GetRipInterfaceInput interface {
	pulumi.Input

	ToGetRipInterfaceOutput() GetRipInterfaceOutput
	ToGetRipInterfaceOutputWithContext(context.Context) GetRipInterfaceOutput
}

type GetRipInterfaceArgs struct {
	// Authentication key-chain name.
	AuthKeychain pulumi.StringInput `pulumi:"authKeychain"`
	// Authentication mode.
	AuthMode pulumi.StringInput `pulumi:"authMode"`
	// Authentication string/password.
	AuthString pulumi.StringInput `pulumi:"authString"`
	// flags
	Flags pulumi.IntInput `pulumi:"flags"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Receive version.
	ReceiveVersion pulumi.StringInput `pulumi:"receiveVersion"`
	// Send version.
	SendVersion pulumi.StringInput `pulumi:"sendVersion"`
	// Enable/disable broadcast version 1 compatible packets.
	SendVersion2Broadcast pulumi.StringInput `pulumi:"sendVersion2Broadcast"`
	// Enable/disable split horizon.
	SplitHorizon pulumi.StringInput `pulumi:"splitHorizon"`
	// Enable/disable split horizon.
	SplitHorizonStatus pulumi.StringInput `pulumi:"splitHorizonStatus"`
}

func (GetRipInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipInterface)(nil)).Elem()
}

func (i GetRipInterfaceArgs) ToGetRipInterfaceOutput() GetRipInterfaceOutput {
	return i.ToGetRipInterfaceOutputWithContext(context.Background())
}

func (i GetRipInterfaceArgs) ToGetRipInterfaceOutputWithContext(ctx context.Context) GetRipInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipInterfaceOutput)
}

// GetRipInterfaceArrayInput is an input type that accepts GetRipInterfaceArray and GetRipInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRipInterfaceArrayInput` via:
//
//	GetRipInterfaceArray{ GetRipInterfaceArgs{...} }
type GetRipInterfaceArrayInput interface {
	pulumi.Input

	ToGetRipInterfaceArrayOutput() GetRipInterfaceArrayOutput
	ToGetRipInterfaceArrayOutputWithContext(context.Context) GetRipInterfaceArrayOutput
}

type GetRipInterfaceArray []GetRipInterfaceInput

func (GetRipInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipInterface)(nil)).Elem()
}

func (i GetRipInterfaceArray) ToGetRipInterfaceArrayOutput() GetRipInterfaceArrayOutput {
	return i.ToGetRipInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRipInterfaceArray) ToGetRipInterfaceArrayOutputWithContext(ctx context.Context) GetRipInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipInterfaceArrayOutput)
}

type GetRipInterfaceOutput struct{ *pulumi.OutputState }

func (GetRipInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipInterface)(nil)).Elem()
}

func (o GetRipInterfaceOutput) ToGetRipInterfaceOutput() GetRipInterfaceOutput {
	return o
}

func (o GetRipInterfaceOutput) ToGetRipInterfaceOutputWithContext(ctx context.Context) GetRipInterfaceOutput {
	return o
}

// Authentication key-chain name.
func (o GetRipInterfaceOutput) AuthKeychain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipInterface) string { return v.AuthKeychain }).(pulumi.StringOutput)
}

// Authentication mode.
func (o GetRipInterfaceOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipInterface) string { return v.AuthMode }).(pulumi.StringOutput)
}

// Authentication string/password.
func (o GetRipInterfaceOutput) AuthString() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipInterface) string { return v.AuthString }).(pulumi.StringOutput)
}

// flags
func (o GetRipInterfaceOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipInterface) int { return v.Flags }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRipInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipInterface) string { return v.Name }).(pulumi.StringOutput)
}

// Receive version.
func (o GetRipInterfaceOutput) ReceiveVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipInterface) string { return v.ReceiveVersion }).(pulumi.StringOutput)
}

// Send version.
func (o GetRipInterfaceOutput) SendVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipInterface) string { return v.SendVersion }).(pulumi.StringOutput)
}

// Enable/disable broadcast version 1 compatible packets.
func (o GetRipInterfaceOutput) SendVersion2Broadcast() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipInterface) string { return v.SendVersion2Broadcast }).(pulumi.StringOutput)
}

// Enable/disable split horizon.
func (o GetRipInterfaceOutput) SplitHorizon() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipInterface) string { return v.SplitHorizon }).(pulumi.StringOutput)
}

// Enable/disable split horizon.
func (o GetRipInterfaceOutput) SplitHorizonStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipInterface) string { return v.SplitHorizonStatus }).(pulumi.StringOutput)
}

type GetRipInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRipInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipInterface)(nil)).Elem()
}

func (o GetRipInterfaceArrayOutput) ToGetRipInterfaceArrayOutput() GetRipInterfaceArrayOutput {
	return o
}

func (o GetRipInterfaceArrayOutput) ToGetRipInterfaceArrayOutputWithContext(ctx context.Context) GetRipInterfaceArrayOutput {
	return o
}

func (o GetRipInterfaceArrayOutput) Index(i pulumi.IntInput) GetRipInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipInterface {
		return vs[0].([]GetRipInterface)[vs[1].(int)]
	}).(GetRipInterfaceOutput)
}

type GetRipNeighbor struct {
	// Offset-list ID.
	Id int `pulumi:"id"`
	// IP address.
	Ip string `pulumi:"ip"`
}

// GetRipNeighborInput is an input type that accepts GetRipNeighborArgs and GetRipNeighborOutput values.
// You can construct a concrete instance of `GetRipNeighborInput` via:
//
//	GetRipNeighborArgs{...}
type GetRipNeighborInput interface {
	pulumi.Input

	ToGetRipNeighborOutput() GetRipNeighborOutput
	ToGetRipNeighborOutputWithContext(context.Context) GetRipNeighborOutput
}

type GetRipNeighborArgs struct {
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IP address.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetRipNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipNeighbor)(nil)).Elem()
}

func (i GetRipNeighborArgs) ToGetRipNeighborOutput() GetRipNeighborOutput {
	return i.ToGetRipNeighborOutputWithContext(context.Background())
}

func (i GetRipNeighborArgs) ToGetRipNeighborOutputWithContext(ctx context.Context) GetRipNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipNeighborOutput)
}

// GetRipNeighborArrayInput is an input type that accepts GetRipNeighborArray and GetRipNeighborArrayOutput values.
// You can construct a concrete instance of `GetRipNeighborArrayInput` via:
//
//	GetRipNeighborArray{ GetRipNeighborArgs{...} }
type GetRipNeighborArrayInput interface {
	pulumi.Input

	ToGetRipNeighborArrayOutput() GetRipNeighborArrayOutput
	ToGetRipNeighborArrayOutputWithContext(context.Context) GetRipNeighborArrayOutput
}

type GetRipNeighborArray []GetRipNeighborInput

func (GetRipNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipNeighbor)(nil)).Elem()
}

func (i GetRipNeighborArray) ToGetRipNeighborArrayOutput() GetRipNeighborArrayOutput {
	return i.ToGetRipNeighborArrayOutputWithContext(context.Background())
}

func (i GetRipNeighborArray) ToGetRipNeighborArrayOutputWithContext(ctx context.Context) GetRipNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipNeighborArrayOutput)
}

type GetRipNeighborOutput struct{ *pulumi.OutputState }

func (GetRipNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipNeighbor)(nil)).Elem()
}

func (o GetRipNeighborOutput) ToGetRipNeighborOutput() GetRipNeighborOutput {
	return o
}

func (o GetRipNeighborOutput) ToGetRipNeighborOutputWithContext(ctx context.Context) GetRipNeighborOutput {
	return o
}

// Offset-list ID.
func (o GetRipNeighborOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipNeighbor) int { return v.Id }).(pulumi.IntOutput)
}

// IP address.
func (o GetRipNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipNeighbor) string { return v.Ip }).(pulumi.StringOutput)
}

type GetRipNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetRipNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipNeighbor)(nil)).Elem()
}

func (o GetRipNeighborArrayOutput) ToGetRipNeighborArrayOutput() GetRipNeighborArrayOutput {
	return o
}

func (o GetRipNeighborArrayOutput) ToGetRipNeighborArrayOutputWithContext(ctx context.Context) GetRipNeighborArrayOutput {
	return o
}

func (o GetRipNeighborArrayOutput) Index(i pulumi.IntInput) GetRipNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipNeighbor {
		return vs[0].([]GetRipNeighbor)[vs[1].(int)]
	}).(GetRipNeighborOutput)
}

type GetRipNetwork struct {
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Network prefix.
	Prefix string `pulumi:"prefix"`
}

// GetRipNetworkInput is an input type that accepts GetRipNetworkArgs and GetRipNetworkOutput values.
// You can construct a concrete instance of `GetRipNetworkInput` via:
//
//	GetRipNetworkArgs{...}
type GetRipNetworkInput interface {
	pulumi.Input

	ToGetRipNetworkOutput() GetRipNetworkOutput
	ToGetRipNetworkOutputWithContext(context.Context) GetRipNetworkOutput
}

type GetRipNetworkArgs struct {
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Network prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetRipNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipNetwork)(nil)).Elem()
}

func (i GetRipNetworkArgs) ToGetRipNetworkOutput() GetRipNetworkOutput {
	return i.ToGetRipNetworkOutputWithContext(context.Background())
}

func (i GetRipNetworkArgs) ToGetRipNetworkOutputWithContext(ctx context.Context) GetRipNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipNetworkOutput)
}

// GetRipNetworkArrayInput is an input type that accepts GetRipNetworkArray and GetRipNetworkArrayOutput values.
// You can construct a concrete instance of `GetRipNetworkArrayInput` via:
//
//	GetRipNetworkArray{ GetRipNetworkArgs{...} }
type GetRipNetworkArrayInput interface {
	pulumi.Input

	ToGetRipNetworkArrayOutput() GetRipNetworkArrayOutput
	ToGetRipNetworkArrayOutputWithContext(context.Context) GetRipNetworkArrayOutput
}

type GetRipNetworkArray []GetRipNetworkInput

func (GetRipNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipNetwork)(nil)).Elem()
}

func (i GetRipNetworkArray) ToGetRipNetworkArrayOutput() GetRipNetworkArrayOutput {
	return i.ToGetRipNetworkArrayOutputWithContext(context.Background())
}

func (i GetRipNetworkArray) ToGetRipNetworkArrayOutputWithContext(ctx context.Context) GetRipNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipNetworkArrayOutput)
}

type GetRipNetworkOutput struct{ *pulumi.OutputState }

func (GetRipNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipNetwork)(nil)).Elem()
}

func (o GetRipNetworkOutput) ToGetRipNetworkOutput() GetRipNetworkOutput {
	return o
}

func (o GetRipNetworkOutput) ToGetRipNetworkOutputWithContext(ctx context.Context) GetRipNetworkOutput {
	return o
}

// Offset-list ID.
func (o GetRipNetworkOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipNetwork) int { return v.Id }).(pulumi.IntOutput)
}

// Network prefix.
func (o GetRipNetworkOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipNetwork) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetRipNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetRipNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipNetwork)(nil)).Elem()
}

func (o GetRipNetworkArrayOutput) ToGetRipNetworkArrayOutput() GetRipNetworkArrayOutput {
	return o
}

func (o GetRipNetworkArrayOutput) ToGetRipNetworkArrayOutputWithContext(ctx context.Context) GetRipNetworkArrayOutput {
	return o
}

func (o GetRipNetworkArrayOutput) Index(i pulumi.IntInput) GetRipNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipNetwork {
		return vs[0].([]GetRipNetwork)[vs[1].(int)]
	}).(GetRipNetworkOutput)
}

type GetRipOffsetList struct {
	// Access list name.
	AccessList string `pulumi:"accessList"`
	// Offset list direction.
	Direction string `pulumi:"direction"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Interface name.
	Interface string `pulumi:"interface"`
	// offset
	Offset int `pulumi:"offset"`
	// status
	Status string `pulumi:"status"`
}

// GetRipOffsetListInput is an input type that accepts GetRipOffsetListArgs and GetRipOffsetListOutput values.
// You can construct a concrete instance of `GetRipOffsetListInput` via:
//
//	GetRipOffsetListArgs{...}
type GetRipOffsetListInput interface {
	pulumi.Input

	ToGetRipOffsetListOutput() GetRipOffsetListOutput
	ToGetRipOffsetListOutputWithContext(context.Context) GetRipOffsetListOutput
}

type GetRipOffsetListArgs struct {
	// Access list name.
	AccessList pulumi.StringInput `pulumi:"accessList"`
	// Offset list direction.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// offset
	Offset pulumi.IntInput `pulumi:"offset"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRipOffsetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipOffsetList)(nil)).Elem()
}

func (i GetRipOffsetListArgs) ToGetRipOffsetListOutput() GetRipOffsetListOutput {
	return i.ToGetRipOffsetListOutputWithContext(context.Background())
}

func (i GetRipOffsetListArgs) ToGetRipOffsetListOutputWithContext(ctx context.Context) GetRipOffsetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipOffsetListOutput)
}

// GetRipOffsetListArrayInput is an input type that accepts GetRipOffsetListArray and GetRipOffsetListArrayOutput values.
// You can construct a concrete instance of `GetRipOffsetListArrayInput` via:
//
//	GetRipOffsetListArray{ GetRipOffsetListArgs{...} }
type GetRipOffsetListArrayInput interface {
	pulumi.Input

	ToGetRipOffsetListArrayOutput() GetRipOffsetListArrayOutput
	ToGetRipOffsetListArrayOutputWithContext(context.Context) GetRipOffsetListArrayOutput
}

type GetRipOffsetListArray []GetRipOffsetListInput

func (GetRipOffsetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipOffsetList)(nil)).Elem()
}

func (i GetRipOffsetListArray) ToGetRipOffsetListArrayOutput() GetRipOffsetListArrayOutput {
	return i.ToGetRipOffsetListArrayOutputWithContext(context.Background())
}

func (i GetRipOffsetListArray) ToGetRipOffsetListArrayOutputWithContext(ctx context.Context) GetRipOffsetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipOffsetListArrayOutput)
}

type GetRipOffsetListOutput struct{ *pulumi.OutputState }

func (GetRipOffsetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipOffsetList)(nil)).Elem()
}

func (o GetRipOffsetListOutput) ToGetRipOffsetListOutput() GetRipOffsetListOutput {
	return o
}

func (o GetRipOffsetListOutput) ToGetRipOffsetListOutputWithContext(ctx context.Context) GetRipOffsetListOutput {
	return o
}

// Access list name.
func (o GetRipOffsetListOutput) AccessList() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipOffsetList) string { return v.AccessList }).(pulumi.StringOutput)
}

// Offset list direction.
func (o GetRipOffsetListOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipOffsetList) string { return v.Direction }).(pulumi.StringOutput)
}

// Offset-list ID.
func (o GetRipOffsetListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipOffsetList) int { return v.Id }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRipOffsetListOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipOffsetList) string { return v.Interface }).(pulumi.StringOutput)
}

// offset
func (o GetRipOffsetListOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipOffsetList) int { return v.Offset }).(pulumi.IntOutput)
}

// status
func (o GetRipOffsetListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipOffsetList) string { return v.Status }).(pulumi.StringOutput)
}

type GetRipOffsetListArrayOutput struct{ *pulumi.OutputState }

func (GetRipOffsetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipOffsetList)(nil)).Elem()
}

func (o GetRipOffsetListArrayOutput) ToGetRipOffsetListArrayOutput() GetRipOffsetListArrayOutput {
	return o
}

func (o GetRipOffsetListArrayOutput) ToGetRipOffsetListArrayOutputWithContext(ctx context.Context) GetRipOffsetListArrayOutput {
	return o
}

func (o GetRipOffsetListArrayOutput) Index(i pulumi.IntInput) GetRipOffsetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipOffsetList {
		return vs[0].([]GetRipOffsetList)[vs[1].(int)]
	}).(GetRipOffsetListOutput)
}

type GetRipPassiveInterface struct {
	// Interface name.
	Name string `pulumi:"name"`
}

// GetRipPassiveInterfaceInput is an input type that accepts GetRipPassiveInterfaceArgs and GetRipPassiveInterfaceOutput values.
// You can construct a concrete instance of `GetRipPassiveInterfaceInput` via:
//
//	GetRipPassiveInterfaceArgs{...}
type GetRipPassiveInterfaceInput interface {
	pulumi.Input

	ToGetRipPassiveInterfaceOutput() GetRipPassiveInterfaceOutput
	ToGetRipPassiveInterfaceOutputWithContext(context.Context) GetRipPassiveInterfaceOutput
}

type GetRipPassiveInterfaceArgs struct {
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRipPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipPassiveInterface)(nil)).Elem()
}

func (i GetRipPassiveInterfaceArgs) ToGetRipPassiveInterfaceOutput() GetRipPassiveInterfaceOutput {
	return i.ToGetRipPassiveInterfaceOutputWithContext(context.Background())
}

func (i GetRipPassiveInterfaceArgs) ToGetRipPassiveInterfaceOutputWithContext(ctx context.Context) GetRipPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipPassiveInterfaceOutput)
}

// GetRipPassiveInterfaceArrayInput is an input type that accepts GetRipPassiveInterfaceArray and GetRipPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRipPassiveInterfaceArrayInput` via:
//
//	GetRipPassiveInterfaceArray{ GetRipPassiveInterfaceArgs{...} }
type GetRipPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToGetRipPassiveInterfaceArrayOutput() GetRipPassiveInterfaceArrayOutput
	ToGetRipPassiveInterfaceArrayOutputWithContext(context.Context) GetRipPassiveInterfaceArrayOutput
}

type GetRipPassiveInterfaceArray []GetRipPassiveInterfaceInput

func (GetRipPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipPassiveInterface)(nil)).Elem()
}

func (i GetRipPassiveInterfaceArray) ToGetRipPassiveInterfaceArrayOutput() GetRipPassiveInterfaceArrayOutput {
	return i.ToGetRipPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRipPassiveInterfaceArray) ToGetRipPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRipPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipPassiveInterfaceArrayOutput)
}

type GetRipPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (GetRipPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipPassiveInterface)(nil)).Elem()
}

func (o GetRipPassiveInterfaceOutput) ToGetRipPassiveInterfaceOutput() GetRipPassiveInterfaceOutput {
	return o
}

func (o GetRipPassiveInterfaceOutput) ToGetRipPassiveInterfaceOutputWithContext(ctx context.Context) GetRipPassiveInterfaceOutput {
	return o
}

// Interface name.
func (o GetRipPassiveInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipPassiveInterface) string { return v.Name }).(pulumi.StringOutput)
}

type GetRipPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRipPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipPassiveInterface)(nil)).Elem()
}

func (o GetRipPassiveInterfaceArrayOutput) ToGetRipPassiveInterfaceArrayOutput() GetRipPassiveInterfaceArrayOutput {
	return o
}

func (o GetRipPassiveInterfaceArrayOutput) ToGetRipPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRipPassiveInterfaceArrayOutput {
	return o
}

func (o GetRipPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) GetRipPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipPassiveInterface {
		return vs[0].([]GetRipPassiveInterface)[vs[1].(int)]
	}).(GetRipPassiveInterfaceOutput)
}

type GetRipRedistribute struct {
	// Redistribute metric setting.
	Metric int `pulumi:"metric"`
	// Interface name.
	Name string `pulumi:"name"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// status
	Status string `pulumi:"status"`
}

// GetRipRedistributeInput is an input type that accepts GetRipRedistributeArgs and GetRipRedistributeOutput values.
// You can construct a concrete instance of `GetRipRedistributeInput` via:
//
//	GetRipRedistributeArgs{...}
type GetRipRedistributeInput interface {
	pulumi.Input

	ToGetRipRedistributeOutput() GetRipRedistributeOutput
	ToGetRipRedistributeOutputWithContext(context.Context) GetRipRedistributeOutput
}

type GetRipRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRipRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipRedistribute)(nil)).Elem()
}

func (i GetRipRedistributeArgs) ToGetRipRedistributeOutput() GetRipRedistributeOutput {
	return i.ToGetRipRedistributeOutputWithContext(context.Background())
}

func (i GetRipRedistributeArgs) ToGetRipRedistributeOutputWithContext(ctx context.Context) GetRipRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipRedistributeOutput)
}

// GetRipRedistributeArrayInput is an input type that accepts GetRipRedistributeArray and GetRipRedistributeArrayOutput values.
// You can construct a concrete instance of `GetRipRedistributeArrayInput` via:
//
//	GetRipRedistributeArray{ GetRipRedistributeArgs{...} }
type GetRipRedistributeArrayInput interface {
	pulumi.Input

	ToGetRipRedistributeArrayOutput() GetRipRedistributeArrayOutput
	ToGetRipRedistributeArrayOutputWithContext(context.Context) GetRipRedistributeArrayOutput
}

type GetRipRedistributeArray []GetRipRedistributeInput

func (GetRipRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipRedistribute)(nil)).Elem()
}

func (i GetRipRedistributeArray) ToGetRipRedistributeArrayOutput() GetRipRedistributeArrayOutput {
	return i.ToGetRipRedistributeArrayOutputWithContext(context.Background())
}

func (i GetRipRedistributeArray) ToGetRipRedistributeArrayOutputWithContext(ctx context.Context) GetRipRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipRedistributeArrayOutput)
}

type GetRipRedistributeOutput struct{ *pulumi.OutputState }

func (GetRipRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipRedistribute)(nil)).Elem()
}

func (o GetRipRedistributeOutput) ToGetRipRedistributeOutput() GetRipRedistributeOutput {
	return o
}

func (o GetRipRedistributeOutput) ToGetRipRedistributeOutputWithContext(ctx context.Context) GetRipRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o GetRipRedistributeOutput) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipRedistribute) int { return v.Metric }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRipRedistributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipRedistribute) string { return v.Name }).(pulumi.StringOutput)
}

// Route map name.
func (o GetRipRedistributeOutput) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipRedistribute) string { return v.Routemap }).(pulumi.StringOutput)
}

// status
func (o GetRipRedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipRedistribute) string { return v.Status }).(pulumi.StringOutput)
}

type GetRipRedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetRipRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipRedistribute)(nil)).Elem()
}

func (o GetRipRedistributeArrayOutput) ToGetRipRedistributeArrayOutput() GetRipRedistributeArrayOutput {
	return o
}

func (o GetRipRedistributeArrayOutput) ToGetRipRedistributeArrayOutputWithContext(ctx context.Context) GetRipRedistributeArrayOutput {
	return o
}

func (o GetRipRedistributeArrayOutput) Index(i pulumi.IntInput) GetRipRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipRedistribute {
		return vs[0].([]GetRipRedistribute)[vs[1].(int)]
	}).(GetRipRedistributeOutput)
}

type GetRipngAggregateAddress struct {
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 string `pulumi:"prefix6"`
}

// GetRipngAggregateAddressInput is an input type that accepts GetRipngAggregateAddressArgs and GetRipngAggregateAddressOutput values.
// You can construct a concrete instance of `GetRipngAggregateAddressInput` via:
//
//	GetRipngAggregateAddressArgs{...}
type GetRipngAggregateAddressInput interface {
	pulumi.Input

	ToGetRipngAggregateAddressOutput() GetRipngAggregateAddressOutput
	ToGetRipngAggregateAddressOutputWithContext(context.Context) GetRipngAggregateAddressOutput
}

type GetRipngAggregateAddressArgs struct {
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetRipngAggregateAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngAggregateAddress)(nil)).Elem()
}

func (i GetRipngAggregateAddressArgs) ToGetRipngAggregateAddressOutput() GetRipngAggregateAddressOutput {
	return i.ToGetRipngAggregateAddressOutputWithContext(context.Background())
}

func (i GetRipngAggregateAddressArgs) ToGetRipngAggregateAddressOutputWithContext(ctx context.Context) GetRipngAggregateAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngAggregateAddressOutput)
}

// GetRipngAggregateAddressArrayInput is an input type that accepts GetRipngAggregateAddressArray and GetRipngAggregateAddressArrayOutput values.
// You can construct a concrete instance of `GetRipngAggregateAddressArrayInput` via:
//
//	GetRipngAggregateAddressArray{ GetRipngAggregateAddressArgs{...} }
type GetRipngAggregateAddressArrayInput interface {
	pulumi.Input

	ToGetRipngAggregateAddressArrayOutput() GetRipngAggregateAddressArrayOutput
	ToGetRipngAggregateAddressArrayOutputWithContext(context.Context) GetRipngAggregateAddressArrayOutput
}

type GetRipngAggregateAddressArray []GetRipngAggregateAddressInput

func (GetRipngAggregateAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngAggregateAddress)(nil)).Elem()
}

func (i GetRipngAggregateAddressArray) ToGetRipngAggregateAddressArrayOutput() GetRipngAggregateAddressArrayOutput {
	return i.ToGetRipngAggregateAddressArrayOutputWithContext(context.Background())
}

func (i GetRipngAggregateAddressArray) ToGetRipngAggregateAddressArrayOutputWithContext(ctx context.Context) GetRipngAggregateAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngAggregateAddressArrayOutput)
}

type GetRipngAggregateAddressOutput struct{ *pulumi.OutputState }

func (GetRipngAggregateAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngAggregateAddress)(nil)).Elem()
}

func (o GetRipngAggregateAddressOutput) ToGetRipngAggregateAddressOutput() GetRipngAggregateAddressOutput {
	return o
}

func (o GetRipngAggregateAddressOutput) ToGetRipngAggregateAddressOutputWithContext(ctx context.Context) GetRipngAggregateAddressOutput {
	return o
}

// Offset-list ID.
func (o GetRipngAggregateAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipngAggregateAddress) int { return v.Id }).(pulumi.IntOutput)
}

// Aggregate address prefix.
func (o GetRipngAggregateAddressOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngAggregateAddress) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetRipngAggregateAddressArrayOutput struct{ *pulumi.OutputState }

func (GetRipngAggregateAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngAggregateAddress)(nil)).Elem()
}

func (o GetRipngAggregateAddressArrayOutput) ToGetRipngAggregateAddressArrayOutput() GetRipngAggregateAddressArrayOutput {
	return o
}

func (o GetRipngAggregateAddressArrayOutput) ToGetRipngAggregateAddressArrayOutputWithContext(ctx context.Context) GetRipngAggregateAddressArrayOutput {
	return o
}

func (o GetRipngAggregateAddressArrayOutput) Index(i pulumi.IntInput) GetRipngAggregateAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipngAggregateAddress {
		return vs[0].([]GetRipngAggregateAddress)[vs[1].(int)]
	}).(GetRipngAggregateAddressOutput)
}

type GetRipngDistance struct {
	// IPv6 access list name.
	AccessList6 string `pulumi:"accessList6"`
	// Distance (1 - 255).
	Distance int `pulumi:"distance"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 string `pulumi:"prefix6"`
}

// GetRipngDistanceInput is an input type that accepts GetRipngDistanceArgs and GetRipngDistanceOutput values.
// You can construct a concrete instance of `GetRipngDistanceInput` via:
//
//	GetRipngDistanceArgs{...}
type GetRipngDistanceInput interface {
	pulumi.Input

	ToGetRipngDistanceOutput() GetRipngDistanceOutput
	ToGetRipngDistanceOutputWithContext(context.Context) GetRipngDistanceOutput
}

type GetRipngDistanceArgs struct {
	// IPv6 access list name.
	AccessList6 pulumi.StringInput `pulumi:"accessList6"`
	// Distance (1 - 255).
	Distance pulumi.IntInput `pulumi:"distance"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 pulumi.StringInput `pulumi:"prefix6"`
}

func (GetRipngDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngDistance)(nil)).Elem()
}

func (i GetRipngDistanceArgs) ToGetRipngDistanceOutput() GetRipngDistanceOutput {
	return i.ToGetRipngDistanceOutputWithContext(context.Background())
}

func (i GetRipngDistanceArgs) ToGetRipngDistanceOutputWithContext(ctx context.Context) GetRipngDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngDistanceOutput)
}

// GetRipngDistanceArrayInput is an input type that accepts GetRipngDistanceArray and GetRipngDistanceArrayOutput values.
// You can construct a concrete instance of `GetRipngDistanceArrayInput` via:
//
//	GetRipngDistanceArray{ GetRipngDistanceArgs{...} }
type GetRipngDistanceArrayInput interface {
	pulumi.Input

	ToGetRipngDistanceArrayOutput() GetRipngDistanceArrayOutput
	ToGetRipngDistanceArrayOutputWithContext(context.Context) GetRipngDistanceArrayOutput
}

type GetRipngDistanceArray []GetRipngDistanceInput

func (GetRipngDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngDistance)(nil)).Elem()
}

func (i GetRipngDistanceArray) ToGetRipngDistanceArrayOutput() GetRipngDistanceArrayOutput {
	return i.ToGetRipngDistanceArrayOutputWithContext(context.Background())
}

func (i GetRipngDistanceArray) ToGetRipngDistanceArrayOutputWithContext(ctx context.Context) GetRipngDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngDistanceArrayOutput)
}

type GetRipngDistanceOutput struct{ *pulumi.OutputState }

func (GetRipngDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngDistance)(nil)).Elem()
}

func (o GetRipngDistanceOutput) ToGetRipngDistanceOutput() GetRipngDistanceOutput {
	return o
}

func (o GetRipngDistanceOutput) ToGetRipngDistanceOutputWithContext(ctx context.Context) GetRipngDistanceOutput {
	return o
}

// IPv6 access list name.
func (o GetRipngDistanceOutput) AccessList6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngDistance) string { return v.AccessList6 }).(pulumi.StringOutput)
}

// Distance (1 - 255).
func (o GetRipngDistanceOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipngDistance) int { return v.Distance }).(pulumi.IntOutput)
}

// Offset-list ID.
func (o GetRipngDistanceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipngDistance) int { return v.Id }).(pulumi.IntOutput)
}

// Aggregate address prefix.
func (o GetRipngDistanceOutput) Prefix6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngDistance) string { return v.Prefix6 }).(pulumi.StringOutput)
}

type GetRipngDistanceArrayOutput struct{ *pulumi.OutputState }

func (GetRipngDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngDistance)(nil)).Elem()
}

func (o GetRipngDistanceArrayOutput) ToGetRipngDistanceArrayOutput() GetRipngDistanceArrayOutput {
	return o
}

func (o GetRipngDistanceArrayOutput) ToGetRipngDistanceArrayOutputWithContext(ctx context.Context) GetRipngDistanceArrayOutput {
	return o
}

func (o GetRipngDistanceArrayOutput) Index(i pulumi.IntInput) GetRipngDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipngDistance {
		return vs[0].([]GetRipngDistance)[vs[1].(int)]
	}).(GetRipngDistanceOutput)
}

type GetRipngDistributeList struct {
	// Offset list direction.
	Direction string `pulumi:"direction"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Interface name.
	Interface string `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname string `pulumi:"listname"`
	// status
	Status string `pulumi:"status"`
}

// GetRipngDistributeListInput is an input type that accepts GetRipngDistributeListArgs and GetRipngDistributeListOutput values.
// You can construct a concrete instance of `GetRipngDistributeListInput` via:
//
//	GetRipngDistributeListArgs{...}
type GetRipngDistributeListInput interface {
	pulumi.Input

	ToGetRipngDistributeListOutput() GetRipngDistributeListOutput
	ToGetRipngDistributeListOutputWithContext(context.Context) GetRipngDistributeListOutput
}

type GetRipngDistributeListArgs struct {
	// Offset list direction.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname pulumi.StringInput `pulumi:"listname"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRipngDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngDistributeList)(nil)).Elem()
}

func (i GetRipngDistributeListArgs) ToGetRipngDistributeListOutput() GetRipngDistributeListOutput {
	return i.ToGetRipngDistributeListOutputWithContext(context.Background())
}

func (i GetRipngDistributeListArgs) ToGetRipngDistributeListOutputWithContext(ctx context.Context) GetRipngDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngDistributeListOutput)
}

// GetRipngDistributeListArrayInput is an input type that accepts GetRipngDistributeListArray and GetRipngDistributeListArrayOutput values.
// You can construct a concrete instance of `GetRipngDistributeListArrayInput` via:
//
//	GetRipngDistributeListArray{ GetRipngDistributeListArgs{...} }
type GetRipngDistributeListArrayInput interface {
	pulumi.Input

	ToGetRipngDistributeListArrayOutput() GetRipngDistributeListArrayOutput
	ToGetRipngDistributeListArrayOutputWithContext(context.Context) GetRipngDistributeListArrayOutput
}

type GetRipngDistributeListArray []GetRipngDistributeListInput

func (GetRipngDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngDistributeList)(nil)).Elem()
}

func (i GetRipngDistributeListArray) ToGetRipngDistributeListArrayOutput() GetRipngDistributeListArrayOutput {
	return i.ToGetRipngDistributeListArrayOutputWithContext(context.Background())
}

func (i GetRipngDistributeListArray) ToGetRipngDistributeListArrayOutputWithContext(ctx context.Context) GetRipngDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngDistributeListArrayOutput)
}

type GetRipngDistributeListOutput struct{ *pulumi.OutputState }

func (GetRipngDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngDistributeList)(nil)).Elem()
}

func (o GetRipngDistributeListOutput) ToGetRipngDistributeListOutput() GetRipngDistributeListOutput {
	return o
}

func (o GetRipngDistributeListOutput) ToGetRipngDistributeListOutputWithContext(ctx context.Context) GetRipngDistributeListOutput {
	return o
}

// Offset list direction.
func (o GetRipngDistributeListOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngDistributeList) string { return v.Direction }).(pulumi.StringOutput)
}

// Offset-list ID.
func (o GetRipngDistributeListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipngDistributeList) int { return v.Id }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRipngDistributeListOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngDistributeList) string { return v.Interface }).(pulumi.StringOutput)
}

// Distribute access/prefix list name.
func (o GetRipngDistributeListOutput) Listname() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngDistributeList) string { return v.Listname }).(pulumi.StringOutput)
}

// status
func (o GetRipngDistributeListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngDistributeList) string { return v.Status }).(pulumi.StringOutput)
}

type GetRipngDistributeListArrayOutput struct{ *pulumi.OutputState }

func (GetRipngDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngDistributeList)(nil)).Elem()
}

func (o GetRipngDistributeListArrayOutput) ToGetRipngDistributeListArrayOutput() GetRipngDistributeListArrayOutput {
	return o
}

func (o GetRipngDistributeListArrayOutput) ToGetRipngDistributeListArrayOutputWithContext(ctx context.Context) GetRipngDistributeListArrayOutput {
	return o
}

func (o GetRipngDistributeListArrayOutput) Index(i pulumi.IntInput) GetRipngDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipngDistributeList {
		return vs[0].([]GetRipngDistributeList)[vs[1].(int)]
	}).(GetRipngDistributeListOutput)
}

type GetRipngInterface struct {
	// Flags.
	Flags int `pulumi:"flags"`
	// Interface name.
	Name string `pulumi:"name"`
	// Enable/disable split horizon.
	SplitHorizon string `pulumi:"splitHorizon"`
	// Enable/disable split horizon.
	SplitHorizonStatus string `pulumi:"splitHorizonStatus"`
}

// GetRipngInterfaceInput is an input type that accepts GetRipngInterfaceArgs and GetRipngInterfaceOutput values.
// You can construct a concrete instance of `GetRipngInterfaceInput` via:
//
//	GetRipngInterfaceArgs{...}
type GetRipngInterfaceInput interface {
	pulumi.Input

	ToGetRipngInterfaceOutput() GetRipngInterfaceOutput
	ToGetRipngInterfaceOutputWithContext(context.Context) GetRipngInterfaceOutput
}

type GetRipngInterfaceArgs struct {
	// Flags.
	Flags pulumi.IntInput `pulumi:"flags"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Enable/disable split horizon.
	SplitHorizon pulumi.StringInput `pulumi:"splitHorizon"`
	// Enable/disable split horizon.
	SplitHorizonStatus pulumi.StringInput `pulumi:"splitHorizonStatus"`
}

func (GetRipngInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngInterface)(nil)).Elem()
}

func (i GetRipngInterfaceArgs) ToGetRipngInterfaceOutput() GetRipngInterfaceOutput {
	return i.ToGetRipngInterfaceOutputWithContext(context.Background())
}

func (i GetRipngInterfaceArgs) ToGetRipngInterfaceOutputWithContext(ctx context.Context) GetRipngInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngInterfaceOutput)
}

// GetRipngInterfaceArrayInput is an input type that accepts GetRipngInterfaceArray and GetRipngInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRipngInterfaceArrayInput` via:
//
//	GetRipngInterfaceArray{ GetRipngInterfaceArgs{...} }
type GetRipngInterfaceArrayInput interface {
	pulumi.Input

	ToGetRipngInterfaceArrayOutput() GetRipngInterfaceArrayOutput
	ToGetRipngInterfaceArrayOutputWithContext(context.Context) GetRipngInterfaceArrayOutput
}

type GetRipngInterfaceArray []GetRipngInterfaceInput

func (GetRipngInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngInterface)(nil)).Elem()
}

func (i GetRipngInterfaceArray) ToGetRipngInterfaceArrayOutput() GetRipngInterfaceArrayOutput {
	return i.ToGetRipngInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRipngInterfaceArray) ToGetRipngInterfaceArrayOutputWithContext(ctx context.Context) GetRipngInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngInterfaceArrayOutput)
}

type GetRipngInterfaceOutput struct{ *pulumi.OutputState }

func (GetRipngInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngInterface)(nil)).Elem()
}

func (o GetRipngInterfaceOutput) ToGetRipngInterfaceOutput() GetRipngInterfaceOutput {
	return o
}

func (o GetRipngInterfaceOutput) ToGetRipngInterfaceOutputWithContext(ctx context.Context) GetRipngInterfaceOutput {
	return o
}

// Flags.
func (o GetRipngInterfaceOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipngInterface) int { return v.Flags }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRipngInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngInterface) string { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable split horizon.
func (o GetRipngInterfaceOutput) SplitHorizon() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngInterface) string { return v.SplitHorizon }).(pulumi.StringOutput)
}

// Enable/disable split horizon.
func (o GetRipngInterfaceOutput) SplitHorizonStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngInterface) string { return v.SplitHorizonStatus }).(pulumi.StringOutput)
}

type GetRipngInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRipngInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngInterface)(nil)).Elem()
}

func (o GetRipngInterfaceArrayOutput) ToGetRipngInterfaceArrayOutput() GetRipngInterfaceArrayOutput {
	return o
}

func (o GetRipngInterfaceArrayOutput) ToGetRipngInterfaceArrayOutputWithContext(ctx context.Context) GetRipngInterfaceArrayOutput {
	return o
}

func (o GetRipngInterfaceArrayOutput) Index(i pulumi.IntInput) GetRipngInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipngInterface {
		return vs[0].([]GetRipngInterface)[vs[1].(int)]
	}).(GetRipngInterfaceOutput)
}

type GetRipngNeighbor struct {
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Interface name.
	Interface string `pulumi:"interface"`
	// IPv6 link-local address.
	Ip6 string `pulumi:"ip6"`
}

// GetRipngNeighborInput is an input type that accepts GetRipngNeighborArgs and GetRipngNeighborOutput values.
// You can construct a concrete instance of `GetRipngNeighborInput` via:
//
//	GetRipngNeighborArgs{...}
type GetRipngNeighborInput interface {
	pulumi.Input

	ToGetRipngNeighborOutput() GetRipngNeighborOutput
	ToGetRipngNeighborOutputWithContext(context.Context) GetRipngNeighborOutput
}

type GetRipngNeighborArgs struct {
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// IPv6 link-local address.
	Ip6 pulumi.StringInput `pulumi:"ip6"`
}

func (GetRipngNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngNeighbor)(nil)).Elem()
}

func (i GetRipngNeighborArgs) ToGetRipngNeighborOutput() GetRipngNeighborOutput {
	return i.ToGetRipngNeighborOutputWithContext(context.Background())
}

func (i GetRipngNeighborArgs) ToGetRipngNeighborOutputWithContext(ctx context.Context) GetRipngNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngNeighborOutput)
}

// GetRipngNeighborArrayInput is an input type that accepts GetRipngNeighborArray and GetRipngNeighborArrayOutput values.
// You can construct a concrete instance of `GetRipngNeighborArrayInput` via:
//
//	GetRipngNeighborArray{ GetRipngNeighborArgs{...} }
type GetRipngNeighborArrayInput interface {
	pulumi.Input

	ToGetRipngNeighborArrayOutput() GetRipngNeighborArrayOutput
	ToGetRipngNeighborArrayOutputWithContext(context.Context) GetRipngNeighborArrayOutput
}

type GetRipngNeighborArray []GetRipngNeighborInput

func (GetRipngNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngNeighbor)(nil)).Elem()
}

func (i GetRipngNeighborArray) ToGetRipngNeighborArrayOutput() GetRipngNeighborArrayOutput {
	return i.ToGetRipngNeighborArrayOutputWithContext(context.Background())
}

func (i GetRipngNeighborArray) ToGetRipngNeighborArrayOutputWithContext(ctx context.Context) GetRipngNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngNeighborArrayOutput)
}

type GetRipngNeighborOutput struct{ *pulumi.OutputState }

func (GetRipngNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngNeighbor)(nil)).Elem()
}

func (o GetRipngNeighborOutput) ToGetRipngNeighborOutput() GetRipngNeighborOutput {
	return o
}

func (o GetRipngNeighborOutput) ToGetRipngNeighborOutputWithContext(ctx context.Context) GetRipngNeighborOutput {
	return o
}

// Offset-list ID.
func (o GetRipngNeighborOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipngNeighbor) int { return v.Id }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRipngNeighborOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngNeighbor) string { return v.Interface }).(pulumi.StringOutput)
}

// IPv6 link-local address.
func (o GetRipngNeighborOutput) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngNeighbor) string { return v.Ip6 }).(pulumi.StringOutput)
}

type GetRipngNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetRipngNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngNeighbor)(nil)).Elem()
}

func (o GetRipngNeighborArrayOutput) ToGetRipngNeighborArrayOutput() GetRipngNeighborArrayOutput {
	return o
}

func (o GetRipngNeighborArrayOutput) ToGetRipngNeighborArrayOutputWithContext(ctx context.Context) GetRipngNeighborArrayOutput {
	return o
}

func (o GetRipngNeighborArrayOutput) Index(i pulumi.IntInput) GetRipngNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipngNeighbor {
		return vs[0].([]GetRipngNeighbor)[vs[1].(int)]
	}).(GetRipngNeighborOutput)
}

type GetRipngNetwork struct {
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Network IPv6 link-local prefix.
	Prefix string `pulumi:"prefix"`
}

// GetRipngNetworkInput is an input type that accepts GetRipngNetworkArgs and GetRipngNetworkOutput values.
// You can construct a concrete instance of `GetRipngNetworkInput` via:
//
//	GetRipngNetworkArgs{...}
type GetRipngNetworkInput interface {
	pulumi.Input

	ToGetRipngNetworkOutput() GetRipngNetworkOutput
	ToGetRipngNetworkOutputWithContext(context.Context) GetRipngNetworkOutput
}

type GetRipngNetworkArgs struct {
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Network IPv6 link-local prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetRipngNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngNetwork)(nil)).Elem()
}

func (i GetRipngNetworkArgs) ToGetRipngNetworkOutput() GetRipngNetworkOutput {
	return i.ToGetRipngNetworkOutputWithContext(context.Background())
}

func (i GetRipngNetworkArgs) ToGetRipngNetworkOutputWithContext(ctx context.Context) GetRipngNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngNetworkOutput)
}

// GetRipngNetworkArrayInput is an input type that accepts GetRipngNetworkArray and GetRipngNetworkArrayOutput values.
// You can construct a concrete instance of `GetRipngNetworkArrayInput` via:
//
//	GetRipngNetworkArray{ GetRipngNetworkArgs{...} }
type GetRipngNetworkArrayInput interface {
	pulumi.Input

	ToGetRipngNetworkArrayOutput() GetRipngNetworkArrayOutput
	ToGetRipngNetworkArrayOutputWithContext(context.Context) GetRipngNetworkArrayOutput
}

type GetRipngNetworkArray []GetRipngNetworkInput

func (GetRipngNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngNetwork)(nil)).Elem()
}

func (i GetRipngNetworkArray) ToGetRipngNetworkArrayOutput() GetRipngNetworkArrayOutput {
	return i.ToGetRipngNetworkArrayOutputWithContext(context.Background())
}

func (i GetRipngNetworkArray) ToGetRipngNetworkArrayOutputWithContext(ctx context.Context) GetRipngNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngNetworkArrayOutput)
}

type GetRipngNetworkOutput struct{ *pulumi.OutputState }

func (GetRipngNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngNetwork)(nil)).Elem()
}

func (o GetRipngNetworkOutput) ToGetRipngNetworkOutput() GetRipngNetworkOutput {
	return o
}

func (o GetRipngNetworkOutput) ToGetRipngNetworkOutputWithContext(ctx context.Context) GetRipngNetworkOutput {
	return o
}

// Offset-list ID.
func (o GetRipngNetworkOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipngNetwork) int { return v.Id }).(pulumi.IntOutput)
}

// Network IPv6 link-local prefix.
func (o GetRipngNetworkOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngNetwork) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetRipngNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetRipngNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngNetwork)(nil)).Elem()
}

func (o GetRipngNetworkArrayOutput) ToGetRipngNetworkArrayOutput() GetRipngNetworkArrayOutput {
	return o
}

func (o GetRipngNetworkArrayOutput) ToGetRipngNetworkArrayOutputWithContext(ctx context.Context) GetRipngNetworkArrayOutput {
	return o
}

func (o GetRipngNetworkArrayOutput) Index(i pulumi.IntInput) GetRipngNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipngNetwork {
		return vs[0].([]GetRipngNetwork)[vs[1].(int)]
	}).(GetRipngNetworkOutput)
}

type GetRipngOffsetList struct {
	// IPv6 access list name.
	AccessList6 string `pulumi:"accessList6"`
	// Offset list direction.
	Direction string `pulumi:"direction"`
	// Offset-list ID.
	Id int `pulumi:"id"`
	// Interface name.
	Interface string `pulumi:"interface"`
	// offset
	Offset int `pulumi:"offset"`
	// status
	Status string `pulumi:"status"`
}

// GetRipngOffsetListInput is an input type that accepts GetRipngOffsetListArgs and GetRipngOffsetListOutput values.
// You can construct a concrete instance of `GetRipngOffsetListInput` via:
//
//	GetRipngOffsetListArgs{...}
type GetRipngOffsetListInput interface {
	pulumi.Input

	ToGetRipngOffsetListOutput() GetRipngOffsetListOutput
	ToGetRipngOffsetListOutputWithContext(context.Context) GetRipngOffsetListOutput
}

type GetRipngOffsetListArgs struct {
	// IPv6 access list name.
	AccessList6 pulumi.StringInput `pulumi:"accessList6"`
	// Offset list direction.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// offset
	Offset pulumi.IntInput `pulumi:"offset"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRipngOffsetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngOffsetList)(nil)).Elem()
}

func (i GetRipngOffsetListArgs) ToGetRipngOffsetListOutput() GetRipngOffsetListOutput {
	return i.ToGetRipngOffsetListOutputWithContext(context.Background())
}

func (i GetRipngOffsetListArgs) ToGetRipngOffsetListOutputWithContext(ctx context.Context) GetRipngOffsetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngOffsetListOutput)
}

// GetRipngOffsetListArrayInput is an input type that accepts GetRipngOffsetListArray and GetRipngOffsetListArrayOutput values.
// You can construct a concrete instance of `GetRipngOffsetListArrayInput` via:
//
//	GetRipngOffsetListArray{ GetRipngOffsetListArgs{...} }
type GetRipngOffsetListArrayInput interface {
	pulumi.Input

	ToGetRipngOffsetListArrayOutput() GetRipngOffsetListArrayOutput
	ToGetRipngOffsetListArrayOutputWithContext(context.Context) GetRipngOffsetListArrayOutput
}

type GetRipngOffsetListArray []GetRipngOffsetListInput

func (GetRipngOffsetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngOffsetList)(nil)).Elem()
}

func (i GetRipngOffsetListArray) ToGetRipngOffsetListArrayOutput() GetRipngOffsetListArrayOutput {
	return i.ToGetRipngOffsetListArrayOutputWithContext(context.Background())
}

func (i GetRipngOffsetListArray) ToGetRipngOffsetListArrayOutputWithContext(ctx context.Context) GetRipngOffsetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngOffsetListArrayOutput)
}

type GetRipngOffsetListOutput struct{ *pulumi.OutputState }

func (GetRipngOffsetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngOffsetList)(nil)).Elem()
}

func (o GetRipngOffsetListOutput) ToGetRipngOffsetListOutput() GetRipngOffsetListOutput {
	return o
}

func (o GetRipngOffsetListOutput) ToGetRipngOffsetListOutputWithContext(ctx context.Context) GetRipngOffsetListOutput {
	return o
}

// IPv6 access list name.
func (o GetRipngOffsetListOutput) AccessList6() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngOffsetList) string { return v.AccessList6 }).(pulumi.StringOutput)
}

// Offset list direction.
func (o GetRipngOffsetListOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngOffsetList) string { return v.Direction }).(pulumi.StringOutput)
}

// Offset-list ID.
func (o GetRipngOffsetListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipngOffsetList) int { return v.Id }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRipngOffsetListOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngOffsetList) string { return v.Interface }).(pulumi.StringOutput)
}

// offset
func (o GetRipngOffsetListOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipngOffsetList) int { return v.Offset }).(pulumi.IntOutput)
}

// status
func (o GetRipngOffsetListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngOffsetList) string { return v.Status }).(pulumi.StringOutput)
}

type GetRipngOffsetListArrayOutput struct{ *pulumi.OutputState }

func (GetRipngOffsetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngOffsetList)(nil)).Elem()
}

func (o GetRipngOffsetListArrayOutput) ToGetRipngOffsetListArrayOutput() GetRipngOffsetListArrayOutput {
	return o
}

func (o GetRipngOffsetListArrayOutput) ToGetRipngOffsetListArrayOutputWithContext(ctx context.Context) GetRipngOffsetListArrayOutput {
	return o
}

func (o GetRipngOffsetListArrayOutput) Index(i pulumi.IntInput) GetRipngOffsetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipngOffsetList {
		return vs[0].([]GetRipngOffsetList)[vs[1].(int)]
	}).(GetRipngOffsetListOutput)
}

type GetRipngPassiveInterface struct {
	// Interface name.
	Name string `pulumi:"name"`
}

// GetRipngPassiveInterfaceInput is an input type that accepts GetRipngPassiveInterfaceArgs and GetRipngPassiveInterfaceOutput values.
// You can construct a concrete instance of `GetRipngPassiveInterfaceInput` via:
//
//	GetRipngPassiveInterfaceArgs{...}
type GetRipngPassiveInterfaceInput interface {
	pulumi.Input

	ToGetRipngPassiveInterfaceOutput() GetRipngPassiveInterfaceOutput
	ToGetRipngPassiveInterfaceOutputWithContext(context.Context) GetRipngPassiveInterfaceOutput
}

type GetRipngPassiveInterfaceArgs struct {
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRipngPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngPassiveInterface)(nil)).Elem()
}

func (i GetRipngPassiveInterfaceArgs) ToGetRipngPassiveInterfaceOutput() GetRipngPassiveInterfaceOutput {
	return i.ToGetRipngPassiveInterfaceOutputWithContext(context.Background())
}

func (i GetRipngPassiveInterfaceArgs) ToGetRipngPassiveInterfaceOutputWithContext(ctx context.Context) GetRipngPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngPassiveInterfaceOutput)
}

// GetRipngPassiveInterfaceArrayInput is an input type that accepts GetRipngPassiveInterfaceArray and GetRipngPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRipngPassiveInterfaceArrayInput` via:
//
//	GetRipngPassiveInterfaceArray{ GetRipngPassiveInterfaceArgs{...} }
type GetRipngPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToGetRipngPassiveInterfaceArrayOutput() GetRipngPassiveInterfaceArrayOutput
	ToGetRipngPassiveInterfaceArrayOutputWithContext(context.Context) GetRipngPassiveInterfaceArrayOutput
}

type GetRipngPassiveInterfaceArray []GetRipngPassiveInterfaceInput

func (GetRipngPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngPassiveInterface)(nil)).Elem()
}

func (i GetRipngPassiveInterfaceArray) ToGetRipngPassiveInterfaceArrayOutput() GetRipngPassiveInterfaceArrayOutput {
	return i.ToGetRipngPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRipngPassiveInterfaceArray) ToGetRipngPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRipngPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngPassiveInterfaceArrayOutput)
}

type GetRipngPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (GetRipngPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngPassiveInterface)(nil)).Elem()
}

func (o GetRipngPassiveInterfaceOutput) ToGetRipngPassiveInterfaceOutput() GetRipngPassiveInterfaceOutput {
	return o
}

func (o GetRipngPassiveInterfaceOutput) ToGetRipngPassiveInterfaceOutputWithContext(ctx context.Context) GetRipngPassiveInterfaceOutput {
	return o
}

// Interface name.
func (o GetRipngPassiveInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngPassiveInterface) string { return v.Name }).(pulumi.StringOutput)
}

type GetRipngPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRipngPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngPassiveInterface)(nil)).Elem()
}

func (o GetRipngPassiveInterfaceArrayOutput) ToGetRipngPassiveInterfaceArrayOutput() GetRipngPassiveInterfaceArrayOutput {
	return o
}

func (o GetRipngPassiveInterfaceArrayOutput) ToGetRipngPassiveInterfaceArrayOutputWithContext(ctx context.Context) GetRipngPassiveInterfaceArrayOutput {
	return o
}

func (o GetRipngPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) GetRipngPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipngPassiveInterface {
		return vs[0].([]GetRipngPassiveInterface)[vs[1].(int)]
	}).(GetRipngPassiveInterfaceOutput)
}

type GetRipngRedistribute struct {
	// Redistribute metric setting.
	Metric int `pulumi:"metric"`
	// Interface name.
	Name string `pulumi:"name"`
	// Route map name.
	Routemap string `pulumi:"routemap"`
	// status
	Status string `pulumi:"status"`
}

// GetRipngRedistributeInput is an input type that accepts GetRipngRedistributeArgs and GetRipngRedistributeOutput values.
// You can construct a concrete instance of `GetRipngRedistributeInput` via:
//
//	GetRipngRedistributeArgs{...}
type GetRipngRedistributeInput interface {
	pulumi.Input

	ToGetRipngRedistributeOutput() GetRipngRedistributeOutput
	ToGetRipngRedistributeOutputWithContext(context.Context) GetRipngRedistributeOutput
}

type GetRipngRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntInput `pulumi:"metric"`
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringInput `pulumi:"routemap"`
	// status
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRipngRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngRedistribute)(nil)).Elem()
}

func (i GetRipngRedistributeArgs) ToGetRipngRedistributeOutput() GetRipngRedistributeOutput {
	return i.ToGetRipngRedistributeOutputWithContext(context.Background())
}

func (i GetRipngRedistributeArgs) ToGetRipngRedistributeOutputWithContext(ctx context.Context) GetRipngRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngRedistributeOutput)
}

// GetRipngRedistributeArrayInput is an input type that accepts GetRipngRedistributeArray and GetRipngRedistributeArrayOutput values.
// You can construct a concrete instance of `GetRipngRedistributeArrayInput` via:
//
//	GetRipngRedistributeArray{ GetRipngRedistributeArgs{...} }
type GetRipngRedistributeArrayInput interface {
	pulumi.Input

	ToGetRipngRedistributeArrayOutput() GetRipngRedistributeArrayOutput
	ToGetRipngRedistributeArrayOutputWithContext(context.Context) GetRipngRedistributeArrayOutput
}

type GetRipngRedistributeArray []GetRipngRedistributeInput

func (GetRipngRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngRedistribute)(nil)).Elem()
}

func (i GetRipngRedistributeArray) ToGetRipngRedistributeArrayOutput() GetRipngRedistributeArrayOutput {
	return i.ToGetRipngRedistributeArrayOutputWithContext(context.Background())
}

func (i GetRipngRedistributeArray) ToGetRipngRedistributeArrayOutputWithContext(ctx context.Context) GetRipngRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRipngRedistributeArrayOutput)
}

type GetRipngRedistributeOutput struct{ *pulumi.OutputState }

func (GetRipngRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRipngRedistribute)(nil)).Elem()
}

func (o GetRipngRedistributeOutput) ToGetRipngRedistributeOutput() GetRipngRedistributeOutput {
	return o
}

func (o GetRipngRedistributeOutput) ToGetRipngRedistributeOutputWithContext(ctx context.Context) GetRipngRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o GetRipngRedistributeOutput) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRipngRedistribute) int { return v.Metric }).(pulumi.IntOutput)
}

// Interface name.
func (o GetRipngRedistributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngRedistribute) string { return v.Name }).(pulumi.StringOutput)
}

// Route map name.
func (o GetRipngRedistributeOutput) Routemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngRedistribute) string { return v.Routemap }).(pulumi.StringOutput)
}

// status
func (o GetRipngRedistributeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRipngRedistribute) string { return v.Status }).(pulumi.StringOutput)
}

type GetRipngRedistributeArrayOutput struct{ *pulumi.OutputState }

func (GetRipngRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRipngRedistribute)(nil)).Elem()
}

func (o GetRipngRedistributeArrayOutput) ToGetRipngRedistributeArrayOutput() GetRipngRedistributeArrayOutput {
	return o
}

func (o GetRipngRedistributeArrayOutput) ToGetRipngRedistributeArrayOutputWithContext(ctx context.Context) GetRipngRedistributeArrayOutput {
	return o
}

func (o GetRipngRedistributeArrayOutput) Index(i pulumi.IntInput) GetRipngRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRipngRedistribute {
		return vs[0].([]GetRipngRedistribute)[vs[1].(int)]
	}).(GetRipngRedistributeOutput)
}

type GetRoutemapRule struct {
	// Action.
	Action string `pulumi:"action"`
	// Rule ID.
	Id int `pulumi:"id"`
	// Match BGP AS path list.
	MatchAsPath string `pulumi:"matchAsPath"`
	// Match BGP community list.
	MatchCommunity string `pulumi:"matchCommunity"`
	// Enable/disable exact matching of communities.
	MatchCommunityExact string `pulumi:"matchCommunityExact"`
	// Match BGP extended community list.
	MatchExtcommunity string `pulumi:"matchExtcommunity"`
	// Enable/disable exact matching of extended communities.
	MatchExtcommunityExact string `pulumi:"matchExtcommunityExact"`
	// BGP flag value to match (0 - 65535)
	MatchFlags int `pulumi:"matchFlags"`
	// Match interface configuration.
	MatchInterface string `pulumi:"matchInterface"`
	// Match IPv6 address permitted by access-list6 or prefix-list6.
	MatchIp6Address string `pulumi:"matchIp6Address"`
	// Match next hop IPv6 address passed by access-list6 or prefix-list6.
	MatchIp6Nexthop string `pulumi:"matchIp6Nexthop"`
	// Match IP address permitted by access-list or prefix-list.
	MatchIpAddress string `pulumi:"matchIpAddress"`
	// Match next hop IP address passed by access-list or prefix-list.
	MatchIpNexthop string `pulumi:"matchIpNexthop"`
	// Match metric for redistribute routes.
	MatchMetric int `pulumi:"matchMetric"`
	// Match BGP origin code.
	MatchOrigin string `pulumi:"matchOrigin"`
	// Match route type.
	MatchRouteType string `pulumi:"matchRouteType"`
	// Match tag.
	MatchTag int `pulumi:"matchTag"`
	// Match VRF ID.
	MatchVrf int `pulumi:"matchVrf"`
	// BGP aggregator AS.
	SetAggregatorAs int `pulumi:"setAggregatorAs"`
	// BGP aggregator IP.
	SetAggregatorIp string `pulumi:"setAggregatorIp"`
	// Specify preferred action of set-aspath.
	SetAspathAction string `pulumi:"setAspathAction"`
	// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
	SetAspaths []GetRoutemapRuleSetAspath `pulumi:"setAspaths"`
	// Enable/disable BGP atomic aggregate attribute.
	SetAtomicAggregate string `pulumi:"setAtomicAggregate"`
	// BGP community attribute. The structure of `setCommunity` block is documented below.
	SetCommunities []GetRoutemapRuleSetCommunity `pulumi:"setCommunities"`
	// Enable/disable adding set-community to existing community.
	SetCommunityAdditive string `pulumi:"setCommunityAdditive"`
	// Delete communities matching community list.
	SetCommunityDelete string `pulumi:"setCommunityDelete"`
	// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
	SetDampeningMaxSuppress int `pulumi:"setDampeningMaxSuppress"`
	// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
	SetDampeningReachabilityHalfLife int `pulumi:"setDampeningReachabilityHalfLife"`
	// Value to start reusing a route (1 - 20000, 0 = unset).
	SetDampeningReuse int `pulumi:"setDampeningReuse"`
	// Value to start suppressing a route (1 - 20000, 0 = unset).
	SetDampeningSuppress int `pulumi:"setDampeningSuppress"`
	// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
	SetDampeningUnreachabilityHalfLife int `pulumi:"setDampeningUnreachabilityHalfLife"`
	// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
	SetExtcommunityRts []GetRoutemapRuleSetExtcommunityRt `pulumi:"setExtcommunityRts"`
	// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
	SetExtcommunitySoos []GetRoutemapRuleSetExtcommunitySoo `pulumi:"setExtcommunitySoos"`
	// BGP flags value (0 - 65535)
	SetFlags int `pulumi:"setFlags"`
	// IPv6 global address of next hop.
	SetIp6Nexthop string `pulumi:"setIp6Nexthop"`
	// IPv6 local address of next hop.
	SetIp6NexthopLocal string `pulumi:"setIp6NexthopLocal"`
	// IP address of next hop.
	SetIpNexthop string `pulumi:"setIpNexthop"`
	// IP address of preferred source.
	SetIpPrefsrc string `pulumi:"setIpPrefsrc"`
	// BGP local preference path attribute.
	SetLocalPreference int `pulumi:"setLocalPreference"`
	// Metric value.
	SetMetric int `pulumi:"setMetric"`
	// Metric type.
	SetMetricType string `pulumi:"setMetricType"`
	// BGP origin code.
	SetOrigin string `pulumi:"setOrigin"`
	// BGP originator ID attribute.
	SetOriginatorId string `pulumi:"setOriginatorId"`
	// Priority for routing table.
	SetPriority int `pulumi:"setPriority"`
	// Route tag for routing table.
	SetRouteTag int `pulumi:"setRouteTag"`
	// Tag value.
	SetTag int `pulumi:"setTag"`
	// IP address of VPNv4 next-hop.
	SetVpnv4Nexthop string `pulumi:"setVpnv4Nexthop"`
	// IPv6 global address of VPNv6 next-hop.
	SetVpnv6Nexthop string `pulumi:"setVpnv6Nexthop"`
	// IPv6 link-local address of VPNv6 next-hop.
	SetVpnv6NexthopLocal string `pulumi:"setVpnv6NexthopLocal"`
	// BGP weight for routing table.
	SetWeight int `pulumi:"setWeight"`
}

// GetRoutemapRuleInput is an input type that accepts GetRoutemapRuleArgs and GetRoutemapRuleOutput values.
// You can construct a concrete instance of `GetRoutemapRuleInput` via:
//
//	GetRoutemapRuleArgs{...}
type GetRoutemapRuleInput interface {
	pulumi.Input

	ToGetRoutemapRuleOutput() GetRoutemapRuleOutput
	ToGetRoutemapRuleOutputWithContext(context.Context) GetRoutemapRuleOutput
}

type GetRoutemapRuleArgs struct {
	// Action.
	Action pulumi.StringInput `pulumi:"action"`
	// Rule ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Match BGP AS path list.
	MatchAsPath pulumi.StringInput `pulumi:"matchAsPath"`
	// Match BGP community list.
	MatchCommunity pulumi.StringInput `pulumi:"matchCommunity"`
	// Enable/disable exact matching of communities.
	MatchCommunityExact pulumi.StringInput `pulumi:"matchCommunityExact"`
	// Match BGP extended community list.
	MatchExtcommunity pulumi.StringInput `pulumi:"matchExtcommunity"`
	// Enable/disable exact matching of extended communities.
	MatchExtcommunityExact pulumi.StringInput `pulumi:"matchExtcommunityExact"`
	// BGP flag value to match (0 - 65535)
	MatchFlags pulumi.IntInput `pulumi:"matchFlags"`
	// Match interface configuration.
	MatchInterface pulumi.StringInput `pulumi:"matchInterface"`
	// Match IPv6 address permitted by access-list6 or prefix-list6.
	MatchIp6Address pulumi.StringInput `pulumi:"matchIp6Address"`
	// Match next hop IPv6 address passed by access-list6 or prefix-list6.
	MatchIp6Nexthop pulumi.StringInput `pulumi:"matchIp6Nexthop"`
	// Match IP address permitted by access-list or prefix-list.
	MatchIpAddress pulumi.StringInput `pulumi:"matchIpAddress"`
	// Match next hop IP address passed by access-list or prefix-list.
	MatchIpNexthop pulumi.StringInput `pulumi:"matchIpNexthop"`
	// Match metric for redistribute routes.
	MatchMetric pulumi.IntInput `pulumi:"matchMetric"`
	// Match BGP origin code.
	MatchOrigin pulumi.StringInput `pulumi:"matchOrigin"`
	// Match route type.
	MatchRouteType pulumi.StringInput `pulumi:"matchRouteType"`
	// Match tag.
	MatchTag pulumi.IntInput `pulumi:"matchTag"`
	// Match VRF ID.
	MatchVrf pulumi.IntInput `pulumi:"matchVrf"`
	// BGP aggregator AS.
	SetAggregatorAs pulumi.IntInput `pulumi:"setAggregatorAs"`
	// BGP aggregator IP.
	SetAggregatorIp pulumi.StringInput `pulumi:"setAggregatorIp"`
	// Specify preferred action of set-aspath.
	SetAspathAction pulumi.StringInput `pulumi:"setAspathAction"`
	// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
	SetAspaths GetRoutemapRuleSetAspathArrayInput `pulumi:"setAspaths"`
	// Enable/disable BGP atomic aggregate attribute.
	SetAtomicAggregate pulumi.StringInput `pulumi:"setAtomicAggregate"`
	// BGP community attribute. The structure of `setCommunity` block is documented below.
	SetCommunities GetRoutemapRuleSetCommunityArrayInput `pulumi:"setCommunities"`
	// Enable/disable adding set-community to existing community.
	SetCommunityAdditive pulumi.StringInput `pulumi:"setCommunityAdditive"`
	// Delete communities matching community list.
	SetCommunityDelete pulumi.StringInput `pulumi:"setCommunityDelete"`
	// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
	SetDampeningMaxSuppress pulumi.IntInput `pulumi:"setDampeningMaxSuppress"`
	// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
	SetDampeningReachabilityHalfLife pulumi.IntInput `pulumi:"setDampeningReachabilityHalfLife"`
	// Value to start reusing a route (1 - 20000, 0 = unset).
	SetDampeningReuse pulumi.IntInput `pulumi:"setDampeningReuse"`
	// Value to start suppressing a route (1 - 20000, 0 = unset).
	SetDampeningSuppress pulumi.IntInput `pulumi:"setDampeningSuppress"`
	// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
	SetDampeningUnreachabilityHalfLife pulumi.IntInput `pulumi:"setDampeningUnreachabilityHalfLife"`
	// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
	SetExtcommunityRts GetRoutemapRuleSetExtcommunityRtArrayInput `pulumi:"setExtcommunityRts"`
	// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
	SetExtcommunitySoos GetRoutemapRuleSetExtcommunitySooArrayInput `pulumi:"setExtcommunitySoos"`
	// BGP flags value (0 - 65535)
	SetFlags pulumi.IntInput `pulumi:"setFlags"`
	// IPv6 global address of next hop.
	SetIp6Nexthop pulumi.StringInput `pulumi:"setIp6Nexthop"`
	// IPv6 local address of next hop.
	SetIp6NexthopLocal pulumi.StringInput `pulumi:"setIp6NexthopLocal"`
	// IP address of next hop.
	SetIpNexthop pulumi.StringInput `pulumi:"setIpNexthop"`
	// IP address of preferred source.
	SetIpPrefsrc pulumi.StringInput `pulumi:"setIpPrefsrc"`
	// BGP local preference path attribute.
	SetLocalPreference pulumi.IntInput `pulumi:"setLocalPreference"`
	// Metric value.
	SetMetric pulumi.IntInput `pulumi:"setMetric"`
	// Metric type.
	SetMetricType pulumi.StringInput `pulumi:"setMetricType"`
	// BGP origin code.
	SetOrigin pulumi.StringInput `pulumi:"setOrigin"`
	// BGP originator ID attribute.
	SetOriginatorId pulumi.StringInput `pulumi:"setOriginatorId"`
	// Priority for routing table.
	SetPriority pulumi.IntInput `pulumi:"setPriority"`
	// Route tag for routing table.
	SetRouteTag pulumi.IntInput `pulumi:"setRouteTag"`
	// Tag value.
	SetTag pulumi.IntInput `pulumi:"setTag"`
	// IP address of VPNv4 next-hop.
	SetVpnv4Nexthop pulumi.StringInput `pulumi:"setVpnv4Nexthop"`
	// IPv6 global address of VPNv6 next-hop.
	SetVpnv6Nexthop pulumi.StringInput `pulumi:"setVpnv6Nexthop"`
	// IPv6 link-local address of VPNv6 next-hop.
	SetVpnv6NexthopLocal pulumi.StringInput `pulumi:"setVpnv6NexthopLocal"`
	// BGP weight for routing table.
	SetWeight pulumi.IntInput `pulumi:"setWeight"`
}

func (GetRoutemapRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutemapRule)(nil)).Elem()
}

func (i GetRoutemapRuleArgs) ToGetRoutemapRuleOutput() GetRoutemapRuleOutput {
	return i.ToGetRoutemapRuleOutputWithContext(context.Background())
}

func (i GetRoutemapRuleArgs) ToGetRoutemapRuleOutputWithContext(ctx context.Context) GetRoutemapRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutemapRuleOutput)
}

// GetRoutemapRuleArrayInput is an input type that accepts GetRoutemapRuleArray and GetRoutemapRuleArrayOutput values.
// You can construct a concrete instance of `GetRoutemapRuleArrayInput` via:
//
//	GetRoutemapRuleArray{ GetRoutemapRuleArgs{...} }
type GetRoutemapRuleArrayInput interface {
	pulumi.Input

	ToGetRoutemapRuleArrayOutput() GetRoutemapRuleArrayOutput
	ToGetRoutemapRuleArrayOutputWithContext(context.Context) GetRoutemapRuleArrayOutput
}

type GetRoutemapRuleArray []GetRoutemapRuleInput

func (GetRoutemapRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutemapRule)(nil)).Elem()
}

func (i GetRoutemapRuleArray) ToGetRoutemapRuleArrayOutput() GetRoutemapRuleArrayOutput {
	return i.ToGetRoutemapRuleArrayOutputWithContext(context.Background())
}

func (i GetRoutemapRuleArray) ToGetRoutemapRuleArrayOutputWithContext(ctx context.Context) GetRoutemapRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutemapRuleArrayOutput)
}

type GetRoutemapRuleOutput struct{ *pulumi.OutputState }

func (GetRoutemapRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutemapRule)(nil)).Elem()
}

func (o GetRoutemapRuleOutput) ToGetRoutemapRuleOutput() GetRoutemapRuleOutput {
	return o
}

func (o GetRoutemapRuleOutput) ToGetRoutemapRuleOutputWithContext(ctx context.Context) GetRoutemapRuleOutput {
	return o
}

// Action.
func (o GetRoutemapRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.Action }).(pulumi.StringOutput)
}

// Rule ID.
func (o GetRoutemapRuleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.Id }).(pulumi.IntOutput)
}

// Match BGP AS path list.
func (o GetRoutemapRuleOutput) MatchAsPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchAsPath }).(pulumi.StringOutput)
}

// Match BGP community list.
func (o GetRoutemapRuleOutput) MatchCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchCommunity }).(pulumi.StringOutput)
}

// Enable/disable exact matching of communities.
func (o GetRoutemapRuleOutput) MatchCommunityExact() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchCommunityExact }).(pulumi.StringOutput)
}

// Match BGP extended community list.
func (o GetRoutemapRuleOutput) MatchExtcommunity() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchExtcommunity }).(pulumi.StringOutput)
}

// Enable/disable exact matching of extended communities.
func (o GetRoutemapRuleOutput) MatchExtcommunityExact() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchExtcommunityExact }).(pulumi.StringOutput)
}

// BGP flag value to match (0 - 65535)
func (o GetRoutemapRuleOutput) MatchFlags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.MatchFlags }).(pulumi.IntOutput)
}

// Match interface configuration.
func (o GetRoutemapRuleOutput) MatchInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchInterface }).(pulumi.StringOutput)
}

// Match IPv6 address permitted by access-list6 or prefix-list6.
func (o GetRoutemapRuleOutput) MatchIp6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchIp6Address }).(pulumi.StringOutput)
}

// Match next hop IPv6 address passed by access-list6 or prefix-list6.
func (o GetRoutemapRuleOutput) MatchIp6Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchIp6Nexthop }).(pulumi.StringOutput)
}

// Match IP address permitted by access-list or prefix-list.
func (o GetRoutemapRuleOutput) MatchIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchIpAddress }).(pulumi.StringOutput)
}

// Match next hop IP address passed by access-list or prefix-list.
func (o GetRoutemapRuleOutput) MatchIpNexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchIpNexthop }).(pulumi.StringOutput)
}

// Match metric for redistribute routes.
func (o GetRoutemapRuleOutput) MatchMetric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.MatchMetric }).(pulumi.IntOutput)
}

// Match BGP origin code.
func (o GetRoutemapRuleOutput) MatchOrigin() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchOrigin }).(pulumi.StringOutput)
}

// Match route type.
func (o GetRoutemapRuleOutput) MatchRouteType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.MatchRouteType }).(pulumi.StringOutput)
}

// Match tag.
func (o GetRoutemapRuleOutput) MatchTag() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.MatchTag }).(pulumi.IntOutput)
}

// Match VRF ID.
func (o GetRoutemapRuleOutput) MatchVrf() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.MatchVrf }).(pulumi.IntOutput)
}

// BGP aggregator AS.
func (o GetRoutemapRuleOutput) SetAggregatorAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetAggregatorAs }).(pulumi.IntOutput)
}

// BGP aggregator IP.
func (o GetRoutemapRuleOutput) SetAggregatorIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetAggregatorIp }).(pulumi.StringOutput)
}

// Specify preferred action of set-aspath.
func (o GetRoutemapRuleOutput) SetAspathAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetAspathAction }).(pulumi.StringOutput)
}

// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
func (o GetRoutemapRuleOutput) SetAspaths() GetRoutemapRuleSetAspathArrayOutput {
	return o.ApplyT(func(v GetRoutemapRule) []GetRoutemapRuleSetAspath { return v.SetAspaths }).(GetRoutemapRuleSetAspathArrayOutput)
}

// Enable/disable BGP atomic aggregate attribute.
func (o GetRoutemapRuleOutput) SetAtomicAggregate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetAtomicAggregate }).(pulumi.StringOutput)
}

// BGP community attribute. The structure of `setCommunity` block is documented below.
func (o GetRoutemapRuleOutput) SetCommunities() GetRoutemapRuleSetCommunityArrayOutput {
	return o.ApplyT(func(v GetRoutemapRule) []GetRoutemapRuleSetCommunity { return v.SetCommunities }).(GetRoutemapRuleSetCommunityArrayOutput)
}

// Enable/disable adding set-community to existing community.
func (o GetRoutemapRuleOutput) SetCommunityAdditive() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetCommunityAdditive }).(pulumi.StringOutput)
}

// Delete communities matching community list.
func (o GetRoutemapRuleOutput) SetCommunityDelete() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetCommunityDelete }).(pulumi.StringOutput)
}

// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
func (o GetRoutemapRuleOutput) SetDampeningMaxSuppress() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetDampeningMaxSuppress }).(pulumi.IntOutput)
}

// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
func (o GetRoutemapRuleOutput) SetDampeningReachabilityHalfLife() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetDampeningReachabilityHalfLife }).(pulumi.IntOutput)
}

// Value to start reusing a route (1 - 20000, 0 = unset).
func (o GetRoutemapRuleOutput) SetDampeningReuse() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetDampeningReuse }).(pulumi.IntOutput)
}

// Value to start suppressing a route (1 - 20000, 0 = unset).
func (o GetRoutemapRuleOutput) SetDampeningSuppress() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetDampeningSuppress }).(pulumi.IntOutput)
}

// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
func (o GetRoutemapRuleOutput) SetDampeningUnreachabilityHalfLife() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetDampeningUnreachabilityHalfLife }).(pulumi.IntOutput)
}

// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
func (o GetRoutemapRuleOutput) SetExtcommunityRts() GetRoutemapRuleSetExtcommunityRtArrayOutput {
	return o.ApplyT(func(v GetRoutemapRule) []GetRoutemapRuleSetExtcommunityRt { return v.SetExtcommunityRts }).(GetRoutemapRuleSetExtcommunityRtArrayOutput)
}

// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
func (o GetRoutemapRuleOutput) SetExtcommunitySoos() GetRoutemapRuleSetExtcommunitySooArrayOutput {
	return o.ApplyT(func(v GetRoutemapRule) []GetRoutemapRuleSetExtcommunitySoo { return v.SetExtcommunitySoos }).(GetRoutemapRuleSetExtcommunitySooArrayOutput)
}

// BGP flags value (0 - 65535)
func (o GetRoutemapRuleOutput) SetFlags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetFlags }).(pulumi.IntOutput)
}

// IPv6 global address of next hop.
func (o GetRoutemapRuleOutput) SetIp6Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetIp6Nexthop }).(pulumi.StringOutput)
}

// IPv6 local address of next hop.
func (o GetRoutemapRuleOutput) SetIp6NexthopLocal() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetIp6NexthopLocal }).(pulumi.StringOutput)
}

// IP address of next hop.
func (o GetRoutemapRuleOutput) SetIpNexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetIpNexthop }).(pulumi.StringOutput)
}

// IP address of preferred source.
func (o GetRoutemapRuleOutput) SetIpPrefsrc() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetIpPrefsrc }).(pulumi.StringOutput)
}

// BGP local preference path attribute.
func (o GetRoutemapRuleOutput) SetLocalPreference() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetLocalPreference }).(pulumi.IntOutput)
}

// Metric value.
func (o GetRoutemapRuleOutput) SetMetric() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetMetric }).(pulumi.IntOutput)
}

// Metric type.
func (o GetRoutemapRuleOutput) SetMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetMetricType }).(pulumi.StringOutput)
}

// BGP origin code.
func (o GetRoutemapRuleOutput) SetOrigin() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetOrigin }).(pulumi.StringOutput)
}

// BGP originator ID attribute.
func (o GetRoutemapRuleOutput) SetOriginatorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetOriginatorId }).(pulumi.StringOutput)
}

// Priority for routing table.
func (o GetRoutemapRuleOutput) SetPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetPriority }).(pulumi.IntOutput)
}

// Route tag for routing table.
func (o GetRoutemapRuleOutput) SetRouteTag() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetRouteTag }).(pulumi.IntOutput)
}

// Tag value.
func (o GetRoutemapRuleOutput) SetTag() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetTag }).(pulumi.IntOutput)
}

// IP address of VPNv4 next-hop.
func (o GetRoutemapRuleOutput) SetVpnv4Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetVpnv4Nexthop }).(pulumi.StringOutput)
}

// IPv6 global address of VPNv6 next-hop.
func (o GetRoutemapRuleOutput) SetVpnv6Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetVpnv6Nexthop }).(pulumi.StringOutput)
}

// IPv6 link-local address of VPNv6 next-hop.
func (o GetRoutemapRuleOutput) SetVpnv6NexthopLocal() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRule) string { return v.SetVpnv6NexthopLocal }).(pulumi.StringOutput)
}

// BGP weight for routing table.
func (o GetRoutemapRuleOutput) SetWeight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutemapRule) int { return v.SetWeight }).(pulumi.IntOutput)
}

type GetRoutemapRuleArrayOutput struct{ *pulumi.OutputState }

func (GetRoutemapRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutemapRule)(nil)).Elem()
}

func (o GetRoutemapRuleArrayOutput) ToGetRoutemapRuleArrayOutput() GetRoutemapRuleArrayOutput {
	return o
}

func (o GetRoutemapRuleArrayOutput) ToGetRoutemapRuleArrayOutputWithContext(ctx context.Context) GetRoutemapRuleArrayOutput {
	return o
}

func (o GetRoutemapRuleArrayOutput) Index(i pulumi.IntInput) GetRoutemapRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoutemapRule {
		return vs[0].([]GetRoutemapRule)[vs[1].(int)]
	}).(GetRoutemapRuleOutput)
}

type GetRoutemapRuleSetAspath struct {
	// AS number (0 - 42949672). NOTE: Use quotes for repeating numbers, e.g.: "1 1 2"
	As string `pulumi:"as"`
}

// GetRoutemapRuleSetAspathInput is an input type that accepts GetRoutemapRuleSetAspathArgs and GetRoutemapRuleSetAspathOutput values.
// You can construct a concrete instance of `GetRoutemapRuleSetAspathInput` via:
//
//	GetRoutemapRuleSetAspathArgs{...}
type GetRoutemapRuleSetAspathInput interface {
	pulumi.Input

	ToGetRoutemapRuleSetAspathOutput() GetRoutemapRuleSetAspathOutput
	ToGetRoutemapRuleSetAspathOutputWithContext(context.Context) GetRoutemapRuleSetAspathOutput
}

type GetRoutemapRuleSetAspathArgs struct {
	// AS number (0 - 42949672). NOTE: Use quotes for repeating numbers, e.g.: "1 1 2"
	As pulumi.StringInput `pulumi:"as"`
}

func (GetRoutemapRuleSetAspathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutemapRuleSetAspath)(nil)).Elem()
}

func (i GetRoutemapRuleSetAspathArgs) ToGetRoutemapRuleSetAspathOutput() GetRoutemapRuleSetAspathOutput {
	return i.ToGetRoutemapRuleSetAspathOutputWithContext(context.Background())
}

func (i GetRoutemapRuleSetAspathArgs) ToGetRoutemapRuleSetAspathOutputWithContext(ctx context.Context) GetRoutemapRuleSetAspathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutemapRuleSetAspathOutput)
}

// GetRoutemapRuleSetAspathArrayInput is an input type that accepts GetRoutemapRuleSetAspathArray and GetRoutemapRuleSetAspathArrayOutput values.
// You can construct a concrete instance of `GetRoutemapRuleSetAspathArrayInput` via:
//
//	GetRoutemapRuleSetAspathArray{ GetRoutemapRuleSetAspathArgs{...} }
type GetRoutemapRuleSetAspathArrayInput interface {
	pulumi.Input

	ToGetRoutemapRuleSetAspathArrayOutput() GetRoutemapRuleSetAspathArrayOutput
	ToGetRoutemapRuleSetAspathArrayOutputWithContext(context.Context) GetRoutemapRuleSetAspathArrayOutput
}

type GetRoutemapRuleSetAspathArray []GetRoutemapRuleSetAspathInput

func (GetRoutemapRuleSetAspathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutemapRuleSetAspath)(nil)).Elem()
}

func (i GetRoutemapRuleSetAspathArray) ToGetRoutemapRuleSetAspathArrayOutput() GetRoutemapRuleSetAspathArrayOutput {
	return i.ToGetRoutemapRuleSetAspathArrayOutputWithContext(context.Background())
}

func (i GetRoutemapRuleSetAspathArray) ToGetRoutemapRuleSetAspathArrayOutputWithContext(ctx context.Context) GetRoutemapRuleSetAspathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutemapRuleSetAspathArrayOutput)
}

type GetRoutemapRuleSetAspathOutput struct{ *pulumi.OutputState }

func (GetRoutemapRuleSetAspathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutemapRuleSetAspath)(nil)).Elem()
}

func (o GetRoutemapRuleSetAspathOutput) ToGetRoutemapRuleSetAspathOutput() GetRoutemapRuleSetAspathOutput {
	return o
}

func (o GetRoutemapRuleSetAspathOutput) ToGetRoutemapRuleSetAspathOutputWithContext(ctx context.Context) GetRoutemapRuleSetAspathOutput {
	return o
}

// AS number (0 - 42949672). NOTE: Use quotes for repeating numbers, e.g.: "1 1 2"
func (o GetRoutemapRuleSetAspathOutput) As() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRuleSetAspath) string { return v.As }).(pulumi.StringOutput)
}

type GetRoutemapRuleSetAspathArrayOutput struct{ *pulumi.OutputState }

func (GetRoutemapRuleSetAspathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutemapRuleSetAspath)(nil)).Elem()
}

func (o GetRoutemapRuleSetAspathArrayOutput) ToGetRoutemapRuleSetAspathArrayOutput() GetRoutemapRuleSetAspathArrayOutput {
	return o
}

func (o GetRoutemapRuleSetAspathArrayOutput) ToGetRoutemapRuleSetAspathArrayOutputWithContext(ctx context.Context) GetRoutemapRuleSetAspathArrayOutput {
	return o
}

func (o GetRoutemapRuleSetAspathArrayOutput) Index(i pulumi.IntInput) GetRoutemapRuleSetAspathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoutemapRuleSetAspath {
		return vs[0].([]GetRoutemapRuleSetAspath)[vs[1].(int)]
	}).(GetRoutemapRuleSetAspathOutput)
}

type GetRoutemapRuleSetCommunity struct {
	// AA:NN
	Community string `pulumi:"community"`
}

// GetRoutemapRuleSetCommunityInput is an input type that accepts GetRoutemapRuleSetCommunityArgs and GetRoutemapRuleSetCommunityOutput values.
// You can construct a concrete instance of `GetRoutemapRuleSetCommunityInput` via:
//
//	GetRoutemapRuleSetCommunityArgs{...}
type GetRoutemapRuleSetCommunityInput interface {
	pulumi.Input

	ToGetRoutemapRuleSetCommunityOutput() GetRoutemapRuleSetCommunityOutput
	ToGetRoutemapRuleSetCommunityOutputWithContext(context.Context) GetRoutemapRuleSetCommunityOutput
}

type GetRoutemapRuleSetCommunityArgs struct {
	// AA:NN
	Community pulumi.StringInput `pulumi:"community"`
}

func (GetRoutemapRuleSetCommunityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutemapRuleSetCommunity)(nil)).Elem()
}

func (i GetRoutemapRuleSetCommunityArgs) ToGetRoutemapRuleSetCommunityOutput() GetRoutemapRuleSetCommunityOutput {
	return i.ToGetRoutemapRuleSetCommunityOutputWithContext(context.Background())
}

func (i GetRoutemapRuleSetCommunityArgs) ToGetRoutemapRuleSetCommunityOutputWithContext(ctx context.Context) GetRoutemapRuleSetCommunityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutemapRuleSetCommunityOutput)
}

// GetRoutemapRuleSetCommunityArrayInput is an input type that accepts GetRoutemapRuleSetCommunityArray and GetRoutemapRuleSetCommunityArrayOutput values.
// You can construct a concrete instance of `GetRoutemapRuleSetCommunityArrayInput` via:
//
//	GetRoutemapRuleSetCommunityArray{ GetRoutemapRuleSetCommunityArgs{...} }
type GetRoutemapRuleSetCommunityArrayInput interface {
	pulumi.Input

	ToGetRoutemapRuleSetCommunityArrayOutput() GetRoutemapRuleSetCommunityArrayOutput
	ToGetRoutemapRuleSetCommunityArrayOutputWithContext(context.Context) GetRoutemapRuleSetCommunityArrayOutput
}

type GetRoutemapRuleSetCommunityArray []GetRoutemapRuleSetCommunityInput

func (GetRoutemapRuleSetCommunityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutemapRuleSetCommunity)(nil)).Elem()
}

func (i GetRoutemapRuleSetCommunityArray) ToGetRoutemapRuleSetCommunityArrayOutput() GetRoutemapRuleSetCommunityArrayOutput {
	return i.ToGetRoutemapRuleSetCommunityArrayOutputWithContext(context.Background())
}

func (i GetRoutemapRuleSetCommunityArray) ToGetRoutemapRuleSetCommunityArrayOutputWithContext(ctx context.Context) GetRoutemapRuleSetCommunityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutemapRuleSetCommunityArrayOutput)
}

type GetRoutemapRuleSetCommunityOutput struct{ *pulumi.OutputState }

func (GetRoutemapRuleSetCommunityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutemapRuleSetCommunity)(nil)).Elem()
}

func (o GetRoutemapRuleSetCommunityOutput) ToGetRoutemapRuleSetCommunityOutput() GetRoutemapRuleSetCommunityOutput {
	return o
}

func (o GetRoutemapRuleSetCommunityOutput) ToGetRoutemapRuleSetCommunityOutputWithContext(ctx context.Context) GetRoutemapRuleSetCommunityOutput {
	return o
}

// AA:NN
func (o GetRoutemapRuleSetCommunityOutput) Community() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRuleSetCommunity) string { return v.Community }).(pulumi.StringOutput)
}

type GetRoutemapRuleSetCommunityArrayOutput struct{ *pulumi.OutputState }

func (GetRoutemapRuleSetCommunityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutemapRuleSetCommunity)(nil)).Elem()
}

func (o GetRoutemapRuleSetCommunityArrayOutput) ToGetRoutemapRuleSetCommunityArrayOutput() GetRoutemapRuleSetCommunityArrayOutput {
	return o
}

func (o GetRoutemapRuleSetCommunityArrayOutput) ToGetRoutemapRuleSetCommunityArrayOutputWithContext(ctx context.Context) GetRoutemapRuleSetCommunityArrayOutput {
	return o
}

func (o GetRoutemapRuleSetCommunityArrayOutput) Index(i pulumi.IntInput) GetRoutemapRuleSetCommunityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoutemapRuleSetCommunity {
		return vs[0].([]GetRoutemapRuleSetCommunity)[vs[1].(int)]
	}).(GetRoutemapRuleSetCommunityOutput)
}

type GetRoutemapRuleSetExtcommunityRt struct {
	// AA:NN
	Community string `pulumi:"community"`
}

// GetRoutemapRuleSetExtcommunityRtInput is an input type that accepts GetRoutemapRuleSetExtcommunityRtArgs and GetRoutemapRuleSetExtcommunityRtOutput values.
// You can construct a concrete instance of `GetRoutemapRuleSetExtcommunityRtInput` via:
//
//	GetRoutemapRuleSetExtcommunityRtArgs{...}
type GetRoutemapRuleSetExtcommunityRtInput interface {
	pulumi.Input

	ToGetRoutemapRuleSetExtcommunityRtOutput() GetRoutemapRuleSetExtcommunityRtOutput
	ToGetRoutemapRuleSetExtcommunityRtOutputWithContext(context.Context) GetRoutemapRuleSetExtcommunityRtOutput
}

type GetRoutemapRuleSetExtcommunityRtArgs struct {
	// AA:NN
	Community pulumi.StringInput `pulumi:"community"`
}

func (GetRoutemapRuleSetExtcommunityRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (i GetRoutemapRuleSetExtcommunityRtArgs) ToGetRoutemapRuleSetExtcommunityRtOutput() GetRoutemapRuleSetExtcommunityRtOutput {
	return i.ToGetRoutemapRuleSetExtcommunityRtOutputWithContext(context.Background())
}

func (i GetRoutemapRuleSetExtcommunityRtArgs) ToGetRoutemapRuleSetExtcommunityRtOutputWithContext(ctx context.Context) GetRoutemapRuleSetExtcommunityRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutemapRuleSetExtcommunityRtOutput)
}

// GetRoutemapRuleSetExtcommunityRtArrayInput is an input type that accepts GetRoutemapRuleSetExtcommunityRtArray and GetRoutemapRuleSetExtcommunityRtArrayOutput values.
// You can construct a concrete instance of `GetRoutemapRuleSetExtcommunityRtArrayInput` via:
//
//	GetRoutemapRuleSetExtcommunityRtArray{ GetRoutemapRuleSetExtcommunityRtArgs{...} }
type GetRoutemapRuleSetExtcommunityRtArrayInput interface {
	pulumi.Input

	ToGetRoutemapRuleSetExtcommunityRtArrayOutput() GetRoutemapRuleSetExtcommunityRtArrayOutput
	ToGetRoutemapRuleSetExtcommunityRtArrayOutputWithContext(context.Context) GetRoutemapRuleSetExtcommunityRtArrayOutput
}

type GetRoutemapRuleSetExtcommunityRtArray []GetRoutemapRuleSetExtcommunityRtInput

func (GetRoutemapRuleSetExtcommunityRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (i GetRoutemapRuleSetExtcommunityRtArray) ToGetRoutemapRuleSetExtcommunityRtArrayOutput() GetRoutemapRuleSetExtcommunityRtArrayOutput {
	return i.ToGetRoutemapRuleSetExtcommunityRtArrayOutputWithContext(context.Background())
}

func (i GetRoutemapRuleSetExtcommunityRtArray) ToGetRoutemapRuleSetExtcommunityRtArrayOutputWithContext(ctx context.Context) GetRoutemapRuleSetExtcommunityRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutemapRuleSetExtcommunityRtArrayOutput)
}

type GetRoutemapRuleSetExtcommunityRtOutput struct{ *pulumi.OutputState }

func (GetRoutemapRuleSetExtcommunityRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (o GetRoutemapRuleSetExtcommunityRtOutput) ToGetRoutemapRuleSetExtcommunityRtOutput() GetRoutemapRuleSetExtcommunityRtOutput {
	return o
}

func (o GetRoutemapRuleSetExtcommunityRtOutput) ToGetRoutemapRuleSetExtcommunityRtOutputWithContext(ctx context.Context) GetRoutemapRuleSetExtcommunityRtOutput {
	return o
}

// AA:NN
func (o GetRoutemapRuleSetExtcommunityRtOutput) Community() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRuleSetExtcommunityRt) string { return v.Community }).(pulumi.StringOutput)
}

type GetRoutemapRuleSetExtcommunityRtArrayOutput struct{ *pulumi.OutputState }

func (GetRoutemapRuleSetExtcommunityRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (o GetRoutemapRuleSetExtcommunityRtArrayOutput) ToGetRoutemapRuleSetExtcommunityRtArrayOutput() GetRoutemapRuleSetExtcommunityRtArrayOutput {
	return o
}

func (o GetRoutemapRuleSetExtcommunityRtArrayOutput) ToGetRoutemapRuleSetExtcommunityRtArrayOutputWithContext(ctx context.Context) GetRoutemapRuleSetExtcommunityRtArrayOutput {
	return o
}

func (o GetRoutemapRuleSetExtcommunityRtArrayOutput) Index(i pulumi.IntInput) GetRoutemapRuleSetExtcommunityRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoutemapRuleSetExtcommunityRt {
		return vs[0].([]GetRoutemapRuleSetExtcommunityRt)[vs[1].(int)]
	}).(GetRoutemapRuleSetExtcommunityRtOutput)
}

type GetRoutemapRuleSetExtcommunitySoo struct {
	// AA:NN
	Community string `pulumi:"community"`
}

// GetRoutemapRuleSetExtcommunitySooInput is an input type that accepts GetRoutemapRuleSetExtcommunitySooArgs and GetRoutemapRuleSetExtcommunitySooOutput values.
// You can construct a concrete instance of `GetRoutemapRuleSetExtcommunitySooInput` via:
//
//	GetRoutemapRuleSetExtcommunitySooArgs{...}
type GetRoutemapRuleSetExtcommunitySooInput interface {
	pulumi.Input

	ToGetRoutemapRuleSetExtcommunitySooOutput() GetRoutemapRuleSetExtcommunitySooOutput
	ToGetRoutemapRuleSetExtcommunitySooOutputWithContext(context.Context) GetRoutemapRuleSetExtcommunitySooOutput
}

type GetRoutemapRuleSetExtcommunitySooArgs struct {
	// AA:NN
	Community pulumi.StringInput `pulumi:"community"`
}

func (GetRoutemapRuleSetExtcommunitySooArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (i GetRoutemapRuleSetExtcommunitySooArgs) ToGetRoutemapRuleSetExtcommunitySooOutput() GetRoutemapRuleSetExtcommunitySooOutput {
	return i.ToGetRoutemapRuleSetExtcommunitySooOutputWithContext(context.Background())
}

func (i GetRoutemapRuleSetExtcommunitySooArgs) ToGetRoutemapRuleSetExtcommunitySooOutputWithContext(ctx context.Context) GetRoutemapRuleSetExtcommunitySooOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutemapRuleSetExtcommunitySooOutput)
}

// GetRoutemapRuleSetExtcommunitySooArrayInput is an input type that accepts GetRoutemapRuleSetExtcommunitySooArray and GetRoutemapRuleSetExtcommunitySooArrayOutput values.
// You can construct a concrete instance of `GetRoutemapRuleSetExtcommunitySooArrayInput` via:
//
//	GetRoutemapRuleSetExtcommunitySooArray{ GetRoutemapRuleSetExtcommunitySooArgs{...} }
type GetRoutemapRuleSetExtcommunitySooArrayInput interface {
	pulumi.Input

	ToGetRoutemapRuleSetExtcommunitySooArrayOutput() GetRoutemapRuleSetExtcommunitySooArrayOutput
	ToGetRoutemapRuleSetExtcommunitySooArrayOutputWithContext(context.Context) GetRoutemapRuleSetExtcommunitySooArrayOutput
}

type GetRoutemapRuleSetExtcommunitySooArray []GetRoutemapRuleSetExtcommunitySooInput

func (GetRoutemapRuleSetExtcommunitySooArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (i GetRoutemapRuleSetExtcommunitySooArray) ToGetRoutemapRuleSetExtcommunitySooArrayOutput() GetRoutemapRuleSetExtcommunitySooArrayOutput {
	return i.ToGetRoutemapRuleSetExtcommunitySooArrayOutputWithContext(context.Background())
}

func (i GetRoutemapRuleSetExtcommunitySooArray) ToGetRoutemapRuleSetExtcommunitySooArrayOutputWithContext(ctx context.Context) GetRoutemapRuleSetExtcommunitySooArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutemapRuleSetExtcommunitySooArrayOutput)
}

type GetRoutemapRuleSetExtcommunitySooOutput struct{ *pulumi.OutputState }

func (GetRoutemapRuleSetExtcommunitySooOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (o GetRoutemapRuleSetExtcommunitySooOutput) ToGetRoutemapRuleSetExtcommunitySooOutput() GetRoutemapRuleSetExtcommunitySooOutput {
	return o
}

func (o GetRoutemapRuleSetExtcommunitySooOutput) ToGetRoutemapRuleSetExtcommunitySooOutputWithContext(ctx context.Context) GetRoutemapRuleSetExtcommunitySooOutput {
	return o
}

// AA:NN
func (o GetRoutemapRuleSetExtcommunitySooOutput) Community() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutemapRuleSetExtcommunitySoo) string { return v.Community }).(pulumi.StringOutput)
}

type GetRoutemapRuleSetExtcommunitySooArrayOutput struct{ *pulumi.OutputState }

func (GetRoutemapRuleSetExtcommunitySooArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (o GetRoutemapRuleSetExtcommunitySooArrayOutput) ToGetRoutemapRuleSetExtcommunitySooArrayOutput() GetRoutemapRuleSetExtcommunitySooArrayOutput {
	return o
}

func (o GetRoutemapRuleSetExtcommunitySooArrayOutput) ToGetRoutemapRuleSetExtcommunitySooArrayOutputWithContext(ctx context.Context) GetRoutemapRuleSetExtcommunitySooArrayOutput {
	return o
}

func (o GetRoutemapRuleSetExtcommunitySooArrayOutput) Index(i pulumi.IntInput) GetRoutemapRuleSetExtcommunitySooOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoutemapRuleSetExtcommunitySoo {
		return vs[0].([]GetRoutemapRuleSetExtcommunitySoo)[vs[1].(int)]
	}).(GetRoutemapRuleSetExtcommunitySooOutput)
}

type GetStatic6SdwanZone struct {
	// SD-WAN zone name.
	Name string `pulumi:"name"`
}

// GetStatic6SdwanZoneInput is an input type that accepts GetStatic6SdwanZoneArgs and GetStatic6SdwanZoneOutput values.
// You can construct a concrete instance of `GetStatic6SdwanZoneInput` via:
//
//	GetStatic6SdwanZoneArgs{...}
type GetStatic6SdwanZoneInput interface {
	pulumi.Input

	ToGetStatic6SdwanZoneOutput() GetStatic6SdwanZoneOutput
	ToGetStatic6SdwanZoneOutputWithContext(context.Context) GetStatic6SdwanZoneOutput
}

type GetStatic6SdwanZoneArgs struct {
	// SD-WAN zone name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetStatic6SdwanZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStatic6SdwanZone)(nil)).Elem()
}

func (i GetStatic6SdwanZoneArgs) ToGetStatic6SdwanZoneOutput() GetStatic6SdwanZoneOutput {
	return i.ToGetStatic6SdwanZoneOutputWithContext(context.Background())
}

func (i GetStatic6SdwanZoneArgs) ToGetStatic6SdwanZoneOutputWithContext(ctx context.Context) GetStatic6SdwanZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStatic6SdwanZoneOutput)
}

// GetStatic6SdwanZoneArrayInput is an input type that accepts GetStatic6SdwanZoneArray and GetStatic6SdwanZoneArrayOutput values.
// You can construct a concrete instance of `GetStatic6SdwanZoneArrayInput` via:
//
//	GetStatic6SdwanZoneArray{ GetStatic6SdwanZoneArgs{...} }
type GetStatic6SdwanZoneArrayInput interface {
	pulumi.Input

	ToGetStatic6SdwanZoneArrayOutput() GetStatic6SdwanZoneArrayOutput
	ToGetStatic6SdwanZoneArrayOutputWithContext(context.Context) GetStatic6SdwanZoneArrayOutput
}

type GetStatic6SdwanZoneArray []GetStatic6SdwanZoneInput

func (GetStatic6SdwanZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStatic6SdwanZone)(nil)).Elem()
}

func (i GetStatic6SdwanZoneArray) ToGetStatic6SdwanZoneArrayOutput() GetStatic6SdwanZoneArrayOutput {
	return i.ToGetStatic6SdwanZoneArrayOutputWithContext(context.Background())
}

func (i GetStatic6SdwanZoneArray) ToGetStatic6SdwanZoneArrayOutputWithContext(ctx context.Context) GetStatic6SdwanZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStatic6SdwanZoneArrayOutput)
}

type GetStatic6SdwanZoneOutput struct{ *pulumi.OutputState }

func (GetStatic6SdwanZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStatic6SdwanZone)(nil)).Elem()
}

func (o GetStatic6SdwanZoneOutput) ToGetStatic6SdwanZoneOutput() GetStatic6SdwanZoneOutput {
	return o
}

func (o GetStatic6SdwanZoneOutput) ToGetStatic6SdwanZoneOutputWithContext(ctx context.Context) GetStatic6SdwanZoneOutput {
	return o
}

// SD-WAN zone name.
func (o GetStatic6SdwanZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStatic6SdwanZone) string { return v.Name }).(pulumi.StringOutput)
}

type GetStatic6SdwanZoneArrayOutput struct{ *pulumi.OutputState }

func (GetStatic6SdwanZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStatic6SdwanZone)(nil)).Elem()
}

func (o GetStatic6SdwanZoneArrayOutput) ToGetStatic6SdwanZoneArrayOutput() GetStatic6SdwanZoneArrayOutput {
	return o
}

func (o GetStatic6SdwanZoneArrayOutput) ToGetStatic6SdwanZoneArrayOutputWithContext(ctx context.Context) GetStatic6SdwanZoneArrayOutput {
	return o
}

func (o GetStatic6SdwanZoneArrayOutput) Index(i pulumi.IntInput) GetStatic6SdwanZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStatic6SdwanZone {
		return vs[0].([]GetStatic6SdwanZone)[vs[1].(int)]
	}).(GetStatic6SdwanZoneOutput)
}

type GetStaticSdwanZone struct {
	// SD-WAN zone name.
	Name string `pulumi:"name"`
}

// GetStaticSdwanZoneInput is an input type that accepts GetStaticSdwanZoneArgs and GetStaticSdwanZoneOutput values.
// You can construct a concrete instance of `GetStaticSdwanZoneInput` via:
//
//	GetStaticSdwanZoneArgs{...}
type GetStaticSdwanZoneInput interface {
	pulumi.Input

	ToGetStaticSdwanZoneOutput() GetStaticSdwanZoneOutput
	ToGetStaticSdwanZoneOutputWithContext(context.Context) GetStaticSdwanZoneOutput
}

type GetStaticSdwanZoneArgs struct {
	// SD-WAN zone name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetStaticSdwanZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStaticSdwanZone)(nil)).Elem()
}

func (i GetStaticSdwanZoneArgs) ToGetStaticSdwanZoneOutput() GetStaticSdwanZoneOutput {
	return i.ToGetStaticSdwanZoneOutputWithContext(context.Background())
}

func (i GetStaticSdwanZoneArgs) ToGetStaticSdwanZoneOutputWithContext(ctx context.Context) GetStaticSdwanZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStaticSdwanZoneOutput)
}

// GetStaticSdwanZoneArrayInput is an input type that accepts GetStaticSdwanZoneArray and GetStaticSdwanZoneArrayOutput values.
// You can construct a concrete instance of `GetStaticSdwanZoneArrayInput` via:
//
//	GetStaticSdwanZoneArray{ GetStaticSdwanZoneArgs{...} }
type GetStaticSdwanZoneArrayInput interface {
	pulumi.Input

	ToGetStaticSdwanZoneArrayOutput() GetStaticSdwanZoneArrayOutput
	ToGetStaticSdwanZoneArrayOutputWithContext(context.Context) GetStaticSdwanZoneArrayOutput
}

type GetStaticSdwanZoneArray []GetStaticSdwanZoneInput

func (GetStaticSdwanZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStaticSdwanZone)(nil)).Elem()
}

func (i GetStaticSdwanZoneArray) ToGetStaticSdwanZoneArrayOutput() GetStaticSdwanZoneArrayOutput {
	return i.ToGetStaticSdwanZoneArrayOutputWithContext(context.Background())
}

func (i GetStaticSdwanZoneArray) ToGetStaticSdwanZoneArrayOutputWithContext(ctx context.Context) GetStaticSdwanZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStaticSdwanZoneArrayOutput)
}

type GetStaticSdwanZoneOutput struct{ *pulumi.OutputState }

func (GetStaticSdwanZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStaticSdwanZone)(nil)).Elem()
}

func (o GetStaticSdwanZoneOutput) ToGetStaticSdwanZoneOutput() GetStaticSdwanZoneOutput {
	return o
}

func (o GetStaticSdwanZoneOutput) ToGetStaticSdwanZoneOutputWithContext(ctx context.Context) GetStaticSdwanZoneOutput {
	return o
}

// SD-WAN zone name.
func (o GetStaticSdwanZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStaticSdwanZone) string { return v.Name }).(pulumi.StringOutput)
}

type GetStaticSdwanZoneArrayOutput struct{ *pulumi.OutputState }

func (GetStaticSdwanZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStaticSdwanZone)(nil)).Elem()
}

func (o GetStaticSdwanZoneArrayOutput) ToGetStaticSdwanZoneArrayOutput() GetStaticSdwanZoneArrayOutput {
	return o
}

func (o GetStaticSdwanZoneArrayOutput) ToGetStaticSdwanZoneArrayOutputWithContext(ctx context.Context) GetStaticSdwanZoneArrayOutput {
	return o
}

func (o GetStaticSdwanZoneArrayOutput) Index(i pulumi.IntInput) GetStaticSdwanZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStaticSdwanZone {
		return vs[0].([]GetStaticSdwanZone)[vs[1].(int)]
	}).(GetStaticSdwanZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Accesslist6RuleInput)(nil)).Elem(), Accesslist6RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accesslist6RuleArrayInput)(nil)).Elem(), Accesslist6RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccesslistRuleInput)(nil)).Elem(), AccesslistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccesslistRuleArrayInput)(nil)).Elem(), AccesslistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AspathlistRuleInput)(nil)).Elem(), AspathlistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AspathlistRuleArrayInput)(nil)).Elem(), AspathlistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Bfd6MultihopTemplateInput)(nil)).Elem(), Bfd6MultihopTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Bfd6MultihopTemplateArrayInput)(nil)).Elem(), Bfd6MultihopTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Bfd6NeighborInput)(nil)).Elem(), Bfd6NeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Bfd6NeighborArrayInput)(nil)).Elem(), Bfd6NeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BfdMultihopTemplateInput)(nil)).Elem(), BfdMultihopTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BfdMultihopTemplateArrayInput)(nil)).Elem(), BfdMultihopTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BfdNeighborInput)(nil)).Elem(), BfdNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BfdNeighborArrayInput)(nil)).Elem(), BfdNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAdminDistanceInput)(nil)).Elem(), BgpAdminDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAdminDistanceArrayInput)(nil)).Elem(), BgpAdminDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAggregateAddress6Input)(nil)).Elem(), BgpAggregateAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAggregateAddress6ArrayInput)(nil)).Elem(), BgpAggregateAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAggregateAddressInput)(nil)).Elem(), BgpAggregateAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAggregateAddressArrayInput)(nil)).Elem(), BgpAggregateAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpConfederationPeerInput)(nil)).Elem(), BgpConfederationPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpConfederationPeerArrayInput)(nil)).Elem(), BgpConfederationPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborInput)(nil)).Elem(), BgpNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborArrayInput)(nil)).Elem(), BgpNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborConditionalAdvertise6Input)(nil)).Elem(), BgpNeighborConditionalAdvertise6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborConditionalAdvertise6ArrayInput)(nil)).Elem(), BgpNeighborConditionalAdvertise6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborConditionalAdvertiseInput)(nil)).Elem(), BgpNeighborConditionalAdvertiseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborConditionalAdvertiseArrayInput)(nil)).Elem(), BgpNeighborConditionalAdvertiseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborGroupInput)(nil)).Elem(), BgpNeighborGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborGroupArrayInput)(nil)).Elem(), BgpNeighborGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborRange6Input)(nil)).Elem(), BgpNeighborRange6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborRange6ArrayInput)(nil)).Elem(), BgpNeighborRange6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborRangeInput)(nil)).Elem(), BgpNeighborRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborRangeArrayInput)(nil)).Elem(), BgpNeighborRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNetwork6Input)(nil)).Elem(), BgpNetwork6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNetwork6ArrayInput)(nil)).Elem(), BgpNetwork6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNetworkInput)(nil)).Elem(), BgpNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNetworkArrayInput)(nil)).Elem(), BgpNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpRedistribute6Input)(nil)).Elem(), BgpRedistribute6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpRedistribute6ArrayInput)(nil)).Elem(), BgpRedistribute6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpRedistributeInput)(nil)).Elem(), BgpRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpRedistributeArrayInput)(nil)).Elem(), BgpRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrf6Input)(nil)).Elem(), BgpVrf6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrf6ArrayInput)(nil)).Elem(), BgpVrf6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrf6ExportRtInput)(nil)).Elem(), BgpVrf6ExportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrf6ExportRtArrayInput)(nil)).Elem(), BgpVrf6ExportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrf6ImportRtInput)(nil)).Elem(), BgpVrf6ImportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrf6ImportRtArrayInput)(nil)).Elem(), BgpVrf6ImportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrf6LeakTargetInput)(nil)).Elem(), BgpVrf6LeakTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrf6LeakTargetArrayInput)(nil)).Elem(), BgpVrf6LeakTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfInput)(nil)).Elem(), BgpVrfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfArrayInput)(nil)).Elem(), BgpVrfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfExportRtInput)(nil)).Elem(), BgpVrfExportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfExportRtArrayInput)(nil)).Elem(), BgpVrfExportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfImportRtInput)(nil)).Elem(), BgpVrfImportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfImportRtArrayInput)(nil)).Elem(), BgpVrfImportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfLeak6Input)(nil)).Elem(), BgpVrfLeak6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfLeak6ArrayInput)(nil)).Elem(), BgpVrfLeak6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfLeak6TargetInput)(nil)).Elem(), BgpVrfLeak6TargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfLeak6TargetArrayInput)(nil)).Elem(), BgpVrfLeak6TargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfLeakInput)(nil)).Elem(), BgpVrfLeakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfLeakArrayInput)(nil)).Elem(), BgpVrfLeakArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfLeakTargetInput)(nil)).Elem(), BgpVrfLeakTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpVrfLeakTargetArrayInput)(nil)).Elem(), BgpVrfLeakTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommunitylistRuleInput)(nil)).Elem(), CommunitylistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommunitylistRuleArrayInput)(nil)).Elem(), CommunitylistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtcommunitylistRuleInput)(nil)).Elem(), ExtcommunitylistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtcommunitylistRuleArrayInput)(nil)).Elem(), ExtcommunitylistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisIsisInterfaceInput)(nil)).Elem(), IsisIsisInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisIsisInterfaceArrayInput)(nil)).Elem(), IsisIsisInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisIsisNetInput)(nil)).Elem(), IsisIsisNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisIsisNetArrayInput)(nil)).Elem(), IsisIsisNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisRedistribute6Input)(nil)).Elem(), IsisRedistribute6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisRedistribute6ArrayInput)(nil)).Elem(), IsisRedistribute6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisRedistributeInput)(nil)).Elem(), IsisRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisRedistributeArrayInput)(nil)).Elem(), IsisRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisSummaryAddress6Input)(nil)).Elem(), IsisSummaryAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisSummaryAddress6ArrayInput)(nil)).Elem(), IsisSummaryAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisSummaryAddressInput)(nil)).Elem(), IsisSummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IsisSummaryAddressArrayInput)(nil)).Elem(), IsisSummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeychainKeyInput)(nil)).Elem(), KeychainKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeychainKeyArrayInput)(nil)).Elem(), KeychainKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicast6InterfaceInput)(nil)).Elem(), Multicast6InterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicast6InterfaceArrayInput)(nil)).Elem(), Multicast6InterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicast6PimSmGlobalInput)(nil)).Elem(), Multicast6PimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicast6PimSmGlobalPtrInput)(nil)).Elem(), Multicast6PimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicast6PimSmGlobalRpAddressInput)(nil)).Elem(), Multicast6PimSmGlobalRpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicast6PimSmGlobalRpAddressArrayInput)(nil)).Elem(), Multicast6PimSmGlobalRpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastInterfaceInput)(nil)).Elem(), MulticastInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastInterfaceArrayInput)(nil)).Elem(), MulticastInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastInterfaceIgmpInput)(nil)).Elem(), MulticastInterfaceIgmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastInterfaceIgmpPtrInput)(nil)).Elem(), MulticastInterfaceIgmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastInterfaceJoinGroupInput)(nil)).Elem(), MulticastInterfaceJoinGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastInterfaceJoinGroupArrayInput)(nil)).Elem(), MulticastInterfaceJoinGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastPimSmGlobalInput)(nil)).Elem(), MulticastPimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastPimSmGlobalPtrInput)(nil)).Elem(), MulticastPimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastPimSmGlobalRpAddressInput)(nil)).Elem(), MulticastPimSmGlobalRpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastPimSmGlobalRpAddressArrayInput)(nil)).Elem(), MulticastPimSmGlobalRpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastflowFlowInput)(nil)).Elem(), MulticastflowFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastflowFlowArrayInput)(nil)).Elem(), MulticastflowFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6AreaInput)(nil)).Elem(), Ospf6AreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6AreaArrayInput)(nil)).Elem(), Ospf6AreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6AreaIpsecKeyInput)(nil)).Elem(), Ospf6AreaIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6AreaIpsecKeyArrayInput)(nil)).Elem(), Ospf6AreaIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6AreaRangeInput)(nil)).Elem(), Ospf6AreaRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6AreaRangeArrayInput)(nil)).Elem(), Ospf6AreaRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6AreaVirtualLinkInput)(nil)).Elem(), Ospf6AreaVirtualLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6AreaVirtualLinkArrayInput)(nil)).Elem(), Ospf6AreaVirtualLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6AreaVirtualLinkIpsecKeyInput)(nil)).Elem(), Ospf6AreaVirtualLinkIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6AreaVirtualLinkIpsecKeyArrayInput)(nil)).Elem(), Ospf6AreaVirtualLinkIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6Ospf6InterfaceInput)(nil)).Elem(), Ospf6Ospf6InterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6Ospf6InterfaceArrayInput)(nil)).Elem(), Ospf6Ospf6InterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6Ospf6InterfaceIpsecKeyInput)(nil)).Elem(), Ospf6Ospf6InterfaceIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6Ospf6InterfaceIpsecKeyArrayInput)(nil)).Elem(), Ospf6Ospf6InterfaceIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6Ospf6InterfaceNeighborInput)(nil)).Elem(), Ospf6Ospf6InterfaceNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6Ospf6InterfaceNeighborArrayInput)(nil)).Elem(), Ospf6Ospf6InterfaceNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6PassiveInterfaceInput)(nil)).Elem(), Ospf6PassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6PassiveInterfaceArrayInput)(nil)).Elem(), Ospf6PassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6RedistributeInput)(nil)).Elem(), Ospf6RedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6RedistributeArrayInput)(nil)).Elem(), Ospf6RedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6SummaryAddressInput)(nil)).Elem(), Ospf6SummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6SummaryAddressArrayInput)(nil)).Elem(), Ospf6SummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAreaInput)(nil)).Elem(), OspfAreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAreaArrayInput)(nil)).Elem(), OspfAreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAreaFilterListInput)(nil)).Elem(), OspfAreaFilterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAreaFilterListArrayInput)(nil)).Elem(), OspfAreaFilterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAreaRangeInput)(nil)).Elem(), OspfAreaRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAreaRangeArrayInput)(nil)).Elem(), OspfAreaRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAreaVirtualLinkInput)(nil)).Elem(), OspfAreaVirtualLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAreaVirtualLinkArrayInput)(nil)).Elem(), OspfAreaVirtualLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAreaVirtualLinkMd5KeyInput)(nil)).Elem(), OspfAreaVirtualLinkMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfAreaVirtualLinkMd5KeyArrayInput)(nil)).Elem(), OspfAreaVirtualLinkMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfDistributeListInput)(nil)).Elem(), OspfDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfDistributeListArrayInput)(nil)).Elem(), OspfDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfNeighborInput)(nil)).Elem(), OspfNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfNeighborArrayInput)(nil)).Elem(), OspfNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfNetworkInput)(nil)).Elem(), OspfNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfNetworkArrayInput)(nil)).Elem(), OspfNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfOspfInterfaceInput)(nil)).Elem(), OspfOspfInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfOspfInterfaceArrayInput)(nil)).Elem(), OspfOspfInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfOspfInterfaceMd5KeyInput)(nil)).Elem(), OspfOspfInterfaceMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfOspfInterfaceMd5KeyArrayInput)(nil)).Elem(), OspfOspfInterfaceMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfPassiveInterfaceInput)(nil)).Elem(), OspfPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfPassiveInterfaceArrayInput)(nil)).Elem(), OspfPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfRedistributeInput)(nil)).Elem(), OspfRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfRedistributeArrayInput)(nil)).Elem(), OspfRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfSummaryAddressInput)(nil)).Elem(), OspfSummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfSummaryAddressArrayInput)(nil)).Elem(), OspfSummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6DstaddrInput)(nil)).Elem(), Policy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6DstaddrArrayInput)(nil)).Elem(), Policy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6InternetServiceCustomInput)(nil)).Elem(), Policy6InternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6InternetServiceCustomArrayInput)(nil)).Elem(), Policy6InternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6InternetServiceIdInput)(nil)).Elem(), Policy6InternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6InternetServiceIdArrayInput)(nil)).Elem(), Policy6InternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6SrcaddrInput)(nil)).Elem(), Policy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6SrcaddrArrayInput)(nil)).Elem(), Policy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstInput)(nil)).Elem(), PolicyDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstArrayInput)(nil)).Elem(), PolicyDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstaddrInput)(nil)).Elem(), PolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstaddrArrayInput)(nil)).Elem(), PolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInputDeviceInput)(nil)).Elem(), PolicyInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInputDeviceArrayInput)(nil)).Elem(), PolicyInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceCustomInput)(nil)).Elem(), PolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceCustomArrayInput)(nil)).Elem(), PolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceIdInput)(nil)).Elem(), PolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceIdArrayInput)(nil)).Elem(), PolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcInput)(nil)).Elem(), PolicySrcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcArrayInput)(nil)).Elem(), PolicySrcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcaddrInput)(nil)).Elem(), PolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcaddrArrayInput)(nil)).Elem(), PolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Prefixlist6RuleInput)(nil)).Elem(), Prefixlist6RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Prefixlist6RuleArrayInput)(nil)).Elem(), Prefixlist6RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixlistRuleInput)(nil)).Elem(), PrefixlistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixlistRuleArrayInput)(nil)).Elem(), PrefixlistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipDistanceInput)(nil)).Elem(), RipDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipDistanceArrayInput)(nil)).Elem(), RipDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipDistributeListInput)(nil)).Elem(), RipDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipDistributeListArrayInput)(nil)).Elem(), RipDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipInterfaceInput)(nil)).Elem(), RipInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipInterfaceArrayInput)(nil)).Elem(), RipInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipNeighborInput)(nil)).Elem(), RipNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipNeighborArrayInput)(nil)).Elem(), RipNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipNetworkInput)(nil)).Elem(), RipNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipNetworkArrayInput)(nil)).Elem(), RipNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipOffsetListInput)(nil)).Elem(), RipOffsetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipOffsetListArrayInput)(nil)).Elem(), RipOffsetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipPassiveInterfaceInput)(nil)).Elem(), RipPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipPassiveInterfaceArrayInput)(nil)).Elem(), RipPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipRedistributeInput)(nil)).Elem(), RipRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipRedistributeArrayInput)(nil)).Elem(), RipRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngAggregateAddressInput)(nil)).Elem(), RipngAggregateAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngAggregateAddressArrayInput)(nil)).Elem(), RipngAggregateAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngDistanceInput)(nil)).Elem(), RipngDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngDistanceArrayInput)(nil)).Elem(), RipngDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngDistributeListInput)(nil)).Elem(), RipngDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngDistributeListArrayInput)(nil)).Elem(), RipngDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngInterfaceInput)(nil)).Elem(), RipngInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngInterfaceArrayInput)(nil)).Elem(), RipngInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngNeighborInput)(nil)).Elem(), RipngNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngNeighborArrayInput)(nil)).Elem(), RipngNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngNetworkInput)(nil)).Elem(), RipngNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngNetworkArrayInput)(nil)).Elem(), RipngNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngOffsetListInput)(nil)).Elem(), RipngOffsetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngOffsetListArrayInput)(nil)).Elem(), RipngOffsetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngPassiveInterfaceInput)(nil)).Elem(), RipngPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngPassiveInterfaceArrayInput)(nil)).Elem(), RipngPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngRedistributeInput)(nil)).Elem(), RipngRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngRedistributeArrayInput)(nil)).Elem(), RipngRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutemapRuleInput)(nil)).Elem(), RoutemapRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutemapRuleArrayInput)(nil)).Elem(), RoutemapRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutemapRuleSetAspathInput)(nil)).Elem(), RoutemapRuleSetAspathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutemapRuleSetAspathArrayInput)(nil)).Elem(), RoutemapRuleSetAspathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutemapRuleSetCommunityInput)(nil)).Elem(), RoutemapRuleSetCommunityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutemapRuleSetCommunityArrayInput)(nil)).Elem(), RoutemapRuleSetCommunityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutemapRuleSetExtcommunityRtInput)(nil)).Elem(), RoutemapRuleSetExtcommunityRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutemapRuleSetExtcommunityRtArrayInput)(nil)).Elem(), RoutemapRuleSetExtcommunityRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutemapRuleSetExtcommunitySooInput)(nil)).Elem(), RoutemapRuleSetExtcommunitySooArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutemapRuleSetExtcommunitySooArrayInput)(nil)).Elem(), RoutemapRuleSetExtcommunitySooArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Static6SdwanZoneInput)(nil)).Elem(), Static6SdwanZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Static6SdwanZoneArrayInput)(nil)).Elem(), Static6SdwanZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticSdwanZoneInput)(nil)).Elem(), StaticSdwanZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticSdwanZoneArrayInput)(nil)).Elem(), StaticSdwanZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccesslist6RuleInput)(nil)).Elem(), GetAccesslist6RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccesslist6RuleArrayInput)(nil)).Elem(), GetAccesslist6RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccesslistRuleInput)(nil)).Elem(), GetAccesslistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccesslistRuleArrayInput)(nil)).Elem(), GetAccesslistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAspathlistRuleInput)(nil)).Elem(), GetAspathlistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAspathlistRuleArrayInput)(nil)).Elem(), GetAspathlistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBfd6MultihopTemplateInput)(nil)).Elem(), GetBfd6MultihopTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBfd6MultihopTemplateArrayInput)(nil)).Elem(), GetBfd6MultihopTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBfd6NeighborInput)(nil)).Elem(), GetBfd6NeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBfd6NeighborArrayInput)(nil)).Elem(), GetBfd6NeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBfdMultihopTemplateInput)(nil)).Elem(), GetBfdMultihopTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBfdMultihopTemplateArrayInput)(nil)).Elem(), GetBfdMultihopTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBfdNeighborInput)(nil)).Elem(), GetBfdNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBfdNeighborArrayInput)(nil)).Elem(), GetBfdNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpAdminDistanceInput)(nil)).Elem(), GetBgpAdminDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpAdminDistanceArrayInput)(nil)).Elem(), GetBgpAdminDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpAggregateAddress6Input)(nil)).Elem(), GetBgpAggregateAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpAggregateAddress6ArrayInput)(nil)).Elem(), GetBgpAggregateAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpAggregateAddressInput)(nil)).Elem(), GetBgpAggregateAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpAggregateAddressArrayInput)(nil)).Elem(), GetBgpAggregateAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpConfederationPeerInput)(nil)).Elem(), GetBgpConfederationPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpConfederationPeerArrayInput)(nil)).Elem(), GetBgpConfederationPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborInput)(nil)).Elem(), GetBgpNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborArrayInput)(nil)).Elem(), GetBgpNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborConditionalAdvertise6Input)(nil)).Elem(), GetBgpNeighborConditionalAdvertise6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborConditionalAdvertise6ArrayInput)(nil)).Elem(), GetBgpNeighborConditionalAdvertise6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborConditionalAdvertiseInput)(nil)).Elem(), GetBgpNeighborConditionalAdvertiseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborConditionalAdvertiseArrayInput)(nil)).Elem(), GetBgpNeighborConditionalAdvertiseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborGroupInput)(nil)).Elem(), GetBgpNeighborGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborGroupArrayInput)(nil)).Elem(), GetBgpNeighborGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborRange6Input)(nil)).Elem(), GetBgpNeighborRange6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborRange6ArrayInput)(nil)).Elem(), GetBgpNeighborRange6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborRangeInput)(nil)).Elem(), GetBgpNeighborRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNeighborRangeArrayInput)(nil)).Elem(), GetBgpNeighborRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNetwork6Input)(nil)).Elem(), GetBgpNetwork6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNetwork6ArrayInput)(nil)).Elem(), GetBgpNetwork6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNetworkInput)(nil)).Elem(), GetBgpNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNetworkArrayInput)(nil)).Elem(), GetBgpNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpRedistribute6Input)(nil)).Elem(), GetBgpRedistribute6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpRedistribute6ArrayInput)(nil)).Elem(), GetBgpRedistribute6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpRedistributeInput)(nil)).Elem(), GetBgpRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpRedistributeArrayInput)(nil)).Elem(), GetBgpRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrf6Input)(nil)).Elem(), GetBgpVrf6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrf6ArrayInput)(nil)).Elem(), GetBgpVrf6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrf6ExportRtInput)(nil)).Elem(), GetBgpVrf6ExportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrf6ExportRtArrayInput)(nil)).Elem(), GetBgpVrf6ExportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrf6ImportRtInput)(nil)).Elem(), GetBgpVrf6ImportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrf6ImportRtArrayInput)(nil)).Elem(), GetBgpVrf6ImportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrf6LeakTargetInput)(nil)).Elem(), GetBgpVrf6LeakTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrf6LeakTargetArrayInput)(nil)).Elem(), GetBgpVrf6LeakTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfInput)(nil)).Elem(), GetBgpVrfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfArrayInput)(nil)).Elem(), GetBgpVrfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfExportRtInput)(nil)).Elem(), GetBgpVrfExportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfExportRtArrayInput)(nil)).Elem(), GetBgpVrfExportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfImportRtInput)(nil)).Elem(), GetBgpVrfImportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfImportRtArrayInput)(nil)).Elem(), GetBgpVrfImportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfLeak6Input)(nil)).Elem(), GetBgpVrfLeak6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfLeak6ArrayInput)(nil)).Elem(), GetBgpVrfLeak6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfLeak6TargetInput)(nil)).Elem(), GetBgpVrfLeak6TargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfLeak6TargetArrayInput)(nil)).Elem(), GetBgpVrfLeak6TargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfLeakInput)(nil)).Elem(), GetBgpVrfLeakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfLeakArrayInput)(nil)).Elem(), GetBgpVrfLeakArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfLeakTargetInput)(nil)).Elem(), GetBgpVrfLeakTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpVrfLeakTargetArrayInput)(nil)).Elem(), GetBgpVrfLeakTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommunitylistRuleInput)(nil)).Elem(), GetCommunitylistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommunitylistRuleArrayInput)(nil)).Elem(), GetCommunitylistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisIsisInterfaceInput)(nil)).Elem(), GetIsisIsisInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisIsisInterfaceArrayInput)(nil)).Elem(), GetIsisIsisInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisIsisNetInput)(nil)).Elem(), GetIsisIsisNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisIsisNetArrayInput)(nil)).Elem(), GetIsisIsisNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisRedistribute6Input)(nil)).Elem(), GetIsisRedistribute6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisRedistribute6ArrayInput)(nil)).Elem(), GetIsisRedistribute6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisRedistributeInput)(nil)).Elem(), GetIsisRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisRedistributeArrayInput)(nil)).Elem(), GetIsisRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisSummaryAddress6Input)(nil)).Elem(), GetIsisSummaryAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisSummaryAddress6ArrayInput)(nil)).Elem(), GetIsisSummaryAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisSummaryAddressInput)(nil)).Elem(), GetIsisSummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIsisSummaryAddressArrayInput)(nil)).Elem(), GetIsisSummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeychainKeyInput)(nil)).Elem(), GetKeychainKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeychainKeyArrayInput)(nil)).Elem(), GetKeychainKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticast6InterfaceInput)(nil)).Elem(), GetMulticast6InterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticast6InterfaceArrayInput)(nil)).Elem(), GetMulticast6InterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticast6PimSmGlobalInput)(nil)).Elem(), GetMulticast6PimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticast6PimSmGlobalArrayInput)(nil)).Elem(), GetMulticast6PimSmGlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticast6PimSmGlobalRpAddressInput)(nil)).Elem(), GetMulticast6PimSmGlobalRpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticast6PimSmGlobalRpAddressArrayInput)(nil)).Elem(), GetMulticast6PimSmGlobalRpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastInterfaceInput)(nil)).Elem(), GetMulticastInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastInterfaceArrayInput)(nil)).Elem(), GetMulticastInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastInterfaceIgmpInput)(nil)).Elem(), GetMulticastInterfaceIgmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastInterfaceIgmpArrayInput)(nil)).Elem(), GetMulticastInterfaceIgmpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastInterfaceJoinGroupInput)(nil)).Elem(), GetMulticastInterfaceJoinGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastInterfaceJoinGroupArrayInput)(nil)).Elem(), GetMulticastInterfaceJoinGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastPimSmGlobalInput)(nil)).Elem(), GetMulticastPimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastPimSmGlobalArrayInput)(nil)).Elem(), GetMulticastPimSmGlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastPimSmGlobalRpAddressInput)(nil)).Elem(), GetMulticastPimSmGlobalRpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastPimSmGlobalRpAddressArrayInput)(nil)).Elem(), GetMulticastPimSmGlobalRpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastflowFlowInput)(nil)).Elem(), GetMulticastflowFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastflowFlowArrayInput)(nil)).Elem(), GetMulticastflowFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6AreaInput)(nil)).Elem(), GetOspf6AreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6AreaArrayInput)(nil)).Elem(), GetOspf6AreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6AreaIpsecKeyInput)(nil)).Elem(), GetOspf6AreaIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6AreaIpsecKeyArrayInput)(nil)).Elem(), GetOspf6AreaIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6AreaRangeInput)(nil)).Elem(), GetOspf6AreaRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6AreaRangeArrayInput)(nil)).Elem(), GetOspf6AreaRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6AreaVirtualLinkInput)(nil)).Elem(), GetOspf6AreaVirtualLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6AreaVirtualLinkArrayInput)(nil)).Elem(), GetOspf6AreaVirtualLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6AreaVirtualLinkIpsecKeyInput)(nil)).Elem(), GetOspf6AreaVirtualLinkIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6AreaVirtualLinkIpsecKeyArrayInput)(nil)).Elem(), GetOspf6AreaVirtualLinkIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6Ospf6InterfaceInput)(nil)).Elem(), GetOspf6Ospf6InterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6Ospf6InterfaceArrayInput)(nil)).Elem(), GetOspf6Ospf6InterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6Ospf6InterfaceIpsecKeyInput)(nil)).Elem(), GetOspf6Ospf6InterfaceIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6Ospf6InterfaceIpsecKeyArrayInput)(nil)).Elem(), GetOspf6Ospf6InterfaceIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6Ospf6InterfaceNeighborInput)(nil)).Elem(), GetOspf6Ospf6InterfaceNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6Ospf6InterfaceNeighborArrayInput)(nil)).Elem(), GetOspf6Ospf6InterfaceNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6PassiveInterfaceInput)(nil)).Elem(), GetOspf6PassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6PassiveInterfaceArrayInput)(nil)).Elem(), GetOspf6PassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6RedistributeInput)(nil)).Elem(), GetOspf6RedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6RedistributeArrayInput)(nil)).Elem(), GetOspf6RedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6SummaryAddressInput)(nil)).Elem(), GetOspf6SummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspf6SummaryAddressArrayInput)(nil)).Elem(), GetOspf6SummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfAreaInput)(nil)).Elem(), GetOspfAreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfAreaArrayInput)(nil)).Elem(), GetOspfAreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfAreaFilterListInput)(nil)).Elem(), GetOspfAreaFilterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfAreaFilterListArrayInput)(nil)).Elem(), GetOspfAreaFilterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfAreaRangeInput)(nil)).Elem(), GetOspfAreaRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfAreaRangeArrayInput)(nil)).Elem(), GetOspfAreaRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfAreaVirtualLinkInput)(nil)).Elem(), GetOspfAreaVirtualLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfAreaVirtualLinkArrayInput)(nil)).Elem(), GetOspfAreaVirtualLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfAreaVirtualLinkMd5KeyInput)(nil)).Elem(), GetOspfAreaVirtualLinkMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfAreaVirtualLinkMd5KeyArrayInput)(nil)).Elem(), GetOspfAreaVirtualLinkMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfDistributeListInput)(nil)).Elem(), GetOspfDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfDistributeListArrayInput)(nil)).Elem(), GetOspfDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfNeighborInput)(nil)).Elem(), GetOspfNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfNeighborArrayInput)(nil)).Elem(), GetOspfNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfNetworkInput)(nil)).Elem(), GetOspfNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfNetworkArrayInput)(nil)).Elem(), GetOspfNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfOspfInterfaceInput)(nil)).Elem(), GetOspfOspfInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfOspfInterfaceArrayInput)(nil)).Elem(), GetOspfOspfInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfOspfInterfaceMd5KeyInput)(nil)).Elem(), GetOspfOspfInterfaceMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfOspfInterfaceMd5KeyArrayInput)(nil)).Elem(), GetOspfOspfInterfaceMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfPassiveInterfaceInput)(nil)).Elem(), GetOspfPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfPassiveInterfaceArrayInput)(nil)).Elem(), GetOspfPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfRedistributeInput)(nil)).Elem(), GetOspfRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfRedistributeArrayInput)(nil)).Elem(), GetOspfRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfSummaryAddressInput)(nil)).Elem(), GetOspfSummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOspfSummaryAddressArrayInput)(nil)).Elem(), GetOspfSummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6DstaddrInput)(nil)).Elem(), GetPolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6DstaddrArrayInput)(nil)).Elem(), GetPolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6InternetServiceCustomInput)(nil)).Elem(), GetPolicy6InternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6InternetServiceCustomArrayInput)(nil)).Elem(), GetPolicy6InternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6InternetServiceIdInput)(nil)).Elem(), GetPolicy6InternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6InternetServiceIdArrayInput)(nil)).Elem(), GetPolicy6InternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6SrcaddrInput)(nil)).Elem(), GetPolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6SrcaddrArrayInput)(nil)).Elem(), GetPolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstInput)(nil)).Elem(), GetPolicyDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstArrayInput)(nil)).Elem(), GetPolicyDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstaddrInput)(nil)).Elem(), GetPolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstaddrArrayInput)(nil)).Elem(), GetPolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInputDeviceInput)(nil)).Elem(), GetPolicyInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInputDeviceArrayInput)(nil)).Elem(), GetPolicyInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceCustomInput)(nil)).Elem(), GetPolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceCustomArrayInput)(nil)).Elem(), GetPolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceIdInput)(nil)).Elem(), GetPolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceIdArrayInput)(nil)).Elem(), GetPolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcInput)(nil)).Elem(), GetPolicySrcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcArrayInput)(nil)).Elem(), GetPolicySrcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcaddrInput)(nil)).Elem(), GetPolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcaddrArrayInput)(nil)).Elem(), GetPolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixlist6RuleInput)(nil)).Elem(), GetPrefixlist6RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixlist6RuleArrayInput)(nil)).Elem(), GetPrefixlist6RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixlistRuleInput)(nil)).Elem(), GetPrefixlistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixlistRuleArrayInput)(nil)).Elem(), GetPrefixlistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipDistanceInput)(nil)).Elem(), GetRipDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipDistanceArrayInput)(nil)).Elem(), GetRipDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipDistributeListInput)(nil)).Elem(), GetRipDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipDistributeListArrayInput)(nil)).Elem(), GetRipDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipInterfaceInput)(nil)).Elem(), GetRipInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipInterfaceArrayInput)(nil)).Elem(), GetRipInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipNeighborInput)(nil)).Elem(), GetRipNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipNeighborArrayInput)(nil)).Elem(), GetRipNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipNetworkInput)(nil)).Elem(), GetRipNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipNetworkArrayInput)(nil)).Elem(), GetRipNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipOffsetListInput)(nil)).Elem(), GetRipOffsetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipOffsetListArrayInput)(nil)).Elem(), GetRipOffsetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipPassiveInterfaceInput)(nil)).Elem(), GetRipPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipPassiveInterfaceArrayInput)(nil)).Elem(), GetRipPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipRedistributeInput)(nil)).Elem(), GetRipRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipRedistributeArrayInput)(nil)).Elem(), GetRipRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngAggregateAddressInput)(nil)).Elem(), GetRipngAggregateAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngAggregateAddressArrayInput)(nil)).Elem(), GetRipngAggregateAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngDistanceInput)(nil)).Elem(), GetRipngDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngDistanceArrayInput)(nil)).Elem(), GetRipngDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngDistributeListInput)(nil)).Elem(), GetRipngDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngDistributeListArrayInput)(nil)).Elem(), GetRipngDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngInterfaceInput)(nil)).Elem(), GetRipngInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngInterfaceArrayInput)(nil)).Elem(), GetRipngInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngNeighborInput)(nil)).Elem(), GetRipngNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngNeighborArrayInput)(nil)).Elem(), GetRipngNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngNetworkInput)(nil)).Elem(), GetRipngNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngNetworkArrayInput)(nil)).Elem(), GetRipngNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngOffsetListInput)(nil)).Elem(), GetRipngOffsetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngOffsetListArrayInput)(nil)).Elem(), GetRipngOffsetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngPassiveInterfaceInput)(nil)).Elem(), GetRipngPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngPassiveInterfaceArrayInput)(nil)).Elem(), GetRipngPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngRedistributeInput)(nil)).Elem(), GetRipngRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRipngRedistributeArrayInput)(nil)).Elem(), GetRipngRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutemapRuleInput)(nil)).Elem(), GetRoutemapRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutemapRuleArrayInput)(nil)).Elem(), GetRoutemapRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutemapRuleSetAspathInput)(nil)).Elem(), GetRoutemapRuleSetAspathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutemapRuleSetAspathArrayInput)(nil)).Elem(), GetRoutemapRuleSetAspathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutemapRuleSetCommunityInput)(nil)).Elem(), GetRoutemapRuleSetCommunityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutemapRuleSetCommunityArrayInput)(nil)).Elem(), GetRoutemapRuleSetCommunityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutemapRuleSetExtcommunityRtInput)(nil)).Elem(), GetRoutemapRuleSetExtcommunityRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutemapRuleSetExtcommunityRtArrayInput)(nil)).Elem(), GetRoutemapRuleSetExtcommunityRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutemapRuleSetExtcommunitySooInput)(nil)).Elem(), GetRoutemapRuleSetExtcommunitySooArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutemapRuleSetExtcommunitySooArrayInput)(nil)).Elem(), GetRoutemapRuleSetExtcommunitySooArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStatic6SdwanZoneInput)(nil)).Elem(), GetStatic6SdwanZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStatic6SdwanZoneArrayInput)(nil)).Elem(), GetStatic6SdwanZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStaticSdwanZoneInput)(nil)).Elem(), GetStaticSdwanZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStaticSdwanZoneArrayInput)(nil)).Elem(), GetStaticSdwanZoneArray{})
	pulumi.RegisterOutputType(Accesslist6RuleOutput{})
	pulumi.RegisterOutputType(Accesslist6RuleArrayOutput{})
	pulumi.RegisterOutputType(AccesslistRuleOutput{})
	pulumi.RegisterOutputType(AccesslistRuleArrayOutput{})
	pulumi.RegisterOutputType(AspathlistRuleOutput{})
	pulumi.RegisterOutputType(AspathlistRuleArrayOutput{})
	pulumi.RegisterOutputType(Bfd6MultihopTemplateOutput{})
	pulumi.RegisterOutputType(Bfd6MultihopTemplateArrayOutput{})
	pulumi.RegisterOutputType(Bfd6NeighborOutput{})
	pulumi.RegisterOutputType(Bfd6NeighborArrayOutput{})
	pulumi.RegisterOutputType(BfdMultihopTemplateOutput{})
	pulumi.RegisterOutputType(BfdMultihopTemplateArrayOutput{})
	pulumi.RegisterOutputType(BfdNeighborOutput{})
	pulumi.RegisterOutputType(BfdNeighborArrayOutput{})
	pulumi.RegisterOutputType(BgpAdminDistanceOutput{})
	pulumi.RegisterOutputType(BgpAdminDistanceArrayOutput{})
	pulumi.RegisterOutputType(BgpAggregateAddress6Output{})
	pulumi.RegisterOutputType(BgpAggregateAddress6ArrayOutput{})
	pulumi.RegisterOutputType(BgpAggregateAddressOutput{})
	pulumi.RegisterOutputType(BgpAggregateAddressArrayOutput{})
	pulumi.RegisterOutputType(BgpConfederationPeerOutput{})
	pulumi.RegisterOutputType(BgpConfederationPeerArrayOutput{})
	pulumi.RegisterOutputType(BgpNeighborOutput{})
	pulumi.RegisterOutputType(BgpNeighborArrayOutput{})
	pulumi.RegisterOutputType(BgpNeighborConditionalAdvertise6Output{})
	pulumi.RegisterOutputType(BgpNeighborConditionalAdvertise6ArrayOutput{})
	pulumi.RegisterOutputType(BgpNeighborConditionalAdvertiseOutput{})
	pulumi.RegisterOutputType(BgpNeighborConditionalAdvertiseArrayOutput{})
	pulumi.RegisterOutputType(BgpNeighborGroupOutput{})
	pulumi.RegisterOutputType(BgpNeighborGroupArrayOutput{})
	pulumi.RegisterOutputType(BgpNeighborRange6Output{})
	pulumi.RegisterOutputType(BgpNeighborRange6ArrayOutput{})
	pulumi.RegisterOutputType(BgpNeighborRangeOutput{})
	pulumi.RegisterOutputType(BgpNeighborRangeArrayOutput{})
	pulumi.RegisterOutputType(BgpNetwork6Output{})
	pulumi.RegisterOutputType(BgpNetwork6ArrayOutput{})
	pulumi.RegisterOutputType(BgpNetworkOutput{})
	pulumi.RegisterOutputType(BgpNetworkArrayOutput{})
	pulumi.RegisterOutputType(BgpRedistribute6Output{})
	pulumi.RegisterOutputType(BgpRedistribute6ArrayOutput{})
	pulumi.RegisterOutputType(BgpRedistributeOutput{})
	pulumi.RegisterOutputType(BgpRedistributeArrayOutput{})
	pulumi.RegisterOutputType(BgpVrf6Output{})
	pulumi.RegisterOutputType(BgpVrf6ArrayOutput{})
	pulumi.RegisterOutputType(BgpVrf6ExportRtOutput{})
	pulumi.RegisterOutputType(BgpVrf6ExportRtArrayOutput{})
	pulumi.RegisterOutputType(BgpVrf6ImportRtOutput{})
	pulumi.RegisterOutputType(BgpVrf6ImportRtArrayOutput{})
	pulumi.RegisterOutputType(BgpVrf6LeakTargetOutput{})
	pulumi.RegisterOutputType(BgpVrf6LeakTargetArrayOutput{})
	pulumi.RegisterOutputType(BgpVrfOutput{})
	pulumi.RegisterOutputType(BgpVrfArrayOutput{})
	pulumi.RegisterOutputType(BgpVrfExportRtOutput{})
	pulumi.RegisterOutputType(BgpVrfExportRtArrayOutput{})
	pulumi.RegisterOutputType(BgpVrfImportRtOutput{})
	pulumi.RegisterOutputType(BgpVrfImportRtArrayOutput{})
	pulumi.RegisterOutputType(BgpVrfLeak6Output{})
	pulumi.RegisterOutputType(BgpVrfLeak6ArrayOutput{})
	pulumi.RegisterOutputType(BgpVrfLeak6TargetOutput{})
	pulumi.RegisterOutputType(BgpVrfLeak6TargetArrayOutput{})
	pulumi.RegisterOutputType(BgpVrfLeakOutput{})
	pulumi.RegisterOutputType(BgpVrfLeakArrayOutput{})
	pulumi.RegisterOutputType(BgpVrfLeakTargetOutput{})
	pulumi.RegisterOutputType(BgpVrfLeakTargetArrayOutput{})
	pulumi.RegisterOutputType(CommunitylistRuleOutput{})
	pulumi.RegisterOutputType(CommunitylistRuleArrayOutput{})
	pulumi.RegisterOutputType(ExtcommunitylistRuleOutput{})
	pulumi.RegisterOutputType(ExtcommunitylistRuleArrayOutput{})
	pulumi.RegisterOutputType(IsisIsisInterfaceOutput{})
	pulumi.RegisterOutputType(IsisIsisInterfaceArrayOutput{})
	pulumi.RegisterOutputType(IsisIsisNetOutput{})
	pulumi.RegisterOutputType(IsisIsisNetArrayOutput{})
	pulumi.RegisterOutputType(IsisRedistribute6Output{})
	pulumi.RegisterOutputType(IsisRedistribute6ArrayOutput{})
	pulumi.RegisterOutputType(IsisRedistributeOutput{})
	pulumi.RegisterOutputType(IsisRedistributeArrayOutput{})
	pulumi.RegisterOutputType(IsisSummaryAddress6Output{})
	pulumi.RegisterOutputType(IsisSummaryAddress6ArrayOutput{})
	pulumi.RegisterOutputType(IsisSummaryAddressOutput{})
	pulumi.RegisterOutputType(IsisSummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(KeychainKeyOutput{})
	pulumi.RegisterOutputType(KeychainKeyArrayOutput{})
	pulumi.RegisterOutputType(Multicast6InterfaceOutput{})
	pulumi.RegisterOutputType(Multicast6InterfaceArrayOutput{})
	pulumi.RegisterOutputType(Multicast6PimSmGlobalOutput{})
	pulumi.RegisterOutputType(Multicast6PimSmGlobalPtrOutput{})
	pulumi.RegisterOutputType(Multicast6PimSmGlobalRpAddressOutput{})
	pulumi.RegisterOutputType(Multicast6PimSmGlobalRpAddressArrayOutput{})
	pulumi.RegisterOutputType(MulticastInterfaceOutput{})
	pulumi.RegisterOutputType(MulticastInterfaceArrayOutput{})
	pulumi.RegisterOutputType(MulticastInterfaceIgmpOutput{})
	pulumi.RegisterOutputType(MulticastInterfaceIgmpPtrOutput{})
	pulumi.RegisterOutputType(MulticastInterfaceJoinGroupOutput{})
	pulumi.RegisterOutputType(MulticastInterfaceJoinGroupArrayOutput{})
	pulumi.RegisterOutputType(MulticastPimSmGlobalOutput{})
	pulumi.RegisterOutputType(MulticastPimSmGlobalPtrOutput{})
	pulumi.RegisterOutputType(MulticastPimSmGlobalRpAddressOutput{})
	pulumi.RegisterOutputType(MulticastPimSmGlobalRpAddressArrayOutput{})
	pulumi.RegisterOutputType(MulticastflowFlowOutput{})
	pulumi.RegisterOutputType(MulticastflowFlowArrayOutput{})
	pulumi.RegisterOutputType(Ospf6AreaOutput{})
	pulumi.RegisterOutputType(Ospf6AreaArrayOutput{})
	pulumi.RegisterOutputType(Ospf6AreaIpsecKeyOutput{})
	pulumi.RegisterOutputType(Ospf6AreaIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(Ospf6AreaRangeOutput{})
	pulumi.RegisterOutputType(Ospf6AreaRangeArrayOutput{})
	pulumi.RegisterOutputType(Ospf6AreaVirtualLinkOutput{})
	pulumi.RegisterOutputType(Ospf6AreaVirtualLinkArrayOutput{})
	pulumi.RegisterOutputType(Ospf6AreaVirtualLinkIpsecKeyOutput{})
	pulumi.RegisterOutputType(Ospf6AreaVirtualLinkIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(Ospf6Ospf6InterfaceOutput{})
	pulumi.RegisterOutputType(Ospf6Ospf6InterfaceArrayOutput{})
	pulumi.RegisterOutputType(Ospf6Ospf6InterfaceIpsecKeyOutput{})
	pulumi.RegisterOutputType(Ospf6Ospf6InterfaceIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(Ospf6Ospf6InterfaceNeighborOutput{})
	pulumi.RegisterOutputType(Ospf6Ospf6InterfaceNeighborArrayOutput{})
	pulumi.RegisterOutputType(Ospf6PassiveInterfaceOutput{})
	pulumi.RegisterOutputType(Ospf6PassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(Ospf6RedistributeOutput{})
	pulumi.RegisterOutputType(Ospf6RedistributeArrayOutput{})
	pulumi.RegisterOutputType(Ospf6SummaryAddressOutput{})
	pulumi.RegisterOutputType(Ospf6SummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(OspfAreaOutput{})
	pulumi.RegisterOutputType(OspfAreaArrayOutput{})
	pulumi.RegisterOutputType(OspfAreaFilterListOutput{})
	pulumi.RegisterOutputType(OspfAreaFilterListArrayOutput{})
	pulumi.RegisterOutputType(OspfAreaRangeOutput{})
	pulumi.RegisterOutputType(OspfAreaRangeArrayOutput{})
	pulumi.RegisterOutputType(OspfAreaVirtualLinkOutput{})
	pulumi.RegisterOutputType(OspfAreaVirtualLinkArrayOutput{})
	pulumi.RegisterOutputType(OspfAreaVirtualLinkMd5KeyOutput{})
	pulumi.RegisterOutputType(OspfAreaVirtualLinkMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(OspfDistributeListOutput{})
	pulumi.RegisterOutputType(OspfDistributeListArrayOutput{})
	pulumi.RegisterOutputType(OspfNeighborOutput{})
	pulumi.RegisterOutputType(OspfNeighborArrayOutput{})
	pulumi.RegisterOutputType(OspfNetworkOutput{})
	pulumi.RegisterOutputType(OspfNetworkArrayOutput{})
	pulumi.RegisterOutputType(OspfOspfInterfaceOutput{})
	pulumi.RegisterOutputType(OspfOspfInterfaceArrayOutput{})
	pulumi.RegisterOutputType(OspfOspfInterfaceMd5KeyOutput{})
	pulumi.RegisterOutputType(OspfOspfInterfaceMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(OspfPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(OspfPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(OspfRedistributeOutput{})
	pulumi.RegisterOutputType(OspfRedistributeArrayOutput{})
	pulumi.RegisterOutputType(OspfSummaryAddressOutput{})
	pulumi.RegisterOutputType(OspfSummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(Policy6DstaddrOutput{})
	pulumi.RegisterOutputType(Policy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(Policy6InternetServiceCustomOutput{})
	pulumi.RegisterOutputType(Policy6InternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(Policy6InternetServiceIdOutput{})
	pulumi.RegisterOutputType(Policy6InternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(Policy6SrcaddrOutput{})
	pulumi.RegisterOutputType(Policy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(PolicyDstOutput{})
	pulumi.RegisterOutputType(PolicyDstArrayOutput{})
	pulumi.RegisterOutputType(PolicyDstaddrOutput{})
	pulumi.RegisterOutputType(PolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(PolicyInputDeviceOutput{})
	pulumi.RegisterOutputType(PolicyInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(PolicySrcOutput{})
	pulumi.RegisterOutputType(PolicySrcArrayOutput{})
	pulumi.RegisterOutputType(PolicySrcaddrOutput{})
	pulumi.RegisterOutputType(PolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(Prefixlist6RuleOutput{})
	pulumi.RegisterOutputType(Prefixlist6RuleArrayOutput{})
	pulumi.RegisterOutputType(PrefixlistRuleOutput{})
	pulumi.RegisterOutputType(PrefixlistRuleArrayOutput{})
	pulumi.RegisterOutputType(RipDistanceOutput{})
	pulumi.RegisterOutputType(RipDistanceArrayOutput{})
	pulumi.RegisterOutputType(RipDistributeListOutput{})
	pulumi.RegisterOutputType(RipDistributeListArrayOutput{})
	pulumi.RegisterOutputType(RipInterfaceOutput{})
	pulumi.RegisterOutputType(RipInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RipNeighborOutput{})
	pulumi.RegisterOutputType(RipNeighborArrayOutput{})
	pulumi.RegisterOutputType(RipNetworkOutput{})
	pulumi.RegisterOutputType(RipNetworkArrayOutput{})
	pulumi.RegisterOutputType(RipOffsetListOutput{})
	pulumi.RegisterOutputType(RipOffsetListArrayOutput{})
	pulumi.RegisterOutputType(RipPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(RipPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RipRedistributeOutput{})
	pulumi.RegisterOutputType(RipRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RipngAggregateAddressOutput{})
	pulumi.RegisterOutputType(RipngAggregateAddressArrayOutput{})
	pulumi.RegisterOutputType(RipngDistanceOutput{})
	pulumi.RegisterOutputType(RipngDistanceArrayOutput{})
	pulumi.RegisterOutputType(RipngDistributeListOutput{})
	pulumi.RegisterOutputType(RipngDistributeListArrayOutput{})
	pulumi.RegisterOutputType(RipngInterfaceOutput{})
	pulumi.RegisterOutputType(RipngInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RipngNeighborOutput{})
	pulumi.RegisterOutputType(RipngNeighborArrayOutput{})
	pulumi.RegisterOutputType(RipngNetworkOutput{})
	pulumi.RegisterOutputType(RipngNetworkArrayOutput{})
	pulumi.RegisterOutputType(RipngOffsetListOutput{})
	pulumi.RegisterOutputType(RipngOffsetListArrayOutput{})
	pulumi.RegisterOutputType(RipngPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(RipngPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RipngRedistributeOutput{})
	pulumi.RegisterOutputType(RipngRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RoutemapRuleOutput{})
	pulumi.RegisterOutputType(RoutemapRuleArrayOutput{})
	pulumi.RegisterOutputType(RoutemapRuleSetAspathOutput{})
	pulumi.RegisterOutputType(RoutemapRuleSetAspathArrayOutput{})
	pulumi.RegisterOutputType(RoutemapRuleSetCommunityOutput{})
	pulumi.RegisterOutputType(RoutemapRuleSetCommunityArrayOutput{})
	pulumi.RegisterOutputType(RoutemapRuleSetExtcommunityRtOutput{})
	pulumi.RegisterOutputType(RoutemapRuleSetExtcommunityRtArrayOutput{})
	pulumi.RegisterOutputType(RoutemapRuleSetExtcommunitySooOutput{})
	pulumi.RegisterOutputType(RoutemapRuleSetExtcommunitySooArrayOutput{})
	pulumi.RegisterOutputType(Static6SdwanZoneOutput{})
	pulumi.RegisterOutputType(Static6SdwanZoneArrayOutput{})
	pulumi.RegisterOutputType(StaticSdwanZoneOutput{})
	pulumi.RegisterOutputType(StaticSdwanZoneArrayOutput{})
	pulumi.RegisterOutputType(GetAccesslist6RuleOutput{})
	pulumi.RegisterOutputType(GetAccesslist6RuleArrayOutput{})
	pulumi.RegisterOutputType(GetAccesslistRuleOutput{})
	pulumi.RegisterOutputType(GetAccesslistRuleArrayOutput{})
	pulumi.RegisterOutputType(GetAspathlistRuleOutput{})
	pulumi.RegisterOutputType(GetAspathlistRuleArrayOutput{})
	pulumi.RegisterOutputType(GetBfd6MultihopTemplateOutput{})
	pulumi.RegisterOutputType(GetBfd6MultihopTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetBfd6NeighborOutput{})
	pulumi.RegisterOutputType(GetBfd6NeighborArrayOutput{})
	pulumi.RegisterOutputType(GetBfdMultihopTemplateOutput{})
	pulumi.RegisterOutputType(GetBfdMultihopTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetBfdNeighborOutput{})
	pulumi.RegisterOutputType(GetBfdNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetBgpAdminDistanceOutput{})
	pulumi.RegisterOutputType(GetBgpAdminDistanceArrayOutput{})
	pulumi.RegisterOutputType(GetBgpAggregateAddress6Output{})
	pulumi.RegisterOutputType(GetBgpAggregateAddress6ArrayOutput{})
	pulumi.RegisterOutputType(GetBgpAggregateAddressOutput{})
	pulumi.RegisterOutputType(GetBgpAggregateAddressArrayOutput{})
	pulumi.RegisterOutputType(GetBgpConfederationPeerOutput{})
	pulumi.RegisterOutputType(GetBgpConfederationPeerArrayOutput{})
	pulumi.RegisterOutputType(GetBgpNeighborOutput{})
	pulumi.RegisterOutputType(GetBgpNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetBgpNeighborConditionalAdvertise6Output{})
	pulumi.RegisterOutputType(GetBgpNeighborConditionalAdvertise6ArrayOutput{})
	pulumi.RegisterOutputType(GetBgpNeighborConditionalAdvertiseOutput{})
	pulumi.RegisterOutputType(GetBgpNeighborConditionalAdvertiseArrayOutput{})
	pulumi.RegisterOutputType(GetBgpNeighborGroupOutput{})
	pulumi.RegisterOutputType(GetBgpNeighborGroupArrayOutput{})
	pulumi.RegisterOutputType(GetBgpNeighborRange6Output{})
	pulumi.RegisterOutputType(GetBgpNeighborRange6ArrayOutput{})
	pulumi.RegisterOutputType(GetBgpNeighborRangeOutput{})
	pulumi.RegisterOutputType(GetBgpNeighborRangeArrayOutput{})
	pulumi.RegisterOutputType(GetBgpNetwork6Output{})
	pulumi.RegisterOutputType(GetBgpNetwork6ArrayOutput{})
	pulumi.RegisterOutputType(GetBgpNetworkOutput{})
	pulumi.RegisterOutputType(GetBgpNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetBgpRedistribute6Output{})
	pulumi.RegisterOutputType(GetBgpRedistribute6ArrayOutput{})
	pulumi.RegisterOutputType(GetBgpRedistributeOutput{})
	pulumi.RegisterOutputType(GetBgpRedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetBgpVrf6Output{})
	pulumi.RegisterOutputType(GetBgpVrf6ArrayOutput{})
	pulumi.RegisterOutputType(GetBgpVrf6ExportRtOutput{})
	pulumi.RegisterOutputType(GetBgpVrf6ExportRtArrayOutput{})
	pulumi.RegisterOutputType(GetBgpVrf6ImportRtOutput{})
	pulumi.RegisterOutputType(GetBgpVrf6ImportRtArrayOutput{})
	pulumi.RegisterOutputType(GetBgpVrf6LeakTargetOutput{})
	pulumi.RegisterOutputType(GetBgpVrf6LeakTargetArrayOutput{})
	pulumi.RegisterOutputType(GetBgpVrfOutput{})
	pulumi.RegisterOutputType(GetBgpVrfArrayOutput{})
	pulumi.RegisterOutputType(GetBgpVrfExportRtOutput{})
	pulumi.RegisterOutputType(GetBgpVrfExportRtArrayOutput{})
	pulumi.RegisterOutputType(GetBgpVrfImportRtOutput{})
	pulumi.RegisterOutputType(GetBgpVrfImportRtArrayOutput{})
	pulumi.RegisterOutputType(GetBgpVrfLeak6Output{})
	pulumi.RegisterOutputType(GetBgpVrfLeak6ArrayOutput{})
	pulumi.RegisterOutputType(GetBgpVrfLeak6TargetOutput{})
	pulumi.RegisterOutputType(GetBgpVrfLeak6TargetArrayOutput{})
	pulumi.RegisterOutputType(GetBgpVrfLeakOutput{})
	pulumi.RegisterOutputType(GetBgpVrfLeakArrayOutput{})
	pulumi.RegisterOutputType(GetBgpVrfLeakTargetOutput{})
	pulumi.RegisterOutputType(GetBgpVrfLeakTargetArrayOutput{})
	pulumi.RegisterOutputType(GetCommunitylistRuleOutput{})
	pulumi.RegisterOutputType(GetCommunitylistRuleArrayOutput{})
	pulumi.RegisterOutputType(GetIsisIsisInterfaceOutput{})
	pulumi.RegisterOutputType(GetIsisIsisInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetIsisIsisNetOutput{})
	pulumi.RegisterOutputType(GetIsisIsisNetArrayOutput{})
	pulumi.RegisterOutputType(GetIsisRedistribute6Output{})
	pulumi.RegisterOutputType(GetIsisRedistribute6ArrayOutput{})
	pulumi.RegisterOutputType(GetIsisRedistributeOutput{})
	pulumi.RegisterOutputType(GetIsisRedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetIsisSummaryAddress6Output{})
	pulumi.RegisterOutputType(GetIsisSummaryAddress6ArrayOutput{})
	pulumi.RegisterOutputType(GetIsisSummaryAddressOutput{})
	pulumi.RegisterOutputType(GetIsisSummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(GetKeychainKeyOutput{})
	pulumi.RegisterOutputType(GetKeychainKeyArrayOutput{})
	pulumi.RegisterOutputType(GetMulticast6InterfaceOutput{})
	pulumi.RegisterOutputType(GetMulticast6InterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetMulticast6PimSmGlobalOutput{})
	pulumi.RegisterOutputType(GetMulticast6PimSmGlobalArrayOutput{})
	pulumi.RegisterOutputType(GetMulticast6PimSmGlobalRpAddressOutput{})
	pulumi.RegisterOutputType(GetMulticast6PimSmGlobalRpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastInterfaceOutput{})
	pulumi.RegisterOutputType(GetMulticastInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastInterfaceIgmpOutput{})
	pulumi.RegisterOutputType(GetMulticastInterfaceIgmpArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastInterfaceJoinGroupOutput{})
	pulumi.RegisterOutputType(GetMulticastInterfaceJoinGroupArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastPimSmGlobalOutput{})
	pulumi.RegisterOutputType(GetMulticastPimSmGlobalArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastPimSmGlobalRpAddressOutput{})
	pulumi.RegisterOutputType(GetMulticastPimSmGlobalRpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastflowFlowOutput{})
	pulumi.RegisterOutputType(GetMulticastflowFlowArrayOutput{})
	pulumi.RegisterOutputType(GetOspf6AreaOutput{})
	pulumi.RegisterOutputType(GetOspf6AreaArrayOutput{})
	pulumi.RegisterOutputType(GetOspf6AreaIpsecKeyOutput{})
	pulumi.RegisterOutputType(GetOspf6AreaIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(GetOspf6AreaRangeOutput{})
	pulumi.RegisterOutputType(GetOspf6AreaRangeArrayOutput{})
	pulumi.RegisterOutputType(GetOspf6AreaVirtualLinkOutput{})
	pulumi.RegisterOutputType(GetOspf6AreaVirtualLinkArrayOutput{})
	pulumi.RegisterOutputType(GetOspf6AreaVirtualLinkIpsecKeyOutput{})
	pulumi.RegisterOutputType(GetOspf6AreaVirtualLinkIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(GetOspf6Ospf6InterfaceOutput{})
	pulumi.RegisterOutputType(GetOspf6Ospf6InterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetOspf6Ospf6InterfaceIpsecKeyOutput{})
	pulumi.RegisterOutputType(GetOspf6Ospf6InterfaceIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(GetOspf6Ospf6InterfaceNeighborOutput{})
	pulumi.RegisterOutputType(GetOspf6Ospf6InterfaceNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetOspf6PassiveInterfaceOutput{})
	pulumi.RegisterOutputType(GetOspf6PassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetOspf6RedistributeOutput{})
	pulumi.RegisterOutputType(GetOspf6RedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetOspf6SummaryAddressOutput{})
	pulumi.RegisterOutputType(GetOspf6SummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(GetOspfAreaOutput{})
	pulumi.RegisterOutputType(GetOspfAreaArrayOutput{})
	pulumi.RegisterOutputType(GetOspfAreaFilterListOutput{})
	pulumi.RegisterOutputType(GetOspfAreaFilterListArrayOutput{})
	pulumi.RegisterOutputType(GetOspfAreaRangeOutput{})
	pulumi.RegisterOutputType(GetOspfAreaRangeArrayOutput{})
	pulumi.RegisterOutputType(GetOspfAreaVirtualLinkOutput{})
	pulumi.RegisterOutputType(GetOspfAreaVirtualLinkArrayOutput{})
	pulumi.RegisterOutputType(GetOspfAreaVirtualLinkMd5KeyOutput{})
	pulumi.RegisterOutputType(GetOspfAreaVirtualLinkMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(GetOspfDistributeListOutput{})
	pulumi.RegisterOutputType(GetOspfDistributeListArrayOutput{})
	pulumi.RegisterOutputType(GetOspfNeighborOutput{})
	pulumi.RegisterOutputType(GetOspfNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetOspfNetworkOutput{})
	pulumi.RegisterOutputType(GetOspfNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetOspfOspfInterfaceOutput{})
	pulumi.RegisterOutputType(GetOspfOspfInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetOspfOspfInterfaceMd5KeyOutput{})
	pulumi.RegisterOutputType(GetOspfOspfInterfaceMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(GetOspfPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(GetOspfPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetOspfRedistributeOutput{})
	pulumi.RegisterOutputType(GetOspfRedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetOspfSummaryAddressOutput{})
	pulumi.RegisterOutputType(GetOspfSummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(GetPolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6InternetServiceCustomOutput{})
	pulumi.RegisterOutputType(GetPolicy6InternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6InternetServiceIdOutput{})
	pulumi.RegisterOutputType(GetPolicy6InternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(GetPolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDstOutput{})
	pulumi.RegisterOutputType(GetPolicyDstArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDstaddrOutput{})
	pulumi.RegisterOutputType(GetPolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInputDeviceOutput{})
	pulumi.RegisterOutputType(GetPolicyInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySrcOutput{})
	pulumi.RegisterOutputType(GetPolicySrcArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySrcaddrOutput{})
	pulumi.RegisterOutputType(GetPolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPrefixlist6RuleOutput{})
	pulumi.RegisterOutputType(GetPrefixlist6RuleArrayOutput{})
	pulumi.RegisterOutputType(GetPrefixlistRuleOutput{})
	pulumi.RegisterOutputType(GetPrefixlistRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRipDistanceOutput{})
	pulumi.RegisterOutputType(GetRipDistanceArrayOutput{})
	pulumi.RegisterOutputType(GetRipDistributeListOutput{})
	pulumi.RegisterOutputType(GetRipDistributeListArrayOutput{})
	pulumi.RegisterOutputType(GetRipInterfaceOutput{})
	pulumi.RegisterOutputType(GetRipInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRipNeighborOutput{})
	pulumi.RegisterOutputType(GetRipNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetRipNetworkOutput{})
	pulumi.RegisterOutputType(GetRipNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetRipOffsetListOutput{})
	pulumi.RegisterOutputType(GetRipOffsetListArrayOutput{})
	pulumi.RegisterOutputType(GetRipPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(GetRipPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRipRedistributeOutput{})
	pulumi.RegisterOutputType(GetRipRedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetRipngAggregateAddressOutput{})
	pulumi.RegisterOutputType(GetRipngAggregateAddressArrayOutput{})
	pulumi.RegisterOutputType(GetRipngDistanceOutput{})
	pulumi.RegisterOutputType(GetRipngDistanceArrayOutput{})
	pulumi.RegisterOutputType(GetRipngDistributeListOutput{})
	pulumi.RegisterOutputType(GetRipngDistributeListArrayOutput{})
	pulumi.RegisterOutputType(GetRipngInterfaceOutput{})
	pulumi.RegisterOutputType(GetRipngInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRipngNeighborOutput{})
	pulumi.RegisterOutputType(GetRipngNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetRipngNetworkOutput{})
	pulumi.RegisterOutputType(GetRipngNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetRipngOffsetListOutput{})
	pulumi.RegisterOutputType(GetRipngOffsetListArrayOutput{})
	pulumi.RegisterOutputType(GetRipngPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(GetRipngPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetRipngRedistributeOutput{})
	pulumi.RegisterOutputType(GetRipngRedistributeArrayOutput{})
	pulumi.RegisterOutputType(GetRoutemapRuleOutput{})
	pulumi.RegisterOutputType(GetRoutemapRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRoutemapRuleSetAspathOutput{})
	pulumi.RegisterOutputType(GetRoutemapRuleSetAspathArrayOutput{})
	pulumi.RegisterOutputType(GetRoutemapRuleSetCommunityOutput{})
	pulumi.RegisterOutputType(GetRoutemapRuleSetCommunityArrayOutput{})
	pulumi.RegisterOutputType(GetRoutemapRuleSetExtcommunityRtOutput{})
	pulumi.RegisterOutputType(GetRoutemapRuleSetExtcommunityRtArrayOutput{})
	pulumi.RegisterOutputType(GetRoutemapRuleSetExtcommunitySooOutput{})
	pulumi.RegisterOutputType(GetRoutemapRuleSetExtcommunitySooArrayOutput{})
	pulumi.RegisterOutputType(GetStatic6SdwanZoneOutput{})
	pulumi.RegisterOutputType(GetStatic6SdwanZoneArrayOutput{})
	pulumi.RegisterOutputType(GetStaticSdwanZoneOutput{})
	pulumi.RegisterOutputType(GetStaticSdwanZoneArrayOutput{})
}
