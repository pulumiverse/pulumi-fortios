// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure BFD.
//
// ## Import
//
// Router Bfd can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:router/bfd:Bfd labelname RouterBfd
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:router/bfd:Bfd labelname RouterBfd
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Bfd struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// BFD multi-hop template table. The structure of `multihopTemplate` block is documented below.
	MultihopTemplates BfdMultihopTemplateArrayOutput `pulumi:"multihopTemplates"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors BfdNeighborArrayOutput `pulumi:"neighbors"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewBfd registers a new resource with the given unique name, arguments, and options.
func NewBfd(ctx *pulumi.Context,
	name string, args *BfdArgs, opts ...pulumi.ResourceOption) (*Bfd, error) {
	if args == nil {
		args = &BfdArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Bfd
	err := ctx.RegisterResource("fortios:router/bfd:Bfd", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBfd gets an existing Bfd resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBfd(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BfdState, opts ...pulumi.ResourceOption) (*Bfd, error) {
	var resource Bfd
	err := ctx.ReadResource("fortios:router/bfd:Bfd", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bfd resources.
type bfdState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// BFD multi-hop template table. The structure of `multihopTemplate` block is documented below.
	MultihopTemplates []BfdMultihopTemplate `pulumi:"multihopTemplates"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors []BfdNeighbor `pulumi:"neighbors"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type BfdState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// BFD multi-hop template table. The structure of `multihopTemplate` block is documented below.
	MultihopTemplates BfdMultihopTemplateArrayInput
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors BfdNeighborArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (BfdState) ElementType() reflect.Type {
	return reflect.TypeOf((*bfdState)(nil)).Elem()
}

type bfdArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// BFD multi-hop template table. The structure of `multihopTemplate` block is documented below.
	MultihopTemplates []BfdMultihopTemplate `pulumi:"multihopTemplates"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors []BfdNeighbor `pulumi:"neighbors"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Bfd resource.
type BfdArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// BFD multi-hop template table. The structure of `multihopTemplate` block is documented below.
	MultihopTemplates BfdMultihopTemplateArrayInput
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors BfdNeighborArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (BfdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bfdArgs)(nil)).Elem()
}

type BfdInput interface {
	pulumi.Input

	ToBfdOutput() BfdOutput
	ToBfdOutputWithContext(ctx context.Context) BfdOutput
}

func (*Bfd) ElementType() reflect.Type {
	return reflect.TypeOf((**Bfd)(nil)).Elem()
}

func (i *Bfd) ToBfdOutput() BfdOutput {
	return i.ToBfdOutputWithContext(context.Background())
}

func (i *Bfd) ToBfdOutputWithContext(ctx context.Context) BfdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BfdOutput)
}

// BfdArrayInput is an input type that accepts BfdArray and BfdArrayOutput values.
// You can construct a concrete instance of `BfdArrayInput` via:
//
//	BfdArray{ BfdArgs{...} }
type BfdArrayInput interface {
	pulumi.Input

	ToBfdArrayOutput() BfdArrayOutput
	ToBfdArrayOutputWithContext(context.Context) BfdArrayOutput
}

type BfdArray []BfdInput

func (BfdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bfd)(nil)).Elem()
}

func (i BfdArray) ToBfdArrayOutput() BfdArrayOutput {
	return i.ToBfdArrayOutputWithContext(context.Background())
}

func (i BfdArray) ToBfdArrayOutputWithContext(ctx context.Context) BfdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BfdArrayOutput)
}

// BfdMapInput is an input type that accepts BfdMap and BfdMapOutput values.
// You can construct a concrete instance of `BfdMapInput` via:
//
//	BfdMap{ "key": BfdArgs{...} }
type BfdMapInput interface {
	pulumi.Input

	ToBfdMapOutput() BfdMapOutput
	ToBfdMapOutputWithContext(context.Context) BfdMapOutput
}

type BfdMap map[string]BfdInput

func (BfdMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bfd)(nil)).Elem()
}

func (i BfdMap) ToBfdMapOutput() BfdMapOutput {
	return i.ToBfdMapOutputWithContext(context.Background())
}

func (i BfdMap) ToBfdMapOutputWithContext(ctx context.Context) BfdMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BfdMapOutput)
}

type BfdOutput struct{ *pulumi.OutputState }

func (BfdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Bfd)(nil)).Elem()
}

func (o BfdOutput) ToBfdOutput() BfdOutput {
	return o
}

func (o BfdOutput) ToBfdOutputWithContext(ctx context.Context) BfdOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o BfdOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bfd) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o BfdOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bfd) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// BFD multi-hop template table. The structure of `multihopTemplate` block is documented below.
func (o BfdOutput) MultihopTemplates() BfdMultihopTemplateArrayOutput {
	return o.ApplyT(func(v *Bfd) BfdMultihopTemplateArrayOutput { return v.MultihopTemplates }).(BfdMultihopTemplateArrayOutput)
}

// neighbor The structure of `neighbor` block is documented below.
func (o BfdOutput) Neighbors() BfdNeighborArrayOutput {
	return o.ApplyT(func(v *Bfd) BfdNeighborArrayOutput { return v.Neighbors }).(BfdNeighborArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o BfdOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bfd) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type BfdArrayOutput struct{ *pulumi.OutputState }

func (BfdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bfd)(nil)).Elem()
}

func (o BfdArrayOutput) ToBfdArrayOutput() BfdArrayOutput {
	return o
}

func (o BfdArrayOutput) ToBfdArrayOutputWithContext(ctx context.Context) BfdArrayOutput {
	return o
}

func (o BfdArrayOutput) Index(i pulumi.IntInput) BfdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Bfd {
		return vs[0].([]*Bfd)[vs[1].(int)]
	}).(BfdOutput)
}

type BfdMapOutput struct{ *pulumi.OutputState }

func (BfdMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bfd)(nil)).Elem()
}

func (o BfdMapOutput) ToBfdMapOutput() BfdMapOutput {
	return o
}

func (o BfdMapOutput) ToBfdMapOutputWithContext(ctx context.Context) BfdMapOutput {
	return o
}

func (o BfdMapOutput) MapIndex(k pulumi.StringInput) BfdOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Bfd {
		return vs[0].(map[string]*Bfd)[vs[1].(string)]
	}).(BfdOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BfdInput)(nil)).Elem(), &Bfd{})
	pulumi.RegisterInputType(reflect.TypeOf((*BfdArrayInput)(nil)).Elem(), BfdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BfdMapInput)(nil)).Elem(), BfdMap{})
	pulumi.RegisterOutputType(BfdOutput{})
	pulumi.RegisterOutputType(BfdArrayOutput{})
	pulumi.RegisterOutputType(BfdMapOutput{})
}
