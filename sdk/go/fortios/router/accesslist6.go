// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure IPv6 access lists.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := router.NewAccesslist6(ctx, "trname", &router.Accesslist6Args{
//				Comments: pulumi.String("access-list6 test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Router AccessList6 can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:router/accesslist6:Accesslist6 labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:router/accesslist6:Accesslist6 labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Accesslist6 struct {
	pulumi.CustomResourceState

	// Comment.
	Comments pulumi.StringOutput `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Rule. The structure of `rule` block is documented below.
	Rules Accesslist6RuleArrayOutput `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAccesslist6 registers a new resource with the given unique name, arguments, and options.
func NewAccesslist6(ctx *pulumi.Context,
	name string, args *Accesslist6Args, opts ...pulumi.ResourceOption) (*Accesslist6, error) {
	if args == nil {
		args = &Accesslist6Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Accesslist6
	err := ctx.RegisterResource("fortios:router/accesslist6:Accesslist6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccesslist6 gets an existing Accesslist6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccesslist6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Accesslist6State, opts ...pulumi.ResourceOption) (*Accesslist6, error) {
	var resource Accesslist6
	err := ctx.ReadResource("fortios:router/accesslist6:Accesslist6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Accesslist6 resources.
type accesslist6State struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Name.
	Name *string `pulumi:"name"`
	// Rule. The structure of `rule` block is documented below.
	Rules []Accesslist6Rule `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Accesslist6State struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Rule. The structure of `rule` block is documented below.
	Rules Accesslist6RuleArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Accesslist6State) ElementType() reflect.Type {
	return reflect.TypeOf((*accesslist6State)(nil)).Elem()
}

type accesslist6Args struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Name.
	Name *string `pulumi:"name"`
	// Rule. The structure of `rule` block is documented below.
	Rules []Accesslist6Rule `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Accesslist6 resource.
type Accesslist6Args struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Rule. The structure of `rule` block is documented below.
	Rules Accesslist6RuleArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Accesslist6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*accesslist6Args)(nil)).Elem()
}

type Accesslist6Input interface {
	pulumi.Input

	ToAccesslist6Output() Accesslist6Output
	ToAccesslist6OutputWithContext(ctx context.Context) Accesslist6Output
}

func (*Accesslist6) ElementType() reflect.Type {
	return reflect.TypeOf((**Accesslist6)(nil)).Elem()
}

func (i *Accesslist6) ToAccesslist6Output() Accesslist6Output {
	return i.ToAccesslist6OutputWithContext(context.Background())
}

func (i *Accesslist6) ToAccesslist6OutputWithContext(ctx context.Context) Accesslist6Output {
	return pulumi.ToOutputWithContext(ctx, i).(Accesslist6Output)
}

// Accesslist6ArrayInput is an input type that accepts Accesslist6Array and Accesslist6ArrayOutput values.
// You can construct a concrete instance of `Accesslist6ArrayInput` via:
//
//	Accesslist6Array{ Accesslist6Args{...} }
type Accesslist6ArrayInput interface {
	pulumi.Input

	ToAccesslist6ArrayOutput() Accesslist6ArrayOutput
	ToAccesslist6ArrayOutputWithContext(context.Context) Accesslist6ArrayOutput
}

type Accesslist6Array []Accesslist6Input

func (Accesslist6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Accesslist6)(nil)).Elem()
}

func (i Accesslist6Array) ToAccesslist6ArrayOutput() Accesslist6ArrayOutput {
	return i.ToAccesslist6ArrayOutputWithContext(context.Background())
}

func (i Accesslist6Array) ToAccesslist6ArrayOutputWithContext(ctx context.Context) Accesslist6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accesslist6ArrayOutput)
}

// Accesslist6MapInput is an input type that accepts Accesslist6Map and Accesslist6MapOutput values.
// You can construct a concrete instance of `Accesslist6MapInput` via:
//
//	Accesslist6Map{ "key": Accesslist6Args{...} }
type Accesslist6MapInput interface {
	pulumi.Input

	ToAccesslist6MapOutput() Accesslist6MapOutput
	ToAccesslist6MapOutputWithContext(context.Context) Accesslist6MapOutput
}

type Accesslist6Map map[string]Accesslist6Input

func (Accesslist6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Accesslist6)(nil)).Elem()
}

func (i Accesslist6Map) ToAccesslist6MapOutput() Accesslist6MapOutput {
	return i.ToAccesslist6MapOutputWithContext(context.Background())
}

func (i Accesslist6Map) ToAccesslist6MapOutputWithContext(ctx context.Context) Accesslist6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accesslist6MapOutput)
}

type Accesslist6Output struct{ *pulumi.OutputState }

func (Accesslist6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**Accesslist6)(nil)).Elem()
}

func (o Accesslist6Output) ToAccesslist6Output() Accesslist6Output {
	return o
}

func (o Accesslist6Output) ToAccesslist6OutputWithContext(ctx context.Context) Accesslist6Output {
	return o
}

// Comment.
func (o Accesslist6Output) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v *Accesslist6) pulumi.StringOutput { return v.Comments }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o Accesslist6Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accesslist6) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o Accesslist6Output) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accesslist6) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Name.
func (o Accesslist6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Accesslist6) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Rule. The structure of `rule` block is documented below.
func (o Accesslist6Output) Rules() Accesslist6RuleArrayOutput {
	return o.ApplyT(func(v *Accesslist6) Accesslist6RuleArrayOutput { return v.Rules }).(Accesslist6RuleArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Accesslist6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accesslist6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Accesslist6ArrayOutput struct{ *pulumi.OutputState }

func (Accesslist6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Accesslist6)(nil)).Elem()
}

func (o Accesslist6ArrayOutput) ToAccesslist6ArrayOutput() Accesslist6ArrayOutput {
	return o
}

func (o Accesslist6ArrayOutput) ToAccesslist6ArrayOutputWithContext(ctx context.Context) Accesslist6ArrayOutput {
	return o
}

func (o Accesslist6ArrayOutput) Index(i pulumi.IntInput) Accesslist6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Accesslist6 {
		return vs[0].([]*Accesslist6)[vs[1].(int)]
	}).(Accesslist6Output)
}

type Accesslist6MapOutput struct{ *pulumi.OutputState }

func (Accesslist6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Accesslist6)(nil)).Elem()
}

func (o Accesslist6MapOutput) ToAccesslist6MapOutput() Accesslist6MapOutput {
	return o
}

func (o Accesslist6MapOutput) ToAccesslist6MapOutputWithContext(ctx context.Context) Accesslist6MapOutput {
	return o
}

func (o Accesslist6MapOutput) MapIndex(k pulumi.StringInput) Accesslist6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Accesslist6 {
		return vs[0].(map[string]*Accesslist6)[vs[1].(string)]
	}).(Accesslist6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Accesslist6Input)(nil)).Elem(), &Accesslist6{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accesslist6ArrayInput)(nil)).Elem(), Accesslist6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accesslist6MapInput)(nil)).Elem(), Accesslist6Map{})
	pulumi.RegisterOutputType(Accesslist6Output{})
	pulumi.RegisterOutputType(Accesslist6ArrayOutput{})
	pulumi.RegisterOutputType(Accesslist6MapOutput{})
}
