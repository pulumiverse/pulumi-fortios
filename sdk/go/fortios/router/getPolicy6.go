// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Use this data source to get information on an fortios router policy6
func LookupPolicy6(ctx *pulumi.Context, args *LookupPolicy6Args, opts ...pulumi.InvokeOption) (*LookupPolicy6Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPolicy6Result
	err := ctx.Invoke("fortios:router/getPolicy6:getPolicy6", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicy6.
type LookupPolicy6Args struct {
	// Specify the seqNum of the desired router policy6.
	SeqNum int `pulumi:"seqNum"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getPolicy6.
type LookupPolicy6Result struct {
	// Action of the policy route.
	Action string `pulumi:"action"`
	// Optional comments.
	Comments string `pulumi:"comments"`
	// Destination IPv6 prefix.
	Dst string `pulumi:"dst"`
	// Enable/disable negating destination address match.
	DstNegate string `pulumi:"dstNegate"`
	// Destination address name. The structure of `dstaddr` block is documented below.
	Dstaddrs []GetPolicy6Dstaddr `pulumi:"dstaddrs"`
	// End destination port number (1 - 65535).
	EndPort int `pulumi:"endPort"`
	// End source port number (1 - 65535).
	EndSourcePort int `pulumi:"endSourcePort"`
	// IPv6 address of the gateway.
	Gateway string `pulumi:"gateway"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Incoming interface name.
	InputDevice string `pulumi:"inputDevice"`
	// Enable/disable negation of input device match.
	InputDeviceNegate string `pulumi:"inputDeviceNegate"`
	// Custom Destination Internet Service name. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms []GetPolicy6InternetServiceCustom `pulumi:"internetServiceCustoms"`
	// Destination Internet Service ID. The structure of `internetServiceId` block is documented below.
	InternetServiceIds []GetPolicy6InternetServiceId `pulumi:"internetServiceIds"`
	// Outgoing interface name.
	OutputDevice string `pulumi:"outputDevice"`
	// Protocol number (0 - 255).
	Protocol int `pulumi:"protocol"`
	// Sequence number.
	SeqNum int `pulumi:"seqNum"`
	// Source IPv6 prefix.
	Src string `pulumi:"src"`
	// Enable/disable negating source address match.
	SrcNegate string `pulumi:"srcNegate"`
	// Source address name. The structure of `srcaddr` block is documented below.
	Srcaddrs []GetPolicy6Srcaddr `pulumi:"srcaddrs"`
	// Start destination port number (1 - 65535).
	StartPort int `pulumi:"startPort"`
	// Start source port number (1 - 65535).
	StartSourcePort int `pulumi:"startSourcePort"`
	// Enable/disable this policy route.
	Status string `pulumi:"status"`
	// Type of service bit pattern.
	Tos string `pulumi:"tos"`
	// Type of service evaluated bits.
	TosMask   string  `pulumi:"tosMask"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupPolicy6Output(ctx *pulumi.Context, args LookupPolicy6OutputArgs, opts ...pulumi.InvokeOption) LookupPolicy6ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPolicy6Result, error) {
			args := v.(LookupPolicy6Args)
			r, err := LookupPolicy6(ctx, &args, opts...)
			var s LookupPolicy6Result
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPolicy6ResultOutput)
}

// A collection of arguments for invoking getPolicy6.
type LookupPolicy6OutputArgs struct {
	// Specify the seqNum of the desired router policy6.
	SeqNum pulumi.IntInput `pulumi:"seqNum"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupPolicy6OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicy6Args)(nil)).Elem()
}

// A collection of values returned by getPolicy6.
type LookupPolicy6ResultOutput struct{ *pulumi.OutputState }

func (LookupPolicy6ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicy6Result)(nil)).Elem()
}

func (o LookupPolicy6ResultOutput) ToLookupPolicy6ResultOutput() LookupPolicy6ResultOutput {
	return o
}

func (o LookupPolicy6ResultOutput) ToLookupPolicy6ResultOutputWithContext(ctx context.Context) LookupPolicy6ResultOutput {
	return o
}

// Action of the policy route.
func (o LookupPolicy6ResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.Action }).(pulumi.StringOutput)
}

// Optional comments.
func (o LookupPolicy6ResultOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.Comments }).(pulumi.StringOutput)
}

// Destination IPv6 prefix.
func (o LookupPolicy6ResultOutput) Dst() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.Dst }).(pulumi.StringOutput)
}

// Enable/disable negating destination address match.
func (o LookupPolicy6ResultOutput) DstNegate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.DstNegate }).(pulumi.StringOutput)
}

// Destination address name. The structure of `dstaddr` block is documented below.
func (o LookupPolicy6ResultOutput) Dstaddrs() GetPolicy6DstaddrArrayOutput {
	return o.ApplyT(func(v LookupPolicy6Result) []GetPolicy6Dstaddr { return v.Dstaddrs }).(GetPolicy6DstaddrArrayOutput)
}

// End destination port number (1 - 65535).
func (o LookupPolicy6ResultOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPolicy6Result) int { return v.EndPort }).(pulumi.IntOutput)
}

// End source port number (1 - 65535).
func (o LookupPolicy6ResultOutput) EndSourcePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPolicy6Result) int { return v.EndSourcePort }).(pulumi.IntOutput)
}

// IPv6 address of the gateway.
func (o LookupPolicy6ResultOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.Gateway }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPolicy6ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.Id }).(pulumi.StringOutput)
}

// Incoming interface name.
func (o LookupPolicy6ResultOutput) InputDevice() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.InputDevice }).(pulumi.StringOutput)
}

// Enable/disable negation of input device match.
func (o LookupPolicy6ResultOutput) InputDeviceNegate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.InputDeviceNegate }).(pulumi.StringOutput)
}

// Custom Destination Internet Service name. The structure of `internetServiceCustom` block is documented below.
func (o LookupPolicy6ResultOutput) InternetServiceCustoms() GetPolicy6InternetServiceCustomArrayOutput {
	return o.ApplyT(func(v LookupPolicy6Result) []GetPolicy6InternetServiceCustom { return v.InternetServiceCustoms }).(GetPolicy6InternetServiceCustomArrayOutput)
}

// Destination Internet Service ID. The structure of `internetServiceId` block is documented below.
func (o LookupPolicy6ResultOutput) InternetServiceIds() GetPolicy6InternetServiceIdArrayOutput {
	return o.ApplyT(func(v LookupPolicy6Result) []GetPolicy6InternetServiceId { return v.InternetServiceIds }).(GetPolicy6InternetServiceIdArrayOutput)
}

// Outgoing interface name.
func (o LookupPolicy6ResultOutput) OutputDevice() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.OutputDevice }).(pulumi.StringOutput)
}

// Protocol number (0 - 255).
func (o LookupPolicy6ResultOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPolicy6Result) int { return v.Protocol }).(pulumi.IntOutput)
}

// Sequence number.
func (o LookupPolicy6ResultOutput) SeqNum() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPolicy6Result) int { return v.SeqNum }).(pulumi.IntOutput)
}

// Source IPv6 prefix.
func (o LookupPolicy6ResultOutput) Src() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.Src }).(pulumi.StringOutput)
}

// Enable/disable negating source address match.
func (o LookupPolicy6ResultOutput) SrcNegate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.SrcNegate }).(pulumi.StringOutput)
}

// Source address name. The structure of `srcaddr` block is documented below.
func (o LookupPolicy6ResultOutput) Srcaddrs() GetPolicy6SrcaddrArrayOutput {
	return o.ApplyT(func(v LookupPolicy6Result) []GetPolicy6Srcaddr { return v.Srcaddrs }).(GetPolicy6SrcaddrArrayOutput)
}

// Start destination port number (1 - 65535).
func (o LookupPolicy6ResultOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPolicy6Result) int { return v.StartPort }).(pulumi.IntOutput)
}

// Start source port number (1 - 65535).
func (o LookupPolicy6ResultOutput) StartSourcePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPolicy6Result) int { return v.StartSourcePort }).(pulumi.IntOutput)
}

// Enable/disable this policy route.
func (o LookupPolicy6ResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.Status }).(pulumi.StringOutput)
}

// Type of service bit pattern.
func (o LookupPolicy6ResultOutput) Tos() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.Tos }).(pulumi.StringOutput)
}

// Type of service evaluated bits.
func (o LookupPolicy6ResultOutput) TosMask() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicy6Result) string { return v.TosMask }).(pulumi.StringOutput)
}

func (o LookupPolicy6ResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicy6Result) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPolicy6ResultOutput{})
}
