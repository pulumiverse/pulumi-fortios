// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bgp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

var _ = internal.GetEnvOrDefault

type NeighborConditionalAdvertise6 struct {
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	ConditionType     *string `pulumi:"conditionType"`
}

// NeighborConditionalAdvertise6Input is an input type that accepts NeighborConditionalAdvertise6Args and NeighborConditionalAdvertise6Output values.
// You can construct a concrete instance of `NeighborConditionalAdvertise6Input` via:
//
//	NeighborConditionalAdvertise6Args{...}
type NeighborConditionalAdvertise6Input interface {
	pulumi.Input

	ToNeighborConditionalAdvertise6Output() NeighborConditionalAdvertise6Output
	ToNeighborConditionalAdvertise6OutputWithContext(context.Context) NeighborConditionalAdvertise6Output
}

type NeighborConditionalAdvertise6Args struct {
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	ConditionType     pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (NeighborConditionalAdvertise6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*NeighborConditionalAdvertise6)(nil)).Elem()
}

func (i NeighborConditionalAdvertise6Args) ToNeighborConditionalAdvertise6Output() NeighborConditionalAdvertise6Output {
	return i.ToNeighborConditionalAdvertise6OutputWithContext(context.Background())
}

func (i NeighborConditionalAdvertise6Args) ToNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) NeighborConditionalAdvertise6Output {
	return pulumi.ToOutputWithContext(ctx, i).(NeighborConditionalAdvertise6Output)
}

// NeighborConditionalAdvertise6ArrayInput is an input type that accepts NeighborConditionalAdvertise6Array and NeighborConditionalAdvertise6ArrayOutput values.
// You can construct a concrete instance of `NeighborConditionalAdvertise6ArrayInput` via:
//
//	NeighborConditionalAdvertise6Array{ NeighborConditionalAdvertise6Args{...} }
type NeighborConditionalAdvertise6ArrayInput interface {
	pulumi.Input

	ToNeighborConditionalAdvertise6ArrayOutput() NeighborConditionalAdvertise6ArrayOutput
	ToNeighborConditionalAdvertise6ArrayOutputWithContext(context.Context) NeighborConditionalAdvertise6ArrayOutput
}

type NeighborConditionalAdvertise6Array []NeighborConditionalAdvertise6Input

func (NeighborConditionalAdvertise6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NeighborConditionalAdvertise6)(nil)).Elem()
}

func (i NeighborConditionalAdvertise6Array) ToNeighborConditionalAdvertise6ArrayOutput() NeighborConditionalAdvertise6ArrayOutput {
	return i.ToNeighborConditionalAdvertise6ArrayOutputWithContext(context.Background())
}

func (i NeighborConditionalAdvertise6Array) ToNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) NeighborConditionalAdvertise6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NeighborConditionalAdvertise6ArrayOutput)
}

type NeighborConditionalAdvertise6Output struct{ *pulumi.OutputState }

func (NeighborConditionalAdvertise6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*NeighborConditionalAdvertise6)(nil)).Elem()
}

func (o NeighborConditionalAdvertise6Output) ToNeighborConditionalAdvertise6Output() NeighborConditionalAdvertise6Output {
	return o
}

func (o NeighborConditionalAdvertise6Output) ToNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) NeighborConditionalAdvertise6Output {
	return o
}

func (o NeighborConditionalAdvertise6Output) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NeighborConditionalAdvertise6) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

func (o NeighborConditionalAdvertise6Output) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NeighborConditionalAdvertise6) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

func (o NeighborConditionalAdvertise6Output) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NeighborConditionalAdvertise6) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type NeighborConditionalAdvertise6ArrayOutput struct{ *pulumi.OutputState }

func (NeighborConditionalAdvertise6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NeighborConditionalAdvertise6)(nil)).Elem()
}

func (o NeighborConditionalAdvertise6ArrayOutput) ToNeighborConditionalAdvertise6ArrayOutput() NeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o NeighborConditionalAdvertise6ArrayOutput) ToNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) NeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o NeighborConditionalAdvertise6ArrayOutput) Index(i pulumi.IntInput) NeighborConditionalAdvertise6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NeighborConditionalAdvertise6 {
		return vs[0].([]NeighborConditionalAdvertise6)[vs[1].(int)]
	}).(NeighborConditionalAdvertise6Output)
}

type NeighborConditionalAdvertise struct {
	// Name of advertising route map.
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	ConditionType *string `pulumi:"conditionType"`
}

// NeighborConditionalAdvertiseInput is an input type that accepts NeighborConditionalAdvertiseArgs and NeighborConditionalAdvertiseOutput values.
// You can construct a concrete instance of `NeighborConditionalAdvertiseInput` via:
//
//	NeighborConditionalAdvertiseArgs{...}
type NeighborConditionalAdvertiseInput interface {
	pulumi.Input

	ToNeighborConditionalAdvertiseOutput() NeighborConditionalAdvertiseOutput
	ToNeighborConditionalAdvertiseOutputWithContext(context.Context) NeighborConditionalAdvertiseOutput
}

type NeighborConditionalAdvertiseArgs struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	ConditionType pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (NeighborConditionalAdvertiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NeighborConditionalAdvertise)(nil)).Elem()
}

func (i NeighborConditionalAdvertiseArgs) ToNeighborConditionalAdvertiseOutput() NeighborConditionalAdvertiseOutput {
	return i.ToNeighborConditionalAdvertiseOutputWithContext(context.Background())
}

func (i NeighborConditionalAdvertiseArgs) ToNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) NeighborConditionalAdvertiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NeighborConditionalAdvertiseOutput)
}

// NeighborConditionalAdvertiseArrayInput is an input type that accepts NeighborConditionalAdvertiseArray and NeighborConditionalAdvertiseArrayOutput values.
// You can construct a concrete instance of `NeighborConditionalAdvertiseArrayInput` via:
//
//	NeighborConditionalAdvertiseArray{ NeighborConditionalAdvertiseArgs{...} }
type NeighborConditionalAdvertiseArrayInput interface {
	pulumi.Input

	ToNeighborConditionalAdvertiseArrayOutput() NeighborConditionalAdvertiseArrayOutput
	ToNeighborConditionalAdvertiseArrayOutputWithContext(context.Context) NeighborConditionalAdvertiseArrayOutput
}

type NeighborConditionalAdvertiseArray []NeighborConditionalAdvertiseInput

func (NeighborConditionalAdvertiseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NeighborConditionalAdvertise)(nil)).Elem()
}

func (i NeighborConditionalAdvertiseArray) ToNeighborConditionalAdvertiseArrayOutput() NeighborConditionalAdvertiseArrayOutput {
	return i.ToNeighborConditionalAdvertiseArrayOutputWithContext(context.Background())
}

func (i NeighborConditionalAdvertiseArray) ToNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) NeighborConditionalAdvertiseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NeighborConditionalAdvertiseArrayOutput)
}

type NeighborConditionalAdvertiseOutput struct{ *pulumi.OutputState }

func (NeighborConditionalAdvertiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NeighborConditionalAdvertise)(nil)).Elem()
}

func (o NeighborConditionalAdvertiseOutput) ToNeighborConditionalAdvertiseOutput() NeighborConditionalAdvertiseOutput {
	return o
}

func (o NeighborConditionalAdvertiseOutput) ToNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) NeighborConditionalAdvertiseOutput {
	return o
}

// Name of advertising route map.
func (o NeighborConditionalAdvertiseOutput) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NeighborConditionalAdvertise) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

// Name of condition route map.
func (o NeighborConditionalAdvertiseOutput) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NeighborConditionalAdvertise) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

// Type of condition. Valid values: `exist`, `non-exist`.
func (o NeighborConditionalAdvertiseOutput) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NeighborConditionalAdvertise) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type NeighborConditionalAdvertiseArrayOutput struct{ *pulumi.OutputState }

func (NeighborConditionalAdvertiseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NeighborConditionalAdvertise)(nil)).Elem()
}

func (o NeighborConditionalAdvertiseArrayOutput) ToNeighborConditionalAdvertiseArrayOutput() NeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o NeighborConditionalAdvertiseArrayOutput) ToNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) NeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o NeighborConditionalAdvertiseArrayOutput) Index(i pulumi.IntInput) NeighborConditionalAdvertiseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NeighborConditionalAdvertise {
		return vs[0].([]NeighborConditionalAdvertise)[vs[1].(int)]
	}).(NeighborConditionalAdvertiseOutput)
}

type GetNeighborConditionalAdvertise6 struct {
	// Name of advertising route map.
	AdvertiseRoutemap string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap string `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType string `pulumi:"conditionType"`
}

// GetNeighborConditionalAdvertise6Input is an input type that accepts GetNeighborConditionalAdvertise6Args and GetNeighborConditionalAdvertise6Output values.
// You can construct a concrete instance of `GetNeighborConditionalAdvertise6Input` via:
//
//	GetNeighborConditionalAdvertise6Args{...}
type GetNeighborConditionalAdvertise6Input interface {
	pulumi.Input

	ToGetNeighborConditionalAdvertise6Output() GetNeighborConditionalAdvertise6Output
	ToGetNeighborConditionalAdvertise6OutputWithContext(context.Context) GetNeighborConditionalAdvertise6Output
}

type GetNeighborConditionalAdvertise6Args struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringInput `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (GetNeighborConditionalAdvertise6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i GetNeighborConditionalAdvertise6Args) ToGetNeighborConditionalAdvertise6Output() GetNeighborConditionalAdvertise6Output {
	return i.ToGetNeighborConditionalAdvertise6OutputWithContext(context.Background())
}

func (i GetNeighborConditionalAdvertise6Args) ToGetNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) GetNeighborConditionalAdvertise6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetNeighborConditionalAdvertise6Output)
}

// GetNeighborConditionalAdvertise6ArrayInput is an input type that accepts GetNeighborConditionalAdvertise6Array and GetNeighborConditionalAdvertise6ArrayOutput values.
// You can construct a concrete instance of `GetNeighborConditionalAdvertise6ArrayInput` via:
//
//	GetNeighborConditionalAdvertise6Array{ GetNeighborConditionalAdvertise6Args{...} }
type GetNeighborConditionalAdvertise6ArrayInput interface {
	pulumi.Input

	ToGetNeighborConditionalAdvertise6ArrayOutput() GetNeighborConditionalAdvertise6ArrayOutput
	ToGetNeighborConditionalAdvertise6ArrayOutputWithContext(context.Context) GetNeighborConditionalAdvertise6ArrayOutput
}

type GetNeighborConditionalAdvertise6Array []GetNeighborConditionalAdvertise6Input

func (GetNeighborConditionalAdvertise6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i GetNeighborConditionalAdvertise6Array) ToGetNeighborConditionalAdvertise6ArrayOutput() GetNeighborConditionalAdvertise6ArrayOutput {
	return i.ToGetNeighborConditionalAdvertise6ArrayOutputWithContext(context.Background())
}

func (i GetNeighborConditionalAdvertise6Array) ToGetNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) GetNeighborConditionalAdvertise6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNeighborConditionalAdvertise6ArrayOutput)
}

type GetNeighborConditionalAdvertise6Output struct{ *pulumi.OutputState }

func (GetNeighborConditionalAdvertise6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o GetNeighborConditionalAdvertise6Output) ToGetNeighborConditionalAdvertise6Output() GetNeighborConditionalAdvertise6Output {
	return o
}

func (o GetNeighborConditionalAdvertise6Output) ToGetNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) GetNeighborConditionalAdvertise6Output {
	return o
}

// Name of advertising route map.
func (o GetNeighborConditionalAdvertise6Output) AdvertiseRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetNeighborConditionalAdvertise6) string { return v.AdvertiseRoutemap }).(pulumi.StringOutput)
}

// Name of condition route map.
func (o GetNeighborConditionalAdvertise6Output) ConditionRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetNeighborConditionalAdvertise6) string { return v.ConditionRoutemap }).(pulumi.StringOutput)
}

// Type of condition.
func (o GetNeighborConditionalAdvertise6Output) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNeighborConditionalAdvertise6) string { return v.ConditionType }).(pulumi.StringOutput)
}

type GetNeighborConditionalAdvertise6ArrayOutput struct{ *pulumi.OutputState }

func (GetNeighborConditionalAdvertise6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o GetNeighborConditionalAdvertise6ArrayOutput) ToGetNeighborConditionalAdvertise6ArrayOutput() GetNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o GetNeighborConditionalAdvertise6ArrayOutput) ToGetNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) GetNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o GetNeighborConditionalAdvertise6ArrayOutput) Index(i pulumi.IntInput) GetNeighborConditionalAdvertise6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNeighborConditionalAdvertise6 {
		return vs[0].([]GetNeighborConditionalAdvertise6)[vs[1].(int)]
	}).(GetNeighborConditionalAdvertise6Output)
}

type GetNeighborConditionalAdvertise struct {
	// Name of advertising route map.
	AdvertiseRoutemap string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap string `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType string `pulumi:"conditionType"`
}

// GetNeighborConditionalAdvertiseInput is an input type that accepts GetNeighborConditionalAdvertiseArgs and GetNeighborConditionalAdvertiseOutput values.
// You can construct a concrete instance of `GetNeighborConditionalAdvertiseInput` via:
//
//	GetNeighborConditionalAdvertiseArgs{...}
type GetNeighborConditionalAdvertiseInput interface {
	pulumi.Input

	ToGetNeighborConditionalAdvertiseOutput() GetNeighborConditionalAdvertiseOutput
	ToGetNeighborConditionalAdvertiseOutputWithContext(context.Context) GetNeighborConditionalAdvertiseOutput
}

type GetNeighborConditionalAdvertiseArgs struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringInput `pulumi:"conditionRoutemap"`
	// Type of condition.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (GetNeighborConditionalAdvertiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNeighborConditionalAdvertise)(nil)).Elem()
}

func (i GetNeighborConditionalAdvertiseArgs) ToGetNeighborConditionalAdvertiseOutput() GetNeighborConditionalAdvertiseOutput {
	return i.ToGetNeighborConditionalAdvertiseOutputWithContext(context.Background())
}

func (i GetNeighborConditionalAdvertiseArgs) ToGetNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) GetNeighborConditionalAdvertiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNeighborConditionalAdvertiseOutput)
}

// GetNeighborConditionalAdvertiseArrayInput is an input type that accepts GetNeighborConditionalAdvertiseArray and GetNeighborConditionalAdvertiseArrayOutput values.
// You can construct a concrete instance of `GetNeighborConditionalAdvertiseArrayInput` via:
//
//	GetNeighborConditionalAdvertiseArray{ GetNeighborConditionalAdvertiseArgs{...} }
type GetNeighborConditionalAdvertiseArrayInput interface {
	pulumi.Input

	ToGetNeighborConditionalAdvertiseArrayOutput() GetNeighborConditionalAdvertiseArrayOutput
	ToGetNeighborConditionalAdvertiseArrayOutputWithContext(context.Context) GetNeighborConditionalAdvertiseArrayOutput
}

type GetNeighborConditionalAdvertiseArray []GetNeighborConditionalAdvertiseInput

func (GetNeighborConditionalAdvertiseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNeighborConditionalAdvertise)(nil)).Elem()
}

func (i GetNeighborConditionalAdvertiseArray) ToGetNeighborConditionalAdvertiseArrayOutput() GetNeighborConditionalAdvertiseArrayOutput {
	return i.ToGetNeighborConditionalAdvertiseArrayOutputWithContext(context.Background())
}

func (i GetNeighborConditionalAdvertiseArray) ToGetNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) GetNeighborConditionalAdvertiseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNeighborConditionalAdvertiseArrayOutput)
}

type GetNeighborConditionalAdvertiseOutput struct{ *pulumi.OutputState }

func (GetNeighborConditionalAdvertiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNeighborConditionalAdvertise)(nil)).Elem()
}

func (o GetNeighborConditionalAdvertiseOutput) ToGetNeighborConditionalAdvertiseOutput() GetNeighborConditionalAdvertiseOutput {
	return o
}

func (o GetNeighborConditionalAdvertiseOutput) ToGetNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) GetNeighborConditionalAdvertiseOutput {
	return o
}

// Name of advertising route map.
func (o GetNeighborConditionalAdvertiseOutput) AdvertiseRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetNeighborConditionalAdvertise) string { return v.AdvertiseRoutemap }).(pulumi.StringOutput)
}

// Name of condition route map.
func (o GetNeighborConditionalAdvertiseOutput) ConditionRoutemap() pulumi.StringOutput {
	return o.ApplyT(func(v GetNeighborConditionalAdvertise) string { return v.ConditionRoutemap }).(pulumi.StringOutput)
}

// Type of condition.
func (o GetNeighborConditionalAdvertiseOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNeighborConditionalAdvertise) string { return v.ConditionType }).(pulumi.StringOutput)
}

type GetNeighborConditionalAdvertiseArrayOutput struct{ *pulumi.OutputState }

func (GetNeighborConditionalAdvertiseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNeighborConditionalAdvertise)(nil)).Elem()
}

func (o GetNeighborConditionalAdvertiseArrayOutput) ToGetNeighborConditionalAdvertiseArrayOutput() GetNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o GetNeighborConditionalAdvertiseArrayOutput) ToGetNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) GetNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o GetNeighborConditionalAdvertiseArrayOutput) Index(i pulumi.IntInput) GetNeighborConditionalAdvertiseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNeighborConditionalAdvertise {
		return vs[0].([]GetNeighborConditionalAdvertise)[vs[1].(int)]
	}).(GetNeighborConditionalAdvertiseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NeighborConditionalAdvertise6Input)(nil)).Elem(), NeighborConditionalAdvertise6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*NeighborConditionalAdvertise6ArrayInput)(nil)).Elem(), NeighborConditionalAdvertise6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*NeighborConditionalAdvertiseInput)(nil)).Elem(), NeighborConditionalAdvertiseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NeighborConditionalAdvertiseArrayInput)(nil)).Elem(), NeighborConditionalAdvertiseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNeighborConditionalAdvertise6Input)(nil)).Elem(), GetNeighborConditionalAdvertise6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNeighborConditionalAdvertise6ArrayInput)(nil)).Elem(), GetNeighborConditionalAdvertise6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNeighborConditionalAdvertiseInput)(nil)).Elem(), GetNeighborConditionalAdvertiseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNeighborConditionalAdvertiseArrayInput)(nil)).Elem(), GetNeighborConditionalAdvertiseArray{})
	pulumi.RegisterOutputType(NeighborConditionalAdvertise6Output{})
	pulumi.RegisterOutputType(NeighborConditionalAdvertise6ArrayOutput{})
	pulumi.RegisterOutputType(NeighborConditionalAdvertiseOutput{})
	pulumi.RegisterOutputType(NeighborConditionalAdvertiseArrayOutput{})
	pulumi.RegisterOutputType(GetNeighborConditionalAdvertise6Output{})
	pulumi.RegisterOutputType(GetNeighborConditionalAdvertise6ArrayOutput{})
	pulumi.RegisterOutputType(GetNeighborConditionalAdvertiseOutput{})
	pulumi.RegisterOutputType(GetNeighborConditionalAdvertiseArrayOutput{})
}
