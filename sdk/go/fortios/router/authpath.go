// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package router

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure authentication based routing.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := router.NewAuthpath(ctx, "trname", &router.AuthpathArgs{
//				Device:  pulumi.String("port3"),
//				Gateway: pulumi.String("1.1.1.1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Router AuthPath can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:router/authpath:Authpath labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:router/authpath:Authpath labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Authpath struct {
	pulumi.CustomResourceState

	// Outgoing interface.
	Device pulumi.StringOutput `pulumi:"device"`
	// Gateway IP address.
	Gateway pulumi.StringOutput `pulumi:"gateway"`
	// Name of the entry.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewAuthpath registers a new resource with the given unique name, arguments, and options.
func NewAuthpath(ctx *pulumi.Context,
	name string, args *AuthpathArgs, opts ...pulumi.ResourceOption) (*Authpath, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Device == nil {
		return nil, errors.New("invalid value for required argument 'Device'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Authpath
	err := ctx.RegisterResource("fortios:router/authpath:Authpath", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthpath gets an existing Authpath resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthpath(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthpathState, opts ...pulumi.ResourceOption) (*Authpath, error) {
	var resource Authpath
	err := ctx.ReadResource("fortios:router/authpath:Authpath", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Authpath resources.
type authpathState struct {
	// Outgoing interface.
	Device *string `pulumi:"device"`
	// Gateway IP address.
	Gateway *string `pulumi:"gateway"`
	// Name of the entry.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AuthpathState struct {
	// Outgoing interface.
	Device pulumi.StringPtrInput
	// Gateway IP address.
	Gateway pulumi.StringPtrInput
	// Name of the entry.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AuthpathState) ElementType() reflect.Type {
	return reflect.TypeOf((*authpathState)(nil)).Elem()
}

type authpathArgs struct {
	// Outgoing interface.
	Device string `pulumi:"device"`
	// Gateway IP address.
	Gateway *string `pulumi:"gateway"`
	// Name of the entry.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Authpath resource.
type AuthpathArgs struct {
	// Outgoing interface.
	Device pulumi.StringInput
	// Gateway IP address.
	Gateway pulumi.StringPtrInput
	// Name of the entry.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AuthpathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authpathArgs)(nil)).Elem()
}

type AuthpathInput interface {
	pulumi.Input

	ToAuthpathOutput() AuthpathOutput
	ToAuthpathOutputWithContext(ctx context.Context) AuthpathOutput
}

func (*Authpath) ElementType() reflect.Type {
	return reflect.TypeOf((**Authpath)(nil)).Elem()
}

func (i *Authpath) ToAuthpathOutput() AuthpathOutput {
	return i.ToAuthpathOutputWithContext(context.Background())
}

func (i *Authpath) ToAuthpathOutputWithContext(ctx context.Context) AuthpathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthpathOutput)
}

// AuthpathArrayInput is an input type that accepts AuthpathArray and AuthpathArrayOutput values.
// You can construct a concrete instance of `AuthpathArrayInput` via:
//
//	AuthpathArray{ AuthpathArgs{...} }
type AuthpathArrayInput interface {
	pulumi.Input

	ToAuthpathArrayOutput() AuthpathArrayOutput
	ToAuthpathArrayOutputWithContext(context.Context) AuthpathArrayOutput
}

type AuthpathArray []AuthpathInput

func (AuthpathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Authpath)(nil)).Elem()
}

func (i AuthpathArray) ToAuthpathArrayOutput() AuthpathArrayOutput {
	return i.ToAuthpathArrayOutputWithContext(context.Background())
}

func (i AuthpathArray) ToAuthpathArrayOutputWithContext(ctx context.Context) AuthpathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthpathArrayOutput)
}

// AuthpathMapInput is an input type that accepts AuthpathMap and AuthpathMapOutput values.
// You can construct a concrete instance of `AuthpathMapInput` via:
//
//	AuthpathMap{ "key": AuthpathArgs{...} }
type AuthpathMapInput interface {
	pulumi.Input

	ToAuthpathMapOutput() AuthpathMapOutput
	ToAuthpathMapOutputWithContext(context.Context) AuthpathMapOutput
}

type AuthpathMap map[string]AuthpathInput

func (AuthpathMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Authpath)(nil)).Elem()
}

func (i AuthpathMap) ToAuthpathMapOutput() AuthpathMapOutput {
	return i.ToAuthpathMapOutputWithContext(context.Background())
}

func (i AuthpathMap) ToAuthpathMapOutputWithContext(ctx context.Context) AuthpathMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthpathMapOutput)
}

type AuthpathOutput struct{ *pulumi.OutputState }

func (AuthpathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authpath)(nil)).Elem()
}

func (o AuthpathOutput) ToAuthpathOutput() AuthpathOutput {
	return o
}

func (o AuthpathOutput) ToAuthpathOutputWithContext(ctx context.Context) AuthpathOutput {
	return o
}

// Outgoing interface.
func (o AuthpathOutput) Device() pulumi.StringOutput {
	return o.ApplyT(func(v *Authpath) pulumi.StringOutput { return v.Device }).(pulumi.StringOutput)
}

// Gateway IP address.
func (o AuthpathOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v *Authpath) pulumi.StringOutput { return v.Gateway }).(pulumi.StringOutput)
}

// Name of the entry.
func (o AuthpathOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Authpath) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o AuthpathOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Authpath) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type AuthpathArrayOutput struct{ *pulumi.OutputState }

func (AuthpathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Authpath)(nil)).Elem()
}

func (o AuthpathArrayOutput) ToAuthpathArrayOutput() AuthpathArrayOutput {
	return o
}

func (o AuthpathArrayOutput) ToAuthpathArrayOutputWithContext(ctx context.Context) AuthpathArrayOutput {
	return o
}

func (o AuthpathArrayOutput) Index(i pulumi.IntInput) AuthpathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Authpath {
		return vs[0].([]*Authpath)[vs[1].(int)]
	}).(AuthpathOutput)
}

type AuthpathMapOutput struct{ *pulumi.OutputState }

func (AuthpathMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Authpath)(nil)).Elem()
}

func (o AuthpathMapOutput) ToAuthpathMapOutput() AuthpathMapOutput {
	return o
}

func (o AuthpathMapOutput) ToAuthpathMapOutputWithContext(ctx context.Context) AuthpathMapOutput {
	return o
}

func (o AuthpathMapOutput) MapIndex(k pulumi.StringInput) AuthpathOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Authpath {
		return vs[0].(map[string]*Authpath)[vs[1].(string)]
	}).(AuthpathOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthpathInput)(nil)).Elem(), &Authpath{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthpathArrayInput)(nil)).Elem(), AuthpathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthpathMapInput)(nil)).Elem(), AuthpathMap{})
	pulumi.RegisterOutputType(AuthpathOutput{})
	pulumi.RegisterOutputType(AuthpathArrayOutput{})
	pulumi.RegisterOutputType(AuthpathMapOutput{})
}
