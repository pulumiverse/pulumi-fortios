// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure RIPng.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := router.NewRipng(ctx, "trname", &router.RipngArgs{
//				DefaultInformationOriginate: pulumi.String("disable"),
//				DefaultMetric:               pulumi.Int(1),
//				GarbageTimer:                pulumi.Int(120),
//				MaxOutMetric:                pulumi.Int(0),
//				Redistributes: router.RipngRedistributeArray{
//					&router.RipngRedistributeArgs{
//						Metric: pulumi.Int(10),
//						Name:   pulumi.String("connected"),
//						Status: pulumi.String("disable"),
//					},
//					&router.RipngRedistributeArgs{
//						Metric: pulumi.Int(10),
//						Name:   pulumi.String("static"),
//						Status: pulumi.String("disable"),
//					},
//					&router.RipngRedistributeArgs{
//						Metric: pulumi.Int(10),
//						Name:   pulumi.String("ospf"),
//						Status: pulumi.String("disable"),
//					},
//					&router.RipngRedistributeArgs{
//						Metric: pulumi.Int(10),
//						Name:   pulumi.String("bgp"),
//						Status: pulumi.String("disable"),
//					},
//					&router.RipngRedistributeArgs{
//						Metric: pulumi.Int(10),
//						Name:   pulumi.String("isis"),
//						Status: pulumi.String("disable"),
//					},
//				},
//				TimeoutTimer: pulumi.Int(180),
//				UpdateTimer:  pulumi.Int(30),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Router Ripng can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:router/ripng:Ripng labelname RouterRipng
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:router/ripng:Ripng labelname RouterRipng
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Ripng struct {
	pulumi.CustomResourceState

	// Aggregate address. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses RipngAggregateAddressArrayOutput `pulumi:"aggregateAddresses"`
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate pulumi.StringOutput `pulumi:"defaultInformationOriginate"`
	// Default metric.
	DefaultMetric pulumi.IntOutput `pulumi:"defaultMetric"`
	// distance The structure of `distance` block is documented below.
	Distances RipngDistanceArrayOutput `pulumi:"distances"`
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists RipngDistributeListArrayOutput `pulumi:"distributeLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Garbage timer.
	GarbageTimer pulumi.IntOutput `pulumi:"garbageTimer"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// RIPng interface configuration. The structure of `interface` block is documented below.
	Interfaces RipngInterfaceArrayOutput `pulumi:"interfaces"`
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric pulumi.IntOutput `pulumi:"maxOutMetric"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors RipngNeighborArrayOutput `pulumi:"neighbors"`
	// Network. The structure of `network` block is documented below.
	Networks RipngNetworkArrayOutput `pulumi:"networks"`
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists RipngOffsetListArrayOutput `pulumi:"offsetLists"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces RipngPassiveInterfaceArrayOutput `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes RipngRedistributeArrayOutput `pulumi:"redistributes"`
	// Timeout timer.
	TimeoutTimer pulumi.IntOutput `pulumi:"timeoutTimer"`
	// Update timer.
	UpdateTimer pulumi.IntOutput `pulumi:"updateTimer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewRipng registers a new resource with the given unique name, arguments, and options.
func NewRipng(ctx *pulumi.Context,
	name string, args *RipngArgs, opts ...pulumi.ResourceOption) (*Ripng, error) {
	if args == nil {
		args = &RipngArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ripng
	err := ctx.RegisterResource("fortios:router/ripng:Ripng", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRipng gets an existing Ripng resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRipng(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RipngState, opts ...pulumi.ResourceOption) (*Ripng, error) {
	var resource Ripng
	err := ctx.ReadResource("fortios:router/ripng:Ripng", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ripng resources.
type ripngState struct {
	// Aggregate address. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses []RipngAggregateAddress `pulumi:"aggregateAddresses"`
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate *string `pulumi:"defaultInformationOriginate"`
	// Default metric.
	DefaultMetric *int `pulumi:"defaultMetric"`
	// distance The structure of `distance` block is documented below.
	Distances []RipngDistance `pulumi:"distances"`
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists []RipngDistributeList `pulumi:"distributeLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Garbage timer.
	GarbageTimer *int `pulumi:"garbageTimer"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// RIPng interface configuration. The structure of `interface` block is documented below.
	Interfaces []RipngInterface `pulumi:"interfaces"`
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric *int `pulumi:"maxOutMetric"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors []RipngNeighbor `pulumi:"neighbors"`
	// Network. The structure of `network` block is documented below.
	Networks []RipngNetwork `pulumi:"networks"`
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists []RipngOffsetList `pulumi:"offsetLists"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces []RipngPassiveInterface `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes []RipngRedistribute `pulumi:"redistributes"`
	// Timeout timer.
	TimeoutTimer *int `pulumi:"timeoutTimer"`
	// Update timer.
	UpdateTimer *int `pulumi:"updateTimer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type RipngState struct {
	// Aggregate address. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses RipngAggregateAddressArrayInput
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate pulumi.StringPtrInput
	// Default metric.
	DefaultMetric pulumi.IntPtrInput
	// distance The structure of `distance` block is documented below.
	Distances RipngDistanceArrayInput
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists RipngDistributeListArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Garbage timer.
	GarbageTimer pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// RIPng interface configuration. The structure of `interface` block is documented below.
	Interfaces RipngInterfaceArrayInput
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric pulumi.IntPtrInput
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors RipngNeighborArrayInput
	// Network. The structure of `network` block is documented below.
	Networks RipngNetworkArrayInput
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists RipngOffsetListArrayInput
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces RipngPassiveInterfaceArrayInput
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes RipngRedistributeArrayInput
	// Timeout timer.
	TimeoutTimer pulumi.IntPtrInput
	// Update timer.
	UpdateTimer pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (RipngState) ElementType() reflect.Type {
	return reflect.TypeOf((*ripngState)(nil)).Elem()
}

type ripngArgs struct {
	// Aggregate address. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses []RipngAggregateAddress `pulumi:"aggregateAddresses"`
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate *string `pulumi:"defaultInformationOriginate"`
	// Default metric.
	DefaultMetric *int `pulumi:"defaultMetric"`
	// distance The structure of `distance` block is documented below.
	Distances []RipngDistance `pulumi:"distances"`
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists []RipngDistributeList `pulumi:"distributeLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Garbage timer.
	GarbageTimer *int `pulumi:"garbageTimer"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// RIPng interface configuration. The structure of `interface` block is documented below.
	Interfaces []RipngInterface `pulumi:"interfaces"`
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric *int `pulumi:"maxOutMetric"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors []RipngNeighbor `pulumi:"neighbors"`
	// Network. The structure of `network` block is documented below.
	Networks []RipngNetwork `pulumi:"networks"`
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists []RipngOffsetList `pulumi:"offsetLists"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces []RipngPassiveInterface `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes []RipngRedistribute `pulumi:"redistributes"`
	// Timeout timer.
	TimeoutTimer *int `pulumi:"timeoutTimer"`
	// Update timer.
	UpdateTimer *int `pulumi:"updateTimer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Ripng resource.
type RipngArgs struct {
	// Aggregate address. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses RipngAggregateAddressArrayInput
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate pulumi.StringPtrInput
	// Default metric.
	DefaultMetric pulumi.IntPtrInput
	// distance The structure of `distance` block is documented below.
	Distances RipngDistanceArrayInput
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists RipngDistributeListArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Garbage timer.
	GarbageTimer pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// RIPng interface configuration. The structure of `interface` block is documented below.
	Interfaces RipngInterfaceArrayInput
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric pulumi.IntPtrInput
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors RipngNeighborArrayInput
	// Network. The structure of `network` block is documented below.
	Networks RipngNetworkArrayInput
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists RipngOffsetListArrayInput
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces RipngPassiveInterfaceArrayInput
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes RipngRedistributeArrayInput
	// Timeout timer.
	TimeoutTimer pulumi.IntPtrInput
	// Update timer.
	UpdateTimer pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (RipngArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ripngArgs)(nil)).Elem()
}

type RipngInput interface {
	pulumi.Input

	ToRipngOutput() RipngOutput
	ToRipngOutputWithContext(ctx context.Context) RipngOutput
}

func (*Ripng) ElementType() reflect.Type {
	return reflect.TypeOf((**Ripng)(nil)).Elem()
}

func (i *Ripng) ToRipngOutput() RipngOutput {
	return i.ToRipngOutputWithContext(context.Background())
}

func (i *Ripng) ToRipngOutputWithContext(ctx context.Context) RipngOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngOutput)
}

// RipngArrayInput is an input type that accepts RipngArray and RipngArrayOutput values.
// You can construct a concrete instance of `RipngArrayInput` via:
//
//	RipngArray{ RipngArgs{...} }
type RipngArrayInput interface {
	pulumi.Input

	ToRipngArrayOutput() RipngArrayOutput
	ToRipngArrayOutputWithContext(context.Context) RipngArrayOutput
}

type RipngArray []RipngInput

func (RipngArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ripng)(nil)).Elem()
}

func (i RipngArray) ToRipngArrayOutput() RipngArrayOutput {
	return i.ToRipngArrayOutputWithContext(context.Background())
}

func (i RipngArray) ToRipngArrayOutputWithContext(ctx context.Context) RipngArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngArrayOutput)
}

// RipngMapInput is an input type that accepts RipngMap and RipngMapOutput values.
// You can construct a concrete instance of `RipngMapInput` via:
//
//	RipngMap{ "key": RipngArgs{...} }
type RipngMapInput interface {
	pulumi.Input

	ToRipngMapOutput() RipngMapOutput
	ToRipngMapOutputWithContext(context.Context) RipngMapOutput
}

type RipngMap map[string]RipngInput

func (RipngMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ripng)(nil)).Elem()
}

func (i RipngMap) ToRipngMapOutput() RipngMapOutput {
	return i.ToRipngMapOutputWithContext(context.Background())
}

func (i RipngMap) ToRipngMapOutputWithContext(ctx context.Context) RipngMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipngMapOutput)
}

type RipngOutput struct{ *pulumi.OutputState }

func (RipngOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ripng)(nil)).Elem()
}

func (o RipngOutput) ToRipngOutput() RipngOutput {
	return o
}

func (o RipngOutput) ToRipngOutputWithContext(ctx context.Context) RipngOutput {
	return o
}

// Aggregate address. The structure of `aggregateAddress` block is documented below.
func (o RipngOutput) AggregateAddresses() RipngAggregateAddressArrayOutput {
	return o.ApplyT(func(v *Ripng) RipngAggregateAddressArrayOutput { return v.AggregateAddresses }).(RipngAggregateAddressArrayOutput)
}

// Enable/disable generation of default route. Valid values: `enable`, `disable`.
func (o RipngOutput) DefaultInformationOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v *Ripng) pulumi.StringOutput { return v.DefaultInformationOriginate }).(pulumi.StringOutput)
}

// Default metric.
func (o RipngOutput) DefaultMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *Ripng) pulumi.IntOutput { return v.DefaultMetric }).(pulumi.IntOutput)
}

// distance The structure of `distance` block is documented below.
func (o RipngOutput) Distances() RipngDistanceArrayOutput {
	return o.ApplyT(func(v *Ripng) RipngDistanceArrayOutput { return v.Distances }).(RipngDistanceArrayOutput)
}

// Distribute list. The structure of `distributeList` block is documented below.
func (o RipngOutput) DistributeLists() RipngDistributeListArrayOutput {
	return o.ApplyT(func(v *Ripng) RipngDistributeListArrayOutput { return v.DistributeLists }).(RipngDistributeListArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o RipngOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ripng) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Garbage timer.
func (o RipngOutput) GarbageTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *Ripng) pulumi.IntOutput { return v.GarbageTimer }).(pulumi.IntOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o RipngOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ripng) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// RIPng interface configuration. The structure of `interface` block is documented below.
func (o RipngOutput) Interfaces() RipngInterfaceArrayOutput {
	return o.ApplyT(func(v *Ripng) RipngInterfaceArrayOutput { return v.Interfaces }).(RipngInterfaceArrayOutput)
}

// Maximum metric allowed to output(0 means 'not set').
func (o RipngOutput) MaxOutMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *Ripng) pulumi.IntOutput { return v.MaxOutMetric }).(pulumi.IntOutput)
}

// neighbor The structure of `neighbor` block is documented below.
func (o RipngOutput) Neighbors() RipngNeighborArrayOutput {
	return o.ApplyT(func(v *Ripng) RipngNeighborArrayOutput { return v.Neighbors }).(RipngNeighborArrayOutput)
}

// Network. The structure of `network` block is documented below.
func (o RipngOutput) Networks() RipngNetworkArrayOutput {
	return o.ApplyT(func(v *Ripng) RipngNetworkArrayOutput { return v.Networks }).(RipngNetworkArrayOutput)
}

// Offset list. The structure of `offsetList` block is documented below.
func (o RipngOutput) OffsetLists() RipngOffsetListArrayOutput {
	return o.ApplyT(func(v *Ripng) RipngOffsetListArrayOutput { return v.OffsetLists }).(RipngOffsetListArrayOutput)
}

// Passive interface configuration. The structure of `passiveInterface` block is documented below.
func (o RipngOutput) PassiveInterfaces() RipngPassiveInterfaceArrayOutput {
	return o.ApplyT(func(v *Ripng) RipngPassiveInterfaceArrayOutput { return v.PassiveInterfaces }).(RipngPassiveInterfaceArrayOutput)
}

// Redistribute configuration. The structure of `redistribute` block is documented below.
func (o RipngOutput) Redistributes() RipngRedistributeArrayOutput {
	return o.ApplyT(func(v *Ripng) RipngRedistributeArrayOutput { return v.Redistributes }).(RipngRedistributeArrayOutput)
}

// Timeout timer.
func (o RipngOutput) TimeoutTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *Ripng) pulumi.IntOutput { return v.TimeoutTimer }).(pulumi.IntOutput)
}

// Update timer.
func (o RipngOutput) UpdateTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *Ripng) pulumi.IntOutput { return v.UpdateTimer }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o RipngOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ripng) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type RipngArrayOutput struct{ *pulumi.OutputState }

func (RipngArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ripng)(nil)).Elem()
}

func (o RipngArrayOutput) ToRipngArrayOutput() RipngArrayOutput {
	return o
}

func (o RipngArrayOutput) ToRipngArrayOutputWithContext(ctx context.Context) RipngArrayOutput {
	return o
}

func (o RipngArrayOutput) Index(i pulumi.IntInput) RipngOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ripng {
		return vs[0].([]*Ripng)[vs[1].(int)]
	}).(RipngOutput)
}

type RipngMapOutput struct{ *pulumi.OutputState }

func (RipngMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ripng)(nil)).Elem()
}

func (o RipngMapOutput) ToRipngMapOutput() RipngMapOutput {
	return o
}

func (o RipngMapOutput) ToRipngMapOutputWithContext(ctx context.Context) RipngMapOutput {
	return o
}

func (o RipngMapOutput) MapIndex(k pulumi.StringInput) RipngOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ripng {
		return vs[0].(map[string]*Ripng)[vs[1].(string)]
	}).(RipngOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RipngInput)(nil)).Elem(), &Ripng{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngArrayInput)(nil)).Elem(), RipngArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipngMapInput)(nil)).Elem(), RipngMap{})
	pulumi.RegisterOutputType(RipngOutput{})
	pulumi.RegisterOutputType(RipngArrayOutput{})
	pulumi.RegisterOutputType(RipngMapOutput{})
}
