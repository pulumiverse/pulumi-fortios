// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package router

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure BGP.
//
// > The provider supports the definition of Neighbor in Router Bgp `router.Bgp`, and also allows the definition of separate Neighbor resources `router/bgp.Neighbor`, but do not use a `router.Bgp` with in-line Neighbor in conjunction with any `router/bgp.Neighbor` resources, otherwise conflicts and overwrite will occur.
//
// > The provider supports the definition of Network in Router Bgp `router.Bgp`, and also allows the definition of separate Network resources `router/bgp.Network`, but do not use a `router.Bgp` with in-line Network in conjunction with any `router/bgp.Network` resources, otherwise conflicts and overwrite will occur.
//
// > The provider supports the definition of Network6 in Router Bgp `router.Bgp`, and also allows the definition of separate Network6 resources `router/bgp.Network6`, but do not use a `router.Bgp` with in-line Network6 in conjunction with any `router/bgp.Network6` resources, otherwise conflicts and overwrite will occur.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := router.NewBgp(ctx, "trname", &router.BgpArgs{
//				AdditionalPathSelect:            pulumi.Int(2),
//				AdditionalPathSelect6:           pulumi.Int(2),
//				AlwaysCompareMed:                pulumi.String("disable"),
//				As:                              pulumi.Int(0),
//				ClientToClientReflection:        pulumi.String("enable"),
//				ClusterId:                       pulumi.String("0.0.0.0"),
//				Dampening:                       pulumi.String("disable"),
//				DampeningMaxSuppressTime:        pulumi.Int(60),
//				DampeningReachabilityHalfLife:   pulumi.Int(15),
//				DampeningReuse:                  pulumi.Int(750),
//				DampeningSuppress:               pulumi.Int(2000),
//				DampeningUnreachabilityHalfLife: pulumi.Int(15),
//				DefaultLocalPreference:          pulumi.Int(100),
//				DeterministicMed:                pulumi.String("disable"),
//				DistanceExternal:                pulumi.Int(20),
//				DistanceInternal:                pulumi.Int(200),
//				DistanceLocal:                   pulumi.Int(200),
//				GracefulRestartTime:             pulumi.Int(120),
//				GracefulStalepathTime:           pulumi.Int(360),
//				GracefulUpdateDelay:             pulumi.Int(120),
//				HoldtimeTimer:                   pulumi.Int(180),
//				IbgpMultipath:                   pulumi.String("disable"),
//				IgnoreOptionalCapability:        pulumi.String("enable"),
//				KeepaliveTimer:                  pulumi.Int(60),
//				LogNeighbourChanges:             pulumi.String("enable"),
//				NetworkImportCheck:              pulumi.String("enable"),
//				Redistributes: router.BgpRedistributeArray{
//					&router.BgpRedistributeArgs{
//						Name:   pulumi.String("connected"),
//						Status: pulumi.String("disable"),
//					},
//					&router.BgpRedistributeArgs{
//						Name:   pulumi.String("rip"),
//						Status: pulumi.String("disable"),
//					},
//					&router.BgpRedistributeArgs{
//						Name:   pulumi.String("ospf"),
//						Status: pulumi.String("disable"),
//					},
//					&router.BgpRedistributeArgs{
//						Name:   pulumi.String("static"),
//						Status: pulumi.String("disable"),
//					},
//					&router.BgpRedistributeArgs{
//						Name:   pulumi.String("isis"),
//						Status: pulumi.String("disable"),
//					},
//				},
//				Redistribute6s: router.BgpRedistribute6Array{
//					&router.BgpRedistribute6Args{
//						Name:   pulumi.String("connected"),
//						Status: pulumi.String("disable"),
//					},
//					&router.BgpRedistribute6Args{
//						Name:   pulumi.String("rip"),
//						Status: pulumi.String("disable"),
//					},
//					&router.BgpRedistribute6Args{
//						Name:   pulumi.String("ospf"),
//						Status: pulumi.String("disable"),
//					},
//					&router.BgpRedistribute6Args{
//						Name:   pulumi.String("static"),
//						Status: pulumi.String("disable"),
//					},
//					&router.BgpRedistribute6Args{
//						Name:   pulumi.String("isis"),
//						Status: pulumi.String("disable"),
//					},
//				},
//				ScanTime:        pulumi.Int(60),
//				Synchronization: pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Router Bgp can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:router/bgp:Bgp labelname RouterBgp
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:router/bgp:Bgp labelname RouterBgp
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Bgp struct {
	pulumi.CustomResourceState

	// Enable/disable selection of BGP IPv4 additional paths. Valid values: `enable`, `disable`.
	AdditionalPath pulumi.StringOutput `pulumi:"additionalPath"`
	// Enable/disable selection of BGP IPv6 additional paths. Valid values: `enable`, `disable`.
	AdditionalPath6 pulumi.StringOutput `pulumi:"additionalPath6"`
	// Number of additional paths to be selected for each IPv4 NLRI.
	AdditionalPathSelect pulumi.IntOutput `pulumi:"additionalPathSelect"`
	// Number of additional paths to be selected for each IPv6 NLRI.
	AdditionalPathSelect6 pulumi.IntOutput `pulumi:"additionalPathSelect6"`
	// Number of additional paths to be selected for each VPNv4 NLRI.
	AdditionalPathSelectVpnv4 pulumi.IntOutput `pulumi:"additionalPathSelectVpnv4"`
	// Number of additional paths to be selected for each VPNv6 NLRI.
	AdditionalPathSelectVpnv6 pulumi.IntOutput `pulumi:"additionalPathSelectVpnv6"`
	// Enable/disable selection of BGP VPNv4 additional paths. Valid values: `enable`, `disable`.
	AdditionalPathVpnv4 pulumi.StringOutput `pulumi:"additionalPathVpnv4"`
	// Enable/disable selection of BGP VPNv6 additional paths. Valid values: `enable`, `disable`.
	AdditionalPathVpnv6 pulumi.StringOutput `pulumi:"additionalPathVpnv6"`
	// Administrative distance modifications. The structure of `adminDistance` block is documented below.
	AdminDistances BgpAdminDistanceArrayOutput `pulumi:"adminDistances"`
	// BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
	AggregateAddress6s BgpAggregateAddress6ArrayOutput `pulumi:"aggregateAddress6s"`
	// BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses BgpAggregateAddressArrayOutput `pulumi:"aggregateAddresses"`
	// Enable/disable always compare MED. Valid values: `enable`, `disable`.
	AlwaysCompareMed pulumi.StringOutput `pulumi:"alwaysCompareMed"`
	// Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
	As pulumi.IntOutput `pulumi:"as"`
	// Router AS number, asplain/asdot/asdot+ format, 0 to disable BGP.
	AsString pulumi.StringOutput `pulumi:"asString"`
	// Enable/disable ignore AS path. Valid values: `enable`, `disable`.
	BestpathAsPathIgnore pulumi.StringOutput `pulumi:"bestpathAsPathIgnore"`
	// Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
	BestpathCmpConfedAspath pulumi.StringOutput `pulumi:"bestpathCmpConfedAspath"`
	// Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
	BestpathCmpRouterid pulumi.StringOutput `pulumi:"bestpathCmpRouterid"`
	// Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
	BestpathMedConfed pulumi.StringOutput `pulumi:"bestpathMedConfed"`
	// Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
	BestpathMedMissingAsWorst pulumi.StringOutput `pulumi:"bestpathMedMissingAsWorst"`
	// Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
	ClientToClientReflection pulumi.StringOutput `pulumi:"clientToClientReflection"`
	// Route reflector cluster ID.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Confederation identifier.
	ConfederationIdentifier pulumi.IntOutput `pulumi:"confederationIdentifier"`
	// Confederation peers. The structure of `confederationPeers` block is documented below.
	ConfederationPeers BgpConfederationPeerArrayOutput `pulumi:"confederationPeers"`
	// Enable/disable cross address family conditional advertisement. Valid values: `enable`, `disable`.
	CrossFamilyConditionalAdv pulumi.StringOutput `pulumi:"crossFamilyConditionalAdv"`
	// Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
	Dampening pulumi.StringOutput `pulumi:"dampening"`
	// Maximum minutes a route can be suppressed.
	DampeningMaxSuppressTime pulumi.IntOutput `pulumi:"dampeningMaxSuppressTime"`
	// Reachability half-life time for penalty (min).
	DampeningReachabilityHalfLife pulumi.IntOutput `pulumi:"dampeningReachabilityHalfLife"`
	// Threshold to reuse routes.
	DampeningReuse pulumi.IntOutput `pulumi:"dampeningReuse"`
	// Criteria for dampening.
	DampeningRouteMap pulumi.StringOutput `pulumi:"dampeningRouteMap"`
	// Threshold to suppress routes.
	DampeningSuppress pulumi.IntOutput `pulumi:"dampeningSuppress"`
	// Unreachability half-life time for penalty (min).
	DampeningUnreachabilityHalfLife pulumi.IntOutput `pulumi:"dampeningUnreachabilityHalfLife"`
	// Default local preference.
	DefaultLocalPreference pulumi.IntOutput `pulumi:"defaultLocalPreference"`
	// Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
	DeterministicMed pulumi.StringOutput `pulumi:"deterministicMed"`
	// Distance for routes external to the AS.
	DistanceExternal pulumi.IntOutput `pulumi:"distanceExternal"`
	// Distance for routes internal to the AS.
	DistanceInternal pulumi.IntOutput `pulumi:"distanceInternal"`
	// Distance for routes local to the AS.
	DistanceLocal pulumi.IntOutput `pulumi:"distanceLocal"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
	EbgpMultipath pulumi.StringOutput `pulumi:"ebgpMultipath"`
	// Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
	EnforceFirstAs pulumi.StringOutput `pulumi:"enforceFirstAs"`
	// Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
	FastExternalFailover pulumi.StringOutput `pulumi:"fastExternalFailover"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
	GracefulEndOnTimer pulumi.StringOutput `pulumi:"gracefulEndOnTimer"`
	// Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
	GracefulRestart pulumi.StringOutput `pulumi:"gracefulRestart"`
	// Time needed for neighbors to restart (sec).
	GracefulRestartTime pulumi.IntOutput `pulumi:"gracefulRestartTime"`
	// Time to hold stale paths of restarting neighbor (sec).
	GracefulStalepathTime pulumi.IntOutput `pulumi:"gracefulStalepathTime"`
	// Route advertisement/selection delay after restart (sec).
	GracefulUpdateDelay pulumi.IntOutput `pulumi:"gracefulUpdateDelay"`
	// Number of seconds to mark peer as dead.
	HoldtimeTimer pulumi.IntOutput `pulumi:"holdtimeTimer"`
	// Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
	IbgpMultipath pulumi.StringOutput `pulumi:"ibgpMultipath"`
	// Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
	IgnoreOptionalCapability pulumi.StringOutput `pulumi:"ignoreOptionalCapability"`
	// Frequency to send keep alive requests.
	KeepaliveTimer pulumi.IntOutput `pulumi:"keepaliveTimer"`
	// Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringOutput `pulumi:"logNeighbourChanges"`
	// Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
	MultipathRecursiveDistance pulumi.StringOutput `pulumi:"multipathRecursiveDistance"`
	// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
	NeighborGroups BgpNeighborGroupArrayOutput `pulumi:"neighborGroups"`
	// BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
	NeighborRange6s BgpNeighborRange6ArrayOutput `pulumi:"neighborRange6s"`
	// BGP neighbor range table. The structure of `neighborRange` block is documented below.
	NeighborRanges BgpNeighborRangeArrayOutput `pulumi:"neighborRanges"`
	// BGP neighbor table. The structure of `neighbor` block is documented below.
	Neighbors BgpNeighborArrayOutput `pulumi:"neighbors"`
	// BGP IPv6 network table. The structure of `network6` block is documented below.
	Network6s BgpNetwork6ArrayOutput `pulumi:"network6s"`
	// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
	NetworkImportCheck pulumi.StringOutput `pulumi:"networkImportCheck"`
	// BGP network table. The structure of `network` block is documented below.
	Networks BgpNetworkArrayOutput `pulumi:"networks"`
	// Enable/disable priority inheritance for recursive resolution. Valid values: `enable`, `disable`.
	RecursiveInheritPriority pulumi.StringOutput `pulumi:"recursiveInheritPriority"`
	// Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
	RecursiveNextHop pulumi.StringOutput `pulumi:"recursiveNextHop"`
	// BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
	Redistribute6s BgpRedistribute6ArrayOutput `pulumi:"redistribute6s"`
	// BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
	Redistributes BgpRedistributeArrayOutput `pulumi:"redistributes"`
	// Router ID.
	RouterId pulumi.StringOutput `pulumi:"routerId"`
	// Background scanner interval (sec), 0 to disable it.
	ScanTime pulumi.IntOutput `pulumi:"scanTime"`
	// Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
	Synchronization pulumi.StringOutput `pulumi:"synchronization"`
	// Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
	TagResolveMode pulumi.StringOutput `pulumi:"tagResolveMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// BGP IPv6 VRF leaking table. The structure of `vrf6` block is documented below.
	Vrf6s BgpVrf6ArrayOutput `pulumi:"vrf6s"`
	// BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
	VrfLeak6s BgpVrfLeak6ArrayOutput `pulumi:"vrfLeak6s"`
	// BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
	VrfLeaks BgpVrfLeakArrayOutput `pulumi:"vrfLeaks"`
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrves BgpVrfArrayOutput `pulumi:"vrves"`
}

// NewBgp registers a new resource with the given unique name, arguments, and options.
func NewBgp(ctx *pulumi.Context,
	name string, args *BgpArgs, opts ...pulumi.ResourceOption) (*Bgp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.As == nil {
		return nil, errors.New("invalid value for required argument 'As'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Bgp
	err := ctx.RegisterResource("fortios:router/bgp:Bgp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgp gets an existing Bgp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpState, opts ...pulumi.ResourceOption) (*Bgp, error) {
	var resource Bgp
	err := ctx.ReadResource("fortios:router/bgp:Bgp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bgp resources.
type bgpState struct {
	// Enable/disable selection of BGP IPv4 additional paths. Valid values: `enable`, `disable`.
	AdditionalPath *string `pulumi:"additionalPath"`
	// Enable/disable selection of BGP IPv6 additional paths. Valid values: `enable`, `disable`.
	AdditionalPath6 *string `pulumi:"additionalPath6"`
	// Number of additional paths to be selected for each IPv4 NLRI.
	AdditionalPathSelect *int `pulumi:"additionalPathSelect"`
	// Number of additional paths to be selected for each IPv6 NLRI.
	AdditionalPathSelect6 *int `pulumi:"additionalPathSelect6"`
	// Number of additional paths to be selected for each VPNv4 NLRI.
	AdditionalPathSelectVpnv4 *int `pulumi:"additionalPathSelectVpnv4"`
	// Number of additional paths to be selected for each VPNv6 NLRI.
	AdditionalPathSelectVpnv6 *int `pulumi:"additionalPathSelectVpnv6"`
	// Enable/disable selection of BGP VPNv4 additional paths. Valid values: `enable`, `disable`.
	AdditionalPathVpnv4 *string `pulumi:"additionalPathVpnv4"`
	// Enable/disable selection of BGP VPNv6 additional paths. Valid values: `enable`, `disable`.
	AdditionalPathVpnv6 *string `pulumi:"additionalPathVpnv6"`
	// Administrative distance modifications. The structure of `adminDistance` block is documented below.
	AdminDistances []BgpAdminDistance `pulumi:"adminDistances"`
	// BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
	AggregateAddress6s []BgpAggregateAddress6 `pulumi:"aggregateAddress6s"`
	// BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses []BgpAggregateAddress `pulumi:"aggregateAddresses"`
	// Enable/disable always compare MED. Valid values: `enable`, `disable`.
	AlwaysCompareMed *string `pulumi:"alwaysCompareMed"`
	// Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
	As *int `pulumi:"as"`
	// Router AS number, asplain/asdot/asdot+ format, 0 to disable BGP.
	AsString *string `pulumi:"asString"`
	// Enable/disable ignore AS path. Valid values: `enable`, `disable`.
	BestpathAsPathIgnore *string `pulumi:"bestpathAsPathIgnore"`
	// Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
	BestpathCmpConfedAspath *string `pulumi:"bestpathCmpConfedAspath"`
	// Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
	BestpathCmpRouterid *string `pulumi:"bestpathCmpRouterid"`
	// Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
	BestpathMedConfed *string `pulumi:"bestpathMedConfed"`
	// Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
	BestpathMedMissingAsWorst *string `pulumi:"bestpathMedMissingAsWorst"`
	// Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
	ClientToClientReflection *string `pulumi:"clientToClientReflection"`
	// Route reflector cluster ID.
	ClusterId *string `pulumi:"clusterId"`
	// Confederation identifier.
	ConfederationIdentifier *int `pulumi:"confederationIdentifier"`
	// Confederation peers. The structure of `confederationPeers` block is documented below.
	ConfederationPeers []BgpConfederationPeer `pulumi:"confederationPeers"`
	// Enable/disable cross address family conditional advertisement. Valid values: `enable`, `disable`.
	CrossFamilyConditionalAdv *string `pulumi:"crossFamilyConditionalAdv"`
	// Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
	Dampening *string `pulumi:"dampening"`
	// Maximum minutes a route can be suppressed.
	DampeningMaxSuppressTime *int `pulumi:"dampeningMaxSuppressTime"`
	// Reachability half-life time for penalty (min).
	DampeningReachabilityHalfLife *int `pulumi:"dampeningReachabilityHalfLife"`
	// Threshold to reuse routes.
	DampeningReuse *int `pulumi:"dampeningReuse"`
	// Criteria for dampening.
	DampeningRouteMap *string `pulumi:"dampeningRouteMap"`
	// Threshold to suppress routes.
	DampeningSuppress *int `pulumi:"dampeningSuppress"`
	// Unreachability half-life time for penalty (min).
	DampeningUnreachabilityHalfLife *int `pulumi:"dampeningUnreachabilityHalfLife"`
	// Default local preference.
	DefaultLocalPreference *int `pulumi:"defaultLocalPreference"`
	// Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
	DeterministicMed *string `pulumi:"deterministicMed"`
	// Distance for routes external to the AS.
	DistanceExternal *int `pulumi:"distanceExternal"`
	// Distance for routes internal to the AS.
	DistanceInternal *int `pulumi:"distanceInternal"`
	// Distance for routes local to the AS.
	DistanceLocal *int `pulumi:"distanceLocal"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
	EbgpMultipath *string `pulumi:"ebgpMultipath"`
	// Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
	EnforceFirstAs *string `pulumi:"enforceFirstAs"`
	// Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
	FastExternalFailover *string `pulumi:"fastExternalFailover"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
	GracefulEndOnTimer *string `pulumi:"gracefulEndOnTimer"`
	// Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
	GracefulRestart *string `pulumi:"gracefulRestart"`
	// Time needed for neighbors to restart (sec).
	GracefulRestartTime *int `pulumi:"gracefulRestartTime"`
	// Time to hold stale paths of restarting neighbor (sec).
	GracefulStalepathTime *int `pulumi:"gracefulStalepathTime"`
	// Route advertisement/selection delay after restart (sec).
	GracefulUpdateDelay *int `pulumi:"gracefulUpdateDelay"`
	// Number of seconds to mark peer as dead.
	HoldtimeTimer *int `pulumi:"holdtimeTimer"`
	// Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
	IbgpMultipath *string `pulumi:"ibgpMultipath"`
	// Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
	IgnoreOptionalCapability *string `pulumi:"ignoreOptionalCapability"`
	// Frequency to send keep alive requests.
	KeepaliveTimer *int `pulumi:"keepaliveTimer"`
	// Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges *string `pulumi:"logNeighbourChanges"`
	// Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
	MultipathRecursiveDistance *string `pulumi:"multipathRecursiveDistance"`
	// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
	NeighborGroups []BgpNeighborGroup `pulumi:"neighborGroups"`
	// BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
	NeighborRange6s []BgpNeighborRange6 `pulumi:"neighborRange6s"`
	// BGP neighbor range table. The structure of `neighborRange` block is documented below.
	NeighborRanges []BgpNeighborRange `pulumi:"neighborRanges"`
	// BGP neighbor table. The structure of `neighbor` block is documented below.
	Neighbors []BgpNeighbor `pulumi:"neighbors"`
	// BGP IPv6 network table. The structure of `network6` block is documented below.
	Network6s []BgpNetwork6 `pulumi:"network6s"`
	// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
	NetworkImportCheck *string `pulumi:"networkImportCheck"`
	// BGP network table. The structure of `network` block is documented below.
	Networks []BgpNetwork `pulumi:"networks"`
	// Enable/disable priority inheritance for recursive resolution. Valid values: `enable`, `disable`.
	RecursiveInheritPriority *string `pulumi:"recursiveInheritPriority"`
	// Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
	RecursiveNextHop *string `pulumi:"recursiveNextHop"`
	// BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
	Redistribute6s []BgpRedistribute6 `pulumi:"redistribute6s"`
	// BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
	Redistributes []BgpRedistribute `pulumi:"redistributes"`
	// Router ID.
	RouterId *string `pulumi:"routerId"`
	// Background scanner interval (sec), 0 to disable it.
	ScanTime *int `pulumi:"scanTime"`
	// Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
	Synchronization *string `pulumi:"synchronization"`
	// Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
	TagResolveMode *string `pulumi:"tagResolveMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// BGP IPv6 VRF leaking table. The structure of `vrf6` block is documented below.
	Vrf6s []BgpVrf6 `pulumi:"vrf6s"`
	// BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
	VrfLeak6s []BgpVrfLeak6 `pulumi:"vrfLeak6s"`
	// BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
	VrfLeaks []BgpVrfLeak `pulumi:"vrfLeaks"`
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrves []BgpVrf `pulumi:"vrves"`
}

type BgpState struct {
	// Enable/disable selection of BGP IPv4 additional paths. Valid values: `enable`, `disable`.
	AdditionalPath pulumi.StringPtrInput
	// Enable/disable selection of BGP IPv6 additional paths. Valid values: `enable`, `disable`.
	AdditionalPath6 pulumi.StringPtrInput
	// Number of additional paths to be selected for each IPv4 NLRI.
	AdditionalPathSelect pulumi.IntPtrInput
	// Number of additional paths to be selected for each IPv6 NLRI.
	AdditionalPathSelect6 pulumi.IntPtrInput
	// Number of additional paths to be selected for each VPNv4 NLRI.
	AdditionalPathSelectVpnv4 pulumi.IntPtrInput
	// Number of additional paths to be selected for each VPNv6 NLRI.
	AdditionalPathSelectVpnv6 pulumi.IntPtrInput
	// Enable/disable selection of BGP VPNv4 additional paths. Valid values: `enable`, `disable`.
	AdditionalPathVpnv4 pulumi.StringPtrInput
	// Enable/disable selection of BGP VPNv6 additional paths. Valid values: `enable`, `disable`.
	AdditionalPathVpnv6 pulumi.StringPtrInput
	// Administrative distance modifications. The structure of `adminDistance` block is documented below.
	AdminDistances BgpAdminDistanceArrayInput
	// BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
	AggregateAddress6s BgpAggregateAddress6ArrayInput
	// BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses BgpAggregateAddressArrayInput
	// Enable/disable always compare MED. Valid values: `enable`, `disable`.
	AlwaysCompareMed pulumi.StringPtrInput
	// Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
	As pulumi.IntPtrInput
	// Router AS number, asplain/asdot/asdot+ format, 0 to disable BGP.
	AsString pulumi.StringPtrInput
	// Enable/disable ignore AS path. Valid values: `enable`, `disable`.
	BestpathAsPathIgnore pulumi.StringPtrInput
	// Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
	BestpathCmpConfedAspath pulumi.StringPtrInput
	// Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
	BestpathCmpRouterid pulumi.StringPtrInput
	// Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
	BestpathMedConfed pulumi.StringPtrInput
	// Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
	BestpathMedMissingAsWorst pulumi.StringPtrInput
	// Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
	ClientToClientReflection pulumi.StringPtrInput
	// Route reflector cluster ID.
	ClusterId pulumi.StringPtrInput
	// Confederation identifier.
	ConfederationIdentifier pulumi.IntPtrInput
	// Confederation peers. The structure of `confederationPeers` block is documented below.
	ConfederationPeers BgpConfederationPeerArrayInput
	// Enable/disable cross address family conditional advertisement. Valid values: `enable`, `disable`.
	CrossFamilyConditionalAdv pulumi.StringPtrInput
	// Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
	Dampening pulumi.StringPtrInput
	// Maximum minutes a route can be suppressed.
	DampeningMaxSuppressTime pulumi.IntPtrInput
	// Reachability half-life time for penalty (min).
	DampeningReachabilityHalfLife pulumi.IntPtrInput
	// Threshold to reuse routes.
	DampeningReuse pulumi.IntPtrInput
	// Criteria for dampening.
	DampeningRouteMap pulumi.StringPtrInput
	// Threshold to suppress routes.
	DampeningSuppress pulumi.IntPtrInput
	// Unreachability half-life time for penalty (min).
	DampeningUnreachabilityHalfLife pulumi.IntPtrInput
	// Default local preference.
	DefaultLocalPreference pulumi.IntPtrInput
	// Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
	DeterministicMed pulumi.StringPtrInput
	// Distance for routes external to the AS.
	DistanceExternal pulumi.IntPtrInput
	// Distance for routes internal to the AS.
	DistanceInternal pulumi.IntPtrInput
	// Distance for routes local to the AS.
	DistanceLocal pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
	EbgpMultipath pulumi.StringPtrInput
	// Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
	EnforceFirstAs pulumi.StringPtrInput
	// Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
	FastExternalFailover pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
	GracefulEndOnTimer pulumi.StringPtrInput
	// Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
	GracefulRestart pulumi.StringPtrInput
	// Time needed for neighbors to restart (sec).
	GracefulRestartTime pulumi.IntPtrInput
	// Time to hold stale paths of restarting neighbor (sec).
	GracefulStalepathTime pulumi.IntPtrInput
	// Route advertisement/selection delay after restart (sec).
	GracefulUpdateDelay pulumi.IntPtrInput
	// Number of seconds to mark peer as dead.
	HoldtimeTimer pulumi.IntPtrInput
	// Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
	IbgpMultipath pulumi.StringPtrInput
	// Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
	IgnoreOptionalCapability pulumi.StringPtrInput
	// Frequency to send keep alive requests.
	KeepaliveTimer pulumi.IntPtrInput
	// Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringPtrInput
	// Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
	MultipathRecursiveDistance pulumi.StringPtrInput
	// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
	NeighborGroups BgpNeighborGroupArrayInput
	// BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
	NeighborRange6s BgpNeighborRange6ArrayInput
	// BGP neighbor range table. The structure of `neighborRange` block is documented below.
	NeighborRanges BgpNeighborRangeArrayInput
	// BGP neighbor table. The structure of `neighbor` block is documented below.
	Neighbors BgpNeighborArrayInput
	// BGP IPv6 network table. The structure of `network6` block is documented below.
	Network6s BgpNetwork6ArrayInput
	// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
	NetworkImportCheck pulumi.StringPtrInput
	// BGP network table. The structure of `network` block is documented below.
	Networks BgpNetworkArrayInput
	// Enable/disable priority inheritance for recursive resolution. Valid values: `enable`, `disable`.
	RecursiveInheritPriority pulumi.StringPtrInput
	// Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
	RecursiveNextHop pulumi.StringPtrInput
	// BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
	Redistribute6s BgpRedistribute6ArrayInput
	// BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
	Redistributes BgpRedistributeArrayInput
	// Router ID.
	RouterId pulumi.StringPtrInput
	// Background scanner interval (sec), 0 to disable it.
	ScanTime pulumi.IntPtrInput
	// Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
	Synchronization pulumi.StringPtrInput
	// Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
	TagResolveMode pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// BGP IPv6 VRF leaking table. The structure of `vrf6` block is documented below.
	Vrf6s BgpVrf6ArrayInput
	// BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
	VrfLeak6s BgpVrfLeak6ArrayInput
	// BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
	VrfLeaks BgpVrfLeakArrayInput
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrves BgpVrfArrayInput
}

func (BgpState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpState)(nil)).Elem()
}

type bgpArgs struct {
	// Enable/disable selection of BGP IPv4 additional paths. Valid values: `enable`, `disable`.
	AdditionalPath *string `pulumi:"additionalPath"`
	// Enable/disable selection of BGP IPv6 additional paths. Valid values: `enable`, `disable`.
	AdditionalPath6 *string `pulumi:"additionalPath6"`
	// Number of additional paths to be selected for each IPv4 NLRI.
	AdditionalPathSelect *int `pulumi:"additionalPathSelect"`
	// Number of additional paths to be selected for each IPv6 NLRI.
	AdditionalPathSelect6 *int `pulumi:"additionalPathSelect6"`
	// Number of additional paths to be selected for each VPNv4 NLRI.
	AdditionalPathSelectVpnv4 *int `pulumi:"additionalPathSelectVpnv4"`
	// Number of additional paths to be selected for each VPNv6 NLRI.
	AdditionalPathSelectVpnv6 *int `pulumi:"additionalPathSelectVpnv6"`
	// Enable/disable selection of BGP VPNv4 additional paths. Valid values: `enable`, `disable`.
	AdditionalPathVpnv4 *string `pulumi:"additionalPathVpnv4"`
	// Enable/disable selection of BGP VPNv6 additional paths. Valid values: `enable`, `disable`.
	AdditionalPathVpnv6 *string `pulumi:"additionalPathVpnv6"`
	// Administrative distance modifications. The structure of `adminDistance` block is documented below.
	AdminDistances []BgpAdminDistance `pulumi:"adminDistances"`
	// BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
	AggregateAddress6s []BgpAggregateAddress6 `pulumi:"aggregateAddress6s"`
	// BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses []BgpAggregateAddress `pulumi:"aggregateAddresses"`
	// Enable/disable always compare MED. Valid values: `enable`, `disable`.
	AlwaysCompareMed *string `pulumi:"alwaysCompareMed"`
	// Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
	As int `pulumi:"as"`
	// Router AS number, asplain/asdot/asdot+ format, 0 to disable BGP.
	AsString *string `pulumi:"asString"`
	// Enable/disable ignore AS path. Valid values: `enable`, `disable`.
	BestpathAsPathIgnore *string `pulumi:"bestpathAsPathIgnore"`
	// Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
	BestpathCmpConfedAspath *string `pulumi:"bestpathCmpConfedAspath"`
	// Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
	BestpathCmpRouterid *string `pulumi:"bestpathCmpRouterid"`
	// Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
	BestpathMedConfed *string `pulumi:"bestpathMedConfed"`
	// Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
	BestpathMedMissingAsWorst *string `pulumi:"bestpathMedMissingAsWorst"`
	// Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
	ClientToClientReflection *string `pulumi:"clientToClientReflection"`
	// Route reflector cluster ID.
	ClusterId *string `pulumi:"clusterId"`
	// Confederation identifier.
	ConfederationIdentifier *int `pulumi:"confederationIdentifier"`
	// Confederation peers. The structure of `confederationPeers` block is documented below.
	ConfederationPeers []BgpConfederationPeer `pulumi:"confederationPeers"`
	// Enable/disable cross address family conditional advertisement. Valid values: `enable`, `disable`.
	CrossFamilyConditionalAdv *string `pulumi:"crossFamilyConditionalAdv"`
	// Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
	Dampening *string `pulumi:"dampening"`
	// Maximum minutes a route can be suppressed.
	DampeningMaxSuppressTime *int `pulumi:"dampeningMaxSuppressTime"`
	// Reachability half-life time for penalty (min).
	DampeningReachabilityHalfLife *int `pulumi:"dampeningReachabilityHalfLife"`
	// Threshold to reuse routes.
	DampeningReuse *int `pulumi:"dampeningReuse"`
	// Criteria for dampening.
	DampeningRouteMap *string `pulumi:"dampeningRouteMap"`
	// Threshold to suppress routes.
	DampeningSuppress *int `pulumi:"dampeningSuppress"`
	// Unreachability half-life time for penalty (min).
	DampeningUnreachabilityHalfLife *int `pulumi:"dampeningUnreachabilityHalfLife"`
	// Default local preference.
	DefaultLocalPreference *int `pulumi:"defaultLocalPreference"`
	// Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
	DeterministicMed *string `pulumi:"deterministicMed"`
	// Distance for routes external to the AS.
	DistanceExternal *int `pulumi:"distanceExternal"`
	// Distance for routes internal to the AS.
	DistanceInternal *int `pulumi:"distanceInternal"`
	// Distance for routes local to the AS.
	DistanceLocal *int `pulumi:"distanceLocal"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
	EbgpMultipath *string `pulumi:"ebgpMultipath"`
	// Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
	EnforceFirstAs *string `pulumi:"enforceFirstAs"`
	// Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
	FastExternalFailover *string `pulumi:"fastExternalFailover"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
	GracefulEndOnTimer *string `pulumi:"gracefulEndOnTimer"`
	// Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
	GracefulRestart *string `pulumi:"gracefulRestart"`
	// Time needed for neighbors to restart (sec).
	GracefulRestartTime *int `pulumi:"gracefulRestartTime"`
	// Time to hold stale paths of restarting neighbor (sec).
	GracefulStalepathTime *int `pulumi:"gracefulStalepathTime"`
	// Route advertisement/selection delay after restart (sec).
	GracefulUpdateDelay *int `pulumi:"gracefulUpdateDelay"`
	// Number of seconds to mark peer as dead.
	HoldtimeTimer *int `pulumi:"holdtimeTimer"`
	// Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
	IbgpMultipath *string `pulumi:"ibgpMultipath"`
	// Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
	IgnoreOptionalCapability *string `pulumi:"ignoreOptionalCapability"`
	// Frequency to send keep alive requests.
	KeepaliveTimer *int `pulumi:"keepaliveTimer"`
	// Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges *string `pulumi:"logNeighbourChanges"`
	// Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
	MultipathRecursiveDistance *string `pulumi:"multipathRecursiveDistance"`
	// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
	NeighborGroups []BgpNeighborGroup `pulumi:"neighborGroups"`
	// BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
	NeighborRange6s []BgpNeighborRange6 `pulumi:"neighborRange6s"`
	// BGP neighbor range table. The structure of `neighborRange` block is documented below.
	NeighborRanges []BgpNeighborRange `pulumi:"neighborRanges"`
	// BGP neighbor table. The structure of `neighbor` block is documented below.
	Neighbors []BgpNeighbor `pulumi:"neighbors"`
	// BGP IPv6 network table. The structure of `network6` block is documented below.
	Network6s []BgpNetwork6 `pulumi:"network6s"`
	// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
	NetworkImportCheck *string `pulumi:"networkImportCheck"`
	// BGP network table. The structure of `network` block is documented below.
	Networks []BgpNetwork `pulumi:"networks"`
	// Enable/disable priority inheritance for recursive resolution. Valid values: `enable`, `disable`.
	RecursiveInheritPriority *string `pulumi:"recursiveInheritPriority"`
	// Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
	RecursiveNextHop *string `pulumi:"recursiveNextHop"`
	// BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
	Redistribute6s []BgpRedistribute6 `pulumi:"redistribute6s"`
	// BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
	Redistributes []BgpRedistribute `pulumi:"redistributes"`
	// Router ID.
	RouterId *string `pulumi:"routerId"`
	// Background scanner interval (sec), 0 to disable it.
	ScanTime *int `pulumi:"scanTime"`
	// Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
	Synchronization *string `pulumi:"synchronization"`
	// Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
	TagResolveMode *string `pulumi:"tagResolveMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// BGP IPv6 VRF leaking table. The structure of `vrf6` block is documented below.
	Vrf6s []BgpVrf6 `pulumi:"vrf6s"`
	// BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
	VrfLeak6s []BgpVrfLeak6 `pulumi:"vrfLeak6s"`
	// BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
	VrfLeaks []BgpVrfLeak `pulumi:"vrfLeaks"`
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrves []BgpVrf `pulumi:"vrves"`
}

// The set of arguments for constructing a Bgp resource.
type BgpArgs struct {
	// Enable/disable selection of BGP IPv4 additional paths. Valid values: `enable`, `disable`.
	AdditionalPath pulumi.StringPtrInput
	// Enable/disable selection of BGP IPv6 additional paths. Valid values: `enable`, `disable`.
	AdditionalPath6 pulumi.StringPtrInput
	// Number of additional paths to be selected for each IPv4 NLRI.
	AdditionalPathSelect pulumi.IntPtrInput
	// Number of additional paths to be selected for each IPv6 NLRI.
	AdditionalPathSelect6 pulumi.IntPtrInput
	// Number of additional paths to be selected for each VPNv4 NLRI.
	AdditionalPathSelectVpnv4 pulumi.IntPtrInput
	// Number of additional paths to be selected for each VPNv6 NLRI.
	AdditionalPathSelectVpnv6 pulumi.IntPtrInput
	// Enable/disable selection of BGP VPNv4 additional paths. Valid values: `enable`, `disable`.
	AdditionalPathVpnv4 pulumi.StringPtrInput
	// Enable/disable selection of BGP VPNv6 additional paths. Valid values: `enable`, `disable`.
	AdditionalPathVpnv6 pulumi.StringPtrInput
	// Administrative distance modifications. The structure of `adminDistance` block is documented below.
	AdminDistances BgpAdminDistanceArrayInput
	// BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
	AggregateAddress6s BgpAggregateAddress6ArrayInput
	// BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses BgpAggregateAddressArrayInput
	// Enable/disable always compare MED. Valid values: `enable`, `disable`.
	AlwaysCompareMed pulumi.StringPtrInput
	// Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
	As pulumi.IntInput
	// Router AS number, asplain/asdot/asdot+ format, 0 to disable BGP.
	AsString pulumi.StringPtrInput
	// Enable/disable ignore AS path. Valid values: `enable`, `disable`.
	BestpathAsPathIgnore pulumi.StringPtrInput
	// Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
	BestpathCmpConfedAspath pulumi.StringPtrInput
	// Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
	BestpathCmpRouterid pulumi.StringPtrInput
	// Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
	BestpathMedConfed pulumi.StringPtrInput
	// Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
	BestpathMedMissingAsWorst pulumi.StringPtrInput
	// Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
	ClientToClientReflection pulumi.StringPtrInput
	// Route reflector cluster ID.
	ClusterId pulumi.StringPtrInput
	// Confederation identifier.
	ConfederationIdentifier pulumi.IntPtrInput
	// Confederation peers. The structure of `confederationPeers` block is documented below.
	ConfederationPeers BgpConfederationPeerArrayInput
	// Enable/disable cross address family conditional advertisement. Valid values: `enable`, `disable`.
	CrossFamilyConditionalAdv pulumi.StringPtrInput
	// Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
	Dampening pulumi.StringPtrInput
	// Maximum minutes a route can be suppressed.
	DampeningMaxSuppressTime pulumi.IntPtrInput
	// Reachability half-life time for penalty (min).
	DampeningReachabilityHalfLife pulumi.IntPtrInput
	// Threshold to reuse routes.
	DampeningReuse pulumi.IntPtrInput
	// Criteria for dampening.
	DampeningRouteMap pulumi.StringPtrInput
	// Threshold to suppress routes.
	DampeningSuppress pulumi.IntPtrInput
	// Unreachability half-life time for penalty (min).
	DampeningUnreachabilityHalfLife pulumi.IntPtrInput
	// Default local preference.
	DefaultLocalPreference pulumi.IntPtrInput
	// Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
	DeterministicMed pulumi.StringPtrInput
	// Distance for routes external to the AS.
	DistanceExternal pulumi.IntPtrInput
	// Distance for routes internal to the AS.
	DistanceInternal pulumi.IntPtrInput
	// Distance for routes local to the AS.
	DistanceLocal pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
	EbgpMultipath pulumi.StringPtrInput
	// Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
	EnforceFirstAs pulumi.StringPtrInput
	// Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
	FastExternalFailover pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
	GracefulEndOnTimer pulumi.StringPtrInput
	// Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
	GracefulRestart pulumi.StringPtrInput
	// Time needed for neighbors to restart (sec).
	GracefulRestartTime pulumi.IntPtrInput
	// Time to hold stale paths of restarting neighbor (sec).
	GracefulStalepathTime pulumi.IntPtrInput
	// Route advertisement/selection delay after restart (sec).
	GracefulUpdateDelay pulumi.IntPtrInput
	// Number of seconds to mark peer as dead.
	HoldtimeTimer pulumi.IntPtrInput
	// Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
	IbgpMultipath pulumi.StringPtrInput
	// Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
	IgnoreOptionalCapability pulumi.StringPtrInput
	// Frequency to send keep alive requests.
	KeepaliveTimer pulumi.IntPtrInput
	// Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringPtrInput
	// Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
	MultipathRecursiveDistance pulumi.StringPtrInput
	// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
	NeighborGroups BgpNeighborGroupArrayInput
	// BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
	NeighborRange6s BgpNeighborRange6ArrayInput
	// BGP neighbor range table. The structure of `neighborRange` block is documented below.
	NeighborRanges BgpNeighborRangeArrayInput
	// BGP neighbor table. The structure of `neighbor` block is documented below.
	Neighbors BgpNeighborArrayInput
	// BGP IPv6 network table. The structure of `network6` block is documented below.
	Network6s BgpNetwork6ArrayInput
	// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
	NetworkImportCheck pulumi.StringPtrInput
	// BGP network table. The structure of `network` block is documented below.
	Networks BgpNetworkArrayInput
	// Enable/disable priority inheritance for recursive resolution. Valid values: `enable`, `disable`.
	RecursiveInheritPriority pulumi.StringPtrInput
	// Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
	RecursiveNextHop pulumi.StringPtrInput
	// BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
	Redistribute6s BgpRedistribute6ArrayInput
	// BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
	Redistributes BgpRedistributeArrayInput
	// Router ID.
	RouterId pulumi.StringPtrInput
	// Background scanner interval (sec), 0 to disable it.
	ScanTime pulumi.IntPtrInput
	// Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
	Synchronization pulumi.StringPtrInput
	// Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
	TagResolveMode pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// BGP IPv6 VRF leaking table. The structure of `vrf6` block is documented below.
	Vrf6s BgpVrf6ArrayInput
	// BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
	VrfLeak6s BgpVrfLeak6ArrayInput
	// BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
	VrfLeaks BgpVrfLeakArrayInput
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrves BgpVrfArrayInput
}

func (BgpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpArgs)(nil)).Elem()
}

type BgpInput interface {
	pulumi.Input

	ToBgpOutput() BgpOutput
	ToBgpOutputWithContext(ctx context.Context) BgpOutput
}

func (*Bgp) ElementType() reflect.Type {
	return reflect.TypeOf((**Bgp)(nil)).Elem()
}

func (i *Bgp) ToBgpOutput() BgpOutput {
	return i.ToBgpOutputWithContext(context.Background())
}

func (i *Bgp) ToBgpOutputWithContext(ctx context.Context) BgpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpOutput)
}

// BgpArrayInput is an input type that accepts BgpArray and BgpArrayOutput values.
// You can construct a concrete instance of `BgpArrayInput` via:
//
//	BgpArray{ BgpArgs{...} }
type BgpArrayInput interface {
	pulumi.Input

	ToBgpArrayOutput() BgpArrayOutput
	ToBgpArrayOutputWithContext(context.Context) BgpArrayOutput
}

type BgpArray []BgpInput

func (BgpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bgp)(nil)).Elem()
}

func (i BgpArray) ToBgpArrayOutput() BgpArrayOutput {
	return i.ToBgpArrayOutputWithContext(context.Background())
}

func (i BgpArray) ToBgpArrayOutputWithContext(ctx context.Context) BgpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpArrayOutput)
}

// BgpMapInput is an input type that accepts BgpMap and BgpMapOutput values.
// You can construct a concrete instance of `BgpMapInput` via:
//
//	BgpMap{ "key": BgpArgs{...} }
type BgpMapInput interface {
	pulumi.Input

	ToBgpMapOutput() BgpMapOutput
	ToBgpMapOutputWithContext(context.Context) BgpMapOutput
}

type BgpMap map[string]BgpInput

func (BgpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bgp)(nil)).Elem()
}

func (i BgpMap) ToBgpMapOutput() BgpMapOutput {
	return i.ToBgpMapOutputWithContext(context.Background())
}

func (i BgpMap) ToBgpMapOutputWithContext(ctx context.Context) BgpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpMapOutput)
}

type BgpOutput struct{ *pulumi.OutputState }

func (BgpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Bgp)(nil)).Elem()
}

func (o BgpOutput) ToBgpOutput() BgpOutput {
	return o
}

func (o BgpOutput) ToBgpOutputWithContext(ctx context.Context) BgpOutput {
	return o
}

// Enable/disable selection of BGP IPv4 additional paths. Valid values: `enable`, `disable`.
func (o BgpOutput) AdditionalPath() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.AdditionalPath }).(pulumi.StringOutput)
}

// Enable/disable selection of BGP IPv6 additional paths. Valid values: `enable`, `disable`.
func (o BgpOutput) AdditionalPath6() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.AdditionalPath6 }).(pulumi.StringOutput)
}

// Number of additional paths to be selected for each IPv4 NLRI.
func (o BgpOutput) AdditionalPathSelect() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.AdditionalPathSelect }).(pulumi.IntOutput)
}

// Number of additional paths to be selected for each IPv6 NLRI.
func (o BgpOutput) AdditionalPathSelect6() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.AdditionalPathSelect6 }).(pulumi.IntOutput)
}

// Number of additional paths to be selected for each VPNv4 NLRI.
func (o BgpOutput) AdditionalPathSelectVpnv4() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.AdditionalPathSelectVpnv4 }).(pulumi.IntOutput)
}

// Number of additional paths to be selected for each VPNv6 NLRI.
func (o BgpOutput) AdditionalPathSelectVpnv6() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.AdditionalPathSelectVpnv6 }).(pulumi.IntOutput)
}

// Enable/disable selection of BGP VPNv4 additional paths. Valid values: `enable`, `disable`.
func (o BgpOutput) AdditionalPathVpnv4() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.AdditionalPathVpnv4 }).(pulumi.StringOutput)
}

// Enable/disable selection of BGP VPNv6 additional paths. Valid values: `enable`, `disable`.
func (o BgpOutput) AdditionalPathVpnv6() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.AdditionalPathVpnv6 }).(pulumi.StringOutput)
}

// Administrative distance modifications. The structure of `adminDistance` block is documented below.
func (o BgpOutput) AdminDistances() BgpAdminDistanceArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpAdminDistanceArrayOutput { return v.AdminDistances }).(BgpAdminDistanceArrayOutput)
}

// BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
func (o BgpOutput) AggregateAddress6s() BgpAggregateAddress6ArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpAggregateAddress6ArrayOutput { return v.AggregateAddress6s }).(BgpAggregateAddress6ArrayOutput)
}

// BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
func (o BgpOutput) AggregateAddresses() BgpAggregateAddressArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpAggregateAddressArrayOutput { return v.AggregateAddresses }).(BgpAggregateAddressArrayOutput)
}

// Enable/disable always compare MED. Valid values: `enable`, `disable`.
func (o BgpOutput) AlwaysCompareMed() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.AlwaysCompareMed }).(pulumi.StringOutput)
}

// Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
func (o BgpOutput) As() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.As }).(pulumi.IntOutput)
}

// Router AS number, asplain/asdot/asdot+ format, 0 to disable BGP.
func (o BgpOutput) AsString() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.AsString }).(pulumi.StringOutput)
}

// Enable/disable ignore AS path. Valid values: `enable`, `disable`.
func (o BgpOutput) BestpathAsPathIgnore() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.BestpathAsPathIgnore }).(pulumi.StringOutput)
}

// Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
func (o BgpOutput) BestpathCmpConfedAspath() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.BestpathCmpConfedAspath }).(pulumi.StringOutput)
}

// Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
func (o BgpOutput) BestpathCmpRouterid() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.BestpathCmpRouterid }).(pulumi.StringOutput)
}

// Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
func (o BgpOutput) BestpathMedConfed() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.BestpathMedConfed }).(pulumi.StringOutput)
}

// Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
func (o BgpOutput) BestpathMedMissingAsWorst() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.BestpathMedMissingAsWorst }).(pulumi.StringOutput)
}

// Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
func (o BgpOutput) ClientToClientReflection() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.ClientToClientReflection }).(pulumi.StringOutput)
}

// Route reflector cluster ID.
func (o BgpOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Confederation identifier.
func (o BgpOutput) ConfederationIdentifier() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.ConfederationIdentifier }).(pulumi.IntOutput)
}

// Confederation peers. The structure of `confederationPeers` block is documented below.
func (o BgpOutput) ConfederationPeers() BgpConfederationPeerArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpConfederationPeerArrayOutput { return v.ConfederationPeers }).(BgpConfederationPeerArrayOutput)
}

// Enable/disable cross address family conditional advertisement. Valid values: `enable`, `disable`.
func (o BgpOutput) CrossFamilyConditionalAdv() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.CrossFamilyConditionalAdv }).(pulumi.StringOutput)
}

// Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
func (o BgpOutput) Dampening() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.Dampening }).(pulumi.StringOutput)
}

// Maximum minutes a route can be suppressed.
func (o BgpOutput) DampeningMaxSuppressTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.DampeningMaxSuppressTime }).(pulumi.IntOutput)
}

// Reachability half-life time for penalty (min).
func (o BgpOutput) DampeningReachabilityHalfLife() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.DampeningReachabilityHalfLife }).(pulumi.IntOutput)
}

// Threshold to reuse routes.
func (o BgpOutput) DampeningReuse() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.DampeningReuse }).(pulumi.IntOutput)
}

// Criteria for dampening.
func (o BgpOutput) DampeningRouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.DampeningRouteMap }).(pulumi.StringOutput)
}

// Threshold to suppress routes.
func (o BgpOutput) DampeningSuppress() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.DampeningSuppress }).(pulumi.IntOutput)
}

// Unreachability half-life time for penalty (min).
func (o BgpOutput) DampeningUnreachabilityHalfLife() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.DampeningUnreachabilityHalfLife }).(pulumi.IntOutput)
}

// Default local preference.
func (o BgpOutput) DefaultLocalPreference() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.DefaultLocalPreference }).(pulumi.IntOutput)
}

// Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
func (o BgpOutput) DeterministicMed() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.DeterministicMed }).(pulumi.StringOutput)
}

// Distance for routes external to the AS.
func (o BgpOutput) DistanceExternal() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.DistanceExternal }).(pulumi.IntOutput)
}

// Distance for routes internal to the AS.
func (o BgpOutput) DistanceInternal() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.DistanceInternal }).(pulumi.IntOutput)
}

// Distance for routes local to the AS.
func (o BgpOutput) DistanceLocal() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.DistanceLocal }).(pulumi.IntOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o BgpOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
func (o BgpOutput) EbgpMultipath() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.EbgpMultipath }).(pulumi.StringOutput)
}

// Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
func (o BgpOutput) EnforceFirstAs() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.EnforceFirstAs }).(pulumi.StringOutput)
}

// Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
func (o BgpOutput) FastExternalFailover() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.FastExternalFailover }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o BgpOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
func (o BgpOutput) GracefulEndOnTimer() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.GracefulEndOnTimer }).(pulumi.StringOutput)
}

// Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
func (o BgpOutput) GracefulRestart() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.GracefulRestart }).(pulumi.StringOutput)
}

// Time needed for neighbors to restart (sec).
func (o BgpOutput) GracefulRestartTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.GracefulRestartTime }).(pulumi.IntOutput)
}

// Time to hold stale paths of restarting neighbor (sec).
func (o BgpOutput) GracefulStalepathTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.GracefulStalepathTime }).(pulumi.IntOutput)
}

// Route advertisement/selection delay after restart (sec).
func (o BgpOutput) GracefulUpdateDelay() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.GracefulUpdateDelay }).(pulumi.IntOutput)
}

// Number of seconds to mark peer as dead.
func (o BgpOutput) HoldtimeTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.HoldtimeTimer }).(pulumi.IntOutput)
}

// Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
func (o BgpOutput) IbgpMultipath() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.IbgpMultipath }).(pulumi.StringOutput)
}

// Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
func (o BgpOutput) IgnoreOptionalCapability() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.IgnoreOptionalCapability }).(pulumi.StringOutput)
}

// Frequency to send keep alive requests.
func (o BgpOutput) KeepaliveTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.KeepaliveTimer }).(pulumi.IntOutput)
}

// Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
func (o BgpOutput) LogNeighbourChanges() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.LogNeighbourChanges }).(pulumi.StringOutput)
}

// Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
func (o BgpOutput) MultipathRecursiveDistance() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.MultipathRecursiveDistance }).(pulumi.StringOutput)
}

// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
func (o BgpOutput) NeighborGroups() BgpNeighborGroupArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpNeighborGroupArrayOutput { return v.NeighborGroups }).(BgpNeighborGroupArrayOutput)
}

// BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
func (o BgpOutput) NeighborRange6s() BgpNeighborRange6ArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpNeighborRange6ArrayOutput { return v.NeighborRange6s }).(BgpNeighborRange6ArrayOutput)
}

// BGP neighbor range table. The structure of `neighborRange` block is documented below.
func (o BgpOutput) NeighborRanges() BgpNeighborRangeArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpNeighborRangeArrayOutput { return v.NeighborRanges }).(BgpNeighborRangeArrayOutput)
}

// BGP neighbor table. The structure of `neighbor` block is documented below.
func (o BgpOutput) Neighbors() BgpNeighborArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpNeighborArrayOutput { return v.Neighbors }).(BgpNeighborArrayOutput)
}

// BGP IPv6 network table. The structure of `network6` block is documented below.
func (o BgpOutput) Network6s() BgpNetwork6ArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpNetwork6ArrayOutput { return v.Network6s }).(BgpNetwork6ArrayOutput)
}

// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
func (o BgpOutput) NetworkImportCheck() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.NetworkImportCheck }).(pulumi.StringOutput)
}

// BGP network table. The structure of `network` block is documented below.
func (o BgpOutput) Networks() BgpNetworkArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpNetworkArrayOutput { return v.Networks }).(BgpNetworkArrayOutput)
}

// Enable/disable priority inheritance for recursive resolution. Valid values: `enable`, `disable`.
func (o BgpOutput) RecursiveInheritPriority() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.RecursiveInheritPriority }).(pulumi.StringOutput)
}

// Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
func (o BgpOutput) RecursiveNextHop() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.RecursiveNextHop }).(pulumi.StringOutput)
}

// BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
func (o BgpOutput) Redistribute6s() BgpRedistribute6ArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpRedistribute6ArrayOutput { return v.Redistribute6s }).(BgpRedistribute6ArrayOutput)
}

// BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
func (o BgpOutput) Redistributes() BgpRedistributeArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpRedistributeArrayOutput { return v.Redistributes }).(BgpRedistributeArrayOutput)
}

// Router ID.
func (o BgpOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.RouterId }).(pulumi.StringOutput)
}

// Background scanner interval (sec), 0 to disable it.
func (o BgpOutput) ScanTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Bgp) pulumi.IntOutput { return v.ScanTime }).(pulumi.IntOutput)
}

// Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
func (o BgpOutput) Synchronization() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.Synchronization }).(pulumi.StringOutput)
}

// Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
func (o BgpOutput) TagResolveMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringOutput { return v.TagResolveMode }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o BgpOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bgp) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// BGP IPv6 VRF leaking table. The structure of `vrf6` block is documented below.
func (o BgpOutput) Vrf6s() BgpVrf6ArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpVrf6ArrayOutput { return v.Vrf6s }).(BgpVrf6ArrayOutput)
}

// BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
func (o BgpOutput) VrfLeak6s() BgpVrfLeak6ArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpVrfLeak6ArrayOutput { return v.VrfLeak6s }).(BgpVrfLeak6ArrayOutput)
}

// BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
func (o BgpOutput) VrfLeaks() BgpVrfLeakArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpVrfLeakArrayOutput { return v.VrfLeaks }).(BgpVrfLeakArrayOutput)
}

// BGP VRF leaking table. The structure of `vrf` block is documented below.
func (o BgpOutput) Vrves() BgpVrfArrayOutput {
	return o.ApplyT(func(v *Bgp) BgpVrfArrayOutput { return v.Vrves }).(BgpVrfArrayOutput)
}

type BgpArrayOutput struct{ *pulumi.OutputState }

func (BgpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bgp)(nil)).Elem()
}

func (o BgpArrayOutput) ToBgpArrayOutput() BgpArrayOutput {
	return o
}

func (o BgpArrayOutput) ToBgpArrayOutputWithContext(ctx context.Context) BgpArrayOutput {
	return o
}

func (o BgpArrayOutput) Index(i pulumi.IntInput) BgpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Bgp {
		return vs[0].([]*Bgp)[vs[1].(int)]
	}).(BgpOutput)
}

type BgpMapOutput struct{ *pulumi.OutputState }

func (BgpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bgp)(nil)).Elem()
}

func (o BgpMapOutput) ToBgpMapOutput() BgpMapOutput {
	return o
}

func (o BgpMapOutput) ToBgpMapOutputWithContext(ctx context.Context) BgpMapOutput {
	return o
}

func (o BgpMapOutput) MapIndex(k pulumi.StringInput) BgpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Bgp {
		return vs[0].(map[string]*Bgp)[vs[1].(string)]
	}).(BgpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpInput)(nil)).Elem(), &Bgp{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpArrayInput)(nil)).Elem(), BgpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpMapInput)(nil)).Elem(), BgpMap{})
	pulumi.RegisterOutputType(BgpOutput{})
	pulumi.RegisterOutputType(BgpArrayOutput{})
	pulumi.RegisterOutputType(BgpMapOutput{})
}
