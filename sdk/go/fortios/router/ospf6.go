// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package router

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure IPv6 OSPF.
//
// > The provider supports the definition of Ospf6-Interface in Router Ospf6 `router.Ospf6`, and also allows the definition of separate Ospf6-Interface resources `router/ospf6.Ospf6interface`, but do not use a `router.Ospf6` with in-line Ospf6-Interface in conjunction with any `router/ospf6.Ospf6interface` resources, otherwise conflicts and overwrite will occur.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := router.NewOspf6(ctx, "trname", &router.Ospf6Args{
//				AbrType:                      pulumi.String("standard"),
//				AutoCostRefBandwidth:         pulumi.Int(1000),
//				Bfd:                          pulumi.String("disable"),
//				DefaultInformationMetric:     pulumi.Int(10),
//				DefaultInformationMetricType: pulumi.String("2"),
//				DefaultInformationOriginate:  pulumi.String("disable"),
//				DefaultMetric:                pulumi.Int(10),
//				LogNeighbourChanges:          pulumi.String("enable"),
//				Redistributes: router.Ospf6RedistributeArray{
//					&router.Ospf6RedistributeArgs{
//						Metric:     pulumi.Int(0),
//						MetricType: pulumi.String("2"),
//						Name:       pulumi.String("connected"),
//						Status:     pulumi.String("disable"),
//					},
//					&router.Ospf6RedistributeArgs{
//						Metric:     pulumi.Int(0),
//						MetricType: pulumi.String("2"),
//						Name:       pulumi.String("static"),
//						Status:     pulumi.String("disable"),
//					},
//					&router.Ospf6RedistributeArgs{
//						Metric:     pulumi.Int(0),
//						MetricType: pulumi.String("2"),
//						Name:       pulumi.String("rip"),
//						Status:     pulumi.String("disable"),
//					},
//					&router.Ospf6RedistributeArgs{
//						Metric:     pulumi.Int(0),
//						MetricType: pulumi.String("2"),
//						Name:       pulumi.String("bgp"),
//						Status:     pulumi.String("disable"),
//					},
//					&router.Ospf6RedistributeArgs{
//						Metric:     pulumi.Int(0),
//						MetricType: pulumi.String("2"),
//						Name:       pulumi.String("isis"),
//						Status:     pulumi.String("disable"),
//					},
//				},
//				RouterId:  pulumi.String("0.0.0.0"),
//				SpfTimers: pulumi.String("5 10"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Router Ospf6 can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:router/ospf6:Ospf6 labelname RouterOspf6
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:router/ospf6:Ospf6 labelname RouterOspf6
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Ospf6 struct {
	pulumi.CustomResourceState

	// Area border router type. Valid values: `cisco`, `ibm`, `standard`.
	AbrType pulumi.StringOutput `pulumi:"abrType"`
	// OSPF6 area configuration. The structure of `area` block is documented below.
	Areas Ospf6AreaArrayOutput `pulumi:"areas"`
	// Reference bandwidth in terms of megabits per second.
	AutoCostRefBandwidth pulumi.IntOutput `pulumi:"autoCostRefBandwidth"`
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd pulumi.StringOutput `pulumi:"bfd"`
	// Default information metric.
	DefaultInformationMetric pulumi.IntOutput `pulumi:"defaultInformationMetric"`
	// Default information metric type. Valid values: `1`, `2`.
	DefaultInformationMetricType pulumi.StringOutput `pulumi:"defaultInformationMetricType"`
	// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
	DefaultInformationOriginate pulumi.StringOutput `pulumi:"defaultInformationOriginate"`
	// Default information route map.
	DefaultInformationRouteMap pulumi.StringOutput `pulumi:"defaultInformationRouteMap"`
	// Default metric of redistribute routes.
	DefaultMetric pulumi.IntOutput `pulumi:"defaultMetric"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Enable logging of OSPFv3 neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringOutput `pulumi:"logNeighbourChanges"`
	// OSPF6 interface configuration. The structure of `ospf6Interface` block is documented below.
	Ospf6Interfaces Ospf6Ospf6InterfaceArrayOutput `pulumi:"ospf6Interfaces"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces Ospf6PassiveInterfaceArrayOutput `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes Ospf6RedistributeArrayOutput `pulumi:"redistributes"`
	// OSPFv3 restart mode (graceful or none). Valid values: `none`, `graceful-restart`.
	RestartMode pulumi.StringOutput `pulumi:"restartMode"`
	// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
	RestartOnTopologyChange pulumi.StringOutput `pulumi:"restartOnTopologyChange"`
	// Graceful restart period in seconds.
	RestartPeriod pulumi.IntOutput `pulumi:"restartPeriod"`
	// A.B.C.D, in IPv4 address format.
	RouterId pulumi.StringOutput `pulumi:"routerId"`
	// SPF calculation frequency.
	SpfTimers pulumi.StringOutput `pulumi:"spfTimers"`
	// IPv6 address summary configuration. The structure of `summaryAddress` block is documented below.
	SummaryAddresses Ospf6SummaryAddressArrayOutput `pulumi:"summaryAddresses"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewOspf6 registers a new resource with the given unique name, arguments, and options.
func NewOspf6(ctx *pulumi.Context,
	name string, args *Ospf6Args, opts ...pulumi.ResourceOption) (*Ospf6, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RouterId == nil {
		return nil, errors.New("invalid value for required argument 'RouterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ospf6
	err := ctx.RegisterResource("fortios:router/ospf6:Ospf6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOspf6 gets an existing Ospf6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOspf6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ospf6State, opts ...pulumi.ResourceOption) (*Ospf6, error) {
	var resource Ospf6
	err := ctx.ReadResource("fortios:router/ospf6:Ospf6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ospf6 resources.
type ospf6State struct {
	// Area border router type. Valid values: `cisco`, `ibm`, `standard`.
	AbrType *string `pulumi:"abrType"`
	// OSPF6 area configuration. The structure of `area` block is documented below.
	Areas []Ospf6Area `pulumi:"areas"`
	// Reference bandwidth in terms of megabits per second.
	AutoCostRefBandwidth *int `pulumi:"autoCostRefBandwidth"`
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Default information metric.
	DefaultInformationMetric *int `pulumi:"defaultInformationMetric"`
	// Default information metric type. Valid values: `1`, `2`.
	DefaultInformationMetricType *string `pulumi:"defaultInformationMetricType"`
	// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
	DefaultInformationOriginate *string `pulumi:"defaultInformationOriginate"`
	// Default information route map.
	DefaultInformationRouteMap *string `pulumi:"defaultInformationRouteMap"`
	// Default metric of redistribute routes.
	DefaultMetric *int `pulumi:"defaultMetric"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable logging of OSPFv3 neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges *string `pulumi:"logNeighbourChanges"`
	// OSPF6 interface configuration. The structure of `ospf6Interface` block is documented below.
	Ospf6Interfaces []Ospf6Ospf6Interface `pulumi:"ospf6Interfaces"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces []Ospf6PassiveInterface `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes []Ospf6Redistribute `pulumi:"redistributes"`
	// OSPFv3 restart mode (graceful or none). Valid values: `none`, `graceful-restart`.
	RestartMode *string `pulumi:"restartMode"`
	// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
	RestartOnTopologyChange *string `pulumi:"restartOnTopologyChange"`
	// Graceful restart period in seconds.
	RestartPeriod *int `pulumi:"restartPeriod"`
	// A.B.C.D, in IPv4 address format.
	RouterId *string `pulumi:"routerId"`
	// SPF calculation frequency.
	SpfTimers *string `pulumi:"spfTimers"`
	// IPv6 address summary configuration. The structure of `summaryAddress` block is documented below.
	SummaryAddresses []Ospf6SummaryAddress `pulumi:"summaryAddresses"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Ospf6State struct {
	// Area border router type. Valid values: `cisco`, `ibm`, `standard`.
	AbrType pulumi.StringPtrInput
	// OSPF6 area configuration. The structure of `area` block is documented below.
	Areas Ospf6AreaArrayInput
	// Reference bandwidth in terms of megabits per second.
	AutoCostRefBandwidth pulumi.IntPtrInput
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput
	// Default information metric.
	DefaultInformationMetric pulumi.IntPtrInput
	// Default information metric type. Valid values: `1`, `2`.
	DefaultInformationMetricType pulumi.StringPtrInput
	// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
	DefaultInformationOriginate pulumi.StringPtrInput
	// Default information route map.
	DefaultInformationRouteMap pulumi.StringPtrInput
	// Default metric of redistribute routes.
	DefaultMetric pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable logging of OSPFv3 neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringPtrInput
	// OSPF6 interface configuration. The structure of `ospf6Interface` block is documented below.
	Ospf6Interfaces Ospf6Ospf6InterfaceArrayInput
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces Ospf6PassiveInterfaceArrayInput
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes Ospf6RedistributeArrayInput
	// OSPFv3 restart mode (graceful or none). Valid values: `none`, `graceful-restart`.
	RestartMode pulumi.StringPtrInput
	// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
	RestartOnTopologyChange pulumi.StringPtrInput
	// Graceful restart period in seconds.
	RestartPeriod pulumi.IntPtrInput
	// A.B.C.D, in IPv4 address format.
	RouterId pulumi.StringPtrInput
	// SPF calculation frequency.
	SpfTimers pulumi.StringPtrInput
	// IPv6 address summary configuration. The structure of `summaryAddress` block is documented below.
	SummaryAddresses Ospf6SummaryAddressArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Ospf6State) ElementType() reflect.Type {
	return reflect.TypeOf((*ospf6State)(nil)).Elem()
}

type ospf6Args struct {
	// Area border router type. Valid values: `cisco`, `ibm`, `standard`.
	AbrType *string `pulumi:"abrType"`
	// OSPF6 area configuration. The structure of `area` block is documented below.
	Areas []Ospf6Area `pulumi:"areas"`
	// Reference bandwidth in terms of megabits per second.
	AutoCostRefBandwidth *int `pulumi:"autoCostRefBandwidth"`
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Default information metric.
	DefaultInformationMetric *int `pulumi:"defaultInformationMetric"`
	// Default information metric type. Valid values: `1`, `2`.
	DefaultInformationMetricType *string `pulumi:"defaultInformationMetricType"`
	// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
	DefaultInformationOriginate *string `pulumi:"defaultInformationOriginate"`
	// Default information route map.
	DefaultInformationRouteMap *string `pulumi:"defaultInformationRouteMap"`
	// Default metric of redistribute routes.
	DefaultMetric *int `pulumi:"defaultMetric"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable logging of OSPFv3 neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges *string `pulumi:"logNeighbourChanges"`
	// OSPF6 interface configuration. The structure of `ospf6Interface` block is documented below.
	Ospf6Interfaces []Ospf6Ospf6Interface `pulumi:"ospf6Interfaces"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces []Ospf6PassiveInterface `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes []Ospf6Redistribute `pulumi:"redistributes"`
	// OSPFv3 restart mode (graceful or none). Valid values: `none`, `graceful-restart`.
	RestartMode *string `pulumi:"restartMode"`
	// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
	RestartOnTopologyChange *string `pulumi:"restartOnTopologyChange"`
	// Graceful restart period in seconds.
	RestartPeriod *int `pulumi:"restartPeriod"`
	// A.B.C.D, in IPv4 address format.
	RouterId string `pulumi:"routerId"`
	// SPF calculation frequency.
	SpfTimers *string `pulumi:"spfTimers"`
	// IPv6 address summary configuration. The structure of `summaryAddress` block is documented below.
	SummaryAddresses []Ospf6SummaryAddress `pulumi:"summaryAddresses"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Ospf6 resource.
type Ospf6Args struct {
	// Area border router type. Valid values: `cisco`, `ibm`, `standard`.
	AbrType pulumi.StringPtrInput
	// OSPF6 area configuration. The structure of `area` block is documented below.
	Areas Ospf6AreaArrayInput
	// Reference bandwidth in terms of megabits per second.
	AutoCostRefBandwidth pulumi.IntPtrInput
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput
	// Default information metric.
	DefaultInformationMetric pulumi.IntPtrInput
	// Default information metric type. Valid values: `1`, `2`.
	DefaultInformationMetricType pulumi.StringPtrInput
	// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
	DefaultInformationOriginate pulumi.StringPtrInput
	// Default information route map.
	DefaultInformationRouteMap pulumi.StringPtrInput
	// Default metric of redistribute routes.
	DefaultMetric pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable logging of OSPFv3 neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringPtrInput
	// OSPF6 interface configuration. The structure of `ospf6Interface` block is documented below.
	Ospf6Interfaces Ospf6Ospf6InterfaceArrayInput
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces Ospf6PassiveInterfaceArrayInput
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes Ospf6RedistributeArrayInput
	// OSPFv3 restart mode (graceful or none). Valid values: `none`, `graceful-restart`.
	RestartMode pulumi.StringPtrInput
	// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
	RestartOnTopologyChange pulumi.StringPtrInput
	// Graceful restart period in seconds.
	RestartPeriod pulumi.IntPtrInput
	// A.B.C.D, in IPv4 address format.
	RouterId pulumi.StringInput
	// SPF calculation frequency.
	SpfTimers pulumi.StringPtrInput
	// IPv6 address summary configuration. The structure of `summaryAddress` block is documented below.
	SummaryAddresses Ospf6SummaryAddressArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Ospf6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ospf6Args)(nil)).Elem()
}

type Ospf6Input interface {
	pulumi.Input

	ToOspf6Output() Ospf6Output
	ToOspf6OutputWithContext(ctx context.Context) Ospf6Output
}

func (*Ospf6) ElementType() reflect.Type {
	return reflect.TypeOf((**Ospf6)(nil)).Elem()
}

func (i *Ospf6) ToOspf6Output() Ospf6Output {
	return i.ToOspf6OutputWithContext(context.Background())
}

func (i *Ospf6) ToOspf6OutputWithContext(ctx context.Context) Ospf6Output {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6Output)
}

// Ospf6ArrayInput is an input type that accepts Ospf6Array and Ospf6ArrayOutput values.
// You can construct a concrete instance of `Ospf6ArrayInput` via:
//
//	Ospf6Array{ Ospf6Args{...} }
type Ospf6ArrayInput interface {
	pulumi.Input

	ToOspf6ArrayOutput() Ospf6ArrayOutput
	ToOspf6ArrayOutputWithContext(context.Context) Ospf6ArrayOutput
}

type Ospf6Array []Ospf6Input

func (Ospf6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ospf6)(nil)).Elem()
}

func (i Ospf6Array) ToOspf6ArrayOutput() Ospf6ArrayOutput {
	return i.ToOspf6ArrayOutputWithContext(context.Background())
}

func (i Ospf6Array) ToOspf6ArrayOutputWithContext(ctx context.Context) Ospf6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6ArrayOutput)
}

// Ospf6MapInput is an input type that accepts Ospf6Map and Ospf6MapOutput values.
// You can construct a concrete instance of `Ospf6MapInput` via:
//
//	Ospf6Map{ "key": Ospf6Args{...} }
type Ospf6MapInput interface {
	pulumi.Input

	ToOspf6MapOutput() Ospf6MapOutput
	ToOspf6MapOutputWithContext(context.Context) Ospf6MapOutput
}

type Ospf6Map map[string]Ospf6Input

func (Ospf6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ospf6)(nil)).Elem()
}

func (i Ospf6Map) ToOspf6MapOutput() Ospf6MapOutput {
	return i.ToOspf6MapOutputWithContext(context.Background())
}

func (i Ospf6Map) ToOspf6MapOutputWithContext(ctx context.Context) Ospf6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ospf6MapOutput)
}

type Ospf6Output struct{ *pulumi.OutputState }

func (Ospf6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**Ospf6)(nil)).Elem()
}

func (o Ospf6Output) ToOspf6Output() Ospf6Output {
	return o
}

func (o Ospf6Output) ToOspf6OutputWithContext(ctx context.Context) Ospf6Output {
	return o
}

// Area border router type. Valid values: `cisco`, `ibm`, `standard`.
func (o Ospf6Output) AbrType() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringOutput { return v.AbrType }).(pulumi.StringOutput)
}

// OSPF6 area configuration. The structure of `area` block is documented below.
func (o Ospf6Output) Areas() Ospf6AreaArrayOutput {
	return o.ApplyT(func(v *Ospf6) Ospf6AreaArrayOutput { return v.Areas }).(Ospf6AreaArrayOutput)
}

// Reference bandwidth in terms of megabits per second.
func (o Ospf6Output) AutoCostRefBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.IntOutput { return v.AutoCostRefBandwidth }).(pulumi.IntOutput)
}

// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
func (o Ospf6Output) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringOutput { return v.Bfd }).(pulumi.StringOutput)
}

// Default information metric.
func (o Ospf6Output) DefaultInformationMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.IntOutput { return v.DefaultInformationMetric }).(pulumi.IntOutput)
}

// Default information metric type. Valid values: `1`, `2`.
func (o Ospf6Output) DefaultInformationMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringOutput { return v.DefaultInformationMetricType }).(pulumi.StringOutput)
}

// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
func (o Ospf6Output) DefaultInformationOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringOutput { return v.DefaultInformationOriginate }).(pulumi.StringOutput)
}

// Default information route map.
func (o Ospf6Output) DefaultInformationRouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringOutput { return v.DefaultInformationRouteMap }).(pulumi.StringOutput)
}

// Default metric of redistribute routes.
func (o Ospf6Output) DefaultMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.IntOutput { return v.DefaultMetric }).(pulumi.IntOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o Ospf6Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o Ospf6Output) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Enable logging of OSPFv3 neighbour's changes Valid values: `enable`, `disable`.
func (o Ospf6Output) LogNeighbourChanges() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringOutput { return v.LogNeighbourChanges }).(pulumi.StringOutput)
}

// OSPF6 interface configuration. The structure of `ospf6Interface` block is documented below.
func (o Ospf6Output) Ospf6Interfaces() Ospf6Ospf6InterfaceArrayOutput {
	return o.ApplyT(func(v *Ospf6) Ospf6Ospf6InterfaceArrayOutput { return v.Ospf6Interfaces }).(Ospf6Ospf6InterfaceArrayOutput)
}

// Passive interface configuration. The structure of `passiveInterface` block is documented below.
func (o Ospf6Output) PassiveInterfaces() Ospf6PassiveInterfaceArrayOutput {
	return o.ApplyT(func(v *Ospf6) Ospf6PassiveInterfaceArrayOutput { return v.PassiveInterfaces }).(Ospf6PassiveInterfaceArrayOutput)
}

// Redistribute configuration. The structure of `redistribute` block is documented below.
func (o Ospf6Output) Redistributes() Ospf6RedistributeArrayOutput {
	return o.ApplyT(func(v *Ospf6) Ospf6RedistributeArrayOutput { return v.Redistributes }).(Ospf6RedistributeArrayOutput)
}

// OSPFv3 restart mode (graceful or none). Valid values: `none`, `graceful-restart`.
func (o Ospf6Output) RestartMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringOutput { return v.RestartMode }).(pulumi.StringOutput)
}

// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
func (o Ospf6Output) RestartOnTopologyChange() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringOutput { return v.RestartOnTopologyChange }).(pulumi.StringOutput)
}

// Graceful restart period in seconds.
func (o Ospf6Output) RestartPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.IntOutput { return v.RestartPeriod }).(pulumi.IntOutput)
}

// A.B.C.D, in IPv4 address format.
func (o Ospf6Output) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringOutput { return v.RouterId }).(pulumi.StringOutput)
}

// SPF calculation frequency.
func (o Ospf6Output) SpfTimers() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringOutput { return v.SpfTimers }).(pulumi.StringOutput)
}

// IPv6 address summary configuration. The structure of `summaryAddress` block is documented below.
func (o Ospf6Output) SummaryAddresses() Ospf6SummaryAddressArrayOutput {
	return o.ApplyT(func(v *Ospf6) Ospf6SummaryAddressArrayOutput { return v.SummaryAddresses }).(Ospf6SummaryAddressArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Ospf6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ospf6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Ospf6ArrayOutput struct{ *pulumi.OutputState }

func (Ospf6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ospf6)(nil)).Elem()
}

func (o Ospf6ArrayOutput) ToOspf6ArrayOutput() Ospf6ArrayOutput {
	return o
}

func (o Ospf6ArrayOutput) ToOspf6ArrayOutputWithContext(ctx context.Context) Ospf6ArrayOutput {
	return o
}

func (o Ospf6ArrayOutput) Index(i pulumi.IntInput) Ospf6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ospf6 {
		return vs[0].([]*Ospf6)[vs[1].(int)]
	}).(Ospf6Output)
}

type Ospf6MapOutput struct{ *pulumi.OutputState }

func (Ospf6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ospf6)(nil)).Elem()
}

func (o Ospf6MapOutput) ToOspf6MapOutput() Ospf6MapOutput {
	return o
}

func (o Ospf6MapOutput) ToOspf6MapOutputWithContext(ctx context.Context) Ospf6MapOutput {
	return o
}

func (o Ospf6MapOutput) MapIndex(k pulumi.StringInput) Ospf6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ospf6 {
		return vs[0].(map[string]*Ospf6)[vs[1].(string)]
	}).(Ospf6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6Input)(nil)).Elem(), &Ospf6{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6ArrayInput)(nil)).Elem(), Ospf6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ospf6MapInput)(nil)).Elem(), Ospf6Map{})
	pulumi.RegisterOutputType(Ospf6Output{})
	pulumi.RegisterOutputType(Ospf6ArrayOutput{})
	pulumi.RegisterOutputType(Ospf6MapOutput{})
}
