// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure RIP.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := router.NewRip(ctx, "trname", &router.RipArgs{
//				DefaultInformationOriginate: pulumi.String("disable"),
//				DefaultMetric:               pulumi.Int(1),
//				GarbageTimer:                pulumi.Int(120),
//				MaxOutMetric:                pulumi.Int(0),
//				RecvBufferSize:              pulumi.Int(655360),
//				Redistributes: router.RipRedistributeArray{
//					&router.RipRedistributeArgs{
//						Metric: pulumi.Int(10),
//						Name:   pulumi.String("connected"),
//						Status: pulumi.String("disable"),
//					},
//					&router.RipRedistributeArgs{
//						Metric: pulumi.Int(10),
//						Name:   pulumi.String("static"),
//						Status: pulumi.String("disable"),
//					},
//					&router.RipRedistributeArgs{
//						Metric: pulumi.Int(10),
//						Name:   pulumi.String("ospf"),
//						Status: pulumi.String("disable"),
//					},
//					&router.RipRedistributeArgs{
//						Metric: pulumi.Int(10),
//						Name:   pulumi.String("bgp"),
//						Status: pulumi.String("disable"),
//					},
//					&router.RipRedistributeArgs{
//						Metric: pulumi.Int(10),
//						Name:   pulumi.String("isis"),
//						Status: pulumi.String("disable"),
//					},
//				},
//				TimeoutTimer: pulumi.Int(180),
//				UpdateTimer:  pulumi.Int(30),
//				Version:      pulumi.String("2"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Router Rip can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:router/rip:Rip labelname RouterRip
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:router/rip:Rip labelname RouterRip
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Rip struct {
	pulumi.CustomResourceState

	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate pulumi.StringOutput `pulumi:"defaultInformationOriginate"`
	// Default metric.
	DefaultMetric pulumi.IntOutput `pulumi:"defaultMetric"`
	// distance The structure of `distance` block is documented below.
	Distances RipDistanceArrayOutput `pulumi:"distances"`
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists RipDistributeListArrayOutput `pulumi:"distributeLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Garbage timer in seconds.
	GarbageTimer pulumi.IntOutput `pulumi:"garbageTimer"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// RIP interface configuration. The structure of `interface` block is documented below.
	Interfaces RipInterfaceArrayOutput `pulumi:"interfaces"`
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric pulumi.IntOutput `pulumi:"maxOutMetric"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors RipNeighborArrayOutput `pulumi:"neighbors"`
	// network The structure of `network` block is documented below.
	Networks RipNetworkArrayOutput `pulumi:"networks"`
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists RipOffsetListArrayOutput `pulumi:"offsetLists"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces RipPassiveInterfaceArrayOutput `pulumi:"passiveInterfaces"`
	// Receiving buffer size.
	RecvBufferSize pulumi.IntOutput `pulumi:"recvBufferSize"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes RipRedistributeArrayOutput `pulumi:"redistributes"`
	// Timeout timer in seconds.
	TimeoutTimer pulumi.IntOutput `pulumi:"timeoutTimer"`
	// Update timer in seconds.
	UpdateTimer pulumi.IntOutput `pulumi:"updateTimer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// RIP version. Valid values: `1`, `2`.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewRip registers a new resource with the given unique name, arguments, and options.
func NewRip(ctx *pulumi.Context,
	name string, args *RipArgs, opts ...pulumi.ResourceOption) (*Rip, error) {
	if args == nil {
		args = &RipArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Rip
	err := ctx.RegisterResource("fortios:router/rip:Rip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRip gets an existing Rip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRip(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RipState, opts ...pulumi.ResourceOption) (*Rip, error) {
	var resource Rip
	err := ctx.ReadResource("fortios:router/rip:Rip", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Rip resources.
type ripState struct {
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate *string `pulumi:"defaultInformationOriginate"`
	// Default metric.
	DefaultMetric *int `pulumi:"defaultMetric"`
	// distance The structure of `distance` block is documented below.
	Distances []RipDistance `pulumi:"distances"`
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists []RipDistributeList `pulumi:"distributeLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Garbage timer in seconds.
	GarbageTimer *int `pulumi:"garbageTimer"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// RIP interface configuration. The structure of `interface` block is documented below.
	Interfaces []RipInterface `pulumi:"interfaces"`
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric *int `pulumi:"maxOutMetric"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors []RipNeighbor `pulumi:"neighbors"`
	// network The structure of `network` block is documented below.
	Networks []RipNetwork `pulumi:"networks"`
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists []RipOffsetList `pulumi:"offsetLists"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces []RipPassiveInterface `pulumi:"passiveInterfaces"`
	// Receiving buffer size.
	RecvBufferSize *int `pulumi:"recvBufferSize"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes []RipRedistribute `pulumi:"redistributes"`
	// Timeout timer in seconds.
	TimeoutTimer *int `pulumi:"timeoutTimer"`
	// Update timer in seconds.
	UpdateTimer *int `pulumi:"updateTimer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// RIP version. Valid values: `1`, `2`.
	Version *string `pulumi:"version"`
}

type RipState struct {
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate pulumi.StringPtrInput
	// Default metric.
	DefaultMetric pulumi.IntPtrInput
	// distance The structure of `distance` block is documented below.
	Distances RipDistanceArrayInput
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists RipDistributeListArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Garbage timer in seconds.
	GarbageTimer pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// RIP interface configuration. The structure of `interface` block is documented below.
	Interfaces RipInterfaceArrayInput
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric pulumi.IntPtrInput
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors RipNeighborArrayInput
	// network The structure of `network` block is documented below.
	Networks RipNetworkArrayInput
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists RipOffsetListArrayInput
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces RipPassiveInterfaceArrayInput
	// Receiving buffer size.
	RecvBufferSize pulumi.IntPtrInput
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes RipRedistributeArrayInput
	// Timeout timer in seconds.
	TimeoutTimer pulumi.IntPtrInput
	// Update timer in seconds.
	UpdateTimer pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// RIP version. Valid values: `1`, `2`.
	Version pulumi.StringPtrInput
}

func (RipState) ElementType() reflect.Type {
	return reflect.TypeOf((*ripState)(nil)).Elem()
}

type ripArgs struct {
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate *string `pulumi:"defaultInformationOriginate"`
	// Default metric.
	DefaultMetric *int `pulumi:"defaultMetric"`
	// distance The structure of `distance` block is documented below.
	Distances []RipDistance `pulumi:"distances"`
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists []RipDistributeList `pulumi:"distributeLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Garbage timer in seconds.
	GarbageTimer *int `pulumi:"garbageTimer"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// RIP interface configuration. The structure of `interface` block is documented below.
	Interfaces []RipInterface `pulumi:"interfaces"`
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric *int `pulumi:"maxOutMetric"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors []RipNeighbor `pulumi:"neighbors"`
	// network The structure of `network` block is documented below.
	Networks []RipNetwork `pulumi:"networks"`
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists []RipOffsetList `pulumi:"offsetLists"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces []RipPassiveInterface `pulumi:"passiveInterfaces"`
	// Receiving buffer size.
	RecvBufferSize *int `pulumi:"recvBufferSize"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes []RipRedistribute `pulumi:"redistributes"`
	// Timeout timer in seconds.
	TimeoutTimer *int `pulumi:"timeoutTimer"`
	// Update timer in seconds.
	UpdateTimer *int `pulumi:"updateTimer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// RIP version. Valid values: `1`, `2`.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a Rip resource.
type RipArgs struct {
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate pulumi.StringPtrInput
	// Default metric.
	DefaultMetric pulumi.IntPtrInput
	// distance The structure of `distance` block is documented below.
	Distances RipDistanceArrayInput
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists RipDistributeListArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Garbage timer in seconds.
	GarbageTimer pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// RIP interface configuration. The structure of `interface` block is documented below.
	Interfaces RipInterfaceArrayInput
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric pulumi.IntPtrInput
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors RipNeighborArrayInput
	// network The structure of `network` block is documented below.
	Networks RipNetworkArrayInput
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists RipOffsetListArrayInput
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces RipPassiveInterfaceArrayInput
	// Receiving buffer size.
	RecvBufferSize pulumi.IntPtrInput
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes RipRedistributeArrayInput
	// Timeout timer in seconds.
	TimeoutTimer pulumi.IntPtrInput
	// Update timer in seconds.
	UpdateTimer pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// RIP version. Valid values: `1`, `2`.
	Version pulumi.StringPtrInput
}

func (RipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ripArgs)(nil)).Elem()
}

type RipInput interface {
	pulumi.Input

	ToRipOutput() RipOutput
	ToRipOutputWithContext(ctx context.Context) RipOutput
}

func (*Rip) ElementType() reflect.Type {
	return reflect.TypeOf((**Rip)(nil)).Elem()
}

func (i *Rip) ToRipOutput() RipOutput {
	return i.ToRipOutputWithContext(context.Background())
}

func (i *Rip) ToRipOutputWithContext(ctx context.Context) RipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipOutput)
}

// RipArrayInput is an input type that accepts RipArray and RipArrayOutput values.
// You can construct a concrete instance of `RipArrayInput` via:
//
//	RipArray{ RipArgs{...} }
type RipArrayInput interface {
	pulumi.Input

	ToRipArrayOutput() RipArrayOutput
	ToRipArrayOutputWithContext(context.Context) RipArrayOutput
}

type RipArray []RipInput

func (RipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Rip)(nil)).Elem()
}

func (i RipArray) ToRipArrayOutput() RipArrayOutput {
	return i.ToRipArrayOutputWithContext(context.Background())
}

func (i RipArray) ToRipArrayOutputWithContext(ctx context.Context) RipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipArrayOutput)
}

// RipMapInput is an input type that accepts RipMap and RipMapOutput values.
// You can construct a concrete instance of `RipMapInput` via:
//
//	RipMap{ "key": RipArgs{...} }
type RipMapInput interface {
	pulumi.Input

	ToRipMapOutput() RipMapOutput
	ToRipMapOutputWithContext(context.Context) RipMapOutput
}

type RipMap map[string]RipInput

func (RipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Rip)(nil)).Elem()
}

func (i RipMap) ToRipMapOutput() RipMapOutput {
	return i.ToRipMapOutputWithContext(context.Background())
}

func (i RipMap) ToRipMapOutputWithContext(ctx context.Context) RipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RipMapOutput)
}

type RipOutput struct{ *pulumi.OutputState }

func (RipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Rip)(nil)).Elem()
}

func (o RipOutput) ToRipOutput() RipOutput {
	return o
}

func (o RipOutput) ToRipOutputWithContext(ctx context.Context) RipOutput {
	return o
}

// Enable/disable generation of default route. Valid values: `enable`, `disable`.
func (o RipOutput) DefaultInformationOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v *Rip) pulumi.StringOutput { return v.DefaultInformationOriginate }).(pulumi.StringOutput)
}

// Default metric.
func (o RipOutput) DefaultMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *Rip) pulumi.IntOutput { return v.DefaultMetric }).(pulumi.IntOutput)
}

// distance The structure of `distance` block is documented below.
func (o RipOutput) Distances() RipDistanceArrayOutput {
	return o.ApplyT(func(v *Rip) RipDistanceArrayOutput { return v.Distances }).(RipDistanceArrayOutput)
}

// Distribute list. The structure of `distributeList` block is documented below.
func (o RipOutput) DistributeLists() RipDistributeListArrayOutput {
	return o.ApplyT(func(v *Rip) RipDistributeListArrayOutput { return v.DistributeLists }).(RipDistributeListArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o RipOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rip) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Garbage timer in seconds.
func (o RipOutput) GarbageTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *Rip) pulumi.IntOutput { return v.GarbageTimer }).(pulumi.IntOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o RipOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rip) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// RIP interface configuration. The structure of `interface` block is documented below.
func (o RipOutput) Interfaces() RipInterfaceArrayOutput {
	return o.ApplyT(func(v *Rip) RipInterfaceArrayOutput { return v.Interfaces }).(RipInterfaceArrayOutput)
}

// Maximum metric allowed to output(0 means 'not set').
func (o RipOutput) MaxOutMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *Rip) pulumi.IntOutput { return v.MaxOutMetric }).(pulumi.IntOutput)
}

// neighbor The structure of `neighbor` block is documented below.
func (o RipOutput) Neighbors() RipNeighborArrayOutput {
	return o.ApplyT(func(v *Rip) RipNeighborArrayOutput { return v.Neighbors }).(RipNeighborArrayOutput)
}

// network The structure of `network` block is documented below.
func (o RipOutput) Networks() RipNetworkArrayOutput {
	return o.ApplyT(func(v *Rip) RipNetworkArrayOutput { return v.Networks }).(RipNetworkArrayOutput)
}

// Offset list. The structure of `offsetList` block is documented below.
func (o RipOutput) OffsetLists() RipOffsetListArrayOutput {
	return o.ApplyT(func(v *Rip) RipOffsetListArrayOutput { return v.OffsetLists }).(RipOffsetListArrayOutput)
}

// Passive interface configuration. The structure of `passiveInterface` block is documented below.
func (o RipOutput) PassiveInterfaces() RipPassiveInterfaceArrayOutput {
	return o.ApplyT(func(v *Rip) RipPassiveInterfaceArrayOutput { return v.PassiveInterfaces }).(RipPassiveInterfaceArrayOutput)
}

// Receiving buffer size.
func (o RipOutput) RecvBufferSize() pulumi.IntOutput {
	return o.ApplyT(func(v *Rip) pulumi.IntOutput { return v.RecvBufferSize }).(pulumi.IntOutput)
}

// Redistribute configuration. The structure of `redistribute` block is documented below.
func (o RipOutput) Redistributes() RipRedistributeArrayOutput {
	return o.ApplyT(func(v *Rip) RipRedistributeArrayOutput { return v.Redistributes }).(RipRedistributeArrayOutput)
}

// Timeout timer in seconds.
func (o RipOutput) TimeoutTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *Rip) pulumi.IntOutput { return v.TimeoutTimer }).(pulumi.IntOutput)
}

// Update timer in seconds.
func (o RipOutput) UpdateTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *Rip) pulumi.IntOutput { return v.UpdateTimer }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o RipOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rip) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// RIP version. Valid values: `1`, `2`.
func (o RipOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Rip) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type RipArrayOutput struct{ *pulumi.OutputState }

func (RipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Rip)(nil)).Elem()
}

func (o RipArrayOutput) ToRipArrayOutput() RipArrayOutput {
	return o
}

func (o RipArrayOutput) ToRipArrayOutputWithContext(ctx context.Context) RipArrayOutput {
	return o
}

func (o RipArrayOutput) Index(i pulumi.IntInput) RipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Rip {
		return vs[0].([]*Rip)[vs[1].(int)]
	}).(RipOutput)
}

type RipMapOutput struct{ *pulumi.OutputState }

func (RipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Rip)(nil)).Elem()
}

func (o RipMapOutput) ToRipMapOutput() RipMapOutput {
	return o
}

func (o RipMapOutput) ToRipMapOutputWithContext(ctx context.Context) RipMapOutput {
	return o
}

func (o RipMapOutput) MapIndex(k pulumi.StringInput) RipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Rip {
		return vs[0].(map[string]*Rip)[vs[1].(string)]
	}).(RipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RipInput)(nil)).Elem(), &Rip{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipArrayInput)(nil)).Elem(), RipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RipMapInput)(nil)).Elem(), RipMap{})
	pulumi.RegisterOutputType(RipOutput{})
	pulumi.RegisterOutputType(RipArrayOutput{})
	pulumi.RegisterOutputType(RipMapOutput{})
}
