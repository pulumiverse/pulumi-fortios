// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package router

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure OSPF.
//
// > The provider supports the definition of Ospf-Interface in Router Ospf `router.Ospf`, and also allows the definition of separate Ospf-Interface resources `router/ospf.Ospfinterface`, but do not use a `router.Ospf` with in-line Ospf-Interface in conjunction with any `router/ospf.Ospfinterface` resources, otherwise conflicts and overwrite will occur.
//
// > The provider supports the definition of Network in Router Ospf `router.Ospf`, and also allows the definition of separate Network resources `router/ospf.Network`, but do not use a `router.Ospf` with in-line Network in conjunction with any `router/ospf.Network` resources, otherwise conflicts and overwrite will occur.
//
// > The provider supports the definition of Neighbor in Router Ospf `router.Ospf`, and also allows the definition of separate Neighbor resources `router/ospf.Neighbor`, but do not use a `router.Ospf` with in-line Neighbor in conjunction with any `router/ospf.Neighbor` resources, otherwise conflicts and overwrite will occur.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := router.NewOspf(ctx, "trname", &router.OspfArgs{
//				AbrType:                       pulumi.String("standard"),
//				AutoCostRefBandwidth:          pulumi.Int(1000),
//				Bfd:                           pulumi.String("disable"),
//				DatabaseOverflow:              pulumi.String("disable"),
//				DatabaseOverflowMaxLsas:       pulumi.Int(10000),
//				DatabaseOverflowTimeToRecover: pulumi.Int(300),
//				DefaultInformationMetric:      pulumi.Int(10),
//				DefaultInformationMetricType:  pulumi.String("2"),
//				DefaultInformationOriginate:   pulumi.String("disable"),
//				DefaultMetric:                 pulumi.Int(10),
//				Distance:                      pulumi.Int(110),
//				DistanceExternal:              pulumi.Int(110),
//				DistanceInterArea:             pulumi.Int(110),
//				DistanceIntraArea:             pulumi.Int(110),
//				LogNeighbourChanges:           pulumi.String("enable"),
//				Redistributes: router.OspfRedistributeArray{
//					&router.OspfRedistributeArgs{
//						Metric:     pulumi.Int(0),
//						MetricType: pulumi.String("2"),
//						Name:       pulumi.String("connected"),
//						Status:     pulumi.String("disable"),
//						Tag:        pulumi.Int(0),
//					},
//					&router.OspfRedistributeArgs{
//						Metric:     pulumi.Int(0),
//						MetricType: pulumi.String("2"),
//						Name:       pulumi.String("static"),
//						Status:     pulumi.String("disable"),
//						Tag:        pulumi.Int(0),
//					},
//					&router.OspfRedistributeArgs{
//						Metric:     pulumi.Int(0),
//						MetricType: pulumi.String("2"),
//						Name:       pulumi.String("rip"),
//						Status:     pulumi.String("disable"),
//						Tag:        pulumi.Int(0),
//					},
//					&router.OspfRedistributeArgs{
//						Metric:     pulumi.Int(0),
//						MetricType: pulumi.String("2"),
//						Name:       pulumi.String("bgp"),
//						Status:     pulumi.String("disable"),
//						Tag:        pulumi.Int(0),
//					},
//					&router.OspfRedistributeArgs{
//						Metric:     pulumi.Int(0),
//						MetricType: pulumi.String("2"),
//						Name:       pulumi.String("isis"),
//						Status:     pulumi.String("disable"),
//						Tag:        pulumi.Int(0),
//					},
//				},
//				RestartMode:       pulumi.String("none"),
//				RestartPeriod:     pulumi.Int(120),
//				Rfc1583Compatible: pulumi.String("disable"),
//				RouterId:          pulumi.String("0.0.0.0"),
//				SpfTimers:         pulumi.String("5 10"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Router Ospf can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:router/ospf:Ospf labelname RouterOspf
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:router/ospf:Ospf labelname RouterOspf
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Ospf struct {
	pulumi.CustomResourceState

	// Area border router type. Valid values: `cisco`, `ibm`, `shortcut`, `standard`.
	AbrType pulumi.StringOutput `pulumi:"abrType"`
	// OSPF area configuration. The structure of `area` block is documented below.
	Areas OspfAreaArrayOutput `pulumi:"areas"`
	// Reference bandwidth in terms of megabits per second.
	AutoCostRefBandwidth pulumi.IntOutput `pulumi:"autoCostRefBandwidth"`
	// Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd pulumi.StringOutput `pulumi:"bfd"`
	// Enable/disable database overflow. Valid values: `enable`, `disable`.
	DatabaseOverflow pulumi.StringOutput `pulumi:"databaseOverflow"`
	// Database overflow maximum LSAs.
	DatabaseOverflowMaxLsas pulumi.IntOutput `pulumi:"databaseOverflowMaxLsas"`
	// Database overflow time to recover (sec).
	DatabaseOverflowTimeToRecover pulumi.IntOutput `pulumi:"databaseOverflowTimeToRecover"`
	// Default information metric.
	DefaultInformationMetric pulumi.IntOutput `pulumi:"defaultInformationMetric"`
	// Default information metric type. Valid values: `1`, `2`.
	DefaultInformationMetricType pulumi.StringOutput `pulumi:"defaultInformationMetricType"`
	// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
	DefaultInformationOriginate pulumi.StringOutput `pulumi:"defaultInformationOriginate"`
	// Default information route map.
	DefaultInformationRouteMap pulumi.StringOutput `pulumi:"defaultInformationRouteMap"`
	// Default metric of redistribute routes.
	DefaultMetric pulumi.IntOutput `pulumi:"defaultMetric"`
	// Distance of the route.
	Distance pulumi.IntOutput `pulumi:"distance"`
	// Administrative external distance.
	DistanceExternal pulumi.IntOutput `pulumi:"distanceExternal"`
	// Administrative inter-area distance.
	DistanceInterArea pulumi.IntOutput `pulumi:"distanceInterArea"`
	// Administrative intra-area distance.
	DistanceIntraArea pulumi.IntOutput `pulumi:"distanceIntraArea"`
	// Filter incoming routes.
	DistributeListIn pulumi.StringOutput `pulumi:"distributeListIn"`
	// Distribute list configuration. The structure of `distributeList` block is documented below.
	DistributeLists OspfDistributeListArrayOutput `pulumi:"distributeLists"`
	// Filter incoming external routes by route-map.
	DistributeRouteMapIn pulumi.StringOutput `pulumi:"distributeRouteMapIn"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Enable logging of OSPF neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringOutput `pulumi:"logNeighbourChanges"`
	// OSPF neighbor configuration are used when OSPF runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors OspfNeighborArrayOutput `pulumi:"neighbors"`
	// OSPF network configuration. The structure of `network` block is documented below.
	Networks OspfNetworkArrayOutput `pulumi:"networks"`
	// OSPF interface configuration. The structure of `ospfInterface` block is documented below.
	OspfInterfaces OspfOspfInterfaceArrayOutput `pulumi:"ospfInterfaces"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces OspfPassiveInterfaceArrayOutput `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes OspfRedistributeArrayOutput `pulumi:"redistributes"`
	// OSPF restart mode (graceful or LLS). Valid values: `none`, `lls`, `graceful-restart`.
	RestartMode pulumi.StringOutput `pulumi:"restartMode"`
	// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
	RestartOnTopologyChange pulumi.StringOutput `pulumi:"restartOnTopologyChange"`
	// Graceful restart period.
	RestartPeriod pulumi.IntOutput `pulumi:"restartPeriod"`
	// Enable/disable RFC1583 compatibility. Valid values: `enable`, `disable`.
	Rfc1583Compatible pulumi.StringOutput `pulumi:"rfc1583Compatible"`
	// Router ID.
	RouterId pulumi.StringOutput `pulumi:"routerId"`
	// SPF calculation frequency.
	SpfTimers pulumi.StringOutput `pulumi:"spfTimers"`
	// IP address summary configuration. The structure of `summaryAddress` block is documented below.
	SummaryAddresses OspfSummaryAddressArrayOutput `pulumi:"summaryAddresses"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewOspf registers a new resource with the given unique name, arguments, and options.
func NewOspf(ctx *pulumi.Context,
	name string, args *OspfArgs, opts ...pulumi.ResourceOption) (*Ospf, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RouterId == nil {
		return nil, errors.New("invalid value for required argument 'RouterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ospf
	err := ctx.RegisterResource("fortios:router/ospf:Ospf", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOspf gets an existing Ospf resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOspf(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OspfState, opts ...pulumi.ResourceOption) (*Ospf, error) {
	var resource Ospf
	err := ctx.ReadResource("fortios:router/ospf:Ospf", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ospf resources.
type ospfState struct {
	// Area border router type. Valid values: `cisco`, `ibm`, `shortcut`, `standard`.
	AbrType *string `pulumi:"abrType"`
	// OSPF area configuration. The structure of `area` block is documented below.
	Areas []OspfArea `pulumi:"areas"`
	// Reference bandwidth in terms of megabits per second.
	AutoCostRefBandwidth *int `pulumi:"autoCostRefBandwidth"`
	// Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Enable/disable database overflow. Valid values: `enable`, `disable`.
	DatabaseOverflow *string `pulumi:"databaseOverflow"`
	// Database overflow maximum LSAs.
	DatabaseOverflowMaxLsas *int `pulumi:"databaseOverflowMaxLsas"`
	// Database overflow time to recover (sec).
	DatabaseOverflowTimeToRecover *int `pulumi:"databaseOverflowTimeToRecover"`
	// Default information metric.
	DefaultInformationMetric *int `pulumi:"defaultInformationMetric"`
	// Default information metric type. Valid values: `1`, `2`.
	DefaultInformationMetricType *string `pulumi:"defaultInformationMetricType"`
	// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
	DefaultInformationOriginate *string `pulumi:"defaultInformationOriginate"`
	// Default information route map.
	DefaultInformationRouteMap *string `pulumi:"defaultInformationRouteMap"`
	// Default metric of redistribute routes.
	DefaultMetric *int `pulumi:"defaultMetric"`
	// Distance of the route.
	Distance *int `pulumi:"distance"`
	// Administrative external distance.
	DistanceExternal *int `pulumi:"distanceExternal"`
	// Administrative inter-area distance.
	DistanceInterArea *int `pulumi:"distanceInterArea"`
	// Administrative intra-area distance.
	DistanceIntraArea *int `pulumi:"distanceIntraArea"`
	// Filter incoming routes.
	DistributeListIn *string `pulumi:"distributeListIn"`
	// Distribute list configuration. The structure of `distributeList` block is documented below.
	DistributeLists []OspfDistributeList `pulumi:"distributeLists"`
	// Filter incoming external routes by route-map.
	DistributeRouteMapIn *string `pulumi:"distributeRouteMapIn"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable logging of OSPF neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges *string `pulumi:"logNeighbourChanges"`
	// OSPF neighbor configuration are used when OSPF runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors []OspfNeighbor `pulumi:"neighbors"`
	// OSPF network configuration. The structure of `network` block is documented below.
	Networks []OspfNetwork `pulumi:"networks"`
	// OSPF interface configuration. The structure of `ospfInterface` block is documented below.
	OspfInterfaces []OspfOspfInterface `pulumi:"ospfInterfaces"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces []OspfPassiveInterface `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes []OspfRedistribute `pulumi:"redistributes"`
	// OSPF restart mode (graceful or LLS). Valid values: `none`, `lls`, `graceful-restart`.
	RestartMode *string `pulumi:"restartMode"`
	// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
	RestartOnTopologyChange *string `pulumi:"restartOnTopologyChange"`
	// Graceful restart period.
	RestartPeriod *int `pulumi:"restartPeriod"`
	// Enable/disable RFC1583 compatibility. Valid values: `enable`, `disable`.
	Rfc1583Compatible *string `pulumi:"rfc1583Compatible"`
	// Router ID.
	RouterId *string `pulumi:"routerId"`
	// SPF calculation frequency.
	SpfTimers *string `pulumi:"spfTimers"`
	// IP address summary configuration. The structure of `summaryAddress` block is documented below.
	SummaryAddresses []OspfSummaryAddress `pulumi:"summaryAddresses"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type OspfState struct {
	// Area border router type. Valid values: `cisco`, `ibm`, `shortcut`, `standard`.
	AbrType pulumi.StringPtrInput
	// OSPF area configuration. The structure of `area` block is documented below.
	Areas OspfAreaArrayInput
	// Reference bandwidth in terms of megabits per second.
	AutoCostRefBandwidth pulumi.IntPtrInput
	// Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput
	// Enable/disable database overflow. Valid values: `enable`, `disable`.
	DatabaseOverflow pulumi.StringPtrInput
	// Database overflow maximum LSAs.
	DatabaseOverflowMaxLsas pulumi.IntPtrInput
	// Database overflow time to recover (sec).
	DatabaseOverflowTimeToRecover pulumi.IntPtrInput
	// Default information metric.
	DefaultInformationMetric pulumi.IntPtrInput
	// Default information metric type. Valid values: `1`, `2`.
	DefaultInformationMetricType pulumi.StringPtrInput
	// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
	DefaultInformationOriginate pulumi.StringPtrInput
	// Default information route map.
	DefaultInformationRouteMap pulumi.StringPtrInput
	// Default metric of redistribute routes.
	DefaultMetric pulumi.IntPtrInput
	// Distance of the route.
	Distance pulumi.IntPtrInput
	// Administrative external distance.
	DistanceExternal pulumi.IntPtrInput
	// Administrative inter-area distance.
	DistanceInterArea pulumi.IntPtrInput
	// Administrative intra-area distance.
	DistanceIntraArea pulumi.IntPtrInput
	// Filter incoming routes.
	DistributeListIn pulumi.StringPtrInput
	// Distribute list configuration. The structure of `distributeList` block is documented below.
	DistributeLists OspfDistributeListArrayInput
	// Filter incoming external routes by route-map.
	DistributeRouteMapIn pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable logging of OSPF neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringPtrInput
	// OSPF neighbor configuration are used when OSPF runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors OspfNeighborArrayInput
	// OSPF network configuration. The structure of `network` block is documented below.
	Networks OspfNetworkArrayInput
	// OSPF interface configuration. The structure of `ospfInterface` block is documented below.
	OspfInterfaces OspfOspfInterfaceArrayInput
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces OspfPassiveInterfaceArrayInput
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes OspfRedistributeArrayInput
	// OSPF restart mode (graceful or LLS). Valid values: `none`, `lls`, `graceful-restart`.
	RestartMode pulumi.StringPtrInput
	// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
	RestartOnTopologyChange pulumi.StringPtrInput
	// Graceful restart period.
	RestartPeriod pulumi.IntPtrInput
	// Enable/disable RFC1583 compatibility. Valid values: `enable`, `disable`.
	Rfc1583Compatible pulumi.StringPtrInput
	// Router ID.
	RouterId pulumi.StringPtrInput
	// SPF calculation frequency.
	SpfTimers pulumi.StringPtrInput
	// IP address summary configuration. The structure of `summaryAddress` block is documented below.
	SummaryAddresses OspfSummaryAddressArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (OspfState) ElementType() reflect.Type {
	return reflect.TypeOf((*ospfState)(nil)).Elem()
}

type ospfArgs struct {
	// Area border router type. Valid values: `cisco`, `ibm`, `shortcut`, `standard`.
	AbrType *string `pulumi:"abrType"`
	// OSPF area configuration. The structure of `area` block is documented below.
	Areas []OspfArea `pulumi:"areas"`
	// Reference bandwidth in terms of megabits per second.
	AutoCostRefBandwidth *int `pulumi:"autoCostRefBandwidth"`
	// Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Enable/disable database overflow. Valid values: `enable`, `disable`.
	DatabaseOverflow *string `pulumi:"databaseOverflow"`
	// Database overflow maximum LSAs.
	DatabaseOverflowMaxLsas *int `pulumi:"databaseOverflowMaxLsas"`
	// Database overflow time to recover (sec).
	DatabaseOverflowTimeToRecover *int `pulumi:"databaseOverflowTimeToRecover"`
	// Default information metric.
	DefaultInformationMetric *int `pulumi:"defaultInformationMetric"`
	// Default information metric type. Valid values: `1`, `2`.
	DefaultInformationMetricType *string `pulumi:"defaultInformationMetricType"`
	// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
	DefaultInformationOriginate *string `pulumi:"defaultInformationOriginate"`
	// Default information route map.
	DefaultInformationRouteMap *string `pulumi:"defaultInformationRouteMap"`
	// Default metric of redistribute routes.
	DefaultMetric *int `pulumi:"defaultMetric"`
	// Distance of the route.
	Distance *int `pulumi:"distance"`
	// Administrative external distance.
	DistanceExternal *int `pulumi:"distanceExternal"`
	// Administrative inter-area distance.
	DistanceInterArea *int `pulumi:"distanceInterArea"`
	// Administrative intra-area distance.
	DistanceIntraArea *int `pulumi:"distanceIntraArea"`
	// Filter incoming routes.
	DistributeListIn *string `pulumi:"distributeListIn"`
	// Distribute list configuration. The structure of `distributeList` block is documented below.
	DistributeLists []OspfDistributeList `pulumi:"distributeLists"`
	// Filter incoming external routes by route-map.
	DistributeRouteMapIn *string `pulumi:"distributeRouteMapIn"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable logging of OSPF neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges *string `pulumi:"logNeighbourChanges"`
	// OSPF neighbor configuration are used when OSPF runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors []OspfNeighbor `pulumi:"neighbors"`
	// OSPF network configuration. The structure of `network` block is documented below.
	Networks []OspfNetwork `pulumi:"networks"`
	// OSPF interface configuration. The structure of `ospfInterface` block is documented below.
	OspfInterfaces []OspfOspfInterface `pulumi:"ospfInterfaces"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces []OspfPassiveInterface `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes []OspfRedistribute `pulumi:"redistributes"`
	// OSPF restart mode (graceful or LLS). Valid values: `none`, `lls`, `graceful-restart`.
	RestartMode *string `pulumi:"restartMode"`
	// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
	RestartOnTopologyChange *string `pulumi:"restartOnTopologyChange"`
	// Graceful restart period.
	RestartPeriod *int `pulumi:"restartPeriod"`
	// Enable/disable RFC1583 compatibility. Valid values: `enable`, `disable`.
	Rfc1583Compatible *string `pulumi:"rfc1583Compatible"`
	// Router ID.
	RouterId string `pulumi:"routerId"`
	// SPF calculation frequency.
	SpfTimers *string `pulumi:"spfTimers"`
	// IP address summary configuration. The structure of `summaryAddress` block is documented below.
	SummaryAddresses []OspfSummaryAddress `pulumi:"summaryAddresses"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Ospf resource.
type OspfArgs struct {
	// Area border router type. Valid values: `cisco`, `ibm`, `shortcut`, `standard`.
	AbrType pulumi.StringPtrInput
	// OSPF area configuration. The structure of `area` block is documented below.
	Areas OspfAreaArrayInput
	// Reference bandwidth in terms of megabits per second.
	AutoCostRefBandwidth pulumi.IntPtrInput
	// Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput
	// Enable/disable database overflow. Valid values: `enable`, `disable`.
	DatabaseOverflow pulumi.StringPtrInput
	// Database overflow maximum LSAs.
	DatabaseOverflowMaxLsas pulumi.IntPtrInput
	// Database overflow time to recover (sec).
	DatabaseOverflowTimeToRecover pulumi.IntPtrInput
	// Default information metric.
	DefaultInformationMetric pulumi.IntPtrInput
	// Default information metric type. Valid values: `1`, `2`.
	DefaultInformationMetricType pulumi.StringPtrInput
	// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
	DefaultInformationOriginate pulumi.StringPtrInput
	// Default information route map.
	DefaultInformationRouteMap pulumi.StringPtrInput
	// Default metric of redistribute routes.
	DefaultMetric pulumi.IntPtrInput
	// Distance of the route.
	Distance pulumi.IntPtrInput
	// Administrative external distance.
	DistanceExternal pulumi.IntPtrInput
	// Administrative inter-area distance.
	DistanceInterArea pulumi.IntPtrInput
	// Administrative intra-area distance.
	DistanceIntraArea pulumi.IntPtrInput
	// Filter incoming routes.
	DistributeListIn pulumi.StringPtrInput
	// Distribute list configuration. The structure of `distributeList` block is documented below.
	DistributeLists OspfDistributeListArrayInput
	// Filter incoming external routes by route-map.
	DistributeRouteMapIn pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable logging of OSPF neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringPtrInput
	// OSPF neighbor configuration are used when OSPF runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors OspfNeighborArrayInput
	// OSPF network configuration. The structure of `network` block is documented below.
	Networks OspfNetworkArrayInput
	// OSPF interface configuration. The structure of `ospfInterface` block is documented below.
	OspfInterfaces OspfOspfInterfaceArrayInput
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces OspfPassiveInterfaceArrayInput
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes OspfRedistributeArrayInput
	// OSPF restart mode (graceful or LLS). Valid values: `none`, `lls`, `graceful-restart`.
	RestartMode pulumi.StringPtrInput
	// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
	RestartOnTopologyChange pulumi.StringPtrInput
	// Graceful restart period.
	RestartPeriod pulumi.IntPtrInput
	// Enable/disable RFC1583 compatibility. Valid values: `enable`, `disable`.
	Rfc1583Compatible pulumi.StringPtrInput
	// Router ID.
	RouterId pulumi.StringInput
	// SPF calculation frequency.
	SpfTimers pulumi.StringPtrInput
	// IP address summary configuration. The structure of `summaryAddress` block is documented below.
	SummaryAddresses OspfSummaryAddressArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (OspfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ospfArgs)(nil)).Elem()
}

type OspfInput interface {
	pulumi.Input

	ToOspfOutput() OspfOutput
	ToOspfOutputWithContext(ctx context.Context) OspfOutput
}

func (*Ospf) ElementType() reflect.Type {
	return reflect.TypeOf((**Ospf)(nil)).Elem()
}

func (i *Ospf) ToOspfOutput() OspfOutput {
	return i.ToOspfOutputWithContext(context.Background())
}

func (i *Ospf) ToOspfOutputWithContext(ctx context.Context) OspfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfOutput)
}

// OspfArrayInput is an input type that accepts OspfArray and OspfArrayOutput values.
// You can construct a concrete instance of `OspfArrayInput` via:
//
//	OspfArray{ OspfArgs{...} }
type OspfArrayInput interface {
	pulumi.Input

	ToOspfArrayOutput() OspfArrayOutput
	ToOspfArrayOutputWithContext(context.Context) OspfArrayOutput
}

type OspfArray []OspfInput

func (OspfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ospf)(nil)).Elem()
}

func (i OspfArray) ToOspfArrayOutput() OspfArrayOutput {
	return i.ToOspfArrayOutputWithContext(context.Background())
}

func (i OspfArray) ToOspfArrayOutputWithContext(ctx context.Context) OspfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfArrayOutput)
}

// OspfMapInput is an input type that accepts OspfMap and OspfMapOutput values.
// You can construct a concrete instance of `OspfMapInput` via:
//
//	OspfMap{ "key": OspfArgs{...} }
type OspfMapInput interface {
	pulumi.Input

	ToOspfMapOutput() OspfMapOutput
	ToOspfMapOutputWithContext(context.Context) OspfMapOutput
}

type OspfMap map[string]OspfInput

func (OspfMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ospf)(nil)).Elem()
}

func (i OspfMap) ToOspfMapOutput() OspfMapOutput {
	return i.ToOspfMapOutputWithContext(context.Background())
}

func (i OspfMap) ToOspfMapOutputWithContext(ctx context.Context) OspfMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfMapOutput)
}

type OspfOutput struct{ *pulumi.OutputState }

func (OspfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ospf)(nil)).Elem()
}

func (o OspfOutput) ToOspfOutput() OspfOutput {
	return o
}

func (o OspfOutput) ToOspfOutputWithContext(ctx context.Context) OspfOutput {
	return o
}

// Area border router type. Valid values: `cisco`, `ibm`, `shortcut`, `standard`.
func (o OspfOutput) AbrType() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.AbrType }).(pulumi.StringOutput)
}

// OSPF area configuration. The structure of `area` block is documented below.
func (o OspfOutput) Areas() OspfAreaArrayOutput {
	return o.ApplyT(func(v *Ospf) OspfAreaArrayOutput { return v.Areas }).(OspfAreaArrayOutput)
}

// Reference bandwidth in terms of megabits per second.
func (o OspfOutput) AutoCostRefBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf) pulumi.IntOutput { return v.AutoCostRefBandwidth }).(pulumi.IntOutput)
}

// Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
func (o OspfOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.Bfd }).(pulumi.StringOutput)
}

// Enable/disable database overflow. Valid values: `enable`, `disable`.
func (o OspfOutput) DatabaseOverflow() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.DatabaseOverflow }).(pulumi.StringOutput)
}

// Database overflow maximum LSAs.
func (o OspfOutput) DatabaseOverflowMaxLsas() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf) pulumi.IntOutput { return v.DatabaseOverflowMaxLsas }).(pulumi.IntOutput)
}

// Database overflow time to recover (sec).
func (o OspfOutput) DatabaseOverflowTimeToRecover() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf) pulumi.IntOutput { return v.DatabaseOverflowTimeToRecover }).(pulumi.IntOutput)
}

// Default information metric.
func (o OspfOutput) DefaultInformationMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf) pulumi.IntOutput { return v.DefaultInformationMetric }).(pulumi.IntOutput)
}

// Default information metric type. Valid values: `1`, `2`.
func (o OspfOutput) DefaultInformationMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.DefaultInformationMetricType }).(pulumi.StringOutput)
}

// Enable/disable generation of default route. Valid values: `enable`, `always`, `disable`.
func (o OspfOutput) DefaultInformationOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.DefaultInformationOriginate }).(pulumi.StringOutput)
}

// Default information route map.
func (o OspfOutput) DefaultInformationRouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.DefaultInformationRouteMap }).(pulumi.StringOutput)
}

// Default metric of redistribute routes.
func (o OspfOutput) DefaultMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf) pulumi.IntOutput { return v.DefaultMetric }).(pulumi.IntOutput)
}

// Distance of the route.
func (o OspfOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf) pulumi.IntOutput { return v.Distance }).(pulumi.IntOutput)
}

// Administrative external distance.
func (o OspfOutput) DistanceExternal() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf) pulumi.IntOutput { return v.DistanceExternal }).(pulumi.IntOutput)
}

// Administrative inter-area distance.
func (o OspfOutput) DistanceInterArea() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf) pulumi.IntOutput { return v.DistanceInterArea }).(pulumi.IntOutput)
}

// Administrative intra-area distance.
func (o OspfOutput) DistanceIntraArea() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf) pulumi.IntOutput { return v.DistanceIntraArea }).(pulumi.IntOutput)
}

// Filter incoming routes.
func (o OspfOutput) DistributeListIn() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.DistributeListIn }).(pulumi.StringOutput)
}

// Distribute list configuration. The structure of `distributeList` block is documented below.
func (o OspfOutput) DistributeLists() OspfDistributeListArrayOutput {
	return o.ApplyT(func(v *Ospf) OspfDistributeListArrayOutput { return v.DistributeLists }).(OspfDistributeListArrayOutput)
}

// Filter incoming external routes by route-map.
func (o OspfOutput) DistributeRouteMapIn() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.DistributeRouteMapIn }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o OspfOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o OspfOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Enable logging of OSPF neighbour's changes Valid values: `enable`, `disable`.
func (o OspfOutput) LogNeighbourChanges() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.LogNeighbourChanges }).(pulumi.StringOutput)
}

// OSPF neighbor configuration are used when OSPF runs on non-broadcast media The structure of `neighbor` block is documented below.
func (o OspfOutput) Neighbors() OspfNeighborArrayOutput {
	return o.ApplyT(func(v *Ospf) OspfNeighborArrayOutput { return v.Neighbors }).(OspfNeighborArrayOutput)
}

// OSPF network configuration. The structure of `network` block is documented below.
func (o OspfOutput) Networks() OspfNetworkArrayOutput {
	return o.ApplyT(func(v *Ospf) OspfNetworkArrayOutput { return v.Networks }).(OspfNetworkArrayOutput)
}

// OSPF interface configuration. The structure of `ospfInterface` block is documented below.
func (o OspfOutput) OspfInterfaces() OspfOspfInterfaceArrayOutput {
	return o.ApplyT(func(v *Ospf) OspfOspfInterfaceArrayOutput { return v.OspfInterfaces }).(OspfOspfInterfaceArrayOutput)
}

// Passive interface configuration. The structure of `passiveInterface` block is documented below.
func (o OspfOutput) PassiveInterfaces() OspfPassiveInterfaceArrayOutput {
	return o.ApplyT(func(v *Ospf) OspfPassiveInterfaceArrayOutput { return v.PassiveInterfaces }).(OspfPassiveInterfaceArrayOutput)
}

// Redistribute configuration. The structure of `redistribute` block is documented below.
func (o OspfOutput) Redistributes() OspfRedistributeArrayOutput {
	return o.ApplyT(func(v *Ospf) OspfRedistributeArrayOutput { return v.Redistributes }).(OspfRedistributeArrayOutput)
}

// OSPF restart mode (graceful or LLS). Valid values: `none`, `lls`, `graceful-restart`.
func (o OspfOutput) RestartMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.RestartMode }).(pulumi.StringOutput)
}

// Enable/disable continuing graceful restart upon topology change. Valid values: `enable`, `disable`.
func (o OspfOutput) RestartOnTopologyChange() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.RestartOnTopologyChange }).(pulumi.StringOutput)
}

// Graceful restart period.
func (o OspfOutput) RestartPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *Ospf) pulumi.IntOutput { return v.RestartPeriod }).(pulumi.IntOutput)
}

// Enable/disable RFC1583 compatibility. Valid values: `enable`, `disable`.
func (o OspfOutput) Rfc1583Compatible() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.Rfc1583Compatible }).(pulumi.StringOutput)
}

// Router ID.
func (o OspfOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.RouterId }).(pulumi.StringOutput)
}

// SPF calculation frequency.
func (o OspfOutput) SpfTimers() pulumi.StringOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringOutput { return v.SpfTimers }).(pulumi.StringOutput)
}

// IP address summary configuration. The structure of `summaryAddress` block is documented below.
func (o OspfOutput) SummaryAddresses() OspfSummaryAddressArrayOutput {
	return o.ApplyT(func(v *Ospf) OspfSummaryAddressArrayOutput { return v.SummaryAddresses }).(OspfSummaryAddressArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o OspfOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ospf) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type OspfArrayOutput struct{ *pulumi.OutputState }

func (OspfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ospf)(nil)).Elem()
}

func (o OspfArrayOutput) ToOspfArrayOutput() OspfArrayOutput {
	return o
}

func (o OspfArrayOutput) ToOspfArrayOutputWithContext(ctx context.Context) OspfArrayOutput {
	return o
}

func (o OspfArrayOutput) Index(i pulumi.IntInput) OspfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ospf {
		return vs[0].([]*Ospf)[vs[1].(int)]
	}).(OspfOutput)
}

type OspfMapOutput struct{ *pulumi.OutputState }

func (OspfMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ospf)(nil)).Elem()
}

func (o OspfMapOutput) ToOspfMapOutput() OspfMapOutput {
	return o
}

func (o OspfMapOutput) ToOspfMapOutputWithContext(ctx context.Context) OspfMapOutput {
	return o
}

func (o OspfMapOutput) MapIndex(k pulumi.StringInput) OspfOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ospf {
		return vs[0].(map[string]*Ospf)[vs[1].(string)]
	}).(OspfOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OspfInput)(nil)).Elem(), &Ospf{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfArrayInput)(nil)).Elem(), OspfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfMapInput)(nil)).Elem(), OspfMap{})
	pulumi.RegisterOutputType(OspfOutput{})
	pulumi.RegisterOutputType(OspfArrayOutput{})
	pulumi.RegisterOutputType(OspfMapOutput{})
}
