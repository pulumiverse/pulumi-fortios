// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package report

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Report style configuration. Applies to FortiOS Version `<= 7.0.0`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/report"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := report.NewStyle(ctx, "trname", &report.StyleArgs{
//				BorderBottom: pulumi.String("\" none \""),
//				BorderLeft:   pulumi.String("\" none \""),
//				BorderRight:  pulumi.String("\" none \""),
//				BorderTop:    pulumi.String("\" none \""),
//				ColumnSpan:   pulumi.String("none"),
//				FontStyle:    pulumi.String("normal"),
//				FontWeight:   pulumi.String("normal"),
//				Options:      pulumi.String("font text color"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Report Style can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:report/style:Style labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:report/style:Style labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Style struct {
	pulumi.CustomResourceState

	// Alignment. Valid values: `left`, `center`, `right`, `justify`.
	Align pulumi.StringOutput `pulumi:"align"`
	// Background color.
	BgColor pulumi.StringOutput `pulumi:"bgColor"`
	// Border bottom.
	BorderBottom pulumi.StringOutput `pulumi:"borderBottom"`
	// Border left.
	BorderLeft pulumi.StringOutput `pulumi:"borderLeft"`
	// Border right.
	BorderRight pulumi.StringOutput `pulumi:"borderRight"`
	// Border top.
	BorderTop pulumi.StringOutput `pulumi:"borderTop"`
	// Column gap.
	ColumnGap pulumi.StringOutput `pulumi:"columnGap"`
	// Column span. Valid values: `none`, `all`.
	ColumnSpan pulumi.StringOutput `pulumi:"columnSpan"`
	// Foreground color.
	FgColor pulumi.StringOutput `pulumi:"fgColor"`
	// Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
	FontFamily pulumi.StringOutput `pulumi:"fontFamily"`
	// Font size.
	FontSize pulumi.StringOutput `pulumi:"fontSize"`
	// Font style. Valid values: `normal`, `italic`.
	FontStyle pulumi.StringOutput `pulumi:"fontStyle"`
	// Font weight. Valid values: `normal`, `bold`.
	FontWeight pulumi.StringOutput `pulumi:"fontWeight"`
	// Height.
	Height pulumi.StringOutput `pulumi:"height"`
	// Text line height.
	LineHeight pulumi.StringOutput `pulumi:"lineHeight"`
	// Margin bottom.
	MarginBottom pulumi.StringOutput `pulumi:"marginBottom"`
	// Margin left.
	MarginLeft pulumi.StringOutput `pulumi:"marginLeft"`
	// Margin right.
	MarginRight pulumi.StringOutput `pulumi:"marginRight"`
	// Margin top.
	MarginTop pulumi.StringOutput `pulumi:"marginTop"`
	// Report style name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
	Options pulumi.StringOutput `pulumi:"options"`
	// Padding bottom.
	PaddingBottom pulumi.StringOutput `pulumi:"paddingBottom"`
	// Padding left.
	PaddingLeft pulumi.StringOutput `pulumi:"paddingLeft"`
	// Padding right.
	PaddingRight pulumi.StringOutput `pulumi:"paddingRight"`
	// Padding top.
	PaddingTop pulumi.StringOutput `pulumi:"paddingTop"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
	// Width.
	Width pulumi.StringOutput `pulumi:"width"`
}

// NewStyle registers a new resource with the given unique name, arguments, and options.
func NewStyle(ctx *pulumi.Context,
	name string, args *StyleArgs, opts ...pulumi.ResourceOption) (*Style, error) {
	if args == nil {
		args = &StyleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Style
	err := ctx.RegisterResource("fortios:report/style:Style", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStyle gets an existing Style resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStyle(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StyleState, opts ...pulumi.ResourceOption) (*Style, error) {
	var resource Style
	err := ctx.ReadResource("fortios:report/style:Style", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Style resources.
type styleState struct {
	// Alignment. Valid values: `left`, `center`, `right`, `justify`.
	Align *string `pulumi:"align"`
	// Background color.
	BgColor *string `pulumi:"bgColor"`
	// Border bottom.
	BorderBottom *string `pulumi:"borderBottom"`
	// Border left.
	BorderLeft *string `pulumi:"borderLeft"`
	// Border right.
	BorderRight *string `pulumi:"borderRight"`
	// Border top.
	BorderTop *string `pulumi:"borderTop"`
	// Column gap.
	ColumnGap *string `pulumi:"columnGap"`
	// Column span. Valid values: `none`, `all`.
	ColumnSpan *string `pulumi:"columnSpan"`
	// Foreground color.
	FgColor *string `pulumi:"fgColor"`
	// Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
	FontFamily *string `pulumi:"fontFamily"`
	// Font size.
	FontSize *string `pulumi:"fontSize"`
	// Font style. Valid values: `normal`, `italic`.
	FontStyle *string `pulumi:"fontStyle"`
	// Font weight. Valid values: `normal`, `bold`.
	FontWeight *string `pulumi:"fontWeight"`
	// Height.
	Height *string `pulumi:"height"`
	// Text line height.
	LineHeight *string `pulumi:"lineHeight"`
	// Margin bottom.
	MarginBottom *string `pulumi:"marginBottom"`
	// Margin left.
	MarginLeft *string `pulumi:"marginLeft"`
	// Margin right.
	MarginRight *string `pulumi:"marginRight"`
	// Margin top.
	MarginTop *string `pulumi:"marginTop"`
	// Report style name.
	Name *string `pulumi:"name"`
	// Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
	Options *string `pulumi:"options"`
	// Padding bottom.
	PaddingBottom *string `pulumi:"paddingBottom"`
	// Padding left.
	PaddingLeft *string `pulumi:"paddingLeft"`
	// Padding right.
	PaddingRight *string `pulumi:"paddingRight"`
	// Padding top.
	PaddingTop *string `pulumi:"paddingTop"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Width.
	Width *string `pulumi:"width"`
}

type StyleState struct {
	// Alignment. Valid values: `left`, `center`, `right`, `justify`.
	Align pulumi.StringPtrInput
	// Background color.
	BgColor pulumi.StringPtrInput
	// Border bottom.
	BorderBottom pulumi.StringPtrInput
	// Border left.
	BorderLeft pulumi.StringPtrInput
	// Border right.
	BorderRight pulumi.StringPtrInput
	// Border top.
	BorderTop pulumi.StringPtrInput
	// Column gap.
	ColumnGap pulumi.StringPtrInput
	// Column span. Valid values: `none`, `all`.
	ColumnSpan pulumi.StringPtrInput
	// Foreground color.
	FgColor pulumi.StringPtrInput
	// Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
	FontFamily pulumi.StringPtrInput
	// Font size.
	FontSize pulumi.StringPtrInput
	// Font style. Valid values: `normal`, `italic`.
	FontStyle pulumi.StringPtrInput
	// Font weight. Valid values: `normal`, `bold`.
	FontWeight pulumi.StringPtrInput
	// Height.
	Height pulumi.StringPtrInput
	// Text line height.
	LineHeight pulumi.StringPtrInput
	// Margin bottom.
	MarginBottom pulumi.StringPtrInput
	// Margin left.
	MarginLeft pulumi.StringPtrInput
	// Margin right.
	MarginRight pulumi.StringPtrInput
	// Margin top.
	MarginTop pulumi.StringPtrInput
	// Report style name.
	Name pulumi.StringPtrInput
	// Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
	Options pulumi.StringPtrInput
	// Padding bottom.
	PaddingBottom pulumi.StringPtrInput
	// Padding left.
	PaddingLeft pulumi.StringPtrInput
	// Padding right.
	PaddingRight pulumi.StringPtrInput
	// Padding top.
	PaddingTop pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Width.
	Width pulumi.StringPtrInput
}

func (StyleState) ElementType() reflect.Type {
	return reflect.TypeOf((*styleState)(nil)).Elem()
}

type styleArgs struct {
	// Alignment. Valid values: `left`, `center`, `right`, `justify`.
	Align *string `pulumi:"align"`
	// Background color.
	BgColor *string `pulumi:"bgColor"`
	// Border bottom.
	BorderBottom *string `pulumi:"borderBottom"`
	// Border left.
	BorderLeft *string `pulumi:"borderLeft"`
	// Border right.
	BorderRight *string `pulumi:"borderRight"`
	// Border top.
	BorderTop *string `pulumi:"borderTop"`
	// Column gap.
	ColumnGap *string `pulumi:"columnGap"`
	// Column span. Valid values: `none`, `all`.
	ColumnSpan *string `pulumi:"columnSpan"`
	// Foreground color.
	FgColor *string `pulumi:"fgColor"`
	// Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
	FontFamily *string `pulumi:"fontFamily"`
	// Font size.
	FontSize *string `pulumi:"fontSize"`
	// Font style. Valid values: `normal`, `italic`.
	FontStyle *string `pulumi:"fontStyle"`
	// Font weight. Valid values: `normal`, `bold`.
	FontWeight *string `pulumi:"fontWeight"`
	// Height.
	Height *string `pulumi:"height"`
	// Text line height.
	LineHeight *string `pulumi:"lineHeight"`
	// Margin bottom.
	MarginBottom *string `pulumi:"marginBottom"`
	// Margin left.
	MarginLeft *string `pulumi:"marginLeft"`
	// Margin right.
	MarginRight *string `pulumi:"marginRight"`
	// Margin top.
	MarginTop *string `pulumi:"marginTop"`
	// Report style name.
	Name *string `pulumi:"name"`
	// Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
	Options *string `pulumi:"options"`
	// Padding bottom.
	PaddingBottom *string `pulumi:"paddingBottom"`
	// Padding left.
	PaddingLeft *string `pulumi:"paddingLeft"`
	// Padding right.
	PaddingRight *string `pulumi:"paddingRight"`
	// Padding top.
	PaddingTop *string `pulumi:"paddingTop"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Width.
	Width *string `pulumi:"width"`
}

// The set of arguments for constructing a Style resource.
type StyleArgs struct {
	// Alignment. Valid values: `left`, `center`, `right`, `justify`.
	Align pulumi.StringPtrInput
	// Background color.
	BgColor pulumi.StringPtrInput
	// Border bottom.
	BorderBottom pulumi.StringPtrInput
	// Border left.
	BorderLeft pulumi.StringPtrInput
	// Border right.
	BorderRight pulumi.StringPtrInput
	// Border top.
	BorderTop pulumi.StringPtrInput
	// Column gap.
	ColumnGap pulumi.StringPtrInput
	// Column span. Valid values: `none`, `all`.
	ColumnSpan pulumi.StringPtrInput
	// Foreground color.
	FgColor pulumi.StringPtrInput
	// Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
	FontFamily pulumi.StringPtrInput
	// Font size.
	FontSize pulumi.StringPtrInput
	// Font style. Valid values: `normal`, `italic`.
	FontStyle pulumi.StringPtrInput
	// Font weight. Valid values: `normal`, `bold`.
	FontWeight pulumi.StringPtrInput
	// Height.
	Height pulumi.StringPtrInput
	// Text line height.
	LineHeight pulumi.StringPtrInput
	// Margin bottom.
	MarginBottom pulumi.StringPtrInput
	// Margin left.
	MarginLeft pulumi.StringPtrInput
	// Margin right.
	MarginRight pulumi.StringPtrInput
	// Margin top.
	MarginTop pulumi.StringPtrInput
	// Report style name.
	Name pulumi.StringPtrInput
	// Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
	Options pulumi.StringPtrInput
	// Padding bottom.
	PaddingBottom pulumi.StringPtrInput
	// Padding left.
	PaddingLeft pulumi.StringPtrInput
	// Padding right.
	PaddingRight pulumi.StringPtrInput
	// Padding top.
	PaddingTop pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Width.
	Width pulumi.StringPtrInput
}

func (StyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*styleArgs)(nil)).Elem()
}

type StyleInput interface {
	pulumi.Input

	ToStyleOutput() StyleOutput
	ToStyleOutputWithContext(ctx context.Context) StyleOutput
}

func (*Style) ElementType() reflect.Type {
	return reflect.TypeOf((**Style)(nil)).Elem()
}

func (i *Style) ToStyleOutput() StyleOutput {
	return i.ToStyleOutputWithContext(context.Background())
}

func (i *Style) ToStyleOutputWithContext(ctx context.Context) StyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StyleOutput)
}

// StyleArrayInput is an input type that accepts StyleArray and StyleArrayOutput values.
// You can construct a concrete instance of `StyleArrayInput` via:
//
//	StyleArray{ StyleArgs{...} }
type StyleArrayInput interface {
	pulumi.Input

	ToStyleArrayOutput() StyleArrayOutput
	ToStyleArrayOutputWithContext(context.Context) StyleArrayOutput
}

type StyleArray []StyleInput

func (StyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Style)(nil)).Elem()
}

func (i StyleArray) ToStyleArrayOutput() StyleArrayOutput {
	return i.ToStyleArrayOutputWithContext(context.Background())
}

func (i StyleArray) ToStyleArrayOutputWithContext(ctx context.Context) StyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StyleArrayOutput)
}

// StyleMapInput is an input type that accepts StyleMap and StyleMapOutput values.
// You can construct a concrete instance of `StyleMapInput` via:
//
//	StyleMap{ "key": StyleArgs{...} }
type StyleMapInput interface {
	pulumi.Input

	ToStyleMapOutput() StyleMapOutput
	ToStyleMapOutputWithContext(context.Context) StyleMapOutput
}

type StyleMap map[string]StyleInput

func (StyleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Style)(nil)).Elem()
}

func (i StyleMap) ToStyleMapOutput() StyleMapOutput {
	return i.ToStyleMapOutputWithContext(context.Background())
}

func (i StyleMap) ToStyleMapOutputWithContext(ctx context.Context) StyleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StyleMapOutput)
}

type StyleOutput struct{ *pulumi.OutputState }

func (StyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Style)(nil)).Elem()
}

func (o StyleOutput) ToStyleOutput() StyleOutput {
	return o
}

func (o StyleOutput) ToStyleOutputWithContext(ctx context.Context) StyleOutput {
	return o
}

// Alignment. Valid values: `left`, `center`, `right`, `justify`.
func (o StyleOutput) Align() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.Align }).(pulumi.StringOutput)
}

// Background color.
func (o StyleOutput) BgColor() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.BgColor }).(pulumi.StringOutput)
}

// Border bottom.
func (o StyleOutput) BorderBottom() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.BorderBottom }).(pulumi.StringOutput)
}

// Border left.
func (o StyleOutput) BorderLeft() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.BorderLeft }).(pulumi.StringOutput)
}

// Border right.
func (o StyleOutput) BorderRight() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.BorderRight }).(pulumi.StringOutput)
}

// Border top.
func (o StyleOutput) BorderTop() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.BorderTop }).(pulumi.StringOutput)
}

// Column gap.
func (o StyleOutput) ColumnGap() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.ColumnGap }).(pulumi.StringOutput)
}

// Column span. Valid values: `none`, `all`.
func (o StyleOutput) ColumnSpan() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.ColumnSpan }).(pulumi.StringOutput)
}

// Foreground color.
func (o StyleOutput) FgColor() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.FgColor }).(pulumi.StringOutput)
}

// Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
func (o StyleOutput) FontFamily() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.FontFamily }).(pulumi.StringOutput)
}

// Font size.
func (o StyleOutput) FontSize() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.FontSize }).(pulumi.StringOutput)
}

// Font style. Valid values: `normal`, `italic`.
func (o StyleOutput) FontStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.FontStyle }).(pulumi.StringOutput)
}

// Font weight. Valid values: `normal`, `bold`.
func (o StyleOutput) FontWeight() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.FontWeight }).(pulumi.StringOutput)
}

// Height.
func (o StyleOutput) Height() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.Height }).(pulumi.StringOutput)
}

// Text line height.
func (o StyleOutput) LineHeight() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.LineHeight }).(pulumi.StringOutput)
}

// Margin bottom.
func (o StyleOutput) MarginBottom() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.MarginBottom }).(pulumi.StringOutput)
}

// Margin left.
func (o StyleOutput) MarginLeft() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.MarginLeft }).(pulumi.StringOutput)
}

// Margin right.
func (o StyleOutput) MarginRight() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.MarginRight }).(pulumi.StringOutput)
}

// Margin top.
func (o StyleOutput) MarginTop() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.MarginTop }).(pulumi.StringOutput)
}

// Report style name.
func (o StyleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
func (o StyleOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.Options }).(pulumi.StringOutput)
}

// Padding bottom.
func (o StyleOutput) PaddingBottom() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.PaddingBottom }).(pulumi.StringOutput)
}

// Padding left.
func (o StyleOutput) PaddingLeft() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.PaddingLeft }).(pulumi.StringOutput)
}

// Padding right.
func (o StyleOutput) PaddingRight() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.PaddingRight }).(pulumi.StringOutput)
}

// Padding top.
func (o StyleOutput) PaddingTop() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.PaddingTop }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o StyleOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

// Width.
func (o StyleOutput) Width() pulumi.StringOutput {
	return o.ApplyT(func(v *Style) pulumi.StringOutput { return v.Width }).(pulumi.StringOutput)
}

type StyleArrayOutput struct{ *pulumi.OutputState }

func (StyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Style)(nil)).Elem()
}

func (o StyleArrayOutput) ToStyleArrayOutput() StyleArrayOutput {
	return o
}

func (o StyleArrayOutput) ToStyleArrayOutputWithContext(ctx context.Context) StyleArrayOutput {
	return o
}

func (o StyleArrayOutput) Index(i pulumi.IntInput) StyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Style {
		return vs[0].([]*Style)[vs[1].(int)]
	}).(StyleOutput)
}

type StyleMapOutput struct{ *pulumi.OutputState }

func (StyleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Style)(nil)).Elem()
}

func (o StyleMapOutput) ToStyleMapOutput() StyleMapOutput {
	return o
}

func (o StyleMapOutput) ToStyleMapOutputWithContext(ctx context.Context) StyleMapOutput {
	return o
}

func (o StyleMapOutput) MapIndex(k pulumi.StringInput) StyleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Style {
		return vs[0].(map[string]*Style)[vs[1].(string)]
	}).(StyleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StyleInput)(nil)).Elem(), &Style{})
	pulumi.RegisterInputType(reflect.TypeOf((*StyleArrayInput)(nil)).Elem(), StyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StyleMapInput)(nil)).Elem(), StyleMap{})
	pulumi.RegisterOutputType(StyleOutput{})
	pulumi.RegisterOutputType(StyleArrayOutput{})
	pulumi.RegisterOutputType(StyleMapOutput{})
}
