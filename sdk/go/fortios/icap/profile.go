// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package icap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure ICAP profiles.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/icap"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := icap.NewProfile(ctx, "trname", &icap.ProfileArgs{
//				IcapHeaders: icap.ProfileIcapHeaderArray{
//					&icap.ProfileIcapHeaderArgs{
//						Base64Encoding: pulumi.String("disable"),
//						Content:        pulumi.String("$user"),
//						Name:           pulumi.String("X-Authenticated-User"),
//					},
//				},
//				Methods:                pulumi.String("delete get head options post put trace other"),
//				Request:                pulumi.String("disable"),
//				RequestFailure:         pulumi.String("error"),
//				Response:               pulumi.String("disable"),
//				ResponseFailure:        pulumi.String("error"),
//				ResponseReqHdr:         pulumi.String("disable"),
//				StreamingContentBypass: pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Icap Profile can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:icap/profile:Profile labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:icap/profile:Profile labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Profile struct {
	pulumi.CustomResourceState

	// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
	ChunkEncap pulumi.StringOutput `pulumi:"chunkEncap"`
	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable ICAP extension features. Valid values: `scan-progress`.
	ExtensionFeature pulumi.StringOutput `pulumi:"extensionFeature"`
	// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
	FileTransfer pulumi.StringOutput `pulumi:"fileTransfer"`
	// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
	FileTransferFailure pulumi.StringOutput `pulumi:"fileTransferFailure"`
	// Path component of the ICAP URI that identifies the file transfer processing service.
	FileTransferPath pulumi.StringOutput `pulumi:"fileTransferPath"`
	// ICAP server to use for a file transfer.
	FileTransferServer pulumi.StringOutput `pulumi:"fileTransferServer"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
	IcapBlockLog pulumi.StringOutput `pulumi:"icapBlockLog"`
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders ProfileIcapHeaderArrayOutput `pulumi:"icapHeaders"`
	// The allowed HTTP methods that will be sent to ICAP server for further processing.
	Methods pulumi.StringOutput `pulumi:"methods"`
	// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
	N204Response pulumi.StringOutput `pulumi:"n204Response"`
	// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
	N204SizeLimit pulumi.IntOutput `pulumi:"n204SizeLimit"`
	// ICAP profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview pulumi.StringOutput `pulumi:"preview"`
	// Preview data length to be sent to ICAP server.
	PreviewDataLength pulumi.IntOutput `pulumi:"previewDataLength"`
	// Replacement message group.
	ReplacemsgGroup pulumi.StringOutput `pulumi:"replacemsgGroup"`
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request pulumi.StringOutput `pulumi:"request"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure pulumi.StringOutput `pulumi:"requestFailure"`
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath pulumi.StringOutput `pulumi:"requestPath"`
	// ICAP server to use for an HTTP request.
	RequestServer pulumi.StringOutput `pulumi:"requestServer"`
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction pulumi.StringOutput `pulumi:"respmodDefaultAction"`
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules ProfileRespmodForwardRuleArrayOutput `pulumi:"respmodForwardRules"`
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response pulumi.StringOutput `pulumi:"response"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure pulumi.StringOutput `pulumi:"responseFailure"`
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath pulumi.StringOutput `pulumi:"responsePath"`
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr pulumi.StringOutput `pulumi:"responseReqHdr"`
	// ICAP server to use for an HTTP response.
	ResponseServer pulumi.StringOutput `pulumi:"responseServer"`
	// Scan progress interval value.
	ScanProgressInterval pulumi.IntOutput `pulumi:"scanProgressInterval"`
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass pulumi.StringOutput `pulumi:"streamingContentBypass"`
	// Time (in seconds) that ICAP client waits for the response from ICAP server.
	Timeout pulumi.IntOutput `pulumi:"timeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewProfile registers a new resource with the given unique name, arguments, and options.
func NewProfile(ctx *pulumi.Context,
	name string, args *ProfileArgs, opts ...pulumi.ResourceOption) (*Profile, error) {
	if args == nil {
		args = &ProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Profile
	err := ctx.RegisterResource("fortios:icap/profile:Profile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfile gets an existing Profile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileState, opts ...pulumi.ResourceOption) (*Profile, error) {
	var resource Profile
	err := ctx.ReadResource("fortios:icap/profile:Profile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Profile resources.
type profileState struct {
	// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
	ChunkEncap *string `pulumi:"chunkEncap"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable ICAP extension features. Valid values: `scan-progress`.
	ExtensionFeature *string `pulumi:"extensionFeature"`
	// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
	FileTransfer *string `pulumi:"fileTransfer"`
	// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
	FileTransferFailure *string `pulumi:"fileTransferFailure"`
	// Path component of the ICAP URI that identifies the file transfer processing service.
	FileTransferPath *string `pulumi:"fileTransferPath"`
	// ICAP server to use for a file transfer.
	FileTransferServer *string `pulumi:"fileTransferServer"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
	IcapBlockLog *string `pulumi:"icapBlockLog"`
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders []ProfileIcapHeader `pulumi:"icapHeaders"`
	// The allowed HTTP methods that will be sent to ICAP server for further processing.
	Methods *string `pulumi:"methods"`
	// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
	N204Response *string `pulumi:"n204Response"`
	// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
	N204SizeLimit *int `pulumi:"n204SizeLimit"`
	// ICAP profile name.
	Name *string `pulumi:"name"`
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview *string `pulumi:"preview"`
	// Preview data length to be sent to ICAP server.
	PreviewDataLength *int `pulumi:"previewDataLength"`
	// Replacement message group.
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request *string `pulumi:"request"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure *string `pulumi:"requestFailure"`
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath *string `pulumi:"requestPath"`
	// ICAP server to use for an HTTP request.
	RequestServer *string `pulumi:"requestServer"`
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction *string `pulumi:"respmodDefaultAction"`
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules []ProfileRespmodForwardRule `pulumi:"respmodForwardRules"`
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response *string `pulumi:"response"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure *string `pulumi:"responseFailure"`
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath *string `pulumi:"responsePath"`
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr *string `pulumi:"responseReqHdr"`
	// ICAP server to use for an HTTP response.
	ResponseServer *string `pulumi:"responseServer"`
	// Scan progress interval value.
	ScanProgressInterval *int `pulumi:"scanProgressInterval"`
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass *string `pulumi:"streamingContentBypass"`
	// Time (in seconds) that ICAP client waits for the response from ICAP server.
	Timeout *int `pulumi:"timeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ProfileState struct {
	// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
	ChunkEncap pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable ICAP extension features. Valid values: `scan-progress`.
	ExtensionFeature pulumi.StringPtrInput
	// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
	FileTransfer pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
	FileTransferFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the file transfer processing service.
	FileTransferPath pulumi.StringPtrInput
	// ICAP server to use for a file transfer.
	FileTransferServer pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
	IcapBlockLog pulumi.StringPtrInput
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders ProfileIcapHeaderArrayInput
	// The allowed HTTP methods that will be sent to ICAP server for further processing.
	Methods pulumi.StringPtrInput
	// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
	N204Response pulumi.StringPtrInput
	// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
	N204SizeLimit pulumi.IntPtrInput
	// ICAP profile name.
	Name pulumi.StringPtrInput
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview pulumi.StringPtrInput
	// Preview data length to be sent to ICAP server.
	PreviewDataLength pulumi.IntPtrInput
	// Replacement message group.
	ReplacemsgGroup pulumi.StringPtrInput
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath pulumi.StringPtrInput
	// ICAP server to use for an HTTP request.
	RequestServer pulumi.StringPtrInput
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction pulumi.StringPtrInput
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules ProfileRespmodForwardRuleArrayInput
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath pulumi.StringPtrInput
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr pulumi.StringPtrInput
	// ICAP server to use for an HTTP response.
	ResponseServer pulumi.StringPtrInput
	// Scan progress interval value.
	ScanProgressInterval pulumi.IntPtrInput
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass pulumi.StringPtrInput
	// Time (in seconds) that ICAP client waits for the response from ICAP server.
	Timeout pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileState)(nil)).Elem()
}

type profileArgs struct {
	// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
	ChunkEncap *string `pulumi:"chunkEncap"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable ICAP extension features. Valid values: `scan-progress`.
	ExtensionFeature *string `pulumi:"extensionFeature"`
	// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
	FileTransfer *string `pulumi:"fileTransfer"`
	// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
	FileTransferFailure *string `pulumi:"fileTransferFailure"`
	// Path component of the ICAP URI that identifies the file transfer processing service.
	FileTransferPath *string `pulumi:"fileTransferPath"`
	// ICAP server to use for a file transfer.
	FileTransferServer *string `pulumi:"fileTransferServer"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
	IcapBlockLog *string `pulumi:"icapBlockLog"`
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders []ProfileIcapHeader `pulumi:"icapHeaders"`
	// The allowed HTTP methods that will be sent to ICAP server for further processing.
	Methods *string `pulumi:"methods"`
	// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
	N204Response *string `pulumi:"n204Response"`
	// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
	N204SizeLimit *int `pulumi:"n204SizeLimit"`
	// ICAP profile name.
	Name *string `pulumi:"name"`
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview *string `pulumi:"preview"`
	// Preview data length to be sent to ICAP server.
	PreviewDataLength *int `pulumi:"previewDataLength"`
	// Replacement message group.
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request *string `pulumi:"request"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure *string `pulumi:"requestFailure"`
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath *string `pulumi:"requestPath"`
	// ICAP server to use for an HTTP request.
	RequestServer *string `pulumi:"requestServer"`
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction *string `pulumi:"respmodDefaultAction"`
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules []ProfileRespmodForwardRule `pulumi:"respmodForwardRules"`
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response *string `pulumi:"response"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure *string `pulumi:"responseFailure"`
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath *string `pulumi:"responsePath"`
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr *string `pulumi:"responseReqHdr"`
	// ICAP server to use for an HTTP response.
	ResponseServer *string `pulumi:"responseServer"`
	// Scan progress interval value.
	ScanProgressInterval *int `pulumi:"scanProgressInterval"`
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass *string `pulumi:"streamingContentBypass"`
	// Time (in seconds) that ICAP client waits for the response from ICAP server.
	Timeout *int `pulumi:"timeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Profile resource.
type ProfileArgs struct {
	// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
	ChunkEncap pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable ICAP extension features. Valid values: `scan-progress`.
	ExtensionFeature pulumi.StringPtrInput
	// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
	FileTransfer pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
	FileTransferFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the file transfer processing service.
	FileTransferPath pulumi.StringPtrInput
	// ICAP server to use for a file transfer.
	FileTransferServer pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
	IcapBlockLog pulumi.StringPtrInput
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders ProfileIcapHeaderArrayInput
	// The allowed HTTP methods that will be sent to ICAP server for further processing.
	Methods pulumi.StringPtrInput
	// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
	N204Response pulumi.StringPtrInput
	// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
	N204SizeLimit pulumi.IntPtrInput
	// ICAP profile name.
	Name pulumi.StringPtrInput
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview pulumi.StringPtrInput
	// Preview data length to be sent to ICAP server.
	PreviewDataLength pulumi.IntPtrInput
	// Replacement message group.
	ReplacemsgGroup pulumi.StringPtrInput
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath pulumi.StringPtrInput
	// ICAP server to use for an HTTP request.
	RequestServer pulumi.StringPtrInput
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction pulumi.StringPtrInput
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules ProfileRespmodForwardRuleArrayInput
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath pulumi.StringPtrInput
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr pulumi.StringPtrInput
	// ICAP server to use for an HTTP response.
	ResponseServer pulumi.StringPtrInput
	// Scan progress interval value.
	ScanProgressInterval pulumi.IntPtrInput
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass pulumi.StringPtrInput
	// Time (in seconds) that ICAP client waits for the response from ICAP server.
	Timeout pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileArgs)(nil)).Elem()
}

type ProfileInput interface {
	pulumi.Input

	ToProfileOutput() ProfileOutput
	ToProfileOutputWithContext(ctx context.Context) ProfileOutput
}

func (*Profile) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (i *Profile) ToProfileOutput() ProfileOutput {
	return i.ToProfileOutputWithContext(context.Background())
}

func (i *Profile) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOutput)
}

// ProfileArrayInput is an input type that accepts ProfileArray and ProfileArrayOutput values.
// You can construct a concrete instance of `ProfileArrayInput` via:
//
//	ProfileArray{ ProfileArgs{...} }
type ProfileArrayInput interface {
	pulumi.Input

	ToProfileArrayOutput() ProfileArrayOutput
	ToProfileArrayOutputWithContext(context.Context) ProfileArrayOutput
}

type ProfileArray []ProfileInput

func (ProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (i ProfileArray) ToProfileArrayOutput() ProfileArrayOutput {
	return i.ToProfileArrayOutputWithContext(context.Background())
}

func (i ProfileArray) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileArrayOutput)
}

// ProfileMapInput is an input type that accepts ProfileMap and ProfileMapOutput values.
// You can construct a concrete instance of `ProfileMapInput` via:
//
//	ProfileMap{ "key": ProfileArgs{...} }
type ProfileMapInput interface {
	pulumi.Input

	ToProfileMapOutput() ProfileMapOutput
	ToProfileMapOutputWithContext(context.Context) ProfileMapOutput
}

type ProfileMap map[string]ProfileInput

func (ProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (i ProfileMap) ToProfileMapOutput() ProfileMapOutput {
	return i.ToProfileMapOutputWithContext(context.Background())
}

func (i ProfileMap) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMapOutput)
}

type ProfileOutput struct{ *pulumi.OutputState }

func (ProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (o ProfileOutput) ToProfileOutput() ProfileOutput {
	return o
}

func (o ProfileOutput) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return o
}

// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
func (o ProfileOutput) ChunkEncap() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ChunkEncap }).(pulumi.StringOutput)
}

// Comment.
func (o ProfileOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o ProfileOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable ICAP extension features. Valid values: `scan-progress`.
func (o ProfileOutput) ExtensionFeature() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ExtensionFeature }).(pulumi.StringOutput)
}

// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
func (o ProfileOutput) FileTransfer() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FileTransfer }).(pulumi.StringOutput)
}

// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
func (o ProfileOutput) FileTransferFailure() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FileTransferFailure }).(pulumi.StringOutput)
}

// Path component of the ICAP URI that identifies the file transfer processing service.
func (o ProfileOutput) FileTransferPath() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FileTransferPath }).(pulumi.StringOutput)
}

// ICAP server to use for a file transfer.
func (o ProfileOutput) FileTransferServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FileTransferServer }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o ProfileOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
func (o ProfileOutput) IcapBlockLog() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.IcapBlockLog }).(pulumi.StringOutput)
}

// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
func (o ProfileOutput) IcapHeaders() ProfileIcapHeaderArrayOutput {
	return o.ApplyT(func(v *Profile) ProfileIcapHeaderArrayOutput { return v.IcapHeaders }).(ProfileIcapHeaderArrayOutput)
}

// The allowed HTTP methods that will be sent to ICAP server for further processing.
func (o ProfileOutput) Methods() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Methods }).(pulumi.StringOutput)
}

// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
func (o ProfileOutput) N204Response() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.N204Response }).(pulumi.StringOutput)
}

// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
func (o ProfileOutput) N204SizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntOutput { return v.N204SizeLimit }).(pulumi.IntOutput)
}

// ICAP profile name.
func (o ProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
func (o ProfileOutput) Preview() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Preview }).(pulumi.StringOutput)
}

// Preview data length to be sent to ICAP server.
func (o ProfileOutput) PreviewDataLength() pulumi.IntOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntOutput { return v.PreviewDataLength }).(pulumi.IntOutput)
}

// Replacement message group.
func (o ProfileOutput) ReplacemsgGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ReplacemsgGroup }).(pulumi.StringOutput)
}

// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
func (o ProfileOutput) Request() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Request }).(pulumi.StringOutput)
}

// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
func (o ProfileOutput) RequestFailure() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.RequestFailure }).(pulumi.StringOutput)
}

// Path component of the ICAP URI that identifies the HTTP request processing service.
func (o ProfileOutput) RequestPath() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.RequestPath }).(pulumi.StringOutput)
}

// ICAP server to use for an HTTP request.
func (o ProfileOutput) RequestServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.RequestServer }).(pulumi.StringOutput)
}

// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
func (o ProfileOutput) RespmodDefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.RespmodDefaultAction }).(pulumi.StringOutput)
}

// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
func (o ProfileOutput) RespmodForwardRules() ProfileRespmodForwardRuleArrayOutput {
	return o.ApplyT(func(v *Profile) ProfileRespmodForwardRuleArrayOutput { return v.RespmodForwardRules }).(ProfileRespmodForwardRuleArrayOutput)
}

// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
func (o ProfileOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Response }).(pulumi.StringOutput)
}

// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
func (o ProfileOutput) ResponseFailure() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ResponseFailure }).(pulumi.StringOutput)
}

// Path component of the ICAP URI that identifies the HTTP response processing service.
func (o ProfileOutput) ResponsePath() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ResponsePath }).(pulumi.StringOutput)
}

// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
func (o ProfileOutput) ResponseReqHdr() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ResponseReqHdr }).(pulumi.StringOutput)
}

// ICAP server to use for an HTTP response.
func (o ProfileOutput) ResponseServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ResponseServer }).(pulumi.StringOutput)
}

// Scan progress interval value.
func (o ProfileOutput) ScanProgressInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntOutput { return v.ScanProgressInterval }).(pulumi.IntOutput)
}

// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
func (o ProfileOutput) StreamingContentBypass() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.StreamingContentBypass }).(pulumi.StringOutput)
}

// Time (in seconds) that ICAP client waits for the response from ICAP server.
func (o ProfileOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Profile) pulumi.IntOutput { return v.Timeout }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ProfileArrayOutput struct{ *pulumi.OutputState }

func (ProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (o ProfileArrayOutput) ToProfileArrayOutput() ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) Index(i pulumi.IntInput) ProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].([]*Profile)[vs[1].(int)]
	}).(ProfileOutput)
}

type ProfileMapOutput struct{ *pulumi.OutputState }

func (ProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (o ProfileMapOutput) ToProfileMapOutput() ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) MapIndex(k pulumi.StringInput) ProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].(map[string]*Profile)[vs[1].(string)]
	}).(ProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileInput)(nil)).Elem(), &Profile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileArrayInput)(nil)).Elem(), ProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMapInput)(nil)).Elem(), ProfileMap{})
	pulumi.RegisterOutputType(ProfileOutput{})
	pulumi.RegisterOutputType(ProfileArrayOutput{})
	pulumi.RegisterOutputType(ProfileMapOutput{})
}
