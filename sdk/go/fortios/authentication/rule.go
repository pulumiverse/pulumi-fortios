// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authentication

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure Authentication Rules.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/authentication"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := authentication.NewRule(ctx, "trname", &authentication.RuleArgs{
//				IpBased:          pulumi.String("enable"),
//				Protocol:         pulumi.String("ftp"),
//				Status:           pulumi.String("enable"),
//				TransactionBased: pulumi.String("disable"),
//				WebAuthCookie:    pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Authentication Rule can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:authentication/rule:Rule labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:authentication/rule:Rule labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Rule struct {
	pulumi.CustomResourceState

	// Select an active authentication method.
	ActiveAuthMethod pulumi.StringOutput `pulumi:"activeAuthMethod"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Depth to allow CORS access (default = 3).
	CorsDepth pulumi.IntOutput `pulumi:"corsDepth"`
	// Enable/disable allowance of CORS access (default = disable). Valid values: `enable`, `disable`.
	CorsStateful pulumi.StringOutput `pulumi:"corsStateful"`
	// Select an IPv6 destination address from available options. Required for web proxy authentication. The structure of `dstaddr6` block is documented below.
	Dstaddr6s RuleDstaddr6ArrayOutput `pulumi:"dstaddr6s"`
	// Select an IPv4 destination address from available options. Required for web proxy authentication. The structure of `dstaddr` block is documented below.
	Dstaddrs RuleDstaddrArrayOutput `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Enable/disable IP-based authentication. Once a user authenticates all traffic from the IP address the user authenticated from is allowed. Valid values: `enable`, `disable`.
	IpBased pulumi.StringOutput `pulumi:"ipBased"`
	// Authentication rule name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Authentication is required for the selected protocol (default = http). Valid values: `http`, `ftp`, `socks`, `ssh`.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// Select an IPv6 source address. Required for web proxy authentication. The structure of `srcaddr6` block is documented below.
	Srcaddr6s RuleSrcaddr6ArrayOutput `pulumi:"srcaddr6s"`
	// Select an IPv4 source address from available options. Required for web proxy authentication. The structure of `srcaddr` block is documented below.
	Srcaddrs RuleSrcaddrArrayOutput `pulumi:"srcaddrs"`
	// Incoming (ingress) interface. The structure of `srcintf` block is documented below.
	Srcintfs RuleSrcintfArrayOutput `pulumi:"srcintfs"`
	// Select a single-sign on (SSO) authentication method.
	SsoAuthMethod pulumi.StringOutput `pulumi:"ssoAuthMethod"`
	// Enable/disable this authentication rule. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Enable/disable transaction based authentication (default = disable). Valid values: `enable`, `disable`.
	TransactionBased pulumi.StringOutput `pulumi:"transactionBased"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable Web authentication cookies (default = disable). Valid values: `enable`, `disable`.
	WebAuthCookie pulumi.StringOutput `pulumi:"webAuthCookie"`
	// Enable/disable web portal for proxy transparent policy (default = enable). Valid values: `enable`, `disable`.
	WebPortal pulumi.StringOutput `pulumi:"webPortal"`
}

// NewRule registers a new resource with the given unique name, arguments, and options.
func NewRule(ctx *pulumi.Context,
	name string, args *RuleArgs, opts ...pulumi.ResourceOption) (*Rule, error) {
	if args == nil {
		args = &RuleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Rule
	err := ctx.RegisterResource("fortios:authentication/rule:Rule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRule gets an existing Rule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleState, opts ...pulumi.ResourceOption) (*Rule, error) {
	var resource Rule
	err := ctx.ReadResource("fortios:authentication/rule:Rule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Rule resources.
type ruleState struct {
	// Select an active authentication method.
	ActiveAuthMethod *string `pulumi:"activeAuthMethod"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Depth to allow CORS access (default = 3).
	CorsDepth *int `pulumi:"corsDepth"`
	// Enable/disable allowance of CORS access (default = disable). Valid values: `enable`, `disable`.
	CorsStateful *string `pulumi:"corsStateful"`
	// Select an IPv6 destination address from available options. Required for web proxy authentication. The structure of `dstaddr6` block is documented below.
	Dstaddr6s []RuleDstaddr6 `pulumi:"dstaddr6s"`
	// Select an IPv4 destination address from available options. Required for web proxy authentication. The structure of `dstaddr` block is documented below.
	Dstaddrs []RuleDstaddr `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable IP-based authentication. Once a user authenticates all traffic from the IP address the user authenticated from is allowed. Valid values: `enable`, `disable`.
	IpBased *string `pulumi:"ipBased"`
	// Authentication rule name.
	Name *string `pulumi:"name"`
	// Authentication is required for the selected protocol (default = http). Valid values: `http`, `ftp`, `socks`, `ssh`.
	Protocol *string `pulumi:"protocol"`
	// Select an IPv6 source address. Required for web proxy authentication. The structure of `srcaddr6` block is documented below.
	Srcaddr6s []RuleSrcaddr6 `pulumi:"srcaddr6s"`
	// Select an IPv4 source address from available options. Required for web proxy authentication. The structure of `srcaddr` block is documented below.
	Srcaddrs []RuleSrcaddr `pulumi:"srcaddrs"`
	// Incoming (ingress) interface. The structure of `srcintf` block is documented below.
	Srcintfs []RuleSrcintf `pulumi:"srcintfs"`
	// Select a single-sign on (SSO) authentication method.
	SsoAuthMethod *string `pulumi:"ssoAuthMethod"`
	// Enable/disable this authentication rule. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable transaction based authentication (default = disable). Valid values: `enable`, `disable`.
	TransactionBased *string `pulumi:"transactionBased"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable Web authentication cookies (default = disable). Valid values: `enable`, `disable`.
	WebAuthCookie *string `pulumi:"webAuthCookie"`
	// Enable/disable web portal for proxy transparent policy (default = enable). Valid values: `enable`, `disable`.
	WebPortal *string `pulumi:"webPortal"`
}

type RuleState struct {
	// Select an active authentication method.
	ActiveAuthMethod pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Depth to allow CORS access (default = 3).
	CorsDepth pulumi.IntPtrInput
	// Enable/disable allowance of CORS access (default = disable). Valid values: `enable`, `disable`.
	CorsStateful pulumi.StringPtrInput
	// Select an IPv6 destination address from available options. Required for web proxy authentication. The structure of `dstaddr6` block is documented below.
	Dstaddr6s RuleDstaddr6ArrayInput
	// Select an IPv4 destination address from available options. Required for web proxy authentication. The structure of `dstaddr` block is documented below.
	Dstaddrs RuleDstaddrArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable IP-based authentication. Once a user authenticates all traffic from the IP address the user authenticated from is allowed. Valid values: `enable`, `disable`.
	IpBased pulumi.StringPtrInput
	// Authentication rule name.
	Name pulumi.StringPtrInput
	// Authentication is required for the selected protocol (default = http). Valid values: `http`, `ftp`, `socks`, `ssh`.
	Protocol pulumi.StringPtrInput
	// Select an IPv6 source address. Required for web proxy authentication. The structure of `srcaddr6` block is documented below.
	Srcaddr6s RuleSrcaddr6ArrayInput
	// Select an IPv4 source address from available options. Required for web proxy authentication. The structure of `srcaddr` block is documented below.
	Srcaddrs RuleSrcaddrArrayInput
	// Incoming (ingress) interface. The structure of `srcintf` block is documented below.
	Srcintfs RuleSrcintfArrayInput
	// Select a single-sign on (SSO) authentication method.
	SsoAuthMethod pulumi.StringPtrInput
	// Enable/disable this authentication rule. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Enable/disable transaction based authentication (default = disable). Valid values: `enable`, `disable`.
	TransactionBased pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable Web authentication cookies (default = disable). Valid values: `enable`, `disable`.
	WebAuthCookie pulumi.StringPtrInput
	// Enable/disable web portal for proxy transparent policy (default = enable). Valid values: `enable`, `disable`.
	WebPortal pulumi.StringPtrInput
}

func (RuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleState)(nil)).Elem()
}

type ruleArgs struct {
	// Select an active authentication method.
	ActiveAuthMethod *string `pulumi:"activeAuthMethod"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Depth to allow CORS access (default = 3).
	CorsDepth *int `pulumi:"corsDepth"`
	// Enable/disable allowance of CORS access (default = disable). Valid values: `enable`, `disable`.
	CorsStateful *string `pulumi:"corsStateful"`
	// Select an IPv6 destination address from available options. Required for web proxy authentication. The structure of `dstaddr6` block is documented below.
	Dstaddr6s []RuleDstaddr6 `pulumi:"dstaddr6s"`
	// Select an IPv4 destination address from available options. Required for web proxy authentication. The structure of `dstaddr` block is documented below.
	Dstaddrs []RuleDstaddr `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable IP-based authentication. Once a user authenticates all traffic from the IP address the user authenticated from is allowed. Valid values: `enable`, `disable`.
	IpBased *string `pulumi:"ipBased"`
	// Authentication rule name.
	Name *string `pulumi:"name"`
	// Authentication is required for the selected protocol (default = http). Valid values: `http`, `ftp`, `socks`, `ssh`.
	Protocol *string `pulumi:"protocol"`
	// Select an IPv6 source address. Required for web proxy authentication. The structure of `srcaddr6` block is documented below.
	Srcaddr6s []RuleSrcaddr6 `pulumi:"srcaddr6s"`
	// Select an IPv4 source address from available options. Required for web proxy authentication. The structure of `srcaddr` block is documented below.
	Srcaddrs []RuleSrcaddr `pulumi:"srcaddrs"`
	// Incoming (ingress) interface. The structure of `srcintf` block is documented below.
	Srcintfs []RuleSrcintf `pulumi:"srcintfs"`
	// Select a single-sign on (SSO) authentication method.
	SsoAuthMethod *string `pulumi:"ssoAuthMethod"`
	// Enable/disable this authentication rule. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable transaction based authentication (default = disable). Valid values: `enable`, `disable`.
	TransactionBased *string `pulumi:"transactionBased"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable Web authentication cookies (default = disable). Valid values: `enable`, `disable`.
	WebAuthCookie *string `pulumi:"webAuthCookie"`
	// Enable/disable web portal for proxy transparent policy (default = enable). Valid values: `enable`, `disable`.
	WebPortal *string `pulumi:"webPortal"`
}

// The set of arguments for constructing a Rule resource.
type RuleArgs struct {
	// Select an active authentication method.
	ActiveAuthMethod pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Depth to allow CORS access (default = 3).
	CorsDepth pulumi.IntPtrInput
	// Enable/disable allowance of CORS access (default = disable). Valid values: `enable`, `disable`.
	CorsStateful pulumi.StringPtrInput
	// Select an IPv6 destination address from available options. Required for web proxy authentication. The structure of `dstaddr6` block is documented below.
	Dstaddr6s RuleDstaddr6ArrayInput
	// Select an IPv4 destination address from available options. Required for web proxy authentication. The structure of `dstaddr` block is documented below.
	Dstaddrs RuleDstaddrArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable IP-based authentication. Once a user authenticates all traffic from the IP address the user authenticated from is allowed. Valid values: `enable`, `disable`.
	IpBased pulumi.StringPtrInput
	// Authentication rule name.
	Name pulumi.StringPtrInput
	// Authentication is required for the selected protocol (default = http). Valid values: `http`, `ftp`, `socks`, `ssh`.
	Protocol pulumi.StringPtrInput
	// Select an IPv6 source address. Required for web proxy authentication. The structure of `srcaddr6` block is documented below.
	Srcaddr6s RuleSrcaddr6ArrayInput
	// Select an IPv4 source address from available options. Required for web proxy authentication. The structure of `srcaddr` block is documented below.
	Srcaddrs RuleSrcaddrArrayInput
	// Incoming (ingress) interface. The structure of `srcintf` block is documented below.
	Srcintfs RuleSrcintfArrayInput
	// Select a single-sign on (SSO) authentication method.
	SsoAuthMethod pulumi.StringPtrInput
	// Enable/disable this authentication rule. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Enable/disable transaction based authentication (default = disable). Valid values: `enable`, `disable`.
	TransactionBased pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable Web authentication cookies (default = disable). Valid values: `enable`, `disable`.
	WebAuthCookie pulumi.StringPtrInput
	// Enable/disable web portal for proxy transparent policy (default = enable). Valid values: `enable`, `disable`.
	WebPortal pulumi.StringPtrInput
}

func (RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleArgs)(nil)).Elem()
}

type RuleInput interface {
	pulumi.Input

	ToRuleOutput() RuleOutput
	ToRuleOutputWithContext(ctx context.Context) RuleOutput
}

func (*Rule) ElementType() reflect.Type {
	return reflect.TypeOf((**Rule)(nil)).Elem()
}

func (i *Rule) ToRuleOutput() RuleOutput {
	return i.ToRuleOutputWithContext(context.Background())
}

func (i *Rule) ToRuleOutputWithContext(ctx context.Context) RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOutput)
}

// RuleArrayInput is an input type that accepts RuleArray and RuleArrayOutput values.
// You can construct a concrete instance of `RuleArrayInput` via:
//
//	RuleArray{ RuleArgs{...} }
type RuleArrayInput interface {
	pulumi.Input

	ToRuleArrayOutput() RuleArrayOutput
	ToRuleArrayOutputWithContext(context.Context) RuleArrayOutput
}

type RuleArray []RuleInput

func (RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Rule)(nil)).Elem()
}

func (i RuleArray) ToRuleArrayOutput() RuleArrayOutput {
	return i.ToRuleArrayOutputWithContext(context.Background())
}

func (i RuleArray) ToRuleArrayOutputWithContext(ctx context.Context) RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleArrayOutput)
}

// RuleMapInput is an input type that accepts RuleMap and RuleMapOutput values.
// You can construct a concrete instance of `RuleMapInput` via:
//
//	RuleMap{ "key": RuleArgs{...} }
type RuleMapInput interface {
	pulumi.Input

	ToRuleMapOutput() RuleMapOutput
	ToRuleMapOutputWithContext(context.Context) RuleMapOutput
}

type RuleMap map[string]RuleInput

func (RuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Rule)(nil)).Elem()
}

func (i RuleMap) ToRuleMapOutput() RuleMapOutput {
	return i.ToRuleMapOutputWithContext(context.Background())
}

func (i RuleMap) ToRuleMapOutputWithContext(ctx context.Context) RuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleMapOutput)
}

type RuleOutput struct{ *pulumi.OutputState }

func (RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Rule)(nil)).Elem()
}

func (o RuleOutput) ToRuleOutput() RuleOutput {
	return o
}

func (o RuleOutput) ToRuleOutputWithContext(ctx context.Context) RuleOutput {
	return o
}

// Select an active authentication method.
func (o RuleOutput) ActiveAuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.ActiveAuthMethod }).(pulumi.StringOutput)
}

// Comment.
func (o RuleOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// Depth to allow CORS access (default = 3).
func (o RuleOutput) CorsDepth() pulumi.IntOutput {
	return o.ApplyT(func(v *Rule) pulumi.IntOutput { return v.CorsDepth }).(pulumi.IntOutput)
}

// Enable/disable allowance of CORS access (default = disable). Valid values: `enable`, `disable`.
func (o RuleOutput) CorsStateful() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.CorsStateful }).(pulumi.StringOutput)
}

// Select an IPv6 destination address from available options. Required for web proxy authentication. The structure of `dstaddr6` block is documented below.
func (o RuleOutput) Dstaddr6s() RuleDstaddr6ArrayOutput {
	return o.ApplyT(func(v *Rule) RuleDstaddr6ArrayOutput { return v.Dstaddr6s }).(RuleDstaddr6ArrayOutput)
}

// Select an IPv4 destination address from available options. Required for web proxy authentication. The structure of `dstaddr` block is documented below.
func (o RuleOutput) Dstaddrs() RuleDstaddrArrayOutput {
	return o.ApplyT(func(v *Rule) RuleDstaddrArrayOutput { return v.Dstaddrs }).(RuleDstaddrArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o RuleOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o RuleOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Enable/disable IP-based authentication. Once a user authenticates all traffic from the IP address the user authenticated from is allowed. Valid values: `enable`, `disable`.
func (o RuleOutput) IpBased() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.IpBased }).(pulumi.StringOutput)
}

// Authentication rule name.
func (o RuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Authentication is required for the selected protocol (default = http). Valid values: `http`, `ftp`, `socks`, `ssh`.
func (o RuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// Select an IPv6 source address. Required for web proxy authentication. The structure of `srcaddr6` block is documented below.
func (o RuleOutput) Srcaddr6s() RuleSrcaddr6ArrayOutput {
	return o.ApplyT(func(v *Rule) RuleSrcaddr6ArrayOutput { return v.Srcaddr6s }).(RuleSrcaddr6ArrayOutput)
}

// Select an IPv4 source address from available options. Required for web proxy authentication. The structure of `srcaddr` block is documented below.
func (o RuleOutput) Srcaddrs() RuleSrcaddrArrayOutput {
	return o.ApplyT(func(v *Rule) RuleSrcaddrArrayOutput { return v.Srcaddrs }).(RuleSrcaddrArrayOutput)
}

// Incoming (ingress) interface. The structure of `srcintf` block is documented below.
func (o RuleOutput) Srcintfs() RuleSrcintfArrayOutput {
	return o.ApplyT(func(v *Rule) RuleSrcintfArrayOutput { return v.Srcintfs }).(RuleSrcintfArrayOutput)
}

// Select a single-sign on (SSO) authentication method.
func (o RuleOutput) SsoAuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.SsoAuthMethod }).(pulumi.StringOutput)
}

// Enable/disable this authentication rule. Valid values: `enable`, `disable`.
func (o RuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Enable/disable transaction based authentication (default = disable). Valid values: `enable`, `disable`.
func (o RuleOutput) TransactionBased() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.TransactionBased }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o RuleOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable Web authentication cookies (default = disable). Valid values: `enable`, `disable`.
func (o RuleOutput) WebAuthCookie() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.WebAuthCookie }).(pulumi.StringOutput)
}

// Enable/disable web portal for proxy transparent policy (default = enable). Valid values: `enable`, `disable`.
func (o RuleOutput) WebPortal() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.WebPortal }).(pulumi.StringOutput)
}

type RuleArrayOutput struct{ *pulumi.OutputState }

func (RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Rule)(nil)).Elem()
}

func (o RuleArrayOutput) ToRuleArrayOutput() RuleArrayOutput {
	return o
}

func (o RuleArrayOutput) ToRuleArrayOutputWithContext(ctx context.Context) RuleArrayOutput {
	return o
}

func (o RuleArrayOutput) Index(i pulumi.IntInput) RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Rule {
		return vs[0].([]*Rule)[vs[1].(int)]
	}).(RuleOutput)
}

type RuleMapOutput struct{ *pulumi.OutputState }

func (RuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Rule)(nil)).Elem()
}

func (o RuleMapOutput) ToRuleMapOutput() RuleMapOutput {
	return o
}

func (o RuleMapOutput) ToRuleMapOutputWithContext(ctx context.Context) RuleMapOutput {
	return o
}

func (o RuleMapOutput) MapIndex(k pulumi.StringInput) RuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Rule {
		return vs[0].(map[string]*Rule)[vs[1].(string)]
	}).(RuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RuleInput)(nil)).Elem(), &Rule{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleArrayInput)(nil)).Elem(), RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleMapInput)(nil)).Elem(), RuleMap{})
	pulumi.RegisterOutputType(RuleOutput{})
	pulumi.RegisterOutputType(RuleArrayOutput{})
	pulumi.RegisterOutputType(RuleMapOutput{})
}
