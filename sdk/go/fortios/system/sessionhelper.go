// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure session helper.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewSessionhelper(ctx, "trname", &system.SessionhelperArgs{
//				Fosid:    pulumi.Int(33),
//				Port:     pulumi.Int(3234),
//				Protocol: pulumi.Int(17),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System SessionHelper can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/sessionhelper:Sessionhelper labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/sessionhelper:Sessionhelper labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Sessionhelper struct {
	pulumi.CustomResourceState

	// Session helper ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Helper name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Protocol port.
	Port pulumi.IntOutput `pulumi:"port"`
	// Protocol number.
	Protocol pulumi.IntOutput `pulumi:"protocol"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSessionhelper registers a new resource with the given unique name, arguments, and options.
func NewSessionhelper(ctx *pulumi.Context,
	name string, args *SessionhelperArgs, opts ...pulumi.ResourceOption) (*Sessionhelper, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Sessionhelper
	err := ctx.RegisterResource("fortios:system/sessionhelper:Sessionhelper", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSessionhelper gets an existing Sessionhelper resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSessionhelper(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SessionhelperState, opts ...pulumi.ResourceOption) (*Sessionhelper, error) {
	var resource Sessionhelper
	err := ctx.ReadResource("fortios:system/sessionhelper:Sessionhelper", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Sessionhelper resources.
type sessionhelperState struct {
	// Session helper ID.
	Fosid *int `pulumi:"fosid"`
	// Helper name.
	Name *string `pulumi:"name"`
	// Protocol port.
	Port *int `pulumi:"port"`
	// Protocol number.
	Protocol *int `pulumi:"protocol"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SessionhelperState struct {
	// Session helper ID.
	Fosid pulumi.IntPtrInput
	// Helper name.
	Name pulumi.StringPtrInput
	// Protocol port.
	Port pulumi.IntPtrInput
	// Protocol number.
	Protocol pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SessionhelperState) ElementType() reflect.Type {
	return reflect.TypeOf((*sessionhelperState)(nil)).Elem()
}

type sessionhelperArgs struct {
	// Session helper ID.
	Fosid *int `pulumi:"fosid"`
	// Helper name.
	Name *string `pulumi:"name"`
	// Protocol port.
	Port int `pulumi:"port"`
	// Protocol number.
	Protocol int `pulumi:"protocol"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Sessionhelper resource.
type SessionhelperArgs struct {
	// Session helper ID.
	Fosid pulumi.IntPtrInput
	// Helper name.
	Name pulumi.StringPtrInput
	// Protocol port.
	Port pulumi.IntInput
	// Protocol number.
	Protocol pulumi.IntInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SessionhelperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sessionhelperArgs)(nil)).Elem()
}

type SessionhelperInput interface {
	pulumi.Input

	ToSessionhelperOutput() SessionhelperOutput
	ToSessionhelperOutputWithContext(ctx context.Context) SessionhelperOutput
}

func (*Sessionhelper) ElementType() reflect.Type {
	return reflect.TypeOf((**Sessionhelper)(nil)).Elem()
}

func (i *Sessionhelper) ToSessionhelperOutput() SessionhelperOutput {
	return i.ToSessionhelperOutputWithContext(context.Background())
}

func (i *Sessionhelper) ToSessionhelperOutputWithContext(ctx context.Context) SessionhelperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionhelperOutput)
}

// SessionhelperArrayInput is an input type that accepts SessionhelperArray and SessionhelperArrayOutput values.
// You can construct a concrete instance of `SessionhelperArrayInput` via:
//
//	SessionhelperArray{ SessionhelperArgs{...} }
type SessionhelperArrayInput interface {
	pulumi.Input

	ToSessionhelperArrayOutput() SessionhelperArrayOutput
	ToSessionhelperArrayOutputWithContext(context.Context) SessionhelperArrayOutput
}

type SessionhelperArray []SessionhelperInput

func (SessionhelperArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Sessionhelper)(nil)).Elem()
}

func (i SessionhelperArray) ToSessionhelperArrayOutput() SessionhelperArrayOutput {
	return i.ToSessionhelperArrayOutputWithContext(context.Background())
}

func (i SessionhelperArray) ToSessionhelperArrayOutputWithContext(ctx context.Context) SessionhelperArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionhelperArrayOutput)
}

// SessionhelperMapInput is an input type that accepts SessionhelperMap and SessionhelperMapOutput values.
// You can construct a concrete instance of `SessionhelperMapInput` via:
//
//	SessionhelperMap{ "key": SessionhelperArgs{...} }
type SessionhelperMapInput interface {
	pulumi.Input

	ToSessionhelperMapOutput() SessionhelperMapOutput
	ToSessionhelperMapOutputWithContext(context.Context) SessionhelperMapOutput
}

type SessionhelperMap map[string]SessionhelperInput

func (SessionhelperMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Sessionhelper)(nil)).Elem()
}

func (i SessionhelperMap) ToSessionhelperMapOutput() SessionhelperMapOutput {
	return i.ToSessionhelperMapOutputWithContext(context.Background())
}

func (i SessionhelperMap) ToSessionhelperMapOutputWithContext(ctx context.Context) SessionhelperMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionhelperMapOutput)
}

type SessionhelperOutput struct{ *pulumi.OutputState }

func (SessionhelperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sessionhelper)(nil)).Elem()
}

func (o SessionhelperOutput) ToSessionhelperOutput() SessionhelperOutput {
	return o
}

func (o SessionhelperOutput) ToSessionhelperOutputWithContext(ctx context.Context) SessionhelperOutput {
	return o
}

// Session helper ID.
func (o SessionhelperOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *Sessionhelper) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Helper name.
func (o SessionhelperOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Sessionhelper) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Protocol port.
func (o SessionhelperOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *Sessionhelper) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// Protocol number.
func (o SessionhelperOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v *Sessionhelper) pulumi.IntOutput { return v.Protocol }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SessionhelperOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sessionhelper) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SessionhelperArrayOutput struct{ *pulumi.OutputState }

func (SessionhelperArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Sessionhelper)(nil)).Elem()
}

func (o SessionhelperArrayOutput) ToSessionhelperArrayOutput() SessionhelperArrayOutput {
	return o
}

func (o SessionhelperArrayOutput) ToSessionhelperArrayOutputWithContext(ctx context.Context) SessionhelperArrayOutput {
	return o
}

func (o SessionhelperArrayOutput) Index(i pulumi.IntInput) SessionhelperOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Sessionhelper {
		return vs[0].([]*Sessionhelper)[vs[1].(int)]
	}).(SessionhelperOutput)
}

type SessionhelperMapOutput struct{ *pulumi.OutputState }

func (SessionhelperMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Sessionhelper)(nil)).Elem()
}

func (o SessionhelperMapOutput) ToSessionhelperMapOutput() SessionhelperMapOutput {
	return o
}

func (o SessionhelperMapOutput) ToSessionhelperMapOutputWithContext(ctx context.Context) SessionhelperMapOutput {
	return o
}

func (o SessionhelperMapOutput) MapIndex(k pulumi.StringInput) SessionhelperOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Sessionhelper {
		return vs[0].(map[string]*Sessionhelper)[vs[1].(string)]
	}).(SessionhelperOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SessionhelperInput)(nil)).Elem(), &Sessionhelper{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionhelperArrayInput)(nil)).Elem(), SessionhelperArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionhelperMapInput)(nil)).Elem(), SessionhelperMap{})
	pulumi.RegisterOutputType(SessionhelperOutput{})
	pulumi.RegisterOutputType(SessionhelperArrayOutput{})
	pulumi.RegisterOutputType(SessionhelperMapOutput{})
}
