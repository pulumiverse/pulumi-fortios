// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure IPv6 neighbor discovery proxy (RFC4389).
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewNdproxy(ctx, "trname", &system.NdproxyArgs{
//				Status: pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// System NdProxy can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/ndproxy:Ndproxy labelname SystemNdProxy
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/ndproxy:Ndproxy labelname SystemNdProxy
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Ndproxy struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
	Members NdproxyMemberArrayOutput `pulumi:"members"`
	// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewNdproxy registers a new resource with the given unique name, arguments, and options.
func NewNdproxy(ctx *pulumi.Context,
	name string, args *NdproxyArgs, opts ...pulumi.ResourceOption) (*Ndproxy, error) {
	if args == nil {
		args = &NdproxyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ndproxy
	err := ctx.RegisterResource("fortios:system/ndproxy:Ndproxy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNdproxy gets an existing Ndproxy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNdproxy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NdproxyState, opts ...pulumi.ResourceOption) (*Ndproxy, error) {
	var resource Ndproxy
	err := ctx.ReadResource("fortios:system/ndproxy:Ndproxy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ndproxy resources.
type ndproxyState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
	Members []NdproxyMember `pulumi:"members"`
	// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type NdproxyState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
	Members NdproxyMemberArrayInput
	// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (NdproxyState) ElementType() reflect.Type {
	return reflect.TypeOf((*ndproxyState)(nil)).Elem()
}

type ndproxyArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
	Members []NdproxyMember `pulumi:"members"`
	// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Ndproxy resource.
type NdproxyArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
	Members NdproxyMemberArrayInput
	// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (NdproxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ndproxyArgs)(nil)).Elem()
}

type NdproxyInput interface {
	pulumi.Input

	ToNdproxyOutput() NdproxyOutput
	ToNdproxyOutputWithContext(ctx context.Context) NdproxyOutput
}

func (*Ndproxy) ElementType() reflect.Type {
	return reflect.TypeOf((**Ndproxy)(nil)).Elem()
}

func (i *Ndproxy) ToNdproxyOutput() NdproxyOutput {
	return i.ToNdproxyOutputWithContext(context.Background())
}

func (i *Ndproxy) ToNdproxyOutputWithContext(ctx context.Context) NdproxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdproxyOutput)
}

// NdproxyArrayInput is an input type that accepts NdproxyArray and NdproxyArrayOutput values.
// You can construct a concrete instance of `NdproxyArrayInput` via:
//
//	NdproxyArray{ NdproxyArgs{...} }
type NdproxyArrayInput interface {
	pulumi.Input

	ToNdproxyArrayOutput() NdproxyArrayOutput
	ToNdproxyArrayOutputWithContext(context.Context) NdproxyArrayOutput
}

type NdproxyArray []NdproxyInput

func (NdproxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ndproxy)(nil)).Elem()
}

func (i NdproxyArray) ToNdproxyArrayOutput() NdproxyArrayOutput {
	return i.ToNdproxyArrayOutputWithContext(context.Background())
}

func (i NdproxyArray) ToNdproxyArrayOutputWithContext(ctx context.Context) NdproxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdproxyArrayOutput)
}

// NdproxyMapInput is an input type that accepts NdproxyMap and NdproxyMapOutput values.
// You can construct a concrete instance of `NdproxyMapInput` via:
//
//	NdproxyMap{ "key": NdproxyArgs{...} }
type NdproxyMapInput interface {
	pulumi.Input

	ToNdproxyMapOutput() NdproxyMapOutput
	ToNdproxyMapOutputWithContext(context.Context) NdproxyMapOutput
}

type NdproxyMap map[string]NdproxyInput

func (NdproxyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ndproxy)(nil)).Elem()
}

func (i NdproxyMap) ToNdproxyMapOutput() NdproxyMapOutput {
	return i.ToNdproxyMapOutputWithContext(context.Background())
}

func (i NdproxyMap) ToNdproxyMapOutputWithContext(ctx context.Context) NdproxyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdproxyMapOutput)
}

type NdproxyOutput struct{ *pulumi.OutputState }

func (NdproxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ndproxy)(nil)).Elem()
}

func (o NdproxyOutput) ToNdproxyOutput() NdproxyOutput {
	return o
}

func (o NdproxyOutput) ToNdproxyOutputWithContext(ctx context.Context) NdproxyOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o NdproxyOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ndproxy) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o NdproxyOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ndproxy) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
func (o NdproxyOutput) Members() NdproxyMemberArrayOutput {
	return o.ApplyT(func(v *Ndproxy) NdproxyMemberArrayOutput { return v.Members }).(NdproxyMemberArrayOutput)
}

// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
func (o NdproxyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Ndproxy) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o NdproxyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ndproxy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type NdproxyArrayOutput struct{ *pulumi.OutputState }

func (NdproxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ndproxy)(nil)).Elem()
}

func (o NdproxyArrayOutput) ToNdproxyArrayOutput() NdproxyArrayOutput {
	return o
}

func (o NdproxyArrayOutput) ToNdproxyArrayOutputWithContext(ctx context.Context) NdproxyArrayOutput {
	return o
}

func (o NdproxyArrayOutput) Index(i pulumi.IntInput) NdproxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ndproxy {
		return vs[0].([]*Ndproxy)[vs[1].(int)]
	}).(NdproxyOutput)
}

type NdproxyMapOutput struct{ *pulumi.OutputState }

func (NdproxyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ndproxy)(nil)).Elem()
}

func (o NdproxyMapOutput) ToNdproxyMapOutput() NdproxyMapOutput {
	return o
}

func (o NdproxyMapOutput) ToNdproxyMapOutputWithContext(ctx context.Context) NdproxyMapOutput {
	return o
}

func (o NdproxyMapOutput) MapIndex(k pulumi.StringInput) NdproxyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ndproxy {
		return vs[0].(map[string]*Ndproxy)[vs[1].(string)]
	}).(NdproxyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NdproxyInput)(nil)).Elem(), &Ndproxy{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdproxyArrayInput)(nil)).Elem(), NdproxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdproxyMapInput)(nil)).Elem(), NdproxyMap{})
	pulumi.RegisterOutputType(NdproxyOutput{})
	pulumi.RegisterOutputType(NdproxyArrayOutput{})
	pulumi.RegisterOutputType(NdproxyMapOutput{})
}
