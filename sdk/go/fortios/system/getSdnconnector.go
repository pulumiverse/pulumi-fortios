// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Use this data source to get information on an fortios system sdnconnector
func LookupSdnconnector(ctx *pulumi.Context, args *LookupSdnconnectorArgs, opts ...pulumi.InvokeOption) (*LookupSdnconnectorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSdnconnectorResult
	err := ctx.Invoke("fortios:system/getSdnconnector:getSdnconnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSdnconnector.
type LookupSdnconnectorArgs struct {
	// Specify the name of the desired system sdnconnector.
	Name string `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getSdnconnector.
type LookupSdnconnectorResult struct {
	// AWS access key ID.
	AccessKey string `pulumi:"accessKey"`
	// Enable/disable AWS alternative resource IP.
	AltResourceIp string `pulumi:"altResourceIp"`
	// IBM cloud API key or service ID API key.
	ApiKey string `pulumi:"apiKey"`
	// Azure server region.
	AzureRegion string `pulumi:"azureRegion"`
	// Azure client ID (application ID).
	ClientId string `pulumi:"clientId"`
	// Azure client secret (application key).
	ClientSecret string `pulumi:"clientSecret"`
	// OCI compartment ID.
	CompartmentId string `pulumi:"compartmentId"`
	// Configure OCI compartment list. The structure of `compartmentList` block is documented below.
	CompartmentLists []GetSdnconnectorCompartmentList `pulumi:"compartmentLists"`
	// Compute generation for IBM cloud infrastructure.
	ComputeGeneration int `pulumi:"computeGeneration"`
	// Domain name.
	Domain string `pulumi:"domain"`
	// Configure AWS external account list. The structure of `externalAccountList` block is documented below.
	ExternalAccountLists []GetSdnconnectorExternalAccountList `pulumi:"externalAccountLists"`
	// Configure GCP external IP. The structure of `externalIp` block is documented below.
	ExternalIps []GetSdnconnectorExternalIp `pulumi:"externalIps"`
	// Configure GCP forwarding rule. The structure of `forwardingRule` block is documented below.
	ForwardingRules []GetSdnconnectorForwardingRule `pulumi:"forwardingRules"`
	// GCP project name.
	GcpProject string `pulumi:"gcpProject"`
	// Configure GCP project list. The structure of `gcpProjectList` block is documented below.
	GcpProjectLists []GetSdnconnectorGcpProjectList `pulumi:"gcpProjectLists"`
	// Group name of computers.
	GroupName string `pulumi:"groupName"`
	// Enable/disable use for FortiGate HA service.
	HaStatus string `pulumi:"haStatus"`
	// IBM cloud region name.
	IbmRegion string `pulumi:"ibmRegion"`
	// IBM cloud compute generation 1 region name.
	IbmRegionGen1 string `pulumi:"ibmRegionGen1"`
	// IBM cloud compute generation 2 region name.
	IbmRegionGen2 string `pulumi:"ibmRegionGen2"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Private key password.
	KeyPasswd string `pulumi:"keyPasswd"`
	// Azure Stack login endpoint.
	LoginEndpoint string `pulumi:"loginEndpoint"`
	// GCP zone name.
	Name string `pulumi:"name"`
	// Configure Azure network interface. The structure of `nic` block is documented below.
	Nics []GetSdnconnectorNic `pulumi:"nics"`
	// OCI certificate.
	OciCert string `pulumi:"ociCert"`
	// OCI pubkey fingerprint.
	OciFingerprint string `pulumi:"ociFingerprint"`
	// OCI server region.
	OciRegion string `pulumi:"ociRegion"`
	// Configure OCI region list. The structure of `ociRegionList` block is documented below.
	OciRegionLists []GetSdnconnectorOciRegionList `pulumi:"ociRegionLists"`
	// OCI region type.
	OciRegionType string `pulumi:"ociRegionType"`
	// Password of the remote SDN connector as login credentials.
	Password string `pulumi:"password"`
	// Private key of GCP service account.
	PrivateKey string `pulumi:"privateKey"`
	// SDN proxy.
	Proxy string `pulumi:"proxy"`
	// OCI region.
	Region string `pulumi:"region"`
	// Resource group of Azure route table.
	ResourceGroup string `pulumi:"resourceGroup"`
	// Azure Stack resource URL.
	ResourceUrl string `pulumi:"resourceUrl"`
	// Configure Azure route table. The structure of `routeTable` block is documented below.
	RouteTables []GetSdnconnectorRouteTable `pulumi:"routeTables"`
	// Configure Azure route. The structure of `route` block is documented below.
	Routes []GetSdnconnectorRoute `pulumi:"routes"`
	// AWS secret access key.
	SecretKey string `pulumi:"secretKey"`
	// Secret token of Kubernetes service account.
	SecretToken string `pulumi:"secretToken"`
	// Server address of the remote SDN connector.
	Server string `pulumi:"server"`
	// Trust only those servers whose certificate is directly/indirectly signed by this certificate.
	ServerCaCert string `pulumi:"serverCaCert"`
	// Trust servers that contain this certificate only.
	ServerCert string `pulumi:"serverCert"`
	// Server address list of the remote SDN connector. The structure of `serverList` block is documented below.
	ServerLists []GetSdnconnectorServerList `pulumi:"serverLists"`
	// Port number of the remote SDN connector.
	ServerPort int `pulumi:"serverPort"`
	// GCP service account email.
	ServiceAccount string `pulumi:"serviceAccount"`
	// Enable/disable connection to the remote SDN connector.
	Status string `pulumi:"status"`
	// Subscription ID of Azure route table.
	SubscriptionId string `pulumi:"subscriptionId"`
	// Tenant ID (directory ID).
	TenantId string `pulumi:"tenantId"`
	// Type of SDN connector.
	Type string `pulumi:"type"`
	// Dynamic object update interval (0 - 3600 sec, 0 means disabled, default = 60).
	UpdateInterval int `pulumi:"updateInterval"`
	// Enable/disable using IAM role from metadata to call API.
	UseMetadataIam string `pulumi:"useMetadataIam"`
	// User ID.
	UserId string `pulumi:"userId"`
	// Username of the remote SDN connector as login credentials.
	Username string `pulumi:"username"`
	// vCenter server password for NSX quarantine.
	VcenterPassword string `pulumi:"vcenterPassword"`
	// vCenter server address for NSX quarantine.
	VcenterServer string `pulumi:"vcenterServer"`
	// vCenter server username for NSX quarantine.
	VcenterUsername string  `pulumi:"vcenterUsername"`
	Vdomparam       *string `pulumi:"vdomparam"`
	// Enable/disable server certificate verification.
	VerifyCertificate string `pulumi:"verifyCertificate"`
	// AWS VPC ID.
	VpcId string `pulumi:"vpcId"`
}

func LookupSdnconnectorOutput(ctx *pulumi.Context, args LookupSdnconnectorOutputArgs, opts ...pulumi.InvokeOption) LookupSdnconnectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSdnconnectorResult, error) {
			args := v.(LookupSdnconnectorArgs)
			r, err := LookupSdnconnector(ctx, &args, opts...)
			var s LookupSdnconnectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSdnconnectorResultOutput)
}

// A collection of arguments for invoking getSdnconnector.
type LookupSdnconnectorOutputArgs struct {
	// Specify the name of the desired system sdnconnector.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupSdnconnectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSdnconnectorArgs)(nil)).Elem()
}

// A collection of values returned by getSdnconnector.
type LookupSdnconnectorResultOutput struct{ *pulumi.OutputState }

func (LookupSdnconnectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSdnconnectorResult)(nil)).Elem()
}

func (o LookupSdnconnectorResultOutput) ToLookupSdnconnectorResultOutput() LookupSdnconnectorResultOutput {
	return o
}

func (o LookupSdnconnectorResultOutput) ToLookupSdnconnectorResultOutputWithContext(ctx context.Context) LookupSdnconnectorResultOutput {
	return o
}

// AWS access key ID.
func (o LookupSdnconnectorResultOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.AccessKey }).(pulumi.StringOutput)
}

// Enable/disable AWS alternative resource IP.
func (o LookupSdnconnectorResultOutput) AltResourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.AltResourceIp }).(pulumi.StringOutput)
}

// IBM cloud API key or service ID API key.
func (o LookupSdnconnectorResultOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Azure server region.
func (o LookupSdnconnectorResultOutput) AzureRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.AzureRegion }).(pulumi.StringOutput)
}

// Azure client ID (application ID).
func (o LookupSdnconnectorResultOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.ClientId }).(pulumi.StringOutput)
}

// Azure client secret (application key).
func (o LookupSdnconnectorResultOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// OCI compartment ID.
func (o LookupSdnconnectorResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Configure OCI compartment list. The structure of `compartmentList` block is documented below.
func (o LookupSdnconnectorResultOutput) CompartmentLists() GetSdnconnectorCompartmentListArrayOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) []GetSdnconnectorCompartmentList { return v.CompartmentLists }).(GetSdnconnectorCompartmentListArrayOutput)
}

// Compute generation for IBM cloud infrastructure.
func (o LookupSdnconnectorResultOutput) ComputeGeneration() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) int { return v.ComputeGeneration }).(pulumi.IntOutput)
}

// Domain name.
func (o LookupSdnconnectorResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.Domain }).(pulumi.StringOutput)
}

// Configure AWS external account list. The structure of `externalAccountList` block is documented below.
func (o LookupSdnconnectorResultOutput) ExternalAccountLists() GetSdnconnectorExternalAccountListArrayOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) []GetSdnconnectorExternalAccountList { return v.ExternalAccountLists }).(GetSdnconnectorExternalAccountListArrayOutput)
}

// Configure GCP external IP. The structure of `externalIp` block is documented below.
func (o LookupSdnconnectorResultOutput) ExternalIps() GetSdnconnectorExternalIpArrayOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) []GetSdnconnectorExternalIp { return v.ExternalIps }).(GetSdnconnectorExternalIpArrayOutput)
}

// Configure GCP forwarding rule. The structure of `forwardingRule` block is documented below.
func (o LookupSdnconnectorResultOutput) ForwardingRules() GetSdnconnectorForwardingRuleArrayOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) []GetSdnconnectorForwardingRule { return v.ForwardingRules }).(GetSdnconnectorForwardingRuleArrayOutput)
}

// GCP project name.
func (o LookupSdnconnectorResultOutput) GcpProject() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.GcpProject }).(pulumi.StringOutput)
}

// Configure GCP project list. The structure of `gcpProjectList` block is documented below.
func (o LookupSdnconnectorResultOutput) GcpProjectLists() GetSdnconnectorGcpProjectListArrayOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) []GetSdnconnectorGcpProjectList { return v.GcpProjectLists }).(GetSdnconnectorGcpProjectListArrayOutput)
}

// Group name of computers.
func (o LookupSdnconnectorResultOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.GroupName }).(pulumi.StringOutput)
}

// Enable/disable use for FortiGate HA service.
func (o LookupSdnconnectorResultOutput) HaStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.HaStatus }).(pulumi.StringOutput)
}

// IBM cloud region name.
func (o LookupSdnconnectorResultOutput) IbmRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.IbmRegion }).(pulumi.StringOutput)
}

// IBM cloud compute generation 1 region name.
func (o LookupSdnconnectorResultOutput) IbmRegionGen1() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.IbmRegionGen1 }).(pulumi.StringOutput)
}

// IBM cloud compute generation 2 region name.
func (o LookupSdnconnectorResultOutput) IbmRegionGen2() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.IbmRegionGen2 }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSdnconnectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.Id }).(pulumi.StringOutput)
}

// Private key password.
func (o LookupSdnconnectorResultOutput) KeyPasswd() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.KeyPasswd }).(pulumi.StringOutput)
}

// Azure Stack login endpoint.
func (o LookupSdnconnectorResultOutput) LoginEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.LoginEndpoint }).(pulumi.StringOutput)
}

// GCP zone name.
func (o LookupSdnconnectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.Name }).(pulumi.StringOutput)
}

// Configure Azure network interface. The structure of `nic` block is documented below.
func (o LookupSdnconnectorResultOutput) Nics() GetSdnconnectorNicArrayOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) []GetSdnconnectorNic { return v.Nics }).(GetSdnconnectorNicArrayOutput)
}

// OCI certificate.
func (o LookupSdnconnectorResultOutput) OciCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.OciCert }).(pulumi.StringOutput)
}

// OCI pubkey fingerprint.
func (o LookupSdnconnectorResultOutput) OciFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.OciFingerprint }).(pulumi.StringOutput)
}

// OCI server region.
func (o LookupSdnconnectorResultOutput) OciRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.OciRegion }).(pulumi.StringOutput)
}

// Configure OCI region list. The structure of `ociRegionList` block is documented below.
func (o LookupSdnconnectorResultOutput) OciRegionLists() GetSdnconnectorOciRegionListArrayOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) []GetSdnconnectorOciRegionList { return v.OciRegionLists }).(GetSdnconnectorOciRegionListArrayOutput)
}

// OCI region type.
func (o LookupSdnconnectorResultOutput) OciRegionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.OciRegionType }).(pulumi.StringOutput)
}

// Password of the remote SDN connector as login credentials.
func (o LookupSdnconnectorResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.Password }).(pulumi.StringOutput)
}

// Private key of GCP service account.
func (o LookupSdnconnectorResultOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.PrivateKey }).(pulumi.StringOutput)
}

// SDN proxy.
func (o LookupSdnconnectorResultOutput) Proxy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.Proxy }).(pulumi.StringOutput)
}

// OCI region.
func (o LookupSdnconnectorResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.Region }).(pulumi.StringOutput)
}

// Resource group of Azure route table.
func (o LookupSdnconnectorResultOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Azure Stack resource URL.
func (o LookupSdnconnectorResultOutput) ResourceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.ResourceUrl }).(pulumi.StringOutput)
}

// Configure Azure route table. The structure of `routeTable` block is documented below.
func (o LookupSdnconnectorResultOutput) RouteTables() GetSdnconnectorRouteTableArrayOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) []GetSdnconnectorRouteTable { return v.RouteTables }).(GetSdnconnectorRouteTableArrayOutput)
}

// Configure Azure route. The structure of `route` block is documented below.
func (o LookupSdnconnectorResultOutput) Routes() GetSdnconnectorRouteArrayOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) []GetSdnconnectorRoute { return v.Routes }).(GetSdnconnectorRouteArrayOutput)
}

// AWS secret access key.
func (o LookupSdnconnectorResultOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.SecretKey }).(pulumi.StringOutput)
}

// Secret token of Kubernetes service account.
func (o LookupSdnconnectorResultOutput) SecretToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.SecretToken }).(pulumi.StringOutput)
}

// Server address of the remote SDN connector.
func (o LookupSdnconnectorResultOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.Server }).(pulumi.StringOutput)
}

// Trust only those servers whose certificate is directly/indirectly signed by this certificate.
func (o LookupSdnconnectorResultOutput) ServerCaCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.ServerCaCert }).(pulumi.StringOutput)
}

// Trust servers that contain this certificate only.
func (o LookupSdnconnectorResultOutput) ServerCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.ServerCert }).(pulumi.StringOutput)
}

// Server address list of the remote SDN connector. The structure of `serverList` block is documented below.
func (o LookupSdnconnectorResultOutput) ServerLists() GetSdnconnectorServerListArrayOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) []GetSdnconnectorServerList { return v.ServerLists }).(GetSdnconnectorServerListArrayOutput)
}

// Port number of the remote SDN connector.
func (o LookupSdnconnectorResultOutput) ServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) int { return v.ServerPort }).(pulumi.IntOutput)
}

// GCP service account email.
func (o LookupSdnconnectorResultOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Enable/disable connection to the remote SDN connector.
func (o LookupSdnconnectorResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.Status }).(pulumi.StringOutput)
}

// Subscription ID of Azure route table.
func (o LookupSdnconnectorResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Tenant ID (directory ID).
func (o LookupSdnconnectorResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of SDN connector.
func (o LookupSdnconnectorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.Type }).(pulumi.StringOutput)
}

// Dynamic object update interval (0 - 3600 sec, 0 means disabled, default = 60).
func (o LookupSdnconnectorResultOutput) UpdateInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) int { return v.UpdateInterval }).(pulumi.IntOutput)
}

// Enable/disable using IAM role from metadata to call API.
func (o LookupSdnconnectorResultOutput) UseMetadataIam() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.UseMetadataIam }).(pulumi.StringOutput)
}

// User ID.
func (o LookupSdnconnectorResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.UserId }).(pulumi.StringOutput)
}

// Username of the remote SDN connector as login credentials.
func (o LookupSdnconnectorResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.Username }).(pulumi.StringOutput)
}

// vCenter server password for NSX quarantine.
func (o LookupSdnconnectorResultOutput) VcenterPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.VcenterPassword }).(pulumi.StringOutput)
}

// vCenter server address for NSX quarantine.
func (o LookupSdnconnectorResultOutput) VcenterServer() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.VcenterServer }).(pulumi.StringOutput)
}

// vCenter server username for NSX quarantine.
func (o LookupSdnconnectorResultOutput) VcenterUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.VcenterUsername }).(pulumi.StringOutput)
}

func (o LookupSdnconnectorResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable server certificate verification.
func (o LookupSdnconnectorResultOutput) VerifyCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.VerifyCertificate }).(pulumi.StringOutput)
}

// AWS VPC ID.
func (o LookupSdnconnectorResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSdnconnectorResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSdnconnectorResultOutput{})
}
