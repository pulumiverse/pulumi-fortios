// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "fortios:system/accprofile:Accprofile":
		r = &Accprofile{}
	case "fortios:system/acme:Acme":
		r = &Acme{}
	case "fortios:system/admin:Admin":
		r = &Admin{}
	case "fortios:system/adminAdministrator:AdminAdministrator":
		r = &AdminAdministrator{}
	case "fortios:system/adminProfiles:AdminProfiles":
		r = &AdminProfiles{}
	case "fortios:system/affinityinterrupt:Affinityinterrupt":
		r = &Affinityinterrupt{}
	case "fortios:system/affinitypacketredistribution:Affinitypacketredistribution":
		r = &Affinitypacketredistribution{}
	case "fortios:system/alarm:Alarm":
		r = &Alarm{}
	case "fortios:system/alias:Alias":
		r = &Alias{}
	case "fortios:system/apiuser:Apiuser":
		r = &Apiuser{}
	case "fortios:system/apiuserSetting:ApiuserSetting":
		r = &ApiuserSetting{}
	case "fortios:system/arptable:Arptable":
		r = &Arptable{}
	case "fortios:system/autoinstall:Autoinstall":
		r = &Autoinstall{}
	case "fortios:system/automationaction:Automationaction":
		r = &Automationaction{}
	case "fortios:system/automationdestination:Automationdestination":
		r = &Automationdestination{}
	case "fortios:system/automationstitch:Automationstitch":
		r = &Automationstitch{}
	case "fortios:system/automationtrigger:Automationtrigger":
		r = &Automationtrigger{}
	case "fortios:system/autoscript:Autoscript":
		r = &Autoscript{}
	case "fortios:system/centralmanagement:Centralmanagement":
		r = &Centralmanagement{}
	case "fortios:system/clustersync:Clustersync":
		r = &Clustersync{}
	case "fortios:system/console:Console":
		r = &Console{}
	case "fortios:system/csf:Csf":
		r = &Csf{}
	case "fortios:system/customlanguage:Customlanguage":
		r = &Customlanguage{}
	case "fortios:system/ddns:Ddns":
		r = &Ddns{}
	case "fortios:system/dedicatedmgmt:Dedicatedmgmt":
		r = &Dedicatedmgmt{}
	case "fortios:system/deviceupgrade:Deviceupgrade":
		r = &Deviceupgrade{}
	case "fortios:system/dns64:Dns64":
		r = &Dns64{}
	case "fortios:system/dns:Dns":
		r = &Dns{}
	case "fortios:system/dnsdatabase:Dnsdatabase":
		r = &Dnsdatabase{}
	case "fortios:system/dnsserver:Dnsserver":
		r = &Dnsserver{}
	case "fortios:system/dscpbasedpriority:Dscpbasedpriority":
		r = &Dscpbasedpriority{}
	case "fortios:system/emailserver:Emailserver":
		r = &Emailserver{}
	case "fortios:system/evpn:Evpn":
		r = &Evpn{}
	case "fortios:system/externalresource:Externalresource":
		r = &Externalresource{}
	case "fortios:system/fabricvpn:Fabricvpn":
		r = &Fabricvpn{}
	case "fortios:system/federatedupgrade:Federatedupgrade":
		r = &Federatedupgrade{}
	case "fortios:system/fipscc:Fipscc":
		r = &Fipscc{}
	case "fortios:system/fm:Fm":
		r = &Fm{}
	case "fortios:system/fortiai:Fortiai":
		r = &Fortiai{}
	case "fortios:system/fortiguard:Fortiguard":
		r = &Fortiguard{}
	case "fortios:system/fortimanager:Fortimanager":
		r = &Fortimanager{}
	case "fortios:system/fortindr:Fortindr":
		r = &Fortindr{}
	case "fortios:system/fortisandbox:Fortisandbox":
		r = &Fortisandbox{}
	case "fortios:system/fssopolling:Fssopolling":
		r = &Fssopolling{}
	case "fortios:system/ftmpush:Ftmpush":
		r = &Ftmpush{}
	case "fortios:system/geneve:Geneve":
		r = &Geneve{}
	case "fortios:system/geoipcountry:Geoipcountry":
		r = &Geoipcountry{}
	case "fortios:system/geoipoverride:Geoipoverride":
		r = &Geoipoverride{}
	case "fortios:system/global:Global":
		r = &Global{}
	case "fortios:system/gretunnel:Gretunnel":
		r = &Gretunnel{}
	case "fortios:system/ha:Ha":
		r = &Ha{}
	case "fortios:system/hamonitor:Hamonitor":
		r = &Hamonitor{}
	case "fortios:system/ike:Ike":
		r = &Ike{}
	case "fortios:system/interface:Interface":
		r = &Interface{}
	case "fortios:system/ipam:Ipam":
		r = &Ipam{}
	case "fortios:system/ipiptunnel:Ipiptunnel":
		r = &Ipiptunnel{}
	case "fortios:system/ips:Ips":
		r = &Ips{}
	case "fortios:system/ipsecaggregate:Ipsecaggregate":
		r = &Ipsecaggregate{}
	case "fortios:system/ipsurlfilterdns6:Ipsurlfilterdns6":
		r = &Ipsurlfilterdns6{}
	case "fortios:system/ipsurlfilterdns:Ipsurlfilterdns":
		r = &Ipsurlfilterdns{}
	case "fortios:system/ipv6neighborcache:Ipv6neighborcache":
		r = &Ipv6neighborcache{}
	case "fortios:system/ipv6tunnel:Ipv6tunnel":
		r = &Ipv6tunnel{}
	case "fortios:system/licenseForticare:LicenseForticare":
		r = &LicenseForticare{}
	case "fortios:system/licenseVdom:LicenseVdom":
		r = &LicenseVdom{}
	case "fortios:system/licenseVm:LicenseVm":
		r = &LicenseVm{}
	case "fortios:system/linkmonitor:Linkmonitor":
		r = &Linkmonitor{}
	case "fortios:system/ltemodem:Ltemodem":
		r = &Ltemodem{}
	case "fortios:system/macaddresstable:Macaddresstable":
		r = &Macaddresstable{}
	case "fortios:system/managementtunnel:Managementtunnel":
		r = &Managementtunnel{}
	case "fortios:system/mobiletunnel:Mobiletunnel":
		r = &Mobiletunnel{}
	case "fortios:system/modem:Modem":
		r = &Modem{}
	case "fortios:system/nat64:Nat64":
		r = &Nat64{}
	case "fortios:system/ndproxy:Ndproxy":
		r = &Ndproxy{}
	case "fortios:system/netflow:Netflow":
		r = &Netflow{}
	case "fortios:system/networkvisibility:Networkvisibility":
		r = &Networkvisibility{}
	case "fortios:system/npu:Npu":
		r = &Npu{}
	case "fortios:system/ntp:Ntp":
		r = &Ntp{}
	case "fortios:system/objecttagging:Objecttagging":
		r = &Objecttagging{}
	case "fortios:system/passwordpolicy:Passwordpolicy":
		r = &Passwordpolicy{}
	case "fortios:system/passwordpolicyguestadmin:Passwordpolicyguestadmin":
		r = &Passwordpolicyguestadmin{}
	case "fortios:system/pcpserver:Pcpserver":
		r = &Pcpserver{}
	case "fortios:system/physicalswitch:Physicalswitch":
		r = &Physicalswitch{}
	case "fortios:system/pppoeinterface:Pppoeinterface":
		r = &Pppoeinterface{}
	case "fortios:system/proberesponse:Proberesponse":
		r = &Proberesponse{}
	case "fortios:system/proxyarp:Proxyarp":
		r = &Proxyarp{}
	case "fortios:system/ptp:Ptp":
		r = &Ptp{}
	case "fortios:system/replacemsggroup:Replacemsggroup":
		r = &Replacemsggroup{}
	case "fortios:system/replacemsgimage:Replacemsgimage":
		r = &Replacemsgimage{}
	case "fortios:system/resourcelimits:Resourcelimits":
		r = &Resourcelimits{}
	case "fortios:system/saml:Saml":
		r = &Saml{}
	case "fortios:system/sdnconnector:Sdnconnector":
		r = &Sdnconnector{}
	case "fortios:system/sdnproxy:Sdnproxy":
		r = &Sdnproxy{}
	case "fortios:system/sdwan:Sdwan":
		r = &Sdwan{}
	case "fortios:system/sessionhelper:Sessionhelper":
		r = &Sessionhelper{}
	case "fortios:system/sessionttl:Sessionttl":
		r = &Sessionttl{}
	case "fortios:system/settingDns:SettingDns":
		r = &SettingDns{}
	case "fortios:system/settingGlobal:SettingGlobal":
		r = &SettingGlobal{}
	case "fortios:system/settingNtp:SettingNtp":
		r = &SettingNtp{}
	case "fortios:system/settings:Settings":
		r = &Settings{}
	case "fortios:system/sflow:Sflow":
		r = &Sflow{}
	case "fortios:system/sittunnel:Sittunnel":
		r = &Sittunnel{}
	case "fortios:system/smsserver:Smsserver":
		r = &Smsserver{}
	case "fortios:system/speedtestschedule:Speedtestschedule":
		r = &Speedtestschedule{}
	case "fortios:system/speedtestserver:Speedtestserver":
		r = &Speedtestserver{}
	case "fortios:system/speedtestsetting:Speedtestsetting":
		r = &Speedtestsetting{}
	case "fortios:system/ssoadmin:Ssoadmin":
		r = &Ssoadmin{}
	case "fortios:system/ssoforticloudadmin:Ssoforticloudadmin":
		r = &Ssoforticloudadmin{}
	case "fortios:system/ssofortigatecloudadmin:Ssofortigatecloudadmin":
		r = &Ssofortigatecloudadmin{}
	case "fortios:system/standalonecluster:Standalonecluster":
		r = &Standalonecluster{}
	case "fortios:system/storage:Storage":
		r = &Storage{}
	case "fortios:system/stp:Stp":
		r = &Stp{}
	case "fortios:system/switchinterface:Switchinterface":
		r = &Switchinterface{}
	case "fortios:system/tosbasedpriority:Tosbasedpriority":
		r = &Tosbasedpriority{}
	case "fortios:system/vdom:Vdom":
		r = &Vdom{}
	case "fortios:system/vdomSetting:VdomSetting":
		r = &VdomSetting{}
	case "fortios:system/vdomdns:Vdomdns":
		r = &Vdomdns{}
	case "fortios:system/vdomexception:Vdomexception":
		r = &Vdomexception{}
	case "fortios:system/vdomlink:Vdomlink":
		r = &Vdomlink{}
	case "fortios:system/vdomnetflow:Vdomnetflow":
		r = &Vdomnetflow{}
	case "fortios:system/vdomproperty:Vdomproperty":
		r = &Vdomproperty{}
	case "fortios:system/vdomradiusserver:Vdomradiusserver":
		r = &Vdomradiusserver{}
	case "fortios:system/vdomsflow:Vdomsflow":
		r = &Vdomsflow{}
	case "fortios:system/virtualswitch:Virtualswitch":
		r = &Virtualswitch{}
	case "fortios:system/virtualwanlink:Virtualwanlink":
		r = &Virtualwanlink{}
	case "fortios:system/virtualwirepair:Virtualwirepair":
		r = &Virtualwirepair{}
	case "fortios:system/vnetunnel:Vnetunnel":
		r = &Vnetunnel{}
	case "fortios:system/vxlan:Vxlan":
		r = &Vxlan{}
	case "fortios:system/wccp:Wccp":
		r = &Wccp{}
	case "fortios:system/zone:Zone":
		r = &Zone{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"fortios",
		"system/accprofile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/acme",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/admin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/adminAdministrator",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/adminProfiles",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/affinityinterrupt",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/affinitypacketredistribution",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/alarm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/alias",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/apiuser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/apiuserSetting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/arptable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/autoinstall",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/automationaction",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/automationdestination",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/automationstitch",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/automationtrigger",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/autoscript",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/centralmanagement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/clustersync",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/console",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/csf",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/customlanguage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ddns",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/dedicatedmgmt",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/deviceupgrade",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/dns",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/dns64",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/dnsdatabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/dnsserver",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/dscpbasedpriority",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/emailserver",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/evpn",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/externalresource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/fabricvpn",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/federatedupgrade",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/fipscc",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/fm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/fortiai",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/fortiguard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/fortimanager",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/fortindr",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/fortisandbox",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/fssopolling",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ftmpush",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/geneve",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/geoipcountry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/geoipoverride",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/global",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/gretunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ha",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/hamonitor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ike",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/interface",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ipam",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ipiptunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ips",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ipsecaggregate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ipsurlfilterdns",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ipsurlfilterdns6",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ipv6neighborcache",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ipv6tunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/licenseForticare",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/licenseVdom",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/licenseVm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/linkmonitor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ltemodem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/macaddresstable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/managementtunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/mobiletunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/modem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/nat64",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ndproxy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/netflow",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/networkvisibility",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/npu",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ntp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/objecttagging",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/passwordpolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/passwordpolicyguestadmin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/pcpserver",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/physicalswitch",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/pppoeinterface",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/proberesponse",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/proxyarp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ptp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/replacemsggroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/replacemsgimage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/resourcelimits",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/saml",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/sdnconnector",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/sdnproxy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/sdwan",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/sessionhelper",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/sessionttl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/settingDns",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/settingGlobal",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/settingNtp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/settings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/sflow",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/sittunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/smsserver",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/speedtestschedule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/speedtestserver",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/speedtestsetting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ssoadmin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ssoforticloudadmin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/ssofortigatecloudadmin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/standalonecluster",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/storage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/stp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/switchinterface",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/tosbasedpriority",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/vdom",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/vdomSetting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/vdomdns",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/vdomexception",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/vdomlink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/vdomnetflow",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/vdomproperty",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/vdomradiusserver",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/vdomsflow",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/virtualswitch",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/virtualwanlink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/virtualwirepair",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/vnetunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/vxlan",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/wccp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"system/zone",
		&module{version},
	)
}
