// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure connection to SDN Connector.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewSdnconnector(ctx, "trname", &system.SdnconnectorArgs{
//				AzureRegion:    pulumi.String("global"),
//				HaStatus:       pulumi.String("disable"),
//				Password:       pulumi.String("deWdf321ds"),
//				Server:         pulumi.String("1.1.1.1"),
//				ServerPort:     pulumi.Int(3),
//				Status:         pulumi.String("disable"),
//				Type:           pulumi.String("aci"),
//				UpdateInterval: pulumi.Int(60),
//				UseMetadataIam: pulumi.String("disable"),
//				Username:       pulumi.String("sg"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// System SdnConnector can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/sdnconnector:Sdnconnector labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/sdnconnector:Sdnconnector labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Sdnconnector struct {
	pulumi.CustomResourceState

	// AWS access key ID.
	AccessKey pulumi.StringOutput `pulumi:"accessKey"`
	// Enable/disable AWS alternative resource IP. Valid values: `disable`, `enable`.
	AltResourceIp pulumi.StringOutput `pulumi:"altResourceIp"`
	// IBM cloud API key or service ID API key.
	ApiKey pulumi.StringPtrOutput `pulumi:"apiKey"`
	// Azure server region. Valid values: `global`, `china`, `germany`, `usgov`, `local`.
	AzureRegion pulumi.StringOutput `pulumi:"azureRegion"`
	// Azure client ID (application ID).
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// Azure client secret (application key).
	ClientSecret pulumi.StringPtrOutput `pulumi:"clientSecret"`
	// Compartment ID.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Configure OCI compartment list. The structure of `compartmentList` block is documented below.
	CompartmentLists SdnconnectorCompartmentListArrayOutput `pulumi:"compartmentLists"`
	// Compute generation for IBM cloud infrastructure.
	ComputeGeneration pulumi.IntOutput `pulumi:"computeGeneration"`
	// Domain name.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Configure AWS external account list. The structure of `externalAccountList` block is documented below.
	ExternalAccountLists SdnconnectorExternalAccountListArrayOutput `pulumi:"externalAccountLists"`
	// Configure GCP external IP. The structure of `externalIp` block is documented below.
	ExternalIps SdnconnectorExternalIpArrayOutput `pulumi:"externalIps"`
	// Configure GCP forwarding rule. The structure of `forwardingRule` block is documented below.
	ForwardingRules SdnconnectorForwardingRuleArrayOutput `pulumi:"forwardingRules"`
	// GCP project name.
	GcpProject pulumi.StringOutput `pulumi:"gcpProject"`
	// Configure GCP project list. The structure of `gcpProjectList` block is documented below.
	GcpProjectLists SdnconnectorGcpProjectListArrayOutput `pulumi:"gcpProjectLists"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Group name of computers.
	GroupName pulumi.StringOutput `pulumi:"groupName"`
	// Enable/disable use for FortiGate HA service. Valid values: `disable`, `enable`.
	HaStatus pulumi.StringOutput `pulumi:"haStatus"`
	// IBM cloud region name.
	IbmRegion pulumi.StringOutput `pulumi:"ibmRegion"`
	// IBM cloud compute generation 1 region name. Valid values: `us-south`, `us-east`, `germany`, `great-britain`, `japan`, `australia`.
	IbmRegionGen1 pulumi.StringOutput `pulumi:"ibmRegionGen1"`
	// IBM cloud compute generation 2 region name. Valid values: `us-south`, `us-east`, `great-britain`.
	IbmRegionGen2 pulumi.StringOutput `pulumi:"ibmRegionGen2"`
	// Private key password.
	KeyPasswd pulumi.StringPtrOutput `pulumi:"keyPasswd"`
	// Azure Stack login endpoint.
	LoginEndpoint pulumi.StringOutput `pulumi:"loginEndpoint"`
	// SDN connector name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Configure Azure network interface. The structure of `nic` block is documented below.
	Nics SdnconnectorNicArrayOutput `pulumi:"nics"`
	// OCI certificate.
	OciCert pulumi.StringOutput `pulumi:"ociCert"`
	// OCI pubkey fingerprint.
	OciFingerprint pulumi.StringOutput `pulumi:"ociFingerprint"`
	// OCI server region.
	OciRegion pulumi.StringOutput `pulumi:"ociRegion"`
	// Configure OCI region list. The structure of `ociRegionList` block is documented below.
	OciRegionLists SdnconnectorOciRegionListArrayOutput `pulumi:"ociRegionLists"`
	// OCI region type. Valid values: `commercial`, `government`.
	OciRegionType pulumi.StringOutput `pulumi:"ociRegionType"`
	// Password of the remote SDN connector as login credentials.
	Password pulumi.StringOutput `pulumi:"password"`
	// Private key of GCP service account.
	PrivateKey pulumi.StringOutput `pulumi:"privateKey"`
	// SDN proxy.
	Proxy pulumi.StringOutput `pulumi:"proxy"`
	// AWS region name.
	Region pulumi.StringOutput `pulumi:"region"`
	// Azure resource group.
	ResourceGroup pulumi.StringOutput `pulumi:"resourceGroup"`
	// Azure Stack resource URL.
	ResourceUrl pulumi.StringOutput `pulumi:"resourceUrl"`
	// Configure Azure route table. The structure of `routeTable` block is documented below.
	RouteTables SdnconnectorRouteTableArrayOutput `pulumi:"routeTables"`
	// Configure GCP route. The structure of `route` block is documented below.
	Routes SdnconnectorRouteArrayOutput `pulumi:"routes"`
	// AWS secret access key.
	SecretKey pulumi.StringPtrOutput `pulumi:"secretKey"`
	// Secret token of Kubernetes service account.
	SecretToken pulumi.StringOutput `pulumi:"secretToken"`
	// Server address of the remote SDN connector.
	Server pulumi.StringOutput `pulumi:"server"`
	// Trust only those servers whose certificate is directly/indirectly signed by this certificate.
	ServerCaCert pulumi.StringOutput `pulumi:"serverCaCert"`
	// Trust servers that contain this certificate only.
	ServerCert pulumi.StringOutput `pulumi:"serverCert"`
	// Server address list of the remote SDN connector. The structure of `serverList` block is documented below.
	ServerLists SdnconnectorServerListArrayOutput `pulumi:"serverLists"`
	// Port number of the remote SDN connector.
	ServerPort pulumi.IntOutput `pulumi:"serverPort"`
	// GCP service account email.
	ServiceAccount pulumi.StringOutput `pulumi:"serviceAccount"`
	// Enable/disable connection to the remote SDN connector. Valid values: `disable`, `enable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Azure subscription ID.
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
	// Tenant ID (directory ID).
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Type of SDN connector.
	Type pulumi.StringOutput `pulumi:"type"`
	// Dynamic object update interval (0 - 3600 sec, 0 means disabled, default = 60).
	UpdateInterval pulumi.IntOutput `pulumi:"updateInterval"`
	// Enable/disable using IAM role from metadata to call API. Valid values: `disable`, `enable`.
	UseMetadataIam pulumi.StringOutput `pulumi:"useMetadataIam"`
	// User ID.
	UserId pulumi.StringOutput `pulumi:"userId"`
	// Username of the remote SDN connector as login credentials.
	Username pulumi.StringOutput `pulumi:"username"`
	// vCenter server password for NSX quarantine.
	VcenterPassword pulumi.StringPtrOutput `pulumi:"vcenterPassword"`
	// vCenter server address for NSX quarantine.
	VcenterServer pulumi.StringOutput `pulumi:"vcenterServer"`
	// vCenter server username for NSX quarantine.
	VcenterUsername pulumi.StringOutput `pulumi:"vcenterUsername"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable server certificate verification. Valid values: `disable`, `enable`.
	VerifyCertificate pulumi.StringOutput `pulumi:"verifyCertificate"`
	// AWS VPC ID.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewSdnconnector registers a new resource with the given unique name, arguments, and options.
func NewSdnconnector(ctx *pulumi.Context,
	name string, args *SdnconnectorArgs, opts ...pulumi.ResourceOption) (*Sdnconnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.AccessKey != nil {
		args.AccessKey = pulumi.ToSecret(args.AccessKey).(pulumi.StringPtrInput)
	}
	if args.ApiKey != nil {
		args.ApiKey = pulumi.ToSecret(args.ApiKey).(pulumi.StringPtrInput)
	}
	if args.ClientSecret != nil {
		args.ClientSecret = pulumi.ToSecret(args.ClientSecret).(pulumi.StringPtrInput)
	}
	if args.KeyPasswd != nil {
		args.KeyPasswd = pulumi.ToSecret(args.KeyPasswd).(pulumi.StringPtrInput)
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.PrivateKey != nil {
		args.PrivateKey = pulumi.ToSecret(args.PrivateKey).(pulumi.StringPtrInput)
	}
	if args.SecretKey != nil {
		args.SecretKey = pulumi.ToSecret(args.SecretKey).(pulumi.StringPtrInput)
	}
	if args.SecretToken != nil {
		args.SecretToken = pulumi.ToSecret(args.SecretToken).(pulumi.StringPtrInput)
	}
	if args.VcenterPassword != nil {
		args.VcenterPassword = pulumi.ToSecret(args.VcenterPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"accessKey",
		"apiKey",
		"clientSecret",
		"keyPasswd",
		"password",
		"privateKey",
		"secretKey",
		"secretToken",
		"vcenterPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Sdnconnector
	err := ctx.RegisterResource("fortios:system/sdnconnector:Sdnconnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSdnconnector gets an existing Sdnconnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSdnconnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SdnconnectorState, opts ...pulumi.ResourceOption) (*Sdnconnector, error) {
	var resource Sdnconnector
	err := ctx.ReadResource("fortios:system/sdnconnector:Sdnconnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Sdnconnector resources.
type sdnconnectorState struct {
	// AWS access key ID.
	AccessKey *string `pulumi:"accessKey"`
	// Enable/disable AWS alternative resource IP. Valid values: `disable`, `enable`.
	AltResourceIp *string `pulumi:"altResourceIp"`
	// IBM cloud API key or service ID API key.
	ApiKey *string `pulumi:"apiKey"`
	// Azure server region. Valid values: `global`, `china`, `germany`, `usgov`, `local`.
	AzureRegion *string `pulumi:"azureRegion"`
	// Azure client ID (application ID).
	ClientId *string `pulumi:"clientId"`
	// Azure client secret (application key).
	ClientSecret *string `pulumi:"clientSecret"`
	// Compartment ID.
	CompartmentId *string `pulumi:"compartmentId"`
	// Configure OCI compartment list. The structure of `compartmentList` block is documented below.
	CompartmentLists []SdnconnectorCompartmentList `pulumi:"compartmentLists"`
	// Compute generation for IBM cloud infrastructure.
	ComputeGeneration *int `pulumi:"computeGeneration"`
	// Domain name.
	Domain *string `pulumi:"domain"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Configure AWS external account list. The structure of `externalAccountList` block is documented below.
	ExternalAccountLists []SdnconnectorExternalAccountList `pulumi:"externalAccountLists"`
	// Configure GCP external IP. The structure of `externalIp` block is documented below.
	ExternalIps []SdnconnectorExternalIp `pulumi:"externalIps"`
	// Configure GCP forwarding rule. The structure of `forwardingRule` block is documented below.
	ForwardingRules []SdnconnectorForwardingRule `pulumi:"forwardingRules"`
	// GCP project name.
	GcpProject *string `pulumi:"gcpProject"`
	// Configure GCP project list. The structure of `gcpProjectList` block is documented below.
	GcpProjectLists []SdnconnectorGcpProjectList `pulumi:"gcpProjectLists"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Group name of computers.
	GroupName *string `pulumi:"groupName"`
	// Enable/disable use for FortiGate HA service. Valid values: `disable`, `enable`.
	HaStatus *string `pulumi:"haStatus"`
	// IBM cloud region name.
	IbmRegion *string `pulumi:"ibmRegion"`
	// IBM cloud compute generation 1 region name. Valid values: `us-south`, `us-east`, `germany`, `great-britain`, `japan`, `australia`.
	IbmRegionGen1 *string `pulumi:"ibmRegionGen1"`
	// IBM cloud compute generation 2 region name. Valid values: `us-south`, `us-east`, `great-britain`.
	IbmRegionGen2 *string `pulumi:"ibmRegionGen2"`
	// Private key password.
	KeyPasswd *string `pulumi:"keyPasswd"`
	// Azure Stack login endpoint.
	LoginEndpoint *string `pulumi:"loginEndpoint"`
	// SDN connector name.
	Name *string `pulumi:"name"`
	// Configure Azure network interface. The structure of `nic` block is documented below.
	Nics []SdnconnectorNic `pulumi:"nics"`
	// OCI certificate.
	OciCert *string `pulumi:"ociCert"`
	// OCI pubkey fingerprint.
	OciFingerprint *string `pulumi:"ociFingerprint"`
	// OCI server region.
	OciRegion *string `pulumi:"ociRegion"`
	// Configure OCI region list. The structure of `ociRegionList` block is documented below.
	OciRegionLists []SdnconnectorOciRegionList `pulumi:"ociRegionLists"`
	// OCI region type. Valid values: `commercial`, `government`.
	OciRegionType *string `pulumi:"ociRegionType"`
	// Password of the remote SDN connector as login credentials.
	Password *string `pulumi:"password"`
	// Private key of GCP service account.
	PrivateKey *string `pulumi:"privateKey"`
	// SDN proxy.
	Proxy *string `pulumi:"proxy"`
	// AWS region name.
	Region *string `pulumi:"region"`
	// Azure resource group.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Azure Stack resource URL.
	ResourceUrl *string `pulumi:"resourceUrl"`
	// Configure Azure route table. The structure of `routeTable` block is documented below.
	RouteTables []SdnconnectorRouteTable `pulumi:"routeTables"`
	// Configure GCP route. The structure of `route` block is documented below.
	Routes []SdnconnectorRoute `pulumi:"routes"`
	// AWS secret access key.
	SecretKey *string `pulumi:"secretKey"`
	// Secret token of Kubernetes service account.
	SecretToken *string `pulumi:"secretToken"`
	// Server address of the remote SDN connector.
	Server *string `pulumi:"server"`
	// Trust only those servers whose certificate is directly/indirectly signed by this certificate.
	ServerCaCert *string `pulumi:"serverCaCert"`
	// Trust servers that contain this certificate only.
	ServerCert *string `pulumi:"serverCert"`
	// Server address list of the remote SDN connector. The structure of `serverList` block is documented below.
	ServerLists []SdnconnectorServerList `pulumi:"serverLists"`
	// Port number of the remote SDN connector.
	ServerPort *int `pulumi:"serverPort"`
	// GCP service account email.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Enable/disable connection to the remote SDN connector. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Azure subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Tenant ID (directory ID).
	TenantId *string `pulumi:"tenantId"`
	// Type of SDN connector.
	Type *string `pulumi:"type"`
	// Dynamic object update interval (0 - 3600 sec, 0 means disabled, default = 60).
	UpdateInterval *int `pulumi:"updateInterval"`
	// Enable/disable using IAM role from metadata to call API. Valid values: `disable`, `enable`.
	UseMetadataIam *string `pulumi:"useMetadataIam"`
	// User ID.
	UserId *string `pulumi:"userId"`
	// Username of the remote SDN connector as login credentials.
	Username *string `pulumi:"username"`
	// vCenter server password for NSX quarantine.
	VcenterPassword *string `pulumi:"vcenterPassword"`
	// vCenter server address for NSX quarantine.
	VcenterServer *string `pulumi:"vcenterServer"`
	// vCenter server username for NSX quarantine.
	VcenterUsername *string `pulumi:"vcenterUsername"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable server certificate verification. Valid values: `disable`, `enable`.
	VerifyCertificate *string `pulumi:"verifyCertificate"`
	// AWS VPC ID.
	VpcId *string `pulumi:"vpcId"`
}

type SdnconnectorState struct {
	// AWS access key ID.
	AccessKey pulumi.StringPtrInput
	// Enable/disable AWS alternative resource IP. Valid values: `disable`, `enable`.
	AltResourceIp pulumi.StringPtrInput
	// IBM cloud API key or service ID API key.
	ApiKey pulumi.StringPtrInput
	// Azure server region. Valid values: `global`, `china`, `germany`, `usgov`, `local`.
	AzureRegion pulumi.StringPtrInput
	// Azure client ID (application ID).
	ClientId pulumi.StringPtrInput
	// Azure client secret (application key).
	ClientSecret pulumi.StringPtrInput
	// Compartment ID.
	CompartmentId pulumi.StringPtrInput
	// Configure OCI compartment list. The structure of `compartmentList` block is documented below.
	CompartmentLists SdnconnectorCompartmentListArrayInput
	// Compute generation for IBM cloud infrastructure.
	ComputeGeneration pulumi.IntPtrInput
	// Domain name.
	Domain pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Configure AWS external account list. The structure of `externalAccountList` block is documented below.
	ExternalAccountLists SdnconnectorExternalAccountListArrayInput
	// Configure GCP external IP. The structure of `externalIp` block is documented below.
	ExternalIps SdnconnectorExternalIpArrayInput
	// Configure GCP forwarding rule. The structure of `forwardingRule` block is documented below.
	ForwardingRules SdnconnectorForwardingRuleArrayInput
	// GCP project name.
	GcpProject pulumi.StringPtrInput
	// Configure GCP project list. The structure of `gcpProjectList` block is documented below.
	GcpProjectLists SdnconnectorGcpProjectListArrayInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Group name of computers.
	GroupName pulumi.StringPtrInput
	// Enable/disable use for FortiGate HA service. Valid values: `disable`, `enable`.
	HaStatus pulumi.StringPtrInput
	// IBM cloud region name.
	IbmRegion pulumi.StringPtrInput
	// IBM cloud compute generation 1 region name. Valid values: `us-south`, `us-east`, `germany`, `great-britain`, `japan`, `australia`.
	IbmRegionGen1 pulumi.StringPtrInput
	// IBM cloud compute generation 2 region name. Valid values: `us-south`, `us-east`, `great-britain`.
	IbmRegionGen2 pulumi.StringPtrInput
	// Private key password.
	KeyPasswd pulumi.StringPtrInput
	// Azure Stack login endpoint.
	LoginEndpoint pulumi.StringPtrInput
	// SDN connector name.
	Name pulumi.StringPtrInput
	// Configure Azure network interface. The structure of `nic` block is documented below.
	Nics SdnconnectorNicArrayInput
	// OCI certificate.
	OciCert pulumi.StringPtrInput
	// OCI pubkey fingerprint.
	OciFingerprint pulumi.StringPtrInput
	// OCI server region.
	OciRegion pulumi.StringPtrInput
	// Configure OCI region list. The structure of `ociRegionList` block is documented below.
	OciRegionLists SdnconnectorOciRegionListArrayInput
	// OCI region type. Valid values: `commercial`, `government`.
	OciRegionType pulumi.StringPtrInput
	// Password of the remote SDN connector as login credentials.
	Password pulumi.StringPtrInput
	// Private key of GCP service account.
	PrivateKey pulumi.StringPtrInput
	// SDN proxy.
	Proxy pulumi.StringPtrInput
	// AWS region name.
	Region pulumi.StringPtrInput
	// Azure resource group.
	ResourceGroup pulumi.StringPtrInput
	// Azure Stack resource URL.
	ResourceUrl pulumi.StringPtrInput
	// Configure Azure route table. The structure of `routeTable` block is documented below.
	RouteTables SdnconnectorRouteTableArrayInput
	// Configure GCP route. The structure of `route` block is documented below.
	Routes SdnconnectorRouteArrayInput
	// AWS secret access key.
	SecretKey pulumi.StringPtrInput
	// Secret token of Kubernetes service account.
	SecretToken pulumi.StringPtrInput
	// Server address of the remote SDN connector.
	Server pulumi.StringPtrInput
	// Trust only those servers whose certificate is directly/indirectly signed by this certificate.
	ServerCaCert pulumi.StringPtrInput
	// Trust servers that contain this certificate only.
	ServerCert pulumi.StringPtrInput
	// Server address list of the remote SDN connector. The structure of `serverList` block is documented below.
	ServerLists SdnconnectorServerListArrayInput
	// Port number of the remote SDN connector.
	ServerPort pulumi.IntPtrInput
	// GCP service account email.
	ServiceAccount pulumi.StringPtrInput
	// Enable/disable connection to the remote SDN connector. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Azure subscription ID.
	SubscriptionId pulumi.StringPtrInput
	// Tenant ID (directory ID).
	TenantId pulumi.StringPtrInput
	// Type of SDN connector.
	Type pulumi.StringPtrInput
	// Dynamic object update interval (0 - 3600 sec, 0 means disabled, default = 60).
	UpdateInterval pulumi.IntPtrInput
	// Enable/disable using IAM role from metadata to call API. Valid values: `disable`, `enable`.
	UseMetadataIam pulumi.StringPtrInput
	// User ID.
	UserId pulumi.StringPtrInput
	// Username of the remote SDN connector as login credentials.
	Username pulumi.StringPtrInput
	// vCenter server password for NSX quarantine.
	VcenterPassword pulumi.StringPtrInput
	// vCenter server address for NSX quarantine.
	VcenterServer pulumi.StringPtrInput
	// vCenter server username for NSX quarantine.
	VcenterUsername pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable server certificate verification. Valid values: `disable`, `enable`.
	VerifyCertificate pulumi.StringPtrInput
	// AWS VPC ID.
	VpcId pulumi.StringPtrInput
}

func (SdnconnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*sdnconnectorState)(nil)).Elem()
}

type sdnconnectorArgs struct {
	// AWS access key ID.
	AccessKey *string `pulumi:"accessKey"`
	// Enable/disable AWS alternative resource IP. Valid values: `disable`, `enable`.
	AltResourceIp *string `pulumi:"altResourceIp"`
	// IBM cloud API key or service ID API key.
	ApiKey *string `pulumi:"apiKey"`
	// Azure server region. Valid values: `global`, `china`, `germany`, `usgov`, `local`.
	AzureRegion *string `pulumi:"azureRegion"`
	// Azure client ID (application ID).
	ClientId *string `pulumi:"clientId"`
	// Azure client secret (application key).
	ClientSecret *string `pulumi:"clientSecret"`
	// Compartment ID.
	CompartmentId *string `pulumi:"compartmentId"`
	// Configure OCI compartment list. The structure of `compartmentList` block is documented below.
	CompartmentLists []SdnconnectorCompartmentList `pulumi:"compartmentLists"`
	// Compute generation for IBM cloud infrastructure.
	ComputeGeneration *int `pulumi:"computeGeneration"`
	// Domain name.
	Domain *string `pulumi:"domain"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Configure AWS external account list. The structure of `externalAccountList` block is documented below.
	ExternalAccountLists []SdnconnectorExternalAccountList `pulumi:"externalAccountLists"`
	// Configure GCP external IP. The structure of `externalIp` block is documented below.
	ExternalIps []SdnconnectorExternalIp `pulumi:"externalIps"`
	// Configure GCP forwarding rule. The structure of `forwardingRule` block is documented below.
	ForwardingRules []SdnconnectorForwardingRule `pulumi:"forwardingRules"`
	// GCP project name.
	GcpProject *string `pulumi:"gcpProject"`
	// Configure GCP project list. The structure of `gcpProjectList` block is documented below.
	GcpProjectLists []SdnconnectorGcpProjectList `pulumi:"gcpProjectLists"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Group name of computers.
	GroupName *string `pulumi:"groupName"`
	// Enable/disable use for FortiGate HA service. Valid values: `disable`, `enable`.
	HaStatus *string `pulumi:"haStatus"`
	// IBM cloud region name.
	IbmRegion *string `pulumi:"ibmRegion"`
	// IBM cloud compute generation 1 region name. Valid values: `us-south`, `us-east`, `germany`, `great-britain`, `japan`, `australia`.
	IbmRegionGen1 *string `pulumi:"ibmRegionGen1"`
	// IBM cloud compute generation 2 region name. Valid values: `us-south`, `us-east`, `great-britain`.
	IbmRegionGen2 *string `pulumi:"ibmRegionGen2"`
	// Private key password.
	KeyPasswd *string `pulumi:"keyPasswd"`
	// Azure Stack login endpoint.
	LoginEndpoint *string `pulumi:"loginEndpoint"`
	// SDN connector name.
	Name *string `pulumi:"name"`
	// Configure Azure network interface. The structure of `nic` block is documented below.
	Nics []SdnconnectorNic `pulumi:"nics"`
	// OCI certificate.
	OciCert *string `pulumi:"ociCert"`
	// OCI pubkey fingerprint.
	OciFingerprint *string `pulumi:"ociFingerprint"`
	// OCI server region.
	OciRegion *string `pulumi:"ociRegion"`
	// Configure OCI region list. The structure of `ociRegionList` block is documented below.
	OciRegionLists []SdnconnectorOciRegionList `pulumi:"ociRegionLists"`
	// OCI region type. Valid values: `commercial`, `government`.
	OciRegionType *string `pulumi:"ociRegionType"`
	// Password of the remote SDN connector as login credentials.
	Password *string `pulumi:"password"`
	// Private key of GCP service account.
	PrivateKey *string `pulumi:"privateKey"`
	// SDN proxy.
	Proxy *string `pulumi:"proxy"`
	// AWS region name.
	Region *string `pulumi:"region"`
	// Azure resource group.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Azure Stack resource URL.
	ResourceUrl *string `pulumi:"resourceUrl"`
	// Configure Azure route table. The structure of `routeTable` block is documented below.
	RouteTables []SdnconnectorRouteTable `pulumi:"routeTables"`
	// Configure GCP route. The structure of `route` block is documented below.
	Routes []SdnconnectorRoute `pulumi:"routes"`
	// AWS secret access key.
	SecretKey *string `pulumi:"secretKey"`
	// Secret token of Kubernetes service account.
	SecretToken *string `pulumi:"secretToken"`
	// Server address of the remote SDN connector.
	Server *string `pulumi:"server"`
	// Trust only those servers whose certificate is directly/indirectly signed by this certificate.
	ServerCaCert *string `pulumi:"serverCaCert"`
	// Trust servers that contain this certificate only.
	ServerCert *string `pulumi:"serverCert"`
	// Server address list of the remote SDN connector. The structure of `serverList` block is documented below.
	ServerLists []SdnconnectorServerList `pulumi:"serverLists"`
	// Port number of the remote SDN connector.
	ServerPort *int `pulumi:"serverPort"`
	// GCP service account email.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Enable/disable connection to the remote SDN connector. Valid values: `disable`, `enable`.
	Status string `pulumi:"status"`
	// Azure subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Tenant ID (directory ID).
	TenantId *string `pulumi:"tenantId"`
	// Type of SDN connector.
	Type string `pulumi:"type"`
	// Dynamic object update interval (0 - 3600 sec, 0 means disabled, default = 60).
	UpdateInterval *int `pulumi:"updateInterval"`
	// Enable/disable using IAM role from metadata to call API. Valid values: `disable`, `enable`.
	UseMetadataIam *string `pulumi:"useMetadataIam"`
	// User ID.
	UserId *string `pulumi:"userId"`
	// Username of the remote SDN connector as login credentials.
	Username *string `pulumi:"username"`
	// vCenter server password for NSX quarantine.
	VcenterPassword *string `pulumi:"vcenterPassword"`
	// vCenter server address for NSX quarantine.
	VcenterServer *string `pulumi:"vcenterServer"`
	// vCenter server username for NSX quarantine.
	VcenterUsername *string `pulumi:"vcenterUsername"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable server certificate verification. Valid values: `disable`, `enable`.
	VerifyCertificate *string `pulumi:"verifyCertificate"`
	// AWS VPC ID.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a Sdnconnector resource.
type SdnconnectorArgs struct {
	// AWS access key ID.
	AccessKey pulumi.StringPtrInput
	// Enable/disable AWS alternative resource IP. Valid values: `disable`, `enable`.
	AltResourceIp pulumi.StringPtrInput
	// IBM cloud API key or service ID API key.
	ApiKey pulumi.StringPtrInput
	// Azure server region. Valid values: `global`, `china`, `germany`, `usgov`, `local`.
	AzureRegion pulumi.StringPtrInput
	// Azure client ID (application ID).
	ClientId pulumi.StringPtrInput
	// Azure client secret (application key).
	ClientSecret pulumi.StringPtrInput
	// Compartment ID.
	CompartmentId pulumi.StringPtrInput
	// Configure OCI compartment list. The structure of `compartmentList` block is documented below.
	CompartmentLists SdnconnectorCompartmentListArrayInput
	// Compute generation for IBM cloud infrastructure.
	ComputeGeneration pulumi.IntPtrInput
	// Domain name.
	Domain pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Configure AWS external account list. The structure of `externalAccountList` block is documented below.
	ExternalAccountLists SdnconnectorExternalAccountListArrayInput
	// Configure GCP external IP. The structure of `externalIp` block is documented below.
	ExternalIps SdnconnectorExternalIpArrayInput
	// Configure GCP forwarding rule. The structure of `forwardingRule` block is documented below.
	ForwardingRules SdnconnectorForwardingRuleArrayInput
	// GCP project name.
	GcpProject pulumi.StringPtrInput
	// Configure GCP project list. The structure of `gcpProjectList` block is documented below.
	GcpProjectLists SdnconnectorGcpProjectListArrayInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Group name of computers.
	GroupName pulumi.StringPtrInput
	// Enable/disable use for FortiGate HA service. Valid values: `disable`, `enable`.
	HaStatus pulumi.StringPtrInput
	// IBM cloud region name.
	IbmRegion pulumi.StringPtrInput
	// IBM cloud compute generation 1 region name. Valid values: `us-south`, `us-east`, `germany`, `great-britain`, `japan`, `australia`.
	IbmRegionGen1 pulumi.StringPtrInput
	// IBM cloud compute generation 2 region name. Valid values: `us-south`, `us-east`, `great-britain`.
	IbmRegionGen2 pulumi.StringPtrInput
	// Private key password.
	KeyPasswd pulumi.StringPtrInput
	// Azure Stack login endpoint.
	LoginEndpoint pulumi.StringPtrInput
	// SDN connector name.
	Name pulumi.StringPtrInput
	// Configure Azure network interface. The structure of `nic` block is documented below.
	Nics SdnconnectorNicArrayInput
	// OCI certificate.
	OciCert pulumi.StringPtrInput
	// OCI pubkey fingerprint.
	OciFingerprint pulumi.StringPtrInput
	// OCI server region.
	OciRegion pulumi.StringPtrInput
	// Configure OCI region list. The structure of `ociRegionList` block is documented below.
	OciRegionLists SdnconnectorOciRegionListArrayInput
	// OCI region type. Valid values: `commercial`, `government`.
	OciRegionType pulumi.StringPtrInput
	// Password of the remote SDN connector as login credentials.
	Password pulumi.StringPtrInput
	// Private key of GCP service account.
	PrivateKey pulumi.StringPtrInput
	// SDN proxy.
	Proxy pulumi.StringPtrInput
	// AWS region name.
	Region pulumi.StringPtrInput
	// Azure resource group.
	ResourceGroup pulumi.StringPtrInput
	// Azure Stack resource URL.
	ResourceUrl pulumi.StringPtrInput
	// Configure Azure route table. The structure of `routeTable` block is documented below.
	RouteTables SdnconnectorRouteTableArrayInput
	// Configure GCP route. The structure of `route` block is documented below.
	Routes SdnconnectorRouteArrayInput
	// AWS secret access key.
	SecretKey pulumi.StringPtrInput
	// Secret token of Kubernetes service account.
	SecretToken pulumi.StringPtrInput
	// Server address of the remote SDN connector.
	Server pulumi.StringPtrInput
	// Trust only those servers whose certificate is directly/indirectly signed by this certificate.
	ServerCaCert pulumi.StringPtrInput
	// Trust servers that contain this certificate only.
	ServerCert pulumi.StringPtrInput
	// Server address list of the remote SDN connector. The structure of `serverList` block is documented below.
	ServerLists SdnconnectorServerListArrayInput
	// Port number of the remote SDN connector.
	ServerPort pulumi.IntPtrInput
	// GCP service account email.
	ServiceAccount pulumi.StringPtrInput
	// Enable/disable connection to the remote SDN connector. Valid values: `disable`, `enable`.
	Status pulumi.StringInput
	// Azure subscription ID.
	SubscriptionId pulumi.StringPtrInput
	// Tenant ID (directory ID).
	TenantId pulumi.StringPtrInput
	// Type of SDN connector.
	Type pulumi.StringInput
	// Dynamic object update interval (0 - 3600 sec, 0 means disabled, default = 60).
	UpdateInterval pulumi.IntPtrInput
	// Enable/disable using IAM role from metadata to call API. Valid values: `disable`, `enable`.
	UseMetadataIam pulumi.StringPtrInput
	// User ID.
	UserId pulumi.StringPtrInput
	// Username of the remote SDN connector as login credentials.
	Username pulumi.StringPtrInput
	// vCenter server password for NSX quarantine.
	VcenterPassword pulumi.StringPtrInput
	// vCenter server address for NSX quarantine.
	VcenterServer pulumi.StringPtrInput
	// vCenter server username for NSX quarantine.
	VcenterUsername pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable server certificate verification. Valid values: `disable`, `enable`.
	VerifyCertificate pulumi.StringPtrInput
	// AWS VPC ID.
	VpcId pulumi.StringPtrInput
}

func (SdnconnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sdnconnectorArgs)(nil)).Elem()
}

type SdnconnectorInput interface {
	pulumi.Input

	ToSdnconnectorOutput() SdnconnectorOutput
	ToSdnconnectorOutputWithContext(ctx context.Context) SdnconnectorOutput
}

func (*Sdnconnector) ElementType() reflect.Type {
	return reflect.TypeOf((**Sdnconnector)(nil)).Elem()
}

func (i *Sdnconnector) ToSdnconnectorOutput() SdnconnectorOutput {
	return i.ToSdnconnectorOutputWithContext(context.Background())
}

func (i *Sdnconnector) ToSdnconnectorOutputWithContext(ctx context.Context) SdnconnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorOutput)
}

// SdnconnectorArrayInput is an input type that accepts SdnconnectorArray and SdnconnectorArrayOutput values.
// You can construct a concrete instance of `SdnconnectorArrayInput` via:
//
//	SdnconnectorArray{ SdnconnectorArgs{...} }
type SdnconnectorArrayInput interface {
	pulumi.Input

	ToSdnconnectorArrayOutput() SdnconnectorArrayOutput
	ToSdnconnectorArrayOutputWithContext(context.Context) SdnconnectorArrayOutput
}

type SdnconnectorArray []SdnconnectorInput

func (SdnconnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Sdnconnector)(nil)).Elem()
}

func (i SdnconnectorArray) ToSdnconnectorArrayOutput() SdnconnectorArrayOutput {
	return i.ToSdnconnectorArrayOutputWithContext(context.Background())
}

func (i SdnconnectorArray) ToSdnconnectorArrayOutputWithContext(ctx context.Context) SdnconnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorArrayOutput)
}

// SdnconnectorMapInput is an input type that accepts SdnconnectorMap and SdnconnectorMapOutput values.
// You can construct a concrete instance of `SdnconnectorMapInput` via:
//
//	SdnconnectorMap{ "key": SdnconnectorArgs{...} }
type SdnconnectorMapInput interface {
	pulumi.Input

	ToSdnconnectorMapOutput() SdnconnectorMapOutput
	ToSdnconnectorMapOutputWithContext(context.Context) SdnconnectorMapOutput
}

type SdnconnectorMap map[string]SdnconnectorInput

func (SdnconnectorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Sdnconnector)(nil)).Elem()
}

func (i SdnconnectorMap) ToSdnconnectorMapOutput() SdnconnectorMapOutput {
	return i.ToSdnconnectorMapOutputWithContext(context.Background())
}

func (i SdnconnectorMap) ToSdnconnectorMapOutputWithContext(ctx context.Context) SdnconnectorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorMapOutput)
}

type SdnconnectorOutput struct{ *pulumi.OutputState }

func (SdnconnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sdnconnector)(nil)).Elem()
}

func (o SdnconnectorOutput) ToSdnconnectorOutput() SdnconnectorOutput {
	return o
}

func (o SdnconnectorOutput) ToSdnconnectorOutputWithContext(ctx context.Context) SdnconnectorOutput {
	return o
}

// AWS access key ID.
func (o SdnconnectorOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.AccessKey }).(pulumi.StringOutput)
}

// Enable/disable AWS alternative resource IP. Valid values: `disable`, `enable`.
func (o SdnconnectorOutput) AltResourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.AltResourceIp }).(pulumi.StringOutput)
}

// IBM cloud API key or service ID API key.
func (o SdnconnectorOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringPtrOutput { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// Azure server region. Valid values: `global`, `china`, `germany`, `usgov`, `local`.
func (o SdnconnectorOutput) AzureRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.AzureRegion }).(pulumi.StringOutput)
}

// Azure client ID (application ID).
func (o SdnconnectorOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// Azure client secret (application key).
func (o SdnconnectorOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringPtrOutput { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Compartment ID.
func (o SdnconnectorOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Configure OCI compartment list. The structure of `compartmentList` block is documented below.
func (o SdnconnectorOutput) CompartmentLists() SdnconnectorCompartmentListArrayOutput {
	return o.ApplyT(func(v *Sdnconnector) SdnconnectorCompartmentListArrayOutput { return v.CompartmentLists }).(SdnconnectorCompartmentListArrayOutput)
}

// Compute generation for IBM cloud infrastructure.
func (o SdnconnectorOutput) ComputeGeneration() pulumi.IntOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.IntOutput { return v.ComputeGeneration }).(pulumi.IntOutput)
}

// Domain name.
func (o SdnconnectorOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SdnconnectorOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Configure AWS external account list. The structure of `externalAccountList` block is documented below.
func (o SdnconnectorOutput) ExternalAccountLists() SdnconnectorExternalAccountListArrayOutput {
	return o.ApplyT(func(v *Sdnconnector) SdnconnectorExternalAccountListArrayOutput { return v.ExternalAccountLists }).(SdnconnectorExternalAccountListArrayOutput)
}

// Configure GCP external IP. The structure of `externalIp` block is documented below.
func (o SdnconnectorOutput) ExternalIps() SdnconnectorExternalIpArrayOutput {
	return o.ApplyT(func(v *Sdnconnector) SdnconnectorExternalIpArrayOutput { return v.ExternalIps }).(SdnconnectorExternalIpArrayOutput)
}

// Configure GCP forwarding rule. The structure of `forwardingRule` block is documented below.
func (o SdnconnectorOutput) ForwardingRules() SdnconnectorForwardingRuleArrayOutput {
	return o.ApplyT(func(v *Sdnconnector) SdnconnectorForwardingRuleArrayOutput { return v.ForwardingRules }).(SdnconnectorForwardingRuleArrayOutput)
}

// GCP project name.
func (o SdnconnectorOutput) GcpProject() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.GcpProject }).(pulumi.StringOutput)
}

// Configure GCP project list. The structure of `gcpProjectList` block is documented below.
func (o SdnconnectorOutput) GcpProjectLists() SdnconnectorGcpProjectListArrayOutput {
	return o.ApplyT(func(v *Sdnconnector) SdnconnectorGcpProjectListArrayOutput { return v.GcpProjectLists }).(SdnconnectorGcpProjectListArrayOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o SdnconnectorOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Group name of computers.
func (o SdnconnectorOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.GroupName }).(pulumi.StringOutput)
}

// Enable/disable use for FortiGate HA service. Valid values: `disable`, `enable`.
func (o SdnconnectorOutput) HaStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.HaStatus }).(pulumi.StringOutput)
}

// IBM cloud region name.
func (o SdnconnectorOutput) IbmRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.IbmRegion }).(pulumi.StringOutput)
}

// IBM cloud compute generation 1 region name. Valid values: `us-south`, `us-east`, `germany`, `great-britain`, `japan`, `australia`.
func (o SdnconnectorOutput) IbmRegionGen1() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.IbmRegionGen1 }).(pulumi.StringOutput)
}

// IBM cloud compute generation 2 region name. Valid values: `us-south`, `us-east`, `great-britain`.
func (o SdnconnectorOutput) IbmRegionGen2() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.IbmRegionGen2 }).(pulumi.StringOutput)
}

// Private key password.
func (o SdnconnectorOutput) KeyPasswd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringPtrOutput { return v.KeyPasswd }).(pulumi.StringPtrOutput)
}

// Azure Stack login endpoint.
func (o SdnconnectorOutput) LoginEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.LoginEndpoint }).(pulumi.StringOutput)
}

// SDN connector name.
func (o SdnconnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Configure Azure network interface. The structure of `nic` block is documented below.
func (o SdnconnectorOutput) Nics() SdnconnectorNicArrayOutput {
	return o.ApplyT(func(v *Sdnconnector) SdnconnectorNicArrayOutput { return v.Nics }).(SdnconnectorNicArrayOutput)
}

// OCI certificate.
func (o SdnconnectorOutput) OciCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.OciCert }).(pulumi.StringOutput)
}

// OCI pubkey fingerprint.
func (o SdnconnectorOutput) OciFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.OciFingerprint }).(pulumi.StringOutput)
}

// OCI server region.
func (o SdnconnectorOutput) OciRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.OciRegion }).(pulumi.StringOutput)
}

// Configure OCI region list. The structure of `ociRegionList` block is documented below.
func (o SdnconnectorOutput) OciRegionLists() SdnconnectorOciRegionListArrayOutput {
	return o.ApplyT(func(v *Sdnconnector) SdnconnectorOciRegionListArrayOutput { return v.OciRegionLists }).(SdnconnectorOciRegionListArrayOutput)
}

// OCI region type. Valid values: `commercial`, `government`.
func (o SdnconnectorOutput) OciRegionType() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.OciRegionType }).(pulumi.StringOutput)
}

// Password of the remote SDN connector as login credentials.
func (o SdnconnectorOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Private key of GCP service account.
func (o SdnconnectorOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.PrivateKey }).(pulumi.StringOutput)
}

// SDN proxy.
func (o SdnconnectorOutput) Proxy() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.Proxy }).(pulumi.StringOutput)
}

// AWS region name.
func (o SdnconnectorOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Azure resource group.
func (o SdnconnectorOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Azure Stack resource URL.
func (o SdnconnectorOutput) ResourceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.ResourceUrl }).(pulumi.StringOutput)
}

// Configure Azure route table. The structure of `routeTable` block is documented below.
func (o SdnconnectorOutput) RouteTables() SdnconnectorRouteTableArrayOutput {
	return o.ApplyT(func(v *Sdnconnector) SdnconnectorRouteTableArrayOutput { return v.RouteTables }).(SdnconnectorRouteTableArrayOutput)
}

// Configure GCP route. The structure of `route` block is documented below.
func (o SdnconnectorOutput) Routes() SdnconnectorRouteArrayOutput {
	return o.ApplyT(func(v *Sdnconnector) SdnconnectorRouteArrayOutput { return v.Routes }).(SdnconnectorRouteArrayOutput)
}

// AWS secret access key.
func (o SdnconnectorOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringPtrOutput { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Secret token of Kubernetes service account.
func (o SdnconnectorOutput) SecretToken() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.SecretToken }).(pulumi.StringOutput)
}

// Server address of the remote SDN connector.
func (o SdnconnectorOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

// Trust only those servers whose certificate is directly/indirectly signed by this certificate.
func (o SdnconnectorOutput) ServerCaCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.ServerCaCert }).(pulumi.StringOutput)
}

// Trust servers that contain this certificate only.
func (o SdnconnectorOutput) ServerCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.ServerCert }).(pulumi.StringOutput)
}

// Server address list of the remote SDN connector. The structure of `serverList` block is documented below.
func (o SdnconnectorOutput) ServerLists() SdnconnectorServerListArrayOutput {
	return o.ApplyT(func(v *Sdnconnector) SdnconnectorServerListArrayOutput { return v.ServerLists }).(SdnconnectorServerListArrayOutput)
}

// Port number of the remote SDN connector.
func (o SdnconnectorOutput) ServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.IntOutput { return v.ServerPort }).(pulumi.IntOutput)
}

// GCP service account email.
func (o SdnconnectorOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Enable/disable connection to the remote SDN connector. Valid values: `disable`, `enable`.
func (o SdnconnectorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Azure subscription ID.
func (o SdnconnectorOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Tenant ID (directory ID).
func (o SdnconnectorOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Type of SDN connector.
func (o SdnconnectorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Dynamic object update interval (0 - 3600 sec, 0 means disabled, default = 60).
func (o SdnconnectorOutput) UpdateInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.IntOutput { return v.UpdateInterval }).(pulumi.IntOutput)
}

// Enable/disable using IAM role from metadata to call API. Valid values: `disable`, `enable`.
func (o SdnconnectorOutput) UseMetadataIam() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.UseMetadataIam }).(pulumi.StringOutput)
}

// User ID.
func (o SdnconnectorOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

// Username of the remote SDN connector as login credentials.
func (o SdnconnectorOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

// vCenter server password for NSX quarantine.
func (o SdnconnectorOutput) VcenterPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringPtrOutput { return v.VcenterPassword }).(pulumi.StringPtrOutput)
}

// vCenter server address for NSX quarantine.
func (o SdnconnectorOutput) VcenterServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.VcenterServer }).(pulumi.StringOutput)
}

// vCenter server username for NSX quarantine.
func (o SdnconnectorOutput) VcenterUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.VcenterUsername }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SdnconnectorOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable server certificate verification. Valid values: `disable`, `enable`.
func (o SdnconnectorOutput) VerifyCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.VerifyCertificate }).(pulumi.StringOutput)
}

// AWS VPC ID.
func (o SdnconnectorOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Sdnconnector) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type SdnconnectorArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Sdnconnector)(nil)).Elem()
}

func (o SdnconnectorArrayOutput) ToSdnconnectorArrayOutput() SdnconnectorArrayOutput {
	return o
}

func (o SdnconnectorArrayOutput) ToSdnconnectorArrayOutputWithContext(ctx context.Context) SdnconnectorArrayOutput {
	return o
}

func (o SdnconnectorArrayOutput) Index(i pulumi.IntInput) SdnconnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Sdnconnector {
		return vs[0].([]*Sdnconnector)[vs[1].(int)]
	}).(SdnconnectorOutput)
}

type SdnconnectorMapOutput struct{ *pulumi.OutputState }

func (SdnconnectorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Sdnconnector)(nil)).Elem()
}

func (o SdnconnectorMapOutput) ToSdnconnectorMapOutput() SdnconnectorMapOutput {
	return o
}

func (o SdnconnectorMapOutput) ToSdnconnectorMapOutputWithContext(ctx context.Context) SdnconnectorMapOutput {
	return o
}

func (o SdnconnectorMapOutput) MapIndex(k pulumi.StringInput) SdnconnectorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Sdnconnector {
		return vs[0].(map[string]*Sdnconnector)[vs[1].(string)]
	}).(SdnconnectorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorInput)(nil)).Elem(), &Sdnconnector{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorArrayInput)(nil)).Elem(), SdnconnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorMapInput)(nil)).Elem(), SdnconnectorMap{})
	pulumi.RegisterOutputType(SdnconnectorOutput{})
	pulumi.RegisterOutputType(SdnconnectorArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorMapOutput{})
}
