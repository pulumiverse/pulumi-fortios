// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure virtual domain.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewVdom(ctx, "trname", &system.VdomArgs{
//				ShortName: pulumi.String("testvdom"),
//				Temporary: pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System Vdom can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/vdom:Vdom labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/vdom:Vdom labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Vdom struct {
	pulumi.CustomResourceState

	// Flag.
	Flag pulumi.IntOutput `pulumi:"flag"`
	// VDOM name.
	Name pulumi.StringOutput `pulumi:"name"`
	// VDOM short name.
	ShortName pulumi.StringOutput `pulumi:"shortName"`
	// Temporary.
	Temporary pulumi.IntOutput `pulumi:"temporary"`
	// Virtual cluster ID (0 - 4294967295).
	VclusterId pulumi.IntOutput `pulumi:"vclusterId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewVdom registers a new resource with the given unique name, arguments, and options.
func NewVdom(ctx *pulumi.Context,
	name string, args *VdomArgs, opts ...pulumi.ResourceOption) (*Vdom, error) {
	if args == nil {
		args = &VdomArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Vdom
	err := ctx.RegisterResource("fortios:system/vdom:Vdom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVdom gets an existing Vdom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVdom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VdomState, opts ...pulumi.ResourceOption) (*Vdom, error) {
	var resource Vdom
	err := ctx.ReadResource("fortios:system/vdom:Vdom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Vdom resources.
type vdomState struct {
	// Flag.
	Flag *int `pulumi:"flag"`
	// VDOM name.
	Name *string `pulumi:"name"`
	// VDOM short name.
	ShortName *string `pulumi:"shortName"`
	// Temporary.
	Temporary *int `pulumi:"temporary"`
	// Virtual cluster ID (0 - 4294967295).
	VclusterId *int `pulumi:"vclusterId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type VdomState struct {
	// Flag.
	Flag pulumi.IntPtrInput
	// VDOM name.
	Name pulumi.StringPtrInput
	// VDOM short name.
	ShortName pulumi.StringPtrInput
	// Temporary.
	Temporary pulumi.IntPtrInput
	// Virtual cluster ID (0 - 4294967295).
	VclusterId pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (VdomState) ElementType() reflect.Type {
	return reflect.TypeOf((*vdomState)(nil)).Elem()
}

type vdomArgs struct {
	// Flag.
	Flag *int `pulumi:"flag"`
	// VDOM name.
	Name *string `pulumi:"name"`
	// VDOM short name.
	ShortName *string `pulumi:"shortName"`
	// Temporary.
	Temporary *int `pulumi:"temporary"`
	// Virtual cluster ID (0 - 4294967295).
	VclusterId *int `pulumi:"vclusterId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Vdom resource.
type VdomArgs struct {
	// Flag.
	Flag pulumi.IntPtrInput
	// VDOM name.
	Name pulumi.StringPtrInput
	// VDOM short name.
	ShortName pulumi.StringPtrInput
	// Temporary.
	Temporary pulumi.IntPtrInput
	// Virtual cluster ID (0 - 4294967295).
	VclusterId pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (VdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vdomArgs)(nil)).Elem()
}

type VdomInput interface {
	pulumi.Input

	ToVdomOutput() VdomOutput
	ToVdomOutputWithContext(ctx context.Context) VdomOutput
}

func (*Vdom) ElementType() reflect.Type {
	return reflect.TypeOf((**Vdom)(nil)).Elem()
}

func (i *Vdom) ToVdomOutput() VdomOutput {
	return i.ToVdomOutputWithContext(context.Background())
}

func (i *Vdom) ToVdomOutputWithContext(ctx context.Context) VdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomOutput)
}

// VdomArrayInput is an input type that accepts VdomArray and VdomArrayOutput values.
// You can construct a concrete instance of `VdomArrayInput` via:
//
//	VdomArray{ VdomArgs{...} }
type VdomArrayInput interface {
	pulumi.Input

	ToVdomArrayOutput() VdomArrayOutput
	ToVdomArrayOutputWithContext(context.Context) VdomArrayOutput
}

type VdomArray []VdomInput

func (VdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Vdom)(nil)).Elem()
}

func (i VdomArray) ToVdomArrayOutput() VdomArrayOutput {
	return i.ToVdomArrayOutputWithContext(context.Background())
}

func (i VdomArray) ToVdomArrayOutputWithContext(ctx context.Context) VdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomArrayOutput)
}

// VdomMapInput is an input type that accepts VdomMap and VdomMapOutput values.
// You can construct a concrete instance of `VdomMapInput` via:
//
//	VdomMap{ "key": VdomArgs{...} }
type VdomMapInput interface {
	pulumi.Input

	ToVdomMapOutput() VdomMapOutput
	ToVdomMapOutputWithContext(context.Context) VdomMapOutput
}

type VdomMap map[string]VdomInput

func (VdomMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Vdom)(nil)).Elem()
}

func (i VdomMap) ToVdomMapOutput() VdomMapOutput {
	return i.ToVdomMapOutputWithContext(context.Background())
}

func (i VdomMap) ToVdomMapOutputWithContext(ctx context.Context) VdomMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomMapOutput)
}

type VdomOutput struct{ *pulumi.OutputState }

func (VdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Vdom)(nil)).Elem()
}

func (o VdomOutput) ToVdomOutput() VdomOutput {
	return o
}

func (o VdomOutput) ToVdomOutputWithContext(ctx context.Context) VdomOutput {
	return o
}

// Flag.
func (o VdomOutput) Flag() pulumi.IntOutput {
	return o.ApplyT(func(v *Vdom) pulumi.IntOutput { return v.Flag }).(pulumi.IntOutput)
}

// VDOM name.
func (o VdomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Vdom) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// VDOM short name.
func (o VdomOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v *Vdom) pulumi.StringOutput { return v.ShortName }).(pulumi.StringOutput)
}

// Temporary.
func (o VdomOutput) Temporary() pulumi.IntOutput {
	return o.ApplyT(func(v *Vdom) pulumi.IntOutput { return v.Temporary }).(pulumi.IntOutput)
}

// Virtual cluster ID (0 - 4294967295).
func (o VdomOutput) VclusterId() pulumi.IntOutput {
	return o.ApplyT(func(v *Vdom) pulumi.IntOutput { return v.VclusterId }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o VdomOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Vdom) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type VdomArrayOutput struct{ *pulumi.OutputState }

func (VdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Vdom)(nil)).Elem()
}

func (o VdomArrayOutput) ToVdomArrayOutput() VdomArrayOutput {
	return o
}

func (o VdomArrayOutput) ToVdomArrayOutputWithContext(ctx context.Context) VdomArrayOutput {
	return o
}

func (o VdomArrayOutput) Index(i pulumi.IntInput) VdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Vdom {
		return vs[0].([]*Vdom)[vs[1].(int)]
	}).(VdomOutput)
}

type VdomMapOutput struct{ *pulumi.OutputState }

func (VdomMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Vdom)(nil)).Elem()
}

func (o VdomMapOutput) ToVdomMapOutput() VdomMapOutput {
	return o
}

func (o VdomMapOutput) ToVdomMapOutputWithContext(ctx context.Context) VdomMapOutput {
	return o
}

func (o VdomMapOutput) MapIndex(k pulumi.StringInput) VdomOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Vdom {
		return vs[0].(map[string]*Vdom)[vs[1].(string)]
	}).(VdomOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VdomInput)(nil)).Elem(), &Vdom{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomArrayInput)(nil)).Elem(), VdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomMapInput)(nil)).Elem(), VdomMap{})
	pulumi.RegisterOutputType(VdomOutput{})
	pulumi.RegisterOutputType(VdomArrayOutput{})
	pulumi.RegisterOutputType(VdomMapOutput{})
}
