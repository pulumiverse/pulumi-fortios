// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Automation destinations.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewAutomationdestination(ctx, "trname", &system.AutomationdestinationArgs{
//				HaGroupId: pulumi.Int(0),
//				Type:      pulumi.String("fortigate"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// System AutomationDestination can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/automationdestination:Automationdestination labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/automationdestination:Automationdestination labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Automationdestination struct {
	pulumi.CustomResourceState

	// Destinations. The structure of `destination` block is documented below.
	Destinations AutomationdestinationDestinationArrayOutput `pulumi:"destinations"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Cluster group ID set for this destination (default = 0).
	HaGroupId pulumi.IntOutput `pulumi:"haGroupId"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Destination type. Valid values: `fortigate`, `ha-cluster`.
	Type pulumi.StringOutput `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAutomationdestination registers a new resource with the given unique name, arguments, and options.
func NewAutomationdestination(ctx *pulumi.Context,
	name string, args *AutomationdestinationArgs, opts ...pulumi.ResourceOption) (*Automationdestination, error) {
	if args == nil {
		args = &AutomationdestinationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Automationdestination
	err := ctx.RegisterResource("fortios:system/automationdestination:Automationdestination", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutomationdestination gets an existing Automationdestination resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutomationdestination(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutomationdestinationState, opts ...pulumi.ResourceOption) (*Automationdestination, error) {
	var resource Automationdestination
	err := ctx.ReadResource("fortios:system/automationdestination:Automationdestination", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Automationdestination resources.
type automationdestinationState struct {
	// Destinations. The structure of `destination` block is documented below.
	Destinations []AutomationdestinationDestination `pulumi:"destinations"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Cluster group ID set for this destination (default = 0).
	HaGroupId *int `pulumi:"haGroupId"`
	// Name.
	Name *string `pulumi:"name"`
	// Destination type. Valid values: `fortigate`, `ha-cluster`.
	Type *string `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AutomationdestinationState struct {
	// Destinations. The structure of `destination` block is documented below.
	Destinations AutomationdestinationDestinationArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Cluster group ID set for this destination (default = 0).
	HaGroupId pulumi.IntPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Destination type. Valid values: `fortigate`, `ha-cluster`.
	Type pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AutomationdestinationState) ElementType() reflect.Type {
	return reflect.TypeOf((*automationdestinationState)(nil)).Elem()
}

type automationdestinationArgs struct {
	// Destinations. The structure of `destination` block is documented below.
	Destinations []AutomationdestinationDestination `pulumi:"destinations"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Cluster group ID set for this destination (default = 0).
	HaGroupId *int `pulumi:"haGroupId"`
	// Name.
	Name *string `pulumi:"name"`
	// Destination type. Valid values: `fortigate`, `ha-cluster`.
	Type *string `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Automationdestination resource.
type AutomationdestinationArgs struct {
	// Destinations. The structure of `destination` block is documented below.
	Destinations AutomationdestinationDestinationArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Cluster group ID set for this destination (default = 0).
	HaGroupId pulumi.IntPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Destination type. Valid values: `fortigate`, `ha-cluster`.
	Type pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AutomationdestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*automationdestinationArgs)(nil)).Elem()
}

type AutomationdestinationInput interface {
	pulumi.Input

	ToAutomationdestinationOutput() AutomationdestinationOutput
	ToAutomationdestinationOutputWithContext(ctx context.Context) AutomationdestinationOutput
}

func (*Automationdestination) ElementType() reflect.Type {
	return reflect.TypeOf((**Automationdestination)(nil)).Elem()
}

func (i *Automationdestination) ToAutomationdestinationOutput() AutomationdestinationOutput {
	return i.ToAutomationdestinationOutputWithContext(context.Background())
}

func (i *Automationdestination) ToAutomationdestinationOutputWithContext(ctx context.Context) AutomationdestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationdestinationOutput)
}

// AutomationdestinationArrayInput is an input type that accepts AutomationdestinationArray and AutomationdestinationArrayOutput values.
// You can construct a concrete instance of `AutomationdestinationArrayInput` via:
//
//	AutomationdestinationArray{ AutomationdestinationArgs{...} }
type AutomationdestinationArrayInput interface {
	pulumi.Input

	ToAutomationdestinationArrayOutput() AutomationdestinationArrayOutput
	ToAutomationdestinationArrayOutputWithContext(context.Context) AutomationdestinationArrayOutput
}

type AutomationdestinationArray []AutomationdestinationInput

func (AutomationdestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Automationdestination)(nil)).Elem()
}

func (i AutomationdestinationArray) ToAutomationdestinationArrayOutput() AutomationdestinationArrayOutput {
	return i.ToAutomationdestinationArrayOutputWithContext(context.Background())
}

func (i AutomationdestinationArray) ToAutomationdestinationArrayOutputWithContext(ctx context.Context) AutomationdestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationdestinationArrayOutput)
}

// AutomationdestinationMapInput is an input type that accepts AutomationdestinationMap and AutomationdestinationMapOutput values.
// You can construct a concrete instance of `AutomationdestinationMapInput` via:
//
//	AutomationdestinationMap{ "key": AutomationdestinationArgs{...} }
type AutomationdestinationMapInput interface {
	pulumi.Input

	ToAutomationdestinationMapOutput() AutomationdestinationMapOutput
	ToAutomationdestinationMapOutputWithContext(context.Context) AutomationdestinationMapOutput
}

type AutomationdestinationMap map[string]AutomationdestinationInput

func (AutomationdestinationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Automationdestination)(nil)).Elem()
}

func (i AutomationdestinationMap) ToAutomationdestinationMapOutput() AutomationdestinationMapOutput {
	return i.ToAutomationdestinationMapOutputWithContext(context.Background())
}

func (i AutomationdestinationMap) ToAutomationdestinationMapOutputWithContext(ctx context.Context) AutomationdestinationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationdestinationMapOutput)
}

type AutomationdestinationOutput struct{ *pulumi.OutputState }

func (AutomationdestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Automationdestination)(nil)).Elem()
}

func (o AutomationdestinationOutput) ToAutomationdestinationOutput() AutomationdestinationOutput {
	return o
}

func (o AutomationdestinationOutput) ToAutomationdestinationOutputWithContext(ctx context.Context) AutomationdestinationOutput {
	return o
}

// Destinations. The structure of `destination` block is documented below.
func (o AutomationdestinationOutput) Destinations() AutomationdestinationDestinationArrayOutput {
	return o.ApplyT(func(v *Automationdestination) AutomationdestinationDestinationArrayOutput { return v.Destinations }).(AutomationdestinationDestinationArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o AutomationdestinationOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Automationdestination) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o AutomationdestinationOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Automationdestination) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Cluster group ID set for this destination (default = 0).
func (o AutomationdestinationOutput) HaGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v *Automationdestination) pulumi.IntOutput { return v.HaGroupId }).(pulumi.IntOutput)
}

// Name.
func (o AutomationdestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Automationdestination) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Destination type. Valid values: `fortigate`, `ha-cluster`.
func (o AutomationdestinationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Automationdestination) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o AutomationdestinationOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Automationdestination) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type AutomationdestinationArrayOutput struct{ *pulumi.OutputState }

func (AutomationdestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Automationdestination)(nil)).Elem()
}

func (o AutomationdestinationArrayOutput) ToAutomationdestinationArrayOutput() AutomationdestinationArrayOutput {
	return o
}

func (o AutomationdestinationArrayOutput) ToAutomationdestinationArrayOutputWithContext(ctx context.Context) AutomationdestinationArrayOutput {
	return o
}

func (o AutomationdestinationArrayOutput) Index(i pulumi.IntInput) AutomationdestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Automationdestination {
		return vs[0].([]*Automationdestination)[vs[1].(int)]
	}).(AutomationdestinationOutput)
}

type AutomationdestinationMapOutput struct{ *pulumi.OutputState }

func (AutomationdestinationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Automationdestination)(nil)).Elem()
}

func (o AutomationdestinationMapOutput) ToAutomationdestinationMapOutput() AutomationdestinationMapOutput {
	return o
}

func (o AutomationdestinationMapOutput) ToAutomationdestinationMapOutputWithContext(ctx context.Context) AutomationdestinationMapOutput {
	return o
}

func (o AutomationdestinationMapOutput) MapIndex(k pulumi.StringInput) AutomationdestinationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Automationdestination {
		return vs[0].(map[string]*Automationdestination)[vs[1].(string)]
	}).(AutomationdestinationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationdestinationInput)(nil)).Elem(), &Automationdestination{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationdestinationArrayInput)(nil)).Elem(), AutomationdestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationdestinationMapInput)(nil)).Elem(), AutomationdestinationMap{})
	pulumi.RegisterOutputType(AutomationdestinationOutput{})
	pulumi.RegisterOutputType(AutomationdestinationArrayOutput{})
	pulumi.RegisterOutputType(AutomationdestinationMapOutput{})
}
