// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Provides a resource to configure VDOM of FortiOS. The API user of the token for this feature should have a super admin profile, It can be set in CLI while GUI does not allow.
//
// !> **Warning:** The resource will be deprecated and replaced by new resource `system.Vdom`, we recommend that you use the new resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewVdomSetting(ctx, "test2", &system.VdomSettingArgs{
//				ShortName: pulumi.String("aa1122"),
//				Temporary: pulumi.String("0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type VdomSetting struct {
	pulumi.CustomResourceState

	// VDOM name.
	Name pulumi.StringOutput `pulumi:"name"`
	// VDOM short name.
	ShortName pulumi.StringOutput `pulumi:"shortName"`
	// Temporary.
	Temporary pulumi.StringOutput `pulumi:"temporary"`
}

// NewVdomSetting registers a new resource with the given unique name, arguments, and options.
func NewVdomSetting(ctx *pulumi.Context,
	name string, args *VdomSettingArgs, opts ...pulumi.ResourceOption) (*VdomSetting, error) {
	if args == nil {
		args = &VdomSettingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VdomSetting
	err := ctx.RegisterResource("fortios:system/vdomSetting:VdomSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVdomSetting gets an existing VdomSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVdomSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VdomSettingState, opts ...pulumi.ResourceOption) (*VdomSetting, error) {
	var resource VdomSetting
	err := ctx.ReadResource("fortios:system/vdomSetting:VdomSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VdomSetting resources.
type vdomSettingState struct {
	// VDOM name.
	Name *string `pulumi:"name"`
	// VDOM short name.
	ShortName *string `pulumi:"shortName"`
	// Temporary.
	Temporary *string `pulumi:"temporary"`
}

type VdomSettingState struct {
	// VDOM name.
	Name pulumi.StringPtrInput
	// VDOM short name.
	ShortName pulumi.StringPtrInput
	// Temporary.
	Temporary pulumi.StringPtrInput
}

func (VdomSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*vdomSettingState)(nil)).Elem()
}

type vdomSettingArgs struct {
	// VDOM name.
	Name *string `pulumi:"name"`
	// VDOM short name.
	ShortName *string `pulumi:"shortName"`
	// Temporary.
	Temporary *string `pulumi:"temporary"`
}

// The set of arguments for constructing a VdomSetting resource.
type VdomSettingArgs struct {
	// VDOM name.
	Name pulumi.StringPtrInput
	// VDOM short name.
	ShortName pulumi.StringPtrInput
	// Temporary.
	Temporary pulumi.StringPtrInput
}

func (VdomSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vdomSettingArgs)(nil)).Elem()
}

type VdomSettingInput interface {
	pulumi.Input

	ToVdomSettingOutput() VdomSettingOutput
	ToVdomSettingOutputWithContext(ctx context.Context) VdomSettingOutput
}

func (*VdomSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**VdomSetting)(nil)).Elem()
}

func (i *VdomSetting) ToVdomSettingOutput() VdomSettingOutput {
	return i.ToVdomSettingOutputWithContext(context.Background())
}

func (i *VdomSetting) ToVdomSettingOutputWithContext(ctx context.Context) VdomSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomSettingOutput)
}

// VdomSettingArrayInput is an input type that accepts VdomSettingArray and VdomSettingArrayOutput values.
// You can construct a concrete instance of `VdomSettingArrayInput` via:
//
//	VdomSettingArray{ VdomSettingArgs{...} }
type VdomSettingArrayInput interface {
	pulumi.Input

	ToVdomSettingArrayOutput() VdomSettingArrayOutput
	ToVdomSettingArrayOutputWithContext(context.Context) VdomSettingArrayOutput
}

type VdomSettingArray []VdomSettingInput

func (VdomSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VdomSetting)(nil)).Elem()
}

func (i VdomSettingArray) ToVdomSettingArrayOutput() VdomSettingArrayOutput {
	return i.ToVdomSettingArrayOutputWithContext(context.Background())
}

func (i VdomSettingArray) ToVdomSettingArrayOutputWithContext(ctx context.Context) VdomSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomSettingArrayOutput)
}

// VdomSettingMapInput is an input type that accepts VdomSettingMap and VdomSettingMapOutput values.
// You can construct a concrete instance of `VdomSettingMapInput` via:
//
//	VdomSettingMap{ "key": VdomSettingArgs{...} }
type VdomSettingMapInput interface {
	pulumi.Input

	ToVdomSettingMapOutput() VdomSettingMapOutput
	ToVdomSettingMapOutputWithContext(context.Context) VdomSettingMapOutput
}

type VdomSettingMap map[string]VdomSettingInput

func (VdomSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VdomSetting)(nil)).Elem()
}

func (i VdomSettingMap) ToVdomSettingMapOutput() VdomSettingMapOutput {
	return i.ToVdomSettingMapOutputWithContext(context.Background())
}

func (i VdomSettingMap) ToVdomSettingMapOutputWithContext(ctx context.Context) VdomSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomSettingMapOutput)
}

type VdomSettingOutput struct{ *pulumi.OutputState }

func (VdomSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VdomSetting)(nil)).Elem()
}

func (o VdomSettingOutput) ToVdomSettingOutput() VdomSettingOutput {
	return o
}

func (o VdomSettingOutput) ToVdomSettingOutputWithContext(ctx context.Context) VdomSettingOutput {
	return o
}

// VDOM name.
func (o VdomSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VdomSetting) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// VDOM short name.
func (o VdomSettingOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v *VdomSetting) pulumi.StringOutput { return v.ShortName }).(pulumi.StringOutput)
}

// Temporary.
func (o VdomSettingOutput) Temporary() pulumi.StringOutput {
	return o.ApplyT(func(v *VdomSetting) pulumi.StringOutput { return v.Temporary }).(pulumi.StringOutput)
}

type VdomSettingArrayOutput struct{ *pulumi.OutputState }

func (VdomSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VdomSetting)(nil)).Elem()
}

func (o VdomSettingArrayOutput) ToVdomSettingArrayOutput() VdomSettingArrayOutput {
	return o
}

func (o VdomSettingArrayOutput) ToVdomSettingArrayOutputWithContext(ctx context.Context) VdomSettingArrayOutput {
	return o
}

func (o VdomSettingArrayOutput) Index(i pulumi.IntInput) VdomSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VdomSetting {
		return vs[0].([]*VdomSetting)[vs[1].(int)]
	}).(VdomSettingOutput)
}

type VdomSettingMapOutput struct{ *pulumi.OutputState }

func (VdomSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VdomSetting)(nil)).Elem()
}

func (o VdomSettingMapOutput) ToVdomSettingMapOutput() VdomSettingMapOutput {
	return o
}

func (o VdomSettingMapOutput) ToVdomSettingMapOutputWithContext(ctx context.Context) VdomSettingMapOutput {
	return o
}

func (o VdomSettingMapOutput) MapIndex(k pulumi.StringInput) VdomSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VdomSetting {
		return vs[0].(map[string]*VdomSetting)[vs[1].(string)]
	}).(VdomSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VdomSettingInput)(nil)).Elem(), &VdomSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomSettingArrayInput)(nil)).Elem(), VdomSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomSettingMapInput)(nil)).Elem(), VdomSettingMap{})
	pulumi.RegisterOutputType(VdomSettingOutput{})
	pulumi.RegisterOutputType(VdomSettingArrayOutput{})
	pulumi.RegisterOutputType(VdomSettingMapOutput{})
}
