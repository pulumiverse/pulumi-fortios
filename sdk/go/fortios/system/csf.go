// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Add this FortiGate to a Security Fabric or set up a new Security Fabric on this FortiGate.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewCsf(ctx, "trname", &system.CsfArgs{
//				ConfigurationSync: pulumi.String("default"),
//				GroupPassword:     pulumi.String("tmp"),
//				ManagementIp:      pulumi.String("0.0.0.0"),
//				ManagementPort:    pulumi.Int(33),
//				Status:            pulumi.String("disable"),
//				UpstreamIp:        pulumi.String("0.0.0.0"),
//				UpstreamPort:      pulumi.Int(8013),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// System Csf can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/csf:Csf labelname SystemCsf
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/csf:Csf labelname SystemCsf
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Csf struct {
	pulumi.CustomResourceState

	// Accept connections with unknown certificates and ask admin for approval. Valid values: `disable`, `enable`.
	AcceptAuthByCert pulumi.StringOutput `pulumi:"acceptAuthByCert"`
	// Authorization request type. Valid values: `serial`, `certificate`.
	AuthorizationRequestType pulumi.StringOutput `pulumi:"authorizationRequestType"`
	// Certificate.
	Certificate pulumi.StringOutput `pulumi:"certificate"`
	// Configuration sync mode. Valid values: `default`, `local`.
	ConfigurationSync pulumi.StringOutput `pulumi:"configurationSync"`
	// Enable/disable downstream device access to this device's configuration and data. Valid values: `enable`, `disable`.
	DownstreamAccess pulumi.StringOutput `pulumi:"downstreamAccess"`
	// Default access profile for requests from downstream devices.
	DownstreamAccprofile pulumi.StringOutput `pulumi:"downstreamAccprofile"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Fabric connector configuration. The structure of `fabricConnector` block is documented below.
	FabricConnectors CsfFabricConnectorArrayOutput `pulumi:"fabricConnectors"`
	// Fabric device configuration. The structure of `fabricDevice` block is documented below.
	FabricDevices CsfFabricDeviceArrayOutput `pulumi:"fabricDevices"`
	// Fabric CMDB Object Unification Valid values: `default`, `local`.
	FabricObjectUnification pulumi.StringOutput `pulumi:"fabricObjectUnification"`
	// Number of worker processes for Security Fabric daemon.
	FabricWorkers pulumi.IntOutput `pulumi:"fabricWorkers"`
	// Enable/disable Security Fabric daemon file management. Valid values: `enable`, `disable`.
	FileMgmt pulumi.StringOutput `pulumi:"fileMgmt"`
	// Maximum amount of memory that can be used by the daemon files (in bytes).
	FileQuota pulumi.IntOutput `pulumi:"fileQuota"`
	// Warn when the set percentage of quota has been used.
	FileQuotaWarning pulumi.IntOutput `pulumi:"fileQuotaWarning"`
	// Auto-generated fixed key used when this device is the root. (Will automatically be generated if not set.)
	FixedKey pulumi.StringPtrOutput `pulumi:"fixedKey"`
	// Fabric FortiCloud account unification. Valid values: `enable`, `disable`.
	ForticloudAccountEnforcement pulumi.StringOutput `pulumi:"forticloudAccountEnforcement"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Security Fabric group name. All FortiGates in a Security Fabric must have the same group name.
	GroupName pulumi.StringOutput `pulumi:"groupName"`
	// Security Fabric group password. All FortiGates in a Security Fabric must have the same group password.
	GroupPassword pulumi.StringPtrOutput `pulumi:"groupPassword"`
	// Enable/disable broadcast of discovery messages for log unification. Valid values: `disable`, `enable`.
	LogUnification pulumi.StringOutput `pulumi:"logUnification"`
	// Management IP address of this FortiGate. Used to log into this FortiGate from another FortiGate in the Security Fabric.
	ManagementIp pulumi.StringOutput `pulumi:"managementIp"`
	// Overriding port for management connection (Overrides admin port).
	ManagementPort pulumi.IntOutput `pulumi:"managementPort"`
	// SAML setting configuration synchronization. Valid values: `default`, `local`.
	SamlConfigurationSync pulumi.StringOutput `pulumi:"samlConfigurationSync"`
	// Enable/disable Security Fabric. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Pre-authorized and blocked security fabric nodes. The structure of `trustedList` block is documented below.
	TrustedLists CsfTrustedListArrayOutput `pulumi:"trustedLists"`
	// Unique ID of the current CSF node
	Uid pulumi.StringOutput `pulumi:"uid"`
	// IP/FQDN of the FortiGate upstream from this FortiGate in the Security Fabric.
	Upstream pulumi.StringOutput `pulumi:"upstream"`
	// IP address of the FortiGate upstream from this FortiGate in the Security Fabric.
	UpstreamIp pulumi.StringOutput `pulumi:"upstreamIp"`
	// The port number to use to communicate with the FortiGate upstream from this FortiGate in the Security Fabric (default = 8013).
	UpstreamPort pulumi.IntOutput `pulumi:"upstreamPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewCsf registers a new resource with the given unique name, arguments, and options.
func NewCsf(ctx *pulumi.Context,
	name string, args *CsfArgs, opts ...pulumi.ResourceOption) (*Csf, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	if args.FixedKey != nil {
		args.FixedKey = pulumi.ToSecret(args.FixedKey).(pulumi.StringPtrInput)
	}
	if args.GroupPassword != nil {
		args.GroupPassword = pulumi.ToSecret(args.GroupPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"fixedKey",
		"groupPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Csf
	err := ctx.RegisterResource("fortios:system/csf:Csf", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCsf gets an existing Csf resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCsf(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CsfState, opts ...pulumi.ResourceOption) (*Csf, error) {
	var resource Csf
	err := ctx.ReadResource("fortios:system/csf:Csf", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Csf resources.
type csfState struct {
	// Accept connections with unknown certificates and ask admin for approval. Valid values: `disable`, `enable`.
	AcceptAuthByCert *string `pulumi:"acceptAuthByCert"`
	// Authorization request type. Valid values: `serial`, `certificate`.
	AuthorizationRequestType *string `pulumi:"authorizationRequestType"`
	// Certificate.
	Certificate *string `pulumi:"certificate"`
	// Configuration sync mode. Valid values: `default`, `local`.
	ConfigurationSync *string `pulumi:"configurationSync"`
	// Enable/disable downstream device access to this device's configuration and data. Valid values: `enable`, `disable`.
	DownstreamAccess *string `pulumi:"downstreamAccess"`
	// Default access profile for requests from downstream devices.
	DownstreamAccprofile *string `pulumi:"downstreamAccprofile"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Fabric connector configuration. The structure of `fabricConnector` block is documented below.
	FabricConnectors []CsfFabricConnector `pulumi:"fabricConnectors"`
	// Fabric device configuration. The structure of `fabricDevice` block is documented below.
	FabricDevices []CsfFabricDevice `pulumi:"fabricDevices"`
	// Fabric CMDB Object Unification Valid values: `default`, `local`.
	FabricObjectUnification *string `pulumi:"fabricObjectUnification"`
	// Number of worker processes for Security Fabric daemon.
	FabricWorkers *int `pulumi:"fabricWorkers"`
	// Enable/disable Security Fabric daemon file management. Valid values: `enable`, `disable`.
	FileMgmt *string `pulumi:"fileMgmt"`
	// Maximum amount of memory that can be used by the daemon files (in bytes).
	FileQuota *int `pulumi:"fileQuota"`
	// Warn when the set percentage of quota has been used.
	FileQuotaWarning *int `pulumi:"fileQuotaWarning"`
	// Auto-generated fixed key used when this device is the root. (Will automatically be generated if not set.)
	FixedKey *string `pulumi:"fixedKey"`
	// Fabric FortiCloud account unification. Valid values: `enable`, `disable`.
	ForticloudAccountEnforcement *string `pulumi:"forticloudAccountEnforcement"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Security Fabric group name. All FortiGates in a Security Fabric must have the same group name.
	GroupName *string `pulumi:"groupName"`
	// Security Fabric group password. All FortiGates in a Security Fabric must have the same group password.
	GroupPassword *string `pulumi:"groupPassword"`
	// Enable/disable broadcast of discovery messages for log unification. Valid values: `disable`, `enable`.
	LogUnification *string `pulumi:"logUnification"`
	// Management IP address of this FortiGate. Used to log into this FortiGate from another FortiGate in the Security Fabric.
	ManagementIp *string `pulumi:"managementIp"`
	// Overriding port for management connection (Overrides admin port).
	ManagementPort *int `pulumi:"managementPort"`
	// SAML setting configuration synchronization. Valid values: `default`, `local`.
	SamlConfigurationSync *string `pulumi:"samlConfigurationSync"`
	// Enable/disable Security Fabric. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Pre-authorized and blocked security fabric nodes. The structure of `trustedList` block is documented below.
	TrustedLists []CsfTrustedList `pulumi:"trustedLists"`
	// Unique ID of the current CSF node
	Uid *string `pulumi:"uid"`
	// IP/FQDN of the FortiGate upstream from this FortiGate in the Security Fabric.
	Upstream *string `pulumi:"upstream"`
	// IP address of the FortiGate upstream from this FortiGate in the Security Fabric.
	UpstreamIp *string `pulumi:"upstreamIp"`
	// The port number to use to communicate with the FortiGate upstream from this FortiGate in the Security Fabric (default = 8013).
	UpstreamPort *int `pulumi:"upstreamPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type CsfState struct {
	// Accept connections with unknown certificates and ask admin for approval. Valid values: `disable`, `enable`.
	AcceptAuthByCert pulumi.StringPtrInput
	// Authorization request type. Valid values: `serial`, `certificate`.
	AuthorizationRequestType pulumi.StringPtrInput
	// Certificate.
	Certificate pulumi.StringPtrInput
	// Configuration sync mode. Valid values: `default`, `local`.
	ConfigurationSync pulumi.StringPtrInput
	// Enable/disable downstream device access to this device's configuration and data. Valid values: `enable`, `disable`.
	DownstreamAccess pulumi.StringPtrInput
	// Default access profile for requests from downstream devices.
	DownstreamAccprofile pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Fabric connector configuration. The structure of `fabricConnector` block is documented below.
	FabricConnectors CsfFabricConnectorArrayInput
	// Fabric device configuration. The structure of `fabricDevice` block is documented below.
	FabricDevices CsfFabricDeviceArrayInput
	// Fabric CMDB Object Unification Valid values: `default`, `local`.
	FabricObjectUnification pulumi.StringPtrInput
	// Number of worker processes for Security Fabric daemon.
	FabricWorkers pulumi.IntPtrInput
	// Enable/disable Security Fabric daemon file management. Valid values: `enable`, `disable`.
	FileMgmt pulumi.StringPtrInput
	// Maximum amount of memory that can be used by the daemon files (in bytes).
	FileQuota pulumi.IntPtrInput
	// Warn when the set percentage of quota has been used.
	FileQuotaWarning pulumi.IntPtrInput
	// Auto-generated fixed key used when this device is the root. (Will automatically be generated if not set.)
	FixedKey pulumi.StringPtrInput
	// Fabric FortiCloud account unification. Valid values: `enable`, `disable`.
	ForticloudAccountEnforcement pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Security Fabric group name. All FortiGates in a Security Fabric must have the same group name.
	GroupName pulumi.StringPtrInput
	// Security Fabric group password. All FortiGates in a Security Fabric must have the same group password.
	GroupPassword pulumi.StringPtrInput
	// Enable/disable broadcast of discovery messages for log unification. Valid values: `disable`, `enable`.
	LogUnification pulumi.StringPtrInput
	// Management IP address of this FortiGate. Used to log into this FortiGate from another FortiGate in the Security Fabric.
	ManagementIp pulumi.StringPtrInput
	// Overriding port for management connection (Overrides admin port).
	ManagementPort pulumi.IntPtrInput
	// SAML setting configuration synchronization. Valid values: `default`, `local`.
	SamlConfigurationSync pulumi.StringPtrInput
	// Enable/disable Security Fabric. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Pre-authorized and blocked security fabric nodes. The structure of `trustedList` block is documented below.
	TrustedLists CsfTrustedListArrayInput
	// Unique ID of the current CSF node
	Uid pulumi.StringPtrInput
	// IP/FQDN of the FortiGate upstream from this FortiGate in the Security Fabric.
	Upstream pulumi.StringPtrInput
	// IP address of the FortiGate upstream from this FortiGate in the Security Fabric.
	UpstreamIp pulumi.StringPtrInput
	// The port number to use to communicate with the FortiGate upstream from this FortiGate in the Security Fabric (default = 8013).
	UpstreamPort pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (CsfState) ElementType() reflect.Type {
	return reflect.TypeOf((*csfState)(nil)).Elem()
}

type csfArgs struct {
	// Accept connections with unknown certificates and ask admin for approval. Valid values: `disable`, `enable`.
	AcceptAuthByCert *string `pulumi:"acceptAuthByCert"`
	// Authorization request type. Valid values: `serial`, `certificate`.
	AuthorizationRequestType *string `pulumi:"authorizationRequestType"`
	// Certificate.
	Certificate *string `pulumi:"certificate"`
	// Configuration sync mode. Valid values: `default`, `local`.
	ConfigurationSync *string `pulumi:"configurationSync"`
	// Enable/disable downstream device access to this device's configuration and data. Valid values: `enable`, `disable`.
	DownstreamAccess *string `pulumi:"downstreamAccess"`
	// Default access profile for requests from downstream devices.
	DownstreamAccprofile *string `pulumi:"downstreamAccprofile"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Fabric connector configuration. The structure of `fabricConnector` block is documented below.
	FabricConnectors []CsfFabricConnector `pulumi:"fabricConnectors"`
	// Fabric device configuration. The structure of `fabricDevice` block is documented below.
	FabricDevices []CsfFabricDevice `pulumi:"fabricDevices"`
	// Fabric CMDB Object Unification Valid values: `default`, `local`.
	FabricObjectUnification *string `pulumi:"fabricObjectUnification"`
	// Number of worker processes for Security Fabric daemon.
	FabricWorkers *int `pulumi:"fabricWorkers"`
	// Enable/disable Security Fabric daemon file management. Valid values: `enable`, `disable`.
	FileMgmt *string `pulumi:"fileMgmt"`
	// Maximum amount of memory that can be used by the daemon files (in bytes).
	FileQuota *int `pulumi:"fileQuota"`
	// Warn when the set percentage of quota has been used.
	FileQuotaWarning *int `pulumi:"fileQuotaWarning"`
	// Auto-generated fixed key used when this device is the root. (Will automatically be generated if not set.)
	FixedKey *string `pulumi:"fixedKey"`
	// Fabric FortiCloud account unification. Valid values: `enable`, `disable`.
	ForticloudAccountEnforcement *string `pulumi:"forticloudAccountEnforcement"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Security Fabric group name. All FortiGates in a Security Fabric must have the same group name.
	GroupName *string `pulumi:"groupName"`
	// Security Fabric group password. All FortiGates in a Security Fabric must have the same group password.
	GroupPassword *string `pulumi:"groupPassword"`
	// Enable/disable broadcast of discovery messages for log unification. Valid values: `disable`, `enable`.
	LogUnification *string `pulumi:"logUnification"`
	// Management IP address of this FortiGate. Used to log into this FortiGate from another FortiGate in the Security Fabric.
	ManagementIp *string `pulumi:"managementIp"`
	// Overriding port for management connection (Overrides admin port).
	ManagementPort *int `pulumi:"managementPort"`
	// SAML setting configuration synchronization. Valid values: `default`, `local`.
	SamlConfigurationSync *string `pulumi:"samlConfigurationSync"`
	// Enable/disable Security Fabric. Valid values: `enable`, `disable`.
	Status string `pulumi:"status"`
	// Pre-authorized and blocked security fabric nodes. The structure of `trustedList` block is documented below.
	TrustedLists []CsfTrustedList `pulumi:"trustedLists"`
	// Unique ID of the current CSF node
	Uid *string `pulumi:"uid"`
	// IP/FQDN of the FortiGate upstream from this FortiGate in the Security Fabric.
	Upstream *string `pulumi:"upstream"`
	// IP address of the FortiGate upstream from this FortiGate in the Security Fabric.
	UpstreamIp *string `pulumi:"upstreamIp"`
	// The port number to use to communicate with the FortiGate upstream from this FortiGate in the Security Fabric (default = 8013).
	UpstreamPort *int `pulumi:"upstreamPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Csf resource.
type CsfArgs struct {
	// Accept connections with unknown certificates and ask admin for approval. Valid values: `disable`, `enable`.
	AcceptAuthByCert pulumi.StringPtrInput
	// Authorization request type. Valid values: `serial`, `certificate`.
	AuthorizationRequestType pulumi.StringPtrInput
	// Certificate.
	Certificate pulumi.StringPtrInput
	// Configuration sync mode. Valid values: `default`, `local`.
	ConfigurationSync pulumi.StringPtrInput
	// Enable/disable downstream device access to this device's configuration and data. Valid values: `enable`, `disable`.
	DownstreamAccess pulumi.StringPtrInput
	// Default access profile for requests from downstream devices.
	DownstreamAccprofile pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Fabric connector configuration. The structure of `fabricConnector` block is documented below.
	FabricConnectors CsfFabricConnectorArrayInput
	// Fabric device configuration. The structure of `fabricDevice` block is documented below.
	FabricDevices CsfFabricDeviceArrayInput
	// Fabric CMDB Object Unification Valid values: `default`, `local`.
	FabricObjectUnification pulumi.StringPtrInput
	// Number of worker processes for Security Fabric daemon.
	FabricWorkers pulumi.IntPtrInput
	// Enable/disable Security Fabric daemon file management. Valid values: `enable`, `disable`.
	FileMgmt pulumi.StringPtrInput
	// Maximum amount of memory that can be used by the daemon files (in bytes).
	FileQuota pulumi.IntPtrInput
	// Warn when the set percentage of quota has been used.
	FileQuotaWarning pulumi.IntPtrInput
	// Auto-generated fixed key used when this device is the root. (Will automatically be generated if not set.)
	FixedKey pulumi.StringPtrInput
	// Fabric FortiCloud account unification. Valid values: `enable`, `disable`.
	ForticloudAccountEnforcement pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Security Fabric group name. All FortiGates in a Security Fabric must have the same group name.
	GroupName pulumi.StringPtrInput
	// Security Fabric group password. All FortiGates in a Security Fabric must have the same group password.
	GroupPassword pulumi.StringPtrInput
	// Enable/disable broadcast of discovery messages for log unification. Valid values: `disable`, `enable`.
	LogUnification pulumi.StringPtrInput
	// Management IP address of this FortiGate. Used to log into this FortiGate from another FortiGate in the Security Fabric.
	ManagementIp pulumi.StringPtrInput
	// Overriding port for management connection (Overrides admin port).
	ManagementPort pulumi.IntPtrInput
	// SAML setting configuration synchronization. Valid values: `default`, `local`.
	SamlConfigurationSync pulumi.StringPtrInput
	// Enable/disable Security Fabric. Valid values: `enable`, `disable`.
	Status pulumi.StringInput
	// Pre-authorized and blocked security fabric nodes. The structure of `trustedList` block is documented below.
	TrustedLists CsfTrustedListArrayInput
	// Unique ID of the current CSF node
	Uid pulumi.StringPtrInput
	// IP/FQDN of the FortiGate upstream from this FortiGate in the Security Fabric.
	Upstream pulumi.StringPtrInput
	// IP address of the FortiGate upstream from this FortiGate in the Security Fabric.
	UpstreamIp pulumi.StringPtrInput
	// The port number to use to communicate with the FortiGate upstream from this FortiGate in the Security Fabric (default = 8013).
	UpstreamPort pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (CsfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*csfArgs)(nil)).Elem()
}

type CsfInput interface {
	pulumi.Input

	ToCsfOutput() CsfOutput
	ToCsfOutputWithContext(ctx context.Context) CsfOutput
}

func (*Csf) ElementType() reflect.Type {
	return reflect.TypeOf((**Csf)(nil)).Elem()
}

func (i *Csf) ToCsfOutput() CsfOutput {
	return i.ToCsfOutputWithContext(context.Background())
}

func (i *Csf) ToCsfOutputWithContext(ctx context.Context) CsfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsfOutput)
}

// CsfArrayInput is an input type that accepts CsfArray and CsfArrayOutput values.
// You can construct a concrete instance of `CsfArrayInput` via:
//
//	CsfArray{ CsfArgs{...} }
type CsfArrayInput interface {
	pulumi.Input

	ToCsfArrayOutput() CsfArrayOutput
	ToCsfArrayOutputWithContext(context.Context) CsfArrayOutput
}

type CsfArray []CsfInput

func (CsfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Csf)(nil)).Elem()
}

func (i CsfArray) ToCsfArrayOutput() CsfArrayOutput {
	return i.ToCsfArrayOutputWithContext(context.Background())
}

func (i CsfArray) ToCsfArrayOutputWithContext(ctx context.Context) CsfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsfArrayOutput)
}

// CsfMapInput is an input type that accepts CsfMap and CsfMapOutput values.
// You can construct a concrete instance of `CsfMapInput` via:
//
//	CsfMap{ "key": CsfArgs{...} }
type CsfMapInput interface {
	pulumi.Input

	ToCsfMapOutput() CsfMapOutput
	ToCsfMapOutputWithContext(context.Context) CsfMapOutput
}

type CsfMap map[string]CsfInput

func (CsfMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Csf)(nil)).Elem()
}

func (i CsfMap) ToCsfMapOutput() CsfMapOutput {
	return i.ToCsfMapOutputWithContext(context.Background())
}

func (i CsfMap) ToCsfMapOutputWithContext(ctx context.Context) CsfMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsfMapOutput)
}

type CsfOutput struct{ *pulumi.OutputState }

func (CsfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Csf)(nil)).Elem()
}

func (o CsfOutput) ToCsfOutput() CsfOutput {
	return o
}

func (o CsfOutput) ToCsfOutputWithContext(ctx context.Context) CsfOutput {
	return o
}

// Accept connections with unknown certificates and ask admin for approval. Valid values: `disable`, `enable`.
func (o CsfOutput) AcceptAuthByCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.AcceptAuthByCert }).(pulumi.StringOutput)
}

// Authorization request type. Valid values: `serial`, `certificate`.
func (o CsfOutput) AuthorizationRequestType() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.AuthorizationRequestType }).(pulumi.StringOutput)
}

// Certificate.
func (o CsfOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.Certificate }).(pulumi.StringOutput)
}

// Configuration sync mode. Valid values: `default`, `local`.
func (o CsfOutput) ConfigurationSync() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.ConfigurationSync }).(pulumi.StringOutput)
}

// Enable/disable downstream device access to this device's configuration and data. Valid values: `enable`, `disable`.
func (o CsfOutput) DownstreamAccess() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.DownstreamAccess }).(pulumi.StringOutput)
}

// Default access profile for requests from downstream devices.
func (o CsfOutput) DownstreamAccprofile() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.DownstreamAccprofile }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o CsfOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Fabric connector configuration. The structure of `fabricConnector` block is documented below.
func (o CsfOutput) FabricConnectors() CsfFabricConnectorArrayOutput {
	return o.ApplyT(func(v *Csf) CsfFabricConnectorArrayOutput { return v.FabricConnectors }).(CsfFabricConnectorArrayOutput)
}

// Fabric device configuration. The structure of `fabricDevice` block is documented below.
func (o CsfOutput) FabricDevices() CsfFabricDeviceArrayOutput {
	return o.ApplyT(func(v *Csf) CsfFabricDeviceArrayOutput { return v.FabricDevices }).(CsfFabricDeviceArrayOutput)
}

// Fabric CMDB Object Unification Valid values: `default`, `local`.
func (o CsfOutput) FabricObjectUnification() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.FabricObjectUnification }).(pulumi.StringOutput)
}

// Number of worker processes for Security Fabric daemon.
func (o CsfOutput) FabricWorkers() pulumi.IntOutput {
	return o.ApplyT(func(v *Csf) pulumi.IntOutput { return v.FabricWorkers }).(pulumi.IntOutput)
}

// Enable/disable Security Fabric daemon file management. Valid values: `enable`, `disable`.
func (o CsfOutput) FileMgmt() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.FileMgmt }).(pulumi.StringOutput)
}

// Maximum amount of memory that can be used by the daemon files (in bytes).
func (o CsfOutput) FileQuota() pulumi.IntOutput {
	return o.ApplyT(func(v *Csf) pulumi.IntOutput { return v.FileQuota }).(pulumi.IntOutput)
}

// Warn when the set percentage of quota has been used.
func (o CsfOutput) FileQuotaWarning() pulumi.IntOutput {
	return o.ApplyT(func(v *Csf) pulumi.IntOutput { return v.FileQuotaWarning }).(pulumi.IntOutput)
}

// Auto-generated fixed key used when this device is the root. (Will automatically be generated if not set.)
func (o CsfOutput) FixedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringPtrOutput { return v.FixedKey }).(pulumi.StringPtrOutput)
}

// Fabric FortiCloud account unification. Valid values: `enable`, `disable`.
func (o CsfOutput) ForticloudAccountEnforcement() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.ForticloudAccountEnforcement }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o CsfOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Security Fabric group name. All FortiGates in a Security Fabric must have the same group name.
func (o CsfOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.GroupName }).(pulumi.StringOutput)
}

// Security Fabric group password. All FortiGates in a Security Fabric must have the same group password.
func (o CsfOutput) GroupPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringPtrOutput { return v.GroupPassword }).(pulumi.StringPtrOutput)
}

// Enable/disable broadcast of discovery messages for log unification. Valid values: `disable`, `enable`.
func (o CsfOutput) LogUnification() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.LogUnification }).(pulumi.StringOutput)
}

// Management IP address of this FortiGate. Used to log into this FortiGate from another FortiGate in the Security Fabric.
func (o CsfOutput) ManagementIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.ManagementIp }).(pulumi.StringOutput)
}

// Overriding port for management connection (Overrides admin port).
func (o CsfOutput) ManagementPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Csf) pulumi.IntOutput { return v.ManagementPort }).(pulumi.IntOutput)
}

// SAML setting configuration synchronization. Valid values: `default`, `local`.
func (o CsfOutput) SamlConfigurationSync() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.SamlConfigurationSync }).(pulumi.StringOutput)
}

// Enable/disable Security Fabric. Valid values: `enable`, `disable`.
func (o CsfOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Pre-authorized and blocked security fabric nodes. The structure of `trustedList` block is documented below.
func (o CsfOutput) TrustedLists() CsfTrustedListArrayOutput {
	return o.ApplyT(func(v *Csf) CsfTrustedListArrayOutput { return v.TrustedLists }).(CsfTrustedListArrayOutput)
}

// Unique ID of the current CSF node
func (o CsfOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// IP/FQDN of the FortiGate upstream from this FortiGate in the Security Fabric.
func (o CsfOutput) Upstream() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.Upstream }).(pulumi.StringOutput)
}

// IP address of the FortiGate upstream from this FortiGate in the Security Fabric.
func (o CsfOutput) UpstreamIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringOutput { return v.UpstreamIp }).(pulumi.StringOutput)
}

// The port number to use to communicate with the FortiGate upstream from this FortiGate in the Security Fabric (default = 8013).
func (o CsfOutput) UpstreamPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Csf) pulumi.IntOutput { return v.UpstreamPort }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o CsfOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Csf) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type CsfArrayOutput struct{ *pulumi.OutputState }

func (CsfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Csf)(nil)).Elem()
}

func (o CsfArrayOutput) ToCsfArrayOutput() CsfArrayOutput {
	return o
}

func (o CsfArrayOutput) ToCsfArrayOutputWithContext(ctx context.Context) CsfArrayOutput {
	return o
}

func (o CsfArrayOutput) Index(i pulumi.IntInput) CsfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Csf {
		return vs[0].([]*Csf)[vs[1].(int)]
	}).(CsfOutput)
}

type CsfMapOutput struct{ *pulumi.OutputState }

func (CsfMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Csf)(nil)).Elem()
}

func (o CsfMapOutput) ToCsfMapOutput() CsfMapOutput {
	return o
}

func (o CsfMapOutput) ToCsfMapOutputWithContext(ctx context.Context) CsfMapOutput {
	return o
}

func (o CsfMapOutput) MapIndex(k pulumi.StringInput) CsfOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Csf {
		return vs[0].(map[string]*Csf)[vs[1].(string)]
	}).(CsfOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CsfInput)(nil)).Elem(), &Csf{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsfArrayInput)(nil)).Elem(), CsfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsfMapInput)(nil)).Elem(), CsfMap{})
	pulumi.RegisterOutputType(CsfOutput{})
	pulumi.RegisterOutputType(CsfArrayOutput{})
	pulumi.RegisterOutputType(CsfMapOutput{})
}
