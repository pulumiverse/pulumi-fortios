// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure FortiGate Session Life Support Protocol (FGSP) cluster attributes. Applies to FortiOS Version `>= 6.4.0`.
//
// ## Import
//
// System StandaloneCluster can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/standalonecluster:Standalonecluster labelname SystemStandaloneCluster
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/standalonecluster:Standalonecluster labelname SystemStandaloneCluster
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Standalonecluster struct {
	pulumi.CustomResourceState

	// Asymmetric traffic control mode. Valid values: `cps-preferred`, `strict-anti-replay`.
	AsymmetricTrafficControl pulumi.StringOutput `pulumi:"asymmetricTrafficControl"`
	// Configure FortiGate Session Life Support Protocol (FGSP) session synchronization. The structure of `clusterPeer` block is documented below.
	ClusterPeers StandaloneclusterClusterPeerArrayOutput `pulumi:"clusterPeers"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
	Encryption pulumi.StringOutput `pulumi:"encryption"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Cluster member ID (0 - 3).
	GroupMemberId pulumi.IntOutput `pulumi:"groupMemberId"`
	// Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
	Layer2Connection pulumi.StringOutput `pulumi:"layer2Connection"`
	// Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret pulumi.StringPtrOutput `pulumi:"psksecret"`
	// Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
	SessionSyncDev pulumi.StringOutput `pulumi:"sessionSyncDev"`
	// Cluster group ID (0 - 255). Must be the same for all members.
	StandaloneGroupId pulumi.IntOutput `pulumi:"standaloneGroupId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewStandalonecluster registers a new resource with the given unique name, arguments, and options.
func NewStandalonecluster(ctx *pulumi.Context,
	name string, args *StandaloneclusterArgs, opts ...pulumi.ResourceOption) (*Standalonecluster, error) {
	if args == nil {
		args = &StandaloneclusterArgs{}
	}

	if args.Psksecret != nil {
		args.Psksecret = pulumi.ToSecret(args.Psksecret).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"psksecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Standalonecluster
	err := ctx.RegisterResource("fortios:system/standalonecluster:Standalonecluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStandalonecluster gets an existing Standalonecluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStandalonecluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StandaloneclusterState, opts ...pulumi.ResourceOption) (*Standalonecluster, error) {
	var resource Standalonecluster
	err := ctx.ReadResource("fortios:system/standalonecluster:Standalonecluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Standalonecluster resources.
type standaloneclusterState struct {
	// Asymmetric traffic control mode. Valid values: `cps-preferred`, `strict-anti-replay`.
	AsymmetricTrafficControl *string `pulumi:"asymmetricTrafficControl"`
	// Configure FortiGate Session Life Support Protocol (FGSP) session synchronization. The structure of `clusterPeer` block is documented below.
	ClusterPeers []StandaloneclusterClusterPeer `pulumi:"clusterPeers"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
	Encryption *string `pulumi:"encryption"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Cluster member ID (0 - 3).
	GroupMemberId *int `pulumi:"groupMemberId"`
	// Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
	Layer2Connection *string `pulumi:"layer2Connection"`
	// Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret *string `pulumi:"psksecret"`
	// Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
	SessionSyncDev *string `pulumi:"sessionSyncDev"`
	// Cluster group ID (0 - 255). Must be the same for all members.
	StandaloneGroupId *int `pulumi:"standaloneGroupId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type StandaloneclusterState struct {
	// Asymmetric traffic control mode. Valid values: `cps-preferred`, `strict-anti-replay`.
	AsymmetricTrafficControl pulumi.StringPtrInput
	// Configure FortiGate Session Life Support Protocol (FGSP) session synchronization. The structure of `clusterPeer` block is documented below.
	ClusterPeers StandaloneclusterClusterPeerArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
	Encryption pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Cluster member ID (0 - 3).
	GroupMemberId pulumi.IntPtrInput
	// Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
	Layer2Connection pulumi.StringPtrInput
	// Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret pulumi.StringPtrInput
	// Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
	SessionSyncDev pulumi.StringPtrInput
	// Cluster group ID (0 - 255). Must be the same for all members.
	StandaloneGroupId pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (StandaloneclusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*standaloneclusterState)(nil)).Elem()
}

type standaloneclusterArgs struct {
	// Asymmetric traffic control mode. Valid values: `cps-preferred`, `strict-anti-replay`.
	AsymmetricTrafficControl *string `pulumi:"asymmetricTrafficControl"`
	// Configure FortiGate Session Life Support Protocol (FGSP) session synchronization. The structure of `clusterPeer` block is documented below.
	ClusterPeers []StandaloneclusterClusterPeer `pulumi:"clusterPeers"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
	Encryption *string `pulumi:"encryption"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Cluster member ID (0 - 3).
	GroupMemberId *int `pulumi:"groupMemberId"`
	// Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
	Layer2Connection *string `pulumi:"layer2Connection"`
	// Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret *string `pulumi:"psksecret"`
	// Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
	SessionSyncDev *string `pulumi:"sessionSyncDev"`
	// Cluster group ID (0 - 255). Must be the same for all members.
	StandaloneGroupId *int `pulumi:"standaloneGroupId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Standalonecluster resource.
type StandaloneclusterArgs struct {
	// Asymmetric traffic control mode. Valid values: `cps-preferred`, `strict-anti-replay`.
	AsymmetricTrafficControl pulumi.StringPtrInput
	// Configure FortiGate Session Life Support Protocol (FGSP) session synchronization. The structure of `clusterPeer` block is documented below.
	ClusterPeers StandaloneclusterClusterPeerArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
	Encryption pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Cluster member ID (0 - 3).
	GroupMemberId pulumi.IntPtrInput
	// Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
	Layer2Connection pulumi.StringPtrInput
	// Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret pulumi.StringPtrInput
	// Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
	SessionSyncDev pulumi.StringPtrInput
	// Cluster group ID (0 - 255). Must be the same for all members.
	StandaloneGroupId pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (StandaloneclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*standaloneclusterArgs)(nil)).Elem()
}

type StandaloneclusterInput interface {
	pulumi.Input

	ToStandaloneclusterOutput() StandaloneclusterOutput
	ToStandaloneclusterOutputWithContext(ctx context.Context) StandaloneclusterOutput
}

func (*Standalonecluster) ElementType() reflect.Type {
	return reflect.TypeOf((**Standalonecluster)(nil)).Elem()
}

func (i *Standalonecluster) ToStandaloneclusterOutput() StandaloneclusterOutput {
	return i.ToStandaloneclusterOutputWithContext(context.Background())
}

func (i *Standalonecluster) ToStandaloneclusterOutputWithContext(ctx context.Context) StandaloneclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterOutput)
}

// StandaloneclusterArrayInput is an input type that accepts StandaloneclusterArray and StandaloneclusterArrayOutput values.
// You can construct a concrete instance of `StandaloneclusterArrayInput` via:
//
//	StandaloneclusterArray{ StandaloneclusterArgs{...} }
type StandaloneclusterArrayInput interface {
	pulumi.Input

	ToStandaloneclusterArrayOutput() StandaloneclusterArrayOutput
	ToStandaloneclusterArrayOutputWithContext(context.Context) StandaloneclusterArrayOutput
}

type StandaloneclusterArray []StandaloneclusterInput

func (StandaloneclusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Standalonecluster)(nil)).Elem()
}

func (i StandaloneclusterArray) ToStandaloneclusterArrayOutput() StandaloneclusterArrayOutput {
	return i.ToStandaloneclusterArrayOutputWithContext(context.Background())
}

func (i StandaloneclusterArray) ToStandaloneclusterArrayOutputWithContext(ctx context.Context) StandaloneclusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterArrayOutput)
}

// StandaloneclusterMapInput is an input type that accepts StandaloneclusterMap and StandaloneclusterMapOutput values.
// You can construct a concrete instance of `StandaloneclusterMapInput` via:
//
//	StandaloneclusterMap{ "key": StandaloneclusterArgs{...} }
type StandaloneclusterMapInput interface {
	pulumi.Input

	ToStandaloneclusterMapOutput() StandaloneclusterMapOutput
	ToStandaloneclusterMapOutputWithContext(context.Context) StandaloneclusterMapOutput
}

type StandaloneclusterMap map[string]StandaloneclusterInput

func (StandaloneclusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Standalonecluster)(nil)).Elem()
}

func (i StandaloneclusterMap) ToStandaloneclusterMapOutput() StandaloneclusterMapOutput {
	return i.ToStandaloneclusterMapOutputWithContext(context.Background())
}

func (i StandaloneclusterMap) ToStandaloneclusterMapOutputWithContext(ctx context.Context) StandaloneclusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterMapOutput)
}

type StandaloneclusterOutput struct{ *pulumi.OutputState }

func (StandaloneclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Standalonecluster)(nil)).Elem()
}

func (o StandaloneclusterOutput) ToStandaloneclusterOutput() StandaloneclusterOutput {
	return o
}

func (o StandaloneclusterOutput) ToStandaloneclusterOutputWithContext(ctx context.Context) StandaloneclusterOutput {
	return o
}

// Asymmetric traffic control mode. Valid values: `cps-preferred`, `strict-anti-replay`.
func (o StandaloneclusterOutput) AsymmetricTrafficControl() pulumi.StringOutput {
	return o.ApplyT(func(v *Standalonecluster) pulumi.StringOutput { return v.AsymmetricTrafficControl }).(pulumi.StringOutput)
}

// Configure FortiGate Session Life Support Protocol (FGSP) session synchronization. The structure of `clusterPeer` block is documented below.
func (o StandaloneclusterOutput) ClusterPeers() StandaloneclusterClusterPeerArrayOutput {
	return o.ApplyT(func(v *Standalonecluster) StandaloneclusterClusterPeerArrayOutput { return v.ClusterPeers }).(StandaloneclusterClusterPeerArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o StandaloneclusterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Standalonecluster) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
func (o StandaloneclusterOutput) Encryption() pulumi.StringOutput {
	return o.ApplyT(func(v *Standalonecluster) pulumi.StringOutput { return v.Encryption }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o StandaloneclusterOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Standalonecluster) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Cluster member ID (0 - 3).
func (o StandaloneclusterOutput) GroupMemberId() pulumi.IntOutput {
	return o.ApplyT(func(v *Standalonecluster) pulumi.IntOutput { return v.GroupMemberId }).(pulumi.IntOutput)
}

// Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
func (o StandaloneclusterOutput) Layer2Connection() pulumi.StringOutput {
	return o.ApplyT(func(v *Standalonecluster) pulumi.StringOutput { return v.Layer2Connection }).(pulumi.StringOutput)
}

// Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
func (o StandaloneclusterOutput) Psksecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Standalonecluster) pulumi.StringPtrOutput { return v.Psksecret }).(pulumi.StringPtrOutput)
}

// Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
func (o StandaloneclusterOutput) SessionSyncDev() pulumi.StringOutput {
	return o.ApplyT(func(v *Standalonecluster) pulumi.StringOutput { return v.SessionSyncDev }).(pulumi.StringOutput)
}

// Cluster group ID (0 - 255). Must be the same for all members.
func (o StandaloneclusterOutput) StandaloneGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v *Standalonecluster) pulumi.IntOutput { return v.StandaloneGroupId }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o StandaloneclusterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Standalonecluster) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type StandaloneclusterArrayOutput struct{ *pulumi.OutputState }

func (StandaloneclusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Standalonecluster)(nil)).Elem()
}

func (o StandaloneclusterArrayOutput) ToStandaloneclusterArrayOutput() StandaloneclusterArrayOutput {
	return o
}

func (o StandaloneclusterArrayOutput) ToStandaloneclusterArrayOutputWithContext(ctx context.Context) StandaloneclusterArrayOutput {
	return o
}

func (o StandaloneclusterArrayOutput) Index(i pulumi.IntInput) StandaloneclusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Standalonecluster {
		return vs[0].([]*Standalonecluster)[vs[1].(int)]
	}).(StandaloneclusterOutput)
}

type StandaloneclusterMapOutput struct{ *pulumi.OutputState }

func (StandaloneclusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Standalonecluster)(nil)).Elem()
}

func (o StandaloneclusterMapOutput) ToStandaloneclusterMapOutput() StandaloneclusterMapOutput {
	return o
}

func (o StandaloneclusterMapOutput) ToStandaloneclusterMapOutputWithContext(ctx context.Context) StandaloneclusterMapOutput {
	return o
}

func (o StandaloneclusterMapOutput) MapIndex(k pulumi.StringInput) StandaloneclusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Standalonecluster {
		return vs[0].(map[string]*Standalonecluster)[vs[1].(string)]
	}).(StandaloneclusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterInput)(nil)).Elem(), &Standalonecluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterArrayInput)(nil)).Elem(), StandaloneclusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterMapInput)(nil)).Elem(), StandaloneclusterMap{})
	pulumi.RegisterOutputType(StandaloneclusterOutput{})
	pulumi.RegisterOutputType(StandaloneclusterArrayOutput{})
	pulumi.RegisterOutputType(StandaloneclusterMapOutput{})
}
