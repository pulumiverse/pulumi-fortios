// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure DSCP based priority table.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewDscpbasedpriority(ctx, "trname", &system.DscpbasedpriorityArgs{
//				Ds:       pulumi.Int(1),
//				Fosid:    pulumi.Int(1),
//				Priority: pulumi.String("low"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System DscpBasedPriority can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/dscpbasedpriority:Dscpbasedpriority labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/dscpbasedpriority:Dscpbasedpriority labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Dscpbasedpriority struct {
	pulumi.CustomResourceState

	// DSCP(DiffServ) DS value (0 - 63).
	Ds pulumi.IntOutput `pulumi:"ds"`
	// Item ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// DSCP based priority level. Valid values: `low`, `medium`, `high`.
	Priority pulumi.StringOutput `pulumi:"priority"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewDscpbasedpriority registers a new resource with the given unique name, arguments, and options.
func NewDscpbasedpriority(ctx *pulumi.Context,
	name string, args *DscpbasedpriorityArgs, opts ...pulumi.ResourceOption) (*Dscpbasedpriority, error) {
	if args == nil {
		args = &DscpbasedpriorityArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Dscpbasedpriority
	err := ctx.RegisterResource("fortios:system/dscpbasedpriority:Dscpbasedpriority", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDscpbasedpriority gets an existing Dscpbasedpriority resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDscpbasedpriority(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DscpbasedpriorityState, opts ...pulumi.ResourceOption) (*Dscpbasedpriority, error) {
	var resource Dscpbasedpriority
	err := ctx.ReadResource("fortios:system/dscpbasedpriority:Dscpbasedpriority", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dscpbasedpriority resources.
type dscpbasedpriorityState struct {
	// DSCP(DiffServ) DS value (0 - 63).
	Ds *int `pulumi:"ds"`
	// Item ID.
	Fosid *int `pulumi:"fosid"`
	// DSCP based priority level. Valid values: `low`, `medium`, `high`.
	Priority *string `pulumi:"priority"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type DscpbasedpriorityState struct {
	// DSCP(DiffServ) DS value (0 - 63).
	Ds pulumi.IntPtrInput
	// Item ID.
	Fosid pulumi.IntPtrInput
	// DSCP based priority level. Valid values: `low`, `medium`, `high`.
	Priority pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (DscpbasedpriorityState) ElementType() reflect.Type {
	return reflect.TypeOf((*dscpbasedpriorityState)(nil)).Elem()
}

type dscpbasedpriorityArgs struct {
	// DSCP(DiffServ) DS value (0 - 63).
	Ds *int `pulumi:"ds"`
	// Item ID.
	Fosid *int `pulumi:"fosid"`
	// DSCP based priority level. Valid values: `low`, `medium`, `high`.
	Priority *string `pulumi:"priority"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Dscpbasedpriority resource.
type DscpbasedpriorityArgs struct {
	// DSCP(DiffServ) DS value (0 - 63).
	Ds pulumi.IntPtrInput
	// Item ID.
	Fosid pulumi.IntPtrInput
	// DSCP based priority level. Valid values: `low`, `medium`, `high`.
	Priority pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (DscpbasedpriorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dscpbasedpriorityArgs)(nil)).Elem()
}

type DscpbasedpriorityInput interface {
	pulumi.Input

	ToDscpbasedpriorityOutput() DscpbasedpriorityOutput
	ToDscpbasedpriorityOutputWithContext(ctx context.Context) DscpbasedpriorityOutput
}

func (*Dscpbasedpriority) ElementType() reflect.Type {
	return reflect.TypeOf((**Dscpbasedpriority)(nil)).Elem()
}

func (i *Dscpbasedpriority) ToDscpbasedpriorityOutput() DscpbasedpriorityOutput {
	return i.ToDscpbasedpriorityOutputWithContext(context.Background())
}

func (i *Dscpbasedpriority) ToDscpbasedpriorityOutputWithContext(ctx context.Context) DscpbasedpriorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DscpbasedpriorityOutput)
}

// DscpbasedpriorityArrayInput is an input type that accepts DscpbasedpriorityArray and DscpbasedpriorityArrayOutput values.
// You can construct a concrete instance of `DscpbasedpriorityArrayInput` via:
//
//	DscpbasedpriorityArray{ DscpbasedpriorityArgs{...} }
type DscpbasedpriorityArrayInput interface {
	pulumi.Input

	ToDscpbasedpriorityArrayOutput() DscpbasedpriorityArrayOutput
	ToDscpbasedpriorityArrayOutputWithContext(context.Context) DscpbasedpriorityArrayOutput
}

type DscpbasedpriorityArray []DscpbasedpriorityInput

func (DscpbasedpriorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dscpbasedpriority)(nil)).Elem()
}

func (i DscpbasedpriorityArray) ToDscpbasedpriorityArrayOutput() DscpbasedpriorityArrayOutput {
	return i.ToDscpbasedpriorityArrayOutputWithContext(context.Background())
}

func (i DscpbasedpriorityArray) ToDscpbasedpriorityArrayOutputWithContext(ctx context.Context) DscpbasedpriorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DscpbasedpriorityArrayOutput)
}

// DscpbasedpriorityMapInput is an input type that accepts DscpbasedpriorityMap and DscpbasedpriorityMapOutput values.
// You can construct a concrete instance of `DscpbasedpriorityMapInput` via:
//
//	DscpbasedpriorityMap{ "key": DscpbasedpriorityArgs{...} }
type DscpbasedpriorityMapInput interface {
	pulumi.Input

	ToDscpbasedpriorityMapOutput() DscpbasedpriorityMapOutput
	ToDscpbasedpriorityMapOutputWithContext(context.Context) DscpbasedpriorityMapOutput
}

type DscpbasedpriorityMap map[string]DscpbasedpriorityInput

func (DscpbasedpriorityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dscpbasedpriority)(nil)).Elem()
}

func (i DscpbasedpriorityMap) ToDscpbasedpriorityMapOutput() DscpbasedpriorityMapOutput {
	return i.ToDscpbasedpriorityMapOutputWithContext(context.Background())
}

func (i DscpbasedpriorityMap) ToDscpbasedpriorityMapOutputWithContext(ctx context.Context) DscpbasedpriorityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DscpbasedpriorityMapOutput)
}

type DscpbasedpriorityOutput struct{ *pulumi.OutputState }

func (DscpbasedpriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Dscpbasedpriority)(nil)).Elem()
}

func (o DscpbasedpriorityOutput) ToDscpbasedpriorityOutput() DscpbasedpriorityOutput {
	return o
}

func (o DscpbasedpriorityOutput) ToDscpbasedpriorityOutputWithContext(ctx context.Context) DscpbasedpriorityOutput {
	return o
}

// DSCP(DiffServ) DS value (0 - 63).
func (o DscpbasedpriorityOutput) Ds() pulumi.IntOutput {
	return o.ApplyT(func(v *Dscpbasedpriority) pulumi.IntOutput { return v.Ds }).(pulumi.IntOutput)
}

// Item ID.
func (o DscpbasedpriorityOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *Dscpbasedpriority) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// DSCP based priority level. Valid values: `low`, `medium`, `high`.
func (o DscpbasedpriorityOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *Dscpbasedpriority) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o DscpbasedpriorityOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dscpbasedpriority) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type DscpbasedpriorityArrayOutput struct{ *pulumi.OutputState }

func (DscpbasedpriorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dscpbasedpriority)(nil)).Elem()
}

func (o DscpbasedpriorityArrayOutput) ToDscpbasedpriorityArrayOutput() DscpbasedpriorityArrayOutput {
	return o
}

func (o DscpbasedpriorityArrayOutput) ToDscpbasedpriorityArrayOutputWithContext(ctx context.Context) DscpbasedpriorityArrayOutput {
	return o
}

func (o DscpbasedpriorityArrayOutput) Index(i pulumi.IntInput) DscpbasedpriorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Dscpbasedpriority {
		return vs[0].([]*Dscpbasedpriority)[vs[1].(int)]
	}).(DscpbasedpriorityOutput)
}

type DscpbasedpriorityMapOutput struct{ *pulumi.OutputState }

func (DscpbasedpriorityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dscpbasedpriority)(nil)).Elem()
}

func (o DscpbasedpriorityMapOutput) ToDscpbasedpriorityMapOutput() DscpbasedpriorityMapOutput {
	return o
}

func (o DscpbasedpriorityMapOutput) ToDscpbasedpriorityMapOutputWithContext(ctx context.Context) DscpbasedpriorityMapOutput {
	return o
}

func (o DscpbasedpriorityMapOutput) MapIndex(k pulumi.StringInput) DscpbasedpriorityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Dscpbasedpriority {
		return vs[0].(map[string]*Dscpbasedpriority)[vs[1].(string)]
	}).(DscpbasedpriorityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DscpbasedpriorityInput)(nil)).Elem(), &Dscpbasedpriority{})
	pulumi.RegisterInputType(reflect.TypeOf((*DscpbasedpriorityArrayInput)(nil)).Elem(), DscpbasedpriorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DscpbasedpriorityMapInput)(nil)).Elem(), DscpbasedpriorityMap{})
	pulumi.RegisterOutputType(DscpbasedpriorityOutput{})
	pulumi.RegisterOutputType(DscpbasedpriorityArrayOutput{})
	pulumi.RegisterOutputType(DscpbasedpriorityMapOutput{})
}
