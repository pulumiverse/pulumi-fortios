// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure SSO admin users. Applies to FortiOS Version `>= 6.2.4`.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewSsoadmin(ctx, "trname", &system.SsoadminArgs{
//				Accprofile: pulumi.String("super_admin"),
//				Vdoms: system.SsoadminVdomArray{
//					&system.SsoadminVdomArgs{
//						Name: pulumi.String("root"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// System SsoAdmin can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/ssoadmin:Ssoadmin labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/ssoadmin:Ssoadmin labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Ssoadmin struct {
	pulumi.CustomResourceState

	// SSO admin user access profile.
	Accprofile pulumi.StringOutput `pulumi:"accprofile"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// The FortiOS version to ignore release overview prompt for.
	GuiIgnoreReleaseOverviewVersion pulumi.StringOutput `pulumi:"guiIgnoreReleaseOverviewVersion"`
	// SSO admin name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms SsoadminVdomArrayOutput `pulumi:"vdoms"`
}

// NewSsoadmin registers a new resource with the given unique name, arguments, and options.
func NewSsoadmin(ctx *pulumi.Context,
	name string, args *SsoadminArgs, opts ...pulumi.ResourceOption) (*Ssoadmin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Accprofile == nil {
		return nil, errors.New("invalid value for required argument 'Accprofile'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ssoadmin
	err := ctx.RegisterResource("fortios:system/ssoadmin:Ssoadmin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSsoadmin gets an existing Ssoadmin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSsoadmin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SsoadminState, opts ...pulumi.ResourceOption) (*Ssoadmin, error) {
	var resource Ssoadmin
	err := ctx.ReadResource("fortios:system/ssoadmin:Ssoadmin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ssoadmin resources.
type ssoadminState struct {
	// SSO admin user access profile.
	Accprofile *string `pulumi:"accprofile"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// The FortiOS version to ignore release overview prompt for.
	GuiIgnoreReleaseOverviewVersion *string `pulumi:"guiIgnoreReleaseOverviewVersion"`
	// SSO admin name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms []SsoadminVdom `pulumi:"vdoms"`
}

type SsoadminState struct {
	// SSO admin user access profile.
	Accprofile pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// The FortiOS version to ignore release overview prompt for.
	GuiIgnoreReleaseOverviewVersion pulumi.StringPtrInput
	// SSO admin name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms SsoadminVdomArrayInput
}

func (SsoadminState) ElementType() reflect.Type {
	return reflect.TypeOf((*ssoadminState)(nil)).Elem()
}

type ssoadminArgs struct {
	// SSO admin user access profile.
	Accprofile string `pulumi:"accprofile"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// The FortiOS version to ignore release overview prompt for.
	GuiIgnoreReleaseOverviewVersion *string `pulumi:"guiIgnoreReleaseOverviewVersion"`
	// SSO admin name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms []SsoadminVdom `pulumi:"vdoms"`
}

// The set of arguments for constructing a Ssoadmin resource.
type SsoadminArgs struct {
	// SSO admin user access profile.
	Accprofile pulumi.StringInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// The FortiOS version to ignore release overview prompt for.
	GuiIgnoreReleaseOverviewVersion pulumi.StringPtrInput
	// SSO admin name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms SsoadminVdomArrayInput
}

func (SsoadminArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ssoadminArgs)(nil)).Elem()
}

type SsoadminInput interface {
	pulumi.Input

	ToSsoadminOutput() SsoadminOutput
	ToSsoadminOutputWithContext(ctx context.Context) SsoadminOutput
}

func (*Ssoadmin) ElementType() reflect.Type {
	return reflect.TypeOf((**Ssoadmin)(nil)).Elem()
}

func (i *Ssoadmin) ToSsoadminOutput() SsoadminOutput {
	return i.ToSsoadminOutputWithContext(context.Background())
}

func (i *Ssoadmin) ToSsoadminOutputWithContext(ctx context.Context) SsoadminOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoadminOutput)
}

// SsoadminArrayInput is an input type that accepts SsoadminArray and SsoadminArrayOutput values.
// You can construct a concrete instance of `SsoadminArrayInput` via:
//
//	SsoadminArray{ SsoadminArgs{...} }
type SsoadminArrayInput interface {
	pulumi.Input

	ToSsoadminArrayOutput() SsoadminArrayOutput
	ToSsoadminArrayOutputWithContext(context.Context) SsoadminArrayOutput
}

type SsoadminArray []SsoadminInput

func (SsoadminArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ssoadmin)(nil)).Elem()
}

func (i SsoadminArray) ToSsoadminArrayOutput() SsoadminArrayOutput {
	return i.ToSsoadminArrayOutputWithContext(context.Background())
}

func (i SsoadminArray) ToSsoadminArrayOutputWithContext(ctx context.Context) SsoadminArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoadminArrayOutput)
}

// SsoadminMapInput is an input type that accepts SsoadminMap and SsoadminMapOutput values.
// You can construct a concrete instance of `SsoadminMapInput` via:
//
//	SsoadminMap{ "key": SsoadminArgs{...} }
type SsoadminMapInput interface {
	pulumi.Input

	ToSsoadminMapOutput() SsoadminMapOutput
	ToSsoadminMapOutputWithContext(context.Context) SsoadminMapOutput
}

type SsoadminMap map[string]SsoadminInput

func (SsoadminMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ssoadmin)(nil)).Elem()
}

func (i SsoadminMap) ToSsoadminMapOutput() SsoadminMapOutput {
	return i.ToSsoadminMapOutputWithContext(context.Background())
}

func (i SsoadminMap) ToSsoadminMapOutputWithContext(ctx context.Context) SsoadminMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoadminMapOutput)
}

type SsoadminOutput struct{ *pulumi.OutputState }

func (SsoadminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ssoadmin)(nil)).Elem()
}

func (o SsoadminOutput) ToSsoadminOutput() SsoadminOutput {
	return o
}

func (o SsoadminOutput) ToSsoadminOutputWithContext(ctx context.Context) SsoadminOutput {
	return o
}

// SSO admin user access profile.
func (o SsoadminOutput) Accprofile() pulumi.StringOutput {
	return o.ApplyT(func(v *Ssoadmin) pulumi.StringOutput { return v.Accprofile }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SsoadminOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ssoadmin) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o SsoadminOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ssoadmin) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// The FortiOS version to ignore release overview prompt for.
func (o SsoadminOutput) GuiIgnoreReleaseOverviewVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Ssoadmin) pulumi.StringOutput { return v.GuiIgnoreReleaseOverviewVersion }).(pulumi.StringOutput)
}

// SSO admin name.
func (o SsoadminOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Ssoadmin) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SsoadminOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ssoadmin) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
func (o SsoadminOutput) Vdoms() SsoadminVdomArrayOutput {
	return o.ApplyT(func(v *Ssoadmin) SsoadminVdomArrayOutput { return v.Vdoms }).(SsoadminVdomArrayOutput)
}

type SsoadminArrayOutput struct{ *pulumi.OutputState }

func (SsoadminArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ssoadmin)(nil)).Elem()
}

func (o SsoadminArrayOutput) ToSsoadminArrayOutput() SsoadminArrayOutput {
	return o
}

func (o SsoadminArrayOutput) ToSsoadminArrayOutputWithContext(ctx context.Context) SsoadminArrayOutput {
	return o
}

func (o SsoadminArrayOutput) Index(i pulumi.IntInput) SsoadminOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ssoadmin {
		return vs[0].([]*Ssoadmin)[vs[1].(int)]
	}).(SsoadminOutput)
}

type SsoadminMapOutput struct{ *pulumi.OutputState }

func (SsoadminMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ssoadmin)(nil)).Elem()
}

func (o SsoadminMapOutput) ToSsoadminMapOutput() SsoadminMapOutput {
	return o
}

func (o SsoadminMapOutput) ToSsoadminMapOutputWithContext(ctx context.Context) SsoadminMapOutput {
	return o
}

func (o SsoadminMapOutput) MapIndex(k pulumi.StringInput) SsoadminOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ssoadmin {
		return vs[0].(map[string]*Ssoadmin)[vs[1].(string)]
	}).(SsoadminOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SsoadminInput)(nil)).Elem(), &Ssoadmin{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoadminArrayInput)(nil)).Elem(), SsoadminArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoadminMapInput)(nil)).Elem(), SsoadminMap{})
	pulumi.RegisterOutputType(SsoadminOutput{})
	pulumi.RegisterOutputType(SsoadminArrayOutput{})
	pulumi.RegisterOutputType(SsoadminMapOutput{})
}
