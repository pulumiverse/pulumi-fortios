// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure NetFlow per VDOM.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewVdomnetflow(ctx, "trname", &system.VdomnetflowArgs{
//				CollectorIp:   pulumi.String("0.0.0.0"),
//				CollectorPort: pulumi.Int(2055),
//				SourceIp:      pulumi.String("0.0.0.0"),
//				VdomNetflow:   pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// System VdomNetflow can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/vdomnetflow:Vdomnetflow labelname SystemVdomNetflow
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/vdomnetflow:Vdomnetflow labelname SystemVdomNetflow
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Vdomnetflow struct {
	pulumi.CustomResourceState

	// NetFlow collector IP address.
	CollectorIp pulumi.StringOutput `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort pulumi.IntOutput `pulumi:"collectorPort"`
	// Netflow collectors. The structure of `collectors` block is documented below.
	Collectors VdomnetflowCollectorArrayOutput `pulumi:"collectors"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Enable/disable NetFlow per VDOM. Valid values: `enable`, `disable`.
	VdomNetflow pulumi.StringOutput `pulumi:"vdomNetflow"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewVdomnetflow registers a new resource with the given unique name, arguments, and options.
func NewVdomnetflow(ctx *pulumi.Context,
	name string, args *VdomnetflowArgs, opts ...pulumi.ResourceOption) (*Vdomnetflow, error) {
	if args == nil {
		args = &VdomnetflowArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Vdomnetflow
	err := ctx.RegisterResource("fortios:system/vdomnetflow:Vdomnetflow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVdomnetflow gets an existing Vdomnetflow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVdomnetflow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VdomnetflowState, opts ...pulumi.ResourceOption) (*Vdomnetflow, error) {
	var resource Vdomnetflow
	err := ctx.ReadResource("fortios:system/vdomnetflow:Vdomnetflow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Vdomnetflow resources.
type vdomnetflowState struct {
	// NetFlow collector IP address.
	CollectorIp *string `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort *int `pulumi:"collectorPort"`
	// Netflow collectors. The structure of `collectors` block is documented below.
	Collectors []VdomnetflowCollector `pulumi:"collectors"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp *string `pulumi:"sourceIp"`
	// Enable/disable NetFlow per VDOM. Valid values: `enable`, `disable`.
	VdomNetflow *string `pulumi:"vdomNetflow"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type VdomnetflowState struct {
	// NetFlow collector IP address.
	CollectorIp pulumi.StringPtrInput
	// NetFlow collector port number.
	CollectorPort pulumi.IntPtrInput
	// Netflow collectors. The structure of `collectors` block is documented below.
	Collectors VdomnetflowCollectorArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Source IP address for communication with the NetFlow agent.
	SourceIp pulumi.StringPtrInput
	// Enable/disable NetFlow per VDOM. Valid values: `enable`, `disable`.
	VdomNetflow pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (VdomnetflowState) ElementType() reflect.Type {
	return reflect.TypeOf((*vdomnetflowState)(nil)).Elem()
}

type vdomnetflowArgs struct {
	// NetFlow collector IP address.
	CollectorIp *string `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort *int `pulumi:"collectorPort"`
	// Netflow collectors. The structure of `collectors` block is documented below.
	Collectors []VdomnetflowCollector `pulumi:"collectors"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp *string `pulumi:"sourceIp"`
	// Enable/disable NetFlow per VDOM. Valid values: `enable`, `disable`.
	VdomNetflow *string `pulumi:"vdomNetflow"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Vdomnetflow resource.
type VdomnetflowArgs struct {
	// NetFlow collector IP address.
	CollectorIp pulumi.StringPtrInput
	// NetFlow collector port number.
	CollectorPort pulumi.IntPtrInput
	// Netflow collectors. The structure of `collectors` block is documented below.
	Collectors VdomnetflowCollectorArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Source IP address for communication with the NetFlow agent.
	SourceIp pulumi.StringPtrInput
	// Enable/disable NetFlow per VDOM. Valid values: `enable`, `disable`.
	VdomNetflow pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (VdomnetflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vdomnetflowArgs)(nil)).Elem()
}

type VdomnetflowInput interface {
	pulumi.Input

	ToVdomnetflowOutput() VdomnetflowOutput
	ToVdomnetflowOutputWithContext(ctx context.Context) VdomnetflowOutput
}

func (*Vdomnetflow) ElementType() reflect.Type {
	return reflect.TypeOf((**Vdomnetflow)(nil)).Elem()
}

func (i *Vdomnetflow) ToVdomnetflowOutput() VdomnetflowOutput {
	return i.ToVdomnetflowOutputWithContext(context.Background())
}

func (i *Vdomnetflow) ToVdomnetflowOutputWithContext(ctx context.Context) VdomnetflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomnetflowOutput)
}

// VdomnetflowArrayInput is an input type that accepts VdomnetflowArray and VdomnetflowArrayOutput values.
// You can construct a concrete instance of `VdomnetflowArrayInput` via:
//
//	VdomnetflowArray{ VdomnetflowArgs{...} }
type VdomnetflowArrayInput interface {
	pulumi.Input

	ToVdomnetflowArrayOutput() VdomnetflowArrayOutput
	ToVdomnetflowArrayOutputWithContext(context.Context) VdomnetflowArrayOutput
}

type VdomnetflowArray []VdomnetflowInput

func (VdomnetflowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Vdomnetflow)(nil)).Elem()
}

func (i VdomnetflowArray) ToVdomnetflowArrayOutput() VdomnetflowArrayOutput {
	return i.ToVdomnetflowArrayOutputWithContext(context.Background())
}

func (i VdomnetflowArray) ToVdomnetflowArrayOutputWithContext(ctx context.Context) VdomnetflowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomnetflowArrayOutput)
}

// VdomnetflowMapInput is an input type that accepts VdomnetflowMap and VdomnetflowMapOutput values.
// You can construct a concrete instance of `VdomnetflowMapInput` via:
//
//	VdomnetflowMap{ "key": VdomnetflowArgs{...} }
type VdomnetflowMapInput interface {
	pulumi.Input

	ToVdomnetflowMapOutput() VdomnetflowMapOutput
	ToVdomnetflowMapOutputWithContext(context.Context) VdomnetflowMapOutput
}

type VdomnetflowMap map[string]VdomnetflowInput

func (VdomnetflowMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Vdomnetflow)(nil)).Elem()
}

func (i VdomnetflowMap) ToVdomnetflowMapOutput() VdomnetflowMapOutput {
	return i.ToVdomnetflowMapOutputWithContext(context.Background())
}

func (i VdomnetflowMap) ToVdomnetflowMapOutputWithContext(ctx context.Context) VdomnetflowMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomnetflowMapOutput)
}

type VdomnetflowOutput struct{ *pulumi.OutputState }

func (VdomnetflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Vdomnetflow)(nil)).Elem()
}

func (o VdomnetflowOutput) ToVdomnetflowOutput() VdomnetflowOutput {
	return o
}

func (o VdomnetflowOutput) ToVdomnetflowOutputWithContext(ctx context.Context) VdomnetflowOutput {
	return o
}

// NetFlow collector IP address.
func (o VdomnetflowOutput) CollectorIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Vdomnetflow) pulumi.StringOutput { return v.CollectorIp }).(pulumi.StringOutput)
}

// NetFlow collector port number.
func (o VdomnetflowOutput) CollectorPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Vdomnetflow) pulumi.IntOutput { return v.CollectorPort }).(pulumi.IntOutput)
}

// Netflow collectors. The structure of `collectors` block is documented below.
func (o VdomnetflowOutput) Collectors() VdomnetflowCollectorArrayOutput {
	return o.ApplyT(func(v *Vdomnetflow) VdomnetflowCollectorArrayOutput { return v.Collectors }).(VdomnetflowCollectorArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o VdomnetflowOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vdomnetflow) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o VdomnetflowOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vdomnetflow) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Specify outgoing interface to reach server.
func (o VdomnetflowOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Vdomnetflow) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o VdomnetflowOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Vdomnetflow) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Source IP address for communication with the NetFlow agent.
func (o VdomnetflowOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Vdomnetflow) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

// Enable/disable NetFlow per VDOM. Valid values: `enable`, `disable`.
func (o VdomnetflowOutput) VdomNetflow() pulumi.StringOutput {
	return o.ApplyT(func(v *Vdomnetflow) pulumi.StringOutput { return v.VdomNetflow }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o VdomnetflowOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vdomnetflow) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type VdomnetflowArrayOutput struct{ *pulumi.OutputState }

func (VdomnetflowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Vdomnetflow)(nil)).Elem()
}

func (o VdomnetflowArrayOutput) ToVdomnetflowArrayOutput() VdomnetflowArrayOutput {
	return o
}

func (o VdomnetflowArrayOutput) ToVdomnetflowArrayOutputWithContext(ctx context.Context) VdomnetflowArrayOutput {
	return o
}

func (o VdomnetflowArrayOutput) Index(i pulumi.IntInput) VdomnetflowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Vdomnetflow {
		return vs[0].([]*Vdomnetflow)[vs[1].(int)]
	}).(VdomnetflowOutput)
}

type VdomnetflowMapOutput struct{ *pulumi.OutputState }

func (VdomnetflowMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Vdomnetflow)(nil)).Elem()
}

func (o VdomnetflowMapOutput) ToVdomnetflowMapOutput() VdomnetflowMapOutput {
	return o
}

func (o VdomnetflowMapOutput) ToVdomnetflowMapOutputWithContext(ctx context.Context) VdomnetflowMapOutput {
	return o
}

func (o VdomnetflowMapOutput) MapIndex(k pulumi.StringInput) VdomnetflowOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Vdomnetflow {
		return vs[0].(map[string]*Vdomnetflow)[vs[1].(string)]
	}).(VdomnetflowOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VdomnetflowInput)(nil)).Elem(), &Vdomnetflow{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomnetflowArrayInput)(nil)).Elem(), VdomnetflowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomnetflowMapInput)(nil)).Elem(), VdomnetflowMap{})
	pulumi.RegisterOutputType(VdomnetflowOutput{})
	pulumi.RegisterOutputType(VdomnetflowArrayOutput{})
	pulumi.RegisterOutputType(VdomnetflowMapOutput{})
}
