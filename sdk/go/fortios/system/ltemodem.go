// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure USB LTE/WIMAX devices. Applies to FortiOS Version `7.0.4`.
//
// ## Import
//
// System LteModem can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/ltemodem:Ltemodem labelname SystemLteModem
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/ltemodem:Ltemodem labelname SystemLteModem
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Ltemodem struct {
	pulumi.CustomResourceState

	// Login APN string for PDP-IP packet data calls.
	Apn pulumi.StringOutput `pulumi:"apn"`
	// Authentication type for PDP-IP packet data calls. Valid values: `none`, `pap`, `chap`.
	Authtype pulumi.StringOutput `pulumi:"authtype"`
	// Extra initialization string for USB LTE/WIMAX devices.
	ExtraInit pulumi.StringOutput `pulumi:"extraInit"`
	// Hold down timer (10 - 60 sec).
	HolddownTimer pulumi.IntOutput `pulumi:"holddownTimer"`
	// The interface that the modem is acting as a redundant interface for.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Modem operation mode. Valid values: `standalone`, `redundant`.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Modem port index (0 - 20).
	ModemPort pulumi.IntOutput `pulumi:"modemPort"`
	// Authentication password for PDP-IP packet data calls.
	Passwd pulumi.StringPtrOutput `pulumi:"passwd"`
	// Enable/disable USB LTE/WIMAX device. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Authentication username for PDP-IP packet data calls.
	Username pulumi.StringOutput `pulumi:"username"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewLtemodem registers a new resource with the given unique name, arguments, and options.
func NewLtemodem(ctx *pulumi.Context,
	name string, args *LtemodemArgs, opts ...pulumi.ResourceOption) (*Ltemodem, error) {
	if args == nil {
		args = &LtemodemArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ltemodem
	err := ctx.RegisterResource("fortios:system/ltemodem:Ltemodem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLtemodem gets an existing Ltemodem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLtemodem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LtemodemState, opts ...pulumi.ResourceOption) (*Ltemodem, error) {
	var resource Ltemodem
	err := ctx.ReadResource("fortios:system/ltemodem:Ltemodem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ltemodem resources.
type ltemodemState struct {
	// Login APN string for PDP-IP packet data calls.
	Apn *string `pulumi:"apn"`
	// Authentication type for PDP-IP packet data calls. Valid values: `none`, `pap`, `chap`.
	Authtype *string `pulumi:"authtype"`
	// Extra initialization string for USB LTE/WIMAX devices.
	ExtraInit *string `pulumi:"extraInit"`
	// Hold down timer (10 - 60 sec).
	HolddownTimer *int `pulumi:"holddownTimer"`
	// The interface that the modem is acting as a redundant interface for.
	Interface *string `pulumi:"interface"`
	// Modem operation mode. Valid values: `standalone`, `redundant`.
	Mode *string `pulumi:"mode"`
	// Modem port index (0 - 20).
	ModemPort *int `pulumi:"modemPort"`
	// Authentication password for PDP-IP packet data calls.
	Passwd *string `pulumi:"passwd"`
	// Enable/disable USB LTE/WIMAX device. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Authentication username for PDP-IP packet data calls.
	Username *string `pulumi:"username"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type LtemodemState struct {
	// Login APN string for PDP-IP packet data calls.
	Apn pulumi.StringPtrInput
	// Authentication type for PDP-IP packet data calls. Valid values: `none`, `pap`, `chap`.
	Authtype pulumi.StringPtrInput
	// Extra initialization string for USB LTE/WIMAX devices.
	ExtraInit pulumi.StringPtrInput
	// Hold down timer (10 - 60 sec).
	HolddownTimer pulumi.IntPtrInput
	// The interface that the modem is acting as a redundant interface for.
	Interface pulumi.StringPtrInput
	// Modem operation mode. Valid values: `standalone`, `redundant`.
	Mode pulumi.StringPtrInput
	// Modem port index (0 - 20).
	ModemPort pulumi.IntPtrInput
	// Authentication password for PDP-IP packet data calls.
	Passwd pulumi.StringPtrInput
	// Enable/disable USB LTE/WIMAX device. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Authentication username for PDP-IP packet data calls.
	Username pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (LtemodemState) ElementType() reflect.Type {
	return reflect.TypeOf((*ltemodemState)(nil)).Elem()
}

type ltemodemArgs struct {
	// Login APN string for PDP-IP packet data calls.
	Apn *string `pulumi:"apn"`
	// Authentication type for PDP-IP packet data calls. Valid values: `none`, `pap`, `chap`.
	Authtype *string `pulumi:"authtype"`
	// Extra initialization string for USB LTE/WIMAX devices.
	ExtraInit *string `pulumi:"extraInit"`
	// Hold down timer (10 - 60 sec).
	HolddownTimer *int `pulumi:"holddownTimer"`
	// The interface that the modem is acting as a redundant interface for.
	Interface *string `pulumi:"interface"`
	// Modem operation mode. Valid values: `standalone`, `redundant`.
	Mode *string `pulumi:"mode"`
	// Modem port index (0 - 20).
	ModemPort *int `pulumi:"modemPort"`
	// Authentication password for PDP-IP packet data calls.
	Passwd *string `pulumi:"passwd"`
	// Enable/disable USB LTE/WIMAX device. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Authentication username for PDP-IP packet data calls.
	Username *string `pulumi:"username"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Ltemodem resource.
type LtemodemArgs struct {
	// Login APN string for PDP-IP packet data calls.
	Apn pulumi.StringPtrInput
	// Authentication type for PDP-IP packet data calls. Valid values: `none`, `pap`, `chap`.
	Authtype pulumi.StringPtrInput
	// Extra initialization string for USB LTE/WIMAX devices.
	ExtraInit pulumi.StringPtrInput
	// Hold down timer (10 - 60 sec).
	HolddownTimer pulumi.IntPtrInput
	// The interface that the modem is acting as a redundant interface for.
	Interface pulumi.StringPtrInput
	// Modem operation mode. Valid values: `standalone`, `redundant`.
	Mode pulumi.StringPtrInput
	// Modem port index (0 - 20).
	ModemPort pulumi.IntPtrInput
	// Authentication password for PDP-IP packet data calls.
	Passwd pulumi.StringPtrInput
	// Enable/disable USB LTE/WIMAX device. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Authentication username for PDP-IP packet data calls.
	Username pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (LtemodemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ltemodemArgs)(nil)).Elem()
}

type LtemodemInput interface {
	pulumi.Input

	ToLtemodemOutput() LtemodemOutput
	ToLtemodemOutputWithContext(ctx context.Context) LtemodemOutput
}

func (*Ltemodem) ElementType() reflect.Type {
	return reflect.TypeOf((**Ltemodem)(nil)).Elem()
}

func (i *Ltemodem) ToLtemodemOutput() LtemodemOutput {
	return i.ToLtemodemOutputWithContext(context.Background())
}

func (i *Ltemodem) ToLtemodemOutputWithContext(ctx context.Context) LtemodemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LtemodemOutput)
}

// LtemodemArrayInput is an input type that accepts LtemodemArray and LtemodemArrayOutput values.
// You can construct a concrete instance of `LtemodemArrayInput` via:
//
//	LtemodemArray{ LtemodemArgs{...} }
type LtemodemArrayInput interface {
	pulumi.Input

	ToLtemodemArrayOutput() LtemodemArrayOutput
	ToLtemodemArrayOutputWithContext(context.Context) LtemodemArrayOutput
}

type LtemodemArray []LtemodemInput

func (LtemodemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ltemodem)(nil)).Elem()
}

func (i LtemodemArray) ToLtemodemArrayOutput() LtemodemArrayOutput {
	return i.ToLtemodemArrayOutputWithContext(context.Background())
}

func (i LtemodemArray) ToLtemodemArrayOutputWithContext(ctx context.Context) LtemodemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LtemodemArrayOutput)
}

// LtemodemMapInput is an input type that accepts LtemodemMap and LtemodemMapOutput values.
// You can construct a concrete instance of `LtemodemMapInput` via:
//
//	LtemodemMap{ "key": LtemodemArgs{...} }
type LtemodemMapInput interface {
	pulumi.Input

	ToLtemodemMapOutput() LtemodemMapOutput
	ToLtemodemMapOutputWithContext(context.Context) LtemodemMapOutput
}

type LtemodemMap map[string]LtemodemInput

func (LtemodemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ltemodem)(nil)).Elem()
}

func (i LtemodemMap) ToLtemodemMapOutput() LtemodemMapOutput {
	return i.ToLtemodemMapOutputWithContext(context.Background())
}

func (i LtemodemMap) ToLtemodemMapOutputWithContext(ctx context.Context) LtemodemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LtemodemMapOutput)
}

type LtemodemOutput struct{ *pulumi.OutputState }

func (LtemodemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ltemodem)(nil)).Elem()
}

func (o LtemodemOutput) ToLtemodemOutput() LtemodemOutput {
	return o
}

func (o LtemodemOutput) ToLtemodemOutputWithContext(ctx context.Context) LtemodemOutput {
	return o
}

// Login APN string for PDP-IP packet data calls.
func (o LtemodemOutput) Apn() pulumi.StringOutput {
	return o.ApplyT(func(v *Ltemodem) pulumi.StringOutput { return v.Apn }).(pulumi.StringOutput)
}

// Authentication type for PDP-IP packet data calls. Valid values: `none`, `pap`, `chap`.
func (o LtemodemOutput) Authtype() pulumi.StringOutput {
	return o.ApplyT(func(v *Ltemodem) pulumi.StringOutput { return v.Authtype }).(pulumi.StringOutput)
}

// Extra initialization string for USB LTE/WIMAX devices.
func (o LtemodemOutput) ExtraInit() pulumi.StringOutput {
	return o.ApplyT(func(v *Ltemodem) pulumi.StringOutput { return v.ExtraInit }).(pulumi.StringOutput)
}

// Hold down timer (10 - 60 sec).
func (o LtemodemOutput) HolddownTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *Ltemodem) pulumi.IntOutput { return v.HolddownTimer }).(pulumi.IntOutput)
}

// The interface that the modem is acting as a redundant interface for.
func (o LtemodemOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Ltemodem) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Modem operation mode. Valid values: `standalone`, `redundant`.
func (o LtemodemOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *Ltemodem) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// Modem port index (0 - 20).
func (o LtemodemOutput) ModemPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Ltemodem) pulumi.IntOutput { return v.ModemPort }).(pulumi.IntOutput)
}

// Authentication password for PDP-IP packet data calls.
func (o LtemodemOutput) Passwd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ltemodem) pulumi.StringPtrOutput { return v.Passwd }).(pulumi.StringPtrOutput)
}

// Enable/disable USB LTE/WIMAX device. Valid values: `enable`, `disable`.
func (o LtemodemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Ltemodem) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Authentication username for PDP-IP packet data calls.
func (o LtemodemOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *Ltemodem) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o LtemodemOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Ltemodem) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type LtemodemArrayOutput struct{ *pulumi.OutputState }

func (LtemodemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ltemodem)(nil)).Elem()
}

func (o LtemodemArrayOutput) ToLtemodemArrayOutput() LtemodemArrayOutput {
	return o
}

func (o LtemodemArrayOutput) ToLtemodemArrayOutputWithContext(ctx context.Context) LtemodemArrayOutput {
	return o
}

func (o LtemodemArrayOutput) Index(i pulumi.IntInput) LtemodemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ltemodem {
		return vs[0].([]*Ltemodem)[vs[1].(int)]
	}).(LtemodemOutput)
}

type LtemodemMapOutput struct{ *pulumi.OutputState }

func (LtemodemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ltemodem)(nil)).Elem()
}

func (o LtemodemMapOutput) ToLtemodemMapOutput() LtemodemMapOutput {
	return o
}

func (o LtemodemMapOutput) ToLtemodemMapOutputWithContext(ctx context.Context) LtemodemMapOutput {
	return o
}

func (o LtemodemMapOutput) MapIndex(k pulumi.StringInput) LtemodemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ltemodem {
		return vs[0].(map[string]*Ltemodem)[vs[1].(string)]
	}).(LtemodemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LtemodemInput)(nil)).Elem(), &Ltemodem{})
	pulumi.RegisterInputType(reflect.TypeOf((*LtemodemArrayInput)(nil)).Elem(), LtemodemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LtemodemMapInput)(nil)).Elem(), LtemodemMap{})
	pulumi.RegisterOutputType(LtemodemOutput{})
	pulumi.RegisterOutputType(LtemodemArrayOutput{})
	pulumi.RegisterOutputType(LtemodemMapOutput{})
}
