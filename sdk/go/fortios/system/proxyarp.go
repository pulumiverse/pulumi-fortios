// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure proxy-ARP.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewProxyarp(ctx, "trname", &system.ProxyarpArgs{
//				EndIp:     pulumi.String("1.1.1.3"),
//				Fosid:     pulumi.Int(1),
//				Interface: pulumi.String("port4"),
//				Ip:        pulumi.String("1.1.1.1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System ProxyArp can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/proxyarp:Proxyarp labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/proxyarp:Proxyarp labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Proxyarp struct {
	pulumi.CustomResourceState

	// End IP of IP range to be proxied.
	EndIp pulumi.StringOutput `pulumi:"endIp"`
	// Unique integer ID of the entry.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Interface acting proxy-ARP.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// IP address or start IP to be proxied.
	Ip pulumi.StringOutput `pulumi:"ip"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewProxyarp registers a new resource with the given unique name, arguments, and options.
func NewProxyarp(ctx *pulumi.Context,
	name string, args *ProxyarpArgs, opts ...pulumi.ResourceOption) (*Proxyarp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Fosid == nil {
		return nil, errors.New("invalid value for required argument 'Fosid'")
	}
	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.Ip == nil {
		return nil, errors.New("invalid value for required argument 'Ip'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Proxyarp
	err := ctx.RegisterResource("fortios:system/proxyarp:Proxyarp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProxyarp gets an existing Proxyarp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProxyarp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProxyarpState, opts ...pulumi.ResourceOption) (*Proxyarp, error) {
	var resource Proxyarp
	err := ctx.ReadResource("fortios:system/proxyarp:Proxyarp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Proxyarp resources.
type proxyarpState struct {
	// End IP of IP range to be proxied.
	EndIp *string `pulumi:"endIp"`
	// Unique integer ID of the entry.
	Fosid *int `pulumi:"fosid"`
	// Interface acting proxy-ARP.
	Interface *string `pulumi:"interface"`
	// IP address or start IP to be proxied.
	Ip *string `pulumi:"ip"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ProxyarpState struct {
	// End IP of IP range to be proxied.
	EndIp pulumi.StringPtrInput
	// Unique integer ID of the entry.
	Fosid pulumi.IntPtrInput
	// Interface acting proxy-ARP.
	Interface pulumi.StringPtrInput
	// IP address or start IP to be proxied.
	Ip pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ProxyarpState) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyarpState)(nil)).Elem()
}

type proxyarpArgs struct {
	// End IP of IP range to be proxied.
	EndIp *string `pulumi:"endIp"`
	// Unique integer ID of the entry.
	Fosid int `pulumi:"fosid"`
	// Interface acting proxy-ARP.
	Interface string `pulumi:"interface"`
	// IP address or start IP to be proxied.
	Ip string `pulumi:"ip"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Proxyarp resource.
type ProxyarpArgs struct {
	// End IP of IP range to be proxied.
	EndIp pulumi.StringPtrInput
	// Unique integer ID of the entry.
	Fosid pulumi.IntInput
	// Interface acting proxy-ARP.
	Interface pulumi.StringInput
	// IP address or start IP to be proxied.
	Ip pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ProxyarpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyarpArgs)(nil)).Elem()
}

type ProxyarpInput interface {
	pulumi.Input

	ToProxyarpOutput() ProxyarpOutput
	ToProxyarpOutputWithContext(ctx context.Context) ProxyarpOutput
}

func (*Proxyarp) ElementType() reflect.Type {
	return reflect.TypeOf((**Proxyarp)(nil)).Elem()
}

func (i *Proxyarp) ToProxyarpOutput() ProxyarpOutput {
	return i.ToProxyarpOutputWithContext(context.Background())
}

func (i *Proxyarp) ToProxyarpOutputWithContext(ctx context.Context) ProxyarpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyarpOutput)
}

// ProxyarpArrayInput is an input type that accepts ProxyarpArray and ProxyarpArrayOutput values.
// You can construct a concrete instance of `ProxyarpArrayInput` via:
//
//	ProxyarpArray{ ProxyarpArgs{...} }
type ProxyarpArrayInput interface {
	pulumi.Input

	ToProxyarpArrayOutput() ProxyarpArrayOutput
	ToProxyarpArrayOutputWithContext(context.Context) ProxyarpArrayOutput
}

type ProxyarpArray []ProxyarpInput

func (ProxyarpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Proxyarp)(nil)).Elem()
}

func (i ProxyarpArray) ToProxyarpArrayOutput() ProxyarpArrayOutput {
	return i.ToProxyarpArrayOutputWithContext(context.Background())
}

func (i ProxyarpArray) ToProxyarpArrayOutputWithContext(ctx context.Context) ProxyarpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyarpArrayOutput)
}

// ProxyarpMapInput is an input type that accepts ProxyarpMap and ProxyarpMapOutput values.
// You can construct a concrete instance of `ProxyarpMapInput` via:
//
//	ProxyarpMap{ "key": ProxyarpArgs{...} }
type ProxyarpMapInput interface {
	pulumi.Input

	ToProxyarpMapOutput() ProxyarpMapOutput
	ToProxyarpMapOutputWithContext(context.Context) ProxyarpMapOutput
}

type ProxyarpMap map[string]ProxyarpInput

func (ProxyarpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Proxyarp)(nil)).Elem()
}

func (i ProxyarpMap) ToProxyarpMapOutput() ProxyarpMapOutput {
	return i.ToProxyarpMapOutputWithContext(context.Background())
}

func (i ProxyarpMap) ToProxyarpMapOutputWithContext(ctx context.Context) ProxyarpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyarpMapOutput)
}

type ProxyarpOutput struct{ *pulumi.OutputState }

func (ProxyarpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Proxyarp)(nil)).Elem()
}

func (o ProxyarpOutput) ToProxyarpOutput() ProxyarpOutput {
	return o
}

func (o ProxyarpOutput) ToProxyarpOutputWithContext(ctx context.Context) ProxyarpOutput {
	return o
}

// End IP of IP range to be proxied.
func (o ProxyarpOutput) EndIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Proxyarp) pulumi.StringOutput { return v.EndIp }).(pulumi.StringOutput)
}

// Unique integer ID of the entry.
func (o ProxyarpOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *Proxyarp) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Interface acting proxy-ARP.
func (o ProxyarpOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Proxyarp) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// IP address or start IP to be proxied.
func (o ProxyarpOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *Proxyarp) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ProxyarpOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Proxyarp) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type ProxyarpArrayOutput struct{ *pulumi.OutputState }

func (ProxyarpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Proxyarp)(nil)).Elem()
}

func (o ProxyarpArrayOutput) ToProxyarpArrayOutput() ProxyarpArrayOutput {
	return o
}

func (o ProxyarpArrayOutput) ToProxyarpArrayOutputWithContext(ctx context.Context) ProxyarpArrayOutput {
	return o
}

func (o ProxyarpArrayOutput) Index(i pulumi.IntInput) ProxyarpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Proxyarp {
		return vs[0].([]*Proxyarp)[vs[1].(int)]
	}).(ProxyarpOutput)
}

type ProxyarpMapOutput struct{ *pulumi.OutputState }

func (ProxyarpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Proxyarp)(nil)).Elem()
}

func (o ProxyarpMapOutput) ToProxyarpMapOutput() ProxyarpMapOutput {
	return o
}

func (o ProxyarpMapOutput) ToProxyarpMapOutputWithContext(ctx context.Context) ProxyarpMapOutput {
	return o
}

func (o ProxyarpMapOutput) MapIndex(k pulumi.StringInput) ProxyarpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Proxyarp {
		return vs[0].(map[string]*Proxyarp)[vs[1].(string)]
	}).(ProxyarpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyarpInput)(nil)).Elem(), &Proxyarp{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyarpArrayInput)(nil)).Elem(), ProxyarpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyarpMapInput)(nil)).Elem(), ProxyarpMap{})
	pulumi.RegisterOutputType(ProxyarpOutput{})
	pulumi.RegisterOutputType(ProxyarpArrayOutput{})
	pulumi.RegisterOutputType(ProxyarpMapOutput{})
}
