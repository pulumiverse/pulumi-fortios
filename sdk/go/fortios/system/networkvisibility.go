// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure network visibility settings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewNetworkvisibility(ctx, "trname", &system.NetworkvisibilityArgs{
//				DestinationHostnameVisibility: pulumi.String("enable"),
//				DestinationLocation:           pulumi.String("enable"),
//				DestinationVisibility:         pulumi.String("enable"),
//				HostnameLimit:                 pulumi.Int(5000),
//				HostnameTtl:                   pulumi.Int(86400),
//				SourceLocation:                pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System NetworkVisibility can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/networkvisibility:Networkvisibility labelname SystemNetworkVisibility
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/networkvisibility:Networkvisibility labelname SystemNetworkVisibility
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Networkvisibility struct {
	pulumi.CustomResourceState

	// Enable/disable logging of destination hostname visibility. Valid values: `disable`, `enable`.
	DestinationHostnameVisibility pulumi.StringOutput `pulumi:"destinationHostnameVisibility"`
	// Enable/disable logging of destination geographical location visibility. Valid values: `disable`, `enable`.
	DestinationLocation pulumi.StringOutput `pulumi:"destinationLocation"`
	// Enable/disable logging of destination visibility. Valid values: `disable`, `enable`.
	DestinationVisibility pulumi.StringOutput `pulumi:"destinationVisibility"`
	// Limit of the number of hostname table entries (0 - 50000).
	HostnameLimit pulumi.IntOutput `pulumi:"hostnameLimit"`
	// TTL of hostname table entries (60 - 86400).
	HostnameTtl pulumi.IntOutput `pulumi:"hostnameTtl"`
	// Enable/disable logging of source geographical location visibility. Valid values: `disable`, `enable`.
	SourceLocation pulumi.StringOutput `pulumi:"sourceLocation"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewNetworkvisibility registers a new resource with the given unique name, arguments, and options.
func NewNetworkvisibility(ctx *pulumi.Context,
	name string, args *NetworkvisibilityArgs, opts ...pulumi.ResourceOption) (*Networkvisibility, error) {
	if args == nil {
		args = &NetworkvisibilityArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Networkvisibility
	err := ctx.RegisterResource("fortios:system/networkvisibility:Networkvisibility", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkvisibility gets an existing Networkvisibility resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkvisibility(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkvisibilityState, opts ...pulumi.ResourceOption) (*Networkvisibility, error) {
	var resource Networkvisibility
	err := ctx.ReadResource("fortios:system/networkvisibility:Networkvisibility", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Networkvisibility resources.
type networkvisibilityState struct {
	// Enable/disable logging of destination hostname visibility. Valid values: `disable`, `enable`.
	DestinationHostnameVisibility *string `pulumi:"destinationHostnameVisibility"`
	// Enable/disable logging of destination geographical location visibility. Valid values: `disable`, `enable`.
	DestinationLocation *string `pulumi:"destinationLocation"`
	// Enable/disable logging of destination visibility. Valid values: `disable`, `enable`.
	DestinationVisibility *string `pulumi:"destinationVisibility"`
	// Limit of the number of hostname table entries (0 - 50000).
	HostnameLimit *int `pulumi:"hostnameLimit"`
	// TTL of hostname table entries (60 - 86400).
	HostnameTtl *int `pulumi:"hostnameTtl"`
	// Enable/disable logging of source geographical location visibility. Valid values: `disable`, `enable`.
	SourceLocation *string `pulumi:"sourceLocation"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type NetworkvisibilityState struct {
	// Enable/disable logging of destination hostname visibility. Valid values: `disable`, `enable`.
	DestinationHostnameVisibility pulumi.StringPtrInput
	// Enable/disable logging of destination geographical location visibility. Valid values: `disable`, `enable`.
	DestinationLocation pulumi.StringPtrInput
	// Enable/disable logging of destination visibility. Valid values: `disable`, `enable`.
	DestinationVisibility pulumi.StringPtrInput
	// Limit of the number of hostname table entries (0 - 50000).
	HostnameLimit pulumi.IntPtrInput
	// TTL of hostname table entries (60 - 86400).
	HostnameTtl pulumi.IntPtrInput
	// Enable/disable logging of source geographical location visibility. Valid values: `disable`, `enable`.
	SourceLocation pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (NetworkvisibilityState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkvisibilityState)(nil)).Elem()
}

type networkvisibilityArgs struct {
	// Enable/disable logging of destination hostname visibility. Valid values: `disable`, `enable`.
	DestinationHostnameVisibility *string `pulumi:"destinationHostnameVisibility"`
	// Enable/disable logging of destination geographical location visibility. Valid values: `disable`, `enable`.
	DestinationLocation *string `pulumi:"destinationLocation"`
	// Enable/disable logging of destination visibility. Valid values: `disable`, `enable`.
	DestinationVisibility *string `pulumi:"destinationVisibility"`
	// Limit of the number of hostname table entries (0 - 50000).
	HostnameLimit *int `pulumi:"hostnameLimit"`
	// TTL of hostname table entries (60 - 86400).
	HostnameTtl *int `pulumi:"hostnameTtl"`
	// Enable/disable logging of source geographical location visibility. Valid values: `disable`, `enable`.
	SourceLocation *string `pulumi:"sourceLocation"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Networkvisibility resource.
type NetworkvisibilityArgs struct {
	// Enable/disable logging of destination hostname visibility. Valid values: `disable`, `enable`.
	DestinationHostnameVisibility pulumi.StringPtrInput
	// Enable/disable logging of destination geographical location visibility. Valid values: `disable`, `enable`.
	DestinationLocation pulumi.StringPtrInput
	// Enable/disable logging of destination visibility. Valid values: `disable`, `enable`.
	DestinationVisibility pulumi.StringPtrInput
	// Limit of the number of hostname table entries (0 - 50000).
	HostnameLimit pulumi.IntPtrInput
	// TTL of hostname table entries (60 - 86400).
	HostnameTtl pulumi.IntPtrInput
	// Enable/disable logging of source geographical location visibility. Valid values: `disable`, `enable`.
	SourceLocation pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (NetworkvisibilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkvisibilityArgs)(nil)).Elem()
}

type NetworkvisibilityInput interface {
	pulumi.Input

	ToNetworkvisibilityOutput() NetworkvisibilityOutput
	ToNetworkvisibilityOutputWithContext(ctx context.Context) NetworkvisibilityOutput
}

func (*Networkvisibility) ElementType() reflect.Type {
	return reflect.TypeOf((**Networkvisibility)(nil)).Elem()
}

func (i *Networkvisibility) ToNetworkvisibilityOutput() NetworkvisibilityOutput {
	return i.ToNetworkvisibilityOutputWithContext(context.Background())
}

func (i *Networkvisibility) ToNetworkvisibilityOutputWithContext(ctx context.Context) NetworkvisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkvisibilityOutput)
}

// NetworkvisibilityArrayInput is an input type that accepts NetworkvisibilityArray and NetworkvisibilityArrayOutput values.
// You can construct a concrete instance of `NetworkvisibilityArrayInput` via:
//
//	NetworkvisibilityArray{ NetworkvisibilityArgs{...} }
type NetworkvisibilityArrayInput interface {
	pulumi.Input

	ToNetworkvisibilityArrayOutput() NetworkvisibilityArrayOutput
	ToNetworkvisibilityArrayOutputWithContext(context.Context) NetworkvisibilityArrayOutput
}

type NetworkvisibilityArray []NetworkvisibilityInput

func (NetworkvisibilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Networkvisibility)(nil)).Elem()
}

func (i NetworkvisibilityArray) ToNetworkvisibilityArrayOutput() NetworkvisibilityArrayOutput {
	return i.ToNetworkvisibilityArrayOutputWithContext(context.Background())
}

func (i NetworkvisibilityArray) ToNetworkvisibilityArrayOutputWithContext(ctx context.Context) NetworkvisibilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkvisibilityArrayOutput)
}

// NetworkvisibilityMapInput is an input type that accepts NetworkvisibilityMap and NetworkvisibilityMapOutput values.
// You can construct a concrete instance of `NetworkvisibilityMapInput` via:
//
//	NetworkvisibilityMap{ "key": NetworkvisibilityArgs{...} }
type NetworkvisibilityMapInput interface {
	pulumi.Input

	ToNetworkvisibilityMapOutput() NetworkvisibilityMapOutput
	ToNetworkvisibilityMapOutputWithContext(context.Context) NetworkvisibilityMapOutput
}

type NetworkvisibilityMap map[string]NetworkvisibilityInput

func (NetworkvisibilityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Networkvisibility)(nil)).Elem()
}

func (i NetworkvisibilityMap) ToNetworkvisibilityMapOutput() NetworkvisibilityMapOutput {
	return i.ToNetworkvisibilityMapOutputWithContext(context.Background())
}

func (i NetworkvisibilityMap) ToNetworkvisibilityMapOutputWithContext(ctx context.Context) NetworkvisibilityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkvisibilityMapOutput)
}

type NetworkvisibilityOutput struct{ *pulumi.OutputState }

func (NetworkvisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Networkvisibility)(nil)).Elem()
}

func (o NetworkvisibilityOutput) ToNetworkvisibilityOutput() NetworkvisibilityOutput {
	return o
}

func (o NetworkvisibilityOutput) ToNetworkvisibilityOutputWithContext(ctx context.Context) NetworkvisibilityOutput {
	return o
}

// Enable/disable logging of destination hostname visibility. Valid values: `disable`, `enable`.
func (o NetworkvisibilityOutput) DestinationHostnameVisibility() pulumi.StringOutput {
	return o.ApplyT(func(v *Networkvisibility) pulumi.StringOutput { return v.DestinationHostnameVisibility }).(pulumi.StringOutput)
}

// Enable/disable logging of destination geographical location visibility. Valid values: `disable`, `enable`.
func (o NetworkvisibilityOutput) DestinationLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *Networkvisibility) pulumi.StringOutput { return v.DestinationLocation }).(pulumi.StringOutput)
}

// Enable/disable logging of destination visibility. Valid values: `disable`, `enable`.
func (o NetworkvisibilityOutput) DestinationVisibility() pulumi.StringOutput {
	return o.ApplyT(func(v *Networkvisibility) pulumi.StringOutput { return v.DestinationVisibility }).(pulumi.StringOutput)
}

// Limit of the number of hostname table entries (0 - 50000).
func (o NetworkvisibilityOutput) HostnameLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *Networkvisibility) pulumi.IntOutput { return v.HostnameLimit }).(pulumi.IntOutput)
}

// TTL of hostname table entries (60 - 86400).
func (o NetworkvisibilityOutput) HostnameTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *Networkvisibility) pulumi.IntOutput { return v.HostnameTtl }).(pulumi.IntOutput)
}

// Enable/disable logging of source geographical location visibility. Valid values: `disable`, `enable`.
func (o NetworkvisibilityOutput) SourceLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *Networkvisibility) pulumi.StringOutput { return v.SourceLocation }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o NetworkvisibilityOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Networkvisibility) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type NetworkvisibilityArrayOutput struct{ *pulumi.OutputState }

func (NetworkvisibilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Networkvisibility)(nil)).Elem()
}

func (o NetworkvisibilityArrayOutput) ToNetworkvisibilityArrayOutput() NetworkvisibilityArrayOutput {
	return o
}

func (o NetworkvisibilityArrayOutput) ToNetworkvisibilityArrayOutputWithContext(ctx context.Context) NetworkvisibilityArrayOutput {
	return o
}

func (o NetworkvisibilityArrayOutput) Index(i pulumi.IntInput) NetworkvisibilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Networkvisibility {
		return vs[0].([]*Networkvisibility)[vs[1].(int)]
	}).(NetworkvisibilityOutput)
}

type NetworkvisibilityMapOutput struct{ *pulumi.OutputState }

func (NetworkvisibilityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Networkvisibility)(nil)).Elem()
}

func (o NetworkvisibilityMapOutput) ToNetworkvisibilityMapOutput() NetworkvisibilityMapOutput {
	return o
}

func (o NetworkvisibilityMapOutput) ToNetworkvisibilityMapOutputWithContext(ctx context.Context) NetworkvisibilityMapOutput {
	return o
}

func (o NetworkvisibilityMapOutput) MapIndex(k pulumi.StringInput) NetworkvisibilityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Networkvisibility {
		return vs[0].(map[string]*Networkvisibility)[vs[1].(string)]
	}).(NetworkvisibilityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkvisibilityInput)(nil)).Elem(), &Networkvisibility{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkvisibilityArrayInput)(nil)).Elem(), NetworkvisibilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkvisibilityMapInput)(nil)).Elem(), NetworkvisibilityMap{})
	pulumi.RegisterOutputType(NetworkvisibilityOutput{})
	pulumi.RegisterOutputType(NetworkvisibilityArrayOutput{})
	pulumi.RegisterOutputType(NetworkvisibilityMapOutput{})
}
