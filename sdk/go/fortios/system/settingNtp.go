// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Provides a resource to configure Network Time Protocol (NTP) servers of FortiOS.
//
// !> **Warning:** The resource will be deprecated and replaced by new resource `system.Ntp`, we recommend that you use the new resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewSettingNtp(ctx, "test2", &system.SettingNtpArgs{
//				Ntpservers: pulumi.StringArray{
//					pulumi.String("1.1.1.1"),
//					pulumi.String("3.3.3.3"),
//				},
//				Ntpsync: pulumi.String("disable"),
//				Type:    pulumi.String("custom"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SettingNtp struct {
	pulumi.CustomResourceState

	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers pulumi.StringArrayOutput `pulumi:"ntpservers"`
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync pulumi.StringOutput `pulumi:"ntpsync"`
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSettingNtp registers a new resource with the given unique name, arguments, and options.
func NewSettingNtp(ctx *pulumi.Context,
	name string, args *SettingNtpArgs, opts ...pulumi.ResourceOption) (*SettingNtp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SettingNtp
	err := ctx.RegisterResource("fortios:system/settingNtp:SettingNtp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSettingNtp gets an existing SettingNtp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSettingNtp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SettingNtpState, opts ...pulumi.ResourceOption) (*SettingNtp, error) {
	var resource SettingNtp
	err := ctx.ReadResource("fortios:system/settingNtp:SettingNtp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SettingNtp resources.
type settingNtpState struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers []string `pulumi:"ntpservers"`
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync *string `pulumi:"ntpsync"`
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type *string `pulumi:"type"`
}

type SettingNtpState struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers pulumi.StringArrayInput
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync pulumi.StringPtrInput
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type pulumi.StringPtrInput
}

func (SettingNtpState) ElementType() reflect.Type {
	return reflect.TypeOf((*settingNtpState)(nil)).Elem()
}

type settingNtpArgs struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers []string `pulumi:"ntpservers"`
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync *string `pulumi:"ntpsync"`
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a SettingNtp resource.
type SettingNtpArgs struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers pulumi.StringArrayInput
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync pulumi.StringPtrInput
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type pulumi.StringInput
}

func (SettingNtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*settingNtpArgs)(nil)).Elem()
}

type SettingNtpInput interface {
	pulumi.Input

	ToSettingNtpOutput() SettingNtpOutput
	ToSettingNtpOutputWithContext(ctx context.Context) SettingNtpOutput
}

func (*SettingNtp) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingNtp)(nil)).Elem()
}

func (i *SettingNtp) ToSettingNtpOutput() SettingNtpOutput {
	return i.ToSettingNtpOutputWithContext(context.Background())
}

func (i *SettingNtp) ToSettingNtpOutputWithContext(ctx context.Context) SettingNtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingNtpOutput)
}

// SettingNtpArrayInput is an input type that accepts SettingNtpArray and SettingNtpArrayOutput values.
// You can construct a concrete instance of `SettingNtpArrayInput` via:
//
//	SettingNtpArray{ SettingNtpArgs{...} }
type SettingNtpArrayInput interface {
	pulumi.Input

	ToSettingNtpArrayOutput() SettingNtpArrayOutput
	ToSettingNtpArrayOutputWithContext(context.Context) SettingNtpArrayOutput
}

type SettingNtpArray []SettingNtpInput

func (SettingNtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SettingNtp)(nil)).Elem()
}

func (i SettingNtpArray) ToSettingNtpArrayOutput() SettingNtpArrayOutput {
	return i.ToSettingNtpArrayOutputWithContext(context.Background())
}

func (i SettingNtpArray) ToSettingNtpArrayOutputWithContext(ctx context.Context) SettingNtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingNtpArrayOutput)
}

// SettingNtpMapInput is an input type that accepts SettingNtpMap and SettingNtpMapOutput values.
// You can construct a concrete instance of `SettingNtpMapInput` via:
//
//	SettingNtpMap{ "key": SettingNtpArgs{...} }
type SettingNtpMapInput interface {
	pulumi.Input

	ToSettingNtpMapOutput() SettingNtpMapOutput
	ToSettingNtpMapOutputWithContext(context.Context) SettingNtpMapOutput
}

type SettingNtpMap map[string]SettingNtpInput

func (SettingNtpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SettingNtp)(nil)).Elem()
}

func (i SettingNtpMap) ToSettingNtpMapOutput() SettingNtpMapOutput {
	return i.ToSettingNtpMapOutputWithContext(context.Background())
}

func (i SettingNtpMap) ToSettingNtpMapOutputWithContext(ctx context.Context) SettingNtpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingNtpMapOutput)
}

type SettingNtpOutput struct{ *pulumi.OutputState }

func (SettingNtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingNtp)(nil)).Elem()
}

func (o SettingNtpOutput) ToSettingNtpOutput() SettingNtpOutput {
	return o
}

func (o SettingNtpOutput) ToSettingNtpOutputWithContext(ctx context.Context) SettingNtpOutput {
	return o
}

// Configure the FortiGate to connect to any available third-party NTP server.
func (o SettingNtpOutput) Ntpservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SettingNtp) pulumi.StringArrayOutput { return v.Ntpservers }).(pulumi.StringArrayOutput)
}

// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
func (o SettingNtpOutput) Ntpsync() pulumi.StringOutput {
	return o.ApplyT(func(v *SettingNtp) pulumi.StringOutput { return v.Ntpsync }).(pulumi.StringOutput)
}

// Use the FortiGuard NTP server or any other available NTP Server.
func (o SettingNtpOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SettingNtp) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type SettingNtpArrayOutput struct{ *pulumi.OutputState }

func (SettingNtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SettingNtp)(nil)).Elem()
}

func (o SettingNtpArrayOutput) ToSettingNtpArrayOutput() SettingNtpArrayOutput {
	return o
}

func (o SettingNtpArrayOutput) ToSettingNtpArrayOutputWithContext(ctx context.Context) SettingNtpArrayOutput {
	return o
}

func (o SettingNtpArrayOutput) Index(i pulumi.IntInput) SettingNtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SettingNtp {
		return vs[0].([]*SettingNtp)[vs[1].(int)]
	}).(SettingNtpOutput)
}

type SettingNtpMapOutput struct{ *pulumi.OutputState }

func (SettingNtpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SettingNtp)(nil)).Elem()
}

func (o SettingNtpMapOutput) ToSettingNtpMapOutput() SettingNtpMapOutput {
	return o
}

func (o SettingNtpMapOutput) ToSettingNtpMapOutputWithContext(ctx context.Context) SettingNtpMapOutput {
	return o
}

func (o SettingNtpMapOutput) MapIndex(k pulumi.StringInput) SettingNtpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SettingNtp {
		return vs[0].(map[string]*SettingNtp)[vs[1].(string)]
	}).(SettingNtpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SettingNtpInput)(nil)).Elem(), &SettingNtp{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingNtpArrayInput)(nil)).Elem(), SettingNtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingNtpMapInput)(nil)).Elem(), SettingNtpMap{})
	pulumi.RegisterOutputType(SettingNtpOutput{})
	pulumi.RegisterOutputType(SettingNtpArrayOutput{})
	pulumi.RegisterOutputType(SettingNtpMapOutput{})
}
