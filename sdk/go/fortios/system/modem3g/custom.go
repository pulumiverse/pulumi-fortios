// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package modem3g

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// 3G MODEM custom. Applies to FortiOS Version `7.0.4`.
//
// ## Import
//
// System3GModem Custom can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/modem3g/custom:Custom labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/modem3g/custom:Custom labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Custom struct {
	pulumi.CustomResourceState

	// USB interface class in hexadecimal format (00-ff).
	ClassId pulumi.StringOutput `pulumi:"classId"`
	// ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Init string in hexadecimal format (even length).
	InitString pulumi.StringOutput `pulumi:"initString"`
	// MODEM model name.
	Model pulumi.StringOutput `pulumi:"model"`
	// USB modeswitch arguments. e.g: '-v 1410 -p 9030 -V 1410 -P 9032 -u 3'
	ModeswitchString pulumi.StringOutput `pulumi:"modeswitchString"`
	// USB product ID in hexadecimal format (0000-ffff).
	ProductId pulumi.StringOutput `pulumi:"productId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
	// MODEM vendor name.
	Vendor pulumi.StringOutput `pulumi:"vendor"`
	// USB vendor ID in hexadecimal format (0000-ffff).
	VendorId pulumi.StringOutput `pulumi:"vendorId"`
}

// NewCustom registers a new resource with the given unique name, arguments, and options.
func NewCustom(ctx *pulumi.Context,
	name string, args *CustomArgs, opts ...pulumi.ResourceOption) (*Custom, error) {
	if args == nil {
		args = &CustomArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Custom
	err := ctx.RegisterResource("fortios:system/modem3g/custom:Custom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustom gets an existing Custom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomState, opts ...pulumi.ResourceOption) (*Custom, error) {
	var resource Custom
	err := ctx.ReadResource("fortios:system/modem3g/custom:Custom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Custom resources.
type customState struct {
	// USB interface class in hexadecimal format (00-ff).
	ClassId *string `pulumi:"classId"`
	// ID.
	Fosid *int `pulumi:"fosid"`
	// Init string in hexadecimal format (even length).
	InitString *string `pulumi:"initString"`
	// MODEM model name.
	Model *string `pulumi:"model"`
	// USB modeswitch arguments. e.g: '-v 1410 -p 9030 -V 1410 -P 9032 -u 3'
	ModeswitchString *string `pulumi:"modeswitchString"`
	// USB product ID in hexadecimal format (0000-ffff).
	ProductId *string `pulumi:"productId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// MODEM vendor name.
	Vendor *string `pulumi:"vendor"`
	// USB vendor ID in hexadecimal format (0000-ffff).
	VendorId *string `pulumi:"vendorId"`
}

type CustomState struct {
	// USB interface class in hexadecimal format (00-ff).
	ClassId pulumi.StringPtrInput
	// ID.
	Fosid pulumi.IntPtrInput
	// Init string in hexadecimal format (even length).
	InitString pulumi.StringPtrInput
	// MODEM model name.
	Model pulumi.StringPtrInput
	// USB modeswitch arguments. e.g: '-v 1410 -p 9030 -V 1410 -P 9032 -u 3'
	ModeswitchString pulumi.StringPtrInput
	// USB product ID in hexadecimal format (0000-ffff).
	ProductId pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// MODEM vendor name.
	Vendor pulumi.StringPtrInput
	// USB vendor ID in hexadecimal format (0000-ffff).
	VendorId pulumi.StringPtrInput
}

func (CustomState) ElementType() reflect.Type {
	return reflect.TypeOf((*customState)(nil)).Elem()
}

type customArgs struct {
	// USB interface class in hexadecimal format (00-ff).
	ClassId *string `pulumi:"classId"`
	// ID.
	Fosid *int `pulumi:"fosid"`
	// Init string in hexadecimal format (even length).
	InitString *string `pulumi:"initString"`
	// MODEM model name.
	Model *string `pulumi:"model"`
	// USB modeswitch arguments. e.g: '-v 1410 -p 9030 -V 1410 -P 9032 -u 3'
	ModeswitchString *string `pulumi:"modeswitchString"`
	// USB product ID in hexadecimal format (0000-ffff).
	ProductId *string `pulumi:"productId"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// MODEM vendor name.
	Vendor *string `pulumi:"vendor"`
	// USB vendor ID in hexadecimal format (0000-ffff).
	VendorId *string `pulumi:"vendorId"`
}

// The set of arguments for constructing a Custom resource.
type CustomArgs struct {
	// USB interface class in hexadecimal format (00-ff).
	ClassId pulumi.StringPtrInput
	// ID.
	Fosid pulumi.IntPtrInput
	// Init string in hexadecimal format (even length).
	InitString pulumi.StringPtrInput
	// MODEM model name.
	Model pulumi.StringPtrInput
	// USB modeswitch arguments. e.g: '-v 1410 -p 9030 -V 1410 -P 9032 -u 3'
	ModeswitchString pulumi.StringPtrInput
	// USB product ID in hexadecimal format (0000-ffff).
	ProductId pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// MODEM vendor name.
	Vendor pulumi.StringPtrInput
	// USB vendor ID in hexadecimal format (0000-ffff).
	VendorId pulumi.StringPtrInput
}

func (CustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customArgs)(nil)).Elem()
}

type CustomInput interface {
	pulumi.Input

	ToCustomOutput() CustomOutput
	ToCustomOutputWithContext(ctx context.Context) CustomOutput
}

func (*Custom) ElementType() reflect.Type {
	return reflect.TypeOf((**Custom)(nil)).Elem()
}

func (i *Custom) ToCustomOutput() CustomOutput {
	return i.ToCustomOutputWithContext(context.Background())
}

func (i *Custom) ToCustomOutputWithContext(ctx context.Context) CustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomOutput)
}

// CustomArrayInput is an input type that accepts CustomArray and CustomArrayOutput values.
// You can construct a concrete instance of `CustomArrayInput` via:
//
//	CustomArray{ CustomArgs{...} }
type CustomArrayInput interface {
	pulumi.Input

	ToCustomArrayOutput() CustomArrayOutput
	ToCustomArrayOutputWithContext(context.Context) CustomArrayOutput
}

type CustomArray []CustomInput

func (CustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Custom)(nil)).Elem()
}

func (i CustomArray) ToCustomArrayOutput() CustomArrayOutput {
	return i.ToCustomArrayOutputWithContext(context.Background())
}

func (i CustomArray) ToCustomArrayOutputWithContext(ctx context.Context) CustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomArrayOutput)
}

// CustomMapInput is an input type that accepts CustomMap and CustomMapOutput values.
// You can construct a concrete instance of `CustomMapInput` via:
//
//	CustomMap{ "key": CustomArgs{...} }
type CustomMapInput interface {
	pulumi.Input

	ToCustomMapOutput() CustomMapOutput
	ToCustomMapOutputWithContext(context.Context) CustomMapOutput
}

type CustomMap map[string]CustomInput

func (CustomMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Custom)(nil)).Elem()
}

func (i CustomMap) ToCustomMapOutput() CustomMapOutput {
	return i.ToCustomMapOutputWithContext(context.Background())
}

func (i CustomMap) ToCustomMapOutputWithContext(ctx context.Context) CustomMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomMapOutput)
}

type CustomOutput struct{ *pulumi.OutputState }

func (CustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Custom)(nil)).Elem()
}

func (o CustomOutput) ToCustomOutput() CustomOutput {
	return o
}

func (o CustomOutput) ToCustomOutputWithContext(ctx context.Context) CustomOutput {
	return o
}

// USB interface class in hexadecimal format (00-ff).
func (o CustomOutput) ClassId() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.ClassId }).(pulumi.StringOutput)
}

// ID.
func (o CustomOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *Custom) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Init string in hexadecimal format (even length).
func (o CustomOutput) InitString() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.InitString }).(pulumi.StringOutput)
}

// MODEM model name.
func (o CustomOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Model }).(pulumi.StringOutput)
}

// USB modeswitch arguments. e.g: '-v 1410 -p 9030 -V 1410 -P 9032 -u 3'
func (o CustomOutput) ModeswitchString() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.ModeswitchString }).(pulumi.StringOutput)
}

// USB product ID in hexadecimal format (0000-ffff).
func (o CustomOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.ProductId }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o CustomOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

// MODEM vendor name.
func (o CustomOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Vendor }).(pulumi.StringOutput)
}

// USB vendor ID in hexadecimal format (0000-ffff).
func (o CustomOutput) VendorId() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.VendorId }).(pulumi.StringOutput)
}

type CustomArrayOutput struct{ *pulumi.OutputState }

func (CustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Custom)(nil)).Elem()
}

func (o CustomArrayOutput) ToCustomArrayOutput() CustomArrayOutput {
	return o
}

func (o CustomArrayOutput) ToCustomArrayOutputWithContext(ctx context.Context) CustomArrayOutput {
	return o
}

func (o CustomArrayOutput) Index(i pulumi.IntInput) CustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Custom {
		return vs[0].([]*Custom)[vs[1].(int)]
	}).(CustomOutput)
}

type CustomMapOutput struct{ *pulumi.OutputState }

func (CustomMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Custom)(nil)).Elem()
}

func (o CustomMapOutput) ToCustomMapOutput() CustomMapOutput {
	return o
}

func (o CustomMapOutput) ToCustomMapOutputWithContext(ctx context.Context) CustomMapOutput {
	return o
}

func (o CustomMapOutput) MapIndex(k pulumi.StringInput) CustomOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Custom {
		return vs[0].(map[string]*Custom)[vs[1].(string)]
	}).(CustomOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomInput)(nil)).Elem(), &Custom{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomArrayInput)(nil)).Elem(), CustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomMapInput)(nil)).Elem(), CustomMap{})
	pulumi.RegisterOutputType(CustomOutput{})
	pulumi.RegisterOutputType(CustomArrayOutput{})
	pulumi.RegisterOutputType(CustomMapOutput{})
}
