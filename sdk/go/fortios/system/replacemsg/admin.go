// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package replacemsg

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Replacement messages.
//
// ## Import
//
// SystemReplacemsg Admin can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/replacemsg/admin:Admin labelname {{msg_type}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/replacemsg/admin:Admin labelname {{msg_type}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Admin struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewAdmin registers a new resource with the given unique name, arguments, and options.
func NewAdmin(ctx *pulumi.Context,
	name string, args *AdminArgs, opts ...pulumi.ResourceOption) (*Admin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Admin
	err := ctx.RegisterResource("fortios:system/replacemsg/admin:Admin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAdmin gets an existing Admin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAdmin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AdminState, opts ...pulumi.ResourceOption) (*Admin, error) {
	var resource Admin
	err := ctx.ReadResource("fortios:system/replacemsg/admin:Admin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Admin resources.
type adminState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AdminState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AdminState) ElementType() reflect.Type {
	return reflect.TypeOf((*adminState)(nil)).Elem()
}

type adminArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Admin resource.
type AdminArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AdminArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*adminArgs)(nil)).Elem()
}

type AdminInput interface {
	pulumi.Input

	ToAdminOutput() AdminOutput
	ToAdminOutputWithContext(ctx context.Context) AdminOutput
}

func (*Admin) ElementType() reflect.Type {
	return reflect.TypeOf((**Admin)(nil)).Elem()
}

func (i *Admin) ToAdminOutput() AdminOutput {
	return i.ToAdminOutputWithContext(context.Background())
}

func (i *Admin) ToAdminOutputWithContext(ctx context.Context) AdminOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminOutput)
}

// AdminArrayInput is an input type that accepts AdminArray and AdminArrayOutput values.
// You can construct a concrete instance of `AdminArrayInput` via:
//
//	AdminArray{ AdminArgs{...} }
type AdminArrayInput interface {
	pulumi.Input

	ToAdminArrayOutput() AdminArrayOutput
	ToAdminArrayOutputWithContext(context.Context) AdminArrayOutput
}

type AdminArray []AdminInput

func (AdminArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Admin)(nil)).Elem()
}

func (i AdminArray) ToAdminArrayOutput() AdminArrayOutput {
	return i.ToAdminArrayOutputWithContext(context.Background())
}

func (i AdminArray) ToAdminArrayOutputWithContext(ctx context.Context) AdminArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminArrayOutput)
}

// AdminMapInput is an input type that accepts AdminMap and AdminMapOutput values.
// You can construct a concrete instance of `AdminMapInput` via:
//
//	AdminMap{ "key": AdminArgs{...} }
type AdminMapInput interface {
	pulumi.Input

	ToAdminMapOutput() AdminMapOutput
	ToAdminMapOutputWithContext(context.Context) AdminMapOutput
}

type AdminMap map[string]AdminInput

func (AdminMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Admin)(nil)).Elem()
}

func (i AdminMap) ToAdminMapOutput() AdminMapOutput {
	return i.ToAdminMapOutputWithContext(context.Background())
}

func (i AdminMap) ToAdminMapOutputWithContext(ctx context.Context) AdminMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminMapOutput)
}

type AdminOutput struct{ *pulumi.OutputState }

func (AdminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Admin)(nil)).Elem()
}

func (o AdminOutput) ToAdminOutput() AdminOutput {
	return o
}

func (o AdminOutput) ToAdminOutputWithContext(ctx context.Context) AdminOutput {
	return o
}

// Message string.
func (o AdminOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Admin) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o AdminOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *Admin) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o AdminOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *Admin) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o AdminOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *Admin) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o AdminOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Admin) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type AdminArrayOutput struct{ *pulumi.OutputState }

func (AdminArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Admin)(nil)).Elem()
}

func (o AdminArrayOutput) ToAdminArrayOutput() AdminArrayOutput {
	return o
}

func (o AdminArrayOutput) ToAdminArrayOutputWithContext(ctx context.Context) AdminArrayOutput {
	return o
}

func (o AdminArrayOutput) Index(i pulumi.IntInput) AdminOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Admin {
		return vs[0].([]*Admin)[vs[1].(int)]
	}).(AdminOutput)
}

type AdminMapOutput struct{ *pulumi.OutputState }

func (AdminMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Admin)(nil)).Elem()
}

func (o AdminMapOutput) ToAdminMapOutput() AdminMapOutput {
	return o
}

func (o AdminMapOutput) ToAdminMapOutputWithContext(ctx context.Context) AdminMapOutput {
	return o
}

func (o AdminMapOutput) MapIndex(k pulumi.StringInput) AdminOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Admin {
		return vs[0].(map[string]*Admin)[vs[1].(string)]
	}).(AdminOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdminInput)(nil)).Elem(), &Admin{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminArrayInput)(nil)).Elem(), AdminArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminMapInput)(nil)).Elem(), AdminMap{})
	pulumi.RegisterOutputType(AdminOutput{})
	pulumi.RegisterOutputType(AdminArrayOutput{})
	pulumi.RegisterOutputType(AdminMapOutput{})
}
