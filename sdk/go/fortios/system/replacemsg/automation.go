// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package replacemsg

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Replacement messages. Applies to FortiOS Version `>= 7.0.0`.
//
// ## Import
//
// SystemReplacemsg Automation can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/replacemsg/automation:Automation labelname {{msg_type}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/replacemsg/automation:Automation labelname {{msg_type}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Automation struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewAutomation registers a new resource with the given unique name, arguments, and options.
func NewAutomation(ctx *pulumi.Context,
	name string, args *AutomationArgs, opts ...pulumi.ResourceOption) (*Automation, error) {
	if args == nil {
		args = &AutomationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Automation
	err := ctx.RegisterResource("fortios:system/replacemsg/automation:Automation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutomation gets an existing Automation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutomation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutomationState, opts ...pulumi.ResourceOption) (*Automation, error) {
	var resource Automation
	err := ctx.ReadResource("fortios:system/replacemsg/automation:Automation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Automation resources.
type automationState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AutomationState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag. Valid values: `none`, `text`, `html`.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AutomationState) ElementType() reflect.Type {
	return reflect.TypeOf((*automationState)(nil)).Elem()
}

type automationArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Automation resource.
type AutomationArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag. Valid values: `none`, `text`, `html`.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*automationArgs)(nil)).Elem()
}

type AutomationInput interface {
	pulumi.Input

	ToAutomationOutput() AutomationOutput
	ToAutomationOutputWithContext(ctx context.Context) AutomationOutput
}

func (*Automation) ElementType() reflect.Type {
	return reflect.TypeOf((**Automation)(nil)).Elem()
}

func (i *Automation) ToAutomationOutput() AutomationOutput {
	return i.ToAutomationOutputWithContext(context.Background())
}

func (i *Automation) ToAutomationOutputWithContext(ctx context.Context) AutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationOutput)
}

// AutomationArrayInput is an input type that accepts AutomationArray and AutomationArrayOutput values.
// You can construct a concrete instance of `AutomationArrayInput` via:
//
//	AutomationArray{ AutomationArgs{...} }
type AutomationArrayInput interface {
	pulumi.Input

	ToAutomationArrayOutput() AutomationArrayOutput
	ToAutomationArrayOutputWithContext(context.Context) AutomationArrayOutput
}

type AutomationArray []AutomationInput

func (AutomationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Automation)(nil)).Elem()
}

func (i AutomationArray) ToAutomationArrayOutput() AutomationArrayOutput {
	return i.ToAutomationArrayOutputWithContext(context.Background())
}

func (i AutomationArray) ToAutomationArrayOutputWithContext(ctx context.Context) AutomationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationArrayOutput)
}

// AutomationMapInput is an input type that accepts AutomationMap and AutomationMapOutput values.
// You can construct a concrete instance of `AutomationMapInput` via:
//
//	AutomationMap{ "key": AutomationArgs{...} }
type AutomationMapInput interface {
	pulumi.Input

	ToAutomationMapOutput() AutomationMapOutput
	ToAutomationMapOutputWithContext(context.Context) AutomationMapOutput
}

type AutomationMap map[string]AutomationInput

func (AutomationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Automation)(nil)).Elem()
}

func (i AutomationMap) ToAutomationMapOutput() AutomationMapOutput {
	return i.ToAutomationMapOutputWithContext(context.Background())
}

func (i AutomationMap) ToAutomationMapOutputWithContext(ctx context.Context) AutomationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationMapOutput)
}

type AutomationOutput struct{ *pulumi.OutputState }

func (AutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Automation)(nil)).Elem()
}

func (o AutomationOutput) ToAutomationOutput() AutomationOutput {
	return o
}

func (o AutomationOutput) ToAutomationOutputWithContext(ctx context.Context) AutomationOutput {
	return o
}

// Message string.
func (o AutomationOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag. Valid values: `none`, `text`, `html`.
func (o AutomationOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o AutomationOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o AutomationOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o AutomationOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type AutomationArrayOutput struct{ *pulumi.OutputState }

func (AutomationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Automation)(nil)).Elem()
}

func (o AutomationArrayOutput) ToAutomationArrayOutput() AutomationArrayOutput {
	return o
}

func (o AutomationArrayOutput) ToAutomationArrayOutputWithContext(ctx context.Context) AutomationArrayOutput {
	return o
}

func (o AutomationArrayOutput) Index(i pulumi.IntInput) AutomationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Automation {
		return vs[0].([]*Automation)[vs[1].(int)]
	}).(AutomationOutput)
}

type AutomationMapOutput struct{ *pulumi.OutputState }

func (AutomationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Automation)(nil)).Elem()
}

func (o AutomationMapOutput) ToAutomationMapOutput() AutomationMapOutput {
	return o
}

func (o AutomationMapOutput) ToAutomationMapOutputWithContext(ctx context.Context) AutomationMapOutput {
	return o
}

func (o AutomationMapOutput) MapIndex(k pulumi.StringInput) AutomationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Automation {
		return vs[0].(map[string]*Automation)[vs[1].(string)]
	}).(AutomationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationInput)(nil)).Elem(), &Automation{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationArrayInput)(nil)).Elem(), AutomationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationMapInput)(nil)).Elem(), AutomationMap{})
	pulumi.RegisterOutputType(AutomationOutput{})
	pulumi.RegisterOutputType(AutomationArrayOutput{})
	pulumi.RegisterOutputType(AutomationMapOutput{})
}
