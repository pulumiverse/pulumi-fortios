// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package replacemsg

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Replacement messages.
//
// ## Import
//
// SystemReplacemsg Sslvpn can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/replacemsg/sslvpn:Sslvpn labelname {{msg_type}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/replacemsg/sslvpn:Sslvpn labelname {{msg_type}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Sslvpn struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewSslvpn registers a new resource with the given unique name, arguments, and options.
func NewSslvpn(ctx *pulumi.Context,
	name string, args *SslvpnArgs, opts ...pulumi.ResourceOption) (*Sslvpn, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Sslvpn
	err := ctx.RegisterResource("fortios:system/replacemsg/sslvpn:Sslvpn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSslvpn gets an existing Sslvpn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSslvpn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SslvpnState, opts ...pulumi.ResourceOption) (*Sslvpn, error) {
	var resource Sslvpn
	err := ctx.ReadResource("fortios:system/replacemsg/sslvpn:Sslvpn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Sslvpn resources.
type sslvpnState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SslvpnState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SslvpnState) ElementType() reflect.Type {
	return reflect.TypeOf((*sslvpnState)(nil)).Elem()
}

type sslvpnArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Sslvpn resource.
type SslvpnArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SslvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sslvpnArgs)(nil)).Elem()
}

type SslvpnInput interface {
	pulumi.Input

	ToSslvpnOutput() SslvpnOutput
	ToSslvpnOutputWithContext(ctx context.Context) SslvpnOutput
}

func (*Sslvpn) ElementType() reflect.Type {
	return reflect.TypeOf((**Sslvpn)(nil)).Elem()
}

func (i *Sslvpn) ToSslvpnOutput() SslvpnOutput {
	return i.ToSslvpnOutputWithContext(context.Background())
}

func (i *Sslvpn) ToSslvpnOutputWithContext(ctx context.Context) SslvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslvpnOutput)
}

// SslvpnArrayInput is an input type that accepts SslvpnArray and SslvpnArrayOutput values.
// You can construct a concrete instance of `SslvpnArrayInput` via:
//
//	SslvpnArray{ SslvpnArgs{...} }
type SslvpnArrayInput interface {
	pulumi.Input

	ToSslvpnArrayOutput() SslvpnArrayOutput
	ToSslvpnArrayOutputWithContext(context.Context) SslvpnArrayOutput
}

type SslvpnArray []SslvpnInput

func (SslvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Sslvpn)(nil)).Elem()
}

func (i SslvpnArray) ToSslvpnArrayOutput() SslvpnArrayOutput {
	return i.ToSslvpnArrayOutputWithContext(context.Background())
}

func (i SslvpnArray) ToSslvpnArrayOutputWithContext(ctx context.Context) SslvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslvpnArrayOutput)
}

// SslvpnMapInput is an input type that accepts SslvpnMap and SslvpnMapOutput values.
// You can construct a concrete instance of `SslvpnMapInput` via:
//
//	SslvpnMap{ "key": SslvpnArgs{...} }
type SslvpnMapInput interface {
	pulumi.Input

	ToSslvpnMapOutput() SslvpnMapOutput
	ToSslvpnMapOutputWithContext(context.Context) SslvpnMapOutput
}

type SslvpnMap map[string]SslvpnInput

func (SslvpnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Sslvpn)(nil)).Elem()
}

func (i SslvpnMap) ToSslvpnMapOutput() SslvpnMapOutput {
	return i.ToSslvpnMapOutputWithContext(context.Background())
}

func (i SslvpnMap) ToSslvpnMapOutputWithContext(ctx context.Context) SslvpnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslvpnMapOutput)
}

type SslvpnOutput struct{ *pulumi.OutputState }

func (SslvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sslvpn)(nil)).Elem()
}

func (o SslvpnOutput) ToSslvpnOutput() SslvpnOutput {
	return o
}

func (o SslvpnOutput) ToSslvpnOutputWithContext(ctx context.Context) SslvpnOutput {
	return o
}

// Message string.
func (o SslvpnOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sslvpn) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SslvpnOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *Sslvpn) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SslvpnOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *Sslvpn) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o SslvpnOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *Sslvpn) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SslvpnOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Sslvpn) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type SslvpnArrayOutput struct{ *pulumi.OutputState }

func (SslvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Sslvpn)(nil)).Elem()
}

func (o SslvpnArrayOutput) ToSslvpnArrayOutput() SslvpnArrayOutput {
	return o
}

func (o SslvpnArrayOutput) ToSslvpnArrayOutputWithContext(ctx context.Context) SslvpnArrayOutput {
	return o
}

func (o SslvpnArrayOutput) Index(i pulumi.IntInput) SslvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Sslvpn {
		return vs[0].([]*Sslvpn)[vs[1].(int)]
	}).(SslvpnOutput)
}

type SslvpnMapOutput struct{ *pulumi.OutputState }

func (SslvpnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Sslvpn)(nil)).Elem()
}

func (o SslvpnMapOutput) ToSslvpnMapOutput() SslvpnMapOutput {
	return o
}

func (o SslvpnMapOutput) ToSslvpnMapOutputWithContext(ctx context.Context) SslvpnMapOutput {
	return o
}

func (o SslvpnMapOutput) MapIndex(k pulumi.StringInput) SslvpnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Sslvpn {
		return vs[0].(map[string]*Sslvpn)[vs[1].(string)]
	}).(SslvpnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SslvpnInput)(nil)).Elem(), &Sslvpn{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslvpnArrayInput)(nil)).Elem(), SslvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslvpnMapInput)(nil)).Elem(), SslvpnMap{})
	pulumi.RegisterOutputType(SslvpnOutput{})
	pulumi.RegisterOutputType(SslvpnArrayOutput{})
	pulumi.RegisterOutputType(SslvpnMapOutput{})
}
