// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure FortiNDR. Applies to FortiOS Version `>= 7.0.8`.
//
// ## Import
//
// System Fortindr can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/fortindr:Fortindr labelname SystemFortindr
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/fortindr:Fortindr labelname SystemFortindr
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Fortindr struct {
	pulumi.CustomResourceState

	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// Source IP address for communications to FortiNDR.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFortindr registers a new resource with the given unique name, arguments, and options.
func NewFortindr(ctx *pulumi.Context,
	name string, args *FortindrArgs, opts ...pulumi.ResourceOption) (*Fortindr, error) {
	if args == nil {
		args = &FortindrArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Fortindr
	err := ctx.RegisterResource("fortios:system/fortindr:Fortindr", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFortindr gets an existing Fortindr resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFortindr(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FortindrState, opts ...pulumi.ResourceOption) (*Fortindr, error) {
	var resource Fortindr
	err := ctx.ReadResource("fortios:system/fortindr:Fortindr", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Fortindr resources.
type fortindrState struct {
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communications to FortiNDR.
	SourceIp *string `pulumi:"sourceIp"`
	// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FortindrState struct {
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Source IP address for communications to FortiNDR.
	SourceIp pulumi.StringPtrInput
	// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FortindrState) ElementType() reflect.Type {
	return reflect.TypeOf((*fortindrState)(nil)).Elem()
}

type fortindrArgs struct {
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communications to FortiNDR.
	SourceIp *string `pulumi:"sourceIp"`
	// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Fortindr resource.
type FortindrArgs struct {
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Source IP address for communications to FortiNDR.
	SourceIp pulumi.StringPtrInput
	// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FortindrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fortindrArgs)(nil)).Elem()
}

type FortindrInput interface {
	pulumi.Input

	ToFortindrOutput() FortindrOutput
	ToFortindrOutputWithContext(ctx context.Context) FortindrOutput
}

func (*Fortindr) ElementType() reflect.Type {
	return reflect.TypeOf((**Fortindr)(nil)).Elem()
}

func (i *Fortindr) ToFortindrOutput() FortindrOutput {
	return i.ToFortindrOutputWithContext(context.Background())
}

func (i *Fortindr) ToFortindrOutputWithContext(ctx context.Context) FortindrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortindrOutput)
}

// FortindrArrayInput is an input type that accepts FortindrArray and FortindrArrayOutput values.
// You can construct a concrete instance of `FortindrArrayInput` via:
//
//	FortindrArray{ FortindrArgs{...} }
type FortindrArrayInput interface {
	pulumi.Input

	ToFortindrArrayOutput() FortindrArrayOutput
	ToFortindrArrayOutputWithContext(context.Context) FortindrArrayOutput
}

type FortindrArray []FortindrInput

func (FortindrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fortindr)(nil)).Elem()
}

func (i FortindrArray) ToFortindrArrayOutput() FortindrArrayOutput {
	return i.ToFortindrArrayOutputWithContext(context.Background())
}

func (i FortindrArray) ToFortindrArrayOutputWithContext(ctx context.Context) FortindrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortindrArrayOutput)
}

// FortindrMapInput is an input type that accepts FortindrMap and FortindrMapOutput values.
// You can construct a concrete instance of `FortindrMapInput` via:
//
//	FortindrMap{ "key": FortindrArgs{...} }
type FortindrMapInput interface {
	pulumi.Input

	ToFortindrMapOutput() FortindrMapOutput
	ToFortindrMapOutputWithContext(context.Context) FortindrMapOutput
}

type FortindrMap map[string]FortindrInput

func (FortindrMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fortindr)(nil)).Elem()
}

func (i FortindrMap) ToFortindrMapOutput() FortindrMapOutput {
	return i.ToFortindrMapOutputWithContext(context.Background())
}

func (i FortindrMap) ToFortindrMapOutputWithContext(ctx context.Context) FortindrMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortindrMapOutput)
}

type FortindrOutput struct{ *pulumi.OutputState }

func (FortindrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Fortindr)(nil)).Elem()
}

func (o FortindrOutput) ToFortindrOutput() FortindrOutput {
	return o
}

func (o FortindrOutput) ToFortindrOutputWithContext(ctx context.Context) FortindrOutput {
	return o
}

// Specify outgoing interface to reach server.
func (o FortindrOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Fortindr) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o FortindrOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Fortindr) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Source IP address for communications to FortiNDR.
func (o FortindrOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Fortindr) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
func (o FortindrOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Fortindr) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FortindrOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fortindr) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FortindrArrayOutput struct{ *pulumi.OutputState }

func (FortindrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fortindr)(nil)).Elem()
}

func (o FortindrArrayOutput) ToFortindrArrayOutput() FortindrArrayOutput {
	return o
}

func (o FortindrArrayOutput) ToFortindrArrayOutputWithContext(ctx context.Context) FortindrArrayOutput {
	return o
}

func (o FortindrArrayOutput) Index(i pulumi.IntInput) FortindrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Fortindr {
		return vs[0].([]*Fortindr)[vs[1].(int)]
	}).(FortindrOutput)
}

type FortindrMapOutput struct{ *pulumi.OutputState }

func (FortindrMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fortindr)(nil)).Elem()
}

func (o FortindrMapOutput) ToFortindrMapOutput() FortindrMapOutput {
	return o
}

func (o FortindrMapOutput) ToFortindrMapOutputWithContext(ctx context.Context) FortindrMapOutput {
	return o
}

func (o FortindrMapOutput) MapIndex(k pulumi.StringInput) FortindrOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Fortindr {
		return vs[0].(map[string]*Fortindr)[vs[1].(string)]
	}).(FortindrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FortindrInput)(nil)).Elem(), &Fortindr{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortindrArrayInput)(nil)).Elem(), FortindrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortindrMapInput)(nil)).Elem(), FortindrMap{})
	pulumi.RegisterOutputType(FortindrOutput{})
	pulumi.RegisterOutputType(FortindrArrayOutput{})
	pulumi.RegisterOutputType(FortindrMapOutput{})
}
