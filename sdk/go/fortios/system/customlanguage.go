// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure custom languages.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewCustomlanguage(ctx, "trname", &system.CustomlanguageArgs{
//				Filename: pulumi.String("en"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System CustomLanguage can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/customlanguage:Customlanguage labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/customlanguage:Customlanguage labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Customlanguage struct {
	pulumi.CustomResourceState

	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Custom language file path.
	Filename pulumi.StringOutput `pulumi:"filename"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewCustomlanguage registers a new resource with the given unique name, arguments, and options.
func NewCustomlanguage(ctx *pulumi.Context,
	name string, args *CustomlanguageArgs, opts ...pulumi.ResourceOption) (*Customlanguage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Filename == nil {
		return nil, errors.New("invalid value for required argument 'Filename'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Customlanguage
	err := ctx.RegisterResource("fortios:system/customlanguage:Customlanguage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomlanguage gets an existing Customlanguage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomlanguage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomlanguageState, opts ...pulumi.ResourceOption) (*Customlanguage, error) {
	var resource Customlanguage
	err := ctx.ReadResource("fortios:system/customlanguage:Customlanguage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Customlanguage resources.
type customlanguageState struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// Custom language file path.
	Filename *string `pulumi:"filename"`
	// Name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type CustomlanguageState struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// Custom language file path.
	Filename pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (CustomlanguageState) ElementType() reflect.Type {
	return reflect.TypeOf((*customlanguageState)(nil)).Elem()
}

type customlanguageArgs struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// Custom language file path.
	Filename string `pulumi:"filename"`
	// Name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Customlanguage resource.
type CustomlanguageArgs struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// Custom language file path.
	Filename pulumi.StringInput
	// Name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (CustomlanguageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customlanguageArgs)(nil)).Elem()
}

type CustomlanguageInput interface {
	pulumi.Input

	ToCustomlanguageOutput() CustomlanguageOutput
	ToCustomlanguageOutputWithContext(ctx context.Context) CustomlanguageOutput
}

func (*Customlanguage) ElementType() reflect.Type {
	return reflect.TypeOf((**Customlanguage)(nil)).Elem()
}

func (i *Customlanguage) ToCustomlanguageOutput() CustomlanguageOutput {
	return i.ToCustomlanguageOutputWithContext(context.Background())
}

func (i *Customlanguage) ToCustomlanguageOutputWithContext(ctx context.Context) CustomlanguageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomlanguageOutput)
}

// CustomlanguageArrayInput is an input type that accepts CustomlanguageArray and CustomlanguageArrayOutput values.
// You can construct a concrete instance of `CustomlanguageArrayInput` via:
//
//	CustomlanguageArray{ CustomlanguageArgs{...} }
type CustomlanguageArrayInput interface {
	pulumi.Input

	ToCustomlanguageArrayOutput() CustomlanguageArrayOutput
	ToCustomlanguageArrayOutputWithContext(context.Context) CustomlanguageArrayOutput
}

type CustomlanguageArray []CustomlanguageInput

func (CustomlanguageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Customlanguage)(nil)).Elem()
}

func (i CustomlanguageArray) ToCustomlanguageArrayOutput() CustomlanguageArrayOutput {
	return i.ToCustomlanguageArrayOutputWithContext(context.Background())
}

func (i CustomlanguageArray) ToCustomlanguageArrayOutputWithContext(ctx context.Context) CustomlanguageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomlanguageArrayOutput)
}

// CustomlanguageMapInput is an input type that accepts CustomlanguageMap and CustomlanguageMapOutput values.
// You can construct a concrete instance of `CustomlanguageMapInput` via:
//
//	CustomlanguageMap{ "key": CustomlanguageArgs{...} }
type CustomlanguageMapInput interface {
	pulumi.Input

	ToCustomlanguageMapOutput() CustomlanguageMapOutput
	ToCustomlanguageMapOutputWithContext(context.Context) CustomlanguageMapOutput
}

type CustomlanguageMap map[string]CustomlanguageInput

func (CustomlanguageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Customlanguage)(nil)).Elem()
}

func (i CustomlanguageMap) ToCustomlanguageMapOutput() CustomlanguageMapOutput {
	return i.ToCustomlanguageMapOutputWithContext(context.Background())
}

func (i CustomlanguageMap) ToCustomlanguageMapOutputWithContext(ctx context.Context) CustomlanguageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomlanguageMapOutput)
}

type CustomlanguageOutput struct{ *pulumi.OutputState }

func (CustomlanguageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Customlanguage)(nil)).Elem()
}

func (o CustomlanguageOutput) ToCustomlanguageOutput() CustomlanguageOutput {
	return o
}

func (o CustomlanguageOutput) ToCustomlanguageOutputWithContext(ctx context.Context) CustomlanguageOutput {
	return o
}

// Comment.
func (o CustomlanguageOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Customlanguage) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// Custom language file path.
func (o CustomlanguageOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v *Customlanguage) pulumi.StringOutput { return v.Filename }).(pulumi.StringOutput)
}

// Name.
func (o CustomlanguageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Customlanguage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o CustomlanguageOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Customlanguage) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type CustomlanguageArrayOutput struct{ *pulumi.OutputState }

func (CustomlanguageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Customlanguage)(nil)).Elem()
}

func (o CustomlanguageArrayOutput) ToCustomlanguageArrayOutput() CustomlanguageArrayOutput {
	return o
}

func (o CustomlanguageArrayOutput) ToCustomlanguageArrayOutputWithContext(ctx context.Context) CustomlanguageArrayOutput {
	return o
}

func (o CustomlanguageArrayOutput) Index(i pulumi.IntInput) CustomlanguageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Customlanguage {
		return vs[0].([]*Customlanguage)[vs[1].(int)]
	}).(CustomlanguageOutput)
}

type CustomlanguageMapOutput struct{ *pulumi.OutputState }

func (CustomlanguageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Customlanguage)(nil)).Elem()
}

func (o CustomlanguageMapOutput) ToCustomlanguageMapOutput() CustomlanguageMapOutput {
	return o
}

func (o CustomlanguageMapOutput) ToCustomlanguageMapOutputWithContext(ctx context.Context) CustomlanguageMapOutput {
	return o
}

func (o CustomlanguageMapOutput) MapIndex(k pulumi.StringInput) CustomlanguageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Customlanguage {
		return vs[0].(map[string]*Customlanguage)[vs[1].(string)]
	}).(CustomlanguageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomlanguageInput)(nil)).Elem(), &Customlanguage{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomlanguageArrayInput)(nil)).Elem(), CustomlanguageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomlanguageMapInput)(nil)).Elem(), CustomlanguageMap{})
	pulumi.RegisterOutputType(CustomlanguageOutput{})
	pulumi.RegisterOutputType(CustomlanguageArrayOutput{})
	pulumi.RegisterOutputType(CustomlanguageMapOutput{})
}
