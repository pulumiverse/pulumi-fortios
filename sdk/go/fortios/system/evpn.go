// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure EVPN instance. Applies to FortiOS Version `>= 7.4.0`.
//
// ## Import
//
// System Evpn can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/evpn:Evpn labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/evpn:Evpn labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Evpn struct {
	pulumi.CustomResourceState

	// Enable/disable ARP suppression. Valid values: `enable`, `disable`.
	ArpSuppression pulumi.StringOutput `pulumi:"arpSuppression"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// List of export route targets. The structure of `exportRt` block is documented below.
	ExportRts EvpnExportRtArrayOutput `pulumi:"exportRts"`
	// ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// List of import route targets. The structure of `importRt` block is documented below.
	ImportRts EvpnImportRtArrayOutput `pulumi:"importRts"`
	// Enable/disable IP address local learning. Valid values: `enable`, `disable`.
	IpLocalLearning pulumi.StringOutput `pulumi:"ipLocalLearning"`
	// Route Distinguisher: AA|AA:NN|A.B.C.D:NN.
	Rd pulumi.StringOutput `pulumi:"rd"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewEvpn registers a new resource with the given unique name, arguments, and options.
func NewEvpn(ctx *pulumi.Context,
	name string, args *EvpnArgs, opts ...pulumi.ResourceOption) (*Evpn, error) {
	if args == nil {
		args = &EvpnArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Evpn
	err := ctx.RegisterResource("fortios:system/evpn:Evpn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEvpn gets an existing Evpn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEvpn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EvpnState, opts ...pulumi.ResourceOption) (*Evpn, error) {
	var resource Evpn
	err := ctx.ReadResource("fortios:system/evpn:Evpn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Evpn resources.
type evpnState struct {
	// Enable/disable ARP suppression. Valid values: `enable`, `disable`.
	ArpSuppression *string `pulumi:"arpSuppression"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// List of export route targets. The structure of `exportRt` block is documented below.
	ExportRts []EvpnExportRt `pulumi:"exportRts"`
	// ID.
	Fosid *int `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// List of import route targets. The structure of `importRt` block is documented below.
	ImportRts []EvpnImportRt `pulumi:"importRts"`
	// Enable/disable IP address local learning. Valid values: `enable`, `disable`.
	IpLocalLearning *string `pulumi:"ipLocalLearning"`
	// Route Distinguisher: AA|AA:NN|A.B.C.D:NN.
	Rd *string `pulumi:"rd"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type EvpnState struct {
	// Enable/disable ARP suppression. Valid values: `enable`, `disable`.
	ArpSuppression pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// List of export route targets. The structure of `exportRt` block is documented below.
	ExportRts EvpnExportRtArrayInput
	// ID.
	Fosid pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// List of import route targets. The structure of `importRt` block is documented below.
	ImportRts EvpnImportRtArrayInput
	// Enable/disable IP address local learning. Valid values: `enable`, `disable`.
	IpLocalLearning pulumi.StringPtrInput
	// Route Distinguisher: AA|AA:NN|A.B.C.D:NN.
	Rd pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (EvpnState) ElementType() reflect.Type {
	return reflect.TypeOf((*evpnState)(nil)).Elem()
}

type evpnArgs struct {
	// Enable/disable ARP suppression. Valid values: `enable`, `disable`.
	ArpSuppression *string `pulumi:"arpSuppression"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// List of export route targets. The structure of `exportRt` block is documented below.
	ExportRts []EvpnExportRt `pulumi:"exportRts"`
	// ID.
	Fosid *int `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// List of import route targets. The structure of `importRt` block is documented below.
	ImportRts []EvpnImportRt `pulumi:"importRts"`
	// Enable/disable IP address local learning. Valid values: `enable`, `disable`.
	IpLocalLearning *string `pulumi:"ipLocalLearning"`
	// Route Distinguisher: AA|AA:NN|A.B.C.D:NN.
	Rd *string `pulumi:"rd"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Evpn resource.
type EvpnArgs struct {
	// Enable/disable ARP suppression. Valid values: `enable`, `disable`.
	ArpSuppression pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// List of export route targets. The structure of `exportRt` block is documented below.
	ExportRts EvpnExportRtArrayInput
	// ID.
	Fosid pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// List of import route targets. The structure of `importRt` block is documented below.
	ImportRts EvpnImportRtArrayInput
	// Enable/disable IP address local learning. Valid values: `enable`, `disable`.
	IpLocalLearning pulumi.StringPtrInput
	// Route Distinguisher: AA|AA:NN|A.B.C.D:NN.
	Rd pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (EvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*evpnArgs)(nil)).Elem()
}

type EvpnInput interface {
	pulumi.Input

	ToEvpnOutput() EvpnOutput
	ToEvpnOutputWithContext(ctx context.Context) EvpnOutput
}

func (*Evpn) ElementType() reflect.Type {
	return reflect.TypeOf((**Evpn)(nil)).Elem()
}

func (i *Evpn) ToEvpnOutput() EvpnOutput {
	return i.ToEvpnOutputWithContext(context.Background())
}

func (i *Evpn) ToEvpnOutputWithContext(ctx context.Context) EvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvpnOutput)
}

// EvpnArrayInput is an input type that accepts EvpnArray and EvpnArrayOutput values.
// You can construct a concrete instance of `EvpnArrayInput` via:
//
//	EvpnArray{ EvpnArgs{...} }
type EvpnArrayInput interface {
	pulumi.Input

	ToEvpnArrayOutput() EvpnArrayOutput
	ToEvpnArrayOutputWithContext(context.Context) EvpnArrayOutput
}

type EvpnArray []EvpnInput

func (EvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Evpn)(nil)).Elem()
}

func (i EvpnArray) ToEvpnArrayOutput() EvpnArrayOutput {
	return i.ToEvpnArrayOutputWithContext(context.Background())
}

func (i EvpnArray) ToEvpnArrayOutputWithContext(ctx context.Context) EvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvpnArrayOutput)
}

// EvpnMapInput is an input type that accepts EvpnMap and EvpnMapOutput values.
// You can construct a concrete instance of `EvpnMapInput` via:
//
//	EvpnMap{ "key": EvpnArgs{...} }
type EvpnMapInput interface {
	pulumi.Input

	ToEvpnMapOutput() EvpnMapOutput
	ToEvpnMapOutputWithContext(context.Context) EvpnMapOutput
}

type EvpnMap map[string]EvpnInput

func (EvpnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Evpn)(nil)).Elem()
}

func (i EvpnMap) ToEvpnMapOutput() EvpnMapOutput {
	return i.ToEvpnMapOutputWithContext(context.Background())
}

func (i EvpnMap) ToEvpnMapOutputWithContext(ctx context.Context) EvpnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvpnMapOutput)
}

type EvpnOutput struct{ *pulumi.OutputState }

func (EvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Evpn)(nil)).Elem()
}

func (o EvpnOutput) ToEvpnOutput() EvpnOutput {
	return o
}

func (o EvpnOutput) ToEvpnOutputWithContext(ctx context.Context) EvpnOutput {
	return o
}

// Enable/disable ARP suppression. Valid values: `enable`, `disable`.
func (o EvpnOutput) ArpSuppression() pulumi.StringOutput {
	return o.ApplyT(func(v *Evpn) pulumi.StringOutput { return v.ArpSuppression }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o EvpnOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// List of export route targets. The structure of `exportRt` block is documented below.
func (o EvpnOutput) ExportRts() EvpnExportRtArrayOutput {
	return o.ApplyT(func(v *Evpn) EvpnExportRtArrayOutput { return v.ExportRts }).(EvpnExportRtArrayOutput)
}

// ID.
func (o EvpnOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *Evpn) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o EvpnOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// List of import route targets. The structure of `importRt` block is documented below.
func (o EvpnOutput) ImportRts() EvpnImportRtArrayOutput {
	return o.ApplyT(func(v *Evpn) EvpnImportRtArrayOutput { return v.ImportRts }).(EvpnImportRtArrayOutput)
}

// Enable/disable IP address local learning. Valid values: `enable`, `disable`.
func (o EvpnOutput) IpLocalLearning() pulumi.StringOutput {
	return o.ApplyT(func(v *Evpn) pulumi.StringOutput { return v.IpLocalLearning }).(pulumi.StringOutput)
}

// Route Distinguisher: AA|AA:NN|A.B.C.D:NN.
func (o EvpnOutput) Rd() pulumi.StringOutput {
	return o.ApplyT(func(v *Evpn) pulumi.StringOutput { return v.Rd }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o EvpnOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type EvpnArrayOutput struct{ *pulumi.OutputState }

func (EvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Evpn)(nil)).Elem()
}

func (o EvpnArrayOutput) ToEvpnArrayOutput() EvpnArrayOutput {
	return o
}

func (o EvpnArrayOutput) ToEvpnArrayOutputWithContext(ctx context.Context) EvpnArrayOutput {
	return o
}

func (o EvpnArrayOutput) Index(i pulumi.IntInput) EvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Evpn {
		return vs[0].([]*Evpn)[vs[1].(int)]
	}).(EvpnOutput)
}

type EvpnMapOutput struct{ *pulumi.OutputState }

func (EvpnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Evpn)(nil)).Elem()
}

func (o EvpnMapOutput) ToEvpnMapOutput() EvpnMapOutput {
	return o
}

func (o EvpnMapOutput) ToEvpnMapOutputWithContext(ctx context.Context) EvpnMapOutput {
	return o
}

func (o EvpnMapOutput) MapIndex(k pulumi.StringInput) EvpnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Evpn {
		return vs[0].(map[string]*Evpn)[vs[1].(string)]
	}).(EvpnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EvpnInput)(nil)).Elem(), &Evpn{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvpnArrayInput)(nil)).Elem(), EvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvpnMapInput)(nil)).Elem(), EvpnMap{})
	pulumi.RegisterOutputType(EvpnOutput{})
	pulumi.RegisterOutputType(EvpnArrayOutput{})
	pulumi.RegisterOutputType(EvpnMapOutput{})
}
