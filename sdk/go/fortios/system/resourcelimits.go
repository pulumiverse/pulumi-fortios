// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure resource limits.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewResourcelimits(ctx, "trname", &system.ResourcelimitsArgs{
//				CustomService:        pulumi.Int(0),
//				DialupTunnel:         pulumi.Int(0),
//				FirewallAddress:      pulumi.Int(41024),
//				FirewallAddrgrp:      pulumi.Int(10692),
//				FirewallPolicy:       pulumi.Int(41024),
//				IpsecPhase1:          pulumi.Int(2000),
//				IpsecPhase1Interface: pulumi.Int(0),
//				IpsecPhase2:          pulumi.Int(2000),
//				IpsecPhase2Interface: pulumi.Int(0),
//				LogDiskQuota:         pulumi.Int(30235),
//				OnetimeSchedule:      pulumi.Int(0),
//				Proxy:                pulumi.Int(64000),
//				RecurringSchedule:    pulumi.Int(0),
//				ServiceGroup:         pulumi.Int(0),
//				Session:              pulumi.Int(0),
//				Sslvpn:               pulumi.Int(0),
//				User:                 pulumi.Int(0),
//				UserGroup:            pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System ResourceLimits can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/resourcelimits:Resourcelimits labelname SystemResourceLimits
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/resourcelimits:Resourcelimits labelname SystemResourceLimits
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Resourcelimits struct {
	pulumi.CustomResourceState

	// Maximum number of firewall custom services.
	CustomService pulumi.IntOutput `pulumi:"customService"`
	// Maximum number of dial-up tunnels.
	DialupTunnel pulumi.IntOutput `pulumi:"dialupTunnel"`
	// Maximum number of firewall addresses (IPv4, IPv6, multicast).
	FirewallAddress pulumi.IntOutput `pulumi:"firewallAddress"`
	// Maximum number of firewall address groups (IPv4, IPv6).
	FirewallAddrgrp pulumi.IntOutput `pulumi:"firewallAddrgrp"`
	// Maximum number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
	FirewallPolicy pulumi.IntOutput `pulumi:"firewallPolicy"`
	// Maximum number of VPN IPsec phase1 tunnels.
	IpsecPhase1 pulumi.IntOutput `pulumi:"ipsecPhase1"`
	// Maximum number of VPN IPsec phase1 interface tunnels.
	IpsecPhase1Interface pulumi.IntOutput `pulumi:"ipsecPhase1Interface"`
	// Maximum number of VPN IPsec phase2 tunnels.
	IpsecPhase2 pulumi.IntOutput `pulumi:"ipsecPhase2"`
	// Maximum number of VPN IPsec phase2 interface tunnels.
	IpsecPhase2Interface pulumi.IntOutput `pulumi:"ipsecPhase2Interface"`
	// Log disk quota in megabytes (MB).
	LogDiskQuota pulumi.IntOutput `pulumi:"logDiskQuota"`
	// Maximum number of firewall one-time schedules.
	OnetimeSchedule pulumi.IntOutput `pulumi:"onetimeSchedule"`
	// Maximum number of concurrent proxy users.
	Proxy pulumi.IntOutput `pulumi:"proxy"`
	// Maximum number of firewall recurring schedules.
	RecurringSchedule pulumi.IntOutput `pulumi:"recurringSchedule"`
	// Maximum number of firewall service groups.
	ServiceGroup pulumi.IntOutput `pulumi:"serviceGroup"`
	// Maximum number of sessions.
	Session pulumi.IntOutput `pulumi:"session"`
	// Maximum number of SSL-VPN.
	Sslvpn pulumi.IntOutput `pulumi:"sslvpn"`
	// Maximum number of local users.
	User pulumi.IntOutput `pulumi:"user"`
	// Maximum number of user groups.
	UserGroup pulumi.IntOutput `pulumi:"userGroup"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewResourcelimits registers a new resource with the given unique name, arguments, and options.
func NewResourcelimits(ctx *pulumi.Context,
	name string, args *ResourcelimitsArgs, opts ...pulumi.ResourceOption) (*Resourcelimits, error) {
	if args == nil {
		args = &ResourcelimitsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Resourcelimits
	err := ctx.RegisterResource("fortios:system/resourcelimits:Resourcelimits", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourcelimits gets an existing Resourcelimits resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourcelimits(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourcelimitsState, opts ...pulumi.ResourceOption) (*Resourcelimits, error) {
	var resource Resourcelimits
	err := ctx.ReadResource("fortios:system/resourcelimits:Resourcelimits", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Resourcelimits resources.
type resourcelimitsState struct {
	// Maximum number of firewall custom services.
	CustomService *int `pulumi:"customService"`
	// Maximum number of dial-up tunnels.
	DialupTunnel *int `pulumi:"dialupTunnel"`
	// Maximum number of firewall addresses (IPv4, IPv6, multicast).
	FirewallAddress *int `pulumi:"firewallAddress"`
	// Maximum number of firewall address groups (IPv4, IPv6).
	FirewallAddrgrp *int `pulumi:"firewallAddrgrp"`
	// Maximum number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
	FirewallPolicy *int `pulumi:"firewallPolicy"`
	// Maximum number of VPN IPsec phase1 tunnels.
	IpsecPhase1 *int `pulumi:"ipsecPhase1"`
	// Maximum number of VPN IPsec phase1 interface tunnels.
	IpsecPhase1Interface *int `pulumi:"ipsecPhase1Interface"`
	// Maximum number of VPN IPsec phase2 tunnels.
	IpsecPhase2 *int `pulumi:"ipsecPhase2"`
	// Maximum number of VPN IPsec phase2 interface tunnels.
	IpsecPhase2Interface *int `pulumi:"ipsecPhase2Interface"`
	// Log disk quota in megabytes (MB).
	LogDiskQuota *int `pulumi:"logDiskQuota"`
	// Maximum number of firewall one-time schedules.
	OnetimeSchedule *int `pulumi:"onetimeSchedule"`
	// Maximum number of concurrent proxy users.
	Proxy *int `pulumi:"proxy"`
	// Maximum number of firewall recurring schedules.
	RecurringSchedule *int `pulumi:"recurringSchedule"`
	// Maximum number of firewall service groups.
	ServiceGroup *int `pulumi:"serviceGroup"`
	// Maximum number of sessions.
	Session *int `pulumi:"session"`
	// Maximum number of SSL-VPN.
	Sslvpn *int `pulumi:"sslvpn"`
	// Maximum number of local users.
	User *int `pulumi:"user"`
	// Maximum number of user groups.
	UserGroup *int `pulumi:"userGroup"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ResourcelimitsState struct {
	// Maximum number of firewall custom services.
	CustomService pulumi.IntPtrInput
	// Maximum number of dial-up tunnels.
	DialupTunnel pulumi.IntPtrInput
	// Maximum number of firewall addresses (IPv4, IPv6, multicast).
	FirewallAddress pulumi.IntPtrInput
	// Maximum number of firewall address groups (IPv4, IPv6).
	FirewallAddrgrp pulumi.IntPtrInput
	// Maximum number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
	FirewallPolicy pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase1 tunnels.
	IpsecPhase1 pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase1 interface tunnels.
	IpsecPhase1Interface pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase2 tunnels.
	IpsecPhase2 pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase2 interface tunnels.
	IpsecPhase2Interface pulumi.IntPtrInput
	// Log disk quota in megabytes (MB).
	LogDiskQuota pulumi.IntPtrInput
	// Maximum number of firewall one-time schedules.
	OnetimeSchedule pulumi.IntPtrInput
	// Maximum number of concurrent proxy users.
	Proxy pulumi.IntPtrInput
	// Maximum number of firewall recurring schedules.
	RecurringSchedule pulumi.IntPtrInput
	// Maximum number of firewall service groups.
	ServiceGroup pulumi.IntPtrInput
	// Maximum number of sessions.
	Session pulumi.IntPtrInput
	// Maximum number of SSL-VPN.
	Sslvpn pulumi.IntPtrInput
	// Maximum number of local users.
	User pulumi.IntPtrInput
	// Maximum number of user groups.
	UserGroup pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ResourcelimitsState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcelimitsState)(nil)).Elem()
}

type resourcelimitsArgs struct {
	// Maximum number of firewall custom services.
	CustomService *int `pulumi:"customService"`
	// Maximum number of dial-up tunnels.
	DialupTunnel *int `pulumi:"dialupTunnel"`
	// Maximum number of firewall addresses (IPv4, IPv6, multicast).
	FirewallAddress *int `pulumi:"firewallAddress"`
	// Maximum number of firewall address groups (IPv4, IPv6).
	FirewallAddrgrp *int `pulumi:"firewallAddrgrp"`
	// Maximum number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
	FirewallPolicy *int `pulumi:"firewallPolicy"`
	// Maximum number of VPN IPsec phase1 tunnels.
	IpsecPhase1 *int `pulumi:"ipsecPhase1"`
	// Maximum number of VPN IPsec phase1 interface tunnels.
	IpsecPhase1Interface *int `pulumi:"ipsecPhase1Interface"`
	// Maximum number of VPN IPsec phase2 tunnels.
	IpsecPhase2 *int `pulumi:"ipsecPhase2"`
	// Maximum number of VPN IPsec phase2 interface tunnels.
	IpsecPhase2Interface *int `pulumi:"ipsecPhase2Interface"`
	// Log disk quota in megabytes (MB).
	LogDiskQuota *int `pulumi:"logDiskQuota"`
	// Maximum number of firewall one-time schedules.
	OnetimeSchedule *int `pulumi:"onetimeSchedule"`
	// Maximum number of concurrent proxy users.
	Proxy *int `pulumi:"proxy"`
	// Maximum number of firewall recurring schedules.
	RecurringSchedule *int `pulumi:"recurringSchedule"`
	// Maximum number of firewall service groups.
	ServiceGroup *int `pulumi:"serviceGroup"`
	// Maximum number of sessions.
	Session *int `pulumi:"session"`
	// Maximum number of SSL-VPN.
	Sslvpn *int `pulumi:"sslvpn"`
	// Maximum number of local users.
	User *int `pulumi:"user"`
	// Maximum number of user groups.
	UserGroup *int `pulumi:"userGroup"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Resourcelimits resource.
type ResourcelimitsArgs struct {
	// Maximum number of firewall custom services.
	CustomService pulumi.IntPtrInput
	// Maximum number of dial-up tunnels.
	DialupTunnel pulumi.IntPtrInput
	// Maximum number of firewall addresses (IPv4, IPv6, multicast).
	FirewallAddress pulumi.IntPtrInput
	// Maximum number of firewall address groups (IPv4, IPv6).
	FirewallAddrgrp pulumi.IntPtrInput
	// Maximum number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
	FirewallPolicy pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase1 tunnels.
	IpsecPhase1 pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase1 interface tunnels.
	IpsecPhase1Interface pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase2 tunnels.
	IpsecPhase2 pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase2 interface tunnels.
	IpsecPhase2Interface pulumi.IntPtrInput
	// Log disk quota in megabytes (MB).
	LogDiskQuota pulumi.IntPtrInput
	// Maximum number of firewall one-time schedules.
	OnetimeSchedule pulumi.IntPtrInput
	// Maximum number of concurrent proxy users.
	Proxy pulumi.IntPtrInput
	// Maximum number of firewall recurring schedules.
	RecurringSchedule pulumi.IntPtrInput
	// Maximum number of firewall service groups.
	ServiceGroup pulumi.IntPtrInput
	// Maximum number of sessions.
	Session pulumi.IntPtrInput
	// Maximum number of SSL-VPN.
	Sslvpn pulumi.IntPtrInput
	// Maximum number of local users.
	User pulumi.IntPtrInput
	// Maximum number of user groups.
	UserGroup pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ResourcelimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcelimitsArgs)(nil)).Elem()
}

type ResourcelimitsInput interface {
	pulumi.Input

	ToResourcelimitsOutput() ResourcelimitsOutput
	ToResourcelimitsOutputWithContext(ctx context.Context) ResourcelimitsOutput
}

func (*Resourcelimits) ElementType() reflect.Type {
	return reflect.TypeOf((**Resourcelimits)(nil)).Elem()
}

func (i *Resourcelimits) ToResourcelimitsOutput() ResourcelimitsOutput {
	return i.ToResourcelimitsOutputWithContext(context.Background())
}

func (i *Resourcelimits) ToResourcelimitsOutputWithContext(ctx context.Context) ResourcelimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcelimitsOutput)
}

// ResourcelimitsArrayInput is an input type that accepts ResourcelimitsArray and ResourcelimitsArrayOutput values.
// You can construct a concrete instance of `ResourcelimitsArrayInput` via:
//
//	ResourcelimitsArray{ ResourcelimitsArgs{...} }
type ResourcelimitsArrayInput interface {
	pulumi.Input

	ToResourcelimitsArrayOutput() ResourcelimitsArrayOutput
	ToResourcelimitsArrayOutputWithContext(context.Context) ResourcelimitsArrayOutput
}

type ResourcelimitsArray []ResourcelimitsInput

func (ResourcelimitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Resourcelimits)(nil)).Elem()
}

func (i ResourcelimitsArray) ToResourcelimitsArrayOutput() ResourcelimitsArrayOutput {
	return i.ToResourcelimitsArrayOutputWithContext(context.Background())
}

func (i ResourcelimitsArray) ToResourcelimitsArrayOutputWithContext(ctx context.Context) ResourcelimitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcelimitsArrayOutput)
}

// ResourcelimitsMapInput is an input type that accepts ResourcelimitsMap and ResourcelimitsMapOutput values.
// You can construct a concrete instance of `ResourcelimitsMapInput` via:
//
//	ResourcelimitsMap{ "key": ResourcelimitsArgs{...} }
type ResourcelimitsMapInput interface {
	pulumi.Input

	ToResourcelimitsMapOutput() ResourcelimitsMapOutput
	ToResourcelimitsMapOutputWithContext(context.Context) ResourcelimitsMapOutput
}

type ResourcelimitsMap map[string]ResourcelimitsInput

func (ResourcelimitsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Resourcelimits)(nil)).Elem()
}

func (i ResourcelimitsMap) ToResourcelimitsMapOutput() ResourcelimitsMapOutput {
	return i.ToResourcelimitsMapOutputWithContext(context.Background())
}

func (i ResourcelimitsMap) ToResourcelimitsMapOutputWithContext(ctx context.Context) ResourcelimitsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcelimitsMapOutput)
}

type ResourcelimitsOutput struct{ *pulumi.OutputState }

func (ResourcelimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Resourcelimits)(nil)).Elem()
}

func (o ResourcelimitsOutput) ToResourcelimitsOutput() ResourcelimitsOutput {
	return o
}

func (o ResourcelimitsOutput) ToResourcelimitsOutputWithContext(ctx context.Context) ResourcelimitsOutput {
	return o
}

// Maximum number of firewall custom services.
func (o ResourcelimitsOutput) CustomService() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.CustomService }).(pulumi.IntOutput)
}

// Maximum number of dial-up tunnels.
func (o ResourcelimitsOutput) DialupTunnel() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.DialupTunnel }).(pulumi.IntOutput)
}

// Maximum number of firewall addresses (IPv4, IPv6, multicast).
func (o ResourcelimitsOutput) FirewallAddress() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.FirewallAddress }).(pulumi.IntOutput)
}

// Maximum number of firewall address groups (IPv4, IPv6).
func (o ResourcelimitsOutput) FirewallAddrgrp() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.FirewallAddrgrp }).(pulumi.IntOutput)
}

// Maximum number of firewall policies (policy, DoS-policy4, DoS-policy6, multicast).
func (o ResourcelimitsOutput) FirewallPolicy() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.FirewallPolicy }).(pulumi.IntOutput)
}

// Maximum number of VPN IPsec phase1 tunnels.
func (o ResourcelimitsOutput) IpsecPhase1() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.IpsecPhase1 }).(pulumi.IntOutput)
}

// Maximum number of VPN IPsec phase1 interface tunnels.
func (o ResourcelimitsOutput) IpsecPhase1Interface() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.IpsecPhase1Interface }).(pulumi.IntOutput)
}

// Maximum number of VPN IPsec phase2 tunnels.
func (o ResourcelimitsOutput) IpsecPhase2() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.IpsecPhase2 }).(pulumi.IntOutput)
}

// Maximum number of VPN IPsec phase2 interface tunnels.
func (o ResourcelimitsOutput) IpsecPhase2Interface() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.IpsecPhase2Interface }).(pulumi.IntOutput)
}

// Log disk quota in megabytes (MB).
func (o ResourcelimitsOutput) LogDiskQuota() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.LogDiskQuota }).(pulumi.IntOutput)
}

// Maximum number of firewall one-time schedules.
func (o ResourcelimitsOutput) OnetimeSchedule() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.OnetimeSchedule }).(pulumi.IntOutput)
}

// Maximum number of concurrent proxy users.
func (o ResourcelimitsOutput) Proxy() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.Proxy }).(pulumi.IntOutput)
}

// Maximum number of firewall recurring schedules.
func (o ResourcelimitsOutput) RecurringSchedule() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.RecurringSchedule }).(pulumi.IntOutput)
}

// Maximum number of firewall service groups.
func (o ResourcelimitsOutput) ServiceGroup() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.ServiceGroup }).(pulumi.IntOutput)
}

// Maximum number of sessions.
func (o ResourcelimitsOutput) Session() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.Session }).(pulumi.IntOutput)
}

// Maximum number of SSL-VPN.
func (o ResourcelimitsOutput) Sslvpn() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.Sslvpn }).(pulumi.IntOutput)
}

// Maximum number of local users.
func (o ResourcelimitsOutput) User() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.User }).(pulumi.IntOutput)
}

// Maximum number of user groups.
func (o ResourcelimitsOutput) UserGroup() pulumi.IntOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.IntOutput { return v.UserGroup }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ResourcelimitsOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Resourcelimits) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type ResourcelimitsArrayOutput struct{ *pulumi.OutputState }

func (ResourcelimitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Resourcelimits)(nil)).Elem()
}

func (o ResourcelimitsArrayOutput) ToResourcelimitsArrayOutput() ResourcelimitsArrayOutput {
	return o
}

func (o ResourcelimitsArrayOutput) ToResourcelimitsArrayOutputWithContext(ctx context.Context) ResourcelimitsArrayOutput {
	return o
}

func (o ResourcelimitsArrayOutput) Index(i pulumi.IntInput) ResourcelimitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Resourcelimits {
		return vs[0].([]*Resourcelimits)[vs[1].(int)]
	}).(ResourcelimitsOutput)
}

type ResourcelimitsMapOutput struct{ *pulumi.OutputState }

func (ResourcelimitsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Resourcelimits)(nil)).Elem()
}

func (o ResourcelimitsMapOutput) ToResourcelimitsMapOutput() ResourcelimitsMapOutput {
	return o
}

func (o ResourcelimitsMapOutput) ToResourcelimitsMapOutputWithContext(ctx context.Context) ResourcelimitsMapOutput {
	return o
}

func (o ResourcelimitsMapOutput) MapIndex(k pulumi.StringInput) ResourcelimitsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Resourcelimits {
		return vs[0].(map[string]*Resourcelimits)[vs[1].(string)]
	}).(ResourcelimitsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcelimitsInput)(nil)).Elem(), &Resourcelimits{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcelimitsArrayInput)(nil)).Elem(), ResourcelimitsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcelimitsMapInput)(nil)).Elem(), ResourcelimitsMap{})
	pulumi.RegisterOutputType(ResourcelimitsOutput{})
	pulumi.RegisterOutputType(ResourcelimitsArrayOutput{})
	pulumi.RegisterOutputType(ResourcelimitsMapOutput{})
}
