// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure speed test server list. Applies to FortiOS Version `>= 6.2.4`.
//
// ## Import
//
// System SpeedTestServer can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/speedtestserver:Speedtestserver labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/speedtestserver:Speedtestserver labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Speedtestserver struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Hosts of the server. The structure of `host` block is documented below.
	Hosts SpeedtestserverHostArrayOutput `pulumi:"hosts"`
	// Speed test server name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Speed test server timestamp.
	Timestamp pulumi.IntOutput `pulumi:"timestamp"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSpeedtestserver registers a new resource with the given unique name, arguments, and options.
func NewSpeedtestserver(ctx *pulumi.Context,
	name string, args *SpeedtestserverArgs, opts ...pulumi.ResourceOption) (*Speedtestserver, error) {
	if args == nil {
		args = &SpeedtestserverArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Speedtestserver
	err := ctx.RegisterResource("fortios:system/speedtestserver:Speedtestserver", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpeedtestserver gets an existing Speedtestserver resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpeedtestserver(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpeedtestserverState, opts ...pulumi.ResourceOption) (*Speedtestserver, error) {
	var resource Speedtestserver
	err := ctx.ReadResource("fortios:system/speedtestserver:Speedtestserver", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Speedtestserver resources.
type speedtestserverState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Hosts of the server. The structure of `host` block is documented below.
	Hosts []SpeedtestserverHost `pulumi:"hosts"`
	// Speed test server name.
	Name *string `pulumi:"name"`
	// Speed test server timestamp.
	Timestamp *int `pulumi:"timestamp"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SpeedtestserverState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Hosts of the server. The structure of `host` block is documented below.
	Hosts SpeedtestserverHostArrayInput
	// Speed test server name.
	Name pulumi.StringPtrInput
	// Speed test server timestamp.
	Timestamp pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SpeedtestserverState) ElementType() reflect.Type {
	return reflect.TypeOf((*speedtestserverState)(nil)).Elem()
}

type speedtestserverArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Hosts of the server. The structure of `host` block is documented below.
	Hosts []SpeedtestserverHost `pulumi:"hosts"`
	// Speed test server name.
	Name *string `pulumi:"name"`
	// Speed test server timestamp.
	Timestamp *int `pulumi:"timestamp"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Speedtestserver resource.
type SpeedtestserverArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Hosts of the server. The structure of `host` block is documented below.
	Hosts SpeedtestserverHostArrayInput
	// Speed test server name.
	Name pulumi.StringPtrInput
	// Speed test server timestamp.
	Timestamp pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SpeedtestserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*speedtestserverArgs)(nil)).Elem()
}

type SpeedtestserverInput interface {
	pulumi.Input

	ToSpeedtestserverOutput() SpeedtestserverOutput
	ToSpeedtestserverOutputWithContext(ctx context.Context) SpeedtestserverOutput
}

func (*Speedtestserver) ElementType() reflect.Type {
	return reflect.TypeOf((**Speedtestserver)(nil)).Elem()
}

func (i *Speedtestserver) ToSpeedtestserverOutput() SpeedtestserverOutput {
	return i.ToSpeedtestserverOutputWithContext(context.Background())
}

func (i *Speedtestserver) ToSpeedtestserverOutputWithContext(ctx context.Context) SpeedtestserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpeedtestserverOutput)
}

// SpeedtestserverArrayInput is an input type that accepts SpeedtestserverArray and SpeedtestserverArrayOutput values.
// You can construct a concrete instance of `SpeedtestserverArrayInput` via:
//
//	SpeedtestserverArray{ SpeedtestserverArgs{...} }
type SpeedtestserverArrayInput interface {
	pulumi.Input

	ToSpeedtestserverArrayOutput() SpeedtestserverArrayOutput
	ToSpeedtestserverArrayOutputWithContext(context.Context) SpeedtestserverArrayOutput
}

type SpeedtestserverArray []SpeedtestserverInput

func (SpeedtestserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Speedtestserver)(nil)).Elem()
}

func (i SpeedtestserverArray) ToSpeedtestserverArrayOutput() SpeedtestserverArrayOutput {
	return i.ToSpeedtestserverArrayOutputWithContext(context.Background())
}

func (i SpeedtestserverArray) ToSpeedtestserverArrayOutputWithContext(ctx context.Context) SpeedtestserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpeedtestserverArrayOutput)
}

// SpeedtestserverMapInput is an input type that accepts SpeedtestserverMap and SpeedtestserverMapOutput values.
// You can construct a concrete instance of `SpeedtestserverMapInput` via:
//
//	SpeedtestserverMap{ "key": SpeedtestserverArgs{...} }
type SpeedtestserverMapInput interface {
	pulumi.Input

	ToSpeedtestserverMapOutput() SpeedtestserverMapOutput
	ToSpeedtestserverMapOutputWithContext(context.Context) SpeedtestserverMapOutput
}

type SpeedtestserverMap map[string]SpeedtestserverInput

func (SpeedtestserverMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Speedtestserver)(nil)).Elem()
}

func (i SpeedtestserverMap) ToSpeedtestserverMapOutput() SpeedtestserverMapOutput {
	return i.ToSpeedtestserverMapOutputWithContext(context.Background())
}

func (i SpeedtestserverMap) ToSpeedtestserverMapOutputWithContext(ctx context.Context) SpeedtestserverMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpeedtestserverMapOutput)
}

type SpeedtestserverOutput struct{ *pulumi.OutputState }

func (SpeedtestserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Speedtestserver)(nil)).Elem()
}

func (o SpeedtestserverOutput) ToSpeedtestserverOutput() SpeedtestserverOutput {
	return o
}

func (o SpeedtestserverOutput) ToSpeedtestserverOutputWithContext(ctx context.Context) SpeedtestserverOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SpeedtestserverOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Speedtestserver) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o SpeedtestserverOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Speedtestserver) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Hosts of the server. The structure of `host` block is documented below.
func (o SpeedtestserverOutput) Hosts() SpeedtestserverHostArrayOutput {
	return o.ApplyT(func(v *Speedtestserver) SpeedtestserverHostArrayOutput { return v.Hosts }).(SpeedtestserverHostArrayOutput)
}

// Speed test server name.
func (o SpeedtestserverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Speedtestserver) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Speed test server timestamp.
func (o SpeedtestserverOutput) Timestamp() pulumi.IntOutput {
	return o.ApplyT(func(v *Speedtestserver) pulumi.IntOutput { return v.Timestamp }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SpeedtestserverOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Speedtestserver) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SpeedtestserverArrayOutput struct{ *pulumi.OutputState }

func (SpeedtestserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Speedtestserver)(nil)).Elem()
}

func (o SpeedtestserverArrayOutput) ToSpeedtestserverArrayOutput() SpeedtestserverArrayOutput {
	return o
}

func (o SpeedtestserverArrayOutput) ToSpeedtestserverArrayOutputWithContext(ctx context.Context) SpeedtestserverArrayOutput {
	return o
}

func (o SpeedtestserverArrayOutput) Index(i pulumi.IntInput) SpeedtestserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Speedtestserver {
		return vs[0].([]*Speedtestserver)[vs[1].(int)]
	}).(SpeedtestserverOutput)
}

type SpeedtestserverMapOutput struct{ *pulumi.OutputState }

func (SpeedtestserverMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Speedtestserver)(nil)).Elem()
}

func (o SpeedtestserverMapOutput) ToSpeedtestserverMapOutput() SpeedtestserverMapOutput {
	return o
}

func (o SpeedtestserverMapOutput) ToSpeedtestserverMapOutputWithContext(ctx context.Context) SpeedtestserverMapOutput {
	return o
}

func (o SpeedtestserverMapOutput) MapIndex(k pulumi.StringInput) SpeedtestserverOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Speedtestserver {
		return vs[0].(map[string]*Speedtestserver)[vs[1].(string)]
	}).(SpeedtestserverOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpeedtestserverInput)(nil)).Elem(), &Speedtestserver{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpeedtestserverArrayInput)(nil)).Elem(), SpeedtestserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpeedtestserverMapInput)(nil)).Elem(), SpeedtestserverMap{})
	pulumi.RegisterOutputType(SpeedtestserverOutput{})
	pulumi.RegisterOutputType(SpeedtestserverArrayOutput{})
	pulumi.RegisterOutputType(SpeedtestserverMapOutput{})
}
