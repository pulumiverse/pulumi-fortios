// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snmp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

var _ = internal.GetEnvOrDefault

type CommunityHost struct {
	// Enable/disable direct management of HA cluster members. Valid values: `enable`, `disable`.
	HaDirect *string `pulumi:"haDirect"`
	// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both. Valid values: `any`, `query`, `trap`.
	HostType *string `pulumi:"hostType"`
	// Host6 entry ID.
	Id *int `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip *string `pulumi:"ip"`
	// Source IPv4 address for SNMP traps.
	SourceIp *string `pulumi:"sourceIp"`
}

// CommunityHostInput is an input type that accepts CommunityHostArgs and CommunityHostOutput values.
// You can construct a concrete instance of `CommunityHostInput` via:
//
//	CommunityHostArgs{...}
type CommunityHostInput interface {
	pulumi.Input

	ToCommunityHostOutput() CommunityHostOutput
	ToCommunityHostOutputWithContext(context.Context) CommunityHostOutput
}

type CommunityHostArgs struct {
	// Enable/disable direct management of HA cluster members. Valid values: `enable`, `disable`.
	HaDirect pulumi.StringPtrInput `pulumi:"haDirect"`
	// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both. Valid values: `any`, `query`, `trap`.
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	// Host6 entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Source IPv4 address for SNMP traps.
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
}

func (CommunityHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityHost)(nil)).Elem()
}

func (i CommunityHostArgs) ToCommunityHostOutput() CommunityHostOutput {
	return i.ToCommunityHostOutputWithContext(context.Background())
}

func (i CommunityHostArgs) ToCommunityHostOutputWithContext(ctx context.Context) CommunityHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityHostOutput)
}

// CommunityHostArrayInput is an input type that accepts CommunityHostArray and CommunityHostArrayOutput values.
// You can construct a concrete instance of `CommunityHostArrayInput` via:
//
//	CommunityHostArray{ CommunityHostArgs{...} }
type CommunityHostArrayInput interface {
	pulumi.Input

	ToCommunityHostArrayOutput() CommunityHostArrayOutput
	ToCommunityHostArrayOutputWithContext(context.Context) CommunityHostArrayOutput
}

type CommunityHostArray []CommunityHostInput

func (CommunityHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityHost)(nil)).Elem()
}

func (i CommunityHostArray) ToCommunityHostArrayOutput() CommunityHostArrayOutput {
	return i.ToCommunityHostArrayOutputWithContext(context.Background())
}

func (i CommunityHostArray) ToCommunityHostArrayOutputWithContext(ctx context.Context) CommunityHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityHostArrayOutput)
}

type CommunityHostOutput struct{ *pulumi.OutputState }

func (CommunityHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityHost)(nil)).Elem()
}

func (o CommunityHostOutput) ToCommunityHostOutput() CommunityHostOutput {
	return o
}

func (o CommunityHostOutput) ToCommunityHostOutputWithContext(ctx context.Context) CommunityHostOutput {
	return o
}

// Enable/disable direct management of HA cluster members. Valid values: `enable`, `disable`.
func (o CommunityHostOutput) HaDirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityHost) *string { return v.HaDirect }).(pulumi.StringPtrOutput)
}

// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both. Valid values: `any`, `query`, `trap`.
func (o CommunityHostOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityHost) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// Host6 entry ID.
func (o CommunityHostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CommunityHost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 address of the SNMP manager (host).
func (o CommunityHostOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityHost) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Source IPv4 address for SNMP traps.
func (o CommunityHostOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityHost) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

type CommunityHostArrayOutput struct{ *pulumi.OutputState }

func (CommunityHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityHost)(nil)).Elem()
}

func (o CommunityHostArrayOutput) ToCommunityHostArrayOutput() CommunityHostArrayOutput {
	return o
}

func (o CommunityHostArrayOutput) ToCommunityHostArrayOutputWithContext(ctx context.Context) CommunityHostArrayOutput {
	return o
}

func (o CommunityHostArrayOutput) Index(i pulumi.IntInput) CommunityHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommunityHost {
		return vs[0].([]CommunityHost)[vs[1].(int)]
	}).(CommunityHostOutput)
}

type CommunityHosts6 struct {
	HaDirect *string `pulumi:"haDirect"`
	HostType *string `pulumi:"hostType"`
	// an identifier for the resource with format {{fosid}}.
	Id         *int    `pulumi:"id"`
	Ipv6       *string `pulumi:"ipv6"`
	SourceIpv6 *string `pulumi:"sourceIpv6"`
}

// CommunityHosts6Input is an input type that accepts CommunityHosts6Args and CommunityHosts6Output values.
// You can construct a concrete instance of `CommunityHosts6Input` via:
//
//	CommunityHosts6Args{...}
type CommunityHosts6Input interface {
	pulumi.Input

	ToCommunityHosts6Output() CommunityHosts6Output
	ToCommunityHosts6OutputWithContext(context.Context) CommunityHosts6Output
}

type CommunityHosts6Args struct {
	HaDirect pulumi.StringPtrInput `pulumi:"haDirect"`
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	// an identifier for the resource with format {{fosid}}.
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Ipv6       pulumi.StringPtrInput `pulumi:"ipv6"`
	SourceIpv6 pulumi.StringPtrInput `pulumi:"sourceIpv6"`
}

func (CommunityHosts6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityHosts6)(nil)).Elem()
}

func (i CommunityHosts6Args) ToCommunityHosts6Output() CommunityHosts6Output {
	return i.ToCommunityHosts6OutputWithContext(context.Background())
}

func (i CommunityHosts6Args) ToCommunityHosts6OutputWithContext(ctx context.Context) CommunityHosts6Output {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityHosts6Output)
}

// CommunityHosts6ArrayInput is an input type that accepts CommunityHosts6Array and CommunityHosts6ArrayOutput values.
// You can construct a concrete instance of `CommunityHosts6ArrayInput` via:
//
//	CommunityHosts6Array{ CommunityHosts6Args{...} }
type CommunityHosts6ArrayInput interface {
	pulumi.Input

	ToCommunityHosts6ArrayOutput() CommunityHosts6ArrayOutput
	ToCommunityHosts6ArrayOutputWithContext(context.Context) CommunityHosts6ArrayOutput
}

type CommunityHosts6Array []CommunityHosts6Input

func (CommunityHosts6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityHosts6)(nil)).Elem()
}

func (i CommunityHosts6Array) ToCommunityHosts6ArrayOutput() CommunityHosts6ArrayOutput {
	return i.ToCommunityHosts6ArrayOutputWithContext(context.Background())
}

func (i CommunityHosts6Array) ToCommunityHosts6ArrayOutputWithContext(ctx context.Context) CommunityHosts6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityHosts6ArrayOutput)
}

type CommunityHosts6Output struct{ *pulumi.OutputState }

func (CommunityHosts6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityHosts6)(nil)).Elem()
}

func (o CommunityHosts6Output) ToCommunityHosts6Output() CommunityHosts6Output {
	return o
}

func (o CommunityHosts6Output) ToCommunityHosts6OutputWithContext(ctx context.Context) CommunityHosts6Output {
	return o
}

func (o CommunityHosts6Output) HaDirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityHosts6) *string { return v.HaDirect }).(pulumi.StringPtrOutput)
}

func (o CommunityHosts6Output) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityHosts6) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// an identifier for the resource with format {{fosid}}.
func (o CommunityHosts6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CommunityHosts6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o CommunityHosts6Output) Ipv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityHosts6) *string { return v.Ipv6 }).(pulumi.StringPtrOutput)
}

func (o CommunityHosts6Output) SourceIpv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityHosts6) *string { return v.SourceIpv6 }).(pulumi.StringPtrOutput)
}

type CommunityHosts6ArrayOutput struct{ *pulumi.OutputState }

func (CommunityHosts6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityHosts6)(nil)).Elem()
}

func (o CommunityHosts6ArrayOutput) ToCommunityHosts6ArrayOutput() CommunityHosts6ArrayOutput {
	return o
}

func (o CommunityHosts6ArrayOutput) ToCommunityHosts6ArrayOutputWithContext(ctx context.Context) CommunityHosts6ArrayOutput {
	return o
}

func (o CommunityHosts6ArrayOutput) Index(i pulumi.IntInput) CommunityHosts6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommunityHosts6 {
		return vs[0].([]CommunityHosts6)[vs[1].(int)]
	}).(CommunityHosts6Output)
}

type CommunityVdom struct {
	// VDOM name
	Name *string `pulumi:"name"`
}

// CommunityVdomInput is an input type that accepts CommunityVdomArgs and CommunityVdomOutput values.
// You can construct a concrete instance of `CommunityVdomInput` via:
//
//	CommunityVdomArgs{...}
type CommunityVdomInput interface {
	pulumi.Input

	ToCommunityVdomOutput() CommunityVdomOutput
	ToCommunityVdomOutputWithContext(context.Context) CommunityVdomOutput
}

type CommunityVdomArgs struct {
	// VDOM name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CommunityVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityVdom)(nil)).Elem()
}

func (i CommunityVdomArgs) ToCommunityVdomOutput() CommunityVdomOutput {
	return i.ToCommunityVdomOutputWithContext(context.Background())
}

func (i CommunityVdomArgs) ToCommunityVdomOutputWithContext(ctx context.Context) CommunityVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityVdomOutput)
}

// CommunityVdomArrayInput is an input type that accepts CommunityVdomArray and CommunityVdomArrayOutput values.
// You can construct a concrete instance of `CommunityVdomArrayInput` via:
//
//	CommunityVdomArray{ CommunityVdomArgs{...} }
type CommunityVdomArrayInput interface {
	pulumi.Input

	ToCommunityVdomArrayOutput() CommunityVdomArrayOutput
	ToCommunityVdomArrayOutputWithContext(context.Context) CommunityVdomArrayOutput
}

type CommunityVdomArray []CommunityVdomInput

func (CommunityVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityVdom)(nil)).Elem()
}

func (i CommunityVdomArray) ToCommunityVdomArrayOutput() CommunityVdomArrayOutput {
	return i.ToCommunityVdomArrayOutputWithContext(context.Background())
}

func (i CommunityVdomArray) ToCommunityVdomArrayOutputWithContext(ctx context.Context) CommunityVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityVdomArrayOutput)
}

type CommunityVdomOutput struct{ *pulumi.OutputState }

func (CommunityVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityVdom)(nil)).Elem()
}

func (o CommunityVdomOutput) ToCommunityVdomOutput() CommunityVdomOutput {
	return o
}

func (o CommunityVdomOutput) ToCommunityVdomOutputWithContext(ctx context.Context) CommunityVdomOutput {
	return o
}

// VDOM name
func (o CommunityVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CommunityVdomArrayOutput struct{ *pulumi.OutputState }

func (CommunityVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityVdom)(nil)).Elem()
}

func (o CommunityVdomArrayOutput) ToCommunityVdomArrayOutput() CommunityVdomArrayOutput {
	return o
}

func (o CommunityVdomArrayOutput) ToCommunityVdomArrayOutputWithContext(ctx context.Context) CommunityVdomArrayOutput {
	return o
}

func (o CommunityVdomArrayOutput) Index(i pulumi.IntInput) CommunityVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommunityVdom {
		return vs[0].([]CommunityVdom)[vs[1].(int)]
	}).(CommunityVdomOutput)
}

type UserVdom struct {
	// VDOM name
	Name *string `pulumi:"name"`
}

// UserVdomInput is an input type that accepts UserVdomArgs and UserVdomOutput values.
// You can construct a concrete instance of `UserVdomInput` via:
//
//	UserVdomArgs{...}
type UserVdomInput interface {
	pulumi.Input

	ToUserVdomOutput() UserVdomOutput
	ToUserVdomOutputWithContext(context.Context) UserVdomOutput
}

type UserVdomArgs struct {
	// VDOM name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserVdom)(nil)).Elem()
}

func (i UserVdomArgs) ToUserVdomOutput() UserVdomOutput {
	return i.ToUserVdomOutputWithContext(context.Background())
}

func (i UserVdomArgs) ToUserVdomOutputWithContext(ctx context.Context) UserVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserVdomOutput)
}

// UserVdomArrayInput is an input type that accepts UserVdomArray and UserVdomArrayOutput values.
// You can construct a concrete instance of `UserVdomArrayInput` via:
//
//	UserVdomArray{ UserVdomArgs{...} }
type UserVdomArrayInput interface {
	pulumi.Input

	ToUserVdomArrayOutput() UserVdomArrayOutput
	ToUserVdomArrayOutputWithContext(context.Context) UserVdomArrayOutput
}

type UserVdomArray []UserVdomInput

func (UserVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserVdom)(nil)).Elem()
}

func (i UserVdomArray) ToUserVdomArrayOutput() UserVdomArrayOutput {
	return i.ToUserVdomArrayOutputWithContext(context.Background())
}

func (i UserVdomArray) ToUserVdomArrayOutputWithContext(ctx context.Context) UserVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserVdomArrayOutput)
}

type UserVdomOutput struct{ *pulumi.OutputState }

func (UserVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserVdom)(nil)).Elem()
}

func (o UserVdomOutput) ToUserVdomOutput() UserVdomOutput {
	return o
}

func (o UserVdomOutput) ToUserVdomOutputWithContext(ctx context.Context) UserVdomOutput {
	return o
}

// VDOM name
func (o UserVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserVdomArrayOutput struct{ *pulumi.OutputState }

func (UserVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserVdom)(nil)).Elem()
}

func (o UserVdomArrayOutput) ToUserVdomArrayOutput() UserVdomArrayOutput {
	return o
}

func (o UserVdomArrayOutput) ToUserVdomArrayOutputWithContext(ctx context.Context) UserVdomArrayOutput {
	return o
}

func (o UserVdomArrayOutput) Index(i pulumi.IntInput) UserVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserVdom {
		return vs[0].([]UserVdom)[vs[1].(int)]
	}).(UserVdomOutput)
}

type GetCommunityHost struct {
	// Enable/disable direct management of HA cluster members.
	HaDirect string `pulumi:"haDirect"`
	// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both.
	HostType string `pulumi:"hostType"`
	// Host6 entry ID.
	Id int `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip string `pulumi:"ip"`
	// Source IPv4 address for SNMP traps.
	SourceIp string `pulumi:"sourceIp"`
}

// GetCommunityHostInput is an input type that accepts GetCommunityHostArgs and GetCommunityHostOutput values.
// You can construct a concrete instance of `GetCommunityHostInput` via:
//
//	GetCommunityHostArgs{...}
type GetCommunityHostInput interface {
	pulumi.Input

	ToGetCommunityHostOutput() GetCommunityHostOutput
	ToGetCommunityHostOutputWithContext(context.Context) GetCommunityHostOutput
}

type GetCommunityHostArgs struct {
	// Enable/disable direct management of HA cluster members.
	HaDirect pulumi.StringInput `pulumi:"haDirect"`
	// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both.
	HostType pulumi.StringInput `pulumi:"hostType"`
	// Host6 entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip pulumi.StringInput `pulumi:"ip"`
	// Source IPv4 address for SNMP traps.
	SourceIp pulumi.StringInput `pulumi:"sourceIp"`
}

func (GetCommunityHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommunityHost)(nil)).Elem()
}

func (i GetCommunityHostArgs) ToGetCommunityHostOutput() GetCommunityHostOutput {
	return i.ToGetCommunityHostOutputWithContext(context.Background())
}

func (i GetCommunityHostArgs) ToGetCommunityHostOutputWithContext(ctx context.Context) GetCommunityHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommunityHostOutput)
}

// GetCommunityHostArrayInput is an input type that accepts GetCommunityHostArray and GetCommunityHostArrayOutput values.
// You can construct a concrete instance of `GetCommunityHostArrayInput` via:
//
//	GetCommunityHostArray{ GetCommunityHostArgs{...} }
type GetCommunityHostArrayInput interface {
	pulumi.Input

	ToGetCommunityHostArrayOutput() GetCommunityHostArrayOutput
	ToGetCommunityHostArrayOutputWithContext(context.Context) GetCommunityHostArrayOutput
}

type GetCommunityHostArray []GetCommunityHostInput

func (GetCommunityHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommunityHost)(nil)).Elem()
}

func (i GetCommunityHostArray) ToGetCommunityHostArrayOutput() GetCommunityHostArrayOutput {
	return i.ToGetCommunityHostArrayOutputWithContext(context.Background())
}

func (i GetCommunityHostArray) ToGetCommunityHostArrayOutputWithContext(ctx context.Context) GetCommunityHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommunityHostArrayOutput)
}

type GetCommunityHostOutput struct{ *pulumi.OutputState }

func (GetCommunityHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommunityHost)(nil)).Elem()
}

func (o GetCommunityHostOutput) ToGetCommunityHostOutput() GetCommunityHostOutput {
	return o
}

func (o GetCommunityHostOutput) ToGetCommunityHostOutputWithContext(ctx context.Context) GetCommunityHostOutput {
	return o
}

// Enable/disable direct management of HA cluster members.
func (o GetCommunityHostOutput) HaDirect() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunityHost) string { return v.HaDirect }).(pulumi.StringOutput)
}

// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both.
func (o GetCommunityHostOutput) HostType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunityHost) string { return v.HostType }).(pulumi.StringOutput)
}

// Host6 entry ID.
func (o GetCommunityHostOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetCommunityHost) int { return v.Id }).(pulumi.IntOutput)
}

// IPv4 address of the SNMP manager (host).
func (o GetCommunityHostOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunityHost) string { return v.Ip }).(pulumi.StringOutput)
}

// Source IPv4 address for SNMP traps.
func (o GetCommunityHostOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunityHost) string { return v.SourceIp }).(pulumi.StringOutput)
}

type GetCommunityHostArrayOutput struct{ *pulumi.OutputState }

func (GetCommunityHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommunityHost)(nil)).Elem()
}

func (o GetCommunityHostArrayOutput) ToGetCommunityHostArrayOutput() GetCommunityHostArrayOutput {
	return o
}

func (o GetCommunityHostArrayOutput) ToGetCommunityHostArrayOutputWithContext(ctx context.Context) GetCommunityHostArrayOutput {
	return o
}

func (o GetCommunityHostArrayOutput) Index(i pulumi.IntInput) GetCommunityHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommunityHost {
		return vs[0].([]GetCommunityHost)[vs[1].(int)]
	}).(GetCommunityHostOutput)
}

type GetCommunityHosts6 struct {
	// Enable/disable direct management of HA cluster members.
	HaDirect string `pulumi:"haDirect"`
	// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both.
	HostType string `pulumi:"hostType"`
	// Host6 entry ID.
	Id int `pulumi:"id"`
	// SNMP manager IPv6 address prefix.
	Ipv6 string `pulumi:"ipv6"`
	// Source IPv6 address for SNMP traps.
	SourceIpv6 string `pulumi:"sourceIpv6"`
}

// GetCommunityHosts6Input is an input type that accepts GetCommunityHosts6Args and GetCommunityHosts6Output values.
// You can construct a concrete instance of `GetCommunityHosts6Input` via:
//
//	GetCommunityHosts6Args{...}
type GetCommunityHosts6Input interface {
	pulumi.Input

	ToGetCommunityHosts6Output() GetCommunityHosts6Output
	ToGetCommunityHosts6OutputWithContext(context.Context) GetCommunityHosts6Output
}

type GetCommunityHosts6Args struct {
	// Enable/disable direct management of HA cluster members.
	HaDirect pulumi.StringInput `pulumi:"haDirect"`
	// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both.
	HostType pulumi.StringInput `pulumi:"hostType"`
	// Host6 entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// SNMP manager IPv6 address prefix.
	Ipv6 pulumi.StringInput `pulumi:"ipv6"`
	// Source IPv6 address for SNMP traps.
	SourceIpv6 pulumi.StringInput `pulumi:"sourceIpv6"`
}

func (GetCommunityHosts6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommunityHosts6)(nil)).Elem()
}

func (i GetCommunityHosts6Args) ToGetCommunityHosts6Output() GetCommunityHosts6Output {
	return i.ToGetCommunityHosts6OutputWithContext(context.Background())
}

func (i GetCommunityHosts6Args) ToGetCommunityHosts6OutputWithContext(ctx context.Context) GetCommunityHosts6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommunityHosts6Output)
}

// GetCommunityHosts6ArrayInput is an input type that accepts GetCommunityHosts6Array and GetCommunityHosts6ArrayOutput values.
// You can construct a concrete instance of `GetCommunityHosts6ArrayInput` via:
//
//	GetCommunityHosts6Array{ GetCommunityHosts6Args{...} }
type GetCommunityHosts6ArrayInput interface {
	pulumi.Input

	ToGetCommunityHosts6ArrayOutput() GetCommunityHosts6ArrayOutput
	ToGetCommunityHosts6ArrayOutputWithContext(context.Context) GetCommunityHosts6ArrayOutput
}

type GetCommunityHosts6Array []GetCommunityHosts6Input

func (GetCommunityHosts6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommunityHosts6)(nil)).Elem()
}

func (i GetCommunityHosts6Array) ToGetCommunityHosts6ArrayOutput() GetCommunityHosts6ArrayOutput {
	return i.ToGetCommunityHosts6ArrayOutputWithContext(context.Background())
}

func (i GetCommunityHosts6Array) ToGetCommunityHosts6ArrayOutputWithContext(ctx context.Context) GetCommunityHosts6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommunityHosts6ArrayOutput)
}

type GetCommunityHosts6Output struct{ *pulumi.OutputState }

func (GetCommunityHosts6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommunityHosts6)(nil)).Elem()
}

func (o GetCommunityHosts6Output) ToGetCommunityHosts6Output() GetCommunityHosts6Output {
	return o
}

func (o GetCommunityHosts6Output) ToGetCommunityHosts6OutputWithContext(ctx context.Context) GetCommunityHosts6Output {
	return o
}

// Enable/disable direct management of HA cluster members.
func (o GetCommunityHosts6Output) HaDirect() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunityHosts6) string { return v.HaDirect }).(pulumi.StringOutput)
}

// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both.
func (o GetCommunityHosts6Output) HostType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunityHosts6) string { return v.HostType }).(pulumi.StringOutput)
}

// Host6 entry ID.
func (o GetCommunityHosts6Output) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetCommunityHosts6) int { return v.Id }).(pulumi.IntOutput)
}

// SNMP manager IPv6 address prefix.
func (o GetCommunityHosts6Output) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunityHosts6) string { return v.Ipv6 }).(pulumi.StringOutput)
}

// Source IPv6 address for SNMP traps.
func (o GetCommunityHosts6Output) SourceIpv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunityHosts6) string { return v.SourceIpv6 }).(pulumi.StringOutput)
}

type GetCommunityHosts6ArrayOutput struct{ *pulumi.OutputState }

func (GetCommunityHosts6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommunityHosts6)(nil)).Elem()
}

func (o GetCommunityHosts6ArrayOutput) ToGetCommunityHosts6ArrayOutput() GetCommunityHosts6ArrayOutput {
	return o
}

func (o GetCommunityHosts6ArrayOutput) ToGetCommunityHosts6ArrayOutputWithContext(ctx context.Context) GetCommunityHosts6ArrayOutput {
	return o
}

func (o GetCommunityHosts6ArrayOutput) Index(i pulumi.IntInput) GetCommunityHosts6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommunityHosts6 {
		return vs[0].([]GetCommunityHosts6)[vs[1].(int)]
	}).(GetCommunityHosts6Output)
}

type GetCommunityVdom struct {
	// VDOM name
	Name string `pulumi:"name"`
}

// GetCommunityVdomInput is an input type that accepts GetCommunityVdomArgs and GetCommunityVdomOutput values.
// You can construct a concrete instance of `GetCommunityVdomInput` via:
//
//	GetCommunityVdomArgs{...}
type GetCommunityVdomInput interface {
	pulumi.Input

	ToGetCommunityVdomOutput() GetCommunityVdomOutput
	ToGetCommunityVdomOutputWithContext(context.Context) GetCommunityVdomOutput
}

type GetCommunityVdomArgs struct {
	// VDOM name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCommunityVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommunityVdom)(nil)).Elem()
}

func (i GetCommunityVdomArgs) ToGetCommunityVdomOutput() GetCommunityVdomOutput {
	return i.ToGetCommunityVdomOutputWithContext(context.Background())
}

func (i GetCommunityVdomArgs) ToGetCommunityVdomOutputWithContext(ctx context.Context) GetCommunityVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommunityVdomOutput)
}

// GetCommunityVdomArrayInput is an input type that accepts GetCommunityVdomArray and GetCommunityVdomArrayOutput values.
// You can construct a concrete instance of `GetCommunityVdomArrayInput` via:
//
//	GetCommunityVdomArray{ GetCommunityVdomArgs{...} }
type GetCommunityVdomArrayInput interface {
	pulumi.Input

	ToGetCommunityVdomArrayOutput() GetCommunityVdomArrayOutput
	ToGetCommunityVdomArrayOutputWithContext(context.Context) GetCommunityVdomArrayOutput
}

type GetCommunityVdomArray []GetCommunityVdomInput

func (GetCommunityVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommunityVdom)(nil)).Elem()
}

func (i GetCommunityVdomArray) ToGetCommunityVdomArrayOutput() GetCommunityVdomArrayOutput {
	return i.ToGetCommunityVdomArrayOutputWithContext(context.Background())
}

func (i GetCommunityVdomArray) ToGetCommunityVdomArrayOutputWithContext(ctx context.Context) GetCommunityVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommunityVdomArrayOutput)
}

type GetCommunityVdomOutput struct{ *pulumi.OutputState }

func (GetCommunityVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommunityVdom)(nil)).Elem()
}

func (o GetCommunityVdomOutput) ToGetCommunityVdomOutput() GetCommunityVdomOutput {
	return o
}

func (o GetCommunityVdomOutput) ToGetCommunityVdomOutputWithContext(ctx context.Context) GetCommunityVdomOutput {
	return o
}

// VDOM name
func (o GetCommunityVdomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommunityVdom) string { return v.Name }).(pulumi.StringOutput)
}

type GetCommunityVdomArrayOutput struct{ *pulumi.OutputState }

func (GetCommunityVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommunityVdom)(nil)).Elem()
}

func (o GetCommunityVdomArrayOutput) ToGetCommunityVdomArrayOutput() GetCommunityVdomArrayOutput {
	return o
}

func (o GetCommunityVdomArrayOutput) ToGetCommunityVdomArrayOutputWithContext(ctx context.Context) GetCommunityVdomArrayOutput {
	return o
}

func (o GetCommunityVdomArrayOutput) Index(i pulumi.IntInput) GetCommunityVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommunityVdom {
		return vs[0].([]GetCommunityVdom)[vs[1].(int)]
	}).(GetCommunityVdomOutput)
}

type GetUserVdom struct {
	// Specify the name of the desired systemsnmp user.
	Name string `pulumi:"name"`
}

// GetUserVdomInput is an input type that accepts GetUserVdomArgs and GetUserVdomOutput values.
// You can construct a concrete instance of `GetUserVdomInput` via:
//
//	GetUserVdomArgs{...}
type GetUserVdomInput interface {
	pulumi.Input

	ToGetUserVdomOutput() GetUserVdomOutput
	ToGetUserVdomOutputWithContext(context.Context) GetUserVdomOutput
}

type GetUserVdomArgs struct {
	// Specify the name of the desired systemsnmp user.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserVdom)(nil)).Elem()
}

func (i GetUserVdomArgs) ToGetUserVdomOutput() GetUserVdomOutput {
	return i.ToGetUserVdomOutputWithContext(context.Background())
}

func (i GetUserVdomArgs) ToGetUserVdomOutputWithContext(ctx context.Context) GetUserVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserVdomOutput)
}

// GetUserVdomArrayInput is an input type that accepts GetUserVdomArray and GetUserVdomArrayOutput values.
// You can construct a concrete instance of `GetUserVdomArrayInput` via:
//
//	GetUserVdomArray{ GetUserVdomArgs{...} }
type GetUserVdomArrayInput interface {
	pulumi.Input

	ToGetUserVdomArrayOutput() GetUserVdomArrayOutput
	ToGetUserVdomArrayOutputWithContext(context.Context) GetUserVdomArrayOutput
}

type GetUserVdomArray []GetUserVdomInput

func (GetUserVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserVdom)(nil)).Elem()
}

func (i GetUserVdomArray) ToGetUserVdomArrayOutput() GetUserVdomArrayOutput {
	return i.ToGetUserVdomArrayOutputWithContext(context.Background())
}

func (i GetUserVdomArray) ToGetUserVdomArrayOutputWithContext(ctx context.Context) GetUserVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserVdomArrayOutput)
}

type GetUserVdomOutput struct{ *pulumi.OutputState }

func (GetUserVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserVdom)(nil)).Elem()
}

func (o GetUserVdomOutput) ToGetUserVdomOutput() GetUserVdomOutput {
	return o
}

func (o GetUserVdomOutput) ToGetUserVdomOutputWithContext(ctx context.Context) GetUserVdomOutput {
	return o
}

// Specify the name of the desired systemsnmp user.
func (o GetUserVdomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserVdom) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserVdomArrayOutput struct{ *pulumi.OutputState }

func (GetUserVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserVdom)(nil)).Elem()
}

func (o GetUserVdomArrayOutput) ToGetUserVdomArrayOutput() GetUserVdomArrayOutput {
	return o
}

func (o GetUserVdomArrayOutput) ToGetUserVdomArrayOutputWithContext(ctx context.Context) GetUserVdomArrayOutput {
	return o
}

func (o GetUserVdomArrayOutput) Index(i pulumi.IntInput) GetUserVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserVdom {
		return vs[0].([]GetUserVdom)[vs[1].(int)]
	}).(GetUserVdomOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CommunityHostInput)(nil)).Elem(), CommunityHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommunityHostArrayInput)(nil)).Elem(), CommunityHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommunityHosts6Input)(nil)).Elem(), CommunityHosts6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommunityHosts6ArrayInput)(nil)).Elem(), CommunityHosts6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommunityVdomInput)(nil)).Elem(), CommunityVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommunityVdomArrayInput)(nil)).Elem(), CommunityVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserVdomInput)(nil)).Elem(), UserVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserVdomArrayInput)(nil)).Elem(), UserVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommunityHostInput)(nil)).Elem(), GetCommunityHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommunityHostArrayInput)(nil)).Elem(), GetCommunityHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommunityHosts6Input)(nil)).Elem(), GetCommunityHosts6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommunityHosts6ArrayInput)(nil)).Elem(), GetCommunityHosts6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommunityVdomInput)(nil)).Elem(), GetCommunityVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommunityVdomArrayInput)(nil)).Elem(), GetCommunityVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserVdomInput)(nil)).Elem(), GetUserVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserVdomArrayInput)(nil)).Elem(), GetUserVdomArray{})
	pulumi.RegisterOutputType(CommunityHostOutput{})
	pulumi.RegisterOutputType(CommunityHostArrayOutput{})
	pulumi.RegisterOutputType(CommunityHosts6Output{})
	pulumi.RegisterOutputType(CommunityHosts6ArrayOutput{})
	pulumi.RegisterOutputType(CommunityVdomOutput{})
	pulumi.RegisterOutputType(CommunityVdomArrayOutput{})
	pulumi.RegisterOutputType(UserVdomOutput{})
	pulumi.RegisterOutputType(UserVdomArrayOutput{})
	pulumi.RegisterOutputType(GetCommunityHostOutput{})
	pulumi.RegisterOutputType(GetCommunityHostArrayOutput{})
	pulumi.RegisterOutputType(GetCommunityHosts6Output{})
	pulumi.RegisterOutputType(GetCommunityHosts6ArrayOutput{})
	pulumi.RegisterOutputType(GetCommunityVdomOutput{})
	pulumi.RegisterOutputType(GetCommunityVdomArrayOutput{})
	pulumi.RegisterOutputType(GetUserVdomOutput{})
	pulumi.RegisterOutputType(GetUserVdomArrayOutput{})
}
