// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

var _ = internal.GetEnvOrDefault

type AccprofileFwgrpPermission struct {
	// Address Configuration. Valid values: `none`, `read`, `read-write`.
	Address *string `pulumi:"address"`
	// Other Firewall Configuration. Valid values: `none`, `read`, `read-write`.
	Others *string `pulumi:"others"`
	// Policy Configuration. Valid values: `none`, `read`, `read-write`.
	Policy *string `pulumi:"policy"`
	// Schedule Configuration. Valid values: `none`, `read`, `read-write`.
	Schedule *string `pulumi:"schedule"`
	// Service Configuration. Valid values: `none`, `read`, `read-write`.
	Service *string `pulumi:"service"`
}

// AccprofileFwgrpPermissionInput is an input type that accepts AccprofileFwgrpPermissionArgs and AccprofileFwgrpPermissionOutput values.
// You can construct a concrete instance of `AccprofileFwgrpPermissionInput` via:
//
//	AccprofileFwgrpPermissionArgs{...}
type AccprofileFwgrpPermissionInput interface {
	pulumi.Input

	ToAccprofileFwgrpPermissionOutput() AccprofileFwgrpPermissionOutput
	ToAccprofileFwgrpPermissionOutputWithContext(context.Context) AccprofileFwgrpPermissionOutput
}

type AccprofileFwgrpPermissionArgs struct {
	// Address Configuration. Valid values: `none`, `read`, `read-write`.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Other Firewall Configuration. Valid values: `none`, `read`, `read-write`.
	Others pulumi.StringPtrInput `pulumi:"others"`
	// Policy Configuration. Valid values: `none`, `read`, `read-write`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// Schedule Configuration. Valid values: `none`, `read`, `read-write`.
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
	// Service Configuration. Valid values: `none`, `read`, `read-write`.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (AccprofileFwgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccprofileFwgrpPermission)(nil)).Elem()
}

func (i AccprofileFwgrpPermissionArgs) ToAccprofileFwgrpPermissionOutput() AccprofileFwgrpPermissionOutput {
	return i.ToAccprofileFwgrpPermissionOutputWithContext(context.Background())
}

func (i AccprofileFwgrpPermissionArgs) ToAccprofileFwgrpPermissionOutputWithContext(ctx context.Context) AccprofileFwgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileFwgrpPermissionOutput)
}

func (i AccprofileFwgrpPermissionArgs) ToAccprofileFwgrpPermissionPtrOutput() AccprofileFwgrpPermissionPtrOutput {
	return i.ToAccprofileFwgrpPermissionPtrOutputWithContext(context.Background())
}

func (i AccprofileFwgrpPermissionArgs) ToAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileFwgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileFwgrpPermissionOutput).ToAccprofileFwgrpPermissionPtrOutputWithContext(ctx)
}

// AccprofileFwgrpPermissionPtrInput is an input type that accepts AccprofileFwgrpPermissionArgs, AccprofileFwgrpPermissionPtr and AccprofileFwgrpPermissionPtrOutput values.
// You can construct a concrete instance of `AccprofileFwgrpPermissionPtrInput` via:
//
//	        AccprofileFwgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type AccprofileFwgrpPermissionPtrInput interface {
	pulumi.Input

	ToAccprofileFwgrpPermissionPtrOutput() AccprofileFwgrpPermissionPtrOutput
	ToAccprofileFwgrpPermissionPtrOutputWithContext(context.Context) AccprofileFwgrpPermissionPtrOutput
}

type accprofileFwgrpPermissionPtrType AccprofileFwgrpPermissionArgs

func AccprofileFwgrpPermissionPtr(v *AccprofileFwgrpPermissionArgs) AccprofileFwgrpPermissionPtrInput {
	return (*accprofileFwgrpPermissionPtrType)(v)
}

func (*accprofileFwgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccprofileFwgrpPermission)(nil)).Elem()
}

func (i *accprofileFwgrpPermissionPtrType) ToAccprofileFwgrpPermissionPtrOutput() AccprofileFwgrpPermissionPtrOutput {
	return i.ToAccprofileFwgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *accprofileFwgrpPermissionPtrType) ToAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileFwgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileFwgrpPermissionPtrOutput)
}

type AccprofileFwgrpPermissionOutput struct{ *pulumi.OutputState }

func (AccprofileFwgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccprofileFwgrpPermission)(nil)).Elem()
}

func (o AccprofileFwgrpPermissionOutput) ToAccprofileFwgrpPermissionOutput() AccprofileFwgrpPermissionOutput {
	return o
}

func (o AccprofileFwgrpPermissionOutput) ToAccprofileFwgrpPermissionOutputWithContext(ctx context.Context) AccprofileFwgrpPermissionOutput {
	return o
}

func (o AccprofileFwgrpPermissionOutput) ToAccprofileFwgrpPermissionPtrOutput() AccprofileFwgrpPermissionPtrOutput {
	return o.ToAccprofileFwgrpPermissionPtrOutputWithContext(context.Background())
}

func (o AccprofileFwgrpPermissionOutput) ToAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileFwgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccprofileFwgrpPermission) *AccprofileFwgrpPermission {
		return &v
	}).(AccprofileFwgrpPermissionPtrOutput)
}

// Address Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileFwgrpPermissionOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileFwgrpPermission) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Other Firewall Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileFwgrpPermissionOutput) Others() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileFwgrpPermission) *string { return v.Others }).(pulumi.StringPtrOutput)
}

// Policy Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileFwgrpPermissionOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileFwgrpPermission) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// Schedule Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileFwgrpPermissionOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileFwgrpPermission) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

// Service Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileFwgrpPermissionOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileFwgrpPermission) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type AccprofileFwgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (AccprofileFwgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccprofileFwgrpPermission)(nil)).Elem()
}

func (o AccprofileFwgrpPermissionPtrOutput) ToAccprofileFwgrpPermissionPtrOutput() AccprofileFwgrpPermissionPtrOutput {
	return o
}

func (o AccprofileFwgrpPermissionPtrOutput) ToAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileFwgrpPermissionPtrOutput {
	return o
}

func (o AccprofileFwgrpPermissionPtrOutput) Elem() AccprofileFwgrpPermissionOutput {
	return o.ApplyT(func(v *AccprofileFwgrpPermission) AccprofileFwgrpPermission {
		if v != nil {
			return *v
		}
		var ret AccprofileFwgrpPermission
		return ret
	}).(AccprofileFwgrpPermissionOutput)
}

// Address Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileFwgrpPermissionPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Other Firewall Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileFwgrpPermissionPtrOutput) Others() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Others
	}).(pulumi.StringPtrOutput)
}

// Policy Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileFwgrpPermissionPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// Schedule Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileFwgrpPermissionPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

// Service Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileFwgrpPermissionPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type AccprofileLoggrpPermission struct {
	// Log & Report configuration. Valid values: `none`, `read`, `read-write`.
	Config *string `pulumi:"config"`
	// Log & Report Data Access. Valid values: `none`, `read`, `read-write`.
	DataAccess *string `pulumi:"dataAccess"`
	// Log & Report Report Access. Valid values: `none`, `read`, `read-write`.
	ReportAccess *string `pulumi:"reportAccess"`
	// Log & Report Threat Weight. Valid values: `none`, `read`, `read-write`.
	ThreatWeight *string `pulumi:"threatWeight"`
}

// AccprofileLoggrpPermissionInput is an input type that accepts AccprofileLoggrpPermissionArgs and AccprofileLoggrpPermissionOutput values.
// You can construct a concrete instance of `AccprofileLoggrpPermissionInput` via:
//
//	AccprofileLoggrpPermissionArgs{...}
type AccprofileLoggrpPermissionInput interface {
	pulumi.Input

	ToAccprofileLoggrpPermissionOutput() AccprofileLoggrpPermissionOutput
	ToAccprofileLoggrpPermissionOutputWithContext(context.Context) AccprofileLoggrpPermissionOutput
}

type AccprofileLoggrpPermissionArgs struct {
	// Log & Report configuration. Valid values: `none`, `read`, `read-write`.
	Config pulumi.StringPtrInput `pulumi:"config"`
	// Log & Report Data Access. Valid values: `none`, `read`, `read-write`.
	DataAccess pulumi.StringPtrInput `pulumi:"dataAccess"`
	// Log & Report Report Access. Valid values: `none`, `read`, `read-write`.
	ReportAccess pulumi.StringPtrInput `pulumi:"reportAccess"`
	// Log & Report Threat Weight. Valid values: `none`, `read`, `read-write`.
	ThreatWeight pulumi.StringPtrInput `pulumi:"threatWeight"`
}

func (AccprofileLoggrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccprofileLoggrpPermission)(nil)).Elem()
}

func (i AccprofileLoggrpPermissionArgs) ToAccprofileLoggrpPermissionOutput() AccprofileLoggrpPermissionOutput {
	return i.ToAccprofileLoggrpPermissionOutputWithContext(context.Background())
}

func (i AccprofileLoggrpPermissionArgs) ToAccprofileLoggrpPermissionOutputWithContext(ctx context.Context) AccprofileLoggrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileLoggrpPermissionOutput)
}

func (i AccprofileLoggrpPermissionArgs) ToAccprofileLoggrpPermissionPtrOutput() AccprofileLoggrpPermissionPtrOutput {
	return i.ToAccprofileLoggrpPermissionPtrOutputWithContext(context.Background())
}

func (i AccprofileLoggrpPermissionArgs) ToAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileLoggrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileLoggrpPermissionOutput).ToAccprofileLoggrpPermissionPtrOutputWithContext(ctx)
}

// AccprofileLoggrpPermissionPtrInput is an input type that accepts AccprofileLoggrpPermissionArgs, AccprofileLoggrpPermissionPtr and AccprofileLoggrpPermissionPtrOutput values.
// You can construct a concrete instance of `AccprofileLoggrpPermissionPtrInput` via:
//
//	        AccprofileLoggrpPermissionArgs{...}
//
//	or:
//
//	        nil
type AccprofileLoggrpPermissionPtrInput interface {
	pulumi.Input

	ToAccprofileLoggrpPermissionPtrOutput() AccprofileLoggrpPermissionPtrOutput
	ToAccprofileLoggrpPermissionPtrOutputWithContext(context.Context) AccprofileLoggrpPermissionPtrOutput
}

type accprofileLoggrpPermissionPtrType AccprofileLoggrpPermissionArgs

func AccprofileLoggrpPermissionPtr(v *AccprofileLoggrpPermissionArgs) AccprofileLoggrpPermissionPtrInput {
	return (*accprofileLoggrpPermissionPtrType)(v)
}

func (*accprofileLoggrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccprofileLoggrpPermission)(nil)).Elem()
}

func (i *accprofileLoggrpPermissionPtrType) ToAccprofileLoggrpPermissionPtrOutput() AccprofileLoggrpPermissionPtrOutput {
	return i.ToAccprofileLoggrpPermissionPtrOutputWithContext(context.Background())
}

func (i *accprofileLoggrpPermissionPtrType) ToAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileLoggrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileLoggrpPermissionPtrOutput)
}

type AccprofileLoggrpPermissionOutput struct{ *pulumi.OutputState }

func (AccprofileLoggrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccprofileLoggrpPermission)(nil)).Elem()
}

func (o AccprofileLoggrpPermissionOutput) ToAccprofileLoggrpPermissionOutput() AccprofileLoggrpPermissionOutput {
	return o
}

func (o AccprofileLoggrpPermissionOutput) ToAccprofileLoggrpPermissionOutputWithContext(ctx context.Context) AccprofileLoggrpPermissionOutput {
	return o
}

func (o AccprofileLoggrpPermissionOutput) ToAccprofileLoggrpPermissionPtrOutput() AccprofileLoggrpPermissionPtrOutput {
	return o.ToAccprofileLoggrpPermissionPtrOutputWithContext(context.Background())
}

func (o AccprofileLoggrpPermissionOutput) ToAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileLoggrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccprofileLoggrpPermission) *AccprofileLoggrpPermission {
		return &v
	}).(AccprofileLoggrpPermissionPtrOutput)
}

// Log & Report configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileLoggrpPermissionOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileLoggrpPermission) *string { return v.Config }).(pulumi.StringPtrOutput)
}

// Log & Report Data Access. Valid values: `none`, `read`, `read-write`.
func (o AccprofileLoggrpPermissionOutput) DataAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileLoggrpPermission) *string { return v.DataAccess }).(pulumi.StringPtrOutput)
}

// Log & Report Report Access. Valid values: `none`, `read`, `read-write`.
func (o AccprofileLoggrpPermissionOutput) ReportAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileLoggrpPermission) *string { return v.ReportAccess }).(pulumi.StringPtrOutput)
}

// Log & Report Threat Weight. Valid values: `none`, `read`, `read-write`.
func (o AccprofileLoggrpPermissionOutput) ThreatWeight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileLoggrpPermission) *string { return v.ThreatWeight }).(pulumi.StringPtrOutput)
}

type AccprofileLoggrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (AccprofileLoggrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccprofileLoggrpPermission)(nil)).Elem()
}

func (o AccprofileLoggrpPermissionPtrOutput) ToAccprofileLoggrpPermissionPtrOutput() AccprofileLoggrpPermissionPtrOutput {
	return o
}

func (o AccprofileLoggrpPermissionPtrOutput) ToAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileLoggrpPermissionPtrOutput {
	return o
}

func (o AccprofileLoggrpPermissionPtrOutput) Elem() AccprofileLoggrpPermissionOutput {
	return o.ApplyT(func(v *AccprofileLoggrpPermission) AccprofileLoggrpPermission {
		if v != nil {
			return *v
		}
		var ret AccprofileLoggrpPermission
		return ret
	}).(AccprofileLoggrpPermissionOutput)
}

// Log & Report configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileLoggrpPermissionPtrOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.StringPtrOutput)
}

// Log & Report Data Access. Valid values: `none`, `read`, `read-write`.
func (o AccprofileLoggrpPermissionPtrOutput) DataAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.DataAccess
	}).(pulumi.StringPtrOutput)
}

// Log & Report Report Access. Valid values: `none`, `read`, `read-write`.
func (o AccprofileLoggrpPermissionPtrOutput) ReportAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.ReportAccess
	}).(pulumi.StringPtrOutput)
}

// Log & Report Threat Weight. Valid values: `none`, `read`, `read-write`.
func (o AccprofileLoggrpPermissionPtrOutput) ThreatWeight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.ThreatWeight
	}).(pulumi.StringPtrOutput)
}

type AccprofileNetgrpPermission struct {
	// Network Configuration. Valid values: `none`, `read`, `read-write`.
	Cfg *string `pulumi:"cfg"`
	// Packet Capture Configuration. Valid values: `none`, `read`, `read-write`.
	PacketCapture *string `pulumi:"packetCapture"`
	// Router Configuration. Valid values: `none`, `read`, `read-write`.
	RouteCfg *string `pulumi:"routeCfg"`
}

// AccprofileNetgrpPermissionInput is an input type that accepts AccprofileNetgrpPermissionArgs and AccprofileNetgrpPermissionOutput values.
// You can construct a concrete instance of `AccprofileNetgrpPermissionInput` via:
//
//	AccprofileNetgrpPermissionArgs{...}
type AccprofileNetgrpPermissionInput interface {
	pulumi.Input

	ToAccprofileNetgrpPermissionOutput() AccprofileNetgrpPermissionOutput
	ToAccprofileNetgrpPermissionOutputWithContext(context.Context) AccprofileNetgrpPermissionOutput
}

type AccprofileNetgrpPermissionArgs struct {
	// Network Configuration. Valid values: `none`, `read`, `read-write`.
	Cfg pulumi.StringPtrInput `pulumi:"cfg"`
	// Packet Capture Configuration. Valid values: `none`, `read`, `read-write`.
	PacketCapture pulumi.StringPtrInput `pulumi:"packetCapture"`
	// Router Configuration. Valid values: `none`, `read`, `read-write`.
	RouteCfg pulumi.StringPtrInput `pulumi:"routeCfg"`
}

func (AccprofileNetgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccprofileNetgrpPermission)(nil)).Elem()
}

func (i AccprofileNetgrpPermissionArgs) ToAccprofileNetgrpPermissionOutput() AccprofileNetgrpPermissionOutput {
	return i.ToAccprofileNetgrpPermissionOutputWithContext(context.Background())
}

func (i AccprofileNetgrpPermissionArgs) ToAccprofileNetgrpPermissionOutputWithContext(ctx context.Context) AccprofileNetgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileNetgrpPermissionOutput)
}

func (i AccprofileNetgrpPermissionArgs) ToAccprofileNetgrpPermissionPtrOutput() AccprofileNetgrpPermissionPtrOutput {
	return i.ToAccprofileNetgrpPermissionPtrOutputWithContext(context.Background())
}

func (i AccprofileNetgrpPermissionArgs) ToAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileNetgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileNetgrpPermissionOutput).ToAccprofileNetgrpPermissionPtrOutputWithContext(ctx)
}

// AccprofileNetgrpPermissionPtrInput is an input type that accepts AccprofileNetgrpPermissionArgs, AccprofileNetgrpPermissionPtr and AccprofileNetgrpPermissionPtrOutput values.
// You can construct a concrete instance of `AccprofileNetgrpPermissionPtrInput` via:
//
//	        AccprofileNetgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type AccprofileNetgrpPermissionPtrInput interface {
	pulumi.Input

	ToAccprofileNetgrpPermissionPtrOutput() AccprofileNetgrpPermissionPtrOutput
	ToAccprofileNetgrpPermissionPtrOutputWithContext(context.Context) AccprofileNetgrpPermissionPtrOutput
}

type accprofileNetgrpPermissionPtrType AccprofileNetgrpPermissionArgs

func AccprofileNetgrpPermissionPtr(v *AccprofileNetgrpPermissionArgs) AccprofileNetgrpPermissionPtrInput {
	return (*accprofileNetgrpPermissionPtrType)(v)
}

func (*accprofileNetgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccprofileNetgrpPermission)(nil)).Elem()
}

func (i *accprofileNetgrpPermissionPtrType) ToAccprofileNetgrpPermissionPtrOutput() AccprofileNetgrpPermissionPtrOutput {
	return i.ToAccprofileNetgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *accprofileNetgrpPermissionPtrType) ToAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileNetgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileNetgrpPermissionPtrOutput)
}

type AccprofileNetgrpPermissionOutput struct{ *pulumi.OutputState }

func (AccprofileNetgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccprofileNetgrpPermission)(nil)).Elem()
}

func (o AccprofileNetgrpPermissionOutput) ToAccprofileNetgrpPermissionOutput() AccprofileNetgrpPermissionOutput {
	return o
}

func (o AccprofileNetgrpPermissionOutput) ToAccprofileNetgrpPermissionOutputWithContext(ctx context.Context) AccprofileNetgrpPermissionOutput {
	return o
}

func (o AccprofileNetgrpPermissionOutput) ToAccprofileNetgrpPermissionPtrOutput() AccprofileNetgrpPermissionPtrOutput {
	return o.ToAccprofileNetgrpPermissionPtrOutputWithContext(context.Background())
}

func (o AccprofileNetgrpPermissionOutput) ToAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileNetgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccprofileNetgrpPermission) *AccprofileNetgrpPermission {
		return &v
	}).(AccprofileNetgrpPermissionPtrOutput)
}

// Network Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileNetgrpPermissionOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileNetgrpPermission) *string { return v.Cfg }).(pulumi.StringPtrOutput)
}

// Packet Capture Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileNetgrpPermissionOutput) PacketCapture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileNetgrpPermission) *string { return v.PacketCapture }).(pulumi.StringPtrOutput)
}

// Router Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileNetgrpPermissionOutput) RouteCfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileNetgrpPermission) *string { return v.RouteCfg }).(pulumi.StringPtrOutput)
}

type AccprofileNetgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (AccprofileNetgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccprofileNetgrpPermission)(nil)).Elem()
}

func (o AccprofileNetgrpPermissionPtrOutput) ToAccprofileNetgrpPermissionPtrOutput() AccprofileNetgrpPermissionPtrOutput {
	return o
}

func (o AccprofileNetgrpPermissionPtrOutput) ToAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileNetgrpPermissionPtrOutput {
	return o
}

func (o AccprofileNetgrpPermissionPtrOutput) Elem() AccprofileNetgrpPermissionOutput {
	return o.ApplyT(func(v *AccprofileNetgrpPermission) AccprofileNetgrpPermission {
		if v != nil {
			return *v
		}
		var ret AccprofileNetgrpPermission
		return ret
	}).(AccprofileNetgrpPermissionOutput)
}

// Network Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileNetgrpPermissionPtrOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileNetgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Cfg
	}).(pulumi.StringPtrOutput)
}

// Packet Capture Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileNetgrpPermissionPtrOutput) PacketCapture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileNetgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.PacketCapture
	}).(pulumi.StringPtrOutput)
}

// Router Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileNetgrpPermissionPtrOutput) RouteCfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileNetgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.RouteCfg
	}).(pulumi.StringPtrOutput)
}

type AccprofileSysgrpPermission struct {
	// Administrator Users. Valid values: `none`, `read`, `read-write`.
	Admin *string `pulumi:"admin"`
	// System Configuration. Valid values: `none`, `read`, `read-write`.
	Cfg *string `pulumi:"cfg"`
	// Maintenance. Valid values: `none`, `read`, `read-write`.
	Mnt *string `pulumi:"mnt"`
	// FortiGuard Updates. Valid values: `none`, `read`, `read-write`.
	Upd *string `pulumi:"upd"`
}

// AccprofileSysgrpPermissionInput is an input type that accepts AccprofileSysgrpPermissionArgs and AccprofileSysgrpPermissionOutput values.
// You can construct a concrete instance of `AccprofileSysgrpPermissionInput` via:
//
//	AccprofileSysgrpPermissionArgs{...}
type AccprofileSysgrpPermissionInput interface {
	pulumi.Input

	ToAccprofileSysgrpPermissionOutput() AccprofileSysgrpPermissionOutput
	ToAccprofileSysgrpPermissionOutputWithContext(context.Context) AccprofileSysgrpPermissionOutput
}

type AccprofileSysgrpPermissionArgs struct {
	// Administrator Users. Valid values: `none`, `read`, `read-write`.
	Admin pulumi.StringPtrInput `pulumi:"admin"`
	// System Configuration. Valid values: `none`, `read`, `read-write`.
	Cfg pulumi.StringPtrInput `pulumi:"cfg"`
	// Maintenance. Valid values: `none`, `read`, `read-write`.
	Mnt pulumi.StringPtrInput `pulumi:"mnt"`
	// FortiGuard Updates. Valid values: `none`, `read`, `read-write`.
	Upd pulumi.StringPtrInput `pulumi:"upd"`
}

func (AccprofileSysgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccprofileSysgrpPermission)(nil)).Elem()
}

func (i AccprofileSysgrpPermissionArgs) ToAccprofileSysgrpPermissionOutput() AccprofileSysgrpPermissionOutput {
	return i.ToAccprofileSysgrpPermissionOutputWithContext(context.Background())
}

func (i AccprofileSysgrpPermissionArgs) ToAccprofileSysgrpPermissionOutputWithContext(ctx context.Context) AccprofileSysgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileSysgrpPermissionOutput)
}

func (i AccprofileSysgrpPermissionArgs) ToAccprofileSysgrpPermissionPtrOutput() AccprofileSysgrpPermissionPtrOutput {
	return i.ToAccprofileSysgrpPermissionPtrOutputWithContext(context.Background())
}

func (i AccprofileSysgrpPermissionArgs) ToAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileSysgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileSysgrpPermissionOutput).ToAccprofileSysgrpPermissionPtrOutputWithContext(ctx)
}

// AccprofileSysgrpPermissionPtrInput is an input type that accepts AccprofileSysgrpPermissionArgs, AccprofileSysgrpPermissionPtr and AccprofileSysgrpPermissionPtrOutput values.
// You can construct a concrete instance of `AccprofileSysgrpPermissionPtrInput` via:
//
//	        AccprofileSysgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type AccprofileSysgrpPermissionPtrInput interface {
	pulumi.Input

	ToAccprofileSysgrpPermissionPtrOutput() AccprofileSysgrpPermissionPtrOutput
	ToAccprofileSysgrpPermissionPtrOutputWithContext(context.Context) AccprofileSysgrpPermissionPtrOutput
}

type accprofileSysgrpPermissionPtrType AccprofileSysgrpPermissionArgs

func AccprofileSysgrpPermissionPtr(v *AccprofileSysgrpPermissionArgs) AccprofileSysgrpPermissionPtrInput {
	return (*accprofileSysgrpPermissionPtrType)(v)
}

func (*accprofileSysgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccprofileSysgrpPermission)(nil)).Elem()
}

func (i *accprofileSysgrpPermissionPtrType) ToAccprofileSysgrpPermissionPtrOutput() AccprofileSysgrpPermissionPtrOutput {
	return i.ToAccprofileSysgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *accprofileSysgrpPermissionPtrType) ToAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileSysgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileSysgrpPermissionPtrOutput)
}

type AccprofileSysgrpPermissionOutput struct{ *pulumi.OutputState }

func (AccprofileSysgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccprofileSysgrpPermission)(nil)).Elem()
}

func (o AccprofileSysgrpPermissionOutput) ToAccprofileSysgrpPermissionOutput() AccprofileSysgrpPermissionOutput {
	return o
}

func (o AccprofileSysgrpPermissionOutput) ToAccprofileSysgrpPermissionOutputWithContext(ctx context.Context) AccprofileSysgrpPermissionOutput {
	return o
}

func (o AccprofileSysgrpPermissionOutput) ToAccprofileSysgrpPermissionPtrOutput() AccprofileSysgrpPermissionPtrOutput {
	return o.ToAccprofileSysgrpPermissionPtrOutputWithContext(context.Background())
}

func (o AccprofileSysgrpPermissionOutput) ToAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileSysgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccprofileSysgrpPermission) *AccprofileSysgrpPermission {
		return &v
	}).(AccprofileSysgrpPermissionPtrOutput)
}

// Administrator Users. Valid values: `none`, `read`, `read-write`.
func (o AccprofileSysgrpPermissionOutput) Admin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileSysgrpPermission) *string { return v.Admin }).(pulumi.StringPtrOutput)
}

// System Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileSysgrpPermissionOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileSysgrpPermission) *string { return v.Cfg }).(pulumi.StringPtrOutput)
}

// Maintenance. Valid values: `none`, `read`, `read-write`.
func (o AccprofileSysgrpPermissionOutput) Mnt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileSysgrpPermission) *string { return v.Mnt }).(pulumi.StringPtrOutput)
}

// FortiGuard Updates. Valid values: `none`, `read`, `read-write`.
func (o AccprofileSysgrpPermissionOutput) Upd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileSysgrpPermission) *string { return v.Upd }).(pulumi.StringPtrOutput)
}

type AccprofileSysgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (AccprofileSysgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccprofileSysgrpPermission)(nil)).Elem()
}

func (o AccprofileSysgrpPermissionPtrOutput) ToAccprofileSysgrpPermissionPtrOutput() AccprofileSysgrpPermissionPtrOutput {
	return o
}

func (o AccprofileSysgrpPermissionPtrOutput) ToAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileSysgrpPermissionPtrOutput {
	return o
}

func (o AccprofileSysgrpPermissionPtrOutput) Elem() AccprofileSysgrpPermissionOutput {
	return o.ApplyT(func(v *AccprofileSysgrpPermission) AccprofileSysgrpPermission {
		if v != nil {
			return *v
		}
		var ret AccprofileSysgrpPermission
		return ret
	}).(AccprofileSysgrpPermissionOutput)
}

// Administrator Users. Valid values: `none`, `read`, `read-write`.
func (o AccprofileSysgrpPermissionPtrOutput) Admin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Admin
	}).(pulumi.StringPtrOutput)
}

// System Configuration. Valid values: `none`, `read`, `read-write`.
func (o AccprofileSysgrpPermissionPtrOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Cfg
	}).(pulumi.StringPtrOutput)
}

// Maintenance. Valid values: `none`, `read`, `read-write`.
func (o AccprofileSysgrpPermissionPtrOutput) Mnt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Mnt
	}).(pulumi.StringPtrOutput)
}

// FortiGuard Updates. Valid values: `none`, `read`, `read-write`.
func (o AccprofileSysgrpPermissionPtrOutput) Upd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Upd
	}).(pulumi.StringPtrOutput)
}

type AccprofileUtmgrpPermission struct {
	// Antivirus profiles and settings. Valid values: `none`, `read`, `read-write`.
	Antivirus *string `pulumi:"antivirus"`
	// Application Control profiles and settings. Valid values: `none`, `read`, `read-write`.
	ApplicationControl *string `pulumi:"applicationControl"`
	// Inline CASB filter profile and settings Valid values: `none`, `read`, `read-write`.
	Casb *string `pulumi:"casb"`
	// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
	DataLeakPrevention *string `pulumi:"dataLeakPrevention"`
	// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
	DataLossPrevention *string `pulumi:"dataLossPrevention"`
	// DNS Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Dnsfilter *string `pulumi:"dnsfilter"`
	// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
	Emailfilter *string `pulumi:"emailfilter"`
	// FortiClient Profiles. Valid values: `none`, `read`, `read-write`.
	EndpointControl *string `pulumi:"endpointControl"`
	// File-filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	FileFilter *string `pulumi:"fileFilter"`
	// ICAP profiles and settings. Valid values: `none`, `read`, `read-write`.
	Icap *string `pulumi:"icap"`
	// IPS profiles and settings. Valid values: `none`, `read`, `read-write`.
	Ips *string `pulumi:"ips"`
	// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
	Spamfilter *string `pulumi:"spamfilter"`
	// Video filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Videofilter *string `pulumi:"videofilter"`
	// Virtual patch profiles and settings. Valid values: `none`, `read`, `read-write`.
	VirtualPatch *string `pulumi:"virtualPatch"`
	// VoIP profiles and settings. Valid values: `none`, `read`, `read-write`.
	Voip *string `pulumi:"voip"`
	// Web Application Firewall profiles and settings. Valid values: `none`, `read`, `read-write`.
	Waf *string `pulumi:"waf"`
	// Web Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Webfilter *string `pulumi:"webfilter"`
}

// AccprofileUtmgrpPermissionInput is an input type that accepts AccprofileUtmgrpPermissionArgs and AccprofileUtmgrpPermissionOutput values.
// You can construct a concrete instance of `AccprofileUtmgrpPermissionInput` via:
//
//	AccprofileUtmgrpPermissionArgs{...}
type AccprofileUtmgrpPermissionInput interface {
	pulumi.Input

	ToAccprofileUtmgrpPermissionOutput() AccprofileUtmgrpPermissionOutput
	ToAccprofileUtmgrpPermissionOutputWithContext(context.Context) AccprofileUtmgrpPermissionOutput
}

type AccprofileUtmgrpPermissionArgs struct {
	// Antivirus profiles and settings. Valid values: `none`, `read`, `read-write`.
	Antivirus pulumi.StringPtrInput `pulumi:"antivirus"`
	// Application Control profiles and settings. Valid values: `none`, `read`, `read-write`.
	ApplicationControl pulumi.StringPtrInput `pulumi:"applicationControl"`
	// Inline CASB filter profile and settings Valid values: `none`, `read`, `read-write`.
	Casb pulumi.StringPtrInput `pulumi:"casb"`
	// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
	DataLeakPrevention pulumi.StringPtrInput `pulumi:"dataLeakPrevention"`
	// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
	DataLossPrevention pulumi.StringPtrInput `pulumi:"dataLossPrevention"`
	// DNS Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Dnsfilter pulumi.StringPtrInput `pulumi:"dnsfilter"`
	// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
	Emailfilter pulumi.StringPtrInput `pulumi:"emailfilter"`
	// FortiClient Profiles. Valid values: `none`, `read`, `read-write`.
	EndpointControl pulumi.StringPtrInput `pulumi:"endpointControl"`
	// File-filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	FileFilter pulumi.StringPtrInput `pulumi:"fileFilter"`
	// ICAP profiles and settings. Valid values: `none`, `read`, `read-write`.
	Icap pulumi.StringPtrInput `pulumi:"icap"`
	// IPS profiles and settings. Valid values: `none`, `read`, `read-write`.
	Ips pulumi.StringPtrInput `pulumi:"ips"`
	// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
	Spamfilter pulumi.StringPtrInput `pulumi:"spamfilter"`
	// Video filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Videofilter pulumi.StringPtrInput `pulumi:"videofilter"`
	// Virtual patch profiles and settings. Valid values: `none`, `read`, `read-write`.
	VirtualPatch pulumi.StringPtrInput `pulumi:"virtualPatch"`
	// VoIP profiles and settings. Valid values: `none`, `read`, `read-write`.
	Voip pulumi.StringPtrInput `pulumi:"voip"`
	// Web Application Firewall profiles and settings. Valid values: `none`, `read`, `read-write`.
	Waf pulumi.StringPtrInput `pulumi:"waf"`
	// Web Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Webfilter pulumi.StringPtrInput `pulumi:"webfilter"`
}

func (AccprofileUtmgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccprofileUtmgrpPermission)(nil)).Elem()
}

func (i AccprofileUtmgrpPermissionArgs) ToAccprofileUtmgrpPermissionOutput() AccprofileUtmgrpPermissionOutput {
	return i.ToAccprofileUtmgrpPermissionOutputWithContext(context.Background())
}

func (i AccprofileUtmgrpPermissionArgs) ToAccprofileUtmgrpPermissionOutputWithContext(ctx context.Context) AccprofileUtmgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileUtmgrpPermissionOutput)
}

func (i AccprofileUtmgrpPermissionArgs) ToAccprofileUtmgrpPermissionPtrOutput() AccprofileUtmgrpPermissionPtrOutput {
	return i.ToAccprofileUtmgrpPermissionPtrOutputWithContext(context.Background())
}

func (i AccprofileUtmgrpPermissionArgs) ToAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileUtmgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileUtmgrpPermissionOutput).ToAccprofileUtmgrpPermissionPtrOutputWithContext(ctx)
}

// AccprofileUtmgrpPermissionPtrInput is an input type that accepts AccprofileUtmgrpPermissionArgs, AccprofileUtmgrpPermissionPtr and AccprofileUtmgrpPermissionPtrOutput values.
// You can construct a concrete instance of `AccprofileUtmgrpPermissionPtrInput` via:
//
//	        AccprofileUtmgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type AccprofileUtmgrpPermissionPtrInput interface {
	pulumi.Input

	ToAccprofileUtmgrpPermissionPtrOutput() AccprofileUtmgrpPermissionPtrOutput
	ToAccprofileUtmgrpPermissionPtrOutputWithContext(context.Context) AccprofileUtmgrpPermissionPtrOutput
}

type accprofileUtmgrpPermissionPtrType AccprofileUtmgrpPermissionArgs

func AccprofileUtmgrpPermissionPtr(v *AccprofileUtmgrpPermissionArgs) AccprofileUtmgrpPermissionPtrInput {
	return (*accprofileUtmgrpPermissionPtrType)(v)
}

func (*accprofileUtmgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccprofileUtmgrpPermission)(nil)).Elem()
}

func (i *accprofileUtmgrpPermissionPtrType) ToAccprofileUtmgrpPermissionPtrOutput() AccprofileUtmgrpPermissionPtrOutput {
	return i.ToAccprofileUtmgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *accprofileUtmgrpPermissionPtrType) ToAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileUtmgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccprofileUtmgrpPermissionPtrOutput)
}

type AccprofileUtmgrpPermissionOutput struct{ *pulumi.OutputState }

func (AccprofileUtmgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccprofileUtmgrpPermission)(nil)).Elem()
}

func (o AccprofileUtmgrpPermissionOutput) ToAccprofileUtmgrpPermissionOutput() AccprofileUtmgrpPermissionOutput {
	return o
}

func (o AccprofileUtmgrpPermissionOutput) ToAccprofileUtmgrpPermissionOutputWithContext(ctx context.Context) AccprofileUtmgrpPermissionOutput {
	return o
}

func (o AccprofileUtmgrpPermissionOutput) ToAccprofileUtmgrpPermissionPtrOutput() AccprofileUtmgrpPermissionPtrOutput {
	return o.ToAccprofileUtmgrpPermissionPtrOutputWithContext(context.Background())
}

func (o AccprofileUtmgrpPermissionOutput) ToAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileUtmgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccprofileUtmgrpPermission) *AccprofileUtmgrpPermission {
		return &v
	}).(AccprofileUtmgrpPermissionPtrOutput)
}

// Antivirus profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) Antivirus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.Antivirus }).(pulumi.StringPtrOutput)
}

// Application Control profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) ApplicationControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.ApplicationControl }).(pulumi.StringPtrOutput)
}

// Inline CASB filter profile and settings Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) Casb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.Casb }).(pulumi.StringPtrOutput)
}

// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) DataLeakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.DataLeakPrevention }).(pulumi.StringPtrOutput)
}

// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) DataLossPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.DataLossPrevention }).(pulumi.StringPtrOutput)
}

// DNS Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) Dnsfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.Dnsfilter }).(pulumi.StringPtrOutput)
}

// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) Emailfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.Emailfilter }).(pulumi.StringPtrOutput)
}

// FortiClient Profiles. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) EndpointControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.EndpointControl }).(pulumi.StringPtrOutput)
}

// File-filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) FileFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.FileFilter }).(pulumi.StringPtrOutput)
}

// ICAP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) Icap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.Icap }).(pulumi.StringPtrOutput)
}

// IPS profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) Ips() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.Ips }).(pulumi.StringPtrOutput)
}

// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) Spamfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.Spamfilter }).(pulumi.StringPtrOutput)
}

// Video filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) Videofilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.Videofilter }).(pulumi.StringPtrOutput)
}

// Virtual patch profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) VirtualPatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.VirtualPatch }).(pulumi.StringPtrOutput)
}

// VoIP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) Voip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.Voip }).(pulumi.StringPtrOutput)
}

// Web Application Firewall profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.Waf }).(pulumi.StringPtrOutput)
}

// Web Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionOutput) Webfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccprofileUtmgrpPermission) *string { return v.Webfilter }).(pulumi.StringPtrOutput)
}

type AccprofileUtmgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (AccprofileUtmgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccprofileUtmgrpPermission)(nil)).Elem()
}

func (o AccprofileUtmgrpPermissionPtrOutput) ToAccprofileUtmgrpPermissionPtrOutput() AccprofileUtmgrpPermissionPtrOutput {
	return o
}

func (o AccprofileUtmgrpPermissionPtrOutput) ToAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) AccprofileUtmgrpPermissionPtrOutput {
	return o
}

func (o AccprofileUtmgrpPermissionPtrOutput) Elem() AccprofileUtmgrpPermissionOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) AccprofileUtmgrpPermission {
		if v != nil {
			return *v
		}
		var ret AccprofileUtmgrpPermission
		return ret
	}).(AccprofileUtmgrpPermissionOutput)
}

// Antivirus profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) Antivirus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Antivirus
	}).(pulumi.StringPtrOutput)
}

// Application Control profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) ApplicationControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationControl
	}).(pulumi.StringPtrOutput)
}

// Inline CASB filter profile and settings Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) Casb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Casb
	}).(pulumi.StringPtrOutput)
}

// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) DataLeakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.DataLeakPrevention
	}).(pulumi.StringPtrOutput)
}

// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) DataLossPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.DataLossPrevention
	}).(pulumi.StringPtrOutput)
}

// DNS Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) Dnsfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Dnsfilter
	}).(pulumi.StringPtrOutput)
}

// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) Emailfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Emailfilter
	}).(pulumi.StringPtrOutput)
}

// FortiClient Profiles. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) EndpointControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.EndpointControl
	}).(pulumi.StringPtrOutput)
}

// File-filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) FileFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.FileFilter
	}).(pulumi.StringPtrOutput)
}

// ICAP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) Icap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Icap
	}).(pulumi.StringPtrOutput)
}

// IPS profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) Ips() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringPtrOutput)
}

// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) Spamfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Spamfilter
	}).(pulumi.StringPtrOutput)
}

// Video filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) Videofilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Videofilter
	}).(pulumi.StringPtrOutput)
}

// Virtual patch profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) VirtualPatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.VirtualPatch
	}).(pulumi.StringPtrOutput)
}

// VoIP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) Voip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Voip
	}).(pulumi.StringPtrOutput)
}

// Web Application Firewall profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Waf
	}).(pulumi.StringPtrOutput)
}

// Web Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o AccprofileUtmgrpPermissionPtrOutput) Webfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Webfilter
	}).(pulumi.StringPtrOutput)
}

type AcmeAccount struct {
	// Account ca_url.
	CaUrl *string `pulumi:"caUrl"`
	// Account email.
	Email *string `pulumi:"email"`
	// Account id.
	Id *string `pulumi:"id"`
	// Account Private Key.
	Privatekey *string `pulumi:"privatekey"`
	// Account status.
	Status *string `pulumi:"status"`
	// Account url.
	Url *string `pulumi:"url"`
}

// AcmeAccountInput is an input type that accepts AcmeAccountArgs and AcmeAccountOutput values.
// You can construct a concrete instance of `AcmeAccountInput` via:
//
//	AcmeAccountArgs{...}
type AcmeAccountInput interface {
	pulumi.Input

	ToAcmeAccountOutput() AcmeAccountOutput
	ToAcmeAccountOutputWithContext(context.Context) AcmeAccountOutput
}

type AcmeAccountArgs struct {
	// Account ca_url.
	CaUrl pulumi.StringPtrInput `pulumi:"caUrl"`
	// Account email.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Account id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Account Private Key.
	Privatekey pulumi.StringPtrInput `pulumi:"privatekey"`
	// Account status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Account url.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (AcmeAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AcmeAccount)(nil)).Elem()
}

func (i AcmeAccountArgs) ToAcmeAccountOutput() AcmeAccountOutput {
	return i.ToAcmeAccountOutputWithContext(context.Background())
}

func (i AcmeAccountArgs) ToAcmeAccountOutputWithContext(ctx context.Context) AcmeAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcmeAccountOutput)
}

// AcmeAccountArrayInput is an input type that accepts AcmeAccountArray and AcmeAccountArrayOutput values.
// You can construct a concrete instance of `AcmeAccountArrayInput` via:
//
//	AcmeAccountArray{ AcmeAccountArgs{...} }
type AcmeAccountArrayInput interface {
	pulumi.Input

	ToAcmeAccountArrayOutput() AcmeAccountArrayOutput
	ToAcmeAccountArrayOutputWithContext(context.Context) AcmeAccountArrayOutput
}

type AcmeAccountArray []AcmeAccountInput

func (AcmeAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AcmeAccount)(nil)).Elem()
}

func (i AcmeAccountArray) ToAcmeAccountArrayOutput() AcmeAccountArrayOutput {
	return i.ToAcmeAccountArrayOutputWithContext(context.Background())
}

func (i AcmeAccountArray) ToAcmeAccountArrayOutputWithContext(ctx context.Context) AcmeAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcmeAccountArrayOutput)
}

type AcmeAccountOutput struct{ *pulumi.OutputState }

func (AcmeAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcmeAccount)(nil)).Elem()
}

func (o AcmeAccountOutput) ToAcmeAccountOutput() AcmeAccountOutput {
	return o
}

func (o AcmeAccountOutput) ToAcmeAccountOutputWithContext(ctx context.Context) AcmeAccountOutput {
	return o
}

// Account ca_url.
func (o AcmeAccountOutput) CaUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcmeAccount) *string { return v.CaUrl }).(pulumi.StringPtrOutput)
}

// Account email.
func (o AcmeAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcmeAccount) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Account id.
func (o AcmeAccountOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcmeAccount) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Account Private Key.
func (o AcmeAccountOutput) Privatekey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcmeAccount) *string { return v.Privatekey }).(pulumi.StringPtrOutput)
}

// Account status.
func (o AcmeAccountOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcmeAccount) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Account url.
func (o AcmeAccountOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcmeAccount) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type AcmeAccountArrayOutput struct{ *pulumi.OutputState }

func (AcmeAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AcmeAccount)(nil)).Elem()
}

func (o AcmeAccountArrayOutput) ToAcmeAccountArrayOutput() AcmeAccountArrayOutput {
	return o
}

func (o AcmeAccountArrayOutput) ToAcmeAccountArrayOutputWithContext(ctx context.Context) AcmeAccountArrayOutput {
	return o
}

func (o AcmeAccountArrayOutput) Index(i pulumi.IntInput) AcmeAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AcmeAccount {
		return vs[0].([]AcmeAccount)[vs[1].(int)]
	}).(AcmeAccountOutput)
}

type AcmeInterface struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// AcmeInterfaceInput is an input type that accepts AcmeInterfaceArgs and AcmeInterfaceOutput values.
// You can construct a concrete instance of `AcmeInterfaceInput` via:
//
//	AcmeInterfaceArgs{...}
type AcmeInterfaceInput interface {
	pulumi.Input

	ToAcmeInterfaceOutput() AcmeInterfaceOutput
	ToAcmeInterfaceOutputWithContext(context.Context) AcmeInterfaceOutput
}

type AcmeInterfaceArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (AcmeInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AcmeInterface)(nil)).Elem()
}

func (i AcmeInterfaceArgs) ToAcmeInterfaceOutput() AcmeInterfaceOutput {
	return i.ToAcmeInterfaceOutputWithContext(context.Background())
}

func (i AcmeInterfaceArgs) ToAcmeInterfaceOutputWithContext(ctx context.Context) AcmeInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcmeInterfaceOutput)
}

// AcmeInterfaceArrayInput is an input type that accepts AcmeInterfaceArray and AcmeInterfaceArrayOutput values.
// You can construct a concrete instance of `AcmeInterfaceArrayInput` via:
//
//	AcmeInterfaceArray{ AcmeInterfaceArgs{...} }
type AcmeInterfaceArrayInput interface {
	pulumi.Input

	ToAcmeInterfaceArrayOutput() AcmeInterfaceArrayOutput
	ToAcmeInterfaceArrayOutputWithContext(context.Context) AcmeInterfaceArrayOutput
}

type AcmeInterfaceArray []AcmeInterfaceInput

func (AcmeInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AcmeInterface)(nil)).Elem()
}

func (i AcmeInterfaceArray) ToAcmeInterfaceArrayOutput() AcmeInterfaceArrayOutput {
	return i.ToAcmeInterfaceArrayOutputWithContext(context.Background())
}

func (i AcmeInterfaceArray) ToAcmeInterfaceArrayOutputWithContext(ctx context.Context) AcmeInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcmeInterfaceArrayOutput)
}

type AcmeInterfaceOutput struct{ *pulumi.OutputState }

func (AcmeInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcmeInterface)(nil)).Elem()
}

func (o AcmeInterfaceOutput) ToAcmeInterfaceOutput() AcmeInterfaceOutput {
	return o
}

func (o AcmeInterfaceOutput) ToAcmeInterfaceOutputWithContext(ctx context.Context) AcmeInterfaceOutput {
	return o
}

// Interface name.
func (o AcmeInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcmeInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type AcmeInterfaceArrayOutput struct{ *pulumi.OutputState }

func (AcmeInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AcmeInterface)(nil)).Elem()
}

func (o AcmeInterfaceArrayOutput) ToAcmeInterfaceArrayOutput() AcmeInterfaceArrayOutput {
	return o
}

func (o AcmeInterfaceArrayOutput) ToAcmeInterfaceArrayOutputWithContext(ctx context.Context) AcmeInterfaceArrayOutput {
	return o
}

func (o AcmeInterfaceArrayOutput) Index(i pulumi.IntInput) AcmeInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AcmeInterface {
		return vs[0].([]AcmeInterface)[vs[1].(int)]
	}).(AcmeInterfaceOutput)
}

type AdminGuestUsergroup struct {
	// Select guest user groups.
	Name *string `pulumi:"name"`
}

// AdminGuestUsergroupInput is an input type that accepts AdminGuestUsergroupArgs and AdminGuestUsergroupOutput values.
// You can construct a concrete instance of `AdminGuestUsergroupInput` via:
//
//	AdminGuestUsergroupArgs{...}
type AdminGuestUsergroupInput interface {
	pulumi.Input

	ToAdminGuestUsergroupOutput() AdminGuestUsergroupOutput
	ToAdminGuestUsergroupOutputWithContext(context.Context) AdminGuestUsergroupOutput
}

type AdminGuestUsergroupArgs struct {
	// Select guest user groups.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AdminGuestUsergroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuestUsergroup)(nil)).Elem()
}

func (i AdminGuestUsergroupArgs) ToAdminGuestUsergroupOutput() AdminGuestUsergroupOutput {
	return i.ToAdminGuestUsergroupOutputWithContext(context.Background())
}

func (i AdminGuestUsergroupArgs) ToAdminGuestUsergroupOutputWithContext(ctx context.Context) AdminGuestUsergroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuestUsergroupOutput)
}

// AdminGuestUsergroupArrayInput is an input type that accepts AdminGuestUsergroupArray and AdminGuestUsergroupArrayOutput values.
// You can construct a concrete instance of `AdminGuestUsergroupArrayInput` via:
//
//	AdminGuestUsergroupArray{ AdminGuestUsergroupArgs{...} }
type AdminGuestUsergroupArrayInput interface {
	pulumi.Input

	ToAdminGuestUsergroupArrayOutput() AdminGuestUsergroupArrayOutput
	ToAdminGuestUsergroupArrayOutputWithContext(context.Context) AdminGuestUsergroupArrayOutput
}

type AdminGuestUsergroupArray []AdminGuestUsergroupInput

func (AdminGuestUsergroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuestUsergroup)(nil)).Elem()
}

func (i AdminGuestUsergroupArray) ToAdminGuestUsergroupArrayOutput() AdminGuestUsergroupArrayOutput {
	return i.ToAdminGuestUsergroupArrayOutputWithContext(context.Background())
}

func (i AdminGuestUsergroupArray) ToAdminGuestUsergroupArrayOutputWithContext(ctx context.Context) AdminGuestUsergroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuestUsergroupArrayOutput)
}

type AdminGuestUsergroupOutput struct{ *pulumi.OutputState }

func (AdminGuestUsergroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuestUsergroup)(nil)).Elem()
}

func (o AdminGuestUsergroupOutput) ToAdminGuestUsergroupOutput() AdminGuestUsergroupOutput {
	return o
}

func (o AdminGuestUsergroupOutput) ToAdminGuestUsergroupOutputWithContext(ctx context.Context) AdminGuestUsergroupOutput {
	return o
}

// Select guest user groups.
func (o AdminGuestUsergroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuestUsergroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AdminGuestUsergroupArrayOutput struct{ *pulumi.OutputState }

func (AdminGuestUsergroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuestUsergroup)(nil)).Elem()
}

func (o AdminGuestUsergroupArrayOutput) ToAdminGuestUsergroupArrayOutput() AdminGuestUsergroupArrayOutput {
	return o
}

func (o AdminGuestUsergroupArrayOutput) ToAdminGuestUsergroupArrayOutputWithContext(ctx context.Context) AdminGuestUsergroupArrayOutput {
	return o
}

func (o AdminGuestUsergroupArrayOutput) Index(i pulumi.IntInput) AdminGuestUsergroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminGuestUsergroup {
		return vs[0].([]AdminGuestUsergroup)[vs[1].(int)]
	}).(AdminGuestUsergroupOutput)
}

type AdminGuiDashboard struct {
	// Number of columns.
	Columns *int `pulumi:"columns"`
	// Dashboard ID.
	Id *int `pulumi:"id"`
	// Layout type. Valid values: `responsive`, `fixed`.
	LayoutType *string `pulumi:"layoutType"`
	// Dashboard name.
	Name *string `pulumi:"name"`
	// Dashboard scope. Valid values: `global`, `vdom`.
	Scope *string `pulumi:"scope"`
	// Dashboard widgets. The structure of `widget` block is documented below.
	Widgets []AdminGuiDashboardWidget `pulumi:"widgets"`
}

// AdminGuiDashboardInput is an input type that accepts AdminGuiDashboardArgs and AdminGuiDashboardOutput values.
// You can construct a concrete instance of `AdminGuiDashboardInput` via:
//
//	AdminGuiDashboardArgs{...}
type AdminGuiDashboardInput interface {
	pulumi.Input

	ToAdminGuiDashboardOutput() AdminGuiDashboardOutput
	ToAdminGuiDashboardOutputWithContext(context.Context) AdminGuiDashboardOutput
}

type AdminGuiDashboardArgs struct {
	// Number of columns.
	Columns pulumi.IntPtrInput `pulumi:"columns"`
	// Dashboard ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Layout type. Valid values: `responsive`, `fixed`.
	LayoutType pulumi.StringPtrInput `pulumi:"layoutType"`
	// Dashboard name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Dashboard scope. Valid values: `global`, `vdom`.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Dashboard widgets. The structure of `widget` block is documented below.
	Widgets AdminGuiDashboardWidgetArrayInput `pulumi:"widgets"`
}

func (AdminGuiDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiDashboard)(nil)).Elem()
}

func (i AdminGuiDashboardArgs) ToAdminGuiDashboardOutput() AdminGuiDashboardOutput {
	return i.ToAdminGuiDashboardOutputWithContext(context.Background())
}

func (i AdminGuiDashboardArgs) ToAdminGuiDashboardOutputWithContext(ctx context.Context) AdminGuiDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiDashboardOutput)
}

// AdminGuiDashboardArrayInput is an input type that accepts AdminGuiDashboardArray and AdminGuiDashboardArrayOutput values.
// You can construct a concrete instance of `AdminGuiDashboardArrayInput` via:
//
//	AdminGuiDashboardArray{ AdminGuiDashboardArgs{...} }
type AdminGuiDashboardArrayInput interface {
	pulumi.Input

	ToAdminGuiDashboardArrayOutput() AdminGuiDashboardArrayOutput
	ToAdminGuiDashboardArrayOutputWithContext(context.Context) AdminGuiDashboardArrayOutput
}

type AdminGuiDashboardArray []AdminGuiDashboardInput

func (AdminGuiDashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiDashboard)(nil)).Elem()
}

func (i AdminGuiDashboardArray) ToAdminGuiDashboardArrayOutput() AdminGuiDashboardArrayOutput {
	return i.ToAdminGuiDashboardArrayOutputWithContext(context.Background())
}

func (i AdminGuiDashboardArray) ToAdminGuiDashboardArrayOutputWithContext(ctx context.Context) AdminGuiDashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiDashboardArrayOutput)
}

type AdminGuiDashboardOutput struct{ *pulumi.OutputState }

func (AdminGuiDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiDashboard)(nil)).Elem()
}

func (o AdminGuiDashboardOutput) ToAdminGuiDashboardOutput() AdminGuiDashboardOutput {
	return o
}

func (o AdminGuiDashboardOutput) ToAdminGuiDashboardOutputWithContext(ctx context.Context) AdminGuiDashboardOutput {
	return o
}

// Number of columns.
func (o AdminGuiDashboardOutput) Columns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboard) *int { return v.Columns }).(pulumi.IntPtrOutput)
}

// Dashboard ID.
func (o AdminGuiDashboardOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboard) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Layout type. Valid values: `responsive`, `fixed`.
func (o AdminGuiDashboardOutput) LayoutType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboard) *string { return v.LayoutType }).(pulumi.StringPtrOutput)
}

// Dashboard name.
func (o AdminGuiDashboardOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboard) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Dashboard scope. Valid values: `global`, `vdom`.
func (o AdminGuiDashboardOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboard) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Dashboard widgets. The structure of `widget` block is documented below.
func (o AdminGuiDashboardOutput) Widgets() AdminGuiDashboardWidgetArrayOutput {
	return o.ApplyT(func(v AdminGuiDashboard) []AdminGuiDashboardWidget { return v.Widgets }).(AdminGuiDashboardWidgetArrayOutput)
}

type AdminGuiDashboardArrayOutput struct{ *pulumi.OutputState }

func (AdminGuiDashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiDashboard)(nil)).Elem()
}

func (o AdminGuiDashboardArrayOutput) ToAdminGuiDashboardArrayOutput() AdminGuiDashboardArrayOutput {
	return o
}

func (o AdminGuiDashboardArrayOutput) ToAdminGuiDashboardArrayOutputWithContext(ctx context.Context) AdminGuiDashboardArrayOutput {
	return o
}

func (o AdminGuiDashboardArrayOutput) Index(i pulumi.IntInput) AdminGuiDashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminGuiDashboard {
		return vs[0].([]AdminGuiDashboard)[vs[1].(int)]
	}).(AdminGuiDashboardOutput)
}

type AdminGuiDashboardWidget struct {
	// Fabric device to monitor.
	FabricDevice *string `pulumi:"fabricDevice"`
	// FortiView filters. The structure of `filters` block is documented below.
	Filters []AdminGuiDashboardWidgetFilter `pulumi:"filters"`
	// Height.
	Height *int `pulumi:"height"`
	// Widget ID.
	Id *int `pulumi:"id"`
	// Security Audit Rating industry. Valid values: `default`, `custom`.
	Industry *string `pulumi:"industry"`
	// Interface to monitor.
	Interface *string `pulumi:"interface"`
	// Security Audit Rating region. Valid values: `default`, `custom`.
	Region *string `pulumi:"region"`
	// Field to aggregate the data by. Valid values: `source`, `destination`, `country`, `intfpair`, `srcintf`, `dstintf`, `policy`, `wificlient`, `shaper`, `endpoint-vulnerability`, `endpoint-device`, `application`, `cloud-app`, `cloud-user`, `web-domain`, `web-category`, `web-search-phrase`, `threat`, `system`, `unauth`, `admin`, `vpn`.
	ReportBy *string `pulumi:"reportBy"`
	// Field to sort the data by.
	SortBy *string `pulumi:"sortBy"`
	// Timeframe period of reported data. Valid values: `realtime`, `5min`, `hour`, `day`, `week`.
	Timeframe *string `pulumi:"timeframe"`
	// Widget title.
	Title *string `pulumi:"title"`
	// Widget type. Valid values: `sysinfo`, `licinfo`, `vminfo`, `forticloud`, `cpu-usage`, `memory-usage`, `disk-usage`, `log-rate`, `sessions`, `session-rate`, `tr-history`, `analytics`, `usb-modem`, `admins`, `security-fabric`, `security-fabric-ranking`, `ha-status`, `vulnerability-summary`, `host-scan-summary`, `fortiview`, `botnet-activity`, `fortimail`.
	Type *string `pulumi:"type"`
	// Visualization to use. Valid values: `table`, `bubble`, `country`, `chord`.
	Visualization *string `pulumi:"visualization"`
	// Width.
	Width *int `pulumi:"width"`
	// X position.
	XPos *int `pulumi:"xPos"`
	// Y position.
	YPos *int `pulumi:"yPos"`
}

// AdminGuiDashboardWidgetInput is an input type that accepts AdminGuiDashboardWidgetArgs and AdminGuiDashboardWidgetOutput values.
// You can construct a concrete instance of `AdminGuiDashboardWidgetInput` via:
//
//	AdminGuiDashboardWidgetArgs{...}
type AdminGuiDashboardWidgetInput interface {
	pulumi.Input

	ToAdminGuiDashboardWidgetOutput() AdminGuiDashboardWidgetOutput
	ToAdminGuiDashboardWidgetOutputWithContext(context.Context) AdminGuiDashboardWidgetOutput
}

type AdminGuiDashboardWidgetArgs struct {
	// Fabric device to monitor.
	FabricDevice pulumi.StringPtrInput `pulumi:"fabricDevice"`
	// FortiView filters. The structure of `filters` block is documented below.
	Filters AdminGuiDashboardWidgetFilterArrayInput `pulumi:"filters"`
	// Height.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Widget ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Security Audit Rating industry. Valid values: `default`, `custom`.
	Industry pulumi.StringPtrInput `pulumi:"industry"`
	// Interface to monitor.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Security Audit Rating region. Valid values: `default`, `custom`.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Field to aggregate the data by. Valid values: `source`, `destination`, `country`, `intfpair`, `srcintf`, `dstintf`, `policy`, `wificlient`, `shaper`, `endpoint-vulnerability`, `endpoint-device`, `application`, `cloud-app`, `cloud-user`, `web-domain`, `web-category`, `web-search-phrase`, `threat`, `system`, `unauth`, `admin`, `vpn`.
	ReportBy pulumi.StringPtrInput `pulumi:"reportBy"`
	// Field to sort the data by.
	SortBy pulumi.StringPtrInput `pulumi:"sortBy"`
	// Timeframe period of reported data. Valid values: `realtime`, `5min`, `hour`, `day`, `week`.
	Timeframe pulumi.StringPtrInput `pulumi:"timeframe"`
	// Widget title.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// Widget type. Valid values: `sysinfo`, `licinfo`, `vminfo`, `forticloud`, `cpu-usage`, `memory-usage`, `disk-usage`, `log-rate`, `sessions`, `session-rate`, `tr-history`, `analytics`, `usb-modem`, `admins`, `security-fabric`, `security-fabric-ranking`, `ha-status`, `vulnerability-summary`, `host-scan-summary`, `fortiview`, `botnet-activity`, `fortimail`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Visualization to use. Valid values: `table`, `bubble`, `country`, `chord`.
	Visualization pulumi.StringPtrInput `pulumi:"visualization"`
	// Width.
	Width pulumi.IntPtrInput `pulumi:"width"`
	// X position.
	XPos pulumi.IntPtrInput `pulumi:"xPos"`
	// Y position.
	YPos pulumi.IntPtrInput `pulumi:"yPos"`
}

func (AdminGuiDashboardWidgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiDashboardWidget)(nil)).Elem()
}

func (i AdminGuiDashboardWidgetArgs) ToAdminGuiDashboardWidgetOutput() AdminGuiDashboardWidgetOutput {
	return i.ToAdminGuiDashboardWidgetOutputWithContext(context.Background())
}

func (i AdminGuiDashboardWidgetArgs) ToAdminGuiDashboardWidgetOutputWithContext(ctx context.Context) AdminGuiDashboardWidgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiDashboardWidgetOutput)
}

// AdminGuiDashboardWidgetArrayInput is an input type that accepts AdminGuiDashboardWidgetArray and AdminGuiDashboardWidgetArrayOutput values.
// You can construct a concrete instance of `AdminGuiDashboardWidgetArrayInput` via:
//
//	AdminGuiDashboardWidgetArray{ AdminGuiDashboardWidgetArgs{...} }
type AdminGuiDashboardWidgetArrayInput interface {
	pulumi.Input

	ToAdminGuiDashboardWidgetArrayOutput() AdminGuiDashboardWidgetArrayOutput
	ToAdminGuiDashboardWidgetArrayOutputWithContext(context.Context) AdminGuiDashboardWidgetArrayOutput
}

type AdminGuiDashboardWidgetArray []AdminGuiDashboardWidgetInput

func (AdminGuiDashboardWidgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiDashboardWidget)(nil)).Elem()
}

func (i AdminGuiDashboardWidgetArray) ToAdminGuiDashboardWidgetArrayOutput() AdminGuiDashboardWidgetArrayOutput {
	return i.ToAdminGuiDashboardWidgetArrayOutputWithContext(context.Background())
}

func (i AdminGuiDashboardWidgetArray) ToAdminGuiDashboardWidgetArrayOutputWithContext(ctx context.Context) AdminGuiDashboardWidgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiDashboardWidgetArrayOutput)
}

type AdminGuiDashboardWidgetOutput struct{ *pulumi.OutputState }

func (AdminGuiDashboardWidgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiDashboardWidget)(nil)).Elem()
}

func (o AdminGuiDashboardWidgetOutput) ToAdminGuiDashboardWidgetOutput() AdminGuiDashboardWidgetOutput {
	return o
}

func (o AdminGuiDashboardWidgetOutput) ToAdminGuiDashboardWidgetOutputWithContext(ctx context.Context) AdminGuiDashboardWidgetOutput {
	return o
}

// Fabric device to monitor.
func (o AdminGuiDashboardWidgetOutput) FabricDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *string { return v.FabricDevice }).(pulumi.StringPtrOutput)
}

// FortiView filters. The structure of `filters` block is documented below.
func (o AdminGuiDashboardWidgetOutput) Filters() AdminGuiDashboardWidgetFilterArrayOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) []AdminGuiDashboardWidgetFilter { return v.Filters }).(AdminGuiDashboardWidgetFilterArrayOutput)
}

// Height.
func (o AdminGuiDashboardWidgetOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Widget ID.
func (o AdminGuiDashboardWidgetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Security Audit Rating industry. Valid values: `default`, `custom`.
func (o AdminGuiDashboardWidgetOutput) Industry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *string { return v.Industry }).(pulumi.StringPtrOutput)
}

// Interface to monitor.
func (o AdminGuiDashboardWidgetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Security Audit Rating region. Valid values: `default`, `custom`.
func (o AdminGuiDashboardWidgetOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Field to aggregate the data by. Valid values: `source`, `destination`, `country`, `intfpair`, `srcintf`, `dstintf`, `policy`, `wificlient`, `shaper`, `endpoint-vulnerability`, `endpoint-device`, `application`, `cloud-app`, `cloud-user`, `web-domain`, `web-category`, `web-search-phrase`, `threat`, `system`, `unauth`, `admin`, `vpn`.
func (o AdminGuiDashboardWidgetOutput) ReportBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *string { return v.ReportBy }).(pulumi.StringPtrOutput)
}

// Field to sort the data by.
func (o AdminGuiDashboardWidgetOutput) SortBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *string { return v.SortBy }).(pulumi.StringPtrOutput)
}

// Timeframe period of reported data. Valid values: `realtime`, `5min`, `hour`, `day`, `week`.
func (o AdminGuiDashboardWidgetOutput) Timeframe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *string { return v.Timeframe }).(pulumi.StringPtrOutput)
}

// Widget title.
func (o AdminGuiDashboardWidgetOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Widget type. Valid values: `sysinfo`, `licinfo`, `vminfo`, `forticloud`, `cpu-usage`, `memory-usage`, `disk-usage`, `log-rate`, `sessions`, `session-rate`, `tr-history`, `analytics`, `usb-modem`, `admins`, `security-fabric`, `security-fabric-ranking`, `ha-status`, `vulnerability-summary`, `host-scan-summary`, `fortiview`, `botnet-activity`, `fortimail`.
func (o AdminGuiDashboardWidgetOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Visualization to use. Valid values: `table`, `bubble`, `country`, `chord`.
func (o AdminGuiDashboardWidgetOutput) Visualization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *string { return v.Visualization }).(pulumi.StringPtrOutput)
}

// Width.
func (o AdminGuiDashboardWidgetOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *int { return v.Width }).(pulumi.IntPtrOutput)
}

// X position.
func (o AdminGuiDashboardWidgetOutput) XPos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *int { return v.XPos }).(pulumi.IntPtrOutput)
}

// Y position.
func (o AdminGuiDashboardWidgetOutput) YPos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidget) *int { return v.YPos }).(pulumi.IntPtrOutput)
}

type AdminGuiDashboardWidgetArrayOutput struct{ *pulumi.OutputState }

func (AdminGuiDashboardWidgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiDashboardWidget)(nil)).Elem()
}

func (o AdminGuiDashboardWidgetArrayOutput) ToAdminGuiDashboardWidgetArrayOutput() AdminGuiDashboardWidgetArrayOutput {
	return o
}

func (o AdminGuiDashboardWidgetArrayOutput) ToAdminGuiDashboardWidgetArrayOutputWithContext(ctx context.Context) AdminGuiDashboardWidgetArrayOutput {
	return o
}

func (o AdminGuiDashboardWidgetArrayOutput) Index(i pulumi.IntInput) AdminGuiDashboardWidgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminGuiDashboardWidget {
		return vs[0].([]AdminGuiDashboardWidget)[vs[1].(int)]
	}).(AdminGuiDashboardWidgetOutput)
}

type AdminGuiDashboardWidgetFilter struct {
	// FortiView Filter ID.
	Id *int `pulumi:"id"`
	// Filter key.
	Key *string `pulumi:"key"`
	// Filter value.
	Value *string `pulumi:"value"`
}

// AdminGuiDashboardWidgetFilterInput is an input type that accepts AdminGuiDashboardWidgetFilterArgs and AdminGuiDashboardWidgetFilterOutput values.
// You can construct a concrete instance of `AdminGuiDashboardWidgetFilterInput` via:
//
//	AdminGuiDashboardWidgetFilterArgs{...}
type AdminGuiDashboardWidgetFilterInput interface {
	pulumi.Input

	ToAdminGuiDashboardWidgetFilterOutput() AdminGuiDashboardWidgetFilterOutput
	ToAdminGuiDashboardWidgetFilterOutputWithContext(context.Context) AdminGuiDashboardWidgetFilterOutput
}

type AdminGuiDashboardWidgetFilterArgs struct {
	// FortiView Filter ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Filter key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Filter value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AdminGuiDashboardWidgetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (i AdminGuiDashboardWidgetFilterArgs) ToAdminGuiDashboardWidgetFilterOutput() AdminGuiDashboardWidgetFilterOutput {
	return i.ToAdminGuiDashboardWidgetFilterOutputWithContext(context.Background())
}

func (i AdminGuiDashboardWidgetFilterArgs) ToAdminGuiDashboardWidgetFilterOutputWithContext(ctx context.Context) AdminGuiDashboardWidgetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiDashboardWidgetFilterOutput)
}

// AdminGuiDashboardWidgetFilterArrayInput is an input type that accepts AdminGuiDashboardWidgetFilterArray and AdminGuiDashboardWidgetFilterArrayOutput values.
// You can construct a concrete instance of `AdminGuiDashboardWidgetFilterArrayInput` via:
//
//	AdminGuiDashboardWidgetFilterArray{ AdminGuiDashboardWidgetFilterArgs{...} }
type AdminGuiDashboardWidgetFilterArrayInput interface {
	pulumi.Input

	ToAdminGuiDashboardWidgetFilterArrayOutput() AdminGuiDashboardWidgetFilterArrayOutput
	ToAdminGuiDashboardWidgetFilterArrayOutputWithContext(context.Context) AdminGuiDashboardWidgetFilterArrayOutput
}

type AdminGuiDashboardWidgetFilterArray []AdminGuiDashboardWidgetFilterInput

func (AdminGuiDashboardWidgetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (i AdminGuiDashboardWidgetFilterArray) ToAdminGuiDashboardWidgetFilterArrayOutput() AdminGuiDashboardWidgetFilterArrayOutput {
	return i.ToAdminGuiDashboardWidgetFilterArrayOutputWithContext(context.Background())
}

func (i AdminGuiDashboardWidgetFilterArray) ToAdminGuiDashboardWidgetFilterArrayOutputWithContext(ctx context.Context) AdminGuiDashboardWidgetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiDashboardWidgetFilterArrayOutput)
}

type AdminGuiDashboardWidgetFilterOutput struct{ *pulumi.OutputState }

func (AdminGuiDashboardWidgetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (o AdminGuiDashboardWidgetFilterOutput) ToAdminGuiDashboardWidgetFilterOutput() AdminGuiDashboardWidgetFilterOutput {
	return o
}

func (o AdminGuiDashboardWidgetFilterOutput) ToAdminGuiDashboardWidgetFilterOutputWithContext(ctx context.Context) AdminGuiDashboardWidgetFilterOutput {
	return o
}

// FortiView Filter ID.
func (o AdminGuiDashboardWidgetFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidgetFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Filter key.
func (o AdminGuiDashboardWidgetFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidgetFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Filter value.
func (o AdminGuiDashboardWidgetFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiDashboardWidgetFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AdminGuiDashboardWidgetFilterArrayOutput struct{ *pulumi.OutputState }

func (AdminGuiDashboardWidgetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (o AdminGuiDashboardWidgetFilterArrayOutput) ToAdminGuiDashboardWidgetFilterArrayOutput() AdminGuiDashboardWidgetFilterArrayOutput {
	return o
}

func (o AdminGuiDashboardWidgetFilterArrayOutput) ToAdminGuiDashboardWidgetFilterArrayOutputWithContext(ctx context.Context) AdminGuiDashboardWidgetFilterArrayOutput {
	return o
}

func (o AdminGuiDashboardWidgetFilterArrayOutput) Index(i pulumi.IntInput) AdminGuiDashboardWidgetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminGuiDashboardWidgetFilter {
		return vs[0].([]AdminGuiDashboardWidgetFilter)[vs[1].(int)]
	}).(AdminGuiDashboardWidgetFilterOutput)
}

type AdminGuiGlobalMenuFavorite struct {
	// Select menu ID.
	Id *string `pulumi:"id"`
}

// AdminGuiGlobalMenuFavoriteInput is an input type that accepts AdminGuiGlobalMenuFavoriteArgs and AdminGuiGlobalMenuFavoriteOutput values.
// You can construct a concrete instance of `AdminGuiGlobalMenuFavoriteInput` via:
//
//	AdminGuiGlobalMenuFavoriteArgs{...}
type AdminGuiGlobalMenuFavoriteInput interface {
	pulumi.Input

	ToAdminGuiGlobalMenuFavoriteOutput() AdminGuiGlobalMenuFavoriteOutput
	ToAdminGuiGlobalMenuFavoriteOutputWithContext(context.Context) AdminGuiGlobalMenuFavoriteOutput
}

type AdminGuiGlobalMenuFavoriteArgs struct {
	// Select menu ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (AdminGuiGlobalMenuFavoriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (i AdminGuiGlobalMenuFavoriteArgs) ToAdminGuiGlobalMenuFavoriteOutput() AdminGuiGlobalMenuFavoriteOutput {
	return i.ToAdminGuiGlobalMenuFavoriteOutputWithContext(context.Background())
}

func (i AdminGuiGlobalMenuFavoriteArgs) ToAdminGuiGlobalMenuFavoriteOutputWithContext(ctx context.Context) AdminGuiGlobalMenuFavoriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiGlobalMenuFavoriteOutput)
}

// AdminGuiGlobalMenuFavoriteArrayInput is an input type that accepts AdminGuiGlobalMenuFavoriteArray and AdminGuiGlobalMenuFavoriteArrayOutput values.
// You can construct a concrete instance of `AdminGuiGlobalMenuFavoriteArrayInput` via:
//
//	AdminGuiGlobalMenuFavoriteArray{ AdminGuiGlobalMenuFavoriteArgs{...} }
type AdminGuiGlobalMenuFavoriteArrayInput interface {
	pulumi.Input

	ToAdminGuiGlobalMenuFavoriteArrayOutput() AdminGuiGlobalMenuFavoriteArrayOutput
	ToAdminGuiGlobalMenuFavoriteArrayOutputWithContext(context.Context) AdminGuiGlobalMenuFavoriteArrayOutput
}

type AdminGuiGlobalMenuFavoriteArray []AdminGuiGlobalMenuFavoriteInput

func (AdminGuiGlobalMenuFavoriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (i AdminGuiGlobalMenuFavoriteArray) ToAdminGuiGlobalMenuFavoriteArrayOutput() AdminGuiGlobalMenuFavoriteArrayOutput {
	return i.ToAdminGuiGlobalMenuFavoriteArrayOutputWithContext(context.Background())
}

func (i AdminGuiGlobalMenuFavoriteArray) ToAdminGuiGlobalMenuFavoriteArrayOutputWithContext(ctx context.Context) AdminGuiGlobalMenuFavoriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiGlobalMenuFavoriteArrayOutput)
}

type AdminGuiGlobalMenuFavoriteOutput struct{ *pulumi.OutputState }

func (AdminGuiGlobalMenuFavoriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (o AdminGuiGlobalMenuFavoriteOutput) ToAdminGuiGlobalMenuFavoriteOutput() AdminGuiGlobalMenuFavoriteOutput {
	return o
}

func (o AdminGuiGlobalMenuFavoriteOutput) ToAdminGuiGlobalMenuFavoriteOutputWithContext(ctx context.Context) AdminGuiGlobalMenuFavoriteOutput {
	return o
}

// Select menu ID.
func (o AdminGuiGlobalMenuFavoriteOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiGlobalMenuFavorite) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type AdminGuiGlobalMenuFavoriteArrayOutput struct{ *pulumi.OutputState }

func (AdminGuiGlobalMenuFavoriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (o AdminGuiGlobalMenuFavoriteArrayOutput) ToAdminGuiGlobalMenuFavoriteArrayOutput() AdminGuiGlobalMenuFavoriteArrayOutput {
	return o
}

func (o AdminGuiGlobalMenuFavoriteArrayOutput) ToAdminGuiGlobalMenuFavoriteArrayOutputWithContext(ctx context.Context) AdminGuiGlobalMenuFavoriteArrayOutput {
	return o
}

func (o AdminGuiGlobalMenuFavoriteArrayOutput) Index(i pulumi.IntInput) AdminGuiGlobalMenuFavoriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminGuiGlobalMenuFavorite {
		return vs[0].([]AdminGuiGlobalMenuFavorite)[vs[1].(int)]
	}).(AdminGuiGlobalMenuFavoriteOutput)
}

type AdminGuiNewFeatureAcknowledge struct {
	// Select menu ID.
	Id *string `pulumi:"id"`
}

// AdminGuiNewFeatureAcknowledgeInput is an input type that accepts AdminGuiNewFeatureAcknowledgeArgs and AdminGuiNewFeatureAcknowledgeOutput values.
// You can construct a concrete instance of `AdminGuiNewFeatureAcknowledgeInput` via:
//
//	AdminGuiNewFeatureAcknowledgeArgs{...}
type AdminGuiNewFeatureAcknowledgeInput interface {
	pulumi.Input

	ToAdminGuiNewFeatureAcknowledgeOutput() AdminGuiNewFeatureAcknowledgeOutput
	ToAdminGuiNewFeatureAcknowledgeOutputWithContext(context.Context) AdminGuiNewFeatureAcknowledgeOutput
}

type AdminGuiNewFeatureAcknowledgeArgs struct {
	// Select menu ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (AdminGuiNewFeatureAcknowledgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (i AdminGuiNewFeatureAcknowledgeArgs) ToAdminGuiNewFeatureAcknowledgeOutput() AdminGuiNewFeatureAcknowledgeOutput {
	return i.ToAdminGuiNewFeatureAcknowledgeOutputWithContext(context.Background())
}

func (i AdminGuiNewFeatureAcknowledgeArgs) ToAdminGuiNewFeatureAcknowledgeOutputWithContext(ctx context.Context) AdminGuiNewFeatureAcknowledgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiNewFeatureAcknowledgeOutput)
}

// AdminGuiNewFeatureAcknowledgeArrayInput is an input type that accepts AdminGuiNewFeatureAcknowledgeArray and AdminGuiNewFeatureAcknowledgeArrayOutput values.
// You can construct a concrete instance of `AdminGuiNewFeatureAcknowledgeArrayInput` via:
//
//	AdminGuiNewFeatureAcknowledgeArray{ AdminGuiNewFeatureAcknowledgeArgs{...} }
type AdminGuiNewFeatureAcknowledgeArrayInput interface {
	pulumi.Input

	ToAdminGuiNewFeatureAcknowledgeArrayOutput() AdminGuiNewFeatureAcknowledgeArrayOutput
	ToAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(context.Context) AdminGuiNewFeatureAcknowledgeArrayOutput
}

type AdminGuiNewFeatureAcknowledgeArray []AdminGuiNewFeatureAcknowledgeInput

func (AdminGuiNewFeatureAcknowledgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (i AdminGuiNewFeatureAcknowledgeArray) ToAdminGuiNewFeatureAcknowledgeArrayOutput() AdminGuiNewFeatureAcknowledgeArrayOutput {
	return i.ToAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(context.Background())
}

func (i AdminGuiNewFeatureAcknowledgeArray) ToAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(ctx context.Context) AdminGuiNewFeatureAcknowledgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiNewFeatureAcknowledgeArrayOutput)
}

type AdminGuiNewFeatureAcknowledgeOutput struct{ *pulumi.OutputState }

func (AdminGuiNewFeatureAcknowledgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (o AdminGuiNewFeatureAcknowledgeOutput) ToAdminGuiNewFeatureAcknowledgeOutput() AdminGuiNewFeatureAcknowledgeOutput {
	return o
}

func (o AdminGuiNewFeatureAcknowledgeOutput) ToAdminGuiNewFeatureAcknowledgeOutputWithContext(ctx context.Context) AdminGuiNewFeatureAcknowledgeOutput {
	return o
}

// Select menu ID.
func (o AdminGuiNewFeatureAcknowledgeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiNewFeatureAcknowledge) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type AdminGuiNewFeatureAcknowledgeArrayOutput struct{ *pulumi.OutputState }

func (AdminGuiNewFeatureAcknowledgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (o AdminGuiNewFeatureAcknowledgeArrayOutput) ToAdminGuiNewFeatureAcknowledgeArrayOutput() AdminGuiNewFeatureAcknowledgeArrayOutput {
	return o
}

func (o AdminGuiNewFeatureAcknowledgeArrayOutput) ToAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(ctx context.Context) AdminGuiNewFeatureAcknowledgeArrayOutput {
	return o
}

func (o AdminGuiNewFeatureAcknowledgeArrayOutput) Index(i pulumi.IntInput) AdminGuiNewFeatureAcknowledgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminGuiNewFeatureAcknowledge {
		return vs[0].([]AdminGuiNewFeatureAcknowledge)[vs[1].(int)]
	}).(AdminGuiNewFeatureAcknowledgeOutput)
}

type AdminGuiVdomMenuFavorite struct {
	// Select menu ID.
	Id *string `pulumi:"id"`
}

// AdminGuiVdomMenuFavoriteInput is an input type that accepts AdminGuiVdomMenuFavoriteArgs and AdminGuiVdomMenuFavoriteOutput values.
// You can construct a concrete instance of `AdminGuiVdomMenuFavoriteInput` via:
//
//	AdminGuiVdomMenuFavoriteArgs{...}
type AdminGuiVdomMenuFavoriteInput interface {
	pulumi.Input

	ToAdminGuiVdomMenuFavoriteOutput() AdminGuiVdomMenuFavoriteOutput
	ToAdminGuiVdomMenuFavoriteOutputWithContext(context.Context) AdminGuiVdomMenuFavoriteOutput
}

type AdminGuiVdomMenuFavoriteArgs struct {
	// Select menu ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (AdminGuiVdomMenuFavoriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (i AdminGuiVdomMenuFavoriteArgs) ToAdminGuiVdomMenuFavoriteOutput() AdminGuiVdomMenuFavoriteOutput {
	return i.ToAdminGuiVdomMenuFavoriteOutputWithContext(context.Background())
}

func (i AdminGuiVdomMenuFavoriteArgs) ToAdminGuiVdomMenuFavoriteOutputWithContext(ctx context.Context) AdminGuiVdomMenuFavoriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiVdomMenuFavoriteOutput)
}

// AdminGuiVdomMenuFavoriteArrayInput is an input type that accepts AdminGuiVdomMenuFavoriteArray and AdminGuiVdomMenuFavoriteArrayOutput values.
// You can construct a concrete instance of `AdminGuiVdomMenuFavoriteArrayInput` via:
//
//	AdminGuiVdomMenuFavoriteArray{ AdminGuiVdomMenuFavoriteArgs{...} }
type AdminGuiVdomMenuFavoriteArrayInput interface {
	pulumi.Input

	ToAdminGuiVdomMenuFavoriteArrayOutput() AdminGuiVdomMenuFavoriteArrayOutput
	ToAdminGuiVdomMenuFavoriteArrayOutputWithContext(context.Context) AdminGuiVdomMenuFavoriteArrayOutput
}

type AdminGuiVdomMenuFavoriteArray []AdminGuiVdomMenuFavoriteInput

func (AdminGuiVdomMenuFavoriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (i AdminGuiVdomMenuFavoriteArray) ToAdminGuiVdomMenuFavoriteArrayOutput() AdminGuiVdomMenuFavoriteArrayOutput {
	return i.ToAdminGuiVdomMenuFavoriteArrayOutputWithContext(context.Background())
}

func (i AdminGuiVdomMenuFavoriteArray) ToAdminGuiVdomMenuFavoriteArrayOutputWithContext(ctx context.Context) AdminGuiVdomMenuFavoriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminGuiVdomMenuFavoriteArrayOutput)
}

type AdminGuiVdomMenuFavoriteOutput struct{ *pulumi.OutputState }

func (AdminGuiVdomMenuFavoriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (o AdminGuiVdomMenuFavoriteOutput) ToAdminGuiVdomMenuFavoriteOutput() AdminGuiVdomMenuFavoriteOutput {
	return o
}

func (o AdminGuiVdomMenuFavoriteOutput) ToAdminGuiVdomMenuFavoriteOutputWithContext(ctx context.Context) AdminGuiVdomMenuFavoriteOutput {
	return o
}

// Select menu ID.
func (o AdminGuiVdomMenuFavoriteOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminGuiVdomMenuFavorite) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type AdminGuiVdomMenuFavoriteArrayOutput struct{ *pulumi.OutputState }

func (AdminGuiVdomMenuFavoriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (o AdminGuiVdomMenuFavoriteArrayOutput) ToAdminGuiVdomMenuFavoriteArrayOutput() AdminGuiVdomMenuFavoriteArrayOutput {
	return o
}

func (o AdminGuiVdomMenuFavoriteArrayOutput) ToAdminGuiVdomMenuFavoriteArrayOutputWithContext(ctx context.Context) AdminGuiVdomMenuFavoriteArrayOutput {
	return o
}

func (o AdminGuiVdomMenuFavoriteArrayOutput) Index(i pulumi.IntInput) AdminGuiVdomMenuFavoriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminGuiVdomMenuFavorite {
		return vs[0].([]AdminGuiVdomMenuFavorite)[vs[1].(int)]
	}).(AdminGuiVdomMenuFavoriteOutput)
}

type AdminLoginTime struct {
	// Last failed login time.
	LastFailedLogin *string `pulumi:"lastFailedLogin"`
	// Last successful login time.
	LastLogin *string `pulumi:"lastLogin"`
	// User name.
	UsrName *string `pulumi:"usrName"`
}

// AdminLoginTimeInput is an input type that accepts AdminLoginTimeArgs and AdminLoginTimeOutput values.
// You can construct a concrete instance of `AdminLoginTimeInput` via:
//
//	AdminLoginTimeArgs{...}
type AdminLoginTimeInput interface {
	pulumi.Input

	ToAdminLoginTimeOutput() AdminLoginTimeOutput
	ToAdminLoginTimeOutputWithContext(context.Context) AdminLoginTimeOutput
}

type AdminLoginTimeArgs struct {
	// Last failed login time.
	LastFailedLogin pulumi.StringPtrInput `pulumi:"lastFailedLogin"`
	// Last successful login time.
	LastLogin pulumi.StringPtrInput `pulumi:"lastLogin"`
	// User name.
	UsrName pulumi.StringPtrInput `pulumi:"usrName"`
}

func (AdminLoginTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminLoginTime)(nil)).Elem()
}

func (i AdminLoginTimeArgs) ToAdminLoginTimeOutput() AdminLoginTimeOutput {
	return i.ToAdminLoginTimeOutputWithContext(context.Background())
}

func (i AdminLoginTimeArgs) ToAdminLoginTimeOutputWithContext(ctx context.Context) AdminLoginTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminLoginTimeOutput)
}

// AdminLoginTimeArrayInput is an input type that accepts AdminLoginTimeArray and AdminLoginTimeArrayOutput values.
// You can construct a concrete instance of `AdminLoginTimeArrayInput` via:
//
//	AdminLoginTimeArray{ AdminLoginTimeArgs{...} }
type AdminLoginTimeArrayInput interface {
	pulumi.Input

	ToAdminLoginTimeArrayOutput() AdminLoginTimeArrayOutput
	ToAdminLoginTimeArrayOutputWithContext(context.Context) AdminLoginTimeArrayOutput
}

type AdminLoginTimeArray []AdminLoginTimeInput

func (AdminLoginTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminLoginTime)(nil)).Elem()
}

func (i AdminLoginTimeArray) ToAdminLoginTimeArrayOutput() AdminLoginTimeArrayOutput {
	return i.ToAdminLoginTimeArrayOutputWithContext(context.Background())
}

func (i AdminLoginTimeArray) ToAdminLoginTimeArrayOutputWithContext(ctx context.Context) AdminLoginTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminLoginTimeArrayOutput)
}

type AdminLoginTimeOutput struct{ *pulumi.OutputState }

func (AdminLoginTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminLoginTime)(nil)).Elem()
}

func (o AdminLoginTimeOutput) ToAdminLoginTimeOutput() AdminLoginTimeOutput {
	return o
}

func (o AdminLoginTimeOutput) ToAdminLoginTimeOutputWithContext(ctx context.Context) AdminLoginTimeOutput {
	return o
}

// Last failed login time.
func (o AdminLoginTimeOutput) LastFailedLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminLoginTime) *string { return v.LastFailedLogin }).(pulumi.StringPtrOutput)
}

// Last successful login time.
func (o AdminLoginTimeOutput) LastLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminLoginTime) *string { return v.LastLogin }).(pulumi.StringPtrOutput)
}

// User name.
func (o AdminLoginTimeOutput) UsrName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminLoginTime) *string { return v.UsrName }).(pulumi.StringPtrOutput)
}

type AdminLoginTimeArrayOutput struct{ *pulumi.OutputState }

func (AdminLoginTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminLoginTime)(nil)).Elem()
}

func (o AdminLoginTimeArrayOutput) ToAdminLoginTimeArrayOutput() AdminLoginTimeArrayOutput {
	return o
}

func (o AdminLoginTimeArrayOutput) ToAdminLoginTimeArrayOutputWithContext(ctx context.Context) AdminLoginTimeArrayOutput {
	return o
}

func (o AdminLoginTimeArrayOutput) Index(i pulumi.IntInput) AdminLoginTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminLoginTime {
		return vs[0].([]AdminLoginTime)[vs[1].(int)]
	}).(AdminLoginTimeOutput)
}

type AdminVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// AdminVdomInput is an input type that accepts AdminVdomArgs and AdminVdomOutput values.
// You can construct a concrete instance of `AdminVdomInput` via:
//
//	AdminVdomArgs{...}
type AdminVdomInput interface {
	pulumi.Input

	ToAdminVdomOutput() AdminVdomOutput
	ToAdminVdomOutputWithContext(context.Context) AdminVdomOutput
}

type AdminVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AdminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminVdom)(nil)).Elem()
}

func (i AdminVdomArgs) ToAdminVdomOutput() AdminVdomOutput {
	return i.ToAdminVdomOutputWithContext(context.Background())
}

func (i AdminVdomArgs) ToAdminVdomOutputWithContext(ctx context.Context) AdminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminVdomOutput)
}

// AdminVdomArrayInput is an input type that accepts AdminVdomArray and AdminVdomArrayOutput values.
// You can construct a concrete instance of `AdminVdomArrayInput` via:
//
//	AdminVdomArray{ AdminVdomArgs{...} }
type AdminVdomArrayInput interface {
	pulumi.Input

	ToAdminVdomArrayOutput() AdminVdomArrayOutput
	ToAdminVdomArrayOutputWithContext(context.Context) AdminVdomArrayOutput
}

type AdminVdomArray []AdminVdomInput

func (AdminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminVdom)(nil)).Elem()
}

func (i AdminVdomArray) ToAdminVdomArrayOutput() AdminVdomArrayOutput {
	return i.ToAdminVdomArrayOutputWithContext(context.Background())
}

func (i AdminVdomArray) ToAdminVdomArrayOutputWithContext(ctx context.Context) AdminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminVdomArrayOutput)
}

type AdminVdomOutput struct{ *pulumi.OutputState }

func (AdminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminVdom)(nil)).Elem()
}

func (o AdminVdomOutput) ToAdminVdomOutput() AdminVdomOutput {
	return o
}

func (o AdminVdomOutput) ToAdminVdomOutputWithContext(ctx context.Context) AdminVdomOutput {
	return o
}

// Virtual domain name.
func (o AdminVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AdminVdomArrayOutput struct{ *pulumi.OutputState }

func (AdminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminVdom)(nil)).Elem()
}

func (o AdminVdomArrayOutput) ToAdminVdomArrayOutput() AdminVdomArrayOutput {
	return o
}

func (o AdminVdomArrayOutput) ToAdminVdomArrayOutputWithContext(ctx context.Context) AdminVdomArrayOutput {
	return o
}

func (o AdminVdomArrayOutput) Index(i pulumi.IntInput) AdminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminVdom {
		return vs[0].([]AdminVdom)[vs[1].(int)]
	}).(AdminVdomOutput)
}

type AlarmGroup struct {
	// Admin authentication failure threshold.
	AdminAuthFailureThreshold *int `pulumi:"adminAuthFailureThreshold"`
	// Admin authentication lockout threshold.
	AdminAuthLockoutThreshold *int `pulumi:"adminAuthLockoutThreshold"`
	// Decryption failure threshold.
	DecryptionFailureThreshold *int `pulumi:"decryptionFailureThreshold"`
	// Encryption failure threshold.
	EncryptionFailureThreshold *int `pulumi:"encryptionFailureThreshold"`
	// Firewall policy ID.
	FwPolicyId *int `pulumi:"fwPolicyId"`
	// Firewall policy ID threshold.
	FwPolicyIdThreshold *int `pulumi:"fwPolicyIdThreshold"`
	// Firewall policy violations. The structure of `fwPolicyViolations` block is documented below.
	FwPolicyViolations []AlarmGroupFwPolicyViolation `pulumi:"fwPolicyViolations"`
	// Group ID.
	Id *int `pulumi:"id"`
	// Log full warning threshold.
	LogFullWarningThreshold *int `pulumi:"logFullWarningThreshold"`
	// Time period in seconds (0 = from start up).
	Period *int `pulumi:"period"`
	// Replay attempt threshold.
	ReplayAttemptThreshold *int `pulumi:"replayAttemptThreshold"`
	// Self-test failure threshold.
	SelfTestFailureThreshold *int `pulumi:"selfTestFailureThreshold"`
	// User authentication failure threshold.
	UserAuthFailureThreshold *int `pulumi:"userAuthFailureThreshold"`
	// User authentication lockout threshold.
	UserAuthLockoutThreshold *int `pulumi:"userAuthLockoutThreshold"`
}

// AlarmGroupInput is an input type that accepts AlarmGroupArgs and AlarmGroupOutput values.
// You can construct a concrete instance of `AlarmGroupInput` via:
//
//	AlarmGroupArgs{...}
type AlarmGroupInput interface {
	pulumi.Input

	ToAlarmGroupOutput() AlarmGroupOutput
	ToAlarmGroupOutputWithContext(context.Context) AlarmGroupOutput
}

type AlarmGroupArgs struct {
	// Admin authentication failure threshold.
	AdminAuthFailureThreshold pulumi.IntPtrInput `pulumi:"adminAuthFailureThreshold"`
	// Admin authentication lockout threshold.
	AdminAuthLockoutThreshold pulumi.IntPtrInput `pulumi:"adminAuthLockoutThreshold"`
	// Decryption failure threshold.
	DecryptionFailureThreshold pulumi.IntPtrInput `pulumi:"decryptionFailureThreshold"`
	// Encryption failure threshold.
	EncryptionFailureThreshold pulumi.IntPtrInput `pulumi:"encryptionFailureThreshold"`
	// Firewall policy ID.
	FwPolicyId pulumi.IntPtrInput `pulumi:"fwPolicyId"`
	// Firewall policy ID threshold.
	FwPolicyIdThreshold pulumi.IntPtrInput `pulumi:"fwPolicyIdThreshold"`
	// Firewall policy violations. The structure of `fwPolicyViolations` block is documented below.
	FwPolicyViolations AlarmGroupFwPolicyViolationArrayInput `pulumi:"fwPolicyViolations"`
	// Group ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Log full warning threshold.
	LogFullWarningThreshold pulumi.IntPtrInput `pulumi:"logFullWarningThreshold"`
	// Time period in seconds (0 = from start up).
	Period pulumi.IntPtrInput `pulumi:"period"`
	// Replay attempt threshold.
	ReplayAttemptThreshold pulumi.IntPtrInput `pulumi:"replayAttemptThreshold"`
	// Self-test failure threshold.
	SelfTestFailureThreshold pulumi.IntPtrInput `pulumi:"selfTestFailureThreshold"`
	// User authentication failure threshold.
	UserAuthFailureThreshold pulumi.IntPtrInput `pulumi:"userAuthFailureThreshold"`
	// User authentication lockout threshold.
	UserAuthLockoutThreshold pulumi.IntPtrInput `pulumi:"userAuthLockoutThreshold"`
}

func (AlarmGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmGroup)(nil)).Elem()
}

func (i AlarmGroupArgs) ToAlarmGroupOutput() AlarmGroupOutput {
	return i.ToAlarmGroupOutputWithContext(context.Background())
}

func (i AlarmGroupArgs) ToAlarmGroupOutputWithContext(ctx context.Context) AlarmGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmGroupOutput)
}

// AlarmGroupArrayInput is an input type that accepts AlarmGroupArray and AlarmGroupArrayOutput values.
// You can construct a concrete instance of `AlarmGroupArrayInput` via:
//
//	AlarmGroupArray{ AlarmGroupArgs{...} }
type AlarmGroupArrayInput interface {
	pulumi.Input

	ToAlarmGroupArrayOutput() AlarmGroupArrayOutput
	ToAlarmGroupArrayOutputWithContext(context.Context) AlarmGroupArrayOutput
}

type AlarmGroupArray []AlarmGroupInput

func (AlarmGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmGroup)(nil)).Elem()
}

func (i AlarmGroupArray) ToAlarmGroupArrayOutput() AlarmGroupArrayOutput {
	return i.ToAlarmGroupArrayOutputWithContext(context.Background())
}

func (i AlarmGroupArray) ToAlarmGroupArrayOutputWithContext(ctx context.Context) AlarmGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmGroupArrayOutput)
}

type AlarmGroupOutput struct{ *pulumi.OutputState }

func (AlarmGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmGroup)(nil)).Elem()
}

func (o AlarmGroupOutput) ToAlarmGroupOutput() AlarmGroupOutput {
	return o
}

func (o AlarmGroupOutput) ToAlarmGroupOutputWithContext(ctx context.Context) AlarmGroupOutput {
	return o
}

// Admin authentication failure threshold.
func (o AlarmGroupOutput) AdminAuthFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.AdminAuthFailureThreshold }).(pulumi.IntPtrOutput)
}

// Admin authentication lockout threshold.
func (o AlarmGroupOutput) AdminAuthLockoutThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.AdminAuthLockoutThreshold }).(pulumi.IntPtrOutput)
}

// Decryption failure threshold.
func (o AlarmGroupOutput) DecryptionFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.DecryptionFailureThreshold }).(pulumi.IntPtrOutput)
}

// Encryption failure threshold.
func (o AlarmGroupOutput) EncryptionFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.EncryptionFailureThreshold }).(pulumi.IntPtrOutput)
}

// Firewall policy ID.
func (o AlarmGroupOutput) FwPolicyId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.FwPolicyId }).(pulumi.IntPtrOutput)
}

// Firewall policy ID threshold.
func (o AlarmGroupOutput) FwPolicyIdThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.FwPolicyIdThreshold }).(pulumi.IntPtrOutput)
}

// Firewall policy violations. The structure of `fwPolicyViolations` block is documented below.
func (o AlarmGroupOutput) FwPolicyViolations() AlarmGroupFwPolicyViolationArrayOutput {
	return o.ApplyT(func(v AlarmGroup) []AlarmGroupFwPolicyViolation { return v.FwPolicyViolations }).(AlarmGroupFwPolicyViolationArrayOutput)
}

// Group ID.
func (o AlarmGroupOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Log full warning threshold.
func (o AlarmGroupOutput) LogFullWarningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.LogFullWarningThreshold }).(pulumi.IntPtrOutput)
}

// Time period in seconds (0 = from start up).
func (o AlarmGroupOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.Period }).(pulumi.IntPtrOutput)
}

// Replay attempt threshold.
func (o AlarmGroupOutput) ReplayAttemptThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.ReplayAttemptThreshold }).(pulumi.IntPtrOutput)
}

// Self-test failure threshold.
func (o AlarmGroupOutput) SelfTestFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.SelfTestFailureThreshold }).(pulumi.IntPtrOutput)
}

// User authentication failure threshold.
func (o AlarmGroupOutput) UserAuthFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.UserAuthFailureThreshold }).(pulumi.IntPtrOutput)
}

// User authentication lockout threshold.
func (o AlarmGroupOutput) UserAuthLockoutThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroup) *int { return v.UserAuthLockoutThreshold }).(pulumi.IntPtrOutput)
}

type AlarmGroupArrayOutput struct{ *pulumi.OutputState }

func (AlarmGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmGroup)(nil)).Elem()
}

func (o AlarmGroupArrayOutput) ToAlarmGroupArrayOutput() AlarmGroupArrayOutput {
	return o
}

func (o AlarmGroupArrayOutput) ToAlarmGroupArrayOutputWithContext(ctx context.Context) AlarmGroupArrayOutput {
	return o
}

func (o AlarmGroupArrayOutput) Index(i pulumi.IntInput) AlarmGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmGroup {
		return vs[0].([]AlarmGroup)[vs[1].(int)]
	}).(AlarmGroupOutput)
}

type AlarmGroupFwPolicyViolation struct {
	// Destination IP (0=all).
	DstIp *string `pulumi:"dstIp"`
	// Destination port (0=all).
	DstPort *int `pulumi:"dstPort"`
	// Firewall policy violations ID.
	Id *int `pulumi:"id"`
	// Source IP (0=all).
	SrcIp *string `pulumi:"srcIp"`
	// Source port (0=all).
	SrcPort *int `pulumi:"srcPort"`
	// Firewall policy violation threshold.
	Threshold *int `pulumi:"threshold"`
}

// AlarmGroupFwPolicyViolationInput is an input type that accepts AlarmGroupFwPolicyViolationArgs and AlarmGroupFwPolicyViolationOutput values.
// You can construct a concrete instance of `AlarmGroupFwPolicyViolationInput` via:
//
//	AlarmGroupFwPolicyViolationArgs{...}
type AlarmGroupFwPolicyViolationInput interface {
	pulumi.Input

	ToAlarmGroupFwPolicyViolationOutput() AlarmGroupFwPolicyViolationOutput
	ToAlarmGroupFwPolicyViolationOutputWithContext(context.Context) AlarmGroupFwPolicyViolationOutput
}

type AlarmGroupFwPolicyViolationArgs struct {
	// Destination IP (0=all).
	DstIp pulumi.StringPtrInput `pulumi:"dstIp"`
	// Destination port (0=all).
	DstPort pulumi.IntPtrInput `pulumi:"dstPort"`
	// Firewall policy violations ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Source IP (0=all).
	SrcIp pulumi.StringPtrInput `pulumi:"srcIp"`
	// Source port (0=all).
	SrcPort pulumi.IntPtrInput `pulumi:"srcPort"`
	// Firewall policy violation threshold.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
}

func (AlarmGroupFwPolicyViolationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (i AlarmGroupFwPolicyViolationArgs) ToAlarmGroupFwPolicyViolationOutput() AlarmGroupFwPolicyViolationOutput {
	return i.ToAlarmGroupFwPolicyViolationOutputWithContext(context.Background())
}

func (i AlarmGroupFwPolicyViolationArgs) ToAlarmGroupFwPolicyViolationOutputWithContext(ctx context.Context) AlarmGroupFwPolicyViolationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmGroupFwPolicyViolationOutput)
}

// AlarmGroupFwPolicyViolationArrayInput is an input type that accepts AlarmGroupFwPolicyViolationArray and AlarmGroupFwPolicyViolationArrayOutput values.
// You can construct a concrete instance of `AlarmGroupFwPolicyViolationArrayInput` via:
//
//	AlarmGroupFwPolicyViolationArray{ AlarmGroupFwPolicyViolationArgs{...} }
type AlarmGroupFwPolicyViolationArrayInput interface {
	pulumi.Input

	ToAlarmGroupFwPolicyViolationArrayOutput() AlarmGroupFwPolicyViolationArrayOutput
	ToAlarmGroupFwPolicyViolationArrayOutputWithContext(context.Context) AlarmGroupFwPolicyViolationArrayOutput
}

type AlarmGroupFwPolicyViolationArray []AlarmGroupFwPolicyViolationInput

func (AlarmGroupFwPolicyViolationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (i AlarmGroupFwPolicyViolationArray) ToAlarmGroupFwPolicyViolationArrayOutput() AlarmGroupFwPolicyViolationArrayOutput {
	return i.ToAlarmGroupFwPolicyViolationArrayOutputWithContext(context.Background())
}

func (i AlarmGroupFwPolicyViolationArray) ToAlarmGroupFwPolicyViolationArrayOutputWithContext(ctx context.Context) AlarmGroupFwPolicyViolationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmGroupFwPolicyViolationArrayOutput)
}

type AlarmGroupFwPolicyViolationOutput struct{ *pulumi.OutputState }

func (AlarmGroupFwPolicyViolationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (o AlarmGroupFwPolicyViolationOutput) ToAlarmGroupFwPolicyViolationOutput() AlarmGroupFwPolicyViolationOutput {
	return o
}

func (o AlarmGroupFwPolicyViolationOutput) ToAlarmGroupFwPolicyViolationOutputWithContext(ctx context.Context) AlarmGroupFwPolicyViolationOutput {
	return o
}

// Destination IP (0=all).
func (o AlarmGroupFwPolicyViolationOutput) DstIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmGroupFwPolicyViolation) *string { return v.DstIp }).(pulumi.StringPtrOutput)
}

// Destination port (0=all).
func (o AlarmGroupFwPolicyViolationOutput) DstPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroupFwPolicyViolation) *int { return v.DstPort }).(pulumi.IntPtrOutput)
}

// Firewall policy violations ID.
func (o AlarmGroupFwPolicyViolationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroupFwPolicyViolation) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Source IP (0=all).
func (o AlarmGroupFwPolicyViolationOutput) SrcIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmGroupFwPolicyViolation) *string { return v.SrcIp }).(pulumi.StringPtrOutput)
}

// Source port (0=all).
func (o AlarmGroupFwPolicyViolationOutput) SrcPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroupFwPolicyViolation) *int { return v.SrcPort }).(pulumi.IntPtrOutput)
}

// Firewall policy violation threshold.
func (o AlarmGroupFwPolicyViolationOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmGroupFwPolicyViolation) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

type AlarmGroupFwPolicyViolationArrayOutput struct{ *pulumi.OutputState }

func (AlarmGroupFwPolicyViolationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (o AlarmGroupFwPolicyViolationArrayOutput) ToAlarmGroupFwPolicyViolationArrayOutput() AlarmGroupFwPolicyViolationArrayOutput {
	return o
}

func (o AlarmGroupFwPolicyViolationArrayOutput) ToAlarmGroupFwPolicyViolationArrayOutputWithContext(ctx context.Context) AlarmGroupFwPolicyViolationArrayOutput {
	return o
}

func (o AlarmGroupFwPolicyViolationArrayOutput) Index(i pulumi.IntInput) AlarmGroupFwPolicyViolationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmGroupFwPolicyViolation {
		return vs[0].([]AlarmGroupFwPolicyViolation)[vs[1].(int)]
	}).(AlarmGroupFwPolicyViolationOutput)
}

type ApiuserSettingTrusthost struct {
	Ipv4Trusthost string `pulumi:"ipv4Trusthost"`
	Type          string `pulumi:"type"`
}

// ApiuserSettingTrusthostInput is an input type that accepts ApiuserSettingTrusthostArgs and ApiuserSettingTrusthostOutput values.
// You can construct a concrete instance of `ApiuserSettingTrusthostInput` via:
//
//	ApiuserSettingTrusthostArgs{...}
type ApiuserSettingTrusthostInput interface {
	pulumi.Input

	ToApiuserSettingTrusthostOutput() ApiuserSettingTrusthostOutput
	ToApiuserSettingTrusthostOutputWithContext(context.Context) ApiuserSettingTrusthostOutput
}

type ApiuserSettingTrusthostArgs struct {
	Ipv4Trusthost pulumi.StringInput `pulumi:"ipv4Trusthost"`
	Type          pulumi.StringInput `pulumi:"type"`
}

func (ApiuserSettingTrusthostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiuserSettingTrusthost)(nil)).Elem()
}

func (i ApiuserSettingTrusthostArgs) ToApiuserSettingTrusthostOutput() ApiuserSettingTrusthostOutput {
	return i.ToApiuserSettingTrusthostOutputWithContext(context.Background())
}

func (i ApiuserSettingTrusthostArgs) ToApiuserSettingTrusthostOutputWithContext(ctx context.Context) ApiuserSettingTrusthostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiuserSettingTrusthostOutput)
}

// ApiuserSettingTrusthostArrayInput is an input type that accepts ApiuserSettingTrusthostArray and ApiuserSettingTrusthostArrayOutput values.
// You can construct a concrete instance of `ApiuserSettingTrusthostArrayInput` via:
//
//	ApiuserSettingTrusthostArray{ ApiuserSettingTrusthostArgs{...} }
type ApiuserSettingTrusthostArrayInput interface {
	pulumi.Input

	ToApiuserSettingTrusthostArrayOutput() ApiuserSettingTrusthostArrayOutput
	ToApiuserSettingTrusthostArrayOutputWithContext(context.Context) ApiuserSettingTrusthostArrayOutput
}

type ApiuserSettingTrusthostArray []ApiuserSettingTrusthostInput

func (ApiuserSettingTrusthostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiuserSettingTrusthost)(nil)).Elem()
}

func (i ApiuserSettingTrusthostArray) ToApiuserSettingTrusthostArrayOutput() ApiuserSettingTrusthostArrayOutput {
	return i.ToApiuserSettingTrusthostArrayOutputWithContext(context.Background())
}

func (i ApiuserSettingTrusthostArray) ToApiuserSettingTrusthostArrayOutputWithContext(ctx context.Context) ApiuserSettingTrusthostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiuserSettingTrusthostArrayOutput)
}

type ApiuserSettingTrusthostOutput struct{ *pulumi.OutputState }

func (ApiuserSettingTrusthostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiuserSettingTrusthost)(nil)).Elem()
}

func (o ApiuserSettingTrusthostOutput) ToApiuserSettingTrusthostOutput() ApiuserSettingTrusthostOutput {
	return o
}

func (o ApiuserSettingTrusthostOutput) ToApiuserSettingTrusthostOutputWithContext(ctx context.Context) ApiuserSettingTrusthostOutput {
	return o
}

func (o ApiuserSettingTrusthostOutput) Ipv4Trusthost() pulumi.StringOutput {
	return o.ApplyT(func(v ApiuserSettingTrusthost) string { return v.Ipv4Trusthost }).(pulumi.StringOutput)
}

func (o ApiuserSettingTrusthostOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiuserSettingTrusthost) string { return v.Type }).(pulumi.StringOutput)
}

type ApiuserSettingTrusthostArrayOutput struct{ *pulumi.OutputState }

func (ApiuserSettingTrusthostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiuserSettingTrusthost)(nil)).Elem()
}

func (o ApiuserSettingTrusthostArrayOutput) ToApiuserSettingTrusthostArrayOutput() ApiuserSettingTrusthostArrayOutput {
	return o
}

func (o ApiuserSettingTrusthostArrayOutput) ToApiuserSettingTrusthostArrayOutputWithContext(ctx context.Context) ApiuserSettingTrusthostArrayOutput {
	return o
}

func (o ApiuserSettingTrusthostArrayOutput) Index(i pulumi.IntInput) ApiuserSettingTrusthostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiuserSettingTrusthost {
		return vs[0].([]ApiuserSettingTrusthost)[vs[1].(int)]
	}).(ApiuserSettingTrusthostOutput)
}

type ApiuserTrusthost struct {
	// Table ID.
	Id *int `pulumi:"id"`
	// IPv4 trusted host address.
	Ipv4Trusthost *string `pulumi:"ipv4Trusthost"`
	// IPv6 trusted host address.
	Ipv6Trusthost *string `pulumi:"ipv6Trusthost"`
	// Trusthost type. Valid values: `ipv4-trusthost`, `ipv6-trusthost`.
	Type *string `pulumi:"type"`
}

// ApiuserTrusthostInput is an input type that accepts ApiuserTrusthostArgs and ApiuserTrusthostOutput values.
// You can construct a concrete instance of `ApiuserTrusthostInput` via:
//
//	ApiuserTrusthostArgs{...}
type ApiuserTrusthostInput interface {
	pulumi.Input

	ToApiuserTrusthostOutput() ApiuserTrusthostOutput
	ToApiuserTrusthostOutputWithContext(context.Context) ApiuserTrusthostOutput
}

type ApiuserTrusthostArgs struct {
	// Table ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 trusted host address.
	Ipv4Trusthost pulumi.StringPtrInput `pulumi:"ipv4Trusthost"`
	// IPv6 trusted host address.
	Ipv6Trusthost pulumi.StringPtrInput `pulumi:"ipv6Trusthost"`
	// Trusthost type. Valid values: `ipv4-trusthost`, `ipv6-trusthost`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApiuserTrusthostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiuserTrusthost)(nil)).Elem()
}

func (i ApiuserTrusthostArgs) ToApiuserTrusthostOutput() ApiuserTrusthostOutput {
	return i.ToApiuserTrusthostOutputWithContext(context.Background())
}

func (i ApiuserTrusthostArgs) ToApiuserTrusthostOutputWithContext(ctx context.Context) ApiuserTrusthostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiuserTrusthostOutput)
}

// ApiuserTrusthostArrayInput is an input type that accepts ApiuserTrusthostArray and ApiuserTrusthostArrayOutput values.
// You can construct a concrete instance of `ApiuserTrusthostArrayInput` via:
//
//	ApiuserTrusthostArray{ ApiuserTrusthostArgs{...} }
type ApiuserTrusthostArrayInput interface {
	pulumi.Input

	ToApiuserTrusthostArrayOutput() ApiuserTrusthostArrayOutput
	ToApiuserTrusthostArrayOutputWithContext(context.Context) ApiuserTrusthostArrayOutput
}

type ApiuserTrusthostArray []ApiuserTrusthostInput

func (ApiuserTrusthostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiuserTrusthost)(nil)).Elem()
}

func (i ApiuserTrusthostArray) ToApiuserTrusthostArrayOutput() ApiuserTrusthostArrayOutput {
	return i.ToApiuserTrusthostArrayOutputWithContext(context.Background())
}

func (i ApiuserTrusthostArray) ToApiuserTrusthostArrayOutputWithContext(ctx context.Context) ApiuserTrusthostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiuserTrusthostArrayOutput)
}

type ApiuserTrusthostOutput struct{ *pulumi.OutputState }

func (ApiuserTrusthostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiuserTrusthost)(nil)).Elem()
}

func (o ApiuserTrusthostOutput) ToApiuserTrusthostOutput() ApiuserTrusthostOutput {
	return o
}

func (o ApiuserTrusthostOutput) ToApiuserTrusthostOutputWithContext(ctx context.Context) ApiuserTrusthostOutput {
	return o
}

// Table ID.
func (o ApiuserTrusthostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiuserTrusthost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 trusted host address.
func (o ApiuserTrusthostOutput) Ipv4Trusthost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiuserTrusthost) *string { return v.Ipv4Trusthost }).(pulumi.StringPtrOutput)
}

// IPv6 trusted host address.
func (o ApiuserTrusthostOutput) Ipv6Trusthost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiuserTrusthost) *string { return v.Ipv6Trusthost }).(pulumi.StringPtrOutput)
}

// Trusthost type. Valid values: `ipv4-trusthost`, `ipv6-trusthost`.
func (o ApiuserTrusthostOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiuserTrusthost) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApiuserTrusthostArrayOutput struct{ *pulumi.OutputState }

func (ApiuserTrusthostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiuserTrusthost)(nil)).Elem()
}

func (o ApiuserTrusthostArrayOutput) ToApiuserTrusthostArrayOutput() ApiuserTrusthostArrayOutput {
	return o
}

func (o ApiuserTrusthostArrayOutput) ToApiuserTrusthostArrayOutputWithContext(ctx context.Context) ApiuserTrusthostArrayOutput {
	return o
}

func (o ApiuserTrusthostArrayOutput) Index(i pulumi.IntInput) ApiuserTrusthostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiuserTrusthost {
		return vs[0].([]ApiuserTrusthost)[vs[1].(int)]
	}).(ApiuserTrusthostOutput)
}

type ApiuserVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// ApiuserVdomInput is an input type that accepts ApiuserVdomArgs and ApiuserVdomOutput values.
// You can construct a concrete instance of `ApiuserVdomInput` via:
//
//	ApiuserVdomArgs{...}
type ApiuserVdomInput interface {
	pulumi.Input

	ToApiuserVdomOutput() ApiuserVdomOutput
	ToApiuserVdomOutputWithContext(context.Context) ApiuserVdomOutput
}

type ApiuserVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApiuserVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiuserVdom)(nil)).Elem()
}

func (i ApiuserVdomArgs) ToApiuserVdomOutput() ApiuserVdomOutput {
	return i.ToApiuserVdomOutputWithContext(context.Background())
}

func (i ApiuserVdomArgs) ToApiuserVdomOutputWithContext(ctx context.Context) ApiuserVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiuserVdomOutput)
}

// ApiuserVdomArrayInput is an input type that accepts ApiuserVdomArray and ApiuserVdomArrayOutput values.
// You can construct a concrete instance of `ApiuserVdomArrayInput` via:
//
//	ApiuserVdomArray{ ApiuserVdomArgs{...} }
type ApiuserVdomArrayInput interface {
	pulumi.Input

	ToApiuserVdomArrayOutput() ApiuserVdomArrayOutput
	ToApiuserVdomArrayOutputWithContext(context.Context) ApiuserVdomArrayOutput
}

type ApiuserVdomArray []ApiuserVdomInput

func (ApiuserVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiuserVdom)(nil)).Elem()
}

func (i ApiuserVdomArray) ToApiuserVdomArrayOutput() ApiuserVdomArrayOutput {
	return i.ToApiuserVdomArrayOutputWithContext(context.Background())
}

func (i ApiuserVdomArray) ToApiuserVdomArrayOutputWithContext(ctx context.Context) ApiuserVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiuserVdomArrayOutput)
}

type ApiuserVdomOutput struct{ *pulumi.OutputState }

func (ApiuserVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiuserVdom)(nil)).Elem()
}

func (o ApiuserVdomOutput) ToApiuserVdomOutput() ApiuserVdomOutput {
	return o
}

func (o ApiuserVdomOutput) ToApiuserVdomOutputWithContext(ctx context.Context) ApiuserVdomOutput {
	return o
}

// Virtual domain name.
func (o ApiuserVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiuserVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApiuserVdomArrayOutput struct{ *pulumi.OutputState }

func (ApiuserVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiuserVdom)(nil)).Elem()
}

func (o ApiuserVdomArrayOutput) ToApiuserVdomArrayOutput() ApiuserVdomArrayOutput {
	return o
}

func (o ApiuserVdomArrayOutput) ToApiuserVdomArrayOutputWithContext(ctx context.Context) ApiuserVdomArrayOutput {
	return o
}

func (o ApiuserVdomArrayOutput) Index(i pulumi.IntInput) ApiuserVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiuserVdom {
		return vs[0].([]ApiuserVdom)[vs[1].(int)]
	}).(ApiuserVdomOutput)
}

type AutomationactionEmailTo struct {
	// Email address.
	Name *string `pulumi:"name"`
}

// AutomationactionEmailToInput is an input type that accepts AutomationactionEmailToArgs and AutomationactionEmailToOutput values.
// You can construct a concrete instance of `AutomationactionEmailToInput` via:
//
//	AutomationactionEmailToArgs{...}
type AutomationactionEmailToInput interface {
	pulumi.Input

	ToAutomationactionEmailToOutput() AutomationactionEmailToOutput
	ToAutomationactionEmailToOutputWithContext(context.Context) AutomationactionEmailToOutput
}

type AutomationactionEmailToArgs struct {
	// Email address.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AutomationactionEmailToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationactionEmailTo)(nil)).Elem()
}

func (i AutomationactionEmailToArgs) ToAutomationactionEmailToOutput() AutomationactionEmailToOutput {
	return i.ToAutomationactionEmailToOutputWithContext(context.Background())
}

func (i AutomationactionEmailToArgs) ToAutomationactionEmailToOutputWithContext(ctx context.Context) AutomationactionEmailToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationactionEmailToOutput)
}

// AutomationactionEmailToArrayInput is an input type that accepts AutomationactionEmailToArray and AutomationactionEmailToArrayOutput values.
// You can construct a concrete instance of `AutomationactionEmailToArrayInput` via:
//
//	AutomationactionEmailToArray{ AutomationactionEmailToArgs{...} }
type AutomationactionEmailToArrayInput interface {
	pulumi.Input

	ToAutomationactionEmailToArrayOutput() AutomationactionEmailToArrayOutput
	ToAutomationactionEmailToArrayOutputWithContext(context.Context) AutomationactionEmailToArrayOutput
}

type AutomationactionEmailToArray []AutomationactionEmailToInput

func (AutomationactionEmailToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationactionEmailTo)(nil)).Elem()
}

func (i AutomationactionEmailToArray) ToAutomationactionEmailToArrayOutput() AutomationactionEmailToArrayOutput {
	return i.ToAutomationactionEmailToArrayOutputWithContext(context.Background())
}

func (i AutomationactionEmailToArray) ToAutomationactionEmailToArrayOutputWithContext(ctx context.Context) AutomationactionEmailToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationactionEmailToArrayOutput)
}

type AutomationactionEmailToOutput struct{ *pulumi.OutputState }

func (AutomationactionEmailToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationactionEmailTo)(nil)).Elem()
}

func (o AutomationactionEmailToOutput) ToAutomationactionEmailToOutput() AutomationactionEmailToOutput {
	return o
}

func (o AutomationactionEmailToOutput) ToAutomationactionEmailToOutputWithContext(ctx context.Context) AutomationactionEmailToOutput {
	return o
}

// Email address.
func (o AutomationactionEmailToOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationactionEmailTo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AutomationactionEmailToArrayOutput struct{ *pulumi.OutputState }

func (AutomationactionEmailToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationactionEmailTo)(nil)).Elem()
}

func (o AutomationactionEmailToArrayOutput) ToAutomationactionEmailToArrayOutput() AutomationactionEmailToArrayOutput {
	return o
}

func (o AutomationactionEmailToArrayOutput) ToAutomationactionEmailToArrayOutputWithContext(ctx context.Context) AutomationactionEmailToArrayOutput {
	return o
}

func (o AutomationactionEmailToArrayOutput) Index(i pulumi.IntInput) AutomationactionEmailToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationactionEmailTo {
		return vs[0].([]AutomationactionEmailTo)[vs[1].(int)]
	}).(AutomationactionEmailToOutput)
}

type AutomationactionHeader struct {
	// Request header.
	Header *string `pulumi:"header"`
}

// AutomationactionHeaderInput is an input type that accepts AutomationactionHeaderArgs and AutomationactionHeaderOutput values.
// You can construct a concrete instance of `AutomationactionHeaderInput` via:
//
//	AutomationactionHeaderArgs{...}
type AutomationactionHeaderInput interface {
	pulumi.Input

	ToAutomationactionHeaderOutput() AutomationactionHeaderOutput
	ToAutomationactionHeaderOutputWithContext(context.Context) AutomationactionHeaderOutput
}

type AutomationactionHeaderArgs struct {
	// Request header.
	Header pulumi.StringPtrInput `pulumi:"header"`
}

func (AutomationactionHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationactionHeader)(nil)).Elem()
}

func (i AutomationactionHeaderArgs) ToAutomationactionHeaderOutput() AutomationactionHeaderOutput {
	return i.ToAutomationactionHeaderOutputWithContext(context.Background())
}

func (i AutomationactionHeaderArgs) ToAutomationactionHeaderOutputWithContext(ctx context.Context) AutomationactionHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationactionHeaderOutput)
}

// AutomationactionHeaderArrayInput is an input type that accepts AutomationactionHeaderArray and AutomationactionHeaderArrayOutput values.
// You can construct a concrete instance of `AutomationactionHeaderArrayInput` via:
//
//	AutomationactionHeaderArray{ AutomationactionHeaderArgs{...} }
type AutomationactionHeaderArrayInput interface {
	pulumi.Input

	ToAutomationactionHeaderArrayOutput() AutomationactionHeaderArrayOutput
	ToAutomationactionHeaderArrayOutputWithContext(context.Context) AutomationactionHeaderArrayOutput
}

type AutomationactionHeaderArray []AutomationactionHeaderInput

func (AutomationactionHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationactionHeader)(nil)).Elem()
}

func (i AutomationactionHeaderArray) ToAutomationactionHeaderArrayOutput() AutomationactionHeaderArrayOutput {
	return i.ToAutomationactionHeaderArrayOutputWithContext(context.Background())
}

func (i AutomationactionHeaderArray) ToAutomationactionHeaderArrayOutputWithContext(ctx context.Context) AutomationactionHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationactionHeaderArrayOutput)
}

type AutomationactionHeaderOutput struct{ *pulumi.OutputState }

func (AutomationactionHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationactionHeader)(nil)).Elem()
}

func (o AutomationactionHeaderOutput) ToAutomationactionHeaderOutput() AutomationactionHeaderOutput {
	return o
}

func (o AutomationactionHeaderOutput) ToAutomationactionHeaderOutputWithContext(ctx context.Context) AutomationactionHeaderOutput {
	return o
}

// Request header.
func (o AutomationactionHeaderOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationactionHeader) *string { return v.Header }).(pulumi.StringPtrOutput)
}

type AutomationactionHeaderArrayOutput struct{ *pulumi.OutputState }

func (AutomationactionHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationactionHeader)(nil)).Elem()
}

func (o AutomationactionHeaderArrayOutput) ToAutomationactionHeaderArrayOutput() AutomationactionHeaderArrayOutput {
	return o
}

func (o AutomationactionHeaderArrayOutput) ToAutomationactionHeaderArrayOutputWithContext(ctx context.Context) AutomationactionHeaderArrayOutput {
	return o
}

func (o AutomationactionHeaderArrayOutput) Index(i pulumi.IntInput) AutomationactionHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationactionHeader {
		return vs[0].([]AutomationactionHeader)[vs[1].(int)]
	}).(AutomationactionHeaderOutput)
}

type AutomationactionHttpHeader struct {
	// Entry ID.
	Id *int `pulumi:"id"`
	// Request header key.
	Key *string `pulumi:"key"`
	// Request header value.
	Value *string `pulumi:"value"`
}

// AutomationactionHttpHeaderInput is an input type that accepts AutomationactionHttpHeaderArgs and AutomationactionHttpHeaderOutput values.
// You can construct a concrete instance of `AutomationactionHttpHeaderInput` via:
//
//	AutomationactionHttpHeaderArgs{...}
type AutomationactionHttpHeaderInput interface {
	pulumi.Input

	ToAutomationactionHttpHeaderOutput() AutomationactionHttpHeaderOutput
	ToAutomationactionHttpHeaderOutputWithContext(context.Context) AutomationactionHttpHeaderOutput
}

type AutomationactionHttpHeaderArgs struct {
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Request header key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Request header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AutomationactionHttpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationactionHttpHeader)(nil)).Elem()
}

func (i AutomationactionHttpHeaderArgs) ToAutomationactionHttpHeaderOutput() AutomationactionHttpHeaderOutput {
	return i.ToAutomationactionHttpHeaderOutputWithContext(context.Background())
}

func (i AutomationactionHttpHeaderArgs) ToAutomationactionHttpHeaderOutputWithContext(ctx context.Context) AutomationactionHttpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationactionHttpHeaderOutput)
}

// AutomationactionHttpHeaderArrayInput is an input type that accepts AutomationactionHttpHeaderArray and AutomationactionHttpHeaderArrayOutput values.
// You can construct a concrete instance of `AutomationactionHttpHeaderArrayInput` via:
//
//	AutomationactionHttpHeaderArray{ AutomationactionHttpHeaderArgs{...} }
type AutomationactionHttpHeaderArrayInput interface {
	pulumi.Input

	ToAutomationactionHttpHeaderArrayOutput() AutomationactionHttpHeaderArrayOutput
	ToAutomationactionHttpHeaderArrayOutputWithContext(context.Context) AutomationactionHttpHeaderArrayOutput
}

type AutomationactionHttpHeaderArray []AutomationactionHttpHeaderInput

func (AutomationactionHttpHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationactionHttpHeader)(nil)).Elem()
}

func (i AutomationactionHttpHeaderArray) ToAutomationactionHttpHeaderArrayOutput() AutomationactionHttpHeaderArrayOutput {
	return i.ToAutomationactionHttpHeaderArrayOutputWithContext(context.Background())
}

func (i AutomationactionHttpHeaderArray) ToAutomationactionHttpHeaderArrayOutputWithContext(ctx context.Context) AutomationactionHttpHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationactionHttpHeaderArrayOutput)
}

type AutomationactionHttpHeaderOutput struct{ *pulumi.OutputState }

func (AutomationactionHttpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationactionHttpHeader)(nil)).Elem()
}

func (o AutomationactionHttpHeaderOutput) ToAutomationactionHttpHeaderOutput() AutomationactionHttpHeaderOutput {
	return o
}

func (o AutomationactionHttpHeaderOutput) ToAutomationactionHttpHeaderOutputWithContext(ctx context.Context) AutomationactionHttpHeaderOutput {
	return o
}

// Entry ID.
func (o AutomationactionHttpHeaderOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutomationactionHttpHeader) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Request header key.
func (o AutomationactionHttpHeaderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationactionHttpHeader) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Request header value.
func (o AutomationactionHttpHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationactionHttpHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AutomationactionHttpHeaderArrayOutput struct{ *pulumi.OutputState }

func (AutomationactionHttpHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationactionHttpHeader)(nil)).Elem()
}

func (o AutomationactionHttpHeaderArrayOutput) ToAutomationactionHttpHeaderArrayOutput() AutomationactionHttpHeaderArrayOutput {
	return o
}

func (o AutomationactionHttpHeaderArrayOutput) ToAutomationactionHttpHeaderArrayOutputWithContext(ctx context.Context) AutomationactionHttpHeaderArrayOutput {
	return o
}

func (o AutomationactionHttpHeaderArrayOutput) Index(i pulumi.IntInput) AutomationactionHttpHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationactionHttpHeader {
		return vs[0].([]AutomationactionHttpHeader)[vs[1].(int)]
	}).(AutomationactionHttpHeaderOutput)
}

type AutomationactionSdnConnector struct {
	// SDN connector name.
	Name *string `pulumi:"name"`
}

// AutomationactionSdnConnectorInput is an input type that accepts AutomationactionSdnConnectorArgs and AutomationactionSdnConnectorOutput values.
// You can construct a concrete instance of `AutomationactionSdnConnectorInput` via:
//
//	AutomationactionSdnConnectorArgs{...}
type AutomationactionSdnConnectorInput interface {
	pulumi.Input

	ToAutomationactionSdnConnectorOutput() AutomationactionSdnConnectorOutput
	ToAutomationactionSdnConnectorOutputWithContext(context.Context) AutomationactionSdnConnectorOutput
}

type AutomationactionSdnConnectorArgs struct {
	// SDN connector name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AutomationactionSdnConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationactionSdnConnector)(nil)).Elem()
}

func (i AutomationactionSdnConnectorArgs) ToAutomationactionSdnConnectorOutput() AutomationactionSdnConnectorOutput {
	return i.ToAutomationactionSdnConnectorOutputWithContext(context.Background())
}

func (i AutomationactionSdnConnectorArgs) ToAutomationactionSdnConnectorOutputWithContext(ctx context.Context) AutomationactionSdnConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationactionSdnConnectorOutput)
}

// AutomationactionSdnConnectorArrayInput is an input type that accepts AutomationactionSdnConnectorArray and AutomationactionSdnConnectorArrayOutput values.
// You can construct a concrete instance of `AutomationactionSdnConnectorArrayInput` via:
//
//	AutomationactionSdnConnectorArray{ AutomationactionSdnConnectorArgs{...} }
type AutomationactionSdnConnectorArrayInput interface {
	pulumi.Input

	ToAutomationactionSdnConnectorArrayOutput() AutomationactionSdnConnectorArrayOutput
	ToAutomationactionSdnConnectorArrayOutputWithContext(context.Context) AutomationactionSdnConnectorArrayOutput
}

type AutomationactionSdnConnectorArray []AutomationactionSdnConnectorInput

func (AutomationactionSdnConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationactionSdnConnector)(nil)).Elem()
}

func (i AutomationactionSdnConnectorArray) ToAutomationactionSdnConnectorArrayOutput() AutomationactionSdnConnectorArrayOutput {
	return i.ToAutomationactionSdnConnectorArrayOutputWithContext(context.Background())
}

func (i AutomationactionSdnConnectorArray) ToAutomationactionSdnConnectorArrayOutputWithContext(ctx context.Context) AutomationactionSdnConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationactionSdnConnectorArrayOutput)
}

type AutomationactionSdnConnectorOutput struct{ *pulumi.OutputState }

func (AutomationactionSdnConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationactionSdnConnector)(nil)).Elem()
}

func (o AutomationactionSdnConnectorOutput) ToAutomationactionSdnConnectorOutput() AutomationactionSdnConnectorOutput {
	return o
}

func (o AutomationactionSdnConnectorOutput) ToAutomationactionSdnConnectorOutputWithContext(ctx context.Context) AutomationactionSdnConnectorOutput {
	return o
}

// SDN connector name.
func (o AutomationactionSdnConnectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationactionSdnConnector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AutomationactionSdnConnectorArrayOutput struct{ *pulumi.OutputState }

func (AutomationactionSdnConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationactionSdnConnector)(nil)).Elem()
}

func (o AutomationactionSdnConnectorArrayOutput) ToAutomationactionSdnConnectorArrayOutput() AutomationactionSdnConnectorArrayOutput {
	return o
}

func (o AutomationactionSdnConnectorArrayOutput) ToAutomationactionSdnConnectorArrayOutputWithContext(ctx context.Context) AutomationactionSdnConnectorArrayOutput {
	return o
}

func (o AutomationactionSdnConnectorArrayOutput) Index(i pulumi.IntInput) AutomationactionSdnConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationactionSdnConnector {
		return vs[0].([]AutomationactionSdnConnector)[vs[1].(int)]
	}).(AutomationactionSdnConnectorOutput)
}

type AutomationdestinationDestination struct {
	// Destination.
	Name *string `pulumi:"name"`
}

// AutomationdestinationDestinationInput is an input type that accepts AutomationdestinationDestinationArgs and AutomationdestinationDestinationOutput values.
// You can construct a concrete instance of `AutomationdestinationDestinationInput` via:
//
//	AutomationdestinationDestinationArgs{...}
type AutomationdestinationDestinationInput interface {
	pulumi.Input

	ToAutomationdestinationDestinationOutput() AutomationdestinationDestinationOutput
	ToAutomationdestinationDestinationOutputWithContext(context.Context) AutomationdestinationDestinationOutput
}

type AutomationdestinationDestinationArgs struct {
	// Destination.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AutomationdestinationDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationdestinationDestination)(nil)).Elem()
}

func (i AutomationdestinationDestinationArgs) ToAutomationdestinationDestinationOutput() AutomationdestinationDestinationOutput {
	return i.ToAutomationdestinationDestinationOutputWithContext(context.Background())
}

func (i AutomationdestinationDestinationArgs) ToAutomationdestinationDestinationOutputWithContext(ctx context.Context) AutomationdestinationDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationdestinationDestinationOutput)
}

// AutomationdestinationDestinationArrayInput is an input type that accepts AutomationdestinationDestinationArray and AutomationdestinationDestinationArrayOutput values.
// You can construct a concrete instance of `AutomationdestinationDestinationArrayInput` via:
//
//	AutomationdestinationDestinationArray{ AutomationdestinationDestinationArgs{...} }
type AutomationdestinationDestinationArrayInput interface {
	pulumi.Input

	ToAutomationdestinationDestinationArrayOutput() AutomationdestinationDestinationArrayOutput
	ToAutomationdestinationDestinationArrayOutputWithContext(context.Context) AutomationdestinationDestinationArrayOutput
}

type AutomationdestinationDestinationArray []AutomationdestinationDestinationInput

func (AutomationdestinationDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationdestinationDestination)(nil)).Elem()
}

func (i AutomationdestinationDestinationArray) ToAutomationdestinationDestinationArrayOutput() AutomationdestinationDestinationArrayOutput {
	return i.ToAutomationdestinationDestinationArrayOutputWithContext(context.Background())
}

func (i AutomationdestinationDestinationArray) ToAutomationdestinationDestinationArrayOutputWithContext(ctx context.Context) AutomationdestinationDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationdestinationDestinationArrayOutput)
}

type AutomationdestinationDestinationOutput struct{ *pulumi.OutputState }

func (AutomationdestinationDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationdestinationDestination)(nil)).Elem()
}

func (o AutomationdestinationDestinationOutput) ToAutomationdestinationDestinationOutput() AutomationdestinationDestinationOutput {
	return o
}

func (o AutomationdestinationDestinationOutput) ToAutomationdestinationDestinationOutputWithContext(ctx context.Context) AutomationdestinationDestinationOutput {
	return o
}

// Destination.
func (o AutomationdestinationDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationdestinationDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AutomationdestinationDestinationArrayOutput struct{ *pulumi.OutputState }

func (AutomationdestinationDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationdestinationDestination)(nil)).Elem()
}

func (o AutomationdestinationDestinationArrayOutput) ToAutomationdestinationDestinationArrayOutput() AutomationdestinationDestinationArrayOutput {
	return o
}

func (o AutomationdestinationDestinationArrayOutput) ToAutomationdestinationDestinationArrayOutputWithContext(ctx context.Context) AutomationdestinationDestinationArrayOutput {
	return o
}

func (o AutomationdestinationDestinationArrayOutput) Index(i pulumi.IntInput) AutomationdestinationDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationdestinationDestination {
		return vs[0].([]AutomationdestinationDestination)[vs[1].(int)]
	}).(AutomationdestinationDestinationOutput)
}

type AutomationstitchAction struct {
	// Action name.
	Action *string `pulumi:"action"`
	// Delay before execution (in seconds).
	Delay *int `pulumi:"delay"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Required in action chain. Valid values: `enable`, `disable`.
	Required *string `pulumi:"required"`
}

// AutomationstitchActionInput is an input type that accepts AutomationstitchActionArgs and AutomationstitchActionOutput values.
// You can construct a concrete instance of `AutomationstitchActionInput` via:
//
//	AutomationstitchActionArgs{...}
type AutomationstitchActionInput interface {
	pulumi.Input

	ToAutomationstitchActionOutput() AutomationstitchActionOutput
	ToAutomationstitchActionOutputWithContext(context.Context) AutomationstitchActionOutput
}

type AutomationstitchActionArgs struct {
	// Action name.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Delay before execution (in seconds).
	Delay pulumi.IntPtrInput `pulumi:"delay"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Required in action chain. Valid values: `enable`, `disable`.
	Required pulumi.StringPtrInput `pulumi:"required"`
}

func (AutomationstitchActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationstitchAction)(nil)).Elem()
}

func (i AutomationstitchActionArgs) ToAutomationstitchActionOutput() AutomationstitchActionOutput {
	return i.ToAutomationstitchActionOutputWithContext(context.Background())
}

func (i AutomationstitchActionArgs) ToAutomationstitchActionOutputWithContext(ctx context.Context) AutomationstitchActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationstitchActionOutput)
}

// AutomationstitchActionArrayInput is an input type that accepts AutomationstitchActionArray and AutomationstitchActionArrayOutput values.
// You can construct a concrete instance of `AutomationstitchActionArrayInput` via:
//
//	AutomationstitchActionArray{ AutomationstitchActionArgs{...} }
type AutomationstitchActionArrayInput interface {
	pulumi.Input

	ToAutomationstitchActionArrayOutput() AutomationstitchActionArrayOutput
	ToAutomationstitchActionArrayOutputWithContext(context.Context) AutomationstitchActionArrayOutput
}

type AutomationstitchActionArray []AutomationstitchActionInput

func (AutomationstitchActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationstitchAction)(nil)).Elem()
}

func (i AutomationstitchActionArray) ToAutomationstitchActionArrayOutput() AutomationstitchActionArrayOutput {
	return i.ToAutomationstitchActionArrayOutputWithContext(context.Background())
}

func (i AutomationstitchActionArray) ToAutomationstitchActionArrayOutputWithContext(ctx context.Context) AutomationstitchActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationstitchActionArrayOutput)
}

type AutomationstitchActionOutput struct{ *pulumi.OutputState }

func (AutomationstitchActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationstitchAction)(nil)).Elem()
}

func (o AutomationstitchActionOutput) ToAutomationstitchActionOutput() AutomationstitchActionOutput {
	return o
}

func (o AutomationstitchActionOutput) ToAutomationstitchActionOutputWithContext(ctx context.Context) AutomationstitchActionOutput {
	return o
}

// Action name.
func (o AutomationstitchActionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationstitchAction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Delay before execution (in seconds).
func (o AutomationstitchActionOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutomationstitchAction) *int { return v.Delay }).(pulumi.IntPtrOutput)
}

// Entry ID.
func (o AutomationstitchActionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutomationstitchAction) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Required in action chain. Valid values: `enable`, `disable`.
func (o AutomationstitchActionOutput) Required() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationstitchAction) *string { return v.Required }).(pulumi.StringPtrOutput)
}

type AutomationstitchActionArrayOutput struct{ *pulumi.OutputState }

func (AutomationstitchActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationstitchAction)(nil)).Elem()
}

func (o AutomationstitchActionArrayOutput) ToAutomationstitchActionArrayOutput() AutomationstitchActionArrayOutput {
	return o
}

func (o AutomationstitchActionArrayOutput) ToAutomationstitchActionArrayOutputWithContext(ctx context.Context) AutomationstitchActionArrayOutput {
	return o
}

func (o AutomationstitchActionArrayOutput) Index(i pulumi.IntInput) AutomationstitchActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationstitchAction {
		return vs[0].([]AutomationstitchAction)[vs[1].(int)]
	}).(AutomationstitchActionOutput)
}

type AutomationstitchDestination struct {
	// Destination name.
	Name *string `pulumi:"name"`
}

// AutomationstitchDestinationInput is an input type that accepts AutomationstitchDestinationArgs and AutomationstitchDestinationOutput values.
// You can construct a concrete instance of `AutomationstitchDestinationInput` via:
//
//	AutomationstitchDestinationArgs{...}
type AutomationstitchDestinationInput interface {
	pulumi.Input

	ToAutomationstitchDestinationOutput() AutomationstitchDestinationOutput
	ToAutomationstitchDestinationOutputWithContext(context.Context) AutomationstitchDestinationOutput
}

type AutomationstitchDestinationArgs struct {
	// Destination name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AutomationstitchDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationstitchDestination)(nil)).Elem()
}

func (i AutomationstitchDestinationArgs) ToAutomationstitchDestinationOutput() AutomationstitchDestinationOutput {
	return i.ToAutomationstitchDestinationOutputWithContext(context.Background())
}

func (i AutomationstitchDestinationArgs) ToAutomationstitchDestinationOutputWithContext(ctx context.Context) AutomationstitchDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationstitchDestinationOutput)
}

// AutomationstitchDestinationArrayInput is an input type that accepts AutomationstitchDestinationArray and AutomationstitchDestinationArrayOutput values.
// You can construct a concrete instance of `AutomationstitchDestinationArrayInput` via:
//
//	AutomationstitchDestinationArray{ AutomationstitchDestinationArgs{...} }
type AutomationstitchDestinationArrayInput interface {
	pulumi.Input

	ToAutomationstitchDestinationArrayOutput() AutomationstitchDestinationArrayOutput
	ToAutomationstitchDestinationArrayOutputWithContext(context.Context) AutomationstitchDestinationArrayOutput
}

type AutomationstitchDestinationArray []AutomationstitchDestinationInput

func (AutomationstitchDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationstitchDestination)(nil)).Elem()
}

func (i AutomationstitchDestinationArray) ToAutomationstitchDestinationArrayOutput() AutomationstitchDestinationArrayOutput {
	return i.ToAutomationstitchDestinationArrayOutputWithContext(context.Background())
}

func (i AutomationstitchDestinationArray) ToAutomationstitchDestinationArrayOutputWithContext(ctx context.Context) AutomationstitchDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationstitchDestinationArrayOutput)
}

type AutomationstitchDestinationOutput struct{ *pulumi.OutputState }

func (AutomationstitchDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationstitchDestination)(nil)).Elem()
}

func (o AutomationstitchDestinationOutput) ToAutomationstitchDestinationOutput() AutomationstitchDestinationOutput {
	return o
}

func (o AutomationstitchDestinationOutput) ToAutomationstitchDestinationOutputWithContext(ctx context.Context) AutomationstitchDestinationOutput {
	return o
}

// Destination name.
func (o AutomationstitchDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationstitchDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AutomationstitchDestinationArrayOutput struct{ *pulumi.OutputState }

func (AutomationstitchDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationstitchDestination)(nil)).Elem()
}

func (o AutomationstitchDestinationArrayOutput) ToAutomationstitchDestinationArrayOutput() AutomationstitchDestinationArrayOutput {
	return o
}

func (o AutomationstitchDestinationArrayOutput) ToAutomationstitchDestinationArrayOutputWithContext(ctx context.Context) AutomationstitchDestinationArrayOutput {
	return o
}

func (o AutomationstitchDestinationArrayOutput) Index(i pulumi.IntInput) AutomationstitchDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationstitchDestination {
		return vs[0].([]AutomationstitchDestination)[vs[1].(int)]
	}).(AutomationstitchDestinationOutput)
}

type AutomationtriggerField struct {
	// Entry ID.
	Id *int `pulumi:"id"`
	// Name.
	Name *string `pulumi:"name"`
	// Value.
	Value *string `pulumi:"value"`
}

// AutomationtriggerFieldInput is an input type that accepts AutomationtriggerFieldArgs and AutomationtriggerFieldOutput values.
// You can construct a concrete instance of `AutomationtriggerFieldInput` via:
//
//	AutomationtriggerFieldArgs{...}
type AutomationtriggerFieldInput interface {
	pulumi.Input

	ToAutomationtriggerFieldOutput() AutomationtriggerFieldOutput
	ToAutomationtriggerFieldOutputWithContext(context.Context) AutomationtriggerFieldOutput
}

type AutomationtriggerFieldArgs struct {
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AutomationtriggerFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationtriggerField)(nil)).Elem()
}

func (i AutomationtriggerFieldArgs) ToAutomationtriggerFieldOutput() AutomationtriggerFieldOutput {
	return i.ToAutomationtriggerFieldOutputWithContext(context.Background())
}

func (i AutomationtriggerFieldArgs) ToAutomationtriggerFieldOutputWithContext(ctx context.Context) AutomationtriggerFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationtriggerFieldOutput)
}

// AutomationtriggerFieldArrayInput is an input type that accepts AutomationtriggerFieldArray and AutomationtriggerFieldArrayOutput values.
// You can construct a concrete instance of `AutomationtriggerFieldArrayInput` via:
//
//	AutomationtriggerFieldArray{ AutomationtriggerFieldArgs{...} }
type AutomationtriggerFieldArrayInput interface {
	pulumi.Input

	ToAutomationtriggerFieldArrayOutput() AutomationtriggerFieldArrayOutput
	ToAutomationtriggerFieldArrayOutputWithContext(context.Context) AutomationtriggerFieldArrayOutput
}

type AutomationtriggerFieldArray []AutomationtriggerFieldInput

func (AutomationtriggerFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationtriggerField)(nil)).Elem()
}

func (i AutomationtriggerFieldArray) ToAutomationtriggerFieldArrayOutput() AutomationtriggerFieldArrayOutput {
	return i.ToAutomationtriggerFieldArrayOutputWithContext(context.Background())
}

func (i AutomationtriggerFieldArray) ToAutomationtriggerFieldArrayOutputWithContext(ctx context.Context) AutomationtriggerFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationtriggerFieldArrayOutput)
}

type AutomationtriggerFieldOutput struct{ *pulumi.OutputState }

func (AutomationtriggerFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationtriggerField)(nil)).Elem()
}

func (o AutomationtriggerFieldOutput) ToAutomationtriggerFieldOutput() AutomationtriggerFieldOutput {
	return o
}

func (o AutomationtriggerFieldOutput) ToAutomationtriggerFieldOutputWithContext(ctx context.Context) AutomationtriggerFieldOutput {
	return o
}

// Entry ID.
func (o AutomationtriggerFieldOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutomationtriggerField) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Name.
func (o AutomationtriggerFieldOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationtriggerField) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value.
func (o AutomationtriggerFieldOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationtriggerField) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AutomationtriggerFieldArrayOutput struct{ *pulumi.OutputState }

func (AutomationtriggerFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationtriggerField)(nil)).Elem()
}

func (o AutomationtriggerFieldArrayOutput) ToAutomationtriggerFieldArrayOutput() AutomationtriggerFieldArrayOutput {
	return o
}

func (o AutomationtriggerFieldArrayOutput) ToAutomationtriggerFieldArrayOutputWithContext(ctx context.Context) AutomationtriggerFieldArrayOutput {
	return o
}

func (o AutomationtriggerFieldArrayOutput) Index(i pulumi.IntInput) AutomationtriggerFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationtriggerField {
		return vs[0].([]AutomationtriggerField)[vs[1].(int)]
	}).(AutomationtriggerFieldOutput)
}

type AutomationtriggerLogidBlock struct {
	// Log ID.
	Id *int `pulumi:"id"`
}

// AutomationtriggerLogidBlockInput is an input type that accepts AutomationtriggerLogidBlockArgs and AutomationtriggerLogidBlockOutput values.
// You can construct a concrete instance of `AutomationtriggerLogidBlockInput` via:
//
//	AutomationtriggerLogidBlockArgs{...}
type AutomationtriggerLogidBlockInput interface {
	pulumi.Input

	ToAutomationtriggerLogidBlockOutput() AutomationtriggerLogidBlockOutput
	ToAutomationtriggerLogidBlockOutputWithContext(context.Context) AutomationtriggerLogidBlockOutput
}

type AutomationtriggerLogidBlockArgs struct {
	// Log ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (AutomationtriggerLogidBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationtriggerLogidBlock)(nil)).Elem()
}

func (i AutomationtriggerLogidBlockArgs) ToAutomationtriggerLogidBlockOutput() AutomationtriggerLogidBlockOutput {
	return i.ToAutomationtriggerLogidBlockOutputWithContext(context.Background())
}

func (i AutomationtriggerLogidBlockArgs) ToAutomationtriggerLogidBlockOutputWithContext(ctx context.Context) AutomationtriggerLogidBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationtriggerLogidBlockOutput)
}

// AutomationtriggerLogidBlockArrayInput is an input type that accepts AutomationtriggerLogidBlockArray and AutomationtriggerLogidBlockArrayOutput values.
// You can construct a concrete instance of `AutomationtriggerLogidBlockArrayInput` via:
//
//	AutomationtriggerLogidBlockArray{ AutomationtriggerLogidBlockArgs{...} }
type AutomationtriggerLogidBlockArrayInput interface {
	pulumi.Input

	ToAutomationtriggerLogidBlockArrayOutput() AutomationtriggerLogidBlockArrayOutput
	ToAutomationtriggerLogidBlockArrayOutputWithContext(context.Context) AutomationtriggerLogidBlockArrayOutput
}

type AutomationtriggerLogidBlockArray []AutomationtriggerLogidBlockInput

func (AutomationtriggerLogidBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationtriggerLogidBlock)(nil)).Elem()
}

func (i AutomationtriggerLogidBlockArray) ToAutomationtriggerLogidBlockArrayOutput() AutomationtriggerLogidBlockArrayOutput {
	return i.ToAutomationtriggerLogidBlockArrayOutputWithContext(context.Background())
}

func (i AutomationtriggerLogidBlockArray) ToAutomationtriggerLogidBlockArrayOutputWithContext(ctx context.Context) AutomationtriggerLogidBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationtriggerLogidBlockArrayOutput)
}

type AutomationtriggerLogidBlockOutput struct{ *pulumi.OutputState }

func (AutomationtriggerLogidBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationtriggerLogidBlock)(nil)).Elem()
}

func (o AutomationtriggerLogidBlockOutput) ToAutomationtriggerLogidBlockOutput() AutomationtriggerLogidBlockOutput {
	return o
}

func (o AutomationtriggerLogidBlockOutput) ToAutomationtriggerLogidBlockOutputWithContext(ctx context.Context) AutomationtriggerLogidBlockOutput {
	return o
}

// Log ID.
func (o AutomationtriggerLogidBlockOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutomationtriggerLogidBlock) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type AutomationtriggerLogidBlockArrayOutput struct{ *pulumi.OutputState }

func (AutomationtriggerLogidBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationtriggerLogidBlock)(nil)).Elem()
}

func (o AutomationtriggerLogidBlockArrayOutput) ToAutomationtriggerLogidBlockArrayOutput() AutomationtriggerLogidBlockArrayOutput {
	return o
}

func (o AutomationtriggerLogidBlockArrayOutput) ToAutomationtriggerLogidBlockArrayOutputWithContext(ctx context.Context) AutomationtriggerLogidBlockArrayOutput {
	return o
}

func (o AutomationtriggerLogidBlockArrayOutput) Index(i pulumi.IntInput) AutomationtriggerLogidBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationtriggerLogidBlock {
		return vs[0].([]AutomationtriggerLogidBlock)[vs[1].(int)]
	}).(AutomationtriggerLogidBlockOutput)
}

type AutomationtriggerVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// AutomationtriggerVdomInput is an input type that accepts AutomationtriggerVdomArgs and AutomationtriggerVdomOutput values.
// You can construct a concrete instance of `AutomationtriggerVdomInput` via:
//
//	AutomationtriggerVdomArgs{...}
type AutomationtriggerVdomInput interface {
	pulumi.Input

	ToAutomationtriggerVdomOutput() AutomationtriggerVdomOutput
	ToAutomationtriggerVdomOutputWithContext(context.Context) AutomationtriggerVdomOutput
}

type AutomationtriggerVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AutomationtriggerVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationtriggerVdom)(nil)).Elem()
}

func (i AutomationtriggerVdomArgs) ToAutomationtriggerVdomOutput() AutomationtriggerVdomOutput {
	return i.ToAutomationtriggerVdomOutputWithContext(context.Background())
}

func (i AutomationtriggerVdomArgs) ToAutomationtriggerVdomOutputWithContext(ctx context.Context) AutomationtriggerVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationtriggerVdomOutput)
}

// AutomationtriggerVdomArrayInput is an input type that accepts AutomationtriggerVdomArray and AutomationtriggerVdomArrayOutput values.
// You can construct a concrete instance of `AutomationtriggerVdomArrayInput` via:
//
//	AutomationtriggerVdomArray{ AutomationtriggerVdomArgs{...} }
type AutomationtriggerVdomArrayInput interface {
	pulumi.Input

	ToAutomationtriggerVdomArrayOutput() AutomationtriggerVdomArrayOutput
	ToAutomationtriggerVdomArrayOutputWithContext(context.Context) AutomationtriggerVdomArrayOutput
}

type AutomationtriggerVdomArray []AutomationtriggerVdomInput

func (AutomationtriggerVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationtriggerVdom)(nil)).Elem()
}

func (i AutomationtriggerVdomArray) ToAutomationtriggerVdomArrayOutput() AutomationtriggerVdomArrayOutput {
	return i.ToAutomationtriggerVdomArrayOutputWithContext(context.Background())
}

func (i AutomationtriggerVdomArray) ToAutomationtriggerVdomArrayOutputWithContext(ctx context.Context) AutomationtriggerVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationtriggerVdomArrayOutput)
}

type AutomationtriggerVdomOutput struct{ *pulumi.OutputState }

func (AutomationtriggerVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationtriggerVdom)(nil)).Elem()
}

func (o AutomationtriggerVdomOutput) ToAutomationtriggerVdomOutput() AutomationtriggerVdomOutput {
	return o
}

func (o AutomationtriggerVdomOutput) ToAutomationtriggerVdomOutputWithContext(ctx context.Context) AutomationtriggerVdomOutput {
	return o
}

// Virtual domain name.
func (o AutomationtriggerVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationtriggerVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AutomationtriggerVdomArrayOutput struct{ *pulumi.OutputState }

func (AutomationtriggerVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationtriggerVdom)(nil)).Elem()
}

func (o AutomationtriggerVdomArrayOutput) ToAutomationtriggerVdomArrayOutput() AutomationtriggerVdomArrayOutput {
	return o
}

func (o AutomationtriggerVdomArrayOutput) ToAutomationtriggerVdomArrayOutputWithContext(ctx context.Context) AutomationtriggerVdomArrayOutput {
	return o
}

func (o AutomationtriggerVdomArrayOutput) Index(i pulumi.IntInput) AutomationtriggerVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationtriggerVdom {
		return vs[0].([]AutomationtriggerVdom)[vs[1].(int)]
	}).(AutomationtriggerVdomOutput)
}

type CentralmanagementServerList struct {
	// Indicate whether the FortiGate communicates with the override server using an IPv4 address, an IPv6 address or a FQDN. Valid values: `ipv4`, `ipv6`, `fqdn`.
	AddrType *string `pulumi:"addrType"`
	// FQDN address of override server.
	Fqdn *string `pulumi:"fqdn"`
	// ID.
	Id *int `pulumi:"id"`
	// IPv4 address of override server.
	ServerAddress *string `pulumi:"serverAddress"`
	// IPv6 address of override server.
	ServerAddress6 *string `pulumi:"serverAddress6"`
	// FortiGuard service type.
	ServerType *string `pulumi:"serverType"`
}

// CentralmanagementServerListInput is an input type that accepts CentralmanagementServerListArgs and CentralmanagementServerListOutput values.
// You can construct a concrete instance of `CentralmanagementServerListInput` via:
//
//	CentralmanagementServerListArgs{...}
type CentralmanagementServerListInput interface {
	pulumi.Input

	ToCentralmanagementServerListOutput() CentralmanagementServerListOutput
	ToCentralmanagementServerListOutputWithContext(context.Context) CentralmanagementServerListOutput
}

type CentralmanagementServerListArgs struct {
	// Indicate whether the FortiGate communicates with the override server using an IPv4 address, an IPv6 address or a FQDN. Valid values: `ipv4`, `ipv6`, `fqdn`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// FQDN address of override server.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 address of override server.
	ServerAddress pulumi.StringPtrInput `pulumi:"serverAddress"`
	// IPv6 address of override server.
	ServerAddress6 pulumi.StringPtrInput `pulumi:"serverAddress6"`
	// FortiGuard service type.
	ServerType pulumi.StringPtrInput `pulumi:"serverType"`
}

func (CentralmanagementServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralmanagementServerList)(nil)).Elem()
}

func (i CentralmanagementServerListArgs) ToCentralmanagementServerListOutput() CentralmanagementServerListOutput {
	return i.ToCentralmanagementServerListOutputWithContext(context.Background())
}

func (i CentralmanagementServerListArgs) ToCentralmanagementServerListOutputWithContext(ctx context.Context) CentralmanagementServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralmanagementServerListOutput)
}

// CentralmanagementServerListArrayInput is an input type that accepts CentralmanagementServerListArray and CentralmanagementServerListArrayOutput values.
// You can construct a concrete instance of `CentralmanagementServerListArrayInput` via:
//
//	CentralmanagementServerListArray{ CentralmanagementServerListArgs{...} }
type CentralmanagementServerListArrayInput interface {
	pulumi.Input

	ToCentralmanagementServerListArrayOutput() CentralmanagementServerListArrayOutput
	ToCentralmanagementServerListArrayOutputWithContext(context.Context) CentralmanagementServerListArrayOutput
}

type CentralmanagementServerListArray []CentralmanagementServerListInput

func (CentralmanagementServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralmanagementServerList)(nil)).Elem()
}

func (i CentralmanagementServerListArray) ToCentralmanagementServerListArrayOutput() CentralmanagementServerListArrayOutput {
	return i.ToCentralmanagementServerListArrayOutputWithContext(context.Background())
}

func (i CentralmanagementServerListArray) ToCentralmanagementServerListArrayOutputWithContext(ctx context.Context) CentralmanagementServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralmanagementServerListArrayOutput)
}

type CentralmanagementServerListOutput struct{ *pulumi.OutputState }

func (CentralmanagementServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralmanagementServerList)(nil)).Elem()
}

func (o CentralmanagementServerListOutput) ToCentralmanagementServerListOutput() CentralmanagementServerListOutput {
	return o
}

func (o CentralmanagementServerListOutput) ToCentralmanagementServerListOutputWithContext(ctx context.Context) CentralmanagementServerListOutput {
	return o
}

// Indicate whether the FortiGate communicates with the override server using an IPv4 address, an IPv6 address or a FQDN. Valid values: `ipv4`, `ipv6`, `fqdn`.
func (o CentralmanagementServerListOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralmanagementServerList) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// FQDN address of override server.
func (o CentralmanagementServerListOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralmanagementServerList) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// ID.
func (o CentralmanagementServerListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CentralmanagementServerList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 address of override server.
func (o CentralmanagementServerListOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralmanagementServerList) *string { return v.ServerAddress }).(pulumi.StringPtrOutput)
}

// IPv6 address of override server.
func (o CentralmanagementServerListOutput) ServerAddress6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralmanagementServerList) *string { return v.ServerAddress6 }).(pulumi.StringPtrOutput)
}

// FortiGuard service type.
func (o CentralmanagementServerListOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralmanagementServerList) *string { return v.ServerType }).(pulumi.StringPtrOutput)
}

type CentralmanagementServerListArrayOutput struct{ *pulumi.OutputState }

func (CentralmanagementServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralmanagementServerList)(nil)).Elem()
}

func (o CentralmanagementServerListArrayOutput) ToCentralmanagementServerListArrayOutput() CentralmanagementServerListArrayOutput {
	return o
}

func (o CentralmanagementServerListArrayOutput) ToCentralmanagementServerListArrayOutputWithContext(ctx context.Context) CentralmanagementServerListArrayOutput {
	return o
}

func (o CentralmanagementServerListArrayOutput) Index(i pulumi.IntInput) CentralmanagementServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CentralmanagementServerList {
		return vs[0].([]CentralmanagementServerList)[vs[1].(int)]
	}).(CentralmanagementServerListOutput)
}

type ClustersyncDownIntfsBeforeSessSync struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// ClustersyncDownIntfsBeforeSessSyncInput is an input type that accepts ClustersyncDownIntfsBeforeSessSyncArgs and ClustersyncDownIntfsBeforeSessSyncOutput values.
// You can construct a concrete instance of `ClustersyncDownIntfsBeforeSessSyncInput` via:
//
//	ClustersyncDownIntfsBeforeSessSyncArgs{...}
type ClustersyncDownIntfsBeforeSessSyncInput interface {
	pulumi.Input

	ToClustersyncDownIntfsBeforeSessSyncOutput() ClustersyncDownIntfsBeforeSessSyncOutput
	ToClustersyncDownIntfsBeforeSessSyncOutputWithContext(context.Context) ClustersyncDownIntfsBeforeSessSyncOutput
}

type ClustersyncDownIntfsBeforeSessSyncArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ClustersyncDownIntfsBeforeSessSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i ClustersyncDownIntfsBeforeSessSyncArgs) ToClustersyncDownIntfsBeforeSessSyncOutput() ClustersyncDownIntfsBeforeSessSyncOutput {
	return i.ToClustersyncDownIntfsBeforeSessSyncOutputWithContext(context.Background())
}

func (i ClustersyncDownIntfsBeforeSessSyncArgs) ToClustersyncDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) ClustersyncDownIntfsBeforeSessSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersyncDownIntfsBeforeSessSyncOutput)
}

// ClustersyncDownIntfsBeforeSessSyncArrayInput is an input type that accepts ClustersyncDownIntfsBeforeSessSyncArray and ClustersyncDownIntfsBeforeSessSyncArrayOutput values.
// You can construct a concrete instance of `ClustersyncDownIntfsBeforeSessSyncArrayInput` via:
//
//	ClustersyncDownIntfsBeforeSessSyncArray{ ClustersyncDownIntfsBeforeSessSyncArgs{...} }
type ClustersyncDownIntfsBeforeSessSyncArrayInput interface {
	pulumi.Input

	ToClustersyncDownIntfsBeforeSessSyncArrayOutput() ClustersyncDownIntfsBeforeSessSyncArrayOutput
	ToClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(context.Context) ClustersyncDownIntfsBeforeSessSyncArrayOutput
}

type ClustersyncDownIntfsBeforeSessSyncArray []ClustersyncDownIntfsBeforeSessSyncInput

func (ClustersyncDownIntfsBeforeSessSyncArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i ClustersyncDownIntfsBeforeSessSyncArray) ToClustersyncDownIntfsBeforeSessSyncArrayOutput() ClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return i.ToClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(context.Background())
}

func (i ClustersyncDownIntfsBeforeSessSyncArray) ToClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) ClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersyncDownIntfsBeforeSessSyncArrayOutput)
}

type ClustersyncDownIntfsBeforeSessSyncOutput struct{ *pulumi.OutputState }

func (ClustersyncDownIntfsBeforeSessSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o ClustersyncDownIntfsBeforeSessSyncOutput) ToClustersyncDownIntfsBeforeSessSyncOutput() ClustersyncDownIntfsBeforeSessSyncOutput {
	return o
}

func (o ClustersyncDownIntfsBeforeSessSyncOutput) ToClustersyncDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) ClustersyncDownIntfsBeforeSessSyncOutput {
	return o
}

// Interface name.
func (o ClustersyncDownIntfsBeforeSessSyncOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClustersyncDownIntfsBeforeSessSync) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ClustersyncDownIntfsBeforeSessSyncArrayOutput struct{ *pulumi.OutputState }

func (ClustersyncDownIntfsBeforeSessSyncArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o ClustersyncDownIntfsBeforeSessSyncArrayOutput) ToClustersyncDownIntfsBeforeSessSyncArrayOutput() ClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o ClustersyncDownIntfsBeforeSessSyncArrayOutput) ToClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) ClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o ClustersyncDownIntfsBeforeSessSyncArrayOutput) Index(i pulumi.IntInput) ClustersyncDownIntfsBeforeSessSyncOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClustersyncDownIntfsBeforeSessSync {
		return vs[0].([]ClustersyncDownIntfsBeforeSessSync)[vs[1].(int)]
	}).(ClustersyncDownIntfsBeforeSessSyncOutput)
}

type ClustersyncSessionSyncFilter struct {
	// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custome services. The structure of `customService` block is documented below.
	CustomServices []ClustersyncSessionSyncFilterCustomService `pulumi:"customServices"`
	// Only sessions to this IPv4 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr *string `pulumi:"dstaddr"`
	// Only sessions to this IPv6 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr6 *string `pulumi:"dstaddr6"`
	// Only sessions to this interface are synchronized. You can only enter one interface name. To synchronize sessions to multiple destination interfaces, add multiple filters.
	Dstintf *string `pulumi:"dstintf"`
	// Only sessions from this IPv4 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr *string `pulumi:"srcaddr"`
	// Only sessions from this IPv6 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr6 *string `pulumi:"srcaddr6"`
	// Only sessions from this interface are synchronized. You can only enter one interface name. To synchronize sessions for multiple source interfaces, add multiple filters.
	Srcintf *string `pulumi:"srcintf"`
}

// ClustersyncSessionSyncFilterInput is an input type that accepts ClustersyncSessionSyncFilterArgs and ClustersyncSessionSyncFilterOutput values.
// You can construct a concrete instance of `ClustersyncSessionSyncFilterInput` via:
//
//	ClustersyncSessionSyncFilterArgs{...}
type ClustersyncSessionSyncFilterInput interface {
	pulumi.Input

	ToClustersyncSessionSyncFilterOutput() ClustersyncSessionSyncFilterOutput
	ToClustersyncSessionSyncFilterOutputWithContext(context.Context) ClustersyncSessionSyncFilterOutput
}

type ClustersyncSessionSyncFilterArgs struct {
	// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custome services. The structure of `customService` block is documented below.
	CustomServices ClustersyncSessionSyncFilterCustomServiceArrayInput `pulumi:"customServices"`
	// Only sessions to this IPv4 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr pulumi.StringPtrInput `pulumi:"dstaddr"`
	// Only sessions to this IPv6 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr6 pulumi.StringPtrInput `pulumi:"dstaddr6"`
	// Only sessions to this interface are synchronized. You can only enter one interface name. To synchronize sessions to multiple destination interfaces, add multiple filters.
	Dstintf pulumi.StringPtrInput `pulumi:"dstintf"`
	// Only sessions from this IPv4 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr pulumi.StringPtrInput `pulumi:"srcaddr"`
	// Only sessions from this IPv6 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr6 pulumi.StringPtrInput `pulumi:"srcaddr6"`
	// Only sessions from this interface are synchronized. You can only enter one interface name. To synchronize sessions for multiple source interfaces, add multiple filters.
	Srcintf pulumi.StringPtrInput `pulumi:"srcintf"`
}

func (ClustersyncSessionSyncFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersyncSessionSyncFilter)(nil)).Elem()
}

func (i ClustersyncSessionSyncFilterArgs) ToClustersyncSessionSyncFilterOutput() ClustersyncSessionSyncFilterOutput {
	return i.ToClustersyncSessionSyncFilterOutputWithContext(context.Background())
}

func (i ClustersyncSessionSyncFilterArgs) ToClustersyncSessionSyncFilterOutputWithContext(ctx context.Context) ClustersyncSessionSyncFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersyncSessionSyncFilterOutput)
}

func (i ClustersyncSessionSyncFilterArgs) ToClustersyncSessionSyncFilterPtrOutput() ClustersyncSessionSyncFilterPtrOutput {
	return i.ToClustersyncSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i ClustersyncSessionSyncFilterArgs) ToClustersyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) ClustersyncSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersyncSessionSyncFilterOutput).ToClustersyncSessionSyncFilterPtrOutputWithContext(ctx)
}

// ClustersyncSessionSyncFilterPtrInput is an input type that accepts ClustersyncSessionSyncFilterArgs, ClustersyncSessionSyncFilterPtr and ClustersyncSessionSyncFilterPtrOutput values.
// You can construct a concrete instance of `ClustersyncSessionSyncFilterPtrInput` via:
//
//	        ClustersyncSessionSyncFilterArgs{...}
//
//	or:
//
//	        nil
type ClustersyncSessionSyncFilterPtrInput interface {
	pulumi.Input

	ToClustersyncSessionSyncFilterPtrOutput() ClustersyncSessionSyncFilterPtrOutput
	ToClustersyncSessionSyncFilterPtrOutputWithContext(context.Context) ClustersyncSessionSyncFilterPtrOutput
}

type clustersyncSessionSyncFilterPtrType ClustersyncSessionSyncFilterArgs

func ClustersyncSessionSyncFilterPtr(v *ClustersyncSessionSyncFilterArgs) ClustersyncSessionSyncFilterPtrInput {
	return (*clustersyncSessionSyncFilterPtrType)(v)
}

func (*clustersyncSessionSyncFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClustersyncSessionSyncFilter)(nil)).Elem()
}

func (i *clustersyncSessionSyncFilterPtrType) ToClustersyncSessionSyncFilterPtrOutput() ClustersyncSessionSyncFilterPtrOutput {
	return i.ToClustersyncSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i *clustersyncSessionSyncFilterPtrType) ToClustersyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) ClustersyncSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersyncSessionSyncFilterPtrOutput)
}

type ClustersyncSessionSyncFilterOutput struct{ *pulumi.OutputState }

func (ClustersyncSessionSyncFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersyncSessionSyncFilter)(nil)).Elem()
}

func (o ClustersyncSessionSyncFilterOutput) ToClustersyncSessionSyncFilterOutput() ClustersyncSessionSyncFilterOutput {
	return o
}

func (o ClustersyncSessionSyncFilterOutput) ToClustersyncSessionSyncFilterOutputWithContext(ctx context.Context) ClustersyncSessionSyncFilterOutput {
	return o
}

func (o ClustersyncSessionSyncFilterOutput) ToClustersyncSessionSyncFilterPtrOutput() ClustersyncSessionSyncFilterPtrOutput {
	return o.ToClustersyncSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (o ClustersyncSessionSyncFilterOutput) ToClustersyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) ClustersyncSessionSyncFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClustersyncSessionSyncFilter) *ClustersyncSessionSyncFilter {
		return &v
	}).(ClustersyncSessionSyncFilterPtrOutput)
}

// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custome services. The structure of `customService` block is documented below.
func (o ClustersyncSessionSyncFilterOutput) CustomServices() ClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v ClustersyncSessionSyncFilter) []ClustersyncSessionSyncFilterCustomService {
		return v.CustomServices
	}).(ClustersyncSessionSyncFilterCustomServiceArrayOutput)
}

// Only sessions to this IPv4 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
func (o ClustersyncSessionSyncFilterOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClustersyncSessionSyncFilter) *string { return v.Dstaddr }).(pulumi.StringPtrOutput)
}

// Only sessions to this IPv6 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
func (o ClustersyncSessionSyncFilterOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClustersyncSessionSyncFilter) *string { return v.Dstaddr6 }).(pulumi.StringPtrOutput)
}

// Only sessions to this interface are synchronized. You can only enter one interface name. To synchronize sessions to multiple destination interfaces, add multiple filters.
func (o ClustersyncSessionSyncFilterOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClustersyncSessionSyncFilter) *string { return v.Dstintf }).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv4 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
func (o ClustersyncSessionSyncFilterOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClustersyncSessionSyncFilter) *string { return v.Srcaddr }).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv6 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
func (o ClustersyncSessionSyncFilterOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClustersyncSessionSyncFilter) *string { return v.Srcaddr6 }).(pulumi.StringPtrOutput)
}

// Only sessions from this interface are synchronized. You can only enter one interface name. To synchronize sessions for multiple source interfaces, add multiple filters.
func (o ClustersyncSessionSyncFilterOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClustersyncSessionSyncFilter) *string { return v.Srcintf }).(pulumi.StringPtrOutput)
}

type ClustersyncSessionSyncFilterPtrOutput struct{ *pulumi.OutputState }

func (ClustersyncSessionSyncFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClustersyncSessionSyncFilter)(nil)).Elem()
}

func (o ClustersyncSessionSyncFilterPtrOutput) ToClustersyncSessionSyncFilterPtrOutput() ClustersyncSessionSyncFilterPtrOutput {
	return o
}

func (o ClustersyncSessionSyncFilterPtrOutput) ToClustersyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) ClustersyncSessionSyncFilterPtrOutput {
	return o
}

func (o ClustersyncSessionSyncFilterPtrOutput) Elem() ClustersyncSessionSyncFilterOutput {
	return o.ApplyT(func(v *ClustersyncSessionSyncFilter) ClustersyncSessionSyncFilter {
		if v != nil {
			return *v
		}
		var ret ClustersyncSessionSyncFilter
		return ret
	}).(ClustersyncSessionSyncFilterOutput)
}

// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custome services. The structure of `customService` block is documented below.
func (o ClustersyncSessionSyncFilterPtrOutput) CustomServices() ClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v *ClustersyncSessionSyncFilter) []ClustersyncSessionSyncFilterCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(ClustersyncSessionSyncFilterCustomServiceArrayOutput)
}

// Only sessions to this IPv4 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
func (o ClustersyncSessionSyncFilterPtrOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr
	}).(pulumi.StringPtrOutput)
}

// Only sessions to this IPv6 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
func (o ClustersyncSessionSyncFilterPtrOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr6
	}).(pulumi.StringPtrOutput)
}

// Only sessions to this interface are synchronized. You can only enter one interface name. To synchronize sessions to multiple destination interfaces, add multiple filters.
func (o ClustersyncSessionSyncFilterPtrOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstintf
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv4 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
func (o ClustersyncSessionSyncFilterPtrOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv6 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
func (o ClustersyncSessionSyncFilterPtrOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr6
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this interface are synchronized. You can only enter one interface name. To synchronize sessions for multiple source interfaces, add multiple filters.
func (o ClustersyncSessionSyncFilterPtrOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcintf
	}).(pulumi.StringPtrOutput)
}

type ClustersyncSessionSyncFilterCustomService struct {
	// Custom service destination port range.
	DstPortRange *string `pulumi:"dstPortRange"`
	// Custom service ID.
	Id *int `pulumi:"id"`
	// Custom service source port range.
	SrcPortRange *string `pulumi:"srcPortRange"`
}

// ClustersyncSessionSyncFilterCustomServiceInput is an input type that accepts ClustersyncSessionSyncFilterCustomServiceArgs and ClustersyncSessionSyncFilterCustomServiceOutput values.
// You can construct a concrete instance of `ClustersyncSessionSyncFilterCustomServiceInput` via:
//
//	ClustersyncSessionSyncFilterCustomServiceArgs{...}
type ClustersyncSessionSyncFilterCustomServiceInput interface {
	pulumi.Input

	ToClustersyncSessionSyncFilterCustomServiceOutput() ClustersyncSessionSyncFilterCustomServiceOutput
	ToClustersyncSessionSyncFilterCustomServiceOutputWithContext(context.Context) ClustersyncSessionSyncFilterCustomServiceOutput
}

type ClustersyncSessionSyncFilterCustomServiceArgs struct {
	// Custom service destination port range.
	DstPortRange pulumi.StringPtrInput `pulumi:"dstPortRange"`
	// Custom service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Custom service source port range.
	SrcPortRange pulumi.StringPtrInput `pulumi:"srcPortRange"`
}

func (ClustersyncSessionSyncFilterCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (i ClustersyncSessionSyncFilterCustomServiceArgs) ToClustersyncSessionSyncFilterCustomServiceOutput() ClustersyncSessionSyncFilterCustomServiceOutput {
	return i.ToClustersyncSessionSyncFilterCustomServiceOutputWithContext(context.Background())
}

func (i ClustersyncSessionSyncFilterCustomServiceArgs) ToClustersyncSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) ClustersyncSessionSyncFilterCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersyncSessionSyncFilterCustomServiceOutput)
}

// ClustersyncSessionSyncFilterCustomServiceArrayInput is an input type that accepts ClustersyncSessionSyncFilterCustomServiceArray and ClustersyncSessionSyncFilterCustomServiceArrayOutput values.
// You can construct a concrete instance of `ClustersyncSessionSyncFilterCustomServiceArrayInput` via:
//
//	ClustersyncSessionSyncFilterCustomServiceArray{ ClustersyncSessionSyncFilterCustomServiceArgs{...} }
type ClustersyncSessionSyncFilterCustomServiceArrayInput interface {
	pulumi.Input

	ToClustersyncSessionSyncFilterCustomServiceArrayOutput() ClustersyncSessionSyncFilterCustomServiceArrayOutput
	ToClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(context.Context) ClustersyncSessionSyncFilterCustomServiceArrayOutput
}

type ClustersyncSessionSyncFilterCustomServiceArray []ClustersyncSessionSyncFilterCustomServiceInput

func (ClustersyncSessionSyncFilterCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (i ClustersyncSessionSyncFilterCustomServiceArray) ToClustersyncSessionSyncFilterCustomServiceArrayOutput() ClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return i.ToClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(context.Background())
}

func (i ClustersyncSessionSyncFilterCustomServiceArray) ToClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) ClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersyncSessionSyncFilterCustomServiceArrayOutput)
}

type ClustersyncSessionSyncFilterCustomServiceOutput struct{ *pulumi.OutputState }

func (ClustersyncSessionSyncFilterCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (o ClustersyncSessionSyncFilterCustomServiceOutput) ToClustersyncSessionSyncFilterCustomServiceOutput() ClustersyncSessionSyncFilterCustomServiceOutput {
	return o
}

func (o ClustersyncSessionSyncFilterCustomServiceOutput) ToClustersyncSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) ClustersyncSessionSyncFilterCustomServiceOutput {
	return o
}

// Custom service destination port range.
func (o ClustersyncSessionSyncFilterCustomServiceOutput) DstPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClustersyncSessionSyncFilterCustomService) *string { return v.DstPortRange }).(pulumi.StringPtrOutput)
}

// Custom service ID.
func (o ClustersyncSessionSyncFilterCustomServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClustersyncSessionSyncFilterCustomService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Custom service source port range.
func (o ClustersyncSessionSyncFilterCustomServiceOutput) SrcPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClustersyncSessionSyncFilterCustomService) *string { return v.SrcPortRange }).(pulumi.StringPtrOutput)
}

type ClustersyncSessionSyncFilterCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (ClustersyncSessionSyncFilterCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (o ClustersyncSessionSyncFilterCustomServiceArrayOutput) ToClustersyncSessionSyncFilterCustomServiceArrayOutput() ClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o ClustersyncSessionSyncFilterCustomServiceArrayOutput) ToClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) ClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o ClustersyncSessionSyncFilterCustomServiceArrayOutput) Index(i pulumi.IntInput) ClustersyncSessionSyncFilterCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClustersyncSessionSyncFilterCustomService {
		return vs[0].([]ClustersyncSessionSyncFilterCustomService)[vs[1].(int)]
	}).(ClustersyncSessionSyncFilterCustomServiceOutput)
}

type ClustersyncSyncvd struct {
	// VDOM name.
	Name *string `pulumi:"name"`
}

// ClustersyncSyncvdInput is an input type that accepts ClustersyncSyncvdArgs and ClustersyncSyncvdOutput values.
// You can construct a concrete instance of `ClustersyncSyncvdInput` via:
//
//	ClustersyncSyncvdArgs{...}
type ClustersyncSyncvdInput interface {
	pulumi.Input

	ToClustersyncSyncvdOutput() ClustersyncSyncvdOutput
	ToClustersyncSyncvdOutputWithContext(context.Context) ClustersyncSyncvdOutput
}

type ClustersyncSyncvdArgs struct {
	// VDOM name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ClustersyncSyncvdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersyncSyncvd)(nil)).Elem()
}

func (i ClustersyncSyncvdArgs) ToClustersyncSyncvdOutput() ClustersyncSyncvdOutput {
	return i.ToClustersyncSyncvdOutputWithContext(context.Background())
}

func (i ClustersyncSyncvdArgs) ToClustersyncSyncvdOutputWithContext(ctx context.Context) ClustersyncSyncvdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersyncSyncvdOutput)
}

// ClustersyncSyncvdArrayInput is an input type that accepts ClustersyncSyncvdArray and ClustersyncSyncvdArrayOutput values.
// You can construct a concrete instance of `ClustersyncSyncvdArrayInput` via:
//
//	ClustersyncSyncvdArray{ ClustersyncSyncvdArgs{...} }
type ClustersyncSyncvdArrayInput interface {
	pulumi.Input

	ToClustersyncSyncvdArrayOutput() ClustersyncSyncvdArrayOutput
	ToClustersyncSyncvdArrayOutputWithContext(context.Context) ClustersyncSyncvdArrayOutput
}

type ClustersyncSyncvdArray []ClustersyncSyncvdInput

func (ClustersyncSyncvdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClustersyncSyncvd)(nil)).Elem()
}

func (i ClustersyncSyncvdArray) ToClustersyncSyncvdArrayOutput() ClustersyncSyncvdArrayOutput {
	return i.ToClustersyncSyncvdArrayOutputWithContext(context.Background())
}

func (i ClustersyncSyncvdArray) ToClustersyncSyncvdArrayOutputWithContext(ctx context.Context) ClustersyncSyncvdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersyncSyncvdArrayOutput)
}

type ClustersyncSyncvdOutput struct{ *pulumi.OutputState }

func (ClustersyncSyncvdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersyncSyncvd)(nil)).Elem()
}

func (o ClustersyncSyncvdOutput) ToClustersyncSyncvdOutput() ClustersyncSyncvdOutput {
	return o
}

func (o ClustersyncSyncvdOutput) ToClustersyncSyncvdOutputWithContext(ctx context.Context) ClustersyncSyncvdOutput {
	return o
}

// VDOM name.
func (o ClustersyncSyncvdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClustersyncSyncvd) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ClustersyncSyncvdArrayOutput struct{ *pulumi.OutputState }

func (ClustersyncSyncvdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClustersyncSyncvd)(nil)).Elem()
}

func (o ClustersyncSyncvdArrayOutput) ToClustersyncSyncvdArrayOutput() ClustersyncSyncvdArrayOutput {
	return o
}

func (o ClustersyncSyncvdArrayOutput) ToClustersyncSyncvdArrayOutputWithContext(ctx context.Context) ClustersyncSyncvdArrayOutput {
	return o
}

func (o ClustersyncSyncvdArrayOutput) Index(i pulumi.IntInput) ClustersyncSyncvdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClustersyncSyncvd {
		return vs[0].([]ClustersyncSyncvd)[vs[1].(int)]
	}).(ClustersyncSyncvdOutput)
}

type CsfFabricConnector struct {
	// Override access profile.
	Accprofile *string `pulumi:"accprofile"`
	// Enable/disable downstream device write access to configuration. Valid values: `enable`, `disable`.
	ConfigurationWriteAccess *string `pulumi:"configurationWriteAccess"`
	// Serial.
	Serial *string `pulumi:"serial"`
	// Virtual domains that the connector has access to. If none are set, the connector will only have access to the VDOM that it joins the Security Fabric through. The structure of `vdom` block is documented below.
	Vdoms []CsfFabricConnectorVdom `pulumi:"vdoms"`
}

// CsfFabricConnectorInput is an input type that accepts CsfFabricConnectorArgs and CsfFabricConnectorOutput values.
// You can construct a concrete instance of `CsfFabricConnectorInput` via:
//
//	CsfFabricConnectorArgs{...}
type CsfFabricConnectorInput interface {
	pulumi.Input

	ToCsfFabricConnectorOutput() CsfFabricConnectorOutput
	ToCsfFabricConnectorOutputWithContext(context.Context) CsfFabricConnectorOutput
}

type CsfFabricConnectorArgs struct {
	// Override access profile.
	Accprofile pulumi.StringPtrInput `pulumi:"accprofile"`
	// Enable/disable downstream device write access to configuration. Valid values: `enable`, `disable`.
	ConfigurationWriteAccess pulumi.StringPtrInput `pulumi:"configurationWriteAccess"`
	// Serial.
	Serial pulumi.StringPtrInput `pulumi:"serial"`
	// Virtual domains that the connector has access to. If none are set, the connector will only have access to the VDOM that it joins the Security Fabric through. The structure of `vdom` block is documented below.
	Vdoms CsfFabricConnectorVdomArrayInput `pulumi:"vdoms"`
}

func (CsfFabricConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CsfFabricConnector)(nil)).Elem()
}

func (i CsfFabricConnectorArgs) ToCsfFabricConnectorOutput() CsfFabricConnectorOutput {
	return i.ToCsfFabricConnectorOutputWithContext(context.Background())
}

func (i CsfFabricConnectorArgs) ToCsfFabricConnectorOutputWithContext(ctx context.Context) CsfFabricConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsfFabricConnectorOutput)
}

// CsfFabricConnectorArrayInput is an input type that accepts CsfFabricConnectorArray and CsfFabricConnectorArrayOutput values.
// You can construct a concrete instance of `CsfFabricConnectorArrayInput` via:
//
//	CsfFabricConnectorArray{ CsfFabricConnectorArgs{...} }
type CsfFabricConnectorArrayInput interface {
	pulumi.Input

	ToCsfFabricConnectorArrayOutput() CsfFabricConnectorArrayOutput
	ToCsfFabricConnectorArrayOutputWithContext(context.Context) CsfFabricConnectorArrayOutput
}

type CsfFabricConnectorArray []CsfFabricConnectorInput

func (CsfFabricConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CsfFabricConnector)(nil)).Elem()
}

func (i CsfFabricConnectorArray) ToCsfFabricConnectorArrayOutput() CsfFabricConnectorArrayOutput {
	return i.ToCsfFabricConnectorArrayOutputWithContext(context.Background())
}

func (i CsfFabricConnectorArray) ToCsfFabricConnectorArrayOutputWithContext(ctx context.Context) CsfFabricConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsfFabricConnectorArrayOutput)
}

type CsfFabricConnectorOutput struct{ *pulumi.OutputState }

func (CsfFabricConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CsfFabricConnector)(nil)).Elem()
}

func (o CsfFabricConnectorOutput) ToCsfFabricConnectorOutput() CsfFabricConnectorOutput {
	return o
}

func (o CsfFabricConnectorOutput) ToCsfFabricConnectorOutputWithContext(ctx context.Context) CsfFabricConnectorOutput {
	return o
}

// Override access profile.
func (o CsfFabricConnectorOutput) Accprofile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfFabricConnector) *string { return v.Accprofile }).(pulumi.StringPtrOutput)
}

// Enable/disable downstream device write access to configuration. Valid values: `enable`, `disable`.
func (o CsfFabricConnectorOutput) ConfigurationWriteAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfFabricConnector) *string { return v.ConfigurationWriteAccess }).(pulumi.StringPtrOutput)
}

// Serial.
func (o CsfFabricConnectorOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfFabricConnector) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

// Virtual domains that the connector has access to. If none are set, the connector will only have access to the VDOM that it joins the Security Fabric through. The structure of `vdom` block is documented below.
func (o CsfFabricConnectorOutput) Vdoms() CsfFabricConnectorVdomArrayOutput {
	return o.ApplyT(func(v CsfFabricConnector) []CsfFabricConnectorVdom { return v.Vdoms }).(CsfFabricConnectorVdomArrayOutput)
}

type CsfFabricConnectorArrayOutput struct{ *pulumi.OutputState }

func (CsfFabricConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CsfFabricConnector)(nil)).Elem()
}

func (o CsfFabricConnectorArrayOutput) ToCsfFabricConnectorArrayOutput() CsfFabricConnectorArrayOutput {
	return o
}

func (o CsfFabricConnectorArrayOutput) ToCsfFabricConnectorArrayOutputWithContext(ctx context.Context) CsfFabricConnectorArrayOutput {
	return o
}

func (o CsfFabricConnectorArrayOutput) Index(i pulumi.IntInput) CsfFabricConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CsfFabricConnector {
		return vs[0].([]CsfFabricConnector)[vs[1].(int)]
	}).(CsfFabricConnectorOutput)
}

type CsfFabricConnectorVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// CsfFabricConnectorVdomInput is an input type that accepts CsfFabricConnectorVdomArgs and CsfFabricConnectorVdomOutput values.
// You can construct a concrete instance of `CsfFabricConnectorVdomInput` via:
//
//	CsfFabricConnectorVdomArgs{...}
type CsfFabricConnectorVdomInput interface {
	pulumi.Input

	ToCsfFabricConnectorVdomOutput() CsfFabricConnectorVdomOutput
	ToCsfFabricConnectorVdomOutputWithContext(context.Context) CsfFabricConnectorVdomOutput
}

type CsfFabricConnectorVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CsfFabricConnectorVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CsfFabricConnectorVdom)(nil)).Elem()
}

func (i CsfFabricConnectorVdomArgs) ToCsfFabricConnectorVdomOutput() CsfFabricConnectorVdomOutput {
	return i.ToCsfFabricConnectorVdomOutputWithContext(context.Background())
}

func (i CsfFabricConnectorVdomArgs) ToCsfFabricConnectorVdomOutputWithContext(ctx context.Context) CsfFabricConnectorVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsfFabricConnectorVdomOutput)
}

// CsfFabricConnectorVdomArrayInput is an input type that accepts CsfFabricConnectorVdomArray and CsfFabricConnectorVdomArrayOutput values.
// You can construct a concrete instance of `CsfFabricConnectorVdomArrayInput` via:
//
//	CsfFabricConnectorVdomArray{ CsfFabricConnectorVdomArgs{...} }
type CsfFabricConnectorVdomArrayInput interface {
	pulumi.Input

	ToCsfFabricConnectorVdomArrayOutput() CsfFabricConnectorVdomArrayOutput
	ToCsfFabricConnectorVdomArrayOutputWithContext(context.Context) CsfFabricConnectorVdomArrayOutput
}

type CsfFabricConnectorVdomArray []CsfFabricConnectorVdomInput

func (CsfFabricConnectorVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CsfFabricConnectorVdom)(nil)).Elem()
}

func (i CsfFabricConnectorVdomArray) ToCsfFabricConnectorVdomArrayOutput() CsfFabricConnectorVdomArrayOutput {
	return i.ToCsfFabricConnectorVdomArrayOutputWithContext(context.Background())
}

func (i CsfFabricConnectorVdomArray) ToCsfFabricConnectorVdomArrayOutputWithContext(ctx context.Context) CsfFabricConnectorVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsfFabricConnectorVdomArrayOutput)
}

type CsfFabricConnectorVdomOutput struct{ *pulumi.OutputState }

func (CsfFabricConnectorVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CsfFabricConnectorVdom)(nil)).Elem()
}

func (o CsfFabricConnectorVdomOutput) ToCsfFabricConnectorVdomOutput() CsfFabricConnectorVdomOutput {
	return o
}

func (o CsfFabricConnectorVdomOutput) ToCsfFabricConnectorVdomOutputWithContext(ctx context.Context) CsfFabricConnectorVdomOutput {
	return o
}

// Virtual domain name.
func (o CsfFabricConnectorVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfFabricConnectorVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CsfFabricConnectorVdomArrayOutput struct{ *pulumi.OutputState }

func (CsfFabricConnectorVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CsfFabricConnectorVdom)(nil)).Elem()
}

func (o CsfFabricConnectorVdomArrayOutput) ToCsfFabricConnectorVdomArrayOutput() CsfFabricConnectorVdomArrayOutput {
	return o
}

func (o CsfFabricConnectorVdomArrayOutput) ToCsfFabricConnectorVdomArrayOutputWithContext(ctx context.Context) CsfFabricConnectorVdomArrayOutput {
	return o
}

func (o CsfFabricConnectorVdomArrayOutput) Index(i pulumi.IntInput) CsfFabricConnectorVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CsfFabricConnectorVdom {
		return vs[0].([]CsfFabricConnectorVdom)[vs[1].(int)]
	}).(CsfFabricConnectorVdomOutput)
}

type CsfFabricDevice struct {
	// Device access token.
	AccessToken *string `pulumi:"accessToken"`
	// Device IP.
	DeviceIp *string `pulumi:"deviceIp"`
	// Device type. Valid values: `fortimail`.
	DeviceType *string `pulumi:"deviceType"`
	// HTTPS port for fabric device.
	HttpsPort *int `pulumi:"httpsPort"`
	// Device login name.
	Login *string `pulumi:"login"`
	// Device name.
	Name *string `pulumi:"name"`
	// Device login password.
	Password *string `pulumi:"password"`
}

// CsfFabricDeviceInput is an input type that accepts CsfFabricDeviceArgs and CsfFabricDeviceOutput values.
// You can construct a concrete instance of `CsfFabricDeviceInput` via:
//
//	CsfFabricDeviceArgs{...}
type CsfFabricDeviceInput interface {
	pulumi.Input

	ToCsfFabricDeviceOutput() CsfFabricDeviceOutput
	ToCsfFabricDeviceOutputWithContext(context.Context) CsfFabricDeviceOutput
}

type CsfFabricDeviceArgs struct {
	// Device access token.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// Device IP.
	DeviceIp pulumi.StringPtrInput `pulumi:"deviceIp"`
	// Device type. Valid values: `fortimail`.
	DeviceType pulumi.StringPtrInput `pulumi:"deviceType"`
	// HTTPS port for fabric device.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Device login name.
	Login pulumi.StringPtrInput `pulumi:"login"`
	// Device name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Device login password.
	Password pulumi.StringPtrInput `pulumi:"password"`
}

func (CsfFabricDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CsfFabricDevice)(nil)).Elem()
}

func (i CsfFabricDeviceArgs) ToCsfFabricDeviceOutput() CsfFabricDeviceOutput {
	return i.ToCsfFabricDeviceOutputWithContext(context.Background())
}

func (i CsfFabricDeviceArgs) ToCsfFabricDeviceOutputWithContext(ctx context.Context) CsfFabricDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsfFabricDeviceOutput)
}

// CsfFabricDeviceArrayInput is an input type that accepts CsfFabricDeviceArray and CsfFabricDeviceArrayOutput values.
// You can construct a concrete instance of `CsfFabricDeviceArrayInput` via:
//
//	CsfFabricDeviceArray{ CsfFabricDeviceArgs{...} }
type CsfFabricDeviceArrayInput interface {
	pulumi.Input

	ToCsfFabricDeviceArrayOutput() CsfFabricDeviceArrayOutput
	ToCsfFabricDeviceArrayOutputWithContext(context.Context) CsfFabricDeviceArrayOutput
}

type CsfFabricDeviceArray []CsfFabricDeviceInput

func (CsfFabricDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CsfFabricDevice)(nil)).Elem()
}

func (i CsfFabricDeviceArray) ToCsfFabricDeviceArrayOutput() CsfFabricDeviceArrayOutput {
	return i.ToCsfFabricDeviceArrayOutputWithContext(context.Background())
}

func (i CsfFabricDeviceArray) ToCsfFabricDeviceArrayOutputWithContext(ctx context.Context) CsfFabricDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsfFabricDeviceArrayOutput)
}

type CsfFabricDeviceOutput struct{ *pulumi.OutputState }

func (CsfFabricDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CsfFabricDevice)(nil)).Elem()
}

func (o CsfFabricDeviceOutput) ToCsfFabricDeviceOutput() CsfFabricDeviceOutput {
	return o
}

func (o CsfFabricDeviceOutput) ToCsfFabricDeviceOutputWithContext(ctx context.Context) CsfFabricDeviceOutput {
	return o
}

// Device access token.
func (o CsfFabricDeviceOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfFabricDevice) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// Device IP.
func (o CsfFabricDeviceOutput) DeviceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfFabricDevice) *string { return v.DeviceIp }).(pulumi.StringPtrOutput)
}

// Device type. Valid values: `fortimail`.
func (o CsfFabricDeviceOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfFabricDevice) *string { return v.DeviceType }).(pulumi.StringPtrOutput)
}

// HTTPS port for fabric device.
func (o CsfFabricDeviceOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CsfFabricDevice) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Device login name.
func (o CsfFabricDeviceOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfFabricDevice) *string { return v.Login }).(pulumi.StringPtrOutput)
}

// Device name.
func (o CsfFabricDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfFabricDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Device login password.
func (o CsfFabricDeviceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfFabricDevice) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type CsfFabricDeviceArrayOutput struct{ *pulumi.OutputState }

func (CsfFabricDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CsfFabricDevice)(nil)).Elem()
}

func (o CsfFabricDeviceArrayOutput) ToCsfFabricDeviceArrayOutput() CsfFabricDeviceArrayOutput {
	return o
}

func (o CsfFabricDeviceArrayOutput) ToCsfFabricDeviceArrayOutputWithContext(ctx context.Context) CsfFabricDeviceArrayOutput {
	return o
}

func (o CsfFabricDeviceArrayOutput) Index(i pulumi.IntInput) CsfFabricDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CsfFabricDevice {
		return vs[0].([]CsfFabricDevice)[vs[1].(int)]
	}).(CsfFabricDeviceOutput)
}

type CsfTrustedList struct {
	// Security fabric authorization action. Valid values: `accept`, `deny`.
	Action *string `pulumi:"action"`
	// Authorization type. Valid values: `serial`, `certificate`.
	AuthorizationType *string `pulumi:"authorizationType"`
	// Certificate.
	Certificate *string `pulumi:"certificate"`
	// Trust authorizations by this node's administrator. Valid values: `enable`, `disable`.
	DownstreamAuthorization *string `pulumi:"downstreamAuthorization"`
	// HA members.
	HaMembers *string `pulumi:"haMembers"`
	// Index of the downstream in tree.
	Index *int `pulumi:"index"`
	// Name.
	Name *string `pulumi:"name"`
	// Serial.
	Serial *string `pulumi:"serial"`
}

// CsfTrustedListInput is an input type that accepts CsfTrustedListArgs and CsfTrustedListOutput values.
// You can construct a concrete instance of `CsfTrustedListInput` via:
//
//	CsfTrustedListArgs{...}
type CsfTrustedListInput interface {
	pulumi.Input

	ToCsfTrustedListOutput() CsfTrustedListOutput
	ToCsfTrustedListOutputWithContext(context.Context) CsfTrustedListOutput
}

type CsfTrustedListArgs struct {
	// Security fabric authorization action. Valid values: `accept`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Authorization type. Valid values: `serial`, `certificate`.
	AuthorizationType pulumi.StringPtrInput `pulumi:"authorizationType"`
	// Certificate.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// Trust authorizations by this node's administrator. Valid values: `enable`, `disable`.
	DownstreamAuthorization pulumi.StringPtrInput `pulumi:"downstreamAuthorization"`
	// HA members.
	HaMembers pulumi.StringPtrInput `pulumi:"haMembers"`
	// Index of the downstream in tree.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Serial.
	Serial pulumi.StringPtrInput `pulumi:"serial"`
}

func (CsfTrustedListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CsfTrustedList)(nil)).Elem()
}

func (i CsfTrustedListArgs) ToCsfTrustedListOutput() CsfTrustedListOutput {
	return i.ToCsfTrustedListOutputWithContext(context.Background())
}

func (i CsfTrustedListArgs) ToCsfTrustedListOutputWithContext(ctx context.Context) CsfTrustedListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsfTrustedListOutput)
}

// CsfTrustedListArrayInput is an input type that accepts CsfTrustedListArray and CsfTrustedListArrayOutput values.
// You can construct a concrete instance of `CsfTrustedListArrayInput` via:
//
//	CsfTrustedListArray{ CsfTrustedListArgs{...} }
type CsfTrustedListArrayInput interface {
	pulumi.Input

	ToCsfTrustedListArrayOutput() CsfTrustedListArrayOutput
	ToCsfTrustedListArrayOutputWithContext(context.Context) CsfTrustedListArrayOutput
}

type CsfTrustedListArray []CsfTrustedListInput

func (CsfTrustedListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CsfTrustedList)(nil)).Elem()
}

func (i CsfTrustedListArray) ToCsfTrustedListArrayOutput() CsfTrustedListArrayOutput {
	return i.ToCsfTrustedListArrayOutputWithContext(context.Background())
}

func (i CsfTrustedListArray) ToCsfTrustedListArrayOutputWithContext(ctx context.Context) CsfTrustedListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsfTrustedListArrayOutput)
}

type CsfTrustedListOutput struct{ *pulumi.OutputState }

func (CsfTrustedListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CsfTrustedList)(nil)).Elem()
}

func (o CsfTrustedListOutput) ToCsfTrustedListOutput() CsfTrustedListOutput {
	return o
}

func (o CsfTrustedListOutput) ToCsfTrustedListOutputWithContext(ctx context.Context) CsfTrustedListOutput {
	return o
}

// Security fabric authorization action. Valid values: `accept`, `deny`.
func (o CsfTrustedListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfTrustedList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Authorization type. Valid values: `serial`, `certificate`.
func (o CsfTrustedListOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfTrustedList) *string { return v.AuthorizationType }).(pulumi.StringPtrOutput)
}

// Certificate.
func (o CsfTrustedListOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfTrustedList) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// Trust authorizations by this node's administrator. Valid values: `enable`, `disable`.
func (o CsfTrustedListOutput) DownstreamAuthorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfTrustedList) *string { return v.DownstreamAuthorization }).(pulumi.StringPtrOutput)
}

// HA members.
func (o CsfTrustedListOutput) HaMembers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfTrustedList) *string { return v.HaMembers }).(pulumi.StringPtrOutput)
}

// Index of the downstream in tree.
func (o CsfTrustedListOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CsfTrustedList) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Name.
func (o CsfTrustedListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfTrustedList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Serial.
func (o CsfTrustedListOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsfTrustedList) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

type CsfTrustedListArrayOutput struct{ *pulumi.OutputState }

func (CsfTrustedListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CsfTrustedList)(nil)).Elem()
}

func (o CsfTrustedListArrayOutput) ToCsfTrustedListArrayOutput() CsfTrustedListArrayOutput {
	return o
}

func (o CsfTrustedListArrayOutput) ToCsfTrustedListArrayOutputWithContext(ctx context.Context) CsfTrustedListArrayOutput {
	return o
}

func (o CsfTrustedListArrayOutput) Index(i pulumi.IntInput) CsfTrustedListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CsfTrustedList {
		return vs[0].([]CsfTrustedList)[vs[1].(int)]
	}).(CsfTrustedListOutput)
}

type DdnsDdnsServerAddr struct {
	// IP address or FQDN of the server.
	Addr *string `pulumi:"addr"`
}

// DdnsDdnsServerAddrInput is an input type that accepts DdnsDdnsServerAddrArgs and DdnsDdnsServerAddrOutput values.
// You can construct a concrete instance of `DdnsDdnsServerAddrInput` via:
//
//	DdnsDdnsServerAddrArgs{...}
type DdnsDdnsServerAddrInput interface {
	pulumi.Input

	ToDdnsDdnsServerAddrOutput() DdnsDdnsServerAddrOutput
	ToDdnsDdnsServerAddrOutputWithContext(context.Context) DdnsDdnsServerAddrOutput
}

type DdnsDdnsServerAddrArgs struct {
	// IP address or FQDN of the server.
	Addr pulumi.StringPtrInput `pulumi:"addr"`
}

func (DdnsDdnsServerAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdnsDdnsServerAddr)(nil)).Elem()
}

func (i DdnsDdnsServerAddrArgs) ToDdnsDdnsServerAddrOutput() DdnsDdnsServerAddrOutput {
	return i.ToDdnsDdnsServerAddrOutputWithContext(context.Background())
}

func (i DdnsDdnsServerAddrArgs) ToDdnsDdnsServerAddrOutputWithContext(ctx context.Context) DdnsDdnsServerAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdnsDdnsServerAddrOutput)
}

// DdnsDdnsServerAddrArrayInput is an input type that accepts DdnsDdnsServerAddrArray and DdnsDdnsServerAddrArrayOutput values.
// You can construct a concrete instance of `DdnsDdnsServerAddrArrayInput` via:
//
//	DdnsDdnsServerAddrArray{ DdnsDdnsServerAddrArgs{...} }
type DdnsDdnsServerAddrArrayInput interface {
	pulumi.Input

	ToDdnsDdnsServerAddrArrayOutput() DdnsDdnsServerAddrArrayOutput
	ToDdnsDdnsServerAddrArrayOutputWithContext(context.Context) DdnsDdnsServerAddrArrayOutput
}

type DdnsDdnsServerAddrArray []DdnsDdnsServerAddrInput

func (DdnsDdnsServerAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdnsDdnsServerAddr)(nil)).Elem()
}

func (i DdnsDdnsServerAddrArray) ToDdnsDdnsServerAddrArrayOutput() DdnsDdnsServerAddrArrayOutput {
	return i.ToDdnsDdnsServerAddrArrayOutputWithContext(context.Background())
}

func (i DdnsDdnsServerAddrArray) ToDdnsDdnsServerAddrArrayOutputWithContext(ctx context.Context) DdnsDdnsServerAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdnsDdnsServerAddrArrayOutput)
}

type DdnsDdnsServerAddrOutput struct{ *pulumi.OutputState }

func (DdnsDdnsServerAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdnsDdnsServerAddr)(nil)).Elem()
}

func (o DdnsDdnsServerAddrOutput) ToDdnsDdnsServerAddrOutput() DdnsDdnsServerAddrOutput {
	return o
}

func (o DdnsDdnsServerAddrOutput) ToDdnsDdnsServerAddrOutputWithContext(ctx context.Context) DdnsDdnsServerAddrOutput {
	return o
}

// IP address or FQDN of the server.
func (o DdnsDdnsServerAddrOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdnsDdnsServerAddr) *string { return v.Addr }).(pulumi.StringPtrOutput)
}

type DdnsDdnsServerAddrArrayOutput struct{ *pulumi.OutputState }

func (DdnsDdnsServerAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdnsDdnsServerAddr)(nil)).Elem()
}

func (o DdnsDdnsServerAddrArrayOutput) ToDdnsDdnsServerAddrArrayOutput() DdnsDdnsServerAddrArrayOutput {
	return o
}

func (o DdnsDdnsServerAddrArrayOutput) ToDdnsDdnsServerAddrArrayOutputWithContext(ctx context.Context) DdnsDdnsServerAddrArrayOutput {
	return o
}

func (o DdnsDdnsServerAddrArrayOutput) Index(i pulumi.IntInput) DdnsDdnsServerAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdnsDdnsServerAddr {
		return vs[0].([]DdnsDdnsServerAddr)[vs[1].(int)]
	}).(DdnsDdnsServerAddrOutput)
}

type DdnsMonitorInterface struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// DdnsMonitorInterfaceInput is an input type that accepts DdnsMonitorInterfaceArgs and DdnsMonitorInterfaceOutput values.
// You can construct a concrete instance of `DdnsMonitorInterfaceInput` via:
//
//	DdnsMonitorInterfaceArgs{...}
type DdnsMonitorInterfaceInput interface {
	pulumi.Input

	ToDdnsMonitorInterfaceOutput() DdnsMonitorInterfaceOutput
	ToDdnsMonitorInterfaceOutputWithContext(context.Context) DdnsMonitorInterfaceOutput
}

type DdnsMonitorInterfaceArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (DdnsMonitorInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdnsMonitorInterface)(nil)).Elem()
}

func (i DdnsMonitorInterfaceArgs) ToDdnsMonitorInterfaceOutput() DdnsMonitorInterfaceOutput {
	return i.ToDdnsMonitorInterfaceOutputWithContext(context.Background())
}

func (i DdnsMonitorInterfaceArgs) ToDdnsMonitorInterfaceOutputWithContext(ctx context.Context) DdnsMonitorInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdnsMonitorInterfaceOutput)
}

// DdnsMonitorInterfaceArrayInput is an input type that accepts DdnsMonitorInterfaceArray and DdnsMonitorInterfaceArrayOutput values.
// You can construct a concrete instance of `DdnsMonitorInterfaceArrayInput` via:
//
//	DdnsMonitorInterfaceArray{ DdnsMonitorInterfaceArgs{...} }
type DdnsMonitorInterfaceArrayInput interface {
	pulumi.Input

	ToDdnsMonitorInterfaceArrayOutput() DdnsMonitorInterfaceArrayOutput
	ToDdnsMonitorInterfaceArrayOutputWithContext(context.Context) DdnsMonitorInterfaceArrayOutput
}

type DdnsMonitorInterfaceArray []DdnsMonitorInterfaceInput

func (DdnsMonitorInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdnsMonitorInterface)(nil)).Elem()
}

func (i DdnsMonitorInterfaceArray) ToDdnsMonitorInterfaceArrayOutput() DdnsMonitorInterfaceArrayOutput {
	return i.ToDdnsMonitorInterfaceArrayOutputWithContext(context.Background())
}

func (i DdnsMonitorInterfaceArray) ToDdnsMonitorInterfaceArrayOutputWithContext(ctx context.Context) DdnsMonitorInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdnsMonitorInterfaceArrayOutput)
}

type DdnsMonitorInterfaceOutput struct{ *pulumi.OutputState }

func (DdnsMonitorInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdnsMonitorInterface)(nil)).Elem()
}

func (o DdnsMonitorInterfaceOutput) ToDdnsMonitorInterfaceOutput() DdnsMonitorInterfaceOutput {
	return o
}

func (o DdnsMonitorInterfaceOutput) ToDdnsMonitorInterfaceOutputWithContext(ctx context.Context) DdnsMonitorInterfaceOutput {
	return o
}

// Interface name.
func (o DdnsMonitorInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdnsMonitorInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type DdnsMonitorInterfaceArrayOutput struct{ *pulumi.OutputState }

func (DdnsMonitorInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DdnsMonitorInterface)(nil)).Elem()
}

func (o DdnsMonitorInterfaceArrayOutput) ToDdnsMonitorInterfaceArrayOutput() DdnsMonitorInterfaceArrayOutput {
	return o
}

func (o DdnsMonitorInterfaceArrayOutput) ToDdnsMonitorInterfaceArrayOutputWithContext(ctx context.Context) DdnsMonitorInterfaceArrayOutput {
	return o
}

func (o DdnsMonitorInterfaceArrayOutput) Index(i pulumi.IntInput) DdnsMonitorInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DdnsMonitorInterface {
		return vs[0].([]DdnsMonitorInterface)[vs[1].(int)]
	}).(DdnsMonitorInterfaceOutput)
}

type DeviceupgradeKnownHaMember struct {
	// Serial number of HA member
	Serial *string `pulumi:"serial"`
}

// DeviceupgradeKnownHaMemberInput is an input type that accepts DeviceupgradeKnownHaMemberArgs and DeviceupgradeKnownHaMemberOutput values.
// You can construct a concrete instance of `DeviceupgradeKnownHaMemberInput` via:
//
//	DeviceupgradeKnownHaMemberArgs{...}
type DeviceupgradeKnownHaMemberInput interface {
	pulumi.Input

	ToDeviceupgradeKnownHaMemberOutput() DeviceupgradeKnownHaMemberOutput
	ToDeviceupgradeKnownHaMemberOutputWithContext(context.Context) DeviceupgradeKnownHaMemberOutput
}

type DeviceupgradeKnownHaMemberArgs struct {
	// Serial number of HA member
	Serial pulumi.StringPtrInput `pulumi:"serial"`
}

func (DeviceupgradeKnownHaMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceupgradeKnownHaMember)(nil)).Elem()
}

func (i DeviceupgradeKnownHaMemberArgs) ToDeviceupgradeKnownHaMemberOutput() DeviceupgradeKnownHaMemberOutput {
	return i.ToDeviceupgradeKnownHaMemberOutputWithContext(context.Background())
}

func (i DeviceupgradeKnownHaMemberArgs) ToDeviceupgradeKnownHaMemberOutputWithContext(ctx context.Context) DeviceupgradeKnownHaMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceupgradeKnownHaMemberOutput)
}

// DeviceupgradeKnownHaMemberArrayInput is an input type that accepts DeviceupgradeKnownHaMemberArray and DeviceupgradeKnownHaMemberArrayOutput values.
// You can construct a concrete instance of `DeviceupgradeKnownHaMemberArrayInput` via:
//
//	DeviceupgradeKnownHaMemberArray{ DeviceupgradeKnownHaMemberArgs{...} }
type DeviceupgradeKnownHaMemberArrayInput interface {
	pulumi.Input

	ToDeviceupgradeKnownHaMemberArrayOutput() DeviceupgradeKnownHaMemberArrayOutput
	ToDeviceupgradeKnownHaMemberArrayOutputWithContext(context.Context) DeviceupgradeKnownHaMemberArrayOutput
}

type DeviceupgradeKnownHaMemberArray []DeviceupgradeKnownHaMemberInput

func (DeviceupgradeKnownHaMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceupgradeKnownHaMember)(nil)).Elem()
}

func (i DeviceupgradeKnownHaMemberArray) ToDeviceupgradeKnownHaMemberArrayOutput() DeviceupgradeKnownHaMemberArrayOutput {
	return i.ToDeviceupgradeKnownHaMemberArrayOutputWithContext(context.Background())
}

func (i DeviceupgradeKnownHaMemberArray) ToDeviceupgradeKnownHaMemberArrayOutputWithContext(ctx context.Context) DeviceupgradeKnownHaMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceupgradeKnownHaMemberArrayOutput)
}

type DeviceupgradeKnownHaMemberOutput struct{ *pulumi.OutputState }

func (DeviceupgradeKnownHaMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceupgradeKnownHaMember)(nil)).Elem()
}

func (o DeviceupgradeKnownHaMemberOutput) ToDeviceupgradeKnownHaMemberOutput() DeviceupgradeKnownHaMemberOutput {
	return o
}

func (o DeviceupgradeKnownHaMemberOutput) ToDeviceupgradeKnownHaMemberOutputWithContext(ctx context.Context) DeviceupgradeKnownHaMemberOutput {
	return o
}

// Serial number of HA member
func (o DeviceupgradeKnownHaMemberOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceupgradeKnownHaMember) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

type DeviceupgradeKnownHaMemberArrayOutput struct{ *pulumi.OutputState }

func (DeviceupgradeKnownHaMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceupgradeKnownHaMember)(nil)).Elem()
}

func (o DeviceupgradeKnownHaMemberArrayOutput) ToDeviceupgradeKnownHaMemberArrayOutput() DeviceupgradeKnownHaMemberArrayOutput {
	return o
}

func (o DeviceupgradeKnownHaMemberArrayOutput) ToDeviceupgradeKnownHaMemberArrayOutputWithContext(ctx context.Context) DeviceupgradeKnownHaMemberArrayOutput {
	return o
}

func (o DeviceupgradeKnownHaMemberArrayOutput) Index(i pulumi.IntInput) DeviceupgradeKnownHaMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceupgradeKnownHaMember {
		return vs[0].([]DeviceupgradeKnownHaMember)[vs[1].(int)]
	}).(DeviceupgradeKnownHaMemberOutput)
}

type DnsDomain struct {
	// DNS search domain list separated by space (maximum 8 domains)
	Domain *string `pulumi:"domain"`
}

// DnsDomainInput is an input type that accepts DnsDomainArgs and DnsDomainOutput values.
// You can construct a concrete instance of `DnsDomainInput` via:
//
//	DnsDomainArgs{...}
type DnsDomainInput interface {
	pulumi.Input

	ToDnsDomainOutput() DnsDomainOutput
	ToDnsDomainOutputWithContext(context.Context) DnsDomainOutput
}

type DnsDomainArgs struct {
	// DNS search domain list separated by space (maximum 8 domains)
	Domain pulumi.StringPtrInput `pulumi:"domain"`
}

func (DnsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsDomain)(nil)).Elem()
}

func (i DnsDomainArgs) ToDnsDomainOutput() DnsDomainOutput {
	return i.ToDnsDomainOutputWithContext(context.Background())
}

func (i DnsDomainArgs) ToDnsDomainOutputWithContext(ctx context.Context) DnsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsDomainOutput)
}

// DnsDomainArrayInput is an input type that accepts DnsDomainArray and DnsDomainArrayOutput values.
// You can construct a concrete instance of `DnsDomainArrayInput` via:
//
//	DnsDomainArray{ DnsDomainArgs{...} }
type DnsDomainArrayInput interface {
	pulumi.Input

	ToDnsDomainArrayOutput() DnsDomainArrayOutput
	ToDnsDomainArrayOutputWithContext(context.Context) DnsDomainArrayOutput
}

type DnsDomainArray []DnsDomainInput

func (DnsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsDomain)(nil)).Elem()
}

func (i DnsDomainArray) ToDnsDomainArrayOutput() DnsDomainArrayOutput {
	return i.ToDnsDomainArrayOutputWithContext(context.Background())
}

func (i DnsDomainArray) ToDnsDomainArrayOutputWithContext(ctx context.Context) DnsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsDomainArrayOutput)
}

type DnsDomainOutput struct{ *pulumi.OutputState }

func (DnsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsDomain)(nil)).Elem()
}

func (o DnsDomainOutput) ToDnsDomainOutput() DnsDomainOutput {
	return o
}

func (o DnsDomainOutput) ToDnsDomainOutputWithContext(ctx context.Context) DnsDomainOutput {
	return o
}

// DNS search domain list separated by space (maximum 8 domains)
func (o DnsDomainOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsDomain) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

type DnsDomainArrayOutput struct{ *pulumi.OutputState }

func (DnsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsDomain)(nil)).Elem()
}

func (o DnsDomainArrayOutput) ToDnsDomainArrayOutput() DnsDomainArrayOutput {
	return o
}

func (o DnsDomainArrayOutput) ToDnsDomainArrayOutputWithContext(ctx context.Context) DnsDomainArrayOutput {
	return o
}

func (o DnsDomainArrayOutput) Index(i pulumi.IntInput) DnsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsDomain {
		return vs[0].([]DnsDomain)[vs[1].(int)]
	}).(DnsDomainOutput)
}

type DnsServerHostname struct {
	// DNS server host name list separated by space (maximum 4 domains).
	Hostname *string `pulumi:"hostname"`
}

// DnsServerHostnameInput is an input type that accepts DnsServerHostnameArgs and DnsServerHostnameOutput values.
// You can construct a concrete instance of `DnsServerHostnameInput` via:
//
//	DnsServerHostnameArgs{...}
type DnsServerHostnameInput interface {
	pulumi.Input

	ToDnsServerHostnameOutput() DnsServerHostnameOutput
	ToDnsServerHostnameOutputWithContext(context.Context) DnsServerHostnameOutput
}

type DnsServerHostnameArgs struct {
	// DNS server host name list separated by space (maximum 4 domains).
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
}

func (DnsServerHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsServerHostname)(nil)).Elem()
}

func (i DnsServerHostnameArgs) ToDnsServerHostnameOutput() DnsServerHostnameOutput {
	return i.ToDnsServerHostnameOutputWithContext(context.Background())
}

func (i DnsServerHostnameArgs) ToDnsServerHostnameOutputWithContext(ctx context.Context) DnsServerHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsServerHostnameOutput)
}

// DnsServerHostnameArrayInput is an input type that accepts DnsServerHostnameArray and DnsServerHostnameArrayOutput values.
// You can construct a concrete instance of `DnsServerHostnameArrayInput` via:
//
//	DnsServerHostnameArray{ DnsServerHostnameArgs{...} }
type DnsServerHostnameArrayInput interface {
	pulumi.Input

	ToDnsServerHostnameArrayOutput() DnsServerHostnameArrayOutput
	ToDnsServerHostnameArrayOutputWithContext(context.Context) DnsServerHostnameArrayOutput
}

type DnsServerHostnameArray []DnsServerHostnameInput

func (DnsServerHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsServerHostname)(nil)).Elem()
}

func (i DnsServerHostnameArray) ToDnsServerHostnameArrayOutput() DnsServerHostnameArrayOutput {
	return i.ToDnsServerHostnameArrayOutputWithContext(context.Background())
}

func (i DnsServerHostnameArray) ToDnsServerHostnameArrayOutputWithContext(ctx context.Context) DnsServerHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsServerHostnameArrayOutput)
}

type DnsServerHostnameOutput struct{ *pulumi.OutputState }

func (DnsServerHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsServerHostname)(nil)).Elem()
}

func (o DnsServerHostnameOutput) ToDnsServerHostnameOutput() DnsServerHostnameOutput {
	return o
}

func (o DnsServerHostnameOutput) ToDnsServerHostnameOutputWithContext(ctx context.Context) DnsServerHostnameOutput {
	return o
}

// DNS server host name list separated by space (maximum 4 domains).
func (o DnsServerHostnameOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsServerHostname) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

type DnsServerHostnameArrayOutput struct{ *pulumi.OutputState }

func (DnsServerHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsServerHostname)(nil)).Elem()
}

func (o DnsServerHostnameArrayOutput) ToDnsServerHostnameArrayOutput() DnsServerHostnameArrayOutput {
	return o
}

func (o DnsServerHostnameArrayOutput) ToDnsServerHostnameArrayOutputWithContext(ctx context.Context) DnsServerHostnameArrayOutput {
	return o
}

func (o DnsServerHostnameArrayOutput) Index(i pulumi.IntInput) DnsServerHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsServerHostname {
		return vs[0].([]DnsServerHostname)[vs[1].(int)]
	}).(DnsServerHostnameOutput)
}

type DnsdatabaseDnsEntry struct {
	// Canonical name of the host.
	CanonicalName *string `pulumi:"canonicalName"`
	// Name of the host.
	Hostname *string `pulumi:"hostname"`
	// DNS entry ID.
	Id *int `pulumi:"id"`
	// IPv4 address of the host.
	Ip *string `pulumi:"ip"`
	// IPv6 address of the host.
	Ipv6 *string `pulumi:"ipv6"`
	// DNS entry preference, 0 is the highest preference (0 - 65535, default = 10)
	Preference *int `pulumi:"preference"`
	// Enable/disable resource record status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Time-to-live for this entry (0 to 2147483647 sec, default = 0).
	Ttl *int `pulumi:"ttl"`
	// Resource record type. Valid values: `A`, `NS`, `CNAME`, `MX`, `AAAA`, `PTR`, `PTR_V6`.
	Type *string `pulumi:"type"`
}

// DnsdatabaseDnsEntryInput is an input type that accepts DnsdatabaseDnsEntryArgs and DnsdatabaseDnsEntryOutput values.
// You can construct a concrete instance of `DnsdatabaseDnsEntryInput` via:
//
//	DnsdatabaseDnsEntryArgs{...}
type DnsdatabaseDnsEntryInput interface {
	pulumi.Input

	ToDnsdatabaseDnsEntryOutput() DnsdatabaseDnsEntryOutput
	ToDnsdatabaseDnsEntryOutputWithContext(context.Context) DnsdatabaseDnsEntryOutput
}

type DnsdatabaseDnsEntryArgs struct {
	// Canonical name of the host.
	CanonicalName pulumi.StringPtrInput `pulumi:"canonicalName"`
	// Name of the host.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// DNS entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 address of the host.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// IPv6 address of the host.
	Ipv6 pulumi.StringPtrInput `pulumi:"ipv6"`
	// DNS entry preference, 0 is the highest preference (0 - 65535, default = 10)
	Preference pulumi.IntPtrInput `pulumi:"preference"`
	// Enable/disable resource record status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Time-to-live for this entry (0 to 2147483647 sec, default = 0).
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
	// Resource record type. Valid values: `A`, `NS`, `CNAME`, `MX`, `AAAA`, `PTR`, `PTR_V6`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DnsdatabaseDnsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsdatabaseDnsEntry)(nil)).Elem()
}

func (i DnsdatabaseDnsEntryArgs) ToDnsdatabaseDnsEntryOutput() DnsdatabaseDnsEntryOutput {
	return i.ToDnsdatabaseDnsEntryOutputWithContext(context.Background())
}

func (i DnsdatabaseDnsEntryArgs) ToDnsdatabaseDnsEntryOutputWithContext(ctx context.Context) DnsdatabaseDnsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsdatabaseDnsEntryOutput)
}

// DnsdatabaseDnsEntryArrayInput is an input type that accepts DnsdatabaseDnsEntryArray and DnsdatabaseDnsEntryArrayOutput values.
// You can construct a concrete instance of `DnsdatabaseDnsEntryArrayInput` via:
//
//	DnsdatabaseDnsEntryArray{ DnsdatabaseDnsEntryArgs{...} }
type DnsdatabaseDnsEntryArrayInput interface {
	pulumi.Input

	ToDnsdatabaseDnsEntryArrayOutput() DnsdatabaseDnsEntryArrayOutput
	ToDnsdatabaseDnsEntryArrayOutputWithContext(context.Context) DnsdatabaseDnsEntryArrayOutput
}

type DnsdatabaseDnsEntryArray []DnsdatabaseDnsEntryInput

func (DnsdatabaseDnsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsdatabaseDnsEntry)(nil)).Elem()
}

func (i DnsdatabaseDnsEntryArray) ToDnsdatabaseDnsEntryArrayOutput() DnsdatabaseDnsEntryArrayOutput {
	return i.ToDnsdatabaseDnsEntryArrayOutputWithContext(context.Background())
}

func (i DnsdatabaseDnsEntryArray) ToDnsdatabaseDnsEntryArrayOutputWithContext(ctx context.Context) DnsdatabaseDnsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsdatabaseDnsEntryArrayOutput)
}

type DnsdatabaseDnsEntryOutput struct{ *pulumi.OutputState }

func (DnsdatabaseDnsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsdatabaseDnsEntry)(nil)).Elem()
}

func (o DnsdatabaseDnsEntryOutput) ToDnsdatabaseDnsEntryOutput() DnsdatabaseDnsEntryOutput {
	return o
}

func (o DnsdatabaseDnsEntryOutput) ToDnsdatabaseDnsEntryOutputWithContext(ctx context.Context) DnsdatabaseDnsEntryOutput {
	return o
}

// Canonical name of the host.
func (o DnsdatabaseDnsEntryOutput) CanonicalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsdatabaseDnsEntry) *string { return v.CanonicalName }).(pulumi.StringPtrOutput)
}

// Name of the host.
func (o DnsdatabaseDnsEntryOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsdatabaseDnsEntry) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// DNS entry ID.
func (o DnsdatabaseDnsEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsdatabaseDnsEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 address of the host.
func (o DnsdatabaseDnsEntryOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsdatabaseDnsEntry) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// IPv6 address of the host.
func (o DnsdatabaseDnsEntryOutput) Ipv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsdatabaseDnsEntry) *string { return v.Ipv6 }).(pulumi.StringPtrOutput)
}

// DNS entry preference, 0 is the highest preference (0 - 65535, default = 10)
func (o DnsdatabaseDnsEntryOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsdatabaseDnsEntry) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

// Enable/disable resource record status. Valid values: `enable`, `disable`.
func (o DnsdatabaseDnsEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsdatabaseDnsEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Time-to-live for this entry (0 to 2147483647 sec, default = 0).
func (o DnsdatabaseDnsEntryOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsdatabaseDnsEntry) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

// Resource record type. Valid values: `A`, `NS`, `CNAME`, `MX`, `AAAA`, `PTR`, `PTR_V6`.
func (o DnsdatabaseDnsEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsdatabaseDnsEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DnsdatabaseDnsEntryArrayOutput struct{ *pulumi.OutputState }

func (DnsdatabaseDnsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsdatabaseDnsEntry)(nil)).Elem()
}

func (o DnsdatabaseDnsEntryArrayOutput) ToDnsdatabaseDnsEntryArrayOutput() DnsdatabaseDnsEntryArrayOutput {
	return o
}

func (o DnsdatabaseDnsEntryArrayOutput) ToDnsdatabaseDnsEntryArrayOutputWithContext(ctx context.Context) DnsdatabaseDnsEntryArrayOutput {
	return o
}

func (o DnsdatabaseDnsEntryArrayOutput) Index(i pulumi.IntInput) DnsdatabaseDnsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsdatabaseDnsEntry {
		return vs[0].([]DnsdatabaseDnsEntry)[vs[1].(int)]
	}).(DnsdatabaseDnsEntryOutput)
}

type EvpnExportRt struct {
	// Route target: AA|AA:NN.
	RouteTarget *string `pulumi:"routeTarget"`
}

// EvpnExportRtInput is an input type that accepts EvpnExportRtArgs and EvpnExportRtOutput values.
// You can construct a concrete instance of `EvpnExportRtInput` via:
//
//	EvpnExportRtArgs{...}
type EvpnExportRtInput interface {
	pulumi.Input

	ToEvpnExportRtOutput() EvpnExportRtOutput
	ToEvpnExportRtOutputWithContext(context.Context) EvpnExportRtOutput
}

type EvpnExportRtArgs struct {
	// Route target: AA|AA:NN.
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (EvpnExportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvpnExportRt)(nil)).Elem()
}

func (i EvpnExportRtArgs) ToEvpnExportRtOutput() EvpnExportRtOutput {
	return i.ToEvpnExportRtOutputWithContext(context.Background())
}

func (i EvpnExportRtArgs) ToEvpnExportRtOutputWithContext(ctx context.Context) EvpnExportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvpnExportRtOutput)
}

// EvpnExportRtArrayInput is an input type that accepts EvpnExportRtArray and EvpnExportRtArrayOutput values.
// You can construct a concrete instance of `EvpnExportRtArrayInput` via:
//
//	EvpnExportRtArray{ EvpnExportRtArgs{...} }
type EvpnExportRtArrayInput interface {
	pulumi.Input

	ToEvpnExportRtArrayOutput() EvpnExportRtArrayOutput
	ToEvpnExportRtArrayOutputWithContext(context.Context) EvpnExportRtArrayOutput
}

type EvpnExportRtArray []EvpnExportRtInput

func (EvpnExportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvpnExportRt)(nil)).Elem()
}

func (i EvpnExportRtArray) ToEvpnExportRtArrayOutput() EvpnExportRtArrayOutput {
	return i.ToEvpnExportRtArrayOutputWithContext(context.Background())
}

func (i EvpnExportRtArray) ToEvpnExportRtArrayOutputWithContext(ctx context.Context) EvpnExportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvpnExportRtArrayOutput)
}

type EvpnExportRtOutput struct{ *pulumi.OutputState }

func (EvpnExportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvpnExportRt)(nil)).Elem()
}

func (o EvpnExportRtOutput) ToEvpnExportRtOutput() EvpnExportRtOutput {
	return o
}

func (o EvpnExportRtOutput) ToEvpnExportRtOutputWithContext(ctx context.Context) EvpnExportRtOutput {
	return o
}

// Route target: AA|AA:NN.
func (o EvpnExportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvpnExportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type EvpnExportRtArrayOutput struct{ *pulumi.OutputState }

func (EvpnExportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvpnExportRt)(nil)).Elem()
}

func (o EvpnExportRtArrayOutput) ToEvpnExportRtArrayOutput() EvpnExportRtArrayOutput {
	return o
}

func (o EvpnExportRtArrayOutput) ToEvpnExportRtArrayOutputWithContext(ctx context.Context) EvpnExportRtArrayOutput {
	return o
}

func (o EvpnExportRtArrayOutput) Index(i pulumi.IntInput) EvpnExportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvpnExportRt {
		return vs[0].([]EvpnExportRt)[vs[1].(int)]
	}).(EvpnExportRtOutput)
}

type EvpnImportRt struct {
	// Route target: AA|AA:NN.
	RouteTarget *string `pulumi:"routeTarget"`
}

// EvpnImportRtInput is an input type that accepts EvpnImportRtArgs and EvpnImportRtOutput values.
// You can construct a concrete instance of `EvpnImportRtInput` via:
//
//	EvpnImportRtArgs{...}
type EvpnImportRtInput interface {
	pulumi.Input

	ToEvpnImportRtOutput() EvpnImportRtOutput
	ToEvpnImportRtOutputWithContext(context.Context) EvpnImportRtOutput
}

type EvpnImportRtArgs struct {
	// Route target: AA|AA:NN.
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (EvpnImportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvpnImportRt)(nil)).Elem()
}

func (i EvpnImportRtArgs) ToEvpnImportRtOutput() EvpnImportRtOutput {
	return i.ToEvpnImportRtOutputWithContext(context.Background())
}

func (i EvpnImportRtArgs) ToEvpnImportRtOutputWithContext(ctx context.Context) EvpnImportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvpnImportRtOutput)
}

// EvpnImportRtArrayInput is an input type that accepts EvpnImportRtArray and EvpnImportRtArrayOutput values.
// You can construct a concrete instance of `EvpnImportRtArrayInput` via:
//
//	EvpnImportRtArray{ EvpnImportRtArgs{...} }
type EvpnImportRtArrayInput interface {
	pulumi.Input

	ToEvpnImportRtArrayOutput() EvpnImportRtArrayOutput
	ToEvpnImportRtArrayOutputWithContext(context.Context) EvpnImportRtArrayOutput
}

type EvpnImportRtArray []EvpnImportRtInput

func (EvpnImportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvpnImportRt)(nil)).Elem()
}

func (i EvpnImportRtArray) ToEvpnImportRtArrayOutput() EvpnImportRtArrayOutput {
	return i.ToEvpnImportRtArrayOutputWithContext(context.Background())
}

func (i EvpnImportRtArray) ToEvpnImportRtArrayOutputWithContext(ctx context.Context) EvpnImportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvpnImportRtArrayOutput)
}

type EvpnImportRtOutput struct{ *pulumi.OutputState }

func (EvpnImportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvpnImportRt)(nil)).Elem()
}

func (o EvpnImportRtOutput) ToEvpnImportRtOutput() EvpnImportRtOutput {
	return o
}

func (o EvpnImportRtOutput) ToEvpnImportRtOutputWithContext(ctx context.Context) EvpnImportRtOutput {
	return o
}

// Route target: AA|AA:NN.
func (o EvpnImportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvpnImportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type EvpnImportRtArrayOutput struct{ *pulumi.OutputState }

func (EvpnImportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvpnImportRt)(nil)).Elem()
}

func (o EvpnImportRtArrayOutput) ToEvpnImportRtArrayOutput() EvpnImportRtArrayOutput {
	return o
}

func (o EvpnImportRtArrayOutput) ToEvpnImportRtArrayOutputWithContext(ctx context.Context) EvpnImportRtArrayOutput {
	return o
}

func (o EvpnImportRtArrayOutput) Index(i pulumi.IntInput) EvpnImportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvpnImportRt {
		return vs[0].([]EvpnImportRt)[vs[1].(int)]
	}).(EvpnImportRtOutput)
}

type FabricvpnAdvertisedSubnet struct {
	// Access policy direction. Valid values: `inbound`, `bidirectional`.
	Access *string `pulumi:"access"`
	// Underlying BGP network.
	BgpNetwork *int `pulumi:"bgpNetwork"`
	// Underlying firewall address.
	FirewallAddress *string `pulumi:"firewallAddress"`
	// ID.
	Id *int `pulumi:"id"`
	// Underlying policies.
	Policies *int `pulumi:"policies"`
	// Network prefix.
	Prefix *string `pulumi:"prefix"`
}

// FabricvpnAdvertisedSubnetInput is an input type that accepts FabricvpnAdvertisedSubnetArgs and FabricvpnAdvertisedSubnetOutput values.
// You can construct a concrete instance of `FabricvpnAdvertisedSubnetInput` via:
//
//	FabricvpnAdvertisedSubnetArgs{...}
type FabricvpnAdvertisedSubnetInput interface {
	pulumi.Input

	ToFabricvpnAdvertisedSubnetOutput() FabricvpnAdvertisedSubnetOutput
	ToFabricvpnAdvertisedSubnetOutputWithContext(context.Context) FabricvpnAdvertisedSubnetOutput
}

type FabricvpnAdvertisedSubnetArgs struct {
	// Access policy direction. Valid values: `inbound`, `bidirectional`.
	Access pulumi.StringPtrInput `pulumi:"access"`
	// Underlying BGP network.
	BgpNetwork pulumi.IntPtrInput `pulumi:"bgpNetwork"`
	// Underlying firewall address.
	FirewallAddress pulumi.StringPtrInput `pulumi:"firewallAddress"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Underlying policies.
	Policies pulumi.IntPtrInput `pulumi:"policies"`
	// Network prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (FabricvpnAdvertisedSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricvpnAdvertisedSubnet)(nil)).Elem()
}

func (i FabricvpnAdvertisedSubnetArgs) ToFabricvpnAdvertisedSubnetOutput() FabricvpnAdvertisedSubnetOutput {
	return i.ToFabricvpnAdvertisedSubnetOutputWithContext(context.Background())
}

func (i FabricvpnAdvertisedSubnetArgs) ToFabricvpnAdvertisedSubnetOutputWithContext(ctx context.Context) FabricvpnAdvertisedSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricvpnAdvertisedSubnetOutput)
}

// FabricvpnAdvertisedSubnetArrayInput is an input type that accepts FabricvpnAdvertisedSubnetArray and FabricvpnAdvertisedSubnetArrayOutput values.
// You can construct a concrete instance of `FabricvpnAdvertisedSubnetArrayInput` via:
//
//	FabricvpnAdvertisedSubnetArray{ FabricvpnAdvertisedSubnetArgs{...} }
type FabricvpnAdvertisedSubnetArrayInput interface {
	pulumi.Input

	ToFabricvpnAdvertisedSubnetArrayOutput() FabricvpnAdvertisedSubnetArrayOutput
	ToFabricvpnAdvertisedSubnetArrayOutputWithContext(context.Context) FabricvpnAdvertisedSubnetArrayOutput
}

type FabricvpnAdvertisedSubnetArray []FabricvpnAdvertisedSubnetInput

func (FabricvpnAdvertisedSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FabricvpnAdvertisedSubnet)(nil)).Elem()
}

func (i FabricvpnAdvertisedSubnetArray) ToFabricvpnAdvertisedSubnetArrayOutput() FabricvpnAdvertisedSubnetArrayOutput {
	return i.ToFabricvpnAdvertisedSubnetArrayOutputWithContext(context.Background())
}

func (i FabricvpnAdvertisedSubnetArray) ToFabricvpnAdvertisedSubnetArrayOutputWithContext(ctx context.Context) FabricvpnAdvertisedSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricvpnAdvertisedSubnetArrayOutput)
}

type FabricvpnAdvertisedSubnetOutput struct{ *pulumi.OutputState }

func (FabricvpnAdvertisedSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricvpnAdvertisedSubnet)(nil)).Elem()
}

func (o FabricvpnAdvertisedSubnetOutput) ToFabricvpnAdvertisedSubnetOutput() FabricvpnAdvertisedSubnetOutput {
	return o
}

func (o FabricvpnAdvertisedSubnetOutput) ToFabricvpnAdvertisedSubnetOutputWithContext(ctx context.Context) FabricvpnAdvertisedSubnetOutput {
	return o
}

// Access policy direction. Valid values: `inbound`, `bidirectional`.
func (o FabricvpnAdvertisedSubnetOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricvpnAdvertisedSubnet) *string { return v.Access }).(pulumi.StringPtrOutput)
}

// Underlying BGP network.
func (o FabricvpnAdvertisedSubnetOutput) BgpNetwork() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FabricvpnAdvertisedSubnet) *int { return v.BgpNetwork }).(pulumi.IntPtrOutput)
}

// Underlying firewall address.
func (o FabricvpnAdvertisedSubnetOutput) FirewallAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricvpnAdvertisedSubnet) *string { return v.FirewallAddress }).(pulumi.StringPtrOutput)
}

// ID.
func (o FabricvpnAdvertisedSubnetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FabricvpnAdvertisedSubnet) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Underlying policies.
func (o FabricvpnAdvertisedSubnetOutput) Policies() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FabricvpnAdvertisedSubnet) *int { return v.Policies }).(pulumi.IntPtrOutput)
}

// Network prefix.
func (o FabricvpnAdvertisedSubnetOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricvpnAdvertisedSubnet) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type FabricvpnAdvertisedSubnetArrayOutput struct{ *pulumi.OutputState }

func (FabricvpnAdvertisedSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FabricvpnAdvertisedSubnet)(nil)).Elem()
}

func (o FabricvpnAdvertisedSubnetArrayOutput) ToFabricvpnAdvertisedSubnetArrayOutput() FabricvpnAdvertisedSubnetArrayOutput {
	return o
}

func (o FabricvpnAdvertisedSubnetArrayOutput) ToFabricvpnAdvertisedSubnetArrayOutputWithContext(ctx context.Context) FabricvpnAdvertisedSubnetArrayOutput {
	return o
}

func (o FabricvpnAdvertisedSubnetArrayOutput) Index(i pulumi.IntInput) FabricvpnAdvertisedSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FabricvpnAdvertisedSubnet {
		return vs[0].([]FabricvpnAdvertisedSubnet)[vs[1].(int)]
	}).(FabricvpnAdvertisedSubnetOutput)
}

type FabricvpnOverlay struct {
	// Underlying BGP neighbor entry.
	BgpNeighbor *string `pulumi:"bgpNeighbor"`
	// Underlying BGP neighbor group entry.
	BgpNeighborGroup *string `pulumi:"bgpNeighborGroup"`
	// Underlying BGP neighbor range entry.
	BgpNeighborRange *int `pulumi:"bgpNeighborRange"`
	// Underlying BGP network.
	BgpNetwork *int `pulumi:"bgpNetwork"`
	// Underlying interface name.
	Interface *string `pulumi:"interface"`
	// IPsec interface.
	IpsecPhase1 *string `pulumi:"ipsecPhase1"`
	// Overlay name.
	Name *string `pulumi:"name"`
	// The overlay policy to allow ADVPN thru traffic.
	OverlayPolicy *int `pulumi:"overlayPolicy"`
	// IPv4 address and subnet mask for the overlay tunnel , syntax: X.X.X.X/24.
	OverlayTunnelBlock *string `pulumi:"overlayTunnelBlock"`
	// IP address of the hub gateway (Set by hub).
	RemoteGw *string `pulumi:"remoteGw"`
	// Underlying router policy.
	RoutePolicy *int `pulumi:"routePolicy"`
	// Reference to SD-WAN member entry.
	SdwanMember *int `pulumi:"sdwanMember"`
}

// FabricvpnOverlayInput is an input type that accepts FabricvpnOverlayArgs and FabricvpnOverlayOutput values.
// You can construct a concrete instance of `FabricvpnOverlayInput` via:
//
//	FabricvpnOverlayArgs{...}
type FabricvpnOverlayInput interface {
	pulumi.Input

	ToFabricvpnOverlayOutput() FabricvpnOverlayOutput
	ToFabricvpnOverlayOutputWithContext(context.Context) FabricvpnOverlayOutput
}

type FabricvpnOverlayArgs struct {
	// Underlying BGP neighbor entry.
	BgpNeighbor pulumi.StringPtrInput `pulumi:"bgpNeighbor"`
	// Underlying BGP neighbor group entry.
	BgpNeighborGroup pulumi.StringPtrInput `pulumi:"bgpNeighborGroup"`
	// Underlying BGP neighbor range entry.
	BgpNeighborRange pulumi.IntPtrInput `pulumi:"bgpNeighborRange"`
	// Underlying BGP network.
	BgpNetwork pulumi.IntPtrInput `pulumi:"bgpNetwork"`
	// Underlying interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IPsec interface.
	IpsecPhase1 pulumi.StringPtrInput `pulumi:"ipsecPhase1"`
	// Overlay name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The overlay policy to allow ADVPN thru traffic.
	OverlayPolicy pulumi.IntPtrInput `pulumi:"overlayPolicy"`
	// IPv4 address and subnet mask for the overlay tunnel , syntax: X.X.X.X/24.
	OverlayTunnelBlock pulumi.StringPtrInput `pulumi:"overlayTunnelBlock"`
	// IP address of the hub gateway (Set by hub).
	RemoteGw pulumi.StringPtrInput `pulumi:"remoteGw"`
	// Underlying router policy.
	RoutePolicy pulumi.IntPtrInput `pulumi:"routePolicy"`
	// Reference to SD-WAN member entry.
	SdwanMember pulumi.IntPtrInput `pulumi:"sdwanMember"`
}

func (FabricvpnOverlayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricvpnOverlay)(nil)).Elem()
}

func (i FabricvpnOverlayArgs) ToFabricvpnOverlayOutput() FabricvpnOverlayOutput {
	return i.ToFabricvpnOverlayOutputWithContext(context.Background())
}

func (i FabricvpnOverlayArgs) ToFabricvpnOverlayOutputWithContext(ctx context.Context) FabricvpnOverlayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricvpnOverlayOutput)
}

// FabricvpnOverlayArrayInput is an input type that accepts FabricvpnOverlayArray and FabricvpnOverlayArrayOutput values.
// You can construct a concrete instance of `FabricvpnOverlayArrayInput` via:
//
//	FabricvpnOverlayArray{ FabricvpnOverlayArgs{...} }
type FabricvpnOverlayArrayInput interface {
	pulumi.Input

	ToFabricvpnOverlayArrayOutput() FabricvpnOverlayArrayOutput
	ToFabricvpnOverlayArrayOutputWithContext(context.Context) FabricvpnOverlayArrayOutput
}

type FabricvpnOverlayArray []FabricvpnOverlayInput

func (FabricvpnOverlayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FabricvpnOverlay)(nil)).Elem()
}

func (i FabricvpnOverlayArray) ToFabricvpnOverlayArrayOutput() FabricvpnOverlayArrayOutput {
	return i.ToFabricvpnOverlayArrayOutputWithContext(context.Background())
}

func (i FabricvpnOverlayArray) ToFabricvpnOverlayArrayOutputWithContext(ctx context.Context) FabricvpnOverlayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricvpnOverlayArrayOutput)
}

type FabricvpnOverlayOutput struct{ *pulumi.OutputState }

func (FabricvpnOverlayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricvpnOverlay)(nil)).Elem()
}

func (o FabricvpnOverlayOutput) ToFabricvpnOverlayOutput() FabricvpnOverlayOutput {
	return o
}

func (o FabricvpnOverlayOutput) ToFabricvpnOverlayOutputWithContext(ctx context.Context) FabricvpnOverlayOutput {
	return o
}

// Underlying BGP neighbor entry.
func (o FabricvpnOverlayOutput) BgpNeighbor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *string { return v.BgpNeighbor }).(pulumi.StringPtrOutput)
}

// Underlying BGP neighbor group entry.
func (o FabricvpnOverlayOutput) BgpNeighborGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *string { return v.BgpNeighborGroup }).(pulumi.StringPtrOutput)
}

// Underlying BGP neighbor range entry.
func (o FabricvpnOverlayOutput) BgpNeighborRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *int { return v.BgpNeighborRange }).(pulumi.IntPtrOutput)
}

// Underlying BGP network.
func (o FabricvpnOverlayOutput) BgpNetwork() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *int { return v.BgpNetwork }).(pulumi.IntPtrOutput)
}

// Underlying interface name.
func (o FabricvpnOverlayOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IPsec interface.
func (o FabricvpnOverlayOutput) IpsecPhase1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *string { return v.IpsecPhase1 }).(pulumi.StringPtrOutput)
}

// Overlay name.
func (o FabricvpnOverlayOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The overlay policy to allow ADVPN thru traffic.
func (o FabricvpnOverlayOutput) OverlayPolicy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *int { return v.OverlayPolicy }).(pulumi.IntPtrOutput)
}

// IPv4 address and subnet mask for the overlay tunnel , syntax: X.X.X.X/24.
func (o FabricvpnOverlayOutput) OverlayTunnelBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *string { return v.OverlayTunnelBlock }).(pulumi.StringPtrOutput)
}

// IP address of the hub gateway (Set by hub).
func (o FabricvpnOverlayOutput) RemoteGw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *string { return v.RemoteGw }).(pulumi.StringPtrOutput)
}

// Underlying router policy.
func (o FabricvpnOverlayOutput) RoutePolicy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *int { return v.RoutePolicy }).(pulumi.IntPtrOutput)
}

// Reference to SD-WAN member entry.
func (o FabricvpnOverlayOutput) SdwanMember() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FabricvpnOverlay) *int { return v.SdwanMember }).(pulumi.IntPtrOutput)
}

type FabricvpnOverlayArrayOutput struct{ *pulumi.OutputState }

func (FabricvpnOverlayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FabricvpnOverlay)(nil)).Elem()
}

func (o FabricvpnOverlayArrayOutput) ToFabricvpnOverlayArrayOutput() FabricvpnOverlayArrayOutput {
	return o
}

func (o FabricvpnOverlayArrayOutput) ToFabricvpnOverlayArrayOutputWithContext(ctx context.Context) FabricvpnOverlayArrayOutput {
	return o
}

func (o FabricvpnOverlayArrayOutput) Index(i pulumi.IntInput) FabricvpnOverlayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FabricvpnOverlay {
		return vs[0].([]FabricvpnOverlay)[vs[1].(int)]
	}).(FabricvpnOverlayOutput)
}

type FederatedupgradeKnownHaMember struct {
	// Serial number of HA member
	Serial *string `pulumi:"serial"`
}

// FederatedupgradeKnownHaMemberInput is an input type that accepts FederatedupgradeKnownHaMemberArgs and FederatedupgradeKnownHaMemberOutput values.
// You can construct a concrete instance of `FederatedupgradeKnownHaMemberInput` via:
//
//	FederatedupgradeKnownHaMemberArgs{...}
type FederatedupgradeKnownHaMemberInput interface {
	pulumi.Input

	ToFederatedupgradeKnownHaMemberOutput() FederatedupgradeKnownHaMemberOutput
	ToFederatedupgradeKnownHaMemberOutputWithContext(context.Context) FederatedupgradeKnownHaMemberOutput
}

type FederatedupgradeKnownHaMemberArgs struct {
	// Serial number of HA member
	Serial pulumi.StringPtrInput `pulumi:"serial"`
}

func (FederatedupgradeKnownHaMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedupgradeKnownHaMember)(nil)).Elem()
}

func (i FederatedupgradeKnownHaMemberArgs) ToFederatedupgradeKnownHaMemberOutput() FederatedupgradeKnownHaMemberOutput {
	return i.ToFederatedupgradeKnownHaMemberOutputWithContext(context.Background())
}

func (i FederatedupgradeKnownHaMemberArgs) ToFederatedupgradeKnownHaMemberOutputWithContext(ctx context.Context) FederatedupgradeKnownHaMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedupgradeKnownHaMemberOutput)
}

// FederatedupgradeKnownHaMemberArrayInput is an input type that accepts FederatedupgradeKnownHaMemberArray and FederatedupgradeKnownHaMemberArrayOutput values.
// You can construct a concrete instance of `FederatedupgradeKnownHaMemberArrayInput` via:
//
//	FederatedupgradeKnownHaMemberArray{ FederatedupgradeKnownHaMemberArgs{...} }
type FederatedupgradeKnownHaMemberArrayInput interface {
	pulumi.Input

	ToFederatedupgradeKnownHaMemberArrayOutput() FederatedupgradeKnownHaMemberArrayOutput
	ToFederatedupgradeKnownHaMemberArrayOutputWithContext(context.Context) FederatedupgradeKnownHaMemberArrayOutput
}

type FederatedupgradeKnownHaMemberArray []FederatedupgradeKnownHaMemberInput

func (FederatedupgradeKnownHaMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedupgradeKnownHaMember)(nil)).Elem()
}

func (i FederatedupgradeKnownHaMemberArray) ToFederatedupgradeKnownHaMemberArrayOutput() FederatedupgradeKnownHaMemberArrayOutput {
	return i.ToFederatedupgradeKnownHaMemberArrayOutputWithContext(context.Background())
}

func (i FederatedupgradeKnownHaMemberArray) ToFederatedupgradeKnownHaMemberArrayOutputWithContext(ctx context.Context) FederatedupgradeKnownHaMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedupgradeKnownHaMemberArrayOutput)
}

type FederatedupgradeKnownHaMemberOutput struct{ *pulumi.OutputState }

func (FederatedupgradeKnownHaMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedupgradeKnownHaMember)(nil)).Elem()
}

func (o FederatedupgradeKnownHaMemberOutput) ToFederatedupgradeKnownHaMemberOutput() FederatedupgradeKnownHaMemberOutput {
	return o
}

func (o FederatedupgradeKnownHaMemberOutput) ToFederatedupgradeKnownHaMemberOutputWithContext(ctx context.Context) FederatedupgradeKnownHaMemberOutput {
	return o
}

// Serial number of HA member
func (o FederatedupgradeKnownHaMemberOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedupgradeKnownHaMember) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

type FederatedupgradeKnownHaMemberArrayOutput struct{ *pulumi.OutputState }

func (FederatedupgradeKnownHaMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedupgradeKnownHaMember)(nil)).Elem()
}

func (o FederatedupgradeKnownHaMemberArrayOutput) ToFederatedupgradeKnownHaMemberArrayOutput() FederatedupgradeKnownHaMemberArrayOutput {
	return o
}

func (o FederatedupgradeKnownHaMemberArrayOutput) ToFederatedupgradeKnownHaMemberArrayOutputWithContext(ctx context.Context) FederatedupgradeKnownHaMemberArrayOutput {
	return o
}

func (o FederatedupgradeKnownHaMemberArrayOutput) Index(i pulumi.IntInput) FederatedupgradeKnownHaMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FederatedupgradeKnownHaMember {
		return vs[0].([]FederatedupgradeKnownHaMember)[vs[1].(int)]
	}).(FederatedupgradeKnownHaMemberOutput)
}

type FederatedupgradeNodeList struct {
	// The serial of the FortiGate that controls this device
	CoordinatingFortigate *string `pulumi:"coordinatingFortigate"`
	// What type of device this node represents.
	DeviceType *string `pulumi:"deviceType"`
	// Maximum number of minutes to allow for immediate upgrade preparation.
	MaximumMinutes *int `pulumi:"maximumMinutes"`
	// Serial number of the node to include.
	Serial *string `pulumi:"serial"`
	// When the upgrade was configured. Format hh:mm yyyy/mm/dd UTC.
	SetupTime *string `pulumi:"setupTime"`
	// Scheduled time for the upgrade. Format hh:mm yyyy/mm/dd UTC.
	Time *string `pulumi:"time"`
	// Whether the upgrade should be run immediately, or at a scheduled time. Valid values: `immediate`, `scheduled`.
	Timing *string `pulumi:"timing"`
	// Image IDs to upgrade through.
	UpgradePath *string `pulumi:"upgradePath"`
}

// FederatedupgradeNodeListInput is an input type that accepts FederatedupgradeNodeListArgs and FederatedupgradeNodeListOutput values.
// You can construct a concrete instance of `FederatedupgradeNodeListInput` via:
//
//	FederatedupgradeNodeListArgs{...}
type FederatedupgradeNodeListInput interface {
	pulumi.Input

	ToFederatedupgradeNodeListOutput() FederatedupgradeNodeListOutput
	ToFederatedupgradeNodeListOutputWithContext(context.Context) FederatedupgradeNodeListOutput
}

type FederatedupgradeNodeListArgs struct {
	// The serial of the FortiGate that controls this device
	CoordinatingFortigate pulumi.StringPtrInput `pulumi:"coordinatingFortigate"`
	// What type of device this node represents.
	DeviceType pulumi.StringPtrInput `pulumi:"deviceType"`
	// Maximum number of minutes to allow for immediate upgrade preparation.
	MaximumMinutes pulumi.IntPtrInput `pulumi:"maximumMinutes"`
	// Serial number of the node to include.
	Serial pulumi.StringPtrInput `pulumi:"serial"`
	// When the upgrade was configured. Format hh:mm yyyy/mm/dd UTC.
	SetupTime pulumi.StringPtrInput `pulumi:"setupTime"`
	// Scheduled time for the upgrade. Format hh:mm yyyy/mm/dd UTC.
	Time pulumi.StringPtrInput `pulumi:"time"`
	// Whether the upgrade should be run immediately, or at a scheduled time. Valid values: `immediate`, `scheduled`.
	Timing pulumi.StringPtrInput `pulumi:"timing"`
	// Image IDs to upgrade through.
	UpgradePath pulumi.StringPtrInput `pulumi:"upgradePath"`
}

func (FederatedupgradeNodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedupgradeNodeList)(nil)).Elem()
}

func (i FederatedupgradeNodeListArgs) ToFederatedupgradeNodeListOutput() FederatedupgradeNodeListOutput {
	return i.ToFederatedupgradeNodeListOutputWithContext(context.Background())
}

func (i FederatedupgradeNodeListArgs) ToFederatedupgradeNodeListOutputWithContext(ctx context.Context) FederatedupgradeNodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedupgradeNodeListOutput)
}

// FederatedupgradeNodeListArrayInput is an input type that accepts FederatedupgradeNodeListArray and FederatedupgradeNodeListArrayOutput values.
// You can construct a concrete instance of `FederatedupgradeNodeListArrayInput` via:
//
//	FederatedupgradeNodeListArray{ FederatedupgradeNodeListArgs{...} }
type FederatedupgradeNodeListArrayInput interface {
	pulumi.Input

	ToFederatedupgradeNodeListArrayOutput() FederatedupgradeNodeListArrayOutput
	ToFederatedupgradeNodeListArrayOutputWithContext(context.Context) FederatedupgradeNodeListArrayOutput
}

type FederatedupgradeNodeListArray []FederatedupgradeNodeListInput

func (FederatedupgradeNodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedupgradeNodeList)(nil)).Elem()
}

func (i FederatedupgradeNodeListArray) ToFederatedupgradeNodeListArrayOutput() FederatedupgradeNodeListArrayOutput {
	return i.ToFederatedupgradeNodeListArrayOutputWithContext(context.Background())
}

func (i FederatedupgradeNodeListArray) ToFederatedupgradeNodeListArrayOutputWithContext(ctx context.Context) FederatedupgradeNodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedupgradeNodeListArrayOutput)
}

type FederatedupgradeNodeListOutput struct{ *pulumi.OutputState }

func (FederatedupgradeNodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedupgradeNodeList)(nil)).Elem()
}

func (o FederatedupgradeNodeListOutput) ToFederatedupgradeNodeListOutput() FederatedupgradeNodeListOutput {
	return o
}

func (o FederatedupgradeNodeListOutput) ToFederatedupgradeNodeListOutputWithContext(ctx context.Context) FederatedupgradeNodeListOutput {
	return o
}

// The serial of the FortiGate that controls this device
func (o FederatedupgradeNodeListOutput) CoordinatingFortigate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedupgradeNodeList) *string { return v.CoordinatingFortigate }).(pulumi.StringPtrOutput)
}

// What type of device this node represents.
func (o FederatedupgradeNodeListOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedupgradeNodeList) *string { return v.DeviceType }).(pulumi.StringPtrOutput)
}

// Maximum number of minutes to allow for immediate upgrade preparation.
func (o FederatedupgradeNodeListOutput) MaximumMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FederatedupgradeNodeList) *int { return v.MaximumMinutes }).(pulumi.IntPtrOutput)
}

// Serial number of the node to include.
func (o FederatedupgradeNodeListOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedupgradeNodeList) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

// When the upgrade was configured. Format hh:mm yyyy/mm/dd UTC.
func (o FederatedupgradeNodeListOutput) SetupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedupgradeNodeList) *string { return v.SetupTime }).(pulumi.StringPtrOutput)
}

// Scheduled time for the upgrade. Format hh:mm yyyy/mm/dd UTC.
func (o FederatedupgradeNodeListOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedupgradeNodeList) *string { return v.Time }).(pulumi.StringPtrOutput)
}

// Whether the upgrade should be run immediately, or at a scheduled time. Valid values: `immediate`, `scheduled`.
func (o FederatedupgradeNodeListOutput) Timing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedupgradeNodeList) *string { return v.Timing }).(pulumi.StringPtrOutput)
}

// Image IDs to upgrade through.
func (o FederatedupgradeNodeListOutput) UpgradePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedupgradeNodeList) *string { return v.UpgradePath }).(pulumi.StringPtrOutput)
}

type FederatedupgradeNodeListArrayOutput struct{ *pulumi.OutputState }

func (FederatedupgradeNodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedupgradeNodeList)(nil)).Elem()
}

func (o FederatedupgradeNodeListArrayOutput) ToFederatedupgradeNodeListArrayOutput() FederatedupgradeNodeListArrayOutput {
	return o
}

func (o FederatedupgradeNodeListArrayOutput) ToFederatedupgradeNodeListArrayOutputWithContext(ctx context.Context) FederatedupgradeNodeListArrayOutput {
	return o
}

func (o FederatedupgradeNodeListArrayOutput) Index(i pulumi.IntInput) FederatedupgradeNodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FederatedupgradeNodeList {
		return vs[0].([]FederatedupgradeNodeList)[vs[1].(int)]
	}).(FederatedupgradeNodeListOutput)
}

type GeoipoverrideIp6Range struct {
	// Ending IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	EndIp *string `pulumi:"endIp"`
	// ID of individual entry in the IPv6 range table.
	Id *int `pulumi:"id"`
	// Starting IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	StartIp *string `pulumi:"startIp"`
}

// GeoipoverrideIp6RangeInput is an input type that accepts GeoipoverrideIp6RangeArgs and GeoipoverrideIp6RangeOutput values.
// You can construct a concrete instance of `GeoipoverrideIp6RangeInput` via:
//
//	GeoipoverrideIp6RangeArgs{...}
type GeoipoverrideIp6RangeInput interface {
	pulumi.Input

	ToGeoipoverrideIp6RangeOutput() GeoipoverrideIp6RangeOutput
	ToGeoipoverrideIp6RangeOutputWithContext(context.Context) GeoipoverrideIp6RangeOutput
}

type GeoipoverrideIp6RangeArgs struct {
	// Ending IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID of individual entry in the IPv6 range table.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Starting IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (GeoipoverrideIp6RangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoipoverrideIp6Range)(nil)).Elem()
}

func (i GeoipoverrideIp6RangeArgs) ToGeoipoverrideIp6RangeOutput() GeoipoverrideIp6RangeOutput {
	return i.ToGeoipoverrideIp6RangeOutputWithContext(context.Background())
}

func (i GeoipoverrideIp6RangeArgs) ToGeoipoverrideIp6RangeOutputWithContext(ctx context.Context) GeoipoverrideIp6RangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoipoverrideIp6RangeOutput)
}

// GeoipoverrideIp6RangeArrayInput is an input type that accepts GeoipoverrideIp6RangeArray and GeoipoverrideIp6RangeArrayOutput values.
// You can construct a concrete instance of `GeoipoverrideIp6RangeArrayInput` via:
//
//	GeoipoverrideIp6RangeArray{ GeoipoverrideIp6RangeArgs{...} }
type GeoipoverrideIp6RangeArrayInput interface {
	pulumi.Input

	ToGeoipoverrideIp6RangeArrayOutput() GeoipoverrideIp6RangeArrayOutput
	ToGeoipoverrideIp6RangeArrayOutputWithContext(context.Context) GeoipoverrideIp6RangeArrayOutput
}

type GeoipoverrideIp6RangeArray []GeoipoverrideIp6RangeInput

func (GeoipoverrideIp6RangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoipoverrideIp6Range)(nil)).Elem()
}

func (i GeoipoverrideIp6RangeArray) ToGeoipoverrideIp6RangeArrayOutput() GeoipoverrideIp6RangeArrayOutput {
	return i.ToGeoipoverrideIp6RangeArrayOutputWithContext(context.Background())
}

func (i GeoipoverrideIp6RangeArray) ToGeoipoverrideIp6RangeArrayOutputWithContext(ctx context.Context) GeoipoverrideIp6RangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoipoverrideIp6RangeArrayOutput)
}

type GeoipoverrideIp6RangeOutput struct{ *pulumi.OutputState }

func (GeoipoverrideIp6RangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoipoverrideIp6Range)(nil)).Elem()
}

func (o GeoipoverrideIp6RangeOutput) ToGeoipoverrideIp6RangeOutput() GeoipoverrideIp6RangeOutput {
	return o
}

func (o GeoipoverrideIp6RangeOutput) ToGeoipoverrideIp6RangeOutputWithContext(ctx context.Context) GeoipoverrideIp6RangeOutput {
	return o
}

// Ending IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
func (o GeoipoverrideIp6RangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeoipoverrideIp6Range) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID of individual entry in the IPv6 range table.
func (o GeoipoverrideIp6RangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GeoipoverrideIp6Range) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Starting IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
func (o GeoipoverrideIp6RangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeoipoverrideIp6Range) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type GeoipoverrideIp6RangeArrayOutput struct{ *pulumi.OutputState }

func (GeoipoverrideIp6RangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoipoverrideIp6Range)(nil)).Elem()
}

func (o GeoipoverrideIp6RangeArrayOutput) ToGeoipoverrideIp6RangeArrayOutput() GeoipoverrideIp6RangeArrayOutput {
	return o
}

func (o GeoipoverrideIp6RangeArrayOutput) ToGeoipoverrideIp6RangeArrayOutputWithContext(ctx context.Context) GeoipoverrideIp6RangeArrayOutput {
	return o
}

func (o GeoipoverrideIp6RangeArrayOutput) Index(i pulumi.IntInput) GeoipoverrideIp6RangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoipoverrideIp6Range {
		return vs[0].([]GeoipoverrideIp6Range)[vs[1].(int)]
	}).(GeoipoverrideIp6RangeOutput)
}

type GeoipoverrideIpRange struct {
	// Ending IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	EndIp *string `pulumi:"endIp"`
	// ID of individual entry in the IPv6 range table.
	Id *int `pulumi:"id"`
	// Starting IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	StartIp *string `pulumi:"startIp"`
}

// GeoipoverrideIpRangeInput is an input type that accepts GeoipoverrideIpRangeArgs and GeoipoverrideIpRangeOutput values.
// You can construct a concrete instance of `GeoipoverrideIpRangeInput` via:
//
//	GeoipoverrideIpRangeArgs{...}
type GeoipoverrideIpRangeInput interface {
	pulumi.Input

	ToGeoipoverrideIpRangeOutput() GeoipoverrideIpRangeOutput
	ToGeoipoverrideIpRangeOutputWithContext(context.Context) GeoipoverrideIpRangeOutput
}

type GeoipoverrideIpRangeArgs struct {
	// Ending IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID of individual entry in the IPv6 range table.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Starting IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (GeoipoverrideIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoipoverrideIpRange)(nil)).Elem()
}

func (i GeoipoverrideIpRangeArgs) ToGeoipoverrideIpRangeOutput() GeoipoverrideIpRangeOutput {
	return i.ToGeoipoverrideIpRangeOutputWithContext(context.Background())
}

func (i GeoipoverrideIpRangeArgs) ToGeoipoverrideIpRangeOutputWithContext(ctx context.Context) GeoipoverrideIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoipoverrideIpRangeOutput)
}

// GeoipoverrideIpRangeArrayInput is an input type that accepts GeoipoverrideIpRangeArray and GeoipoverrideIpRangeArrayOutput values.
// You can construct a concrete instance of `GeoipoverrideIpRangeArrayInput` via:
//
//	GeoipoverrideIpRangeArray{ GeoipoverrideIpRangeArgs{...} }
type GeoipoverrideIpRangeArrayInput interface {
	pulumi.Input

	ToGeoipoverrideIpRangeArrayOutput() GeoipoverrideIpRangeArrayOutput
	ToGeoipoverrideIpRangeArrayOutputWithContext(context.Context) GeoipoverrideIpRangeArrayOutput
}

type GeoipoverrideIpRangeArray []GeoipoverrideIpRangeInput

func (GeoipoverrideIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoipoverrideIpRange)(nil)).Elem()
}

func (i GeoipoverrideIpRangeArray) ToGeoipoverrideIpRangeArrayOutput() GeoipoverrideIpRangeArrayOutput {
	return i.ToGeoipoverrideIpRangeArrayOutputWithContext(context.Background())
}

func (i GeoipoverrideIpRangeArray) ToGeoipoverrideIpRangeArrayOutputWithContext(ctx context.Context) GeoipoverrideIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoipoverrideIpRangeArrayOutput)
}

type GeoipoverrideIpRangeOutput struct{ *pulumi.OutputState }

func (GeoipoverrideIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoipoverrideIpRange)(nil)).Elem()
}

func (o GeoipoverrideIpRangeOutput) ToGeoipoverrideIpRangeOutput() GeoipoverrideIpRangeOutput {
	return o
}

func (o GeoipoverrideIpRangeOutput) ToGeoipoverrideIpRangeOutputWithContext(ctx context.Context) GeoipoverrideIpRangeOutput {
	return o
}

// Ending IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
func (o GeoipoverrideIpRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeoipoverrideIpRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID of individual entry in the IPv6 range table.
func (o GeoipoverrideIpRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GeoipoverrideIpRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Starting IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
func (o GeoipoverrideIpRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeoipoverrideIpRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type GeoipoverrideIpRangeArrayOutput struct{ *pulumi.OutputState }

func (GeoipoverrideIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoipoverrideIpRange)(nil)).Elem()
}

func (o GeoipoverrideIpRangeArrayOutput) ToGeoipoverrideIpRangeArrayOutput() GeoipoverrideIpRangeArrayOutput {
	return o
}

func (o GeoipoverrideIpRangeArrayOutput) ToGeoipoverrideIpRangeArrayOutputWithContext(ctx context.Context) GeoipoverrideIpRangeArrayOutput {
	return o
}

func (o GeoipoverrideIpRangeArrayOutput) Index(i pulumi.IntInput) GeoipoverrideIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoipoverrideIpRange {
		return vs[0].([]GeoipoverrideIpRange)[vs[1].(int)]
	}).(GeoipoverrideIpRangeOutput)
}

type GlobalInternetServiceDownloadList struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// GlobalInternetServiceDownloadListInput is an input type that accepts GlobalInternetServiceDownloadListArgs and GlobalInternetServiceDownloadListOutput values.
// You can construct a concrete instance of `GlobalInternetServiceDownloadListInput` via:
//
//	GlobalInternetServiceDownloadListArgs{...}
type GlobalInternetServiceDownloadListInput interface {
	pulumi.Input

	ToGlobalInternetServiceDownloadListOutput() GlobalInternetServiceDownloadListOutput
	ToGlobalInternetServiceDownloadListOutputWithContext(context.Context) GlobalInternetServiceDownloadListOutput
}

type GlobalInternetServiceDownloadListArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (GlobalInternetServiceDownloadListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalInternetServiceDownloadList)(nil)).Elem()
}

func (i GlobalInternetServiceDownloadListArgs) ToGlobalInternetServiceDownloadListOutput() GlobalInternetServiceDownloadListOutput {
	return i.ToGlobalInternetServiceDownloadListOutputWithContext(context.Background())
}

func (i GlobalInternetServiceDownloadListArgs) ToGlobalInternetServiceDownloadListOutputWithContext(ctx context.Context) GlobalInternetServiceDownloadListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalInternetServiceDownloadListOutput)
}

// GlobalInternetServiceDownloadListArrayInput is an input type that accepts GlobalInternetServiceDownloadListArray and GlobalInternetServiceDownloadListArrayOutput values.
// You can construct a concrete instance of `GlobalInternetServiceDownloadListArrayInput` via:
//
//	GlobalInternetServiceDownloadListArray{ GlobalInternetServiceDownloadListArgs{...} }
type GlobalInternetServiceDownloadListArrayInput interface {
	pulumi.Input

	ToGlobalInternetServiceDownloadListArrayOutput() GlobalInternetServiceDownloadListArrayOutput
	ToGlobalInternetServiceDownloadListArrayOutputWithContext(context.Context) GlobalInternetServiceDownloadListArrayOutput
}

type GlobalInternetServiceDownloadListArray []GlobalInternetServiceDownloadListInput

func (GlobalInternetServiceDownloadListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalInternetServiceDownloadList)(nil)).Elem()
}

func (i GlobalInternetServiceDownloadListArray) ToGlobalInternetServiceDownloadListArrayOutput() GlobalInternetServiceDownloadListArrayOutput {
	return i.ToGlobalInternetServiceDownloadListArrayOutputWithContext(context.Background())
}

func (i GlobalInternetServiceDownloadListArray) ToGlobalInternetServiceDownloadListArrayOutputWithContext(ctx context.Context) GlobalInternetServiceDownloadListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalInternetServiceDownloadListArrayOutput)
}

type GlobalInternetServiceDownloadListOutput struct{ *pulumi.OutputState }

func (GlobalInternetServiceDownloadListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalInternetServiceDownloadList)(nil)).Elem()
}

func (o GlobalInternetServiceDownloadListOutput) ToGlobalInternetServiceDownloadListOutput() GlobalInternetServiceDownloadListOutput {
	return o
}

func (o GlobalInternetServiceDownloadListOutput) ToGlobalInternetServiceDownloadListOutputWithContext(ctx context.Context) GlobalInternetServiceDownloadListOutput {
	return o
}

// Internet Service ID.
func (o GlobalInternetServiceDownloadListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalInternetServiceDownloadList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type GlobalInternetServiceDownloadListArrayOutput struct{ *pulumi.OutputState }

func (GlobalInternetServiceDownloadListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalInternetServiceDownloadList)(nil)).Elem()
}

func (o GlobalInternetServiceDownloadListArrayOutput) ToGlobalInternetServiceDownloadListArrayOutput() GlobalInternetServiceDownloadListArrayOutput {
	return o
}

func (o GlobalInternetServiceDownloadListArrayOutput) ToGlobalInternetServiceDownloadListArrayOutputWithContext(ctx context.Context) GlobalInternetServiceDownloadListArrayOutput {
	return o
}

func (o GlobalInternetServiceDownloadListArrayOutput) Index(i pulumi.IntInput) GlobalInternetServiceDownloadListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalInternetServiceDownloadList {
		return vs[0].([]GlobalInternetServiceDownloadList)[vs[1].(int)]
	}).(GlobalInternetServiceDownloadListOutput)
}

type HaHaMgmtInterface struct {
	// Default route destination for reserved HA management interface.
	Dst *string `pulumi:"dst"`
	// Default route gateway for reserved HA management interface.
	Gateway *string `pulumi:"gateway"`
	// Default IPv6 gateway for reserved HA management interface.
	Gateway6 *string `pulumi:"gateway6"`
	// Table ID.
	Id *int `pulumi:"id"`
	// Interface to reserve for HA management.
	Interface *string `pulumi:"interface"`
}

// HaHaMgmtInterfaceInput is an input type that accepts HaHaMgmtInterfaceArgs and HaHaMgmtInterfaceOutput values.
// You can construct a concrete instance of `HaHaMgmtInterfaceInput` via:
//
//	HaHaMgmtInterfaceArgs{...}
type HaHaMgmtInterfaceInput interface {
	pulumi.Input

	ToHaHaMgmtInterfaceOutput() HaHaMgmtInterfaceOutput
	ToHaHaMgmtInterfaceOutputWithContext(context.Context) HaHaMgmtInterfaceOutput
}

type HaHaMgmtInterfaceArgs struct {
	// Default route destination for reserved HA management interface.
	Dst pulumi.StringPtrInput `pulumi:"dst"`
	// Default route gateway for reserved HA management interface.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// Default IPv6 gateway for reserved HA management interface.
	Gateway6 pulumi.StringPtrInput `pulumi:"gateway6"`
	// Table ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface to reserve for HA management.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
}

func (HaHaMgmtInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaHaMgmtInterface)(nil)).Elem()
}

func (i HaHaMgmtInterfaceArgs) ToHaHaMgmtInterfaceOutput() HaHaMgmtInterfaceOutput {
	return i.ToHaHaMgmtInterfaceOutputWithContext(context.Background())
}

func (i HaHaMgmtInterfaceArgs) ToHaHaMgmtInterfaceOutputWithContext(ctx context.Context) HaHaMgmtInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaHaMgmtInterfaceOutput)
}

// HaHaMgmtInterfaceArrayInput is an input type that accepts HaHaMgmtInterfaceArray and HaHaMgmtInterfaceArrayOutput values.
// You can construct a concrete instance of `HaHaMgmtInterfaceArrayInput` via:
//
//	HaHaMgmtInterfaceArray{ HaHaMgmtInterfaceArgs{...} }
type HaHaMgmtInterfaceArrayInput interface {
	pulumi.Input

	ToHaHaMgmtInterfaceArrayOutput() HaHaMgmtInterfaceArrayOutput
	ToHaHaMgmtInterfaceArrayOutputWithContext(context.Context) HaHaMgmtInterfaceArrayOutput
}

type HaHaMgmtInterfaceArray []HaHaMgmtInterfaceInput

func (HaHaMgmtInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaHaMgmtInterface)(nil)).Elem()
}

func (i HaHaMgmtInterfaceArray) ToHaHaMgmtInterfaceArrayOutput() HaHaMgmtInterfaceArrayOutput {
	return i.ToHaHaMgmtInterfaceArrayOutputWithContext(context.Background())
}

func (i HaHaMgmtInterfaceArray) ToHaHaMgmtInterfaceArrayOutputWithContext(ctx context.Context) HaHaMgmtInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaHaMgmtInterfaceArrayOutput)
}

type HaHaMgmtInterfaceOutput struct{ *pulumi.OutputState }

func (HaHaMgmtInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaHaMgmtInterface)(nil)).Elem()
}

func (o HaHaMgmtInterfaceOutput) ToHaHaMgmtInterfaceOutput() HaHaMgmtInterfaceOutput {
	return o
}

func (o HaHaMgmtInterfaceOutput) ToHaHaMgmtInterfaceOutputWithContext(ctx context.Context) HaHaMgmtInterfaceOutput {
	return o
}

// Default route destination for reserved HA management interface.
func (o HaHaMgmtInterfaceOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaHaMgmtInterface) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

// Default route gateway for reserved HA management interface.
func (o HaHaMgmtInterfaceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaHaMgmtInterface) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// Default IPv6 gateway for reserved HA management interface.
func (o HaHaMgmtInterfaceOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaHaMgmtInterface) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

// Table ID.
func (o HaHaMgmtInterfaceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaHaMgmtInterface) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface to reserve for HA management.
func (o HaHaMgmtInterfaceOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaHaMgmtInterface) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

type HaHaMgmtInterfaceArrayOutput struct{ *pulumi.OutputState }

func (HaHaMgmtInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaHaMgmtInterface)(nil)).Elem()
}

func (o HaHaMgmtInterfaceArrayOutput) ToHaHaMgmtInterfaceArrayOutput() HaHaMgmtInterfaceArrayOutput {
	return o
}

func (o HaHaMgmtInterfaceArrayOutput) ToHaHaMgmtInterfaceArrayOutputWithContext(ctx context.Context) HaHaMgmtInterfaceArrayOutput {
	return o
}

func (o HaHaMgmtInterfaceArrayOutput) Index(i pulumi.IntInput) HaHaMgmtInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HaHaMgmtInterface {
		return vs[0].([]HaHaMgmtInterface)[vs[1].(int)]
	}).(HaHaMgmtInterfaceOutput)
}

type HaSecondaryVcluster struct {
	// Interfaces to check for port monitoring (or link failure).
	Monitor *string `pulumi:"monitor"`
	// Enable and increase the priority of the unit that should always be primary (master). Valid values: `enable`, `disable`.
	Override *string `pulumi:"override"`
	// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
	OverrideWaitTime *int `pulumi:"overrideWaitTime"`
	// Remote IP monitoring failover threshold (0 - 50).
	PingserverFailoverThreshold *int `pulumi:"pingserverFailoverThreshold"`
	// Interfaces to check for remote IP monitoring.
	PingserverMonitorInterface *string `pulumi:"pingserverMonitorInterface"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
	PingserverSecondaryForceReset *string `pulumi:"pingserverSecondaryForceReset"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
	PingserverSlaveForceReset *string `pulumi:"pingserverSlaveForceReset"`
	// Increase the priority to select the primary unit (0 - 255).
	Priority *int `pulumi:"priority"`
	// Cluster ID.
	VclusterId *int `pulumi:"vclusterId"`
	// VDOMs in virtual cluster 2.
	Vdom *string `pulumi:"vdom"`
}

// HaSecondaryVclusterInput is an input type that accepts HaSecondaryVclusterArgs and HaSecondaryVclusterOutput values.
// You can construct a concrete instance of `HaSecondaryVclusterInput` via:
//
//	HaSecondaryVclusterArgs{...}
type HaSecondaryVclusterInput interface {
	pulumi.Input

	ToHaSecondaryVclusterOutput() HaSecondaryVclusterOutput
	ToHaSecondaryVclusterOutputWithContext(context.Context) HaSecondaryVclusterOutput
}

type HaSecondaryVclusterArgs struct {
	// Interfaces to check for port monitoring (or link failure).
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	// Enable and increase the priority of the unit that should always be primary (master). Valid values: `enable`, `disable`.
	Override pulumi.StringPtrInput `pulumi:"override"`
	// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
	OverrideWaitTime pulumi.IntPtrInput `pulumi:"overrideWaitTime"`
	// Remote IP monitoring failover threshold (0 - 50).
	PingserverFailoverThreshold pulumi.IntPtrInput `pulumi:"pingserverFailoverThreshold"`
	// Interfaces to check for remote IP monitoring.
	PingserverMonitorInterface pulumi.StringPtrInput `pulumi:"pingserverMonitorInterface"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
	PingserverSecondaryForceReset pulumi.StringPtrInput `pulumi:"pingserverSecondaryForceReset"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
	PingserverSlaveForceReset pulumi.StringPtrInput `pulumi:"pingserverSlaveForceReset"`
	// Increase the priority to select the primary unit (0 - 255).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Cluster ID.
	VclusterId pulumi.IntPtrInput `pulumi:"vclusterId"`
	// VDOMs in virtual cluster 2.
	Vdom pulumi.StringPtrInput `pulumi:"vdom"`
}

func (HaSecondaryVclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaSecondaryVcluster)(nil)).Elem()
}

func (i HaSecondaryVclusterArgs) ToHaSecondaryVclusterOutput() HaSecondaryVclusterOutput {
	return i.ToHaSecondaryVclusterOutputWithContext(context.Background())
}

func (i HaSecondaryVclusterArgs) ToHaSecondaryVclusterOutputWithContext(ctx context.Context) HaSecondaryVclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaSecondaryVclusterOutput)
}

func (i HaSecondaryVclusterArgs) ToHaSecondaryVclusterPtrOutput() HaSecondaryVclusterPtrOutput {
	return i.ToHaSecondaryVclusterPtrOutputWithContext(context.Background())
}

func (i HaSecondaryVclusterArgs) ToHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) HaSecondaryVclusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaSecondaryVclusterOutput).ToHaSecondaryVclusterPtrOutputWithContext(ctx)
}

// HaSecondaryVclusterPtrInput is an input type that accepts HaSecondaryVclusterArgs, HaSecondaryVclusterPtr and HaSecondaryVclusterPtrOutput values.
// You can construct a concrete instance of `HaSecondaryVclusterPtrInput` via:
//
//	        HaSecondaryVclusterArgs{...}
//
//	or:
//
//	        nil
type HaSecondaryVclusterPtrInput interface {
	pulumi.Input

	ToHaSecondaryVclusterPtrOutput() HaSecondaryVclusterPtrOutput
	ToHaSecondaryVclusterPtrOutputWithContext(context.Context) HaSecondaryVclusterPtrOutput
}

type haSecondaryVclusterPtrType HaSecondaryVclusterArgs

func HaSecondaryVclusterPtr(v *HaSecondaryVclusterArgs) HaSecondaryVclusterPtrInput {
	return (*haSecondaryVclusterPtrType)(v)
}

func (*haSecondaryVclusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HaSecondaryVcluster)(nil)).Elem()
}

func (i *haSecondaryVclusterPtrType) ToHaSecondaryVclusterPtrOutput() HaSecondaryVclusterPtrOutput {
	return i.ToHaSecondaryVclusterPtrOutputWithContext(context.Background())
}

func (i *haSecondaryVclusterPtrType) ToHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) HaSecondaryVclusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaSecondaryVclusterPtrOutput)
}

type HaSecondaryVclusterOutput struct{ *pulumi.OutputState }

func (HaSecondaryVclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaSecondaryVcluster)(nil)).Elem()
}

func (o HaSecondaryVclusterOutput) ToHaSecondaryVclusterOutput() HaSecondaryVclusterOutput {
	return o
}

func (o HaSecondaryVclusterOutput) ToHaSecondaryVclusterOutputWithContext(ctx context.Context) HaSecondaryVclusterOutput {
	return o
}

func (o HaSecondaryVclusterOutput) ToHaSecondaryVclusterPtrOutput() HaSecondaryVclusterPtrOutput {
	return o.ToHaSecondaryVclusterPtrOutputWithContext(context.Background())
}

func (o HaSecondaryVclusterOutput) ToHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) HaSecondaryVclusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HaSecondaryVcluster) *HaSecondaryVcluster {
		return &v
	}).(HaSecondaryVclusterPtrOutput)
}

// Interfaces to check for port monitoring (or link failure).
func (o HaSecondaryVclusterOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaSecondaryVcluster) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

// Enable and increase the priority of the unit that should always be primary (master). Valid values: `enable`, `disable`.
func (o HaSecondaryVclusterOutput) Override() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaSecondaryVcluster) *string { return v.Override }).(pulumi.StringPtrOutput)
}

// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
func (o HaSecondaryVclusterOutput) OverrideWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaSecondaryVcluster) *int { return v.OverrideWaitTime }).(pulumi.IntPtrOutput)
}

// Remote IP monitoring failover threshold (0 - 50).
func (o HaSecondaryVclusterOutput) PingserverFailoverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaSecondaryVcluster) *int { return v.PingserverFailoverThreshold }).(pulumi.IntPtrOutput)
}

// Interfaces to check for remote IP monitoring.
func (o HaSecondaryVclusterOutput) PingserverMonitorInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaSecondaryVcluster) *string { return v.PingserverMonitorInterface }).(pulumi.StringPtrOutput)
}

// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
func (o HaSecondaryVclusterOutput) PingserverSecondaryForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaSecondaryVcluster) *string { return v.PingserverSecondaryForceReset }).(pulumi.StringPtrOutput)
}

// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
func (o HaSecondaryVclusterOutput) PingserverSlaveForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaSecondaryVcluster) *string { return v.PingserverSlaveForceReset }).(pulumi.StringPtrOutput)
}

// Increase the priority to select the primary unit (0 - 255).
func (o HaSecondaryVclusterOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaSecondaryVcluster) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Cluster ID.
func (o HaSecondaryVclusterOutput) VclusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaSecondaryVcluster) *int { return v.VclusterId }).(pulumi.IntPtrOutput)
}

// VDOMs in virtual cluster 2.
func (o HaSecondaryVclusterOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaSecondaryVcluster) *string { return v.Vdom }).(pulumi.StringPtrOutput)
}

type HaSecondaryVclusterPtrOutput struct{ *pulumi.OutputState }

func (HaSecondaryVclusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HaSecondaryVcluster)(nil)).Elem()
}

func (o HaSecondaryVclusterPtrOutput) ToHaSecondaryVclusterPtrOutput() HaSecondaryVclusterPtrOutput {
	return o
}

func (o HaSecondaryVclusterPtrOutput) ToHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) HaSecondaryVclusterPtrOutput {
	return o
}

func (o HaSecondaryVclusterPtrOutput) Elem() HaSecondaryVclusterOutput {
	return o.ApplyT(func(v *HaSecondaryVcluster) HaSecondaryVcluster {
		if v != nil {
			return *v
		}
		var ret HaSecondaryVcluster
		return ret
	}).(HaSecondaryVclusterOutput)
}

// Interfaces to check for port monitoring (or link failure).
func (o HaSecondaryVclusterPtrOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.Monitor
	}).(pulumi.StringPtrOutput)
}

// Enable and increase the priority of the unit that should always be primary (master). Valid values: `enable`, `disable`.
func (o HaSecondaryVclusterPtrOutput) Override() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.Override
	}).(pulumi.StringPtrOutput)
}

// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
func (o HaSecondaryVclusterPtrOutput) OverrideWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.OverrideWaitTime
	}).(pulumi.IntPtrOutput)
}

// Remote IP monitoring failover threshold (0 - 50).
func (o HaSecondaryVclusterPtrOutput) PingserverFailoverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.PingserverFailoverThreshold
	}).(pulumi.IntPtrOutput)
}

// Interfaces to check for remote IP monitoring.
func (o HaSecondaryVclusterPtrOutput) PingserverMonitorInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.PingserverMonitorInterface
	}).(pulumi.StringPtrOutput)
}

// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
func (o HaSecondaryVclusterPtrOutput) PingserverSecondaryForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.PingserverSecondaryForceReset
	}).(pulumi.StringPtrOutput)
}

// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
func (o HaSecondaryVclusterPtrOutput) PingserverSlaveForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.PingserverSlaveForceReset
	}).(pulumi.StringPtrOutput)
}

// Increase the priority to select the primary unit (0 - 255).
func (o HaSecondaryVclusterPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Cluster ID.
func (o HaSecondaryVclusterPtrOutput) VclusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.VclusterId
	}).(pulumi.IntPtrOutput)
}

// VDOMs in virtual cluster 2.
func (o HaSecondaryVclusterPtrOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.Vdom
	}).(pulumi.StringPtrOutput)
}

type HaUnicastPeer struct {
	// Table ID.
	Id *int `pulumi:"id"`
	// Unicast peer IP.
	PeerIp *string `pulumi:"peerIp"`
}

// HaUnicastPeerInput is an input type that accepts HaUnicastPeerArgs and HaUnicastPeerOutput values.
// You can construct a concrete instance of `HaUnicastPeerInput` via:
//
//	HaUnicastPeerArgs{...}
type HaUnicastPeerInput interface {
	pulumi.Input

	ToHaUnicastPeerOutput() HaUnicastPeerOutput
	ToHaUnicastPeerOutputWithContext(context.Context) HaUnicastPeerOutput
}

type HaUnicastPeerArgs struct {
	// Table ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Unicast peer IP.
	PeerIp pulumi.StringPtrInput `pulumi:"peerIp"`
}

func (HaUnicastPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaUnicastPeer)(nil)).Elem()
}

func (i HaUnicastPeerArgs) ToHaUnicastPeerOutput() HaUnicastPeerOutput {
	return i.ToHaUnicastPeerOutputWithContext(context.Background())
}

func (i HaUnicastPeerArgs) ToHaUnicastPeerOutputWithContext(ctx context.Context) HaUnicastPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaUnicastPeerOutput)
}

// HaUnicastPeerArrayInput is an input type that accepts HaUnicastPeerArray and HaUnicastPeerArrayOutput values.
// You can construct a concrete instance of `HaUnicastPeerArrayInput` via:
//
//	HaUnicastPeerArray{ HaUnicastPeerArgs{...} }
type HaUnicastPeerArrayInput interface {
	pulumi.Input

	ToHaUnicastPeerArrayOutput() HaUnicastPeerArrayOutput
	ToHaUnicastPeerArrayOutputWithContext(context.Context) HaUnicastPeerArrayOutput
}

type HaUnicastPeerArray []HaUnicastPeerInput

func (HaUnicastPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaUnicastPeer)(nil)).Elem()
}

func (i HaUnicastPeerArray) ToHaUnicastPeerArrayOutput() HaUnicastPeerArrayOutput {
	return i.ToHaUnicastPeerArrayOutputWithContext(context.Background())
}

func (i HaUnicastPeerArray) ToHaUnicastPeerArrayOutputWithContext(ctx context.Context) HaUnicastPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaUnicastPeerArrayOutput)
}

type HaUnicastPeerOutput struct{ *pulumi.OutputState }

func (HaUnicastPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaUnicastPeer)(nil)).Elem()
}

func (o HaUnicastPeerOutput) ToHaUnicastPeerOutput() HaUnicastPeerOutput {
	return o
}

func (o HaUnicastPeerOutput) ToHaUnicastPeerOutputWithContext(ctx context.Context) HaUnicastPeerOutput {
	return o
}

// Table ID.
func (o HaUnicastPeerOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaUnicastPeer) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Unicast peer IP.
func (o HaUnicastPeerOutput) PeerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaUnicastPeer) *string { return v.PeerIp }).(pulumi.StringPtrOutput)
}

type HaUnicastPeerArrayOutput struct{ *pulumi.OutputState }

func (HaUnicastPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaUnicastPeer)(nil)).Elem()
}

func (o HaUnicastPeerArrayOutput) ToHaUnicastPeerArrayOutput() HaUnicastPeerArrayOutput {
	return o
}

func (o HaUnicastPeerArrayOutput) ToHaUnicastPeerArrayOutputWithContext(ctx context.Context) HaUnicastPeerArrayOutput {
	return o
}

func (o HaUnicastPeerArrayOutput) Index(i pulumi.IntInput) HaUnicastPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HaUnicastPeer {
		return vs[0].([]HaUnicastPeer)[vs[1].(int)]
	}).(HaUnicastPeerOutput)
}

type HaVcluster struct {
	// Interfaces to check for port monitoring (or link failure).
	Monitor *string `pulumi:"monitor"`
	// Enable and increase the priority of the unit that should always be primary (master). Valid values: `enable`, `disable`.
	Override *string `pulumi:"override"`
	// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
	OverrideWaitTime *int `pulumi:"overrideWaitTime"`
	// Remote IP monitoring failover threshold (0 - 50).
	PingserverFailoverThreshold *int `pulumi:"pingserverFailoverThreshold"`
	// Time to wait in minutes before renegotiating after a remote IP monitoring failover.
	PingserverFlipTimeout *int `pulumi:"pingserverFlipTimeout"`
	// Interfaces to check for remote IP monitoring.
	PingserverMonitorInterface *string `pulumi:"pingserverMonitorInterface"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
	PingserverSecondaryForceReset *string `pulumi:"pingserverSecondaryForceReset"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
	PingserverSlaveForceReset *string `pulumi:"pingserverSlaveForceReset"`
	// Increase the priority to select the primary unit (0 - 255).
	Priority *int `pulumi:"priority"`
	// ID.
	VclusterId *int `pulumi:"vclusterId"`
	// Virtual domain(s) in the virtual cluster. The structure of `vdom` block is documented below.
	Vdoms []HaVclusterVdom `pulumi:"vdoms"`
}

// HaVclusterInput is an input type that accepts HaVclusterArgs and HaVclusterOutput values.
// You can construct a concrete instance of `HaVclusterInput` via:
//
//	HaVclusterArgs{...}
type HaVclusterInput interface {
	pulumi.Input

	ToHaVclusterOutput() HaVclusterOutput
	ToHaVclusterOutputWithContext(context.Context) HaVclusterOutput
}

type HaVclusterArgs struct {
	// Interfaces to check for port monitoring (or link failure).
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	// Enable and increase the priority of the unit that should always be primary (master). Valid values: `enable`, `disable`.
	Override pulumi.StringPtrInput `pulumi:"override"`
	// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
	OverrideWaitTime pulumi.IntPtrInput `pulumi:"overrideWaitTime"`
	// Remote IP monitoring failover threshold (0 - 50).
	PingserverFailoverThreshold pulumi.IntPtrInput `pulumi:"pingserverFailoverThreshold"`
	// Time to wait in minutes before renegotiating after a remote IP monitoring failover.
	PingserverFlipTimeout pulumi.IntPtrInput `pulumi:"pingserverFlipTimeout"`
	// Interfaces to check for remote IP monitoring.
	PingserverMonitorInterface pulumi.StringPtrInput `pulumi:"pingserverMonitorInterface"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
	PingserverSecondaryForceReset pulumi.StringPtrInput `pulumi:"pingserverSecondaryForceReset"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
	PingserverSlaveForceReset pulumi.StringPtrInput `pulumi:"pingserverSlaveForceReset"`
	// Increase the priority to select the primary unit (0 - 255).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// ID.
	VclusterId pulumi.IntPtrInput `pulumi:"vclusterId"`
	// Virtual domain(s) in the virtual cluster. The structure of `vdom` block is documented below.
	Vdoms HaVclusterVdomArrayInput `pulumi:"vdoms"`
}

func (HaVclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVcluster)(nil)).Elem()
}

func (i HaVclusterArgs) ToHaVclusterOutput() HaVclusterOutput {
	return i.ToHaVclusterOutputWithContext(context.Background())
}

func (i HaVclusterArgs) ToHaVclusterOutputWithContext(ctx context.Context) HaVclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVclusterOutput)
}

// HaVclusterArrayInput is an input type that accepts HaVclusterArray and HaVclusterArrayOutput values.
// You can construct a concrete instance of `HaVclusterArrayInput` via:
//
//	HaVclusterArray{ HaVclusterArgs{...} }
type HaVclusterArrayInput interface {
	pulumi.Input

	ToHaVclusterArrayOutput() HaVclusterArrayOutput
	ToHaVclusterArrayOutputWithContext(context.Context) HaVclusterArrayOutput
}

type HaVclusterArray []HaVclusterInput

func (HaVclusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVcluster)(nil)).Elem()
}

func (i HaVclusterArray) ToHaVclusterArrayOutput() HaVclusterArrayOutput {
	return i.ToHaVclusterArrayOutputWithContext(context.Background())
}

func (i HaVclusterArray) ToHaVclusterArrayOutputWithContext(ctx context.Context) HaVclusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVclusterArrayOutput)
}

type HaVclusterOutput struct{ *pulumi.OutputState }

func (HaVclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVcluster)(nil)).Elem()
}

func (o HaVclusterOutput) ToHaVclusterOutput() HaVclusterOutput {
	return o
}

func (o HaVclusterOutput) ToHaVclusterOutputWithContext(ctx context.Context) HaVclusterOutput {
	return o
}

// Interfaces to check for port monitoring (or link failure).
func (o HaVclusterOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaVcluster) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

// Enable and increase the priority of the unit that should always be primary (master). Valid values: `enable`, `disable`.
func (o HaVclusterOutput) Override() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaVcluster) *string { return v.Override }).(pulumi.StringPtrOutput)
}

// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
func (o HaVclusterOutput) OverrideWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaVcluster) *int { return v.OverrideWaitTime }).(pulumi.IntPtrOutput)
}

// Remote IP monitoring failover threshold (0 - 50).
func (o HaVclusterOutput) PingserverFailoverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaVcluster) *int { return v.PingserverFailoverThreshold }).(pulumi.IntPtrOutput)
}

// Time to wait in minutes before renegotiating after a remote IP monitoring failover.
func (o HaVclusterOutput) PingserverFlipTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaVcluster) *int { return v.PingserverFlipTimeout }).(pulumi.IntPtrOutput)
}

// Interfaces to check for remote IP monitoring.
func (o HaVclusterOutput) PingserverMonitorInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaVcluster) *string { return v.PingserverMonitorInterface }).(pulumi.StringPtrOutput)
}

// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
func (o HaVclusterOutput) PingserverSecondaryForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaVcluster) *string { return v.PingserverSecondaryForceReset }).(pulumi.StringPtrOutput)
}

// Enable to force the cluster to negotiate after a remote IP monitoring failover. Valid values: `enable`, `disable`.
func (o HaVclusterOutput) PingserverSlaveForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaVcluster) *string { return v.PingserverSlaveForceReset }).(pulumi.StringPtrOutput)
}

// Increase the priority to select the primary unit (0 - 255).
func (o HaVclusterOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaVcluster) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// ID.
func (o HaVclusterOutput) VclusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaVcluster) *int { return v.VclusterId }).(pulumi.IntPtrOutput)
}

// Virtual domain(s) in the virtual cluster. The structure of `vdom` block is documented below.
func (o HaVclusterOutput) Vdoms() HaVclusterVdomArrayOutput {
	return o.ApplyT(func(v HaVcluster) []HaVclusterVdom { return v.Vdoms }).(HaVclusterVdomArrayOutput)
}

type HaVclusterArrayOutput struct{ *pulumi.OutputState }

func (HaVclusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVcluster)(nil)).Elem()
}

func (o HaVclusterArrayOutput) ToHaVclusterArrayOutput() HaVclusterArrayOutput {
	return o
}

func (o HaVclusterArrayOutput) ToHaVclusterArrayOutputWithContext(ctx context.Context) HaVclusterArrayOutput {
	return o
}

func (o HaVclusterArrayOutput) Index(i pulumi.IntInput) HaVclusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HaVcluster {
		return vs[0].([]HaVcluster)[vs[1].(int)]
	}).(HaVclusterOutput)
}

type HaVclusterVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// HaVclusterVdomInput is an input type that accepts HaVclusterVdomArgs and HaVclusterVdomOutput values.
// You can construct a concrete instance of `HaVclusterVdomInput` via:
//
//	HaVclusterVdomArgs{...}
type HaVclusterVdomInput interface {
	pulumi.Input

	ToHaVclusterVdomOutput() HaVclusterVdomOutput
	ToHaVclusterVdomOutputWithContext(context.Context) HaVclusterVdomOutput
}

type HaVclusterVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (HaVclusterVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVclusterVdom)(nil)).Elem()
}

func (i HaVclusterVdomArgs) ToHaVclusterVdomOutput() HaVclusterVdomOutput {
	return i.ToHaVclusterVdomOutputWithContext(context.Background())
}

func (i HaVclusterVdomArgs) ToHaVclusterVdomOutputWithContext(ctx context.Context) HaVclusterVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVclusterVdomOutput)
}

// HaVclusterVdomArrayInput is an input type that accepts HaVclusterVdomArray and HaVclusterVdomArrayOutput values.
// You can construct a concrete instance of `HaVclusterVdomArrayInput` via:
//
//	HaVclusterVdomArray{ HaVclusterVdomArgs{...} }
type HaVclusterVdomArrayInput interface {
	pulumi.Input

	ToHaVclusterVdomArrayOutput() HaVclusterVdomArrayOutput
	ToHaVclusterVdomArrayOutputWithContext(context.Context) HaVclusterVdomArrayOutput
}

type HaVclusterVdomArray []HaVclusterVdomInput

func (HaVclusterVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVclusterVdom)(nil)).Elem()
}

func (i HaVclusterVdomArray) ToHaVclusterVdomArrayOutput() HaVclusterVdomArrayOutput {
	return i.ToHaVclusterVdomArrayOutputWithContext(context.Background())
}

func (i HaVclusterVdomArray) ToHaVclusterVdomArrayOutputWithContext(ctx context.Context) HaVclusterVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVclusterVdomArrayOutput)
}

type HaVclusterVdomOutput struct{ *pulumi.OutputState }

func (HaVclusterVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVclusterVdom)(nil)).Elem()
}

func (o HaVclusterVdomOutput) ToHaVclusterVdomOutput() HaVclusterVdomOutput {
	return o
}

func (o HaVclusterVdomOutput) ToHaVclusterVdomOutputWithContext(ctx context.Context) HaVclusterVdomOutput {
	return o
}

// Virtual domain name.
func (o HaVclusterVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaVclusterVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type HaVclusterVdomArrayOutput struct{ *pulumi.OutputState }

func (HaVclusterVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVclusterVdom)(nil)).Elem()
}

func (o HaVclusterVdomArrayOutput) ToHaVclusterVdomArrayOutput() HaVclusterVdomArrayOutput {
	return o
}

func (o HaVclusterVdomArrayOutput) ToHaVclusterVdomArrayOutputWithContext(ctx context.Context) HaVclusterVdomArrayOutput {
	return o
}

func (o HaVclusterVdomArrayOutput) Index(i pulumi.IntInput) HaVclusterVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HaVclusterVdom {
		return vs[0].([]HaVclusterVdom)[vs[1].(int)]
	}).(HaVclusterVdomOutput)
}

type IkeDhGroup14 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup14Input is an input type that accepts IkeDhGroup14Args and IkeDhGroup14Output values.
// You can construct a concrete instance of `IkeDhGroup14Input` via:
//
//	IkeDhGroup14Args{...}
type IkeDhGroup14Input interface {
	pulumi.Input

	ToIkeDhGroup14Output() IkeDhGroup14Output
	ToIkeDhGroup14OutputWithContext(context.Context) IkeDhGroup14Output
}

type IkeDhGroup14Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup14Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup14)(nil)).Elem()
}

func (i IkeDhGroup14Args) ToIkeDhGroup14Output() IkeDhGroup14Output {
	return i.ToIkeDhGroup14OutputWithContext(context.Background())
}

func (i IkeDhGroup14Args) ToIkeDhGroup14OutputWithContext(ctx context.Context) IkeDhGroup14Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup14Output)
}

func (i IkeDhGroup14Args) ToIkeDhGroup14PtrOutput() IkeDhGroup14PtrOutput {
	return i.ToIkeDhGroup14PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup14Args) ToIkeDhGroup14PtrOutputWithContext(ctx context.Context) IkeDhGroup14PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup14Output).ToIkeDhGroup14PtrOutputWithContext(ctx)
}

// IkeDhGroup14PtrInput is an input type that accepts IkeDhGroup14Args, IkeDhGroup14Ptr and IkeDhGroup14PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup14PtrInput` via:
//
//	        IkeDhGroup14Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup14PtrInput interface {
	pulumi.Input

	ToIkeDhGroup14PtrOutput() IkeDhGroup14PtrOutput
	ToIkeDhGroup14PtrOutputWithContext(context.Context) IkeDhGroup14PtrOutput
}

type ikeDhGroup14PtrType IkeDhGroup14Args

func IkeDhGroup14Ptr(v *IkeDhGroup14Args) IkeDhGroup14PtrInput {
	return (*ikeDhGroup14PtrType)(v)
}

func (*ikeDhGroup14PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup14)(nil)).Elem()
}

func (i *ikeDhGroup14PtrType) ToIkeDhGroup14PtrOutput() IkeDhGroup14PtrOutput {
	return i.ToIkeDhGroup14PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup14PtrType) ToIkeDhGroup14PtrOutputWithContext(ctx context.Context) IkeDhGroup14PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup14PtrOutput)
}

type IkeDhGroup14Output struct{ *pulumi.OutputState }

func (IkeDhGroup14Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup14)(nil)).Elem()
}

func (o IkeDhGroup14Output) ToIkeDhGroup14Output() IkeDhGroup14Output {
	return o
}

func (o IkeDhGroup14Output) ToIkeDhGroup14OutputWithContext(ctx context.Context) IkeDhGroup14Output {
	return o
}

func (o IkeDhGroup14Output) ToIkeDhGroup14PtrOutput() IkeDhGroup14PtrOutput {
	return o.ToIkeDhGroup14PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup14Output) ToIkeDhGroup14PtrOutputWithContext(ctx context.Context) IkeDhGroup14PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup14) *IkeDhGroup14 {
		return &v
	}).(IkeDhGroup14PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup14Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup14) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup14Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup14) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup14Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup14) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup14PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup14PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup14)(nil)).Elem()
}

func (o IkeDhGroup14PtrOutput) ToIkeDhGroup14PtrOutput() IkeDhGroup14PtrOutput {
	return o
}

func (o IkeDhGroup14PtrOutput) ToIkeDhGroup14PtrOutputWithContext(ctx context.Context) IkeDhGroup14PtrOutput {
	return o
}

func (o IkeDhGroup14PtrOutput) Elem() IkeDhGroup14Output {
	return o.ApplyT(func(v *IkeDhGroup14) IkeDhGroup14 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup14
		return ret
	}).(IkeDhGroup14Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup14PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup14) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup14PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup14) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup14PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup14) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup15 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup15Input is an input type that accepts IkeDhGroup15Args and IkeDhGroup15Output values.
// You can construct a concrete instance of `IkeDhGroup15Input` via:
//
//	IkeDhGroup15Args{...}
type IkeDhGroup15Input interface {
	pulumi.Input

	ToIkeDhGroup15Output() IkeDhGroup15Output
	ToIkeDhGroup15OutputWithContext(context.Context) IkeDhGroup15Output
}

type IkeDhGroup15Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup15Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup15)(nil)).Elem()
}

func (i IkeDhGroup15Args) ToIkeDhGroup15Output() IkeDhGroup15Output {
	return i.ToIkeDhGroup15OutputWithContext(context.Background())
}

func (i IkeDhGroup15Args) ToIkeDhGroup15OutputWithContext(ctx context.Context) IkeDhGroup15Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup15Output)
}

func (i IkeDhGroup15Args) ToIkeDhGroup15PtrOutput() IkeDhGroup15PtrOutput {
	return i.ToIkeDhGroup15PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup15Args) ToIkeDhGroup15PtrOutputWithContext(ctx context.Context) IkeDhGroup15PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup15Output).ToIkeDhGroup15PtrOutputWithContext(ctx)
}

// IkeDhGroup15PtrInput is an input type that accepts IkeDhGroup15Args, IkeDhGroup15Ptr and IkeDhGroup15PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup15PtrInput` via:
//
//	        IkeDhGroup15Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup15PtrInput interface {
	pulumi.Input

	ToIkeDhGroup15PtrOutput() IkeDhGroup15PtrOutput
	ToIkeDhGroup15PtrOutputWithContext(context.Context) IkeDhGroup15PtrOutput
}

type ikeDhGroup15PtrType IkeDhGroup15Args

func IkeDhGroup15Ptr(v *IkeDhGroup15Args) IkeDhGroup15PtrInput {
	return (*ikeDhGroup15PtrType)(v)
}

func (*ikeDhGroup15PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup15)(nil)).Elem()
}

func (i *ikeDhGroup15PtrType) ToIkeDhGroup15PtrOutput() IkeDhGroup15PtrOutput {
	return i.ToIkeDhGroup15PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup15PtrType) ToIkeDhGroup15PtrOutputWithContext(ctx context.Context) IkeDhGroup15PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup15PtrOutput)
}

type IkeDhGroup15Output struct{ *pulumi.OutputState }

func (IkeDhGroup15Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup15)(nil)).Elem()
}

func (o IkeDhGroup15Output) ToIkeDhGroup15Output() IkeDhGroup15Output {
	return o
}

func (o IkeDhGroup15Output) ToIkeDhGroup15OutputWithContext(ctx context.Context) IkeDhGroup15Output {
	return o
}

func (o IkeDhGroup15Output) ToIkeDhGroup15PtrOutput() IkeDhGroup15PtrOutput {
	return o.ToIkeDhGroup15PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup15Output) ToIkeDhGroup15PtrOutputWithContext(ctx context.Context) IkeDhGroup15PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup15) *IkeDhGroup15 {
		return &v
	}).(IkeDhGroup15PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup15Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup15) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup15Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup15) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup15Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup15) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup15PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup15PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup15)(nil)).Elem()
}

func (o IkeDhGroup15PtrOutput) ToIkeDhGroup15PtrOutput() IkeDhGroup15PtrOutput {
	return o
}

func (o IkeDhGroup15PtrOutput) ToIkeDhGroup15PtrOutputWithContext(ctx context.Context) IkeDhGroup15PtrOutput {
	return o
}

func (o IkeDhGroup15PtrOutput) Elem() IkeDhGroup15Output {
	return o.ApplyT(func(v *IkeDhGroup15) IkeDhGroup15 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup15
		return ret
	}).(IkeDhGroup15Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup15PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup15) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup15PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup15) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup15PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup15) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup16 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup16Input is an input type that accepts IkeDhGroup16Args and IkeDhGroup16Output values.
// You can construct a concrete instance of `IkeDhGroup16Input` via:
//
//	IkeDhGroup16Args{...}
type IkeDhGroup16Input interface {
	pulumi.Input

	ToIkeDhGroup16Output() IkeDhGroup16Output
	ToIkeDhGroup16OutputWithContext(context.Context) IkeDhGroup16Output
}

type IkeDhGroup16Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup16Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup16)(nil)).Elem()
}

func (i IkeDhGroup16Args) ToIkeDhGroup16Output() IkeDhGroup16Output {
	return i.ToIkeDhGroup16OutputWithContext(context.Background())
}

func (i IkeDhGroup16Args) ToIkeDhGroup16OutputWithContext(ctx context.Context) IkeDhGroup16Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup16Output)
}

func (i IkeDhGroup16Args) ToIkeDhGroup16PtrOutput() IkeDhGroup16PtrOutput {
	return i.ToIkeDhGroup16PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup16Args) ToIkeDhGroup16PtrOutputWithContext(ctx context.Context) IkeDhGroup16PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup16Output).ToIkeDhGroup16PtrOutputWithContext(ctx)
}

// IkeDhGroup16PtrInput is an input type that accepts IkeDhGroup16Args, IkeDhGroup16Ptr and IkeDhGroup16PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup16PtrInput` via:
//
//	        IkeDhGroup16Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup16PtrInput interface {
	pulumi.Input

	ToIkeDhGroup16PtrOutput() IkeDhGroup16PtrOutput
	ToIkeDhGroup16PtrOutputWithContext(context.Context) IkeDhGroup16PtrOutput
}

type ikeDhGroup16PtrType IkeDhGroup16Args

func IkeDhGroup16Ptr(v *IkeDhGroup16Args) IkeDhGroup16PtrInput {
	return (*ikeDhGroup16PtrType)(v)
}

func (*ikeDhGroup16PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup16)(nil)).Elem()
}

func (i *ikeDhGroup16PtrType) ToIkeDhGroup16PtrOutput() IkeDhGroup16PtrOutput {
	return i.ToIkeDhGroup16PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup16PtrType) ToIkeDhGroup16PtrOutputWithContext(ctx context.Context) IkeDhGroup16PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup16PtrOutput)
}

type IkeDhGroup16Output struct{ *pulumi.OutputState }

func (IkeDhGroup16Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup16)(nil)).Elem()
}

func (o IkeDhGroup16Output) ToIkeDhGroup16Output() IkeDhGroup16Output {
	return o
}

func (o IkeDhGroup16Output) ToIkeDhGroup16OutputWithContext(ctx context.Context) IkeDhGroup16Output {
	return o
}

func (o IkeDhGroup16Output) ToIkeDhGroup16PtrOutput() IkeDhGroup16PtrOutput {
	return o.ToIkeDhGroup16PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup16Output) ToIkeDhGroup16PtrOutputWithContext(ctx context.Context) IkeDhGroup16PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup16) *IkeDhGroup16 {
		return &v
	}).(IkeDhGroup16PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup16Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup16) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup16Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup16) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup16Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup16) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup16PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup16PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup16)(nil)).Elem()
}

func (o IkeDhGroup16PtrOutput) ToIkeDhGroup16PtrOutput() IkeDhGroup16PtrOutput {
	return o
}

func (o IkeDhGroup16PtrOutput) ToIkeDhGroup16PtrOutputWithContext(ctx context.Context) IkeDhGroup16PtrOutput {
	return o
}

func (o IkeDhGroup16PtrOutput) Elem() IkeDhGroup16Output {
	return o.ApplyT(func(v *IkeDhGroup16) IkeDhGroup16 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup16
		return ret
	}).(IkeDhGroup16Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup16PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup16) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup16PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup16) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup16PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup16) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup17 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup17Input is an input type that accepts IkeDhGroup17Args and IkeDhGroup17Output values.
// You can construct a concrete instance of `IkeDhGroup17Input` via:
//
//	IkeDhGroup17Args{...}
type IkeDhGroup17Input interface {
	pulumi.Input

	ToIkeDhGroup17Output() IkeDhGroup17Output
	ToIkeDhGroup17OutputWithContext(context.Context) IkeDhGroup17Output
}

type IkeDhGroup17Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup17Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup17)(nil)).Elem()
}

func (i IkeDhGroup17Args) ToIkeDhGroup17Output() IkeDhGroup17Output {
	return i.ToIkeDhGroup17OutputWithContext(context.Background())
}

func (i IkeDhGroup17Args) ToIkeDhGroup17OutputWithContext(ctx context.Context) IkeDhGroup17Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup17Output)
}

func (i IkeDhGroup17Args) ToIkeDhGroup17PtrOutput() IkeDhGroup17PtrOutput {
	return i.ToIkeDhGroup17PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup17Args) ToIkeDhGroup17PtrOutputWithContext(ctx context.Context) IkeDhGroup17PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup17Output).ToIkeDhGroup17PtrOutputWithContext(ctx)
}

// IkeDhGroup17PtrInput is an input type that accepts IkeDhGroup17Args, IkeDhGroup17Ptr and IkeDhGroup17PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup17PtrInput` via:
//
//	        IkeDhGroup17Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup17PtrInput interface {
	pulumi.Input

	ToIkeDhGroup17PtrOutput() IkeDhGroup17PtrOutput
	ToIkeDhGroup17PtrOutputWithContext(context.Context) IkeDhGroup17PtrOutput
}

type ikeDhGroup17PtrType IkeDhGroup17Args

func IkeDhGroup17Ptr(v *IkeDhGroup17Args) IkeDhGroup17PtrInput {
	return (*ikeDhGroup17PtrType)(v)
}

func (*ikeDhGroup17PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup17)(nil)).Elem()
}

func (i *ikeDhGroup17PtrType) ToIkeDhGroup17PtrOutput() IkeDhGroup17PtrOutput {
	return i.ToIkeDhGroup17PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup17PtrType) ToIkeDhGroup17PtrOutputWithContext(ctx context.Context) IkeDhGroup17PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup17PtrOutput)
}

type IkeDhGroup17Output struct{ *pulumi.OutputState }

func (IkeDhGroup17Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup17)(nil)).Elem()
}

func (o IkeDhGroup17Output) ToIkeDhGroup17Output() IkeDhGroup17Output {
	return o
}

func (o IkeDhGroup17Output) ToIkeDhGroup17OutputWithContext(ctx context.Context) IkeDhGroup17Output {
	return o
}

func (o IkeDhGroup17Output) ToIkeDhGroup17PtrOutput() IkeDhGroup17PtrOutput {
	return o.ToIkeDhGroup17PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup17Output) ToIkeDhGroup17PtrOutputWithContext(ctx context.Context) IkeDhGroup17PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup17) *IkeDhGroup17 {
		return &v
	}).(IkeDhGroup17PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup17Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup17) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup17Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup17) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup17Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup17) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup17PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup17PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup17)(nil)).Elem()
}

func (o IkeDhGroup17PtrOutput) ToIkeDhGroup17PtrOutput() IkeDhGroup17PtrOutput {
	return o
}

func (o IkeDhGroup17PtrOutput) ToIkeDhGroup17PtrOutputWithContext(ctx context.Context) IkeDhGroup17PtrOutput {
	return o
}

func (o IkeDhGroup17PtrOutput) Elem() IkeDhGroup17Output {
	return o.ApplyT(func(v *IkeDhGroup17) IkeDhGroup17 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup17
		return ret
	}).(IkeDhGroup17Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup17PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup17) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup17PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup17) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup17PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup17) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup18 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup18Input is an input type that accepts IkeDhGroup18Args and IkeDhGroup18Output values.
// You can construct a concrete instance of `IkeDhGroup18Input` via:
//
//	IkeDhGroup18Args{...}
type IkeDhGroup18Input interface {
	pulumi.Input

	ToIkeDhGroup18Output() IkeDhGroup18Output
	ToIkeDhGroup18OutputWithContext(context.Context) IkeDhGroup18Output
}

type IkeDhGroup18Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup18Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup18)(nil)).Elem()
}

func (i IkeDhGroup18Args) ToIkeDhGroup18Output() IkeDhGroup18Output {
	return i.ToIkeDhGroup18OutputWithContext(context.Background())
}

func (i IkeDhGroup18Args) ToIkeDhGroup18OutputWithContext(ctx context.Context) IkeDhGroup18Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup18Output)
}

func (i IkeDhGroup18Args) ToIkeDhGroup18PtrOutput() IkeDhGroup18PtrOutput {
	return i.ToIkeDhGroup18PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup18Args) ToIkeDhGroup18PtrOutputWithContext(ctx context.Context) IkeDhGroup18PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup18Output).ToIkeDhGroup18PtrOutputWithContext(ctx)
}

// IkeDhGroup18PtrInput is an input type that accepts IkeDhGroup18Args, IkeDhGroup18Ptr and IkeDhGroup18PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup18PtrInput` via:
//
//	        IkeDhGroup18Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup18PtrInput interface {
	pulumi.Input

	ToIkeDhGroup18PtrOutput() IkeDhGroup18PtrOutput
	ToIkeDhGroup18PtrOutputWithContext(context.Context) IkeDhGroup18PtrOutput
}

type ikeDhGroup18PtrType IkeDhGroup18Args

func IkeDhGroup18Ptr(v *IkeDhGroup18Args) IkeDhGroup18PtrInput {
	return (*ikeDhGroup18PtrType)(v)
}

func (*ikeDhGroup18PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup18)(nil)).Elem()
}

func (i *ikeDhGroup18PtrType) ToIkeDhGroup18PtrOutput() IkeDhGroup18PtrOutput {
	return i.ToIkeDhGroup18PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup18PtrType) ToIkeDhGroup18PtrOutputWithContext(ctx context.Context) IkeDhGroup18PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup18PtrOutput)
}

type IkeDhGroup18Output struct{ *pulumi.OutputState }

func (IkeDhGroup18Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup18)(nil)).Elem()
}

func (o IkeDhGroup18Output) ToIkeDhGroup18Output() IkeDhGroup18Output {
	return o
}

func (o IkeDhGroup18Output) ToIkeDhGroup18OutputWithContext(ctx context.Context) IkeDhGroup18Output {
	return o
}

func (o IkeDhGroup18Output) ToIkeDhGroup18PtrOutput() IkeDhGroup18PtrOutput {
	return o.ToIkeDhGroup18PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup18Output) ToIkeDhGroup18PtrOutputWithContext(ctx context.Context) IkeDhGroup18PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup18) *IkeDhGroup18 {
		return &v
	}).(IkeDhGroup18PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup18Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup18) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup18Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup18) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup18Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup18) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup18PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup18PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup18)(nil)).Elem()
}

func (o IkeDhGroup18PtrOutput) ToIkeDhGroup18PtrOutput() IkeDhGroup18PtrOutput {
	return o
}

func (o IkeDhGroup18PtrOutput) ToIkeDhGroup18PtrOutputWithContext(ctx context.Context) IkeDhGroup18PtrOutput {
	return o
}

func (o IkeDhGroup18PtrOutput) Elem() IkeDhGroup18Output {
	return o.ApplyT(func(v *IkeDhGroup18) IkeDhGroup18 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup18
		return ret
	}).(IkeDhGroup18Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup18PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup18) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup18PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup18) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup18PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup18) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup19 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup19Input is an input type that accepts IkeDhGroup19Args and IkeDhGroup19Output values.
// You can construct a concrete instance of `IkeDhGroup19Input` via:
//
//	IkeDhGroup19Args{...}
type IkeDhGroup19Input interface {
	pulumi.Input

	ToIkeDhGroup19Output() IkeDhGroup19Output
	ToIkeDhGroup19OutputWithContext(context.Context) IkeDhGroup19Output
}

type IkeDhGroup19Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup19Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup19)(nil)).Elem()
}

func (i IkeDhGroup19Args) ToIkeDhGroup19Output() IkeDhGroup19Output {
	return i.ToIkeDhGroup19OutputWithContext(context.Background())
}

func (i IkeDhGroup19Args) ToIkeDhGroup19OutputWithContext(ctx context.Context) IkeDhGroup19Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup19Output)
}

func (i IkeDhGroup19Args) ToIkeDhGroup19PtrOutput() IkeDhGroup19PtrOutput {
	return i.ToIkeDhGroup19PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup19Args) ToIkeDhGroup19PtrOutputWithContext(ctx context.Context) IkeDhGroup19PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup19Output).ToIkeDhGroup19PtrOutputWithContext(ctx)
}

// IkeDhGroup19PtrInput is an input type that accepts IkeDhGroup19Args, IkeDhGroup19Ptr and IkeDhGroup19PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup19PtrInput` via:
//
//	        IkeDhGroup19Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup19PtrInput interface {
	pulumi.Input

	ToIkeDhGroup19PtrOutput() IkeDhGroup19PtrOutput
	ToIkeDhGroup19PtrOutputWithContext(context.Context) IkeDhGroup19PtrOutput
}

type ikeDhGroup19PtrType IkeDhGroup19Args

func IkeDhGroup19Ptr(v *IkeDhGroup19Args) IkeDhGroup19PtrInput {
	return (*ikeDhGroup19PtrType)(v)
}

func (*ikeDhGroup19PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup19)(nil)).Elem()
}

func (i *ikeDhGroup19PtrType) ToIkeDhGroup19PtrOutput() IkeDhGroup19PtrOutput {
	return i.ToIkeDhGroup19PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup19PtrType) ToIkeDhGroup19PtrOutputWithContext(ctx context.Context) IkeDhGroup19PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup19PtrOutput)
}

type IkeDhGroup19Output struct{ *pulumi.OutputState }

func (IkeDhGroup19Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup19)(nil)).Elem()
}

func (o IkeDhGroup19Output) ToIkeDhGroup19Output() IkeDhGroup19Output {
	return o
}

func (o IkeDhGroup19Output) ToIkeDhGroup19OutputWithContext(ctx context.Context) IkeDhGroup19Output {
	return o
}

func (o IkeDhGroup19Output) ToIkeDhGroup19PtrOutput() IkeDhGroup19PtrOutput {
	return o.ToIkeDhGroup19PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup19Output) ToIkeDhGroup19PtrOutputWithContext(ctx context.Context) IkeDhGroup19PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup19) *IkeDhGroup19 {
		return &v
	}).(IkeDhGroup19PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup19Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup19) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup19Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup19) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup19Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup19) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup19PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup19PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup19)(nil)).Elem()
}

func (o IkeDhGroup19PtrOutput) ToIkeDhGroup19PtrOutput() IkeDhGroup19PtrOutput {
	return o
}

func (o IkeDhGroup19PtrOutput) ToIkeDhGroup19PtrOutputWithContext(ctx context.Context) IkeDhGroup19PtrOutput {
	return o
}

func (o IkeDhGroup19PtrOutput) Elem() IkeDhGroup19Output {
	return o.ApplyT(func(v *IkeDhGroup19) IkeDhGroup19 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup19
		return ret
	}).(IkeDhGroup19Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup19PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup19) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup19PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup19) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup19PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup19) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup1 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup1Input is an input type that accepts IkeDhGroup1Args and IkeDhGroup1Output values.
// You can construct a concrete instance of `IkeDhGroup1Input` via:
//
//	IkeDhGroup1Args{...}
type IkeDhGroup1Input interface {
	pulumi.Input

	ToIkeDhGroup1Output() IkeDhGroup1Output
	ToIkeDhGroup1OutputWithContext(context.Context) IkeDhGroup1Output
}

type IkeDhGroup1Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup1)(nil)).Elem()
}

func (i IkeDhGroup1Args) ToIkeDhGroup1Output() IkeDhGroup1Output {
	return i.ToIkeDhGroup1OutputWithContext(context.Background())
}

func (i IkeDhGroup1Args) ToIkeDhGroup1OutputWithContext(ctx context.Context) IkeDhGroup1Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup1Output)
}

func (i IkeDhGroup1Args) ToIkeDhGroup1PtrOutput() IkeDhGroup1PtrOutput {
	return i.ToIkeDhGroup1PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup1Args) ToIkeDhGroup1PtrOutputWithContext(ctx context.Context) IkeDhGroup1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup1Output).ToIkeDhGroup1PtrOutputWithContext(ctx)
}

// IkeDhGroup1PtrInput is an input type that accepts IkeDhGroup1Args, IkeDhGroup1Ptr and IkeDhGroup1PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup1PtrInput` via:
//
//	        IkeDhGroup1Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup1PtrInput interface {
	pulumi.Input

	ToIkeDhGroup1PtrOutput() IkeDhGroup1PtrOutput
	ToIkeDhGroup1PtrOutputWithContext(context.Context) IkeDhGroup1PtrOutput
}

type ikeDhGroup1PtrType IkeDhGroup1Args

func IkeDhGroup1Ptr(v *IkeDhGroup1Args) IkeDhGroup1PtrInput {
	return (*ikeDhGroup1PtrType)(v)
}

func (*ikeDhGroup1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup1)(nil)).Elem()
}

func (i *ikeDhGroup1PtrType) ToIkeDhGroup1PtrOutput() IkeDhGroup1PtrOutput {
	return i.ToIkeDhGroup1PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup1PtrType) ToIkeDhGroup1PtrOutputWithContext(ctx context.Context) IkeDhGroup1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup1PtrOutput)
}

type IkeDhGroup1Output struct{ *pulumi.OutputState }

func (IkeDhGroup1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup1)(nil)).Elem()
}

func (o IkeDhGroup1Output) ToIkeDhGroup1Output() IkeDhGroup1Output {
	return o
}

func (o IkeDhGroup1Output) ToIkeDhGroup1OutputWithContext(ctx context.Context) IkeDhGroup1Output {
	return o
}

func (o IkeDhGroup1Output) ToIkeDhGroup1PtrOutput() IkeDhGroup1PtrOutput {
	return o.ToIkeDhGroup1PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup1Output) ToIkeDhGroup1PtrOutputWithContext(ctx context.Context) IkeDhGroup1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup1) *IkeDhGroup1 {
		return &v
	}).(IkeDhGroup1PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup1Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup1) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup1Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup1) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup1Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup1) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup1PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup1)(nil)).Elem()
}

func (o IkeDhGroup1PtrOutput) ToIkeDhGroup1PtrOutput() IkeDhGroup1PtrOutput {
	return o
}

func (o IkeDhGroup1PtrOutput) ToIkeDhGroup1PtrOutputWithContext(ctx context.Context) IkeDhGroup1PtrOutput {
	return o
}

func (o IkeDhGroup1PtrOutput) Elem() IkeDhGroup1Output {
	return o.ApplyT(func(v *IkeDhGroup1) IkeDhGroup1 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup1
		return ret
	}).(IkeDhGroup1Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup1PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup1) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup1PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup1) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup1PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup1) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup20 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup20Input is an input type that accepts IkeDhGroup20Args and IkeDhGroup20Output values.
// You can construct a concrete instance of `IkeDhGroup20Input` via:
//
//	IkeDhGroup20Args{...}
type IkeDhGroup20Input interface {
	pulumi.Input

	ToIkeDhGroup20Output() IkeDhGroup20Output
	ToIkeDhGroup20OutputWithContext(context.Context) IkeDhGroup20Output
}

type IkeDhGroup20Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup20Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup20)(nil)).Elem()
}

func (i IkeDhGroup20Args) ToIkeDhGroup20Output() IkeDhGroup20Output {
	return i.ToIkeDhGroup20OutputWithContext(context.Background())
}

func (i IkeDhGroup20Args) ToIkeDhGroup20OutputWithContext(ctx context.Context) IkeDhGroup20Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup20Output)
}

func (i IkeDhGroup20Args) ToIkeDhGroup20PtrOutput() IkeDhGroup20PtrOutput {
	return i.ToIkeDhGroup20PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup20Args) ToIkeDhGroup20PtrOutputWithContext(ctx context.Context) IkeDhGroup20PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup20Output).ToIkeDhGroup20PtrOutputWithContext(ctx)
}

// IkeDhGroup20PtrInput is an input type that accepts IkeDhGroup20Args, IkeDhGroup20Ptr and IkeDhGroup20PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup20PtrInput` via:
//
//	        IkeDhGroup20Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup20PtrInput interface {
	pulumi.Input

	ToIkeDhGroup20PtrOutput() IkeDhGroup20PtrOutput
	ToIkeDhGroup20PtrOutputWithContext(context.Context) IkeDhGroup20PtrOutput
}

type ikeDhGroup20PtrType IkeDhGroup20Args

func IkeDhGroup20Ptr(v *IkeDhGroup20Args) IkeDhGroup20PtrInput {
	return (*ikeDhGroup20PtrType)(v)
}

func (*ikeDhGroup20PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup20)(nil)).Elem()
}

func (i *ikeDhGroup20PtrType) ToIkeDhGroup20PtrOutput() IkeDhGroup20PtrOutput {
	return i.ToIkeDhGroup20PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup20PtrType) ToIkeDhGroup20PtrOutputWithContext(ctx context.Context) IkeDhGroup20PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup20PtrOutput)
}

type IkeDhGroup20Output struct{ *pulumi.OutputState }

func (IkeDhGroup20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup20)(nil)).Elem()
}

func (o IkeDhGroup20Output) ToIkeDhGroup20Output() IkeDhGroup20Output {
	return o
}

func (o IkeDhGroup20Output) ToIkeDhGroup20OutputWithContext(ctx context.Context) IkeDhGroup20Output {
	return o
}

func (o IkeDhGroup20Output) ToIkeDhGroup20PtrOutput() IkeDhGroup20PtrOutput {
	return o.ToIkeDhGroup20PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup20Output) ToIkeDhGroup20PtrOutputWithContext(ctx context.Context) IkeDhGroup20PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup20) *IkeDhGroup20 {
		return &v
	}).(IkeDhGroup20PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup20Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup20) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup20Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup20) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup20Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup20) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup20PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup20PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup20)(nil)).Elem()
}

func (o IkeDhGroup20PtrOutput) ToIkeDhGroup20PtrOutput() IkeDhGroup20PtrOutput {
	return o
}

func (o IkeDhGroup20PtrOutput) ToIkeDhGroup20PtrOutputWithContext(ctx context.Context) IkeDhGroup20PtrOutput {
	return o
}

func (o IkeDhGroup20PtrOutput) Elem() IkeDhGroup20Output {
	return o.ApplyT(func(v *IkeDhGroup20) IkeDhGroup20 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup20
		return ret
	}).(IkeDhGroup20Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup20PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup20) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup20PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup20) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup20PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup20) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup21 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup21Input is an input type that accepts IkeDhGroup21Args and IkeDhGroup21Output values.
// You can construct a concrete instance of `IkeDhGroup21Input` via:
//
//	IkeDhGroup21Args{...}
type IkeDhGroup21Input interface {
	pulumi.Input

	ToIkeDhGroup21Output() IkeDhGroup21Output
	ToIkeDhGroup21OutputWithContext(context.Context) IkeDhGroup21Output
}

type IkeDhGroup21Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup21Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup21)(nil)).Elem()
}

func (i IkeDhGroup21Args) ToIkeDhGroup21Output() IkeDhGroup21Output {
	return i.ToIkeDhGroup21OutputWithContext(context.Background())
}

func (i IkeDhGroup21Args) ToIkeDhGroup21OutputWithContext(ctx context.Context) IkeDhGroup21Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup21Output)
}

func (i IkeDhGroup21Args) ToIkeDhGroup21PtrOutput() IkeDhGroup21PtrOutput {
	return i.ToIkeDhGroup21PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup21Args) ToIkeDhGroup21PtrOutputWithContext(ctx context.Context) IkeDhGroup21PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup21Output).ToIkeDhGroup21PtrOutputWithContext(ctx)
}

// IkeDhGroup21PtrInput is an input type that accepts IkeDhGroup21Args, IkeDhGroup21Ptr and IkeDhGroup21PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup21PtrInput` via:
//
//	        IkeDhGroup21Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup21PtrInput interface {
	pulumi.Input

	ToIkeDhGroup21PtrOutput() IkeDhGroup21PtrOutput
	ToIkeDhGroup21PtrOutputWithContext(context.Context) IkeDhGroup21PtrOutput
}

type ikeDhGroup21PtrType IkeDhGroup21Args

func IkeDhGroup21Ptr(v *IkeDhGroup21Args) IkeDhGroup21PtrInput {
	return (*ikeDhGroup21PtrType)(v)
}

func (*ikeDhGroup21PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup21)(nil)).Elem()
}

func (i *ikeDhGroup21PtrType) ToIkeDhGroup21PtrOutput() IkeDhGroup21PtrOutput {
	return i.ToIkeDhGroup21PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup21PtrType) ToIkeDhGroup21PtrOutputWithContext(ctx context.Context) IkeDhGroup21PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup21PtrOutput)
}

type IkeDhGroup21Output struct{ *pulumi.OutputState }

func (IkeDhGroup21Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup21)(nil)).Elem()
}

func (o IkeDhGroup21Output) ToIkeDhGroup21Output() IkeDhGroup21Output {
	return o
}

func (o IkeDhGroup21Output) ToIkeDhGroup21OutputWithContext(ctx context.Context) IkeDhGroup21Output {
	return o
}

func (o IkeDhGroup21Output) ToIkeDhGroup21PtrOutput() IkeDhGroup21PtrOutput {
	return o.ToIkeDhGroup21PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup21Output) ToIkeDhGroup21PtrOutputWithContext(ctx context.Context) IkeDhGroup21PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup21) *IkeDhGroup21 {
		return &v
	}).(IkeDhGroup21PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup21Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup21) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup21Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup21) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup21Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup21) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup21PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup21PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup21)(nil)).Elem()
}

func (o IkeDhGroup21PtrOutput) ToIkeDhGroup21PtrOutput() IkeDhGroup21PtrOutput {
	return o
}

func (o IkeDhGroup21PtrOutput) ToIkeDhGroup21PtrOutputWithContext(ctx context.Context) IkeDhGroup21PtrOutput {
	return o
}

func (o IkeDhGroup21PtrOutput) Elem() IkeDhGroup21Output {
	return o.ApplyT(func(v *IkeDhGroup21) IkeDhGroup21 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup21
		return ret
	}).(IkeDhGroup21Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup21PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup21) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup21PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup21) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup21PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup21) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup27 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup27Input is an input type that accepts IkeDhGroup27Args and IkeDhGroup27Output values.
// You can construct a concrete instance of `IkeDhGroup27Input` via:
//
//	IkeDhGroup27Args{...}
type IkeDhGroup27Input interface {
	pulumi.Input

	ToIkeDhGroup27Output() IkeDhGroup27Output
	ToIkeDhGroup27OutputWithContext(context.Context) IkeDhGroup27Output
}

type IkeDhGroup27Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup27Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup27)(nil)).Elem()
}

func (i IkeDhGroup27Args) ToIkeDhGroup27Output() IkeDhGroup27Output {
	return i.ToIkeDhGroup27OutputWithContext(context.Background())
}

func (i IkeDhGroup27Args) ToIkeDhGroup27OutputWithContext(ctx context.Context) IkeDhGroup27Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup27Output)
}

func (i IkeDhGroup27Args) ToIkeDhGroup27PtrOutput() IkeDhGroup27PtrOutput {
	return i.ToIkeDhGroup27PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup27Args) ToIkeDhGroup27PtrOutputWithContext(ctx context.Context) IkeDhGroup27PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup27Output).ToIkeDhGroup27PtrOutputWithContext(ctx)
}

// IkeDhGroup27PtrInput is an input type that accepts IkeDhGroup27Args, IkeDhGroup27Ptr and IkeDhGroup27PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup27PtrInput` via:
//
//	        IkeDhGroup27Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup27PtrInput interface {
	pulumi.Input

	ToIkeDhGroup27PtrOutput() IkeDhGroup27PtrOutput
	ToIkeDhGroup27PtrOutputWithContext(context.Context) IkeDhGroup27PtrOutput
}

type ikeDhGroup27PtrType IkeDhGroup27Args

func IkeDhGroup27Ptr(v *IkeDhGroup27Args) IkeDhGroup27PtrInput {
	return (*ikeDhGroup27PtrType)(v)
}

func (*ikeDhGroup27PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup27)(nil)).Elem()
}

func (i *ikeDhGroup27PtrType) ToIkeDhGroup27PtrOutput() IkeDhGroup27PtrOutput {
	return i.ToIkeDhGroup27PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup27PtrType) ToIkeDhGroup27PtrOutputWithContext(ctx context.Context) IkeDhGroup27PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup27PtrOutput)
}

type IkeDhGroup27Output struct{ *pulumi.OutputState }

func (IkeDhGroup27Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup27)(nil)).Elem()
}

func (o IkeDhGroup27Output) ToIkeDhGroup27Output() IkeDhGroup27Output {
	return o
}

func (o IkeDhGroup27Output) ToIkeDhGroup27OutputWithContext(ctx context.Context) IkeDhGroup27Output {
	return o
}

func (o IkeDhGroup27Output) ToIkeDhGroup27PtrOutput() IkeDhGroup27PtrOutput {
	return o.ToIkeDhGroup27PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup27Output) ToIkeDhGroup27PtrOutputWithContext(ctx context.Context) IkeDhGroup27PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup27) *IkeDhGroup27 {
		return &v
	}).(IkeDhGroup27PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup27Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup27) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup27Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup27) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup27Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup27) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup27PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup27PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup27)(nil)).Elem()
}

func (o IkeDhGroup27PtrOutput) ToIkeDhGroup27PtrOutput() IkeDhGroup27PtrOutput {
	return o
}

func (o IkeDhGroup27PtrOutput) ToIkeDhGroup27PtrOutputWithContext(ctx context.Context) IkeDhGroup27PtrOutput {
	return o
}

func (o IkeDhGroup27PtrOutput) Elem() IkeDhGroup27Output {
	return o.ApplyT(func(v *IkeDhGroup27) IkeDhGroup27 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup27
		return ret
	}).(IkeDhGroup27Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup27PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup27) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup27PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup27) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup27PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup27) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup28 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup28Input is an input type that accepts IkeDhGroup28Args and IkeDhGroup28Output values.
// You can construct a concrete instance of `IkeDhGroup28Input` via:
//
//	IkeDhGroup28Args{...}
type IkeDhGroup28Input interface {
	pulumi.Input

	ToIkeDhGroup28Output() IkeDhGroup28Output
	ToIkeDhGroup28OutputWithContext(context.Context) IkeDhGroup28Output
}

type IkeDhGroup28Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup28Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup28)(nil)).Elem()
}

func (i IkeDhGroup28Args) ToIkeDhGroup28Output() IkeDhGroup28Output {
	return i.ToIkeDhGroup28OutputWithContext(context.Background())
}

func (i IkeDhGroup28Args) ToIkeDhGroup28OutputWithContext(ctx context.Context) IkeDhGroup28Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup28Output)
}

func (i IkeDhGroup28Args) ToIkeDhGroup28PtrOutput() IkeDhGroup28PtrOutput {
	return i.ToIkeDhGroup28PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup28Args) ToIkeDhGroup28PtrOutputWithContext(ctx context.Context) IkeDhGroup28PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup28Output).ToIkeDhGroup28PtrOutputWithContext(ctx)
}

// IkeDhGroup28PtrInput is an input type that accepts IkeDhGroup28Args, IkeDhGroup28Ptr and IkeDhGroup28PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup28PtrInput` via:
//
//	        IkeDhGroup28Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup28PtrInput interface {
	pulumi.Input

	ToIkeDhGroup28PtrOutput() IkeDhGroup28PtrOutput
	ToIkeDhGroup28PtrOutputWithContext(context.Context) IkeDhGroup28PtrOutput
}

type ikeDhGroup28PtrType IkeDhGroup28Args

func IkeDhGroup28Ptr(v *IkeDhGroup28Args) IkeDhGroup28PtrInput {
	return (*ikeDhGroup28PtrType)(v)
}

func (*ikeDhGroup28PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup28)(nil)).Elem()
}

func (i *ikeDhGroup28PtrType) ToIkeDhGroup28PtrOutput() IkeDhGroup28PtrOutput {
	return i.ToIkeDhGroup28PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup28PtrType) ToIkeDhGroup28PtrOutputWithContext(ctx context.Context) IkeDhGroup28PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup28PtrOutput)
}

type IkeDhGroup28Output struct{ *pulumi.OutputState }

func (IkeDhGroup28Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup28)(nil)).Elem()
}

func (o IkeDhGroup28Output) ToIkeDhGroup28Output() IkeDhGroup28Output {
	return o
}

func (o IkeDhGroup28Output) ToIkeDhGroup28OutputWithContext(ctx context.Context) IkeDhGroup28Output {
	return o
}

func (o IkeDhGroup28Output) ToIkeDhGroup28PtrOutput() IkeDhGroup28PtrOutput {
	return o.ToIkeDhGroup28PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup28Output) ToIkeDhGroup28PtrOutputWithContext(ctx context.Context) IkeDhGroup28PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup28) *IkeDhGroup28 {
		return &v
	}).(IkeDhGroup28PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup28Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup28) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup28Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup28) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup28Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup28) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup28PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup28PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup28)(nil)).Elem()
}

func (o IkeDhGroup28PtrOutput) ToIkeDhGroup28PtrOutput() IkeDhGroup28PtrOutput {
	return o
}

func (o IkeDhGroup28PtrOutput) ToIkeDhGroup28PtrOutputWithContext(ctx context.Context) IkeDhGroup28PtrOutput {
	return o
}

func (o IkeDhGroup28PtrOutput) Elem() IkeDhGroup28Output {
	return o.ApplyT(func(v *IkeDhGroup28) IkeDhGroup28 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup28
		return ret
	}).(IkeDhGroup28Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup28PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup28) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup28PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup28) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup28PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup28) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup29 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup29Input is an input type that accepts IkeDhGroup29Args and IkeDhGroup29Output values.
// You can construct a concrete instance of `IkeDhGroup29Input` via:
//
//	IkeDhGroup29Args{...}
type IkeDhGroup29Input interface {
	pulumi.Input

	ToIkeDhGroup29Output() IkeDhGroup29Output
	ToIkeDhGroup29OutputWithContext(context.Context) IkeDhGroup29Output
}

type IkeDhGroup29Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup29Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup29)(nil)).Elem()
}

func (i IkeDhGroup29Args) ToIkeDhGroup29Output() IkeDhGroup29Output {
	return i.ToIkeDhGroup29OutputWithContext(context.Background())
}

func (i IkeDhGroup29Args) ToIkeDhGroup29OutputWithContext(ctx context.Context) IkeDhGroup29Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup29Output)
}

func (i IkeDhGroup29Args) ToIkeDhGroup29PtrOutput() IkeDhGroup29PtrOutput {
	return i.ToIkeDhGroup29PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup29Args) ToIkeDhGroup29PtrOutputWithContext(ctx context.Context) IkeDhGroup29PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup29Output).ToIkeDhGroup29PtrOutputWithContext(ctx)
}

// IkeDhGroup29PtrInput is an input type that accepts IkeDhGroup29Args, IkeDhGroup29Ptr and IkeDhGroup29PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup29PtrInput` via:
//
//	        IkeDhGroup29Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup29PtrInput interface {
	pulumi.Input

	ToIkeDhGroup29PtrOutput() IkeDhGroup29PtrOutput
	ToIkeDhGroup29PtrOutputWithContext(context.Context) IkeDhGroup29PtrOutput
}

type ikeDhGroup29PtrType IkeDhGroup29Args

func IkeDhGroup29Ptr(v *IkeDhGroup29Args) IkeDhGroup29PtrInput {
	return (*ikeDhGroup29PtrType)(v)
}

func (*ikeDhGroup29PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup29)(nil)).Elem()
}

func (i *ikeDhGroup29PtrType) ToIkeDhGroup29PtrOutput() IkeDhGroup29PtrOutput {
	return i.ToIkeDhGroup29PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup29PtrType) ToIkeDhGroup29PtrOutputWithContext(ctx context.Context) IkeDhGroup29PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup29PtrOutput)
}

type IkeDhGroup29Output struct{ *pulumi.OutputState }

func (IkeDhGroup29Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup29)(nil)).Elem()
}

func (o IkeDhGroup29Output) ToIkeDhGroup29Output() IkeDhGroup29Output {
	return o
}

func (o IkeDhGroup29Output) ToIkeDhGroup29OutputWithContext(ctx context.Context) IkeDhGroup29Output {
	return o
}

func (o IkeDhGroup29Output) ToIkeDhGroup29PtrOutput() IkeDhGroup29PtrOutput {
	return o.ToIkeDhGroup29PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup29Output) ToIkeDhGroup29PtrOutputWithContext(ctx context.Context) IkeDhGroup29PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup29) *IkeDhGroup29 {
		return &v
	}).(IkeDhGroup29PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup29Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup29) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup29Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup29) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup29Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup29) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup29PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup29PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup29)(nil)).Elem()
}

func (o IkeDhGroup29PtrOutput) ToIkeDhGroup29PtrOutput() IkeDhGroup29PtrOutput {
	return o
}

func (o IkeDhGroup29PtrOutput) ToIkeDhGroup29PtrOutputWithContext(ctx context.Context) IkeDhGroup29PtrOutput {
	return o
}

func (o IkeDhGroup29PtrOutput) Elem() IkeDhGroup29Output {
	return o.ApplyT(func(v *IkeDhGroup29) IkeDhGroup29 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup29
		return ret
	}).(IkeDhGroup29Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup29PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup29) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup29PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup29) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup29PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup29) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup2 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup2Input is an input type that accepts IkeDhGroup2Args and IkeDhGroup2Output values.
// You can construct a concrete instance of `IkeDhGroup2Input` via:
//
//	IkeDhGroup2Args{...}
type IkeDhGroup2Input interface {
	pulumi.Input

	ToIkeDhGroup2Output() IkeDhGroup2Output
	ToIkeDhGroup2OutputWithContext(context.Context) IkeDhGroup2Output
}

type IkeDhGroup2Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup2)(nil)).Elem()
}

func (i IkeDhGroup2Args) ToIkeDhGroup2Output() IkeDhGroup2Output {
	return i.ToIkeDhGroup2OutputWithContext(context.Background())
}

func (i IkeDhGroup2Args) ToIkeDhGroup2OutputWithContext(ctx context.Context) IkeDhGroup2Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup2Output)
}

func (i IkeDhGroup2Args) ToIkeDhGroup2PtrOutput() IkeDhGroup2PtrOutput {
	return i.ToIkeDhGroup2PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup2Args) ToIkeDhGroup2PtrOutputWithContext(ctx context.Context) IkeDhGroup2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup2Output).ToIkeDhGroup2PtrOutputWithContext(ctx)
}

// IkeDhGroup2PtrInput is an input type that accepts IkeDhGroup2Args, IkeDhGroup2Ptr and IkeDhGroup2PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup2PtrInput` via:
//
//	        IkeDhGroup2Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup2PtrInput interface {
	pulumi.Input

	ToIkeDhGroup2PtrOutput() IkeDhGroup2PtrOutput
	ToIkeDhGroup2PtrOutputWithContext(context.Context) IkeDhGroup2PtrOutput
}

type ikeDhGroup2PtrType IkeDhGroup2Args

func IkeDhGroup2Ptr(v *IkeDhGroup2Args) IkeDhGroup2PtrInput {
	return (*ikeDhGroup2PtrType)(v)
}

func (*ikeDhGroup2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup2)(nil)).Elem()
}

func (i *ikeDhGroup2PtrType) ToIkeDhGroup2PtrOutput() IkeDhGroup2PtrOutput {
	return i.ToIkeDhGroup2PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup2PtrType) ToIkeDhGroup2PtrOutputWithContext(ctx context.Context) IkeDhGroup2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup2PtrOutput)
}

type IkeDhGroup2Output struct{ *pulumi.OutputState }

func (IkeDhGroup2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup2)(nil)).Elem()
}

func (o IkeDhGroup2Output) ToIkeDhGroup2Output() IkeDhGroup2Output {
	return o
}

func (o IkeDhGroup2Output) ToIkeDhGroup2OutputWithContext(ctx context.Context) IkeDhGroup2Output {
	return o
}

func (o IkeDhGroup2Output) ToIkeDhGroup2PtrOutput() IkeDhGroup2PtrOutput {
	return o.ToIkeDhGroup2PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup2Output) ToIkeDhGroup2PtrOutputWithContext(ctx context.Context) IkeDhGroup2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup2) *IkeDhGroup2 {
		return &v
	}).(IkeDhGroup2PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup2Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup2) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup2Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup2) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup2Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup2) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup2PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup2)(nil)).Elem()
}

func (o IkeDhGroup2PtrOutput) ToIkeDhGroup2PtrOutput() IkeDhGroup2PtrOutput {
	return o
}

func (o IkeDhGroup2PtrOutput) ToIkeDhGroup2PtrOutputWithContext(ctx context.Context) IkeDhGroup2PtrOutput {
	return o
}

func (o IkeDhGroup2PtrOutput) Elem() IkeDhGroup2Output {
	return o.ApplyT(func(v *IkeDhGroup2) IkeDhGroup2 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup2
		return ret
	}).(IkeDhGroup2Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup2PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup2) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup2PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup2) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup2PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup2) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup30 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup30Input is an input type that accepts IkeDhGroup30Args and IkeDhGroup30Output values.
// You can construct a concrete instance of `IkeDhGroup30Input` via:
//
//	IkeDhGroup30Args{...}
type IkeDhGroup30Input interface {
	pulumi.Input

	ToIkeDhGroup30Output() IkeDhGroup30Output
	ToIkeDhGroup30OutputWithContext(context.Context) IkeDhGroup30Output
}

type IkeDhGroup30Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup30Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup30)(nil)).Elem()
}

func (i IkeDhGroup30Args) ToIkeDhGroup30Output() IkeDhGroup30Output {
	return i.ToIkeDhGroup30OutputWithContext(context.Background())
}

func (i IkeDhGroup30Args) ToIkeDhGroup30OutputWithContext(ctx context.Context) IkeDhGroup30Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup30Output)
}

func (i IkeDhGroup30Args) ToIkeDhGroup30PtrOutput() IkeDhGroup30PtrOutput {
	return i.ToIkeDhGroup30PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup30Args) ToIkeDhGroup30PtrOutputWithContext(ctx context.Context) IkeDhGroup30PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup30Output).ToIkeDhGroup30PtrOutputWithContext(ctx)
}

// IkeDhGroup30PtrInput is an input type that accepts IkeDhGroup30Args, IkeDhGroup30Ptr and IkeDhGroup30PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup30PtrInput` via:
//
//	        IkeDhGroup30Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup30PtrInput interface {
	pulumi.Input

	ToIkeDhGroup30PtrOutput() IkeDhGroup30PtrOutput
	ToIkeDhGroup30PtrOutputWithContext(context.Context) IkeDhGroup30PtrOutput
}

type ikeDhGroup30PtrType IkeDhGroup30Args

func IkeDhGroup30Ptr(v *IkeDhGroup30Args) IkeDhGroup30PtrInput {
	return (*ikeDhGroup30PtrType)(v)
}

func (*ikeDhGroup30PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup30)(nil)).Elem()
}

func (i *ikeDhGroup30PtrType) ToIkeDhGroup30PtrOutput() IkeDhGroup30PtrOutput {
	return i.ToIkeDhGroup30PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup30PtrType) ToIkeDhGroup30PtrOutputWithContext(ctx context.Context) IkeDhGroup30PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup30PtrOutput)
}

type IkeDhGroup30Output struct{ *pulumi.OutputState }

func (IkeDhGroup30Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup30)(nil)).Elem()
}

func (o IkeDhGroup30Output) ToIkeDhGroup30Output() IkeDhGroup30Output {
	return o
}

func (o IkeDhGroup30Output) ToIkeDhGroup30OutputWithContext(ctx context.Context) IkeDhGroup30Output {
	return o
}

func (o IkeDhGroup30Output) ToIkeDhGroup30PtrOutput() IkeDhGroup30PtrOutput {
	return o.ToIkeDhGroup30PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup30Output) ToIkeDhGroup30PtrOutputWithContext(ctx context.Context) IkeDhGroup30PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup30) *IkeDhGroup30 {
		return &v
	}).(IkeDhGroup30PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup30Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup30) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup30Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup30) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup30Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup30) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup30PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup30PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup30)(nil)).Elem()
}

func (o IkeDhGroup30PtrOutput) ToIkeDhGroup30PtrOutput() IkeDhGroup30PtrOutput {
	return o
}

func (o IkeDhGroup30PtrOutput) ToIkeDhGroup30PtrOutputWithContext(ctx context.Context) IkeDhGroup30PtrOutput {
	return o
}

func (o IkeDhGroup30PtrOutput) Elem() IkeDhGroup30Output {
	return o.ApplyT(func(v *IkeDhGroup30) IkeDhGroup30 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup30
		return ret
	}).(IkeDhGroup30Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup30PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup30) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup30PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup30) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup30PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup30) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup31 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup31Input is an input type that accepts IkeDhGroup31Args and IkeDhGroup31Output values.
// You can construct a concrete instance of `IkeDhGroup31Input` via:
//
//	IkeDhGroup31Args{...}
type IkeDhGroup31Input interface {
	pulumi.Input

	ToIkeDhGroup31Output() IkeDhGroup31Output
	ToIkeDhGroup31OutputWithContext(context.Context) IkeDhGroup31Output
}

type IkeDhGroup31Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup31Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup31)(nil)).Elem()
}

func (i IkeDhGroup31Args) ToIkeDhGroup31Output() IkeDhGroup31Output {
	return i.ToIkeDhGroup31OutputWithContext(context.Background())
}

func (i IkeDhGroup31Args) ToIkeDhGroup31OutputWithContext(ctx context.Context) IkeDhGroup31Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup31Output)
}

func (i IkeDhGroup31Args) ToIkeDhGroup31PtrOutput() IkeDhGroup31PtrOutput {
	return i.ToIkeDhGroup31PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup31Args) ToIkeDhGroup31PtrOutputWithContext(ctx context.Context) IkeDhGroup31PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup31Output).ToIkeDhGroup31PtrOutputWithContext(ctx)
}

// IkeDhGroup31PtrInput is an input type that accepts IkeDhGroup31Args, IkeDhGroup31Ptr and IkeDhGroup31PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup31PtrInput` via:
//
//	        IkeDhGroup31Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup31PtrInput interface {
	pulumi.Input

	ToIkeDhGroup31PtrOutput() IkeDhGroup31PtrOutput
	ToIkeDhGroup31PtrOutputWithContext(context.Context) IkeDhGroup31PtrOutput
}

type ikeDhGroup31PtrType IkeDhGroup31Args

func IkeDhGroup31Ptr(v *IkeDhGroup31Args) IkeDhGroup31PtrInput {
	return (*ikeDhGroup31PtrType)(v)
}

func (*ikeDhGroup31PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup31)(nil)).Elem()
}

func (i *ikeDhGroup31PtrType) ToIkeDhGroup31PtrOutput() IkeDhGroup31PtrOutput {
	return i.ToIkeDhGroup31PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup31PtrType) ToIkeDhGroup31PtrOutputWithContext(ctx context.Context) IkeDhGroup31PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup31PtrOutput)
}

type IkeDhGroup31Output struct{ *pulumi.OutputState }

func (IkeDhGroup31Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup31)(nil)).Elem()
}

func (o IkeDhGroup31Output) ToIkeDhGroup31Output() IkeDhGroup31Output {
	return o
}

func (o IkeDhGroup31Output) ToIkeDhGroup31OutputWithContext(ctx context.Context) IkeDhGroup31Output {
	return o
}

func (o IkeDhGroup31Output) ToIkeDhGroup31PtrOutput() IkeDhGroup31PtrOutput {
	return o.ToIkeDhGroup31PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup31Output) ToIkeDhGroup31PtrOutputWithContext(ctx context.Context) IkeDhGroup31PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup31) *IkeDhGroup31 {
		return &v
	}).(IkeDhGroup31PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup31Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup31) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup31Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup31) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup31Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup31) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup31PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup31PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup31)(nil)).Elem()
}

func (o IkeDhGroup31PtrOutput) ToIkeDhGroup31PtrOutput() IkeDhGroup31PtrOutput {
	return o
}

func (o IkeDhGroup31PtrOutput) ToIkeDhGroup31PtrOutputWithContext(ctx context.Context) IkeDhGroup31PtrOutput {
	return o
}

func (o IkeDhGroup31PtrOutput) Elem() IkeDhGroup31Output {
	return o.ApplyT(func(v *IkeDhGroup31) IkeDhGroup31 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup31
		return ret
	}).(IkeDhGroup31Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup31PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup31) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup31PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup31) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup31PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup31) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup32 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup32Input is an input type that accepts IkeDhGroup32Args and IkeDhGroup32Output values.
// You can construct a concrete instance of `IkeDhGroup32Input` via:
//
//	IkeDhGroup32Args{...}
type IkeDhGroup32Input interface {
	pulumi.Input

	ToIkeDhGroup32Output() IkeDhGroup32Output
	ToIkeDhGroup32OutputWithContext(context.Context) IkeDhGroup32Output
}

type IkeDhGroup32Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup32Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup32)(nil)).Elem()
}

func (i IkeDhGroup32Args) ToIkeDhGroup32Output() IkeDhGroup32Output {
	return i.ToIkeDhGroup32OutputWithContext(context.Background())
}

func (i IkeDhGroup32Args) ToIkeDhGroup32OutputWithContext(ctx context.Context) IkeDhGroup32Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup32Output)
}

func (i IkeDhGroup32Args) ToIkeDhGroup32PtrOutput() IkeDhGroup32PtrOutput {
	return i.ToIkeDhGroup32PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup32Args) ToIkeDhGroup32PtrOutputWithContext(ctx context.Context) IkeDhGroup32PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup32Output).ToIkeDhGroup32PtrOutputWithContext(ctx)
}

// IkeDhGroup32PtrInput is an input type that accepts IkeDhGroup32Args, IkeDhGroup32Ptr and IkeDhGroup32PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup32PtrInput` via:
//
//	        IkeDhGroup32Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup32PtrInput interface {
	pulumi.Input

	ToIkeDhGroup32PtrOutput() IkeDhGroup32PtrOutput
	ToIkeDhGroup32PtrOutputWithContext(context.Context) IkeDhGroup32PtrOutput
}

type ikeDhGroup32PtrType IkeDhGroup32Args

func IkeDhGroup32Ptr(v *IkeDhGroup32Args) IkeDhGroup32PtrInput {
	return (*ikeDhGroup32PtrType)(v)
}

func (*ikeDhGroup32PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup32)(nil)).Elem()
}

func (i *ikeDhGroup32PtrType) ToIkeDhGroup32PtrOutput() IkeDhGroup32PtrOutput {
	return i.ToIkeDhGroup32PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup32PtrType) ToIkeDhGroup32PtrOutputWithContext(ctx context.Context) IkeDhGroup32PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup32PtrOutput)
}

type IkeDhGroup32Output struct{ *pulumi.OutputState }

func (IkeDhGroup32Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup32)(nil)).Elem()
}

func (o IkeDhGroup32Output) ToIkeDhGroup32Output() IkeDhGroup32Output {
	return o
}

func (o IkeDhGroup32Output) ToIkeDhGroup32OutputWithContext(ctx context.Context) IkeDhGroup32Output {
	return o
}

func (o IkeDhGroup32Output) ToIkeDhGroup32PtrOutput() IkeDhGroup32PtrOutput {
	return o.ToIkeDhGroup32PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup32Output) ToIkeDhGroup32PtrOutputWithContext(ctx context.Context) IkeDhGroup32PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup32) *IkeDhGroup32 {
		return &v
	}).(IkeDhGroup32PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup32Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup32) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup32Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup32) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup32Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup32) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup32PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup32PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup32)(nil)).Elem()
}

func (o IkeDhGroup32PtrOutput) ToIkeDhGroup32PtrOutput() IkeDhGroup32PtrOutput {
	return o
}

func (o IkeDhGroup32PtrOutput) ToIkeDhGroup32PtrOutputWithContext(ctx context.Context) IkeDhGroup32PtrOutput {
	return o
}

func (o IkeDhGroup32PtrOutput) Elem() IkeDhGroup32Output {
	return o.ApplyT(func(v *IkeDhGroup32) IkeDhGroup32 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup32
		return ret
	}).(IkeDhGroup32Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup32PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup32) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup32PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup32) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup32PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup32) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type IkeDhGroup5 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// IkeDhGroup5Input is an input type that accepts IkeDhGroup5Args and IkeDhGroup5Output values.
// You can construct a concrete instance of `IkeDhGroup5Input` via:
//
//	IkeDhGroup5Args{...}
type IkeDhGroup5Input interface {
	pulumi.Input

	ToIkeDhGroup5Output() IkeDhGroup5Output
	ToIkeDhGroup5OutputWithContext(context.Context) IkeDhGroup5Output
}

type IkeDhGroup5Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (IkeDhGroup5Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup5)(nil)).Elem()
}

func (i IkeDhGroup5Args) ToIkeDhGroup5Output() IkeDhGroup5Output {
	return i.ToIkeDhGroup5OutputWithContext(context.Background())
}

func (i IkeDhGroup5Args) ToIkeDhGroup5OutputWithContext(ctx context.Context) IkeDhGroup5Output {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup5Output)
}

func (i IkeDhGroup5Args) ToIkeDhGroup5PtrOutput() IkeDhGroup5PtrOutput {
	return i.ToIkeDhGroup5PtrOutputWithContext(context.Background())
}

func (i IkeDhGroup5Args) ToIkeDhGroup5PtrOutputWithContext(ctx context.Context) IkeDhGroup5PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup5Output).ToIkeDhGroup5PtrOutputWithContext(ctx)
}

// IkeDhGroup5PtrInput is an input type that accepts IkeDhGroup5Args, IkeDhGroup5Ptr and IkeDhGroup5PtrOutput values.
// You can construct a concrete instance of `IkeDhGroup5PtrInput` via:
//
//	        IkeDhGroup5Args{...}
//
//	or:
//
//	        nil
type IkeDhGroup5PtrInput interface {
	pulumi.Input

	ToIkeDhGroup5PtrOutput() IkeDhGroup5PtrOutput
	ToIkeDhGroup5PtrOutputWithContext(context.Context) IkeDhGroup5PtrOutput
}

type ikeDhGroup5PtrType IkeDhGroup5Args

func IkeDhGroup5Ptr(v *IkeDhGroup5Args) IkeDhGroup5PtrInput {
	return (*ikeDhGroup5PtrType)(v)
}

func (*ikeDhGroup5PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup5)(nil)).Elem()
}

func (i *ikeDhGroup5PtrType) ToIkeDhGroup5PtrOutput() IkeDhGroup5PtrOutput {
	return i.ToIkeDhGroup5PtrOutputWithContext(context.Background())
}

func (i *ikeDhGroup5PtrType) ToIkeDhGroup5PtrOutputWithContext(ctx context.Context) IkeDhGroup5PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeDhGroup5PtrOutput)
}

type IkeDhGroup5Output struct{ *pulumi.OutputState }

func (IkeDhGroup5Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IkeDhGroup5)(nil)).Elem()
}

func (o IkeDhGroup5Output) ToIkeDhGroup5Output() IkeDhGroup5Output {
	return o
}

func (o IkeDhGroup5Output) ToIkeDhGroup5OutputWithContext(ctx context.Context) IkeDhGroup5Output {
	return o
}

func (o IkeDhGroup5Output) ToIkeDhGroup5PtrOutput() IkeDhGroup5PtrOutput {
	return o.ToIkeDhGroup5PtrOutputWithContext(context.Background())
}

func (o IkeDhGroup5Output) ToIkeDhGroup5PtrOutputWithContext(ctx context.Context) IkeDhGroup5PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IkeDhGroup5) *IkeDhGroup5 {
		return &v
	}).(IkeDhGroup5PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup5Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup5) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup5Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IkeDhGroup5) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup5Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IkeDhGroup5) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type IkeDhGroup5PtrOutput struct{ *pulumi.OutputState }

func (IkeDhGroup5PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeDhGroup5)(nil)).Elem()
}

func (o IkeDhGroup5PtrOutput) ToIkeDhGroup5PtrOutput() IkeDhGroup5PtrOutput {
	return o
}

func (o IkeDhGroup5PtrOutput) ToIkeDhGroup5PtrOutputWithContext(ctx context.Context) IkeDhGroup5PtrOutput {
	return o
}

func (o IkeDhGroup5PtrOutput) Elem() IkeDhGroup5Output {
	return o.ApplyT(func(v *IkeDhGroup5) IkeDhGroup5 {
		if v != nil {
			return *v
		}
		var ret IkeDhGroup5
		return ret
	}).(IkeDhGroup5Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o IkeDhGroup5PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup5) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o IkeDhGroup5PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup5) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o IkeDhGroup5PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeDhGroup5) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type InterfaceClientOption struct {
	// DHCP client option code.
	Code *int `pulumi:"code"`
	// ID.
	Id *int `pulumi:"id"`
	// DHCP option IPs.
	Ip *string `pulumi:"ip"`
	// DHCP client option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
	Type *string `pulumi:"type"`
	// DHCP client option value.
	Value *string `pulumi:"value"`
}

// InterfaceClientOptionInput is an input type that accepts InterfaceClientOptionArgs and InterfaceClientOptionOutput values.
// You can construct a concrete instance of `InterfaceClientOptionInput` via:
//
//	InterfaceClientOptionArgs{...}
type InterfaceClientOptionInput interface {
	pulumi.Input

	ToInterfaceClientOptionOutput() InterfaceClientOptionOutput
	ToInterfaceClientOptionOutputWithContext(context.Context) InterfaceClientOptionOutput
}

type InterfaceClientOptionArgs struct {
	// DHCP client option code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// DHCP option IPs.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// DHCP client option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// DHCP client option value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (InterfaceClientOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceClientOption)(nil)).Elem()
}

func (i InterfaceClientOptionArgs) ToInterfaceClientOptionOutput() InterfaceClientOptionOutput {
	return i.ToInterfaceClientOptionOutputWithContext(context.Background())
}

func (i InterfaceClientOptionArgs) ToInterfaceClientOptionOutputWithContext(ctx context.Context) InterfaceClientOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceClientOptionOutput)
}

// InterfaceClientOptionArrayInput is an input type that accepts InterfaceClientOptionArray and InterfaceClientOptionArrayOutput values.
// You can construct a concrete instance of `InterfaceClientOptionArrayInput` via:
//
//	InterfaceClientOptionArray{ InterfaceClientOptionArgs{...} }
type InterfaceClientOptionArrayInput interface {
	pulumi.Input

	ToInterfaceClientOptionArrayOutput() InterfaceClientOptionArrayOutput
	ToInterfaceClientOptionArrayOutputWithContext(context.Context) InterfaceClientOptionArrayOutput
}

type InterfaceClientOptionArray []InterfaceClientOptionInput

func (InterfaceClientOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceClientOption)(nil)).Elem()
}

func (i InterfaceClientOptionArray) ToInterfaceClientOptionArrayOutput() InterfaceClientOptionArrayOutput {
	return i.ToInterfaceClientOptionArrayOutputWithContext(context.Background())
}

func (i InterfaceClientOptionArray) ToInterfaceClientOptionArrayOutputWithContext(ctx context.Context) InterfaceClientOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceClientOptionArrayOutput)
}

type InterfaceClientOptionOutput struct{ *pulumi.OutputState }

func (InterfaceClientOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceClientOption)(nil)).Elem()
}

func (o InterfaceClientOptionOutput) ToInterfaceClientOptionOutput() InterfaceClientOptionOutput {
	return o
}

func (o InterfaceClientOptionOutput) ToInterfaceClientOptionOutputWithContext(ctx context.Context) InterfaceClientOptionOutput {
	return o
}

// DHCP client option code.
func (o InterfaceClientOptionOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceClientOption) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// ID.
func (o InterfaceClientOptionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceClientOption) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// DHCP option IPs.
func (o InterfaceClientOptionOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceClientOption) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// DHCP client option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
func (o InterfaceClientOptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceClientOption) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// DHCP client option value.
func (o InterfaceClientOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceClientOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type InterfaceClientOptionArrayOutput struct{ *pulumi.OutputState }

func (InterfaceClientOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceClientOption)(nil)).Elem()
}

func (o InterfaceClientOptionArrayOutput) ToInterfaceClientOptionArrayOutput() InterfaceClientOptionArrayOutput {
	return o
}

func (o InterfaceClientOptionArrayOutput) ToInterfaceClientOptionArrayOutputWithContext(ctx context.Context) InterfaceClientOptionArrayOutput {
	return o
}

func (o InterfaceClientOptionArrayOutput) Index(i pulumi.IntInput) InterfaceClientOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceClientOption {
		return vs[0].([]InterfaceClientOption)[vs[1].(int)]
	}).(InterfaceClientOptionOutput)
}

type InterfaceDhcpSnoopingServerList struct {
	// DHCP server name.
	Name *string `pulumi:"name"`
	// IP address for DHCP server.
	ServerIp *string `pulumi:"serverIp"`
}

// InterfaceDhcpSnoopingServerListInput is an input type that accepts InterfaceDhcpSnoopingServerListArgs and InterfaceDhcpSnoopingServerListOutput values.
// You can construct a concrete instance of `InterfaceDhcpSnoopingServerListInput` via:
//
//	InterfaceDhcpSnoopingServerListArgs{...}
type InterfaceDhcpSnoopingServerListInput interface {
	pulumi.Input

	ToInterfaceDhcpSnoopingServerListOutput() InterfaceDhcpSnoopingServerListOutput
	ToInterfaceDhcpSnoopingServerListOutputWithContext(context.Context) InterfaceDhcpSnoopingServerListOutput
}

type InterfaceDhcpSnoopingServerListArgs struct {
	// DHCP server name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// IP address for DHCP server.
	ServerIp pulumi.StringPtrInput `pulumi:"serverIp"`
}

func (InterfaceDhcpSnoopingServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (i InterfaceDhcpSnoopingServerListArgs) ToInterfaceDhcpSnoopingServerListOutput() InterfaceDhcpSnoopingServerListOutput {
	return i.ToInterfaceDhcpSnoopingServerListOutputWithContext(context.Background())
}

func (i InterfaceDhcpSnoopingServerListArgs) ToInterfaceDhcpSnoopingServerListOutputWithContext(ctx context.Context) InterfaceDhcpSnoopingServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceDhcpSnoopingServerListOutput)
}

// InterfaceDhcpSnoopingServerListArrayInput is an input type that accepts InterfaceDhcpSnoopingServerListArray and InterfaceDhcpSnoopingServerListArrayOutput values.
// You can construct a concrete instance of `InterfaceDhcpSnoopingServerListArrayInput` via:
//
//	InterfaceDhcpSnoopingServerListArray{ InterfaceDhcpSnoopingServerListArgs{...} }
type InterfaceDhcpSnoopingServerListArrayInput interface {
	pulumi.Input

	ToInterfaceDhcpSnoopingServerListArrayOutput() InterfaceDhcpSnoopingServerListArrayOutput
	ToInterfaceDhcpSnoopingServerListArrayOutputWithContext(context.Context) InterfaceDhcpSnoopingServerListArrayOutput
}

type InterfaceDhcpSnoopingServerListArray []InterfaceDhcpSnoopingServerListInput

func (InterfaceDhcpSnoopingServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (i InterfaceDhcpSnoopingServerListArray) ToInterfaceDhcpSnoopingServerListArrayOutput() InterfaceDhcpSnoopingServerListArrayOutput {
	return i.ToInterfaceDhcpSnoopingServerListArrayOutputWithContext(context.Background())
}

func (i InterfaceDhcpSnoopingServerListArray) ToInterfaceDhcpSnoopingServerListArrayOutputWithContext(ctx context.Context) InterfaceDhcpSnoopingServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceDhcpSnoopingServerListArrayOutput)
}

type InterfaceDhcpSnoopingServerListOutput struct{ *pulumi.OutputState }

func (InterfaceDhcpSnoopingServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (o InterfaceDhcpSnoopingServerListOutput) ToInterfaceDhcpSnoopingServerListOutput() InterfaceDhcpSnoopingServerListOutput {
	return o
}

func (o InterfaceDhcpSnoopingServerListOutput) ToInterfaceDhcpSnoopingServerListOutputWithContext(ctx context.Context) InterfaceDhcpSnoopingServerListOutput {
	return o
}

// DHCP server name.
func (o InterfaceDhcpSnoopingServerListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceDhcpSnoopingServerList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// IP address for DHCP server.
func (o InterfaceDhcpSnoopingServerListOutput) ServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceDhcpSnoopingServerList) *string { return v.ServerIp }).(pulumi.StringPtrOutput)
}

type InterfaceDhcpSnoopingServerListArrayOutput struct{ *pulumi.OutputState }

func (InterfaceDhcpSnoopingServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (o InterfaceDhcpSnoopingServerListArrayOutput) ToInterfaceDhcpSnoopingServerListArrayOutput() InterfaceDhcpSnoopingServerListArrayOutput {
	return o
}

func (o InterfaceDhcpSnoopingServerListArrayOutput) ToInterfaceDhcpSnoopingServerListArrayOutputWithContext(ctx context.Context) InterfaceDhcpSnoopingServerListArrayOutput {
	return o
}

func (o InterfaceDhcpSnoopingServerListArrayOutput) Index(i pulumi.IntInput) InterfaceDhcpSnoopingServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceDhcpSnoopingServerList {
		return vs[0].([]InterfaceDhcpSnoopingServerList)[vs[1].(int)]
	}).(InterfaceDhcpSnoopingServerListOutput)
}

type InterfaceFailAlertInterface struct {
	// Names of the physical interfaces belonging to the aggregate or redundant interface.
	Name *string `pulumi:"name"`
}

// InterfaceFailAlertInterfaceInput is an input type that accepts InterfaceFailAlertInterfaceArgs and InterfaceFailAlertInterfaceOutput values.
// You can construct a concrete instance of `InterfaceFailAlertInterfaceInput` via:
//
//	InterfaceFailAlertInterfaceArgs{...}
type InterfaceFailAlertInterfaceInput interface {
	pulumi.Input

	ToInterfaceFailAlertInterfaceOutput() InterfaceFailAlertInterfaceOutput
	ToInterfaceFailAlertInterfaceOutputWithContext(context.Context) InterfaceFailAlertInterfaceOutput
}

type InterfaceFailAlertInterfaceArgs struct {
	// Names of the physical interfaces belonging to the aggregate or redundant interface.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InterfaceFailAlertInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceFailAlertInterface)(nil)).Elem()
}

func (i InterfaceFailAlertInterfaceArgs) ToInterfaceFailAlertInterfaceOutput() InterfaceFailAlertInterfaceOutput {
	return i.ToInterfaceFailAlertInterfaceOutputWithContext(context.Background())
}

func (i InterfaceFailAlertInterfaceArgs) ToInterfaceFailAlertInterfaceOutputWithContext(ctx context.Context) InterfaceFailAlertInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceFailAlertInterfaceOutput)
}

// InterfaceFailAlertInterfaceArrayInput is an input type that accepts InterfaceFailAlertInterfaceArray and InterfaceFailAlertInterfaceArrayOutput values.
// You can construct a concrete instance of `InterfaceFailAlertInterfaceArrayInput` via:
//
//	InterfaceFailAlertInterfaceArray{ InterfaceFailAlertInterfaceArgs{...} }
type InterfaceFailAlertInterfaceArrayInput interface {
	pulumi.Input

	ToInterfaceFailAlertInterfaceArrayOutput() InterfaceFailAlertInterfaceArrayOutput
	ToInterfaceFailAlertInterfaceArrayOutputWithContext(context.Context) InterfaceFailAlertInterfaceArrayOutput
}

type InterfaceFailAlertInterfaceArray []InterfaceFailAlertInterfaceInput

func (InterfaceFailAlertInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceFailAlertInterface)(nil)).Elem()
}

func (i InterfaceFailAlertInterfaceArray) ToInterfaceFailAlertInterfaceArrayOutput() InterfaceFailAlertInterfaceArrayOutput {
	return i.ToInterfaceFailAlertInterfaceArrayOutputWithContext(context.Background())
}

func (i InterfaceFailAlertInterfaceArray) ToInterfaceFailAlertInterfaceArrayOutputWithContext(ctx context.Context) InterfaceFailAlertInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceFailAlertInterfaceArrayOutput)
}

type InterfaceFailAlertInterfaceOutput struct{ *pulumi.OutputState }

func (InterfaceFailAlertInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceFailAlertInterface)(nil)).Elem()
}

func (o InterfaceFailAlertInterfaceOutput) ToInterfaceFailAlertInterfaceOutput() InterfaceFailAlertInterfaceOutput {
	return o
}

func (o InterfaceFailAlertInterfaceOutput) ToInterfaceFailAlertInterfaceOutputWithContext(ctx context.Context) InterfaceFailAlertInterfaceOutput {
	return o
}

// Names of the physical interfaces belonging to the aggregate or redundant interface.
func (o InterfaceFailAlertInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceFailAlertInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InterfaceFailAlertInterfaceArrayOutput struct{ *pulumi.OutputState }

func (InterfaceFailAlertInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceFailAlertInterface)(nil)).Elem()
}

func (o InterfaceFailAlertInterfaceArrayOutput) ToInterfaceFailAlertInterfaceArrayOutput() InterfaceFailAlertInterfaceArrayOutput {
	return o
}

func (o InterfaceFailAlertInterfaceArrayOutput) ToInterfaceFailAlertInterfaceArrayOutputWithContext(ctx context.Context) InterfaceFailAlertInterfaceArrayOutput {
	return o
}

func (o InterfaceFailAlertInterfaceArrayOutput) Index(i pulumi.IntInput) InterfaceFailAlertInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceFailAlertInterface {
		return vs[0].([]InterfaceFailAlertInterface)[vs[1].(int)]
	}).(InterfaceFailAlertInterfaceOutput)
}

type InterfaceIpv6 struct {
	// Enable/disable address auto config. Valid values: `enable`, `disable`.
	Autoconf *string `pulumi:"autoconf"`
	// CLI IPv6 connection status.
	CliConn6Status *int `pulumi:"cliConn6Status"`
	// DHCPv6 client options. Valid values: `rapid`, `iapd`, `iana`.
	Dhcp6ClientOptions *string `pulumi:"dhcp6ClientOptions"`
	// DHCPv6 IA-PD list The structure of `dhcp6IapdList` block is documented below.
	Dhcp6IapdLists []InterfaceIpv6Dhcp6IapdList `pulumi:"dhcp6IapdLists"`
	// Enable/disable DHCPv6 information request. Valid values: `enable`, `disable`.
	Dhcp6InformationRequest *string `pulumi:"dhcp6InformationRequest"`
	// Enable/disable DHCPv6 prefix delegation. Valid values: `enable`, `disable`.
	Dhcp6PrefixDelegation *string `pulumi:"dhcp6PrefixDelegation"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	Dhcp6PrefixHint *string `pulumi:"dhcp6PrefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	Dhcp6PrefixHintPlt *int `pulumi:"dhcp6PrefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	Dhcp6PrefixHintVlt *int `pulumi:"dhcp6PrefixHintVlt"`
	// DHCP6 relay interface ID.
	Dhcp6RelayInterfaceId *string `pulumi:"dhcp6RelayInterfaceId"`
	// DHCPv6 relay IP address.
	Dhcp6RelayIp *string `pulumi:"dhcp6RelayIp"`
	// Enable/disable DHCPv6 relay. Valid values: `disable`, `enable`.
	Dhcp6RelayService *string `pulumi:"dhcp6RelayService"`
	// Enable/disable use of address on this interface as the source address of the relay message. Valid values: `disable`, `enable`.
	Dhcp6RelaySourceInterface *string `pulumi:"dhcp6RelaySourceInterface"`
	// IPv6 address used by the DHCP6 relay as its source IP.
	Dhcp6RelaySourceIp *string `pulumi:"dhcp6RelaySourceIp"`
	// DHCPv6 relay type. Valid values: `regular`.
	Dhcp6RelayType *string `pulumi:"dhcp6RelayType"`
	// Enable/disable sending of ICMPv6 redirects. Valid values: `enable`, `disable`.
	Icmp6SendRedirect *string `pulumi:"icmp6SendRedirect"`
	// IPv6 interface identifier.
	InterfaceIdentifier *string `pulumi:"interfaceIdentifier"`
	// Primary IPv6 address prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Address *string `pulumi:"ip6Address"`
	// Allow management access to the interface.
	Ip6Allowaccess *string `pulumi:"ip6Allowaccess"`
	// Default life (sec).
	Ip6DefaultLife *int `pulumi:"ip6DefaultLife"`
	// IAID of obtained delegated-prefix from the upstream interface.
	Ip6DelegatedPrefixIaid *int `pulumi:"ip6DelegatedPrefixIaid"`
	// Advertised IPv6 delegated prefix list. The structure of `ip6DelegatedPrefixList` block is documented below.
	Ip6DelegatedPrefixLists []InterfaceIpv6Ip6DelegatedPrefixList `pulumi:"ip6DelegatedPrefixLists"`
	// Enable/disable using the DNS server acquired by DHCP. Valid values: `enable`, `disable`.
	Ip6DnsServerOverride *string `pulumi:"ip6DnsServerOverride"`
	// Extra IPv6 address prefixes of interface. The structure of `ip6ExtraAddr` block is documented below.
	Ip6ExtraAddrs []InterfaceIpv6Ip6ExtraAddr `pulumi:"ip6ExtraAddrs"`
	// Hop limit (0 means unspecified).
	Ip6HopLimit *int `pulumi:"ip6HopLimit"`
	// IPv6 link MTU.
	Ip6LinkMtu *int `pulumi:"ip6LinkMtu"`
	// Enable/disable the managed flag. Valid values: `enable`, `disable`.
	Ip6ManageFlag *string `pulumi:"ip6ManageFlag"`
	// IPv6 maximum interval (4 to 1800 sec).
	Ip6MaxInterval *int `pulumi:"ip6MaxInterval"`
	// IPv6 minimum interval (3 to 1350 sec).
	Ip6MinInterval *int `pulumi:"ip6MinInterval"`
	// Addressing mode (static, DHCP, delegated). Valid values: `static`, `dhcp`, `pppoe`, `delegated`.
	Ip6Mode *string `pulumi:"ip6Mode"`
	// Enable/disable the other IPv6 flag. Valid values: `enable`, `disable`.
	Ip6OtherFlag *string `pulumi:"ip6OtherFlag"`
	// Advertised prefix list. The structure of `ip6PrefixList` block is documented below.
	Ip6PrefixLists []InterfaceIpv6Ip6PrefixList `pulumi:"ip6PrefixLists"`
	// Assigning a prefix from DHCP or RA. Valid values: `dhcp6`, `ra`.
	Ip6PrefixMode *string `pulumi:"ip6PrefixMode"`
	// IPv6 reachable time (milliseconds; 0 means unspecified).
	Ip6ReachableTime *int `pulumi:"ip6ReachableTime"`
	// IPv6 retransmit time (milliseconds; 0 means unspecified).
	Ip6RetransTime *int `pulumi:"ip6RetransTime"`
	// Enable/disable sending advertisements about the interface. Valid values: `enable`, `disable`.
	Ip6SendAdv *string `pulumi:"ip6SendAdv"`
	// Subnet to routing prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Subnet *string `pulumi:"ip6Subnet"`
	// Interface name providing delegated information.
	Ip6UpstreamInterface *string `pulumi:"ip6UpstreamInterface"`
	// Neighbor discovery certificate.
	NdCert *string `pulumi:"ndCert"`
	// Neighbor discovery CGA modifier.
	NdCgaModifier *string `pulumi:"ndCgaModifier"`
	// Neighbor discovery mode. Valid values: `basic`, `SEND-compatible`.
	NdMode *string `pulumi:"ndMode"`
	// Neighbor discovery security level (0 - 7; 0 = least secure, default = 0).
	NdSecurityLevel *int `pulumi:"ndSecurityLevel"`
	// Neighbor discovery timestamp delta value (1 - 3600 sec; default = 300).
	NdTimestampDelta *int `pulumi:"ndTimestampDelta"`
	// Neighbor discovery timestamp fuzz factor (1 - 60 sec; default = 1).
	NdTimestampFuzz *int `pulumi:"ndTimestampFuzz"`
	// Enable/disable sending link MTU in RA packet. Valid values: `enable`, `disable`.
	RaSendMtu *string `pulumi:"raSendMtu"`
	// Enable/disable unique auto config address. Valid values: `enable`, `disable`.
	UniqueAutoconfAddr *string `pulumi:"uniqueAutoconfAddr"`
	// Link-local IPv6 address of virtual router.
	Vrip6LinkLocal *string `pulumi:"vrip6LinkLocal"`
	// IPv6 VRRP configuration. The structure of `vrrp6` block is documented below.
	//
	// The `ip6ExtraAddr` block supports:
	Vrrp6s []InterfaceIpv6Vrrp6 `pulumi:"vrrp6s"`
	// Enable/disable virtual MAC for VRRP. Valid values: `enable`, `disable`.
	VrrpVirtualMac6 *string `pulumi:"vrrpVirtualMac6"`
}

// InterfaceIpv6Input is an input type that accepts InterfaceIpv6Args and InterfaceIpv6Output values.
// You can construct a concrete instance of `InterfaceIpv6Input` via:
//
//	InterfaceIpv6Args{...}
type InterfaceIpv6Input interface {
	pulumi.Input

	ToInterfaceIpv6Output() InterfaceIpv6Output
	ToInterfaceIpv6OutputWithContext(context.Context) InterfaceIpv6Output
}

type InterfaceIpv6Args struct {
	// Enable/disable address auto config. Valid values: `enable`, `disable`.
	Autoconf pulumi.StringPtrInput `pulumi:"autoconf"`
	// CLI IPv6 connection status.
	CliConn6Status pulumi.IntPtrInput `pulumi:"cliConn6Status"`
	// DHCPv6 client options. Valid values: `rapid`, `iapd`, `iana`.
	Dhcp6ClientOptions pulumi.StringPtrInput `pulumi:"dhcp6ClientOptions"`
	// DHCPv6 IA-PD list The structure of `dhcp6IapdList` block is documented below.
	Dhcp6IapdLists InterfaceIpv6Dhcp6IapdListArrayInput `pulumi:"dhcp6IapdLists"`
	// Enable/disable DHCPv6 information request. Valid values: `enable`, `disable`.
	Dhcp6InformationRequest pulumi.StringPtrInput `pulumi:"dhcp6InformationRequest"`
	// Enable/disable DHCPv6 prefix delegation. Valid values: `enable`, `disable`.
	Dhcp6PrefixDelegation pulumi.StringPtrInput `pulumi:"dhcp6PrefixDelegation"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	Dhcp6PrefixHint pulumi.StringPtrInput `pulumi:"dhcp6PrefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	Dhcp6PrefixHintPlt pulumi.IntPtrInput `pulumi:"dhcp6PrefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	Dhcp6PrefixHintVlt pulumi.IntPtrInput `pulumi:"dhcp6PrefixHintVlt"`
	// DHCP6 relay interface ID.
	Dhcp6RelayInterfaceId pulumi.StringPtrInput `pulumi:"dhcp6RelayInterfaceId"`
	// DHCPv6 relay IP address.
	Dhcp6RelayIp pulumi.StringPtrInput `pulumi:"dhcp6RelayIp"`
	// Enable/disable DHCPv6 relay. Valid values: `disable`, `enable`.
	Dhcp6RelayService pulumi.StringPtrInput `pulumi:"dhcp6RelayService"`
	// Enable/disable use of address on this interface as the source address of the relay message. Valid values: `disable`, `enable`.
	Dhcp6RelaySourceInterface pulumi.StringPtrInput `pulumi:"dhcp6RelaySourceInterface"`
	// IPv6 address used by the DHCP6 relay as its source IP.
	Dhcp6RelaySourceIp pulumi.StringPtrInput `pulumi:"dhcp6RelaySourceIp"`
	// DHCPv6 relay type. Valid values: `regular`.
	Dhcp6RelayType pulumi.StringPtrInput `pulumi:"dhcp6RelayType"`
	// Enable/disable sending of ICMPv6 redirects. Valid values: `enable`, `disable`.
	Icmp6SendRedirect pulumi.StringPtrInput `pulumi:"icmp6SendRedirect"`
	// IPv6 interface identifier.
	InterfaceIdentifier pulumi.StringPtrInput `pulumi:"interfaceIdentifier"`
	// Primary IPv6 address prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Address pulumi.StringPtrInput `pulumi:"ip6Address"`
	// Allow management access to the interface.
	Ip6Allowaccess pulumi.StringPtrInput `pulumi:"ip6Allowaccess"`
	// Default life (sec).
	Ip6DefaultLife pulumi.IntPtrInput `pulumi:"ip6DefaultLife"`
	// IAID of obtained delegated-prefix from the upstream interface.
	Ip6DelegatedPrefixIaid pulumi.IntPtrInput `pulumi:"ip6DelegatedPrefixIaid"`
	// Advertised IPv6 delegated prefix list. The structure of `ip6DelegatedPrefixList` block is documented below.
	Ip6DelegatedPrefixLists InterfaceIpv6Ip6DelegatedPrefixListArrayInput `pulumi:"ip6DelegatedPrefixLists"`
	// Enable/disable using the DNS server acquired by DHCP. Valid values: `enable`, `disable`.
	Ip6DnsServerOverride pulumi.StringPtrInput `pulumi:"ip6DnsServerOverride"`
	// Extra IPv6 address prefixes of interface. The structure of `ip6ExtraAddr` block is documented below.
	Ip6ExtraAddrs InterfaceIpv6Ip6ExtraAddrArrayInput `pulumi:"ip6ExtraAddrs"`
	// Hop limit (0 means unspecified).
	Ip6HopLimit pulumi.IntPtrInput `pulumi:"ip6HopLimit"`
	// IPv6 link MTU.
	Ip6LinkMtu pulumi.IntPtrInput `pulumi:"ip6LinkMtu"`
	// Enable/disable the managed flag. Valid values: `enable`, `disable`.
	Ip6ManageFlag pulumi.StringPtrInput `pulumi:"ip6ManageFlag"`
	// IPv6 maximum interval (4 to 1800 sec).
	Ip6MaxInterval pulumi.IntPtrInput `pulumi:"ip6MaxInterval"`
	// IPv6 minimum interval (3 to 1350 sec).
	Ip6MinInterval pulumi.IntPtrInput `pulumi:"ip6MinInterval"`
	// Addressing mode (static, DHCP, delegated). Valid values: `static`, `dhcp`, `pppoe`, `delegated`.
	Ip6Mode pulumi.StringPtrInput `pulumi:"ip6Mode"`
	// Enable/disable the other IPv6 flag. Valid values: `enable`, `disable`.
	Ip6OtherFlag pulumi.StringPtrInput `pulumi:"ip6OtherFlag"`
	// Advertised prefix list. The structure of `ip6PrefixList` block is documented below.
	Ip6PrefixLists InterfaceIpv6Ip6PrefixListArrayInput `pulumi:"ip6PrefixLists"`
	// Assigning a prefix from DHCP or RA. Valid values: `dhcp6`, `ra`.
	Ip6PrefixMode pulumi.StringPtrInput `pulumi:"ip6PrefixMode"`
	// IPv6 reachable time (milliseconds; 0 means unspecified).
	Ip6ReachableTime pulumi.IntPtrInput `pulumi:"ip6ReachableTime"`
	// IPv6 retransmit time (milliseconds; 0 means unspecified).
	Ip6RetransTime pulumi.IntPtrInput `pulumi:"ip6RetransTime"`
	// Enable/disable sending advertisements about the interface. Valid values: `enable`, `disable`.
	Ip6SendAdv pulumi.StringPtrInput `pulumi:"ip6SendAdv"`
	// Subnet to routing prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Subnet pulumi.StringPtrInput `pulumi:"ip6Subnet"`
	// Interface name providing delegated information.
	Ip6UpstreamInterface pulumi.StringPtrInput `pulumi:"ip6UpstreamInterface"`
	// Neighbor discovery certificate.
	NdCert pulumi.StringPtrInput `pulumi:"ndCert"`
	// Neighbor discovery CGA modifier.
	NdCgaModifier pulumi.StringPtrInput `pulumi:"ndCgaModifier"`
	// Neighbor discovery mode. Valid values: `basic`, `SEND-compatible`.
	NdMode pulumi.StringPtrInput `pulumi:"ndMode"`
	// Neighbor discovery security level (0 - 7; 0 = least secure, default = 0).
	NdSecurityLevel pulumi.IntPtrInput `pulumi:"ndSecurityLevel"`
	// Neighbor discovery timestamp delta value (1 - 3600 sec; default = 300).
	NdTimestampDelta pulumi.IntPtrInput `pulumi:"ndTimestampDelta"`
	// Neighbor discovery timestamp fuzz factor (1 - 60 sec; default = 1).
	NdTimestampFuzz pulumi.IntPtrInput `pulumi:"ndTimestampFuzz"`
	// Enable/disable sending link MTU in RA packet. Valid values: `enable`, `disable`.
	RaSendMtu pulumi.StringPtrInput `pulumi:"raSendMtu"`
	// Enable/disable unique auto config address. Valid values: `enable`, `disable`.
	UniqueAutoconfAddr pulumi.StringPtrInput `pulumi:"uniqueAutoconfAddr"`
	// Link-local IPv6 address of virtual router.
	Vrip6LinkLocal pulumi.StringPtrInput `pulumi:"vrip6LinkLocal"`
	// IPv6 VRRP configuration. The structure of `vrrp6` block is documented below.
	//
	// The `ip6ExtraAddr` block supports:
	Vrrp6s InterfaceIpv6Vrrp6ArrayInput `pulumi:"vrrp6s"`
	// Enable/disable virtual MAC for VRRP. Valid values: `enable`, `disable`.
	VrrpVirtualMac6 pulumi.StringPtrInput `pulumi:"vrrpVirtualMac6"`
}

func (InterfaceIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6)(nil)).Elem()
}

func (i InterfaceIpv6Args) ToInterfaceIpv6Output() InterfaceIpv6Output {
	return i.ToInterfaceIpv6OutputWithContext(context.Background())
}

func (i InterfaceIpv6Args) ToInterfaceIpv6OutputWithContext(ctx context.Context) InterfaceIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Output)
}

func (i InterfaceIpv6Args) ToInterfaceIpv6PtrOutput() InterfaceIpv6PtrOutput {
	return i.ToInterfaceIpv6PtrOutputWithContext(context.Background())
}

func (i InterfaceIpv6Args) ToInterfaceIpv6PtrOutputWithContext(ctx context.Context) InterfaceIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Output).ToInterfaceIpv6PtrOutputWithContext(ctx)
}

// InterfaceIpv6PtrInput is an input type that accepts InterfaceIpv6Args, InterfaceIpv6Ptr and InterfaceIpv6PtrOutput values.
// You can construct a concrete instance of `InterfaceIpv6PtrInput` via:
//
//	        InterfaceIpv6Args{...}
//
//	or:
//
//	        nil
type InterfaceIpv6PtrInput interface {
	pulumi.Input

	ToInterfaceIpv6PtrOutput() InterfaceIpv6PtrOutput
	ToInterfaceIpv6PtrOutputWithContext(context.Context) InterfaceIpv6PtrOutput
}

type interfaceIpv6PtrType InterfaceIpv6Args

func InterfaceIpv6Ptr(v *InterfaceIpv6Args) InterfaceIpv6PtrInput {
	return (*interfaceIpv6PtrType)(v)
}

func (*interfaceIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceIpv6)(nil)).Elem()
}

func (i *interfaceIpv6PtrType) ToInterfaceIpv6PtrOutput() InterfaceIpv6PtrOutput {
	return i.ToInterfaceIpv6PtrOutputWithContext(context.Background())
}

func (i *interfaceIpv6PtrType) ToInterfaceIpv6PtrOutputWithContext(ctx context.Context) InterfaceIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6PtrOutput)
}

type InterfaceIpv6Output struct{ *pulumi.OutputState }

func (InterfaceIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6)(nil)).Elem()
}

func (o InterfaceIpv6Output) ToInterfaceIpv6Output() InterfaceIpv6Output {
	return o
}

func (o InterfaceIpv6Output) ToInterfaceIpv6OutputWithContext(ctx context.Context) InterfaceIpv6Output {
	return o
}

func (o InterfaceIpv6Output) ToInterfaceIpv6PtrOutput() InterfaceIpv6PtrOutput {
	return o.ToInterfaceIpv6PtrOutputWithContext(context.Background())
}

func (o InterfaceIpv6Output) ToInterfaceIpv6PtrOutputWithContext(ctx context.Context) InterfaceIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InterfaceIpv6) *InterfaceIpv6 {
		return &v
	}).(InterfaceIpv6PtrOutput)
}

// Enable/disable address auto config. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Output) Autoconf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Autoconf }).(pulumi.StringPtrOutput)
}

// CLI IPv6 connection status.
func (o InterfaceIpv6Output) CliConn6Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.CliConn6Status }).(pulumi.IntPtrOutput)
}

// DHCPv6 client options. Valid values: `rapid`, `iapd`, `iana`.
func (o InterfaceIpv6Output) Dhcp6ClientOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Dhcp6ClientOptions }).(pulumi.StringPtrOutput)
}

// DHCPv6 IA-PD list The structure of `dhcp6IapdList` block is documented below.
func (o InterfaceIpv6Output) Dhcp6IapdLists() InterfaceIpv6Dhcp6IapdListArrayOutput {
	return o.ApplyT(func(v InterfaceIpv6) []InterfaceIpv6Dhcp6IapdList { return v.Dhcp6IapdLists }).(InterfaceIpv6Dhcp6IapdListArrayOutput)
}

// Enable/disable DHCPv6 information request. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Output) Dhcp6InformationRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Dhcp6InformationRequest }).(pulumi.StringPtrOutput)
}

// Enable/disable DHCPv6 prefix delegation. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Output) Dhcp6PrefixDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Dhcp6PrefixDelegation }).(pulumi.StringPtrOutput)
}

// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
func (o InterfaceIpv6Output) Dhcp6PrefixHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Dhcp6PrefixHint }).(pulumi.StringPtrOutput)
}

// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
func (o InterfaceIpv6Output) Dhcp6PrefixHintPlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.Dhcp6PrefixHintPlt }).(pulumi.IntPtrOutput)
}

// DHCPv6 prefix hint valid life time (sec).
func (o InterfaceIpv6Output) Dhcp6PrefixHintVlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.Dhcp6PrefixHintVlt }).(pulumi.IntPtrOutput)
}

// DHCP6 relay interface ID.
func (o InterfaceIpv6Output) Dhcp6RelayInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Dhcp6RelayInterfaceId }).(pulumi.StringPtrOutput)
}

// DHCPv6 relay IP address.
func (o InterfaceIpv6Output) Dhcp6RelayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Dhcp6RelayIp }).(pulumi.StringPtrOutput)
}

// Enable/disable DHCPv6 relay. Valid values: `disable`, `enable`.
func (o InterfaceIpv6Output) Dhcp6RelayService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Dhcp6RelayService }).(pulumi.StringPtrOutput)
}

// Enable/disable use of address on this interface as the source address of the relay message. Valid values: `disable`, `enable`.
func (o InterfaceIpv6Output) Dhcp6RelaySourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Dhcp6RelaySourceInterface }).(pulumi.StringPtrOutput)
}

// IPv6 address used by the DHCP6 relay as its source IP.
func (o InterfaceIpv6Output) Dhcp6RelaySourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Dhcp6RelaySourceIp }).(pulumi.StringPtrOutput)
}

// DHCPv6 relay type. Valid values: `regular`.
func (o InterfaceIpv6Output) Dhcp6RelayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Dhcp6RelayType }).(pulumi.StringPtrOutput)
}

// Enable/disable sending of ICMPv6 redirects. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Output) Icmp6SendRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Icmp6SendRedirect }).(pulumi.StringPtrOutput)
}

// IPv6 interface identifier.
func (o InterfaceIpv6Output) InterfaceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.InterfaceIdentifier }).(pulumi.StringPtrOutput)
}

// Primary IPv6 address prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
func (o InterfaceIpv6Output) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Ip6Address }).(pulumi.StringPtrOutput)
}

// Allow management access to the interface.
func (o InterfaceIpv6Output) Ip6Allowaccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Ip6Allowaccess }).(pulumi.StringPtrOutput)
}

// Default life (sec).
func (o InterfaceIpv6Output) Ip6DefaultLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.Ip6DefaultLife }).(pulumi.IntPtrOutput)
}

// IAID of obtained delegated-prefix from the upstream interface.
func (o InterfaceIpv6Output) Ip6DelegatedPrefixIaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.Ip6DelegatedPrefixIaid }).(pulumi.IntPtrOutput)
}

// Advertised IPv6 delegated prefix list. The structure of `ip6DelegatedPrefixList` block is documented below.
func (o InterfaceIpv6Output) Ip6DelegatedPrefixLists() InterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o.ApplyT(func(v InterfaceIpv6) []InterfaceIpv6Ip6DelegatedPrefixList { return v.Ip6DelegatedPrefixLists }).(InterfaceIpv6Ip6DelegatedPrefixListArrayOutput)
}

// Enable/disable using the DNS server acquired by DHCP. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Output) Ip6DnsServerOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Ip6DnsServerOverride }).(pulumi.StringPtrOutput)
}

// Extra IPv6 address prefixes of interface. The structure of `ip6ExtraAddr` block is documented below.
func (o InterfaceIpv6Output) Ip6ExtraAddrs() InterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o.ApplyT(func(v InterfaceIpv6) []InterfaceIpv6Ip6ExtraAddr { return v.Ip6ExtraAddrs }).(InterfaceIpv6Ip6ExtraAddrArrayOutput)
}

// Hop limit (0 means unspecified).
func (o InterfaceIpv6Output) Ip6HopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.Ip6HopLimit }).(pulumi.IntPtrOutput)
}

// IPv6 link MTU.
func (o InterfaceIpv6Output) Ip6LinkMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.Ip6LinkMtu }).(pulumi.IntPtrOutput)
}

// Enable/disable the managed flag. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Output) Ip6ManageFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Ip6ManageFlag }).(pulumi.StringPtrOutput)
}

// IPv6 maximum interval (4 to 1800 sec).
func (o InterfaceIpv6Output) Ip6MaxInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.Ip6MaxInterval }).(pulumi.IntPtrOutput)
}

// IPv6 minimum interval (3 to 1350 sec).
func (o InterfaceIpv6Output) Ip6MinInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.Ip6MinInterval }).(pulumi.IntPtrOutput)
}

// Addressing mode (static, DHCP, delegated). Valid values: `static`, `dhcp`, `pppoe`, `delegated`.
func (o InterfaceIpv6Output) Ip6Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Ip6Mode }).(pulumi.StringPtrOutput)
}

// Enable/disable the other IPv6 flag. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Output) Ip6OtherFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Ip6OtherFlag }).(pulumi.StringPtrOutput)
}

// Advertised prefix list. The structure of `ip6PrefixList` block is documented below.
func (o InterfaceIpv6Output) Ip6PrefixLists() InterfaceIpv6Ip6PrefixListArrayOutput {
	return o.ApplyT(func(v InterfaceIpv6) []InterfaceIpv6Ip6PrefixList { return v.Ip6PrefixLists }).(InterfaceIpv6Ip6PrefixListArrayOutput)
}

// Assigning a prefix from DHCP or RA. Valid values: `dhcp6`, `ra`.
func (o InterfaceIpv6Output) Ip6PrefixMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Ip6PrefixMode }).(pulumi.StringPtrOutput)
}

// IPv6 reachable time (milliseconds; 0 means unspecified).
func (o InterfaceIpv6Output) Ip6ReachableTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.Ip6ReachableTime }).(pulumi.IntPtrOutput)
}

// IPv6 retransmit time (milliseconds; 0 means unspecified).
func (o InterfaceIpv6Output) Ip6RetransTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.Ip6RetransTime }).(pulumi.IntPtrOutput)
}

// Enable/disable sending advertisements about the interface. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Output) Ip6SendAdv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Ip6SendAdv }).(pulumi.StringPtrOutput)
}

// Subnet to routing prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
func (o InterfaceIpv6Output) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Ip6Subnet }).(pulumi.StringPtrOutput)
}

// Interface name providing delegated information.
func (o InterfaceIpv6Output) Ip6UpstreamInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Ip6UpstreamInterface }).(pulumi.StringPtrOutput)
}

// Neighbor discovery certificate.
func (o InterfaceIpv6Output) NdCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.NdCert }).(pulumi.StringPtrOutput)
}

// Neighbor discovery CGA modifier.
func (o InterfaceIpv6Output) NdCgaModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.NdCgaModifier }).(pulumi.StringPtrOutput)
}

// Neighbor discovery mode. Valid values: `basic`, `SEND-compatible`.
func (o InterfaceIpv6Output) NdMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.NdMode }).(pulumi.StringPtrOutput)
}

// Neighbor discovery security level (0 - 7; 0 = least secure, default = 0).
func (o InterfaceIpv6Output) NdSecurityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.NdSecurityLevel }).(pulumi.IntPtrOutput)
}

// Neighbor discovery timestamp delta value (1 - 3600 sec; default = 300).
func (o InterfaceIpv6Output) NdTimestampDelta() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.NdTimestampDelta }).(pulumi.IntPtrOutput)
}

// Neighbor discovery timestamp fuzz factor (1 - 60 sec; default = 1).
func (o InterfaceIpv6Output) NdTimestampFuzz() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *int { return v.NdTimestampFuzz }).(pulumi.IntPtrOutput)
}

// Enable/disable sending link MTU in RA packet. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Output) RaSendMtu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.RaSendMtu }).(pulumi.StringPtrOutput)
}

// Enable/disable unique auto config address. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Output) UniqueAutoconfAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.UniqueAutoconfAddr }).(pulumi.StringPtrOutput)
}

// Link-local IPv6 address of virtual router.
func (o InterfaceIpv6Output) Vrip6LinkLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.Vrip6LinkLocal }).(pulumi.StringPtrOutput)
}

// IPv6 VRRP configuration. The structure of `vrrp6` block is documented below.
//
// The `ip6ExtraAddr` block supports:
func (o InterfaceIpv6Output) Vrrp6s() InterfaceIpv6Vrrp6ArrayOutput {
	return o.ApplyT(func(v InterfaceIpv6) []InterfaceIpv6Vrrp6 { return v.Vrrp6s }).(InterfaceIpv6Vrrp6ArrayOutput)
}

// Enable/disable virtual MAC for VRRP. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Output) VrrpVirtualMac6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6) *string { return v.VrrpVirtualMac6 }).(pulumi.StringPtrOutput)
}

type InterfaceIpv6PtrOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceIpv6)(nil)).Elem()
}

func (o InterfaceIpv6PtrOutput) ToInterfaceIpv6PtrOutput() InterfaceIpv6PtrOutput {
	return o
}

func (o InterfaceIpv6PtrOutput) ToInterfaceIpv6PtrOutputWithContext(ctx context.Context) InterfaceIpv6PtrOutput {
	return o
}

func (o InterfaceIpv6PtrOutput) Elem() InterfaceIpv6Output {
	return o.ApplyT(func(v *InterfaceIpv6) InterfaceIpv6 {
		if v != nil {
			return *v
		}
		var ret InterfaceIpv6
		return ret
	}).(InterfaceIpv6Output)
}

// Enable/disable address auto config. Valid values: `enable`, `disable`.
func (o InterfaceIpv6PtrOutput) Autoconf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Autoconf
	}).(pulumi.StringPtrOutput)
}

// CLI IPv6 connection status.
func (o InterfaceIpv6PtrOutput) CliConn6Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.CliConn6Status
	}).(pulumi.IntPtrOutput)
}

// DHCPv6 client options. Valid values: `rapid`, `iapd`, `iana`.
func (o InterfaceIpv6PtrOutput) Dhcp6ClientOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6ClientOptions
	}).(pulumi.StringPtrOutput)
}

// DHCPv6 IA-PD list The structure of `dhcp6IapdList` block is documented below.
func (o InterfaceIpv6PtrOutput) Dhcp6IapdLists() InterfaceIpv6Dhcp6IapdListArrayOutput {
	return o.ApplyT(func(v *InterfaceIpv6) []InterfaceIpv6Dhcp6IapdList {
		if v == nil {
			return nil
		}
		return v.Dhcp6IapdLists
	}).(InterfaceIpv6Dhcp6IapdListArrayOutput)
}

// Enable/disable DHCPv6 information request. Valid values: `enable`, `disable`.
func (o InterfaceIpv6PtrOutput) Dhcp6InformationRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6InformationRequest
	}).(pulumi.StringPtrOutput)
}

// Enable/disable DHCPv6 prefix delegation. Valid values: `enable`, `disable`.
func (o InterfaceIpv6PtrOutput) Dhcp6PrefixDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixDelegation
	}).(pulumi.StringPtrOutput)
}

// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
func (o InterfaceIpv6PtrOutput) Dhcp6PrefixHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixHint
	}).(pulumi.StringPtrOutput)
}

// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
func (o InterfaceIpv6PtrOutput) Dhcp6PrefixHintPlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixHintPlt
	}).(pulumi.IntPtrOutput)
}

// DHCPv6 prefix hint valid life time (sec).
func (o InterfaceIpv6PtrOutput) Dhcp6PrefixHintVlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixHintVlt
	}).(pulumi.IntPtrOutput)
}

// DHCP6 relay interface ID.
func (o InterfaceIpv6PtrOutput) Dhcp6RelayInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelayInterfaceId
	}).(pulumi.StringPtrOutput)
}

// DHCPv6 relay IP address.
func (o InterfaceIpv6PtrOutput) Dhcp6RelayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelayIp
	}).(pulumi.StringPtrOutput)
}

// Enable/disable DHCPv6 relay. Valid values: `disable`, `enable`.
func (o InterfaceIpv6PtrOutput) Dhcp6RelayService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelayService
	}).(pulumi.StringPtrOutput)
}

// Enable/disable use of address on this interface as the source address of the relay message. Valid values: `disable`, `enable`.
func (o InterfaceIpv6PtrOutput) Dhcp6RelaySourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelaySourceInterface
	}).(pulumi.StringPtrOutput)
}

// IPv6 address used by the DHCP6 relay as its source IP.
func (o InterfaceIpv6PtrOutput) Dhcp6RelaySourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelaySourceIp
	}).(pulumi.StringPtrOutput)
}

// DHCPv6 relay type. Valid values: `regular`.
func (o InterfaceIpv6PtrOutput) Dhcp6RelayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelayType
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sending of ICMPv6 redirects. Valid values: `enable`, `disable`.
func (o InterfaceIpv6PtrOutput) Icmp6SendRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Icmp6SendRedirect
	}).(pulumi.StringPtrOutput)
}

// IPv6 interface identifier.
func (o InterfaceIpv6PtrOutput) InterfaceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.InterfaceIdentifier
	}).(pulumi.StringPtrOutput)
}

// Primary IPv6 address prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
func (o InterfaceIpv6PtrOutput) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Address
	}).(pulumi.StringPtrOutput)
}

// Allow management access to the interface.
func (o InterfaceIpv6PtrOutput) Ip6Allowaccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Allowaccess
	}).(pulumi.StringPtrOutput)
}

// Default life (sec).
func (o InterfaceIpv6PtrOutput) Ip6DefaultLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6DefaultLife
	}).(pulumi.IntPtrOutput)
}

// IAID of obtained delegated-prefix from the upstream interface.
func (o InterfaceIpv6PtrOutput) Ip6DelegatedPrefixIaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6DelegatedPrefixIaid
	}).(pulumi.IntPtrOutput)
}

// Advertised IPv6 delegated prefix list. The structure of `ip6DelegatedPrefixList` block is documented below.
func (o InterfaceIpv6PtrOutput) Ip6DelegatedPrefixLists() InterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o.ApplyT(func(v *InterfaceIpv6) []InterfaceIpv6Ip6DelegatedPrefixList {
		if v == nil {
			return nil
		}
		return v.Ip6DelegatedPrefixLists
	}).(InterfaceIpv6Ip6DelegatedPrefixListArrayOutput)
}

// Enable/disable using the DNS server acquired by DHCP. Valid values: `enable`, `disable`.
func (o InterfaceIpv6PtrOutput) Ip6DnsServerOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6DnsServerOverride
	}).(pulumi.StringPtrOutput)
}

// Extra IPv6 address prefixes of interface. The structure of `ip6ExtraAddr` block is documented below.
func (o InterfaceIpv6PtrOutput) Ip6ExtraAddrs() InterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o.ApplyT(func(v *InterfaceIpv6) []InterfaceIpv6Ip6ExtraAddr {
		if v == nil {
			return nil
		}
		return v.Ip6ExtraAddrs
	}).(InterfaceIpv6Ip6ExtraAddrArrayOutput)
}

// Hop limit (0 means unspecified).
func (o InterfaceIpv6PtrOutput) Ip6HopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6HopLimit
	}).(pulumi.IntPtrOutput)
}

// IPv6 link MTU.
func (o InterfaceIpv6PtrOutput) Ip6LinkMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6LinkMtu
	}).(pulumi.IntPtrOutput)
}

// Enable/disable the managed flag. Valid values: `enable`, `disable`.
func (o InterfaceIpv6PtrOutput) Ip6ManageFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6ManageFlag
	}).(pulumi.StringPtrOutput)
}

// IPv6 maximum interval (4 to 1800 sec).
func (o InterfaceIpv6PtrOutput) Ip6MaxInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6MaxInterval
	}).(pulumi.IntPtrOutput)
}

// IPv6 minimum interval (3 to 1350 sec).
func (o InterfaceIpv6PtrOutput) Ip6MinInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6MinInterval
	}).(pulumi.IntPtrOutput)
}

// Addressing mode (static, DHCP, delegated). Valid values: `static`, `dhcp`, `pppoe`, `delegated`.
func (o InterfaceIpv6PtrOutput) Ip6Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Mode
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the other IPv6 flag. Valid values: `enable`, `disable`.
func (o InterfaceIpv6PtrOutput) Ip6OtherFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6OtherFlag
	}).(pulumi.StringPtrOutput)
}

// Advertised prefix list. The structure of `ip6PrefixList` block is documented below.
func (o InterfaceIpv6PtrOutput) Ip6PrefixLists() InterfaceIpv6Ip6PrefixListArrayOutput {
	return o.ApplyT(func(v *InterfaceIpv6) []InterfaceIpv6Ip6PrefixList {
		if v == nil {
			return nil
		}
		return v.Ip6PrefixLists
	}).(InterfaceIpv6Ip6PrefixListArrayOutput)
}

// Assigning a prefix from DHCP or RA. Valid values: `dhcp6`, `ra`.
func (o InterfaceIpv6PtrOutput) Ip6PrefixMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6PrefixMode
	}).(pulumi.StringPtrOutput)
}

// IPv6 reachable time (milliseconds; 0 means unspecified).
func (o InterfaceIpv6PtrOutput) Ip6ReachableTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6ReachableTime
	}).(pulumi.IntPtrOutput)
}

// IPv6 retransmit time (milliseconds; 0 means unspecified).
func (o InterfaceIpv6PtrOutput) Ip6RetransTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6RetransTime
	}).(pulumi.IntPtrOutput)
}

// Enable/disable sending advertisements about the interface. Valid values: `enable`, `disable`.
func (o InterfaceIpv6PtrOutput) Ip6SendAdv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6SendAdv
	}).(pulumi.StringPtrOutput)
}

// Subnet to routing prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
func (o InterfaceIpv6PtrOutput) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Subnet
	}).(pulumi.StringPtrOutput)
}

// Interface name providing delegated information.
func (o InterfaceIpv6PtrOutput) Ip6UpstreamInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6UpstreamInterface
	}).(pulumi.StringPtrOutput)
}

// Neighbor discovery certificate.
func (o InterfaceIpv6PtrOutput) NdCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.NdCert
	}).(pulumi.StringPtrOutput)
}

// Neighbor discovery CGA modifier.
func (o InterfaceIpv6PtrOutput) NdCgaModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.NdCgaModifier
	}).(pulumi.StringPtrOutput)
}

// Neighbor discovery mode. Valid values: `basic`, `SEND-compatible`.
func (o InterfaceIpv6PtrOutput) NdMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.NdMode
	}).(pulumi.StringPtrOutput)
}

// Neighbor discovery security level (0 - 7; 0 = least secure, default = 0).
func (o InterfaceIpv6PtrOutput) NdSecurityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.NdSecurityLevel
	}).(pulumi.IntPtrOutput)
}

// Neighbor discovery timestamp delta value (1 - 3600 sec; default = 300).
func (o InterfaceIpv6PtrOutput) NdTimestampDelta() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.NdTimestampDelta
	}).(pulumi.IntPtrOutput)
}

// Neighbor discovery timestamp fuzz factor (1 - 60 sec; default = 1).
func (o InterfaceIpv6PtrOutput) NdTimestampFuzz() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.NdTimestampFuzz
	}).(pulumi.IntPtrOutput)
}

// Enable/disable sending link MTU in RA packet. Valid values: `enable`, `disable`.
func (o InterfaceIpv6PtrOutput) RaSendMtu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.RaSendMtu
	}).(pulumi.StringPtrOutput)
}

// Enable/disable unique auto config address. Valid values: `enable`, `disable`.
func (o InterfaceIpv6PtrOutput) UniqueAutoconfAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.UniqueAutoconfAddr
	}).(pulumi.StringPtrOutput)
}

// Link-local IPv6 address of virtual router.
func (o InterfaceIpv6PtrOutput) Vrip6LinkLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Vrip6LinkLocal
	}).(pulumi.StringPtrOutput)
}

// IPv6 VRRP configuration. The structure of `vrrp6` block is documented below.
//
// The `ip6ExtraAddr` block supports:
func (o InterfaceIpv6PtrOutput) Vrrp6s() InterfaceIpv6Vrrp6ArrayOutput {
	return o.ApplyT(func(v *InterfaceIpv6) []InterfaceIpv6Vrrp6 {
		if v == nil {
			return nil
		}
		return v.Vrrp6s
	}).(InterfaceIpv6Vrrp6ArrayOutput)
}

// Enable/disable virtual MAC for VRRP. Valid values: `enable`, `disable`.
func (o InterfaceIpv6PtrOutput) VrrpVirtualMac6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.VrrpVirtualMac6
	}).(pulumi.StringPtrOutput)
}

type InterfaceIpv6Dhcp6IapdList struct {
	// Identity association identifier.
	Iaid *int `pulumi:"iaid"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	PrefixHint *string `pulumi:"prefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	PrefixHintPlt *int `pulumi:"prefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	//
	// The `vrrp6` block supports:
	PrefixHintVlt *int `pulumi:"prefixHintVlt"`
}

// InterfaceIpv6Dhcp6IapdListInput is an input type that accepts InterfaceIpv6Dhcp6IapdListArgs and InterfaceIpv6Dhcp6IapdListOutput values.
// You can construct a concrete instance of `InterfaceIpv6Dhcp6IapdListInput` via:
//
//	InterfaceIpv6Dhcp6IapdListArgs{...}
type InterfaceIpv6Dhcp6IapdListInput interface {
	pulumi.Input

	ToInterfaceIpv6Dhcp6IapdListOutput() InterfaceIpv6Dhcp6IapdListOutput
	ToInterfaceIpv6Dhcp6IapdListOutputWithContext(context.Context) InterfaceIpv6Dhcp6IapdListOutput
}

type InterfaceIpv6Dhcp6IapdListArgs struct {
	// Identity association identifier.
	Iaid pulumi.IntPtrInput `pulumi:"iaid"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	PrefixHint pulumi.StringPtrInput `pulumi:"prefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	PrefixHintPlt pulumi.IntPtrInput `pulumi:"prefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	//
	// The `vrrp6` block supports:
	PrefixHintVlt pulumi.IntPtrInput `pulumi:"prefixHintVlt"`
}

func (InterfaceIpv6Dhcp6IapdListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (i InterfaceIpv6Dhcp6IapdListArgs) ToInterfaceIpv6Dhcp6IapdListOutput() InterfaceIpv6Dhcp6IapdListOutput {
	return i.ToInterfaceIpv6Dhcp6IapdListOutputWithContext(context.Background())
}

func (i InterfaceIpv6Dhcp6IapdListArgs) ToInterfaceIpv6Dhcp6IapdListOutputWithContext(ctx context.Context) InterfaceIpv6Dhcp6IapdListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Dhcp6IapdListOutput)
}

// InterfaceIpv6Dhcp6IapdListArrayInput is an input type that accepts InterfaceIpv6Dhcp6IapdListArray and InterfaceIpv6Dhcp6IapdListArrayOutput values.
// You can construct a concrete instance of `InterfaceIpv6Dhcp6IapdListArrayInput` via:
//
//	InterfaceIpv6Dhcp6IapdListArray{ InterfaceIpv6Dhcp6IapdListArgs{...} }
type InterfaceIpv6Dhcp6IapdListArrayInput interface {
	pulumi.Input

	ToInterfaceIpv6Dhcp6IapdListArrayOutput() InterfaceIpv6Dhcp6IapdListArrayOutput
	ToInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(context.Context) InterfaceIpv6Dhcp6IapdListArrayOutput
}

type InterfaceIpv6Dhcp6IapdListArray []InterfaceIpv6Dhcp6IapdListInput

func (InterfaceIpv6Dhcp6IapdListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (i InterfaceIpv6Dhcp6IapdListArray) ToInterfaceIpv6Dhcp6IapdListArrayOutput() InterfaceIpv6Dhcp6IapdListArrayOutput {
	return i.ToInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(context.Background())
}

func (i InterfaceIpv6Dhcp6IapdListArray) ToInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(ctx context.Context) InterfaceIpv6Dhcp6IapdListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Dhcp6IapdListArrayOutput)
}

type InterfaceIpv6Dhcp6IapdListOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6Dhcp6IapdListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (o InterfaceIpv6Dhcp6IapdListOutput) ToInterfaceIpv6Dhcp6IapdListOutput() InterfaceIpv6Dhcp6IapdListOutput {
	return o
}

func (o InterfaceIpv6Dhcp6IapdListOutput) ToInterfaceIpv6Dhcp6IapdListOutputWithContext(ctx context.Context) InterfaceIpv6Dhcp6IapdListOutput {
	return o
}

// Identity association identifier.
func (o InterfaceIpv6Dhcp6IapdListOutput) Iaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Dhcp6IapdList) *int { return v.Iaid }).(pulumi.IntPtrOutput)
}

// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
func (o InterfaceIpv6Dhcp6IapdListOutput) PrefixHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Dhcp6IapdList) *string { return v.PrefixHint }).(pulumi.StringPtrOutput)
}

// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
func (o InterfaceIpv6Dhcp6IapdListOutput) PrefixHintPlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Dhcp6IapdList) *int { return v.PrefixHintPlt }).(pulumi.IntPtrOutput)
}

// DHCPv6 prefix hint valid life time (sec).
//
// The `vrrp6` block supports:
func (o InterfaceIpv6Dhcp6IapdListOutput) PrefixHintVlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Dhcp6IapdList) *int { return v.PrefixHintVlt }).(pulumi.IntPtrOutput)
}

type InterfaceIpv6Dhcp6IapdListArrayOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6Dhcp6IapdListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (o InterfaceIpv6Dhcp6IapdListArrayOutput) ToInterfaceIpv6Dhcp6IapdListArrayOutput() InterfaceIpv6Dhcp6IapdListArrayOutput {
	return o
}

func (o InterfaceIpv6Dhcp6IapdListArrayOutput) ToInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(ctx context.Context) InterfaceIpv6Dhcp6IapdListArrayOutput {
	return o
}

func (o InterfaceIpv6Dhcp6IapdListArrayOutput) Index(i pulumi.IntInput) InterfaceIpv6Dhcp6IapdListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceIpv6Dhcp6IapdList {
		return vs[0].([]InterfaceIpv6Dhcp6IapdList)[vs[1].(int)]
	}).(InterfaceIpv6Dhcp6IapdListOutput)
}

type InterfaceIpv6Ip6DelegatedPrefixList struct {
	// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
	AutonomousFlag *string `pulumi:"autonomousFlag"`
	// IAID of obtained delegated-prefix from the upstream interface.
	DelegatedPrefixIaid *int `pulumi:"delegatedPrefixIaid"`
	// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
	OnlinkFlag *string `pulumi:"onlinkFlag"`
	// Prefix ID.
	PrefixId *int `pulumi:"prefixId"`
	// Recursive DNS server option.
	//
	// The `dhcp6IapdList` block supports:
	Rdnss *string `pulumi:"rdnss"`
	// Recursive DNS service option. Valid values: `delegated`, `default`, `specify`.
	RdnssService *string `pulumi:"rdnssService"`
	// Add subnet ID to routing prefix.
	Subnet *string `pulumi:"subnet"`
	// Name of the interface that provides delegated information.
	UpstreamInterface *string `pulumi:"upstreamInterface"`
}

// InterfaceIpv6Ip6DelegatedPrefixListInput is an input type that accepts InterfaceIpv6Ip6DelegatedPrefixListArgs and InterfaceIpv6Ip6DelegatedPrefixListOutput values.
// You can construct a concrete instance of `InterfaceIpv6Ip6DelegatedPrefixListInput` via:
//
//	InterfaceIpv6Ip6DelegatedPrefixListArgs{...}
type InterfaceIpv6Ip6DelegatedPrefixListInput interface {
	pulumi.Input

	ToInterfaceIpv6Ip6DelegatedPrefixListOutput() InterfaceIpv6Ip6DelegatedPrefixListOutput
	ToInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(context.Context) InterfaceIpv6Ip6DelegatedPrefixListOutput
}

type InterfaceIpv6Ip6DelegatedPrefixListArgs struct {
	// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
	AutonomousFlag pulumi.StringPtrInput `pulumi:"autonomousFlag"`
	// IAID of obtained delegated-prefix from the upstream interface.
	DelegatedPrefixIaid pulumi.IntPtrInput `pulumi:"delegatedPrefixIaid"`
	// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
	OnlinkFlag pulumi.StringPtrInput `pulumi:"onlinkFlag"`
	// Prefix ID.
	PrefixId pulumi.IntPtrInput `pulumi:"prefixId"`
	// Recursive DNS server option.
	//
	// The `dhcp6IapdList` block supports:
	Rdnss pulumi.StringPtrInput `pulumi:"rdnss"`
	// Recursive DNS service option. Valid values: `delegated`, `default`, `specify`.
	RdnssService pulumi.StringPtrInput `pulumi:"rdnssService"`
	// Add subnet ID to routing prefix.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Name of the interface that provides delegated information.
	UpstreamInterface pulumi.StringPtrInput `pulumi:"upstreamInterface"`
}

func (InterfaceIpv6Ip6DelegatedPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (i InterfaceIpv6Ip6DelegatedPrefixListArgs) ToInterfaceIpv6Ip6DelegatedPrefixListOutput() InterfaceIpv6Ip6DelegatedPrefixListOutput {
	return i.ToInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(context.Background())
}

func (i InterfaceIpv6Ip6DelegatedPrefixListArgs) ToInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(ctx context.Context) InterfaceIpv6Ip6DelegatedPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Ip6DelegatedPrefixListOutput)
}

// InterfaceIpv6Ip6DelegatedPrefixListArrayInput is an input type that accepts InterfaceIpv6Ip6DelegatedPrefixListArray and InterfaceIpv6Ip6DelegatedPrefixListArrayOutput values.
// You can construct a concrete instance of `InterfaceIpv6Ip6DelegatedPrefixListArrayInput` via:
//
//	InterfaceIpv6Ip6DelegatedPrefixListArray{ InterfaceIpv6Ip6DelegatedPrefixListArgs{...} }
type InterfaceIpv6Ip6DelegatedPrefixListArrayInput interface {
	pulumi.Input

	ToInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() InterfaceIpv6Ip6DelegatedPrefixListArrayOutput
	ToInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(context.Context) InterfaceIpv6Ip6DelegatedPrefixListArrayOutput
}

type InterfaceIpv6Ip6DelegatedPrefixListArray []InterfaceIpv6Ip6DelegatedPrefixListInput

func (InterfaceIpv6Ip6DelegatedPrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (i InterfaceIpv6Ip6DelegatedPrefixListArray) ToInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() InterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return i.ToInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(context.Background())
}

func (i InterfaceIpv6Ip6DelegatedPrefixListArray) ToInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(ctx context.Context) InterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Ip6DelegatedPrefixListArrayOutput)
}

type InterfaceIpv6Ip6DelegatedPrefixListOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6Ip6DelegatedPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (o InterfaceIpv6Ip6DelegatedPrefixListOutput) ToInterfaceIpv6Ip6DelegatedPrefixListOutput() InterfaceIpv6Ip6DelegatedPrefixListOutput {
	return o
}

func (o InterfaceIpv6Ip6DelegatedPrefixListOutput) ToInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(ctx context.Context) InterfaceIpv6Ip6DelegatedPrefixListOutput {
	return o
}

// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Ip6DelegatedPrefixListOutput) AutonomousFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6DelegatedPrefixList) *string { return v.AutonomousFlag }).(pulumi.StringPtrOutput)
}

// IAID of obtained delegated-prefix from the upstream interface.
func (o InterfaceIpv6Ip6DelegatedPrefixListOutput) DelegatedPrefixIaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6DelegatedPrefixList) *int { return v.DelegatedPrefixIaid }).(pulumi.IntPtrOutput)
}

// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Ip6DelegatedPrefixListOutput) OnlinkFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6DelegatedPrefixList) *string { return v.OnlinkFlag }).(pulumi.StringPtrOutput)
}

// Prefix ID.
func (o InterfaceIpv6Ip6DelegatedPrefixListOutput) PrefixId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6DelegatedPrefixList) *int { return v.PrefixId }).(pulumi.IntPtrOutput)
}

// Recursive DNS server option.
//
// The `dhcp6IapdList` block supports:
func (o InterfaceIpv6Ip6DelegatedPrefixListOutput) Rdnss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6DelegatedPrefixList) *string { return v.Rdnss }).(pulumi.StringPtrOutput)
}

// Recursive DNS service option. Valid values: `delegated`, `default`, `specify`.
func (o InterfaceIpv6Ip6DelegatedPrefixListOutput) RdnssService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6DelegatedPrefixList) *string { return v.RdnssService }).(pulumi.StringPtrOutput)
}

// Add subnet ID to routing prefix.
func (o InterfaceIpv6Ip6DelegatedPrefixListOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6DelegatedPrefixList) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Name of the interface that provides delegated information.
func (o InterfaceIpv6Ip6DelegatedPrefixListOutput) UpstreamInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6DelegatedPrefixList) *string { return v.UpstreamInterface }).(pulumi.StringPtrOutput)
}

type InterfaceIpv6Ip6DelegatedPrefixListArrayOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (o InterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ToInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() InterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o
}

func (o InterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ToInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(ctx context.Context) InterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o
}

func (o InterfaceIpv6Ip6DelegatedPrefixListArrayOutput) Index(i pulumi.IntInput) InterfaceIpv6Ip6DelegatedPrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceIpv6Ip6DelegatedPrefixList {
		return vs[0].([]InterfaceIpv6Ip6DelegatedPrefixList)[vs[1].(int)]
	}).(InterfaceIpv6Ip6DelegatedPrefixListOutput)
}

type InterfaceIpv6Ip6ExtraAddr struct {
	// IPv6 prefix.
	Prefix *string `pulumi:"prefix"`
}

// InterfaceIpv6Ip6ExtraAddrInput is an input type that accepts InterfaceIpv6Ip6ExtraAddrArgs and InterfaceIpv6Ip6ExtraAddrOutput values.
// You can construct a concrete instance of `InterfaceIpv6Ip6ExtraAddrInput` via:
//
//	InterfaceIpv6Ip6ExtraAddrArgs{...}
type InterfaceIpv6Ip6ExtraAddrInput interface {
	pulumi.Input

	ToInterfaceIpv6Ip6ExtraAddrOutput() InterfaceIpv6Ip6ExtraAddrOutput
	ToInterfaceIpv6Ip6ExtraAddrOutputWithContext(context.Context) InterfaceIpv6Ip6ExtraAddrOutput
}

type InterfaceIpv6Ip6ExtraAddrArgs struct {
	// IPv6 prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (InterfaceIpv6Ip6ExtraAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (i InterfaceIpv6Ip6ExtraAddrArgs) ToInterfaceIpv6Ip6ExtraAddrOutput() InterfaceIpv6Ip6ExtraAddrOutput {
	return i.ToInterfaceIpv6Ip6ExtraAddrOutputWithContext(context.Background())
}

func (i InterfaceIpv6Ip6ExtraAddrArgs) ToInterfaceIpv6Ip6ExtraAddrOutputWithContext(ctx context.Context) InterfaceIpv6Ip6ExtraAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Ip6ExtraAddrOutput)
}

// InterfaceIpv6Ip6ExtraAddrArrayInput is an input type that accepts InterfaceIpv6Ip6ExtraAddrArray and InterfaceIpv6Ip6ExtraAddrArrayOutput values.
// You can construct a concrete instance of `InterfaceIpv6Ip6ExtraAddrArrayInput` via:
//
//	InterfaceIpv6Ip6ExtraAddrArray{ InterfaceIpv6Ip6ExtraAddrArgs{...} }
type InterfaceIpv6Ip6ExtraAddrArrayInput interface {
	pulumi.Input

	ToInterfaceIpv6Ip6ExtraAddrArrayOutput() InterfaceIpv6Ip6ExtraAddrArrayOutput
	ToInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(context.Context) InterfaceIpv6Ip6ExtraAddrArrayOutput
}

type InterfaceIpv6Ip6ExtraAddrArray []InterfaceIpv6Ip6ExtraAddrInput

func (InterfaceIpv6Ip6ExtraAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (i InterfaceIpv6Ip6ExtraAddrArray) ToInterfaceIpv6Ip6ExtraAddrArrayOutput() InterfaceIpv6Ip6ExtraAddrArrayOutput {
	return i.ToInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(context.Background())
}

func (i InterfaceIpv6Ip6ExtraAddrArray) ToInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(ctx context.Context) InterfaceIpv6Ip6ExtraAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Ip6ExtraAddrArrayOutput)
}

type InterfaceIpv6Ip6ExtraAddrOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6Ip6ExtraAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (o InterfaceIpv6Ip6ExtraAddrOutput) ToInterfaceIpv6Ip6ExtraAddrOutput() InterfaceIpv6Ip6ExtraAddrOutput {
	return o
}

func (o InterfaceIpv6Ip6ExtraAddrOutput) ToInterfaceIpv6Ip6ExtraAddrOutputWithContext(ctx context.Context) InterfaceIpv6Ip6ExtraAddrOutput {
	return o
}

// IPv6 prefix.
func (o InterfaceIpv6Ip6ExtraAddrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6ExtraAddr) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type InterfaceIpv6Ip6ExtraAddrArrayOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6Ip6ExtraAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (o InterfaceIpv6Ip6ExtraAddrArrayOutput) ToInterfaceIpv6Ip6ExtraAddrArrayOutput() InterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o
}

func (o InterfaceIpv6Ip6ExtraAddrArrayOutput) ToInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(ctx context.Context) InterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o
}

func (o InterfaceIpv6Ip6ExtraAddrArrayOutput) Index(i pulumi.IntInput) InterfaceIpv6Ip6ExtraAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceIpv6Ip6ExtraAddr {
		return vs[0].([]InterfaceIpv6Ip6ExtraAddr)[vs[1].(int)]
	}).(InterfaceIpv6Ip6ExtraAddrOutput)
}

type InterfaceIpv6Ip6PrefixList struct {
	// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
	AutonomousFlag *string `pulumi:"autonomousFlag"`
	// DNS search list option. The structure of `dnssl` block is documented below.
	Dnssls []InterfaceIpv6Ip6PrefixListDnssl `pulumi:"dnssls"`
	// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
	OnlinkFlag *string `pulumi:"onlinkFlag"`
	// Preferred life time (sec).
	PreferredLifeTime *int `pulumi:"preferredLifeTime"`
	// IPv6 prefix.
	Prefix *string `pulumi:"prefix"`
	// Recursive DNS server option.
	//
	// The `dhcp6IapdList` block supports:
	Rdnss *string `pulumi:"rdnss"`
	// Valid life time (sec).
	ValidLifeTime *int `pulumi:"validLifeTime"`
}

// InterfaceIpv6Ip6PrefixListInput is an input type that accepts InterfaceIpv6Ip6PrefixListArgs and InterfaceIpv6Ip6PrefixListOutput values.
// You can construct a concrete instance of `InterfaceIpv6Ip6PrefixListInput` via:
//
//	InterfaceIpv6Ip6PrefixListArgs{...}
type InterfaceIpv6Ip6PrefixListInput interface {
	pulumi.Input

	ToInterfaceIpv6Ip6PrefixListOutput() InterfaceIpv6Ip6PrefixListOutput
	ToInterfaceIpv6Ip6PrefixListOutputWithContext(context.Context) InterfaceIpv6Ip6PrefixListOutput
}

type InterfaceIpv6Ip6PrefixListArgs struct {
	// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
	AutonomousFlag pulumi.StringPtrInput `pulumi:"autonomousFlag"`
	// DNS search list option. The structure of `dnssl` block is documented below.
	Dnssls InterfaceIpv6Ip6PrefixListDnsslArrayInput `pulumi:"dnssls"`
	// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
	OnlinkFlag pulumi.StringPtrInput `pulumi:"onlinkFlag"`
	// Preferred life time (sec).
	PreferredLifeTime pulumi.IntPtrInput `pulumi:"preferredLifeTime"`
	// IPv6 prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Recursive DNS server option.
	//
	// The `dhcp6IapdList` block supports:
	Rdnss pulumi.StringPtrInput `pulumi:"rdnss"`
	// Valid life time (sec).
	ValidLifeTime pulumi.IntPtrInput `pulumi:"validLifeTime"`
}

func (InterfaceIpv6Ip6PrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (i InterfaceIpv6Ip6PrefixListArgs) ToInterfaceIpv6Ip6PrefixListOutput() InterfaceIpv6Ip6PrefixListOutput {
	return i.ToInterfaceIpv6Ip6PrefixListOutputWithContext(context.Background())
}

func (i InterfaceIpv6Ip6PrefixListArgs) ToInterfaceIpv6Ip6PrefixListOutputWithContext(ctx context.Context) InterfaceIpv6Ip6PrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Ip6PrefixListOutput)
}

// InterfaceIpv6Ip6PrefixListArrayInput is an input type that accepts InterfaceIpv6Ip6PrefixListArray and InterfaceIpv6Ip6PrefixListArrayOutput values.
// You can construct a concrete instance of `InterfaceIpv6Ip6PrefixListArrayInput` via:
//
//	InterfaceIpv6Ip6PrefixListArray{ InterfaceIpv6Ip6PrefixListArgs{...} }
type InterfaceIpv6Ip6PrefixListArrayInput interface {
	pulumi.Input

	ToInterfaceIpv6Ip6PrefixListArrayOutput() InterfaceIpv6Ip6PrefixListArrayOutput
	ToInterfaceIpv6Ip6PrefixListArrayOutputWithContext(context.Context) InterfaceIpv6Ip6PrefixListArrayOutput
}

type InterfaceIpv6Ip6PrefixListArray []InterfaceIpv6Ip6PrefixListInput

func (InterfaceIpv6Ip6PrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (i InterfaceIpv6Ip6PrefixListArray) ToInterfaceIpv6Ip6PrefixListArrayOutput() InterfaceIpv6Ip6PrefixListArrayOutput {
	return i.ToInterfaceIpv6Ip6PrefixListArrayOutputWithContext(context.Background())
}

func (i InterfaceIpv6Ip6PrefixListArray) ToInterfaceIpv6Ip6PrefixListArrayOutputWithContext(ctx context.Context) InterfaceIpv6Ip6PrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Ip6PrefixListArrayOutput)
}

type InterfaceIpv6Ip6PrefixListOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6Ip6PrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (o InterfaceIpv6Ip6PrefixListOutput) ToInterfaceIpv6Ip6PrefixListOutput() InterfaceIpv6Ip6PrefixListOutput {
	return o
}

func (o InterfaceIpv6Ip6PrefixListOutput) ToInterfaceIpv6Ip6PrefixListOutputWithContext(ctx context.Context) InterfaceIpv6Ip6PrefixListOutput {
	return o
}

// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Ip6PrefixListOutput) AutonomousFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6PrefixList) *string { return v.AutonomousFlag }).(pulumi.StringPtrOutput)
}

// DNS search list option. The structure of `dnssl` block is documented below.
func (o InterfaceIpv6Ip6PrefixListOutput) Dnssls() InterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6PrefixList) []InterfaceIpv6Ip6PrefixListDnssl { return v.Dnssls }).(InterfaceIpv6Ip6PrefixListDnsslArrayOutput)
}

// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Ip6PrefixListOutput) OnlinkFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6PrefixList) *string { return v.OnlinkFlag }).(pulumi.StringPtrOutput)
}

// Preferred life time (sec).
func (o InterfaceIpv6Ip6PrefixListOutput) PreferredLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6PrefixList) *int { return v.PreferredLifeTime }).(pulumi.IntPtrOutput)
}

// IPv6 prefix.
func (o InterfaceIpv6Ip6PrefixListOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6PrefixList) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Recursive DNS server option.
//
// The `dhcp6IapdList` block supports:
func (o InterfaceIpv6Ip6PrefixListOutput) Rdnss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6PrefixList) *string { return v.Rdnss }).(pulumi.StringPtrOutput)
}

// Valid life time (sec).
func (o InterfaceIpv6Ip6PrefixListOutput) ValidLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6PrefixList) *int { return v.ValidLifeTime }).(pulumi.IntPtrOutput)
}

type InterfaceIpv6Ip6PrefixListArrayOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6Ip6PrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (o InterfaceIpv6Ip6PrefixListArrayOutput) ToInterfaceIpv6Ip6PrefixListArrayOutput() InterfaceIpv6Ip6PrefixListArrayOutput {
	return o
}

func (o InterfaceIpv6Ip6PrefixListArrayOutput) ToInterfaceIpv6Ip6PrefixListArrayOutputWithContext(ctx context.Context) InterfaceIpv6Ip6PrefixListArrayOutput {
	return o
}

func (o InterfaceIpv6Ip6PrefixListArrayOutput) Index(i pulumi.IntInput) InterfaceIpv6Ip6PrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceIpv6Ip6PrefixList {
		return vs[0].([]InterfaceIpv6Ip6PrefixList)[vs[1].(int)]
	}).(InterfaceIpv6Ip6PrefixListOutput)
}

type InterfaceIpv6Ip6PrefixListDnssl struct {
	// Domain name.
	//
	// The `ip6DelegatedPrefixList` block supports:
	Domain *string `pulumi:"domain"`
}

// InterfaceIpv6Ip6PrefixListDnsslInput is an input type that accepts InterfaceIpv6Ip6PrefixListDnsslArgs and InterfaceIpv6Ip6PrefixListDnsslOutput values.
// You can construct a concrete instance of `InterfaceIpv6Ip6PrefixListDnsslInput` via:
//
//	InterfaceIpv6Ip6PrefixListDnsslArgs{...}
type InterfaceIpv6Ip6PrefixListDnsslInput interface {
	pulumi.Input

	ToInterfaceIpv6Ip6PrefixListDnsslOutput() InterfaceIpv6Ip6PrefixListDnsslOutput
	ToInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(context.Context) InterfaceIpv6Ip6PrefixListDnsslOutput
}

type InterfaceIpv6Ip6PrefixListDnsslArgs struct {
	// Domain name.
	//
	// The `ip6DelegatedPrefixList` block supports:
	Domain pulumi.StringPtrInput `pulumi:"domain"`
}

func (InterfaceIpv6Ip6PrefixListDnsslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (i InterfaceIpv6Ip6PrefixListDnsslArgs) ToInterfaceIpv6Ip6PrefixListDnsslOutput() InterfaceIpv6Ip6PrefixListDnsslOutput {
	return i.ToInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(context.Background())
}

func (i InterfaceIpv6Ip6PrefixListDnsslArgs) ToInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(ctx context.Context) InterfaceIpv6Ip6PrefixListDnsslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Ip6PrefixListDnsslOutput)
}

// InterfaceIpv6Ip6PrefixListDnsslArrayInput is an input type that accepts InterfaceIpv6Ip6PrefixListDnsslArray and InterfaceIpv6Ip6PrefixListDnsslArrayOutput values.
// You can construct a concrete instance of `InterfaceIpv6Ip6PrefixListDnsslArrayInput` via:
//
//	InterfaceIpv6Ip6PrefixListDnsslArray{ InterfaceIpv6Ip6PrefixListDnsslArgs{...} }
type InterfaceIpv6Ip6PrefixListDnsslArrayInput interface {
	pulumi.Input

	ToInterfaceIpv6Ip6PrefixListDnsslArrayOutput() InterfaceIpv6Ip6PrefixListDnsslArrayOutput
	ToInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(context.Context) InterfaceIpv6Ip6PrefixListDnsslArrayOutput
}

type InterfaceIpv6Ip6PrefixListDnsslArray []InterfaceIpv6Ip6PrefixListDnsslInput

func (InterfaceIpv6Ip6PrefixListDnsslArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (i InterfaceIpv6Ip6PrefixListDnsslArray) ToInterfaceIpv6Ip6PrefixListDnsslArrayOutput() InterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return i.ToInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(context.Background())
}

func (i InterfaceIpv6Ip6PrefixListDnsslArray) ToInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(ctx context.Context) InterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Ip6PrefixListDnsslArrayOutput)
}

type InterfaceIpv6Ip6PrefixListDnsslOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6Ip6PrefixListDnsslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (o InterfaceIpv6Ip6PrefixListDnsslOutput) ToInterfaceIpv6Ip6PrefixListDnsslOutput() InterfaceIpv6Ip6PrefixListDnsslOutput {
	return o
}

func (o InterfaceIpv6Ip6PrefixListDnsslOutput) ToInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(ctx context.Context) InterfaceIpv6Ip6PrefixListDnsslOutput {
	return o
}

// Domain name.
//
// The `ip6DelegatedPrefixList` block supports:
func (o InterfaceIpv6Ip6PrefixListDnsslOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Ip6PrefixListDnssl) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

type InterfaceIpv6Ip6PrefixListDnsslArrayOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6Ip6PrefixListDnsslArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (o InterfaceIpv6Ip6PrefixListDnsslArrayOutput) ToInterfaceIpv6Ip6PrefixListDnsslArrayOutput() InterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o
}

func (o InterfaceIpv6Ip6PrefixListDnsslArrayOutput) ToInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(ctx context.Context) InterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o
}

func (o InterfaceIpv6Ip6PrefixListDnsslArrayOutput) Index(i pulumi.IntInput) InterfaceIpv6Ip6PrefixListDnsslOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceIpv6Ip6PrefixListDnssl {
		return vs[0].([]InterfaceIpv6Ip6PrefixListDnssl)[vs[1].(int)]
	}).(InterfaceIpv6Ip6PrefixListDnsslOutput)
}

type InterfaceIpv6Vrrp6 struct {
	// Enable/disable accept mode. Valid values: `enable`, `disable`.
	AcceptMode *string `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval *int `pulumi:"advInterval"`
	// Enable/disable ignoring of default route when checking destination. Valid values: `enable`, `disable`.
	IgnoreDefaultRoute *string `pulumi:"ignoreDefaultRoute"`
	// Enable/disable preempt mode. Valid values: `enable`, `disable`.
	Preempt *string `pulumi:"preempt"`
	// Priority of learned routes.
	Priority *int `pulumi:"priority"`
	// Startup time (1 - 255 seconds).
	StartTime *int `pulumi:"startTime"`
	// Bring the interface up or shut the interface down. Valid values: `up`, `down`.
	Status *string `pulumi:"status"`
	// Monitor the route to this destination.
	Vrdst6 *string `pulumi:"vrdst6"`
	// VRRP group ID (1 - 65535).
	Vrgrp *int `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid *int `pulumi:"vrid"`
	// IPv6 address of the virtual router.
	Vrip6 *string `pulumi:"vrip6"`
}

// InterfaceIpv6Vrrp6Input is an input type that accepts InterfaceIpv6Vrrp6Args and InterfaceIpv6Vrrp6Output values.
// You can construct a concrete instance of `InterfaceIpv6Vrrp6Input` via:
//
//	InterfaceIpv6Vrrp6Args{...}
type InterfaceIpv6Vrrp6Input interface {
	pulumi.Input

	ToInterfaceIpv6Vrrp6Output() InterfaceIpv6Vrrp6Output
	ToInterfaceIpv6Vrrp6OutputWithContext(context.Context) InterfaceIpv6Vrrp6Output
}

type InterfaceIpv6Vrrp6Args struct {
	// Enable/disable accept mode. Valid values: `enable`, `disable`.
	AcceptMode pulumi.StringPtrInput `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval pulumi.IntPtrInput `pulumi:"advInterval"`
	// Enable/disable ignoring of default route when checking destination. Valid values: `enable`, `disable`.
	IgnoreDefaultRoute pulumi.StringPtrInput `pulumi:"ignoreDefaultRoute"`
	// Enable/disable preempt mode. Valid values: `enable`, `disable`.
	Preempt pulumi.StringPtrInput `pulumi:"preempt"`
	// Priority of learned routes.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Startup time (1 - 255 seconds).
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// Bring the interface up or shut the interface down. Valid values: `up`, `down`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Monitor the route to this destination.
	Vrdst6 pulumi.StringPtrInput `pulumi:"vrdst6"`
	// VRRP group ID (1 - 65535).
	Vrgrp pulumi.IntPtrInput `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid pulumi.IntPtrInput `pulumi:"vrid"`
	// IPv6 address of the virtual router.
	Vrip6 pulumi.StringPtrInput `pulumi:"vrip6"`
}

func (InterfaceIpv6Vrrp6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Vrrp6)(nil)).Elem()
}

func (i InterfaceIpv6Vrrp6Args) ToInterfaceIpv6Vrrp6Output() InterfaceIpv6Vrrp6Output {
	return i.ToInterfaceIpv6Vrrp6OutputWithContext(context.Background())
}

func (i InterfaceIpv6Vrrp6Args) ToInterfaceIpv6Vrrp6OutputWithContext(ctx context.Context) InterfaceIpv6Vrrp6Output {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Vrrp6Output)
}

// InterfaceIpv6Vrrp6ArrayInput is an input type that accepts InterfaceIpv6Vrrp6Array and InterfaceIpv6Vrrp6ArrayOutput values.
// You can construct a concrete instance of `InterfaceIpv6Vrrp6ArrayInput` via:
//
//	InterfaceIpv6Vrrp6Array{ InterfaceIpv6Vrrp6Args{...} }
type InterfaceIpv6Vrrp6ArrayInput interface {
	pulumi.Input

	ToInterfaceIpv6Vrrp6ArrayOutput() InterfaceIpv6Vrrp6ArrayOutput
	ToInterfaceIpv6Vrrp6ArrayOutputWithContext(context.Context) InterfaceIpv6Vrrp6ArrayOutput
}

type InterfaceIpv6Vrrp6Array []InterfaceIpv6Vrrp6Input

func (InterfaceIpv6Vrrp6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Vrrp6)(nil)).Elem()
}

func (i InterfaceIpv6Vrrp6Array) ToInterfaceIpv6Vrrp6ArrayOutput() InterfaceIpv6Vrrp6ArrayOutput {
	return i.ToInterfaceIpv6Vrrp6ArrayOutputWithContext(context.Background())
}

func (i InterfaceIpv6Vrrp6Array) ToInterfaceIpv6Vrrp6ArrayOutputWithContext(ctx context.Context) InterfaceIpv6Vrrp6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceIpv6Vrrp6ArrayOutput)
}

type InterfaceIpv6Vrrp6Output struct{ *pulumi.OutputState }

func (InterfaceIpv6Vrrp6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceIpv6Vrrp6)(nil)).Elem()
}

func (o InterfaceIpv6Vrrp6Output) ToInterfaceIpv6Vrrp6Output() InterfaceIpv6Vrrp6Output {
	return o
}

func (o InterfaceIpv6Vrrp6Output) ToInterfaceIpv6Vrrp6OutputWithContext(ctx context.Context) InterfaceIpv6Vrrp6Output {
	return o
}

// Enable/disable accept mode. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Vrrp6Output) AcceptMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Vrrp6) *string { return v.AcceptMode }).(pulumi.StringPtrOutput)
}

// Advertisement interval (1 - 255 seconds).
func (o InterfaceIpv6Vrrp6Output) AdvInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Vrrp6) *int { return v.AdvInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable ignoring of default route when checking destination. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Vrrp6Output) IgnoreDefaultRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Vrrp6) *string { return v.IgnoreDefaultRoute }).(pulumi.StringPtrOutput)
}

// Enable/disable preempt mode. Valid values: `enable`, `disable`.
func (o InterfaceIpv6Vrrp6Output) Preempt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Vrrp6) *string { return v.Preempt }).(pulumi.StringPtrOutput)
}

// Priority of learned routes.
func (o InterfaceIpv6Vrrp6Output) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Vrrp6) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Startup time (1 - 255 seconds).
func (o InterfaceIpv6Vrrp6Output) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Vrrp6) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// Bring the interface up or shut the interface down. Valid values: `up`, `down`.
func (o InterfaceIpv6Vrrp6Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Vrrp6) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Monitor the route to this destination.
func (o InterfaceIpv6Vrrp6Output) Vrdst6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Vrrp6) *string { return v.Vrdst6 }).(pulumi.StringPtrOutput)
}

// VRRP group ID (1 - 65535).
func (o InterfaceIpv6Vrrp6Output) Vrgrp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Vrrp6) *int { return v.Vrgrp }).(pulumi.IntPtrOutput)
}

// Virtual router identifier (1 - 255).
func (o InterfaceIpv6Vrrp6Output) Vrid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Vrrp6) *int { return v.Vrid }).(pulumi.IntPtrOutput)
}

// IPv6 address of the virtual router.
func (o InterfaceIpv6Vrrp6Output) Vrip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceIpv6Vrrp6) *string { return v.Vrip6 }).(pulumi.StringPtrOutput)
}

type InterfaceIpv6Vrrp6ArrayOutput struct{ *pulumi.OutputState }

func (InterfaceIpv6Vrrp6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceIpv6Vrrp6)(nil)).Elem()
}

func (o InterfaceIpv6Vrrp6ArrayOutput) ToInterfaceIpv6Vrrp6ArrayOutput() InterfaceIpv6Vrrp6ArrayOutput {
	return o
}

func (o InterfaceIpv6Vrrp6ArrayOutput) ToInterfaceIpv6Vrrp6ArrayOutputWithContext(ctx context.Context) InterfaceIpv6Vrrp6ArrayOutput {
	return o
}

func (o InterfaceIpv6Vrrp6ArrayOutput) Index(i pulumi.IntInput) InterfaceIpv6Vrrp6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceIpv6Vrrp6 {
		return vs[0].([]InterfaceIpv6Vrrp6)[vs[1].(int)]
	}).(InterfaceIpv6Vrrp6Output)
}

type InterfaceManagedDevice struct {
	// Managed dev identifier.
	Name *string `pulumi:"name"`
}

// InterfaceManagedDeviceInput is an input type that accepts InterfaceManagedDeviceArgs and InterfaceManagedDeviceOutput values.
// You can construct a concrete instance of `InterfaceManagedDeviceInput` via:
//
//	InterfaceManagedDeviceArgs{...}
type InterfaceManagedDeviceInput interface {
	pulumi.Input

	ToInterfaceManagedDeviceOutput() InterfaceManagedDeviceOutput
	ToInterfaceManagedDeviceOutputWithContext(context.Context) InterfaceManagedDeviceOutput
}

type InterfaceManagedDeviceArgs struct {
	// Managed dev identifier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InterfaceManagedDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceManagedDevice)(nil)).Elem()
}

func (i InterfaceManagedDeviceArgs) ToInterfaceManagedDeviceOutput() InterfaceManagedDeviceOutput {
	return i.ToInterfaceManagedDeviceOutputWithContext(context.Background())
}

func (i InterfaceManagedDeviceArgs) ToInterfaceManagedDeviceOutputWithContext(ctx context.Context) InterfaceManagedDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceManagedDeviceOutput)
}

// InterfaceManagedDeviceArrayInput is an input type that accepts InterfaceManagedDeviceArray and InterfaceManagedDeviceArrayOutput values.
// You can construct a concrete instance of `InterfaceManagedDeviceArrayInput` via:
//
//	InterfaceManagedDeviceArray{ InterfaceManagedDeviceArgs{...} }
type InterfaceManagedDeviceArrayInput interface {
	pulumi.Input

	ToInterfaceManagedDeviceArrayOutput() InterfaceManagedDeviceArrayOutput
	ToInterfaceManagedDeviceArrayOutputWithContext(context.Context) InterfaceManagedDeviceArrayOutput
}

type InterfaceManagedDeviceArray []InterfaceManagedDeviceInput

func (InterfaceManagedDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceManagedDevice)(nil)).Elem()
}

func (i InterfaceManagedDeviceArray) ToInterfaceManagedDeviceArrayOutput() InterfaceManagedDeviceArrayOutput {
	return i.ToInterfaceManagedDeviceArrayOutputWithContext(context.Background())
}

func (i InterfaceManagedDeviceArray) ToInterfaceManagedDeviceArrayOutputWithContext(ctx context.Context) InterfaceManagedDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceManagedDeviceArrayOutput)
}

type InterfaceManagedDeviceOutput struct{ *pulumi.OutputState }

func (InterfaceManagedDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceManagedDevice)(nil)).Elem()
}

func (o InterfaceManagedDeviceOutput) ToInterfaceManagedDeviceOutput() InterfaceManagedDeviceOutput {
	return o
}

func (o InterfaceManagedDeviceOutput) ToInterfaceManagedDeviceOutputWithContext(ctx context.Context) InterfaceManagedDeviceOutput {
	return o
}

// Managed dev identifier.
func (o InterfaceManagedDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceManagedDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InterfaceManagedDeviceArrayOutput struct{ *pulumi.OutputState }

func (InterfaceManagedDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceManagedDevice)(nil)).Elem()
}

func (o InterfaceManagedDeviceArrayOutput) ToInterfaceManagedDeviceArrayOutput() InterfaceManagedDeviceArrayOutput {
	return o
}

func (o InterfaceManagedDeviceArrayOutput) ToInterfaceManagedDeviceArrayOutputWithContext(ctx context.Context) InterfaceManagedDeviceArrayOutput {
	return o
}

func (o InterfaceManagedDeviceArrayOutput) Index(i pulumi.IntInput) InterfaceManagedDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceManagedDevice {
		return vs[0].([]InterfaceManagedDevice)[vs[1].(int)]
	}).(InterfaceManagedDeviceOutput)
}

type InterfaceMember struct {
	// Physical interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// InterfaceMemberInput is an input type that accepts InterfaceMemberArgs and InterfaceMemberOutput values.
// You can construct a concrete instance of `InterfaceMemberInput` via:
//
//	InterfaceMemberArgs{...}
type InterfaceMemberInput interface {
	pulumi.Input

	ToInterfaceMemberOutput() InterfaceMemberOutput
	ToInterfaceMemberOutputWithContext(context.Context) InterfaceMemberOutput
}

type InterfaceMemberArgs struct {
	// Physical interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (InterfaceMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceMember)(nil)).Elem()
}

func (i InterfaceMemberArgs) ToInterfaceMemberOutput() InterfaceMemberOutput {
	return i.ToInterfaceMemberOutputWithContext(context.Background())
}

func (i InterfaceMemberArgs) ToInterfaceMemberOutputWithContext(ctx context.Context) InterfaceMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceMemberOutput)
}

// InterfaceMemberArrayInput is an input type that accepts InterfaceMemberArray and InterfaceMemberArrayOutput values.
// You can construct a concrete instance of `InterfaceMemberArrayInput` via:
//
//	InterfaceMemberArray{ InterfaceMemberArgs{...} }
type InterfaceMemberArrayInput interface {
	pulumi.Input

	ToInterfaceMemberArrayOutput() InterfaceMemberArrayOutput
	ToInterfaceMemberArrayOutputWithContext(context.Context) InterfaceMemberArrayOutput
}

type InterfaceMemberArray []InterfaceMemberInput

func (InterfaceMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceMember)(nil)).Elem()
}

func (i InterfaceMemberArray) ToInterfaceMemberArrayOutput() InterfaceMemberArrayOutput {
	return i.ToInterfaceMemberArrayOutputWithContext(context.Background())
}

func (i InterfaceMemberArray) ToInterfaceMemberArrayOutputWithContext(ctx context.Context) InterfaceMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceMemberArrayOutput)
}

type InterfaceMemberOutput struct{ *pulumi.OutputState }

func (InterfaceMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceMember)(nil)).Elem()
}

func (o InterfaceMemberOutput) ToInterfaceMemberOutput() InterfaceMemberOutput {
	return o
}

func (o InterfaceMemberOutput) ToInterfaceMemberOutputWithContext(ctx context.Context) InterfaceMemberOutput {
	return o
}

// Physical interface name.
func (o InterfaceMemberOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceMember) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type InterfaceMemberArrayOutput struct{ *pulumi.OutputState }

func (InterfaceMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceMember)(nil)).Elem()
}

func (o InterfaceMemberArrayOutput) ToInterfaceMemberArrayOutput() InterfaceMemberArrayOutput {
	return o
}

func (o InterfaceMemberArrayOutput) ToInterfaceMemberArrayOutputWithContext(ctx context.Context) InterfaceMemberArrayOutput {
	return o
}

func (o InterfaceMemberArrayOutput) Index(i pulumi.IntInput) InterfaceMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceMember {
		return vs[0].([]InterfaceMember)[vs[1].(int)]
	}).(InterfaceMemberOutput)
}

type InterfaceSecondaryip struct {
	// Management access settings for the secondary IP address.
	Allowaccess *string `pulumi:"allowaccess"`
	// Protocols used to detect the server. Valid values: `ping`, `tcp-echo`, `udp-echo`.
	Detectprotocol *string `pulumi:"detectprotocol"`
	// Gateway's ping server for this IP.
	Detectserver *string `pulumi:"detectserver"`
	// Enable/disable detect gateway alive for first. Valid values: `enable`, `disable`.
	Gwdetect *string `pulumi:"gwdetect"`
	// HA election priority for the PING server.
	HaPriority *int `pulumi:"haPriority"`
	// ID.
	Id *int `pulumi:"id"`
	// Secondary IP address of the interface.
	Ip *string `pulumi:"ip"`
	// PING server status.
	PingServStatus *int `pulumi:"pingServStatus"`
	// DHCP relay IP address.
	SecipRelayIp *string `pulumi:"secipRelayIp"`
}

// InterfaceSecondaryipInput is an input type that accepts InterfaceSecondaryipArgs and InterfaceSecondaryipOutput values.
// You can construct a concrete instance of `InterfaceSecondaryipInput` via:
//
//	InterfaceSecondaryipArgs{...}
type InterfaceSecondaryipInput interface {
	pulumi.Input

	ToInterfaceSecondaryipOutput() InterfaceSecondaryipOutput
	ToInterfaceSecondaryipOutputWithContext(context.Context) InterfaceSecondaryipOutput
}

type InterfaceSecondaryipArgs struct {
	// Management access settings for the secondary IP address.
	Allowaccess pulumi.StringPtrInput `pulumi:"allowaccess"`
	// Protocols used to detect the server. Valid values: `ping`, `tcp-echo`, `udp-echo`.
	Detectprotocol pulumi.StringPtrInput `pulumi:"detectprotocol"`
	// Gateway's ping server for this IP.
	Detectserver pulumi.StringPtrInput `pulumi:"detectserver"`
	// Enable/disable detect gateway alive for first. Valid values: `enable`, `disable`.
	Gwdetect pulumi.StringPtrInput `pulumi:"gwdetect"`
	// HA election priority for the PING server.
	HaPriority pulumi.IntPtrInput `pulumi:"haPriority"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Secondary IP address of the interface.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// PING server status.
	PingServStatus pulumi.IntPtrInput `pulumi:"pingServStatus"`
	// DHCP relay IP address.
	SecipRelayIp pulumi.StringPtrInput `pulumi:"secipRelayIp"`
}

func (InterfaceSecondaryipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceSecondaryip)(nil)).Elem()
}

func (i InterfaceSecondaryipArgs) ToInterfaceSecondaryipOutput() InterfaceSecondaryipOutput {
	return i.ToInterfaceSecondaryipOutputWithContext(context.Background())
}

func (i InterfaceSecondaryipArgs) ToInterfaceSecondaryipOutputWithContext(ctx context.Context) InterfaceSecondaryipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceSecondaryipOutput)
}

// InterfaceSecondaryipArrayInput is an input type that accepts InterfaceSecondaryipArray and InterfaceSecondaryipArrayOutput values.
// You can construct a concrete instance of `InterfaceSecondaryipArrayInput` via:
//
//	InterfaceSecondaryipArray{ InterfaceSecondaryipArgs{...} }
type InterfaceSecondaryipArrayInput interface {
	pulumi.Input

	ToInterfaceSecondaryipArrayOutput() InterfaceSecondaryipArrayOutput
	ToInterfaceSecondaryipArrayOutputWithContext(context.Context) InterfaceSecondaryipArrayOutput
}

type InterfaceSecondaryipArray []InterfaceSecondaryipInput

func (InterfaceSecondaryipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceSecondaryip)(nil)).Elem()
}

func (i InterfaceSecondaryipArray) ToInterfaceSecondaryipArrayOutput() InterfaceSecondaryipArrayOutput {
	return i.ToInterfaceSecondaryipArrayOutputWithContext(context.Background())
}

func (i InterfaceSecondaryipArray) ToInterfaceSecondaryipArrayOutputWithContext(ctx context.Context) InterfaceSecondaryipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceSecondaryipArrayOutput)
}

type InterfaceSecondaryipOutput struct{ *pulumi.OutputState }

func (InterfaceSecondaryipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceSecondaryip)(nil)).Elem()
}

func (o InterfaceSecondaryipOutput) ToInterfaceSecondaryipOutput() InterfaceSecondaryipOutput {
	return o
}

func (o InterfaceSecondaryipOutput) ToInterfaceSecondaryipOutputWithContext(ctx context.Context) InterfaceSecondaryipOutput {
	return o
}

// Management access settings for the secondary IP address.
func (o InterfaceSecondaryipOutput) Allowaccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceSecondaryip) *string { return v.Allowaccess }).(pulumi.StringPtrOutput)
}

// Protocols used to detect the server. Valid values: `ping`, `tcp-echo`, `udp-echo`.
func (o InterfaceSecondaryipOutput) Detectprotocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceSecondaryip) *string { return v.Detectprotocol }).(pulumi.StringPtrOutput)
}

// Gateway's ping server for this IP.
func (o InterfaceSecondaryipOutput) Detectserver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceSecondaryip) *string { return v.Detectserver }).(pulumi.StringPtrOutput)
}

// Enable/disable detect gateway alive for first. Valid values: `enable`, `disable`.
func (o InterfaceSecondaryipOutput) Gwdetect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceSecondaryip) *string { return v.Gwdetect }).(pulumi.StringPtrOutput)
}

// HA election priority for the PING server.
func (o InterfaceSecondaryipOutput) HaPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceSecondaryip) *int { return v.HaPriority }).(pulumi.IntPtrOutput)
}

// ID.
func (o InterfaceSecondaryipOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceSecondaryip) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Secondary IP address of the interface.
func (o InterfaceSecondaryipOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceSecondaryip) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// PING server status.
func (o InterfaceSecondaryipOutput) PingServStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceSecondaryip) *int { return v.PingServStatus }).(pulumi.IntPtrOutput)
}

// DHCP relay IP address.
func (o InterfaceSecondaryipOutput) SecipRelayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceSecondaryip) *string { return v.SecipRelayIp }).(pulumi.StringPtrOutput)
}

type InterfaceSecondaryipArrayOutput struct{ *pulumi.OutputState }

func (InterfaceSecondaryipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceSecondaryip)(nil)).Elem()
}

func (o InterfaceSecondaryipArrayOutput) ToInterfaceSecondaryipArrayOutput() InterfaceSecondaryipArrayOutput {
	return o
}

func (o InterfaceSecondaryipArrayOutput) ToInterfaceSecondaryipArrayOutputWithContext(ctx context.Context) InterfaceSecondaryipArrayOutput {
	return o
}

func (o InterfaceSecondaryipArrayOutput) Index(i pulumi.IntInput) InterfaceSecondaryipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceSecondaryip {
		return vs[0].([]InterfaceSecondaryip)[vs[1].(int)]
	}).(InterfaceSecondaryipOutput)
}

type InterfaceSecurityGroup struct {
	// Names of user groups that can authenticate with the captive portal.
	Name *string `pulumi:"name"`
}

// InterfaceSecurityGroupInput is an input type that accepts InterfaceSecurityGroupArgs and InterfaceSecurityGroupOutput values.
// You can construct a concrete instance of `InterfaceSecurityGroupInput` via:
//
//	InterfaceSecurityGroupArgs{...}
type InterfaceSecurityGroupInput interface {
	pulumi.Input

	ToInterfaceSecurityGroupOutput() InterfaceSecurityGroupOutput
	ToInterfaceSecurityGroupOutputWithContext(context.Context) InterfaceSecurityGroupOutput
}

type InterfaceSecurityGroupArgs struct {
	// Names of user groups that can authenticate with the captive portal.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InterfaceSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceSecurityGroup)(nil)).Elem()
}

func (i InterfaceSecurityGroupArgs) ToInterfaceSecurityGroupOutput() InterfaceSecurityGroupOutput {
	return i.ToInterfaceSecurityGroupOutputWithContext(context.Background())
}

func (i InterfaceSecurityGroupArgs) ToInterfaceSecurityGroupOutputWithContext(ctx context.Context) InterfaceSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceSecurityGroupOutput)
}

// InterfaceSecurityGroupArrayInput is an input type that accepts InterfaceSecurityGroupArray and InterfaceSecurityGroupArrayOutput values.
// You can construct a concrete instance of `InterfaceSecurityGroupArrayInput` via:
//
//	InterfaceSecurityGroupArray{ InterfaceSecurityGroupArgs{...} }
type InterfaceSecurityGroupArrayInput interface {
	pulumi.Input

	ToInterfaceSecurityGroupArrayOutput() InterfaceSecurityGroupArrayOutput
	ToInterfaceSecurityGroupArrayOutputWithContext(context.Context) InterfaceSecurityGroupArrayOutput
}

type InterfaceSecurityGroupArray []InterfaceSecurityGroupInput

func (InterfaceSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceSecurityGroup)(nil)).Elem()
}

func (i InterfaceSecurityGroupArray) ToInterfaceSecurityGroupArrayOutput() InterfaceSecurityGroupArrayOutput {
	return i.ToInterfaceSecurityGroupArrayOutputWithContext(context.Background())
}

func (i InterfaceSecurityGroupArray) ToInterfaceSecurityGroupArrayOutputWithContext(ctx context.Context) InterfaceSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceSecurityGroupArrayOutput)
}

type InterfaceSecurityGroupOutput struct{ *pulumi.OutputState }

func (InterfaceSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceSecurityGroup)(nil)).Elem()
}

func (o InterfaceSecurityGroupOutput) ToInterfaceSecurityGroupOutput() InterfaceSecurityGroupOutput {
	return o
}

func (o InterfaceSecurityGroupOutput) ToInterfaceSecurityGroupOutputWithContext(ctx context.Context) InterfaceSecurityGroupOutput {
	return o
}

// Names of user groups that can authenticate with the captive portal.
func (o InterfaceSecurityGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceSecurityGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InterfaceSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (InterfaceSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceSecurityGroup)(nil)).Elem()
}

func (o InterfaceSecurityGroupArrayOutput) ToInterfaceSecurityGroupArrayOutput() InterfaceSecurityGroupArrayOutput {
	return o
}

func (o InterfaceSecurityGroupArrayOutput) ToInterfaceSecurityGroupArrayOutputWithContext(ctx context.Context) InterfaceSecurityGroupArrayOutput {
	return o
}

func (o InterfaceSecurityGroupArrayOutput) Index(i pulumi.IntInput) InterfaceSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceSecurityGroup {
		return vs[0].([]InterfaceSecurityGroup)[vs[1].(int)]
	}).(InterfaceSecurityGroupOutput)
}

type InterfaceTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []InterfaceTaggingTag `pulumi:"tags"`
}

// InterfaceTaggingInput is an input type that accepts InterfaceTaggingArgs and InterfaceTaggingOutput values.
// You can construct a concrete instance of `InterfaceTaggingInput` via:
//
//	InterfaceTaggingArgs{...}
type InterfaceTaggingInput interface {
	pulumi.Input

	ToInterfaceTaggingOutput() InterfaceTaggingOutput
	ToInterfaceTaggingOutputWithContext(context.Context) InterfaceTaggingOutput
}

type InterfaceTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags InterfaceTaggingTagArrayInput `pulumi:"tags"`
}

func (InterfaceTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceTagging)(nil)).Elem()
}

func (i InterfaceTaggingArgs) ToInterfaceTaggingOutput() InterfaceTaggingOutput {
	return i.ToInterfaceTaggingOutputWithContext(context.Background())
}

func (i InterfaceTaggingArgs) ToInterfaceTaggingOutputWithContext(ctx context.Context) InterfaceTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceTaggingOutput)
}

// InterfaceTaggingArrayInput is an input type that accepts InterfaceTaggingArray and InterfaceTaggingArrayOutput values.
// You can construct a concrete instance of `InterfaceTaggingArrayInput` via:
//
//	InterfaceTaggingArray{ InterfaceTaggingArgs{...} }
type InterfaceTaggingArrayInput interface {
	pulumi.Input

	ToInterfaceTaggingArrayOutput() InterfaceTaggingArrayOutput
	ToInterfaceTaggingArrayOutputWithContext(context.Context) InterfaceTaggingArrayOutput
}

type InterfaceTaggingArray []InterfaceTaggingInput

func (InterfaceTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceTagging)(nil)).Elem()
}

func (i InterfaceTaggingArray) ToInterfaceTaggingArrayOutput() InterfaceTaggingArrayOutput {
	return i.ToInterfaceTaggingArrayOutputWithContext(context.Background())
}

func (i InterfaceTaggingArray) ToInterfaceTaggingArrayOutputWithContext(ctx context.Context) InterfaceTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceTaggingArrayOutput)
}

type InterfaceTaggingOutput struct{ *pulumi.OutputState }

func (InterfaceTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceTagging)(nil)).Elem()
}

func (o InterfaceTaggingOutput) ToInterfaceTaggingOutput() InterfaceTaggingOutput {
	return o
}

func (o InterfaceTaggingOutput) ToInterfaceTaggingOutputWithContext(ctx context.Context) InterfaceTaggingOutput {
	return o
}

// Tag category.
func (o InterfaceTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o InterfaceTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o InterfaceTaggingOutput) Tags() InterfaceTaggingTagArrayOutput {
	return o.ApplyT(func(v InterfaceTagging) []InterfaceTaggingTag { return v.Tags }).(InterfaceTaggingTagArrayOutput)
}

type InterfaceTaggingArrayOutput struct{ *pulumi.OutputState }

func (InterfaceTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceTagging)(nil)).Elem()
}

func (o InterfaceTaggingArrayOutput) ToInterfaceTaggingArrayOutput() InterfaceTaggingArrayOutput {
	return o
}

func (o InterfaceTaggingArrayOutput) ToInterfaceTaggingArrayOutputWithContext(ctx context.Context) InterfaceTaggingArrayOutput {
	return o
}

func (o InterfaceTaggingArrayOutput) Index(i pulumi.IntInput) InterfaceTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceTagging {
		return vs[0].([]InterfaceTagging)[vs[1].(int)]
	}).(InterfaceTaggingOutput)
}

type InterfaceTaggingTag struct {
	// Tag name.
	//
	// The `ipv6` block supports:
	Name *string `pulumi:"name"`
}

// InterfaceTaggingTagInput is an input type that accepts InterfaceTaggingTagArgs and InterfaceTaggingTagOutput values.
// You can construct a concrete instance of `InterfaceTaggingTagInput` via:
//
//	InterfaceTaggingTagArgs{...}
type InterfaceTaggingTagInput interface {
	pulumi.Input

	ToInterfaceTaggingTagOutput() InterfaceTaggingTagOutput
	ToInterfaceTaggingTagOutputWithContext(context.Context) InterfaceTaggingTagOutput
}

type InterfaceTaggingTagArgs struct {
	// Tag name.
	//
	// The `ipv6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InterfaceTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceTaggingTag)(nil)).Elem()
}

func (i InterfaceTaggingTagArgs) ToInterfaceTaggingTagOutput() InterfaceTaggingTagOutput {
	return i.ToInterfaceTaggingTagOutputWithContext(context.Background())
}

func (i InterfaceTaggingTagArgs) ToInterfaceTaggingTagOutputWithContext(ctx context.Context) InterfaceTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceTaggingTagOutput)
}

// InterfaceTaggingTagArrayInput is an input type that accepts InterfaceTaggingTagArray and InterfaceTaggingTagArrayOutput values.
// You can construct a concrete instance of `InterfaceTaggingTagArrayInput` via:
//
//	InterfaceTaggingTagArray{ InterfaceTaggingTagArgs{...} }
type InterfaceTaggingTagArrayInput interface {
	pulumi.Input

	ToInterfaceTaggingTagArrayOutput() InterfaceTaggingTagArrayOutput
	ToInterfaceTaggingTagArrayOutputWithContext(context.Context) InterfaceTaggingTagArrayOutput
}

type InterfaceTaggingTagArray []InterfaceTaggingTagInput

func (InterfaceTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceTaggingTag)(nil)).Elem()
}

func (i InterfaceTaggingTagArray) ToInterfaceTaggingTagArrayOutput() InterfaceTaggingTagArrayOutput {
	return i.ToInterfaceTaggingTagArrayOutputWithContext(context.Background())
}

func (i InterfaceTaggingTagArray) ToInterfaceTaggingTagArrayOutputWithContext(ctx context.Context) InterfaceTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceTaggingTagArrayOutput)
}

type InterfaceTaggingTagOutput struct{ *pulumi.OutputState }

func (InterfaceTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceTaggingTag)(nil)).Elem()
}

func (o InterfaceTaggingTagOutput) ToInterfaceTaggingTagOutput() InterfaceTaggingTagOutput {
	return o
}

func (o InterfaceTaggingTagOutput) ToInterfaceTaggingTagOutputWithContext(ctx context.Context) InterfaceTaggingTagOutput {
	return o
}

// Tag name.
//
// The `ipv6` block supports:
func (o InterfaceTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InterfaceTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (InterfaceTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceTaggingTag)(nil)).Elem()
}

func (o InterfaceTaggingTagArrayOutput) ToInterfaceTaggingTagArrayOutput() InterfaceTaggingTagArrayOutput {
	return o
}

func (o InterfaceTaggingTagArrayOutput) ToInterfaceTaggingTagArrayOutputWithContext(ctx context.Context) InterfaceTaggingTagArrayOutput {
	return o
}

func (o InterfaceTaggingTagArrayOutput) Index(i pulumi.IntInput) InterfaceTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceTaggingTag {
		return vs[0].([]InterfaceTaggingTag)[vs[1].(int)]
	}).(InterfaceTaggingTagOutput)
}

type InterfaceVrrp struct {
	// Enable/disable accept mode. Valid values: `enable`, `disable`.
	AcceptMode *string `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval *int `pulumi:"advInterval"`
	// Enable/disable ignoring of default route when checking destination. Valid values: `enable`, `disable`.
	IgnoreDefaultRoute *string `pulumi:"ignoreDefaultRoute"`
	// Enable/disable preempt mode. Valid values: `enable`, `disable`.
	Preempt *string `pulumi:"preempt"`
	// Priority of the virtual router (1 - 255).
	Priority *int `pulumi:"priority"`
	// VRRP Proxy ARP configuration. The structure of `proxyArp` block is documented below.
	ProxyArps []InterfaceVrrpProxyArp `pulumi:"proxyArps"`
	// Startup time (1 - 255 seconds).
	StartTime *int `pulumi:"startTime"`
	// Enable/disable this VRRP configuration. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// VRRP version. Valid values: `2`, `3`.
	Version *string `pulumi:"version"`
	// Monitor the route to this destination.
	Vrdst *string `pulumi:"vrdst"`
	// Priority of the virtual router when the virtual router destination becomes unreachable (0 - 254).
	VrdstPriority *int `pulumi:"vrdstPriority"`
	// VRRP group ID (1 - 65535).
	Vrgrp *int `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid *int `pulumi:"vrid"`
	// IP address of the virtual router.
	Vrip *string `pulumi:"vrip"`
}

// InterfaceVrrpInput is an input type that accepts InterfaceVrrpArgs and InterfaceVrrpOutput values.
// You can construct a concrete instance of `InterfaceVrrpInput` via:
//
//	InterfaceVrrpArgs{...}
type InterfaceVrrpInput interface {
	pulumi.Input

	ToInterfaceVrrpOutput() InterfaceVrrpOutput
	ToInterfaceVrrpOutputWithContext(context.Context) InterfaceVrrpOutput
}

type InterfaceVrrpArgs struct {
	// Enable/disable accept mode. Valid values: `enable`, `disable`.
	AcceptMode pulumi.StringPtrInput `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval pulumi.IntPtrInput `pulumi:"advInterval"`
	// Enable/disable ignoring of default route when checking destination. Valid values: `enable`, `disable`.
	IgnoreDefaultRoute pulumi.StringPtrInput `pulumi:"ignoreDefaultRoute"`
	// Enable/disable preempt mode. Valid values: `enable`, `disable`.
	Preempt pulumi.StringPtrInput `pulumi:"preempt"`
	// Priority of the virtual router (1 - 255).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// VRRP Proxy ARP configuration. The structure of `proxyArp` block is documented below.
	ProxyArps InterfaceVrrpProxyArpArrayInput `pulumi:"proxyArps"`
	// Startup time (1 - 255 seconds).
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// Enable/disable this VRRP configuration. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// VRRP version. Valid values: `2`, `3`.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// Monitor the route to this destination.
	Vrdst pulumi.StringPtrInput `pulumi:"vrdst"`
	// Priority of the virtual router when the virtual router destination becomes unreachable (0 - 254).
	VrdstPriority pulumi.IntPtrInput `pulumi:"vrdstPriority"`
	// VRRP group ID (1 - 65535).
	Vrgrp pulumi.IntPtrInput `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid pulumi.IntPtrInput `pulumi:"vrid"`
	// IP address of the virtual router.
	Vrip pulumi.StringPtrInput `pulumi:"vrip"`
}

func (InterfaceVrrpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceVrrp)(nil)).Elem()
}

func (i InterfaceVrrpArgs) ToInterfaceVrrpOutput() InterfaceVrrpOutput {
	return i.ToInterfaceVrrpOutputWithContext(context.Background())
}

func (i InterfaceVrrpArgs) ToInterfaceVrrpOutputWithContext(ctx context.Context) InterfaceVrrpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceVrrpOutput)
}

// InterfaceVrrpArrayInput is an input type that accepts InterfaceVrrpArray and InterfaceVrrpArrayOutput values.
// You can construct a concrete instance of `InterfaceVrrpArrayInput` via:
//
//	InterfaceVrrpArray{ InterfaceVrrpArgs{...} }
type InterfaceVrrpArrayInput interface {
	pulumi.Input

	ToInterfaceVrrpArrayOutput() InterfaceVrrpArrayOutput
	ToInterfaceVrrpArrayOutputWithContext(context.Context) InterfaceVrrpArrayOutput
}

type InterfaceVrrpArray []InterfaceVrrpInput

func (InterfaceVrrpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceVrrp)(nil)).Elem()
}

func (i InterfaceVrrpArray) ToInterfaceVrrpArrayOutput() InterfaceVrrpArrayOutput {
	return i.ToInterfaceVrrpArrayOutputWithContext(context.Background())
}

func (i InterfaceVrrpArray) ToInterfaceVrrpArrayOutputWithContext(ctx context.Context) InterfaceVrrpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceVrrpArrayOutput)
}

type InterfaceVrrpOutput struct{ *pulumi.OutputState }

func (InterfaceVrrpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceVrrp)(nil)).Elem()
}

func (o InterfaceVrrpOutput) ToInterfaceVrrpOutput() InterfaceVrrpOutput {
	return o
}

func (o InterfaceVrrpOutput) ToInterfaceVrrpOutputWithContext(ctx context.Context) InterfaceVrrpOutput {
	return o
}

// Enable/disable accept mode. Valid values: `enable`, `disable`.
func (o InterfaceVrrpOutput) AcceptMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *string { return v.AcceptMode }).(pulumi.StringPtrOutput)
}

// Advertisement interval (1 - 255 seconds).
func (o InterfaceVrrpOutput) AdvInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *int { return v.AdvInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable ignoring of default route when checking destination. Valid values: `enable`, `disable`.
func (o InterfaceVrrpOutput) IgnoreDefaultRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *string { return v.IgnoreDefaultRoute }).(pulumi.StringPtrOutput)
}

// Enable/disable preempt mode. Valid values: `enable`, `disable`.
func (o InterfaceVrrpOutput) Preempt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *string { return v.Preempt }).(pulumi.StringPtrOutput)
}

// Priority of the virtual router (1 - 255).
func (o InterfaceVrrpOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// VRRP Proxy ARP configuration. The structure of `proxyArp` block is documented below.
func (o InterfaceVrrpOutput) ProxyArps() InterfaceVrrpProxyArpArrayOutput {
	return o.ApplyT(func(v InterfaceVrrp) []InterfaceVrrpProxyArp { return v.ProxyArps }).(InterfaceVrrpProxyArpArrayOutput)
}

// Startup time (1 - 255 seconds).
func (o InterfaceVrrpOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// Enable/disable this VRRP configuration. Valid values: `enable`, `disable`.
func (o InterfaceVrrpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// VRRP version. Valid values: `2`, `3`.
func (o InterfaceVrrpOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// Monitor the route to this destination.
func (o InterfaceVrrpOutput) Vrdst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *string { return v.Vrdst }).(pulumi.StringPtrOutput)
}

// Priority of the virtual router when the virtual router destination becomes unreachable (0 - 254).
func (o InterfaceVrrpOutput) VrdstPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *int { return v.VrdstPriority }).(pulumi.IntPtrOutput)
}

// VRRP group ID (1 - 65535).
func (o InterfaceVrrpOutput) Vrgrp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *int { return v.Vrgrp }).(pulumi.IntPtrOutput)
}

// Virtual router identifier (1 - 255).
func (o InterfaceVrrpOutput) Vrid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *int { return v.Vrid }).(pulumi.IntPtrOutput)
}

// IP address of the virtual router.
func (o InterfaceVrrpOutput) Vrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceVrrp) *string { return v.Vrip }).(pulumi.StringPtrOutput)
}

type InterfaceVrrpArrayOutput struct{ *pulumi.OutputState }

func (InterfaceVrrpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceVrrp)(nil)).Elem()
}

func (o InterfaceVrrpArrayOutput) ToInterfaceVrrpArrayOutput() InterfaceVrrpArrayOutput {
	return o
}

func (o InterfaceVrrpArrayOutput) ToInterfaceVrrpArrayOutputWithContext(ctx context.Context) InterfaceVrrpArrayOutput {
	return o
}

func (o InterfaceVrrpArrayOutput) Index(i pulumi.IntInput) InterfaceVrrpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceVrrp {
		return vs[0].([]InterfaceVrrp)[vs[1].(int)]
	}).(InterfaceVrrpOutput)
}

type InterfaceVrrpProxyArp struct {
	// ID.
	Id *int `pulumi:"id"`
	// Set IP addresses of proxy ARP.
	Ip *string `pulumi:"ip"`
}

// InterfaceVrrpProxyArpInput is an input type that accepts InterfaceVrrpProxyArpArgs and InterfaceVrrpProxyArpOutput values.
// You can construct a concrete instance of `InterfaceVrrpProxyArpInput` via:
//
//	InterfaceVrrpProxyArpArgs{...}
type InterfaceVrrpProxyArpInput interface {
	pulumi.Input

	ToInterfaceVrrpProxyArpOutput() InterfaceVrrpProxyArpOutput
	ToInterfaceVrrpProxyArpOutputWithContext(context.Context) InterfaceVrrpProxyArpOutput
}

type InterfaceVrrpProxyArpArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Set IP addresses of proxy ARP.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (InterfaceVrrpProxyArpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceVrrpProxyArp)(nil)).Elem()
}

func (i InterfaceVrrpProxyArpArgs) ToInterfaceVrrpProxyArpOutput() InterfaceVrrpProxyArpOutput {
	return i.ToInterfaceVrrpProxyArpOutputWithContext(context.Background())
}

func (i InterfaceVrrpProxyArpArgs) ToInterfaceVrrpProxyArpOutputWithContext(ctx context.Context) InterfaceVrrpProxyArpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceVrrpProxyArpOutput)
}

// InterfaceVrrpProxyArpArrayInput is an input type that accepts InterfaceVrrpProxyArpArray and InterfaceVrrpProxyArpArrayOutput values.
// You can construct a concrete instance of `InterfaceVrrpProxyArpArrayInput` via:
//
//	InterfaceVrrpProxyArpArray{ InterfaceVrrpProxyArpArgs{...} }
type InterfaceVrrpProxyArpArrayInput interface {
	pulumi.Input

	ToInterfaceVrrpProxyArpArrayOutput() InterfaceVrrpProxyArpArrayOutput
	ToInterfaceVrrpProxyArpArrayOutputWithContext(context.Context) InterfaceVrrpProxyArpArrayOutput
}

type InterfaceVrrpProxyArpArray []InterfaceVrrpProxyArpInput

func (InterfaceVrrpProxyArpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceVrrpProxyArp)(nil)).Elem()
}

func (i InterfaceVrrpProxyArpArray) ToInterfaceVrrpProxyArpArrayOutput() InterfaceVrrpProxyArpArrayOutput {
	return i.ToInterfaceVrrpProxyArpArrayOutputWithContext(context.Background())
}

func (i InterfaceVrrpProxyArpArray) ToInterfaceVrrpProxyArpArrayOutputWithContext(ctx context.Context) InterfaceVrrpProxyArpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceVrrpProxyArpArrayOutput)
}

type InterfaceVrrpProxyArpOutput struct{ *pulumi.OutputState }

func (InterfaceVrrpProxyArpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceVrrpProxyArp)(nil)).Elem()
}

func (o InterfaceVrrpProxyArpOutput) ToInterfaceVrrpProxyArpOutput() InterfaceVrrpProxyArpOutput {
	return o
}

func (o InterfaceVrrpProxyArpOutput) ToInterfaceVrrpProxyArpOutputWithContext(ctx context.Context) InterfaceVrrpProxyArpOutput {
	return o
}

// ID.
func (o InterfaceVrrpProxyArpOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InterfaceVrrpProxyArp) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Set IP addresses of proxy ARP.
func (o InterfaceVrrpProxyArpOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceVrrpProxyArp) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type InterfaceVrrpProxyArpArrayOutput struct{ *pulumi.OutputState }

func (InterfaceVrrpProxyArpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceVrrpProxyArp)(nil)).Elem()
}

func (o InterfaceVrrpProxyArpArrayOutput) ToInterfaceVrrpProxyArpArrayOutput() InterfaceVrrpProxyArpArrayOutput {
	return o
}

func (o InterfaceVrrpProxyArpArrayOutput) ToInterfaceVrrpProxyArpArrayOutputWithContext(ctx context.Context) InterfaceVrrpProxyArpArrayOutput {
	return o
}

func (o InterfaceVrrpProxyArpArrayOutput) Index(i pulumi.IntInput) InterfaceVrrpProxyArpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceVrrpProxyArp {
		return vs[0].([]InterfaceVrrpProxyArp)[vs[1].(int)]
	}).(InterfaceVrrpProxyArpOutput)
}

type IpamPool struct {
	// Description.
	Description *string `pulumi:"description"`
	// IPAM pool name.
	Name *string `pulumi:"name"`
	// Configure IPAM pool subnet, Class A - Class B subnet.
	Subnet *string `pulumi:"subnet"`
}

// IpamPoolInput is an input type that accepts IpamPoolArgs and IpamPoolOutput values.
// You can construct a concrete instance of `IpamPoolInput` via:
//
//	IpamPoolArgs{...}
type IpamPoolInput interface {
	pulumi.Input

	ToIpamPoolOutput() IpamPoolOutput
	ToIpamPoolOutputWithContext(context.Context) IpamPoolOutput
}

type IpamPoolArgs struct {
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IPAM pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configure IPAM pool subnet, Class A - Class B subnet.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (IpamPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamPool)(nil)).Elem()
}

func (i IpamPoolArgs) ToIpamPoolOutput() IpamPoolOutput {
	return i.ToIpamPoolOutputWithContext(context.Background())
}

func (i IpamPoolArgs) ToIpamPoolOutputWithContext(ctx context.Context) IpamPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamPoolOutput)
}

// IpamPoolArrayInput is an input type that accepts IpamPoolArray and IpamPoolArrayOutput values.
// You can construct a concrete instance of `IpamPoolArrayInput` via:
//
//	IpamPoolArray{ IpamPoolArgs{...} }
type IpamPoolArrayInput interface {
	pulumi.Input

	ToIpamPoolArrayOutput() IpamPoolArrayOutput
	ToIpamPoolArrayOutputWithContext(context.Context) IpamPoolArrayOutput
}

type IpamPoolArray []IpamPoolInput

func (IpamPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamPool)(nil)).Elem()
}

func (i IpamPoolArray) ToIpamPoolArrayOutput() IpamPoolArrayOutput {
	return i.ToIpamPoolArrayOutputWithContext(context.Background())
}

func (i IpamPoolArray) ToIpamPoolArrayOutputWithContext(ctx context.Context) IpamPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamPoolArrayOutput)
}

type IpamPoolOutput struct{ *pulumi.OutputState }

func (IpamPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamPool)(nil)).Elem()
}

func (o IpamPoolOutput) ToIpamPoolOutput() IpamPoolOutput {
	return o
}

func (o IpamPoolOutput) ToIpamPoolOutputWithContext(ctx context.Context) IpamPoolOutput {
	return o
}

// Description.
func (o IpamPoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamPool) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IPAM pool name.
func (o IpamPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configure IPAM pool subnet, Class A - Class B subnet.
func (o IpamPoolOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamPool) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type IpamPoolArrayOutput struct{ *pulumi.OutputState }

func (IpamPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamPool)(nil)).Elem()
}

func (o IpamPoolArrayOutput) ToIpamPoolArrayOutput() IpamPoolArrayOutput {
	return o
}

func (o IpamPoolArrayOutput) ToIpamPoolArrayOutputWithContext(ctx context.Context) IpamPoolArrayOutput {
	return o
}

func (o IpamPoolArrayOutput) Index(i pulumi.IntInput) IpamPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpamPool {
		return vs[0].([]IpamPool)[vs[1].(int)]
	}).(IpamPoolOutput)
}

type IpamRule struct {
	// Description.
	Description *string `pulumi:"description"`
	// Configure serial number or wildcard of Fortigate to match. The structure of `device` block is documented below.
	Devices []IpamRuleDevice `pulumi:"devices"`
	// Enable/disable DHCP server for matching IPAM interfaces. Valid values: `enable`, `disable`.
	Dhcp *string `pulumi:"dhcp"`
	// Configure name or wildcard of interface to match. The structure of `interface` block is documented below.
	Interfaces []IpamRuleInterface `pulumi:"interfaces"`
	// IPAM rule name.
	Name *string `pulumi:"name"`
	// Configure name of IPAM pool to use. The structure of `pool` block is documented below.
	Pools []IpamRulePool `pulumi:"pools"`
	// Configure role of interface to match. Valid values: `any`, `lan`, `wan`, `dmz`, `undefined`.
	Role *string `pulumi:"role"`
}

// IpamRuleInput is an input type that accepts IpamRuleArgs and IpamRuleOutput values.
// You can construct a concrete instance of `IpamRuleInput` via:
//
//	IpamRuleArgs{...}
type IpamRuleInput interface {
	pulumi.Input

	ToIpamRuleOutput() IpamRuleOutput
	ToIpamRuleOutputWithContext(context.Context) IpamRuleOutput
}

type IpamRuleArgs struct {
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Configure serial number or wildcard of Fortigate to match. The structure of `device` block is documented below.
	Devices IpamRuleDeviceArrayInput `pulumi:"devices"`
	// Enable/disable DHCP server for matching IPAM interfaces. Valid values: `enable`, `disable`.
	Dhcp pulumi.StringPtrInput `pulumi:"dhcp"`
	// Configure name or wildcard of interface to match. The structure of `interface` block is documented below.
	Interfaces IpamRuleInterfaceArrayInput `pulumi:"interfaces"`
	// IPAM rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configure name of IPAM pool to use. The structure of `pool` block is documented below.
	Pools IpamRulePoolArrayInput `pulumi:"pools"`
	// Configure role of interface to match. Valid values: `any`, `lan`, `wan`, `dmz`, `undefined`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (IpamRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamRule)(nil)).Elem()
}

func (i IpamRuleArgs) ToIpamRuleOutput() IpamRuleOutput {
	return i.ToIpamRuleOutputWithContext(context.Background())
}

func (i IpamRuleArgs) ToIpamRuleOutputWithContext(ctx context.Context) IpamRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamRuleOutput)
}

// IpamRuleArrayInput is an input type that accepts IpamRuleArray and IpamRuleArrayOutput values.
// You can construct a concrete instance of `IpamRuleArrayInput` via:
//
//	IpamRuleArray{ IpamRuleArgs{...} }
type IpamRuleArrayInput interface {
	pulumi.Input

	ToIpamRuleArrayOutput() IpamRuleArrayOutput
	ToIpamRuleArrayOutputWithContext(context.Context) IpamRuleArrayOutput
}

type IpamRuleArray []IpamRuleInput

func (IpamRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamRule)(nil)).Elem()
}

func (i IpamRuleArray) ToIpamRuleArrayOutput() IpamRuleArrayOutput {
	return i.ToIpamRuleArrayOutputWithContext(context.Background())
}

func (i IpamRuleArray) ToIpamRuleArrayOutputWithContext(ctx context.Context) IpamRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamRuleArrayOutput)
}

type IpamRuleOutput struct{ *pulumi.OutputState }

func (IpamRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamRule)(nil)).Elem()
}

func (o IpamRuleOutput) ToIpamRuleOutput() IpamRuleOutput {
	return o
}

func (o IpamRuleOutput) ToIpamRuleOutputWithContext(ctx context.Context) IpamRuleOutput {
	return o
}

// Description.
func (o IpamRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Configure serial number or wildcard of Fortigate to match. The structure of `device` block is documented below.
func (o IpamRuleOutput) Devices() IpamRuleDeviceArrayOutput {
	return o.ApplyT(func(v IpamRule) []IpamRuleDevice { return v.Devices }).(IpamRuleDeviceArrayOutput)
}

// Enable/disable DHCP server for matching IPAM interfaces. Valid values: `enable`, `disable`.
func (o IpamRuleOutput) Dhcp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamRule) *string { return v.Dhcp }).(pulumi.StringPtrOutput)
}

// Configure name or wildcard of interface to match. The structure of `interface` block is documented below.
func (o IpamRuleOutput) Interfaces() IpamRuleInterfaceArrayOutput {
	return o.ApplyT(func(v IpamRule) []IpamRuleInterface { return v.Interfaces }).(IpamRuleInterfaceArrayOutput)
}

// IPAM rule name.
func (o IpamRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configure name of IPAM pool to use. The structure of `pool` block is documented below.
func (o IpamRuleOutput) Pools() IpamRulePoolArrayOutput {
	return o.ApplyT(func(v IpamRule) []IpamRulePool { return v.Pools }).(IpamRulePoolArrayOutput)
}

// Configure role of interface to match. Valid values: `any`, `lan`, `wan`, `dmz`, `undefined`.
func (o IpamRuleOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamRule) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type IpamRuleArrayOutput struct{ *pulumi.OutputState }

func (IpamRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamRule)(nil)).Elem()
}

func (o IpamRuleArrayOutput) ToIpamRuleArrayOutput() IpamRuleArrayOutput {
	return o
}

func (o IpamRuleArrayOutput) ToIpamRuleArrayOutputWithContext(ctx context.Context) IpamRuleArrayOutput {
	return o
}

func (o IpamRuleArrayOutput) Index(i pulumi.IntInput) IpamRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpamRule {
		return vs[0].([]IpamRule)[vs[1].(int)]
	}).(IpamRuleOutput)
}

type IpamRuleDevice struct {
	// Fortigate serial number or wildcard.
	Name *string `pulumi:"name"`
}

// IpamRuleDeviceInput is an input type that accepts IpamRuleDeviceArgs and IpamRuleDeviceOutput values.
// You can construct a concrete instance of `IpamRuleDeviceInput` via:
//
//	IpamRuleDeviceArgs{...}
type IpamRuleDeviceInput interface {
	pulumi.Input

	ToIpamRuleDeviceOutput() IpamRuleDeviceOutput
	ToIpamRuleDeviceOutputWithContext(context.Context) IpamRuleDeviceOutput
}

type IpamRuleDeviceArgs struct {
	// Fortigate serial number or wildcard.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IpamRuleDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamRuleDevice)(nil)).Elem()
}

func (i IpamRuleDeviceArgs) ToIpamRuleDeviceOutput() IpamRuleDeviceOutput {
	return i.ToIpamRuleDeviceOutputWithContext(context.Background())
}

func (i IpamRuleDeviceArgs) ToIpamRuleDeviceOutputWithContext(ctx context.Context) IpamRuleDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamRuleDeviceOutput)
}

// IpamRuleDeviceArrayInput is an input type that accepts IpamRuleDeviceArray and IpamRuleDeviceArrayOutput values.
// You can construct a concrete instance of `IpamRuleDeviceArrayInput` via:
//
//	IpamRuleDeviceArray{ IpamRuleDeviceArgs{...} }
type IpamRuleDeviceArrayInput interface {
	pulumi.Input

	ToIpamRuleDeviceArrayOutput() IpamRuleDeviceArrayOutput
	ToIpamRuleDeviceArrayOutputWithContext(context.Context) IpamRuleDeviceArrayOutput
}

type IpamRuleDeviceArray []IpamRuleDeviceInput

func (IpamRuleDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamRuleDevice)(nil)).Elem()
}

func (i IpamRuleDeviceArray) ToIpamRuleDeviceArrayOutput() IpamRuleDeviceArrayOutput {
	return i.ToIpamRuleDeviceArrayOutputWithContext(context.Background())
}

func (i IpamRuleDeviceArray) ToIpamRuleDeviceArrayOutputWithContext(ctx context.Context) IpamRuleDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamRuleDeviceArrayOutput)
}

type IpamRuleDeviceOutput struct{ *pulumi.OutputState }

func (IpamRuleDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamRuleDevice)(nil)).Elem()
}

func (o IpamRuleDeviceOutput) ToIpamRuleDeviceOutput() IpamRuleDeviceOutput {
	return o
}

func (o IpamRuleDeviceOutput) ToIpamRuleDeviceOutputWithContext(ctx context.Context) IpamRuleDeviceOutput {
	return o
}

// Fortigate serial number or wildcard.
func (o IpamRuleDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamRuleDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IpamRuleDeviceArrayOutput struct{ *pulumi.OutputState }

func (IpamRuleDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamRuleDevice)(nil)).Elem()
}

func (o IpamRuleDeviceArrayOutput) ToIpamRuleDeviceArrayOutput() IpamRuleDeviceArrayOutput {
	return o
}

func (o IpamRuleDeviceArrayOutput) ToIpamRuleDeviceArrayOutputWithContext(ctx context.Context) IpamRuleDeviceArrayOutput {
	return o
}

func (o IpamRuleDeviceArrayOutput) Index(i pulumi.IntInput) IpamRuleDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpamRuleDevice {
		return vs[0].([]IpamRuleDevice)[vs[1].(int)]
	}).(IpamRuleDeviceOutput)
}

type IpamRuleInterface struct {
	// Interface name or wildcard.
	Name *string `pulumi:"name"`
}

// IpamRuleInterfaceInput is an input type that accepts IpamRuleInterfaceArgs and IpamRuleInterfaceOutput values.
// You can construct a concrete instance of `IpamRuleInterfaceInput` via:
//
//	IpamRuleInterfaceArgs{...}
type IpamRuleInterfaceInput interface {
	pulumi.Input

	ToIpamRuleInterfaceOutput() IpamRuleInterfaceOutput
	ToIpamRuleInterfaceOutputWithContext(context.Context) IpamRuleInterfaceOutput
}

type IpamRuleInterfaceArgs struct {
	// Interface name or wildcard.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IpamRuleInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamRuleInterface)(nil)).Elem()
}

func (i IpamRuleInterfaceArgs) ToIpamRuleInterfaceOutput() IpamRuleInterfaceOutput {
	return i.ToIpamRuleInterfaceOutputWithContext(context.Background())
}

func (i IpamRuleInterfaceArgs) ToIpamRuleInterfaceOutputWithContext(ctx context.Context) IpamRuleInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamRuleInterfaceOutput)
}

// IpamRuleInterfaceArrayInput is an input type that accepts IpamRuleInterfaceArray and IpamRuleInterfaceArrayOutput values.
// You can construct a concrete instance of `IpamRuleInterfaceArrayInput` via:
//
//	IpamRuleInterfaceArray{ IpamRuleInterfaceArgs{...} }
type IpamRuleInterfaceArrayInput interface {
	pulumi.Input

	ToIpamRuleInterfaceArrayOutput() IpamRuleInterfaceArrayOutput
	ToIpamRuleInterfaceArrayOutputWithContext(context.Context) IpamRuleInterfaceArrayOutput
}

type IpamRuleInterfaceArray []IpamRuleInterfaceInput

func (IpamRuleInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamRuleInterface)(nil)).Elem()
}

func (i IpamRuleInterfaceArray) ToIpamRuleInterfaceArrayOutput() IpamRuleInterfaceArrayOutput {
	return i.ToIpamRuleInterfaceArrayOutputWithContext(context.Background())
}

func (i IpamRuleInterfaceArray) ToIpamRuleInterfaceArrayOutputWithContext(ctx context.Context) IpamRuleInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamRuleInterfaceArrayOutput)
}

type IpamRuleInterfaceOutput struct{ *pulumi.OutputState }

func (IpamRuleInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamRuleInterface)(nil)).Elem()
}

func (o IpamRuleInterfaceOutput) ToIpamRuleInterfaceOutput() IpamRuleInterfaceOutput {
	return o
}

func (o IpamRuleInterfaceOutput) ToIpamRuleInterfaceOutputWithContext(ctx context.Context) IpamRuleInterfaceOutput {
	return o
}

// Interface name or wildcard.
func (o IpamRuleInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamRuleInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IpamRuleInterfaceArrayOutput struct{ *pulumi.OutputState }

func (IpamRuleInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamRuleInterface)(nil)).Elem()
}

func (o IpamRuleInterfaceArrayOutput) ToIpamRuleInterfaceArrayOutput() IpamRuleInterfaceArrayOutput {
	return o
}

func (o IpamRuleInterfaceArrayOutput) ToIpamRuleInterfaceArrayOutputWithContext(ctx context.Context) IpamRuleInterfaceArrayOutput {
	return o
}

func (o IpamRuleInterfaceArrayOutput) Index(i pulumi.IntInput) IpamRuleInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpamRuleInterface {
		return vs[0].([]IpamRuleInterface)[vs[1].(int)]
	}).(IpamRuleInterfaceOutput)
}

type IpamRulePool struct {
	// Ipam pool name.
	Name *string `pulumi:"name"`
}

// IpamRulePoolInput is an input type that accepts IpamRulePoolArgs and IpamRulePoolOutput values.
// You can construct a concrete instance of `IpamRulePoolInput` via:
//
//	IpamRulePoolArgs{...}
type IpamRulePoolInput interface {
	pulumi.Input

	ToIpamRulePoolOutput() IpamRulePoolOutput
	ToIpamRulePoolOutputWithContext(context.Context) IpamRulePoolOutput
}

type IpamRulePoolArgs struct {
	// Ipam pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IpamRulePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamRulePool)(nil)).Elem()
}

func (i IpamRulePoolArgs) ToIpamRulePoolOutput() IpamRulePoolOutput {
	return i.ToIpamRulePoolOutputWithContext(context.Background())
}

func (i IpamRulePoolArgs) ToIpamRulePoolOutputWithContext(ctx context.Context) IpamRulePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamRulePoolOutput)
}

// IpamRulePoolArrayInput is an input type that accepts IpamRulePoolArray and IpamRulePoolArrayOutput values.
// You can construct a concrete instance of `IpamRulePoolArrayInput` via:
//
//	IpamRulePoolArray{ IpamRulePoolArgs{...} }
type IpamRulePoolArrayInput interface {
	pulumi.Input

	ToIpamRulePoolArrayOutput() IpamRulePoolArrayOutput
	ToIpamRulePoolArrayOutputWithContext(context.Context) IpamRulePoolArrayOutput
}

type IpamRulePoolArray []IpamRulePoolInput

func (IpamRulePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamRulePool)(nil)).Elem()
}

func (i IpamRulePoolArray) ToIpamRulePoolArrayOutput() IpamRulePoolArrayOutput {
	return i.ToIpamRulePoolArrayOutputWithContext(context.Background())
}

func (i IpamRulePoolArray) ToIpamRulePoolArrayOutputWithContext(ctx context.Context) IpamRulePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamRulePoolArrayOutput)
}

type IpamRulePoolOutput struct{ *pulumi.OutputState }

func (IpamRulePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamRulePool)(nil)).Elem()
}

func (o IpamRulePoolOutput) ToIpamRulePoolOutput() IpamRulePoolOutput {
	return o
}

func (o IpamRulePoolOutput) ToIpamRulePoolOutputWithContext(ctx context.Context) IpamRulePoolOutput {
	return o
}

// Ipam pool name.
func (o IpamRulePoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamRulePool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IpamRulePoolArrayOutput struct{ *pulumi.OutputState }

func (IpamRulePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamRulePool)(nil)).Elem()
}

func (o IpamRulePoolArrayOutput) ToIpamRulePoolArrayOutput() IpamRulePoolArrayOutput {
	return o
}

func (o IpamRulePoolArrayOutput) ToIpamRulePoolArrayOutputWithContext(ctx context.Context) IpamRulePoolArrayOutput {
	return o
}

func (o IpamRulePoolArrayOutput) Index(i pulumi.IntInput) IpamRulePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpamRulePool {
		return vs[0].([]IpamRulePool)[vs[1].(int)]
	}).(IpamRulePoolOutput)
}

type IpsecaggregateMember struct {
	// Tunnel name.
	TunnelName *string `pulumi:"tunnelName"`
}

// IpsecaggregateMemberInput is an input type that accepts IpsecaggregateMemberArgs and IpsecaggregateMemberOutput values.
// You can construct a concrete instance of `IpsecaggregateMemberInput` via:
//
//	IpsecaggregateMemberArgs{...}
type IpsecaggregateMemberInput interface {
	pulumi.Input

	ToIpsecaggregateMemberOutput() IpsecaggregateMemberOutput
	ToIpsecaggregateMemberOutputWithContext(context.Context) IpsecaggregateMemberOutput
}

type IpsecaggregateMemberArgs struct {
	// Tunnel name.
	TunnelName pulumi.StringPtrInput `pulumi:"tunnelName"`
}

func (IpsecaggregateMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecaggregateMember)(nil)).Elem()
}

func (i IpsecaggregateMemberArgs) ToIpsecaggregateMemberOutput() IpsecaggregateMemberOutput {
	return i.ToIpsecaggregateMemberOutputWithContext(context.Background())
}

func (i IpsecaggregateMemberArgs) ToIpsecaggregateMemberOutputWithContext(ctx context.Context) IpsecaggregateMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecaggregateMemberOutput)
}

// IpsecaggregateMemberArrayInput is an input type that accepts IpsecaggregateMemberArray and IpsecaggregateMemberArrayOutput values.
// You can construct a concrete instance of `IpsecaggregateMemberArrayInput` via:
//
//	IpsecaggregateMemberArray{ IpsecaggregateMemberArgs{...} }
type IpsecaggregateMemberArrayInput interface {
	pulumi.Input

	ToIpsecaggregateMemberArrayOutput() IpsecaggregateMemberArrayOutput
	ToIpsecaggregateMemberArrayOutputWithContext(context.Context) IpsecaggregateMemberArrayOutput
}

type IpsecaggregateMemberArray []IpsecaggregateMemberInput

func (IpsecaggregateMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecaggregateMember)(nil)).Elem()
}

func (i IpsecaggregateMemberArray) ToIpsecaggregateMemberArrayOutput() IpsecaggregateMemberArrayOutput {
	return i.ToIpsecaggregateMemberArrayOutputWithContext(context.Background())
}

func (i IpsecaggregateMemberArray) ToIpsecaggregateMemberArrayOutputWithContext(ctx context.Context) IpsecaggregateMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecaggregateMemberArrayOutput)
}

type IpsecaggregateMemberOutput struct{ *pulumi.OutputState }

func (IpsecaggregateMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecaggregateMember)(nil)).Elem()
}

func (o IpsecaggregateMemberOutput) ToIpsecaggregateMemberOutput() IpsecaggregateMemberOutput {
	return o
}

func (o IpsecaggregateMemberOutput) ToIpsecaggregateMemberOutputWithContext(ctx context.Context) IpsecaggregateMemberOutput {
	return o
}

// Tunnel name.
func (o IpsecaggregateMemberOutput) TunnelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecaggregateMember) *string { return v.TunnelName }).(pulumi.StringPtrOutput)
}

type IpsecaggregateMemberArrayOutput struct{ *pulumi.OutputState }

func (IpsecaggregateMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecaggregateMember)(nil)).Elem()
}

func (o IpsecaggregateMemberArrayOutput) ToIpsecaggregateMemberArrayOutput() IpsecaggregateMemberArrayOutput {
	return o
}

func (o IpsecaggregateMemberArrayOutput) ToIpsecaggregateMemberArrayOutputWithContext(ctx context.Context) IpsecaggregateMemberArrayOutput {
	return o
}

func (o IpsecaggregateMemberArrayOutput) Index(i pulumi.IntInput) IpsecaggregateMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecaggregateMember {
		return vs[0].([]IpsecaggregateMember)[vs[1].(int)]
	}).(IpsecaggregateMemberOutput)
}

type LinkmonitorRoute struct {
	// IP and netmask (x.x.x.x/y).
	Subnet *string `pulumi:"subnet"`
}

// LinkmonitorRouteInput is an input type that accepts LinkmonitorRouteArgs and LinkmonitorRouteOutput values.
// You can construct a concrete instance of `LinkmonitorRouteInput` via:
//
//	LinkmonitorRouteArgs{...}
type LinkmonitorRouteInput interface {
	pulumi.Input

	ToLinkmonitorRouteOutput() LinkmonitorRouteOutput
	ToLinkmonitorRouteOutputWithContext(context.Context) LinkmonitorRouteOutput
}

type LinkmonitorRouteArgs struct {
	// IP and netmask (x.x.x.x/y).
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (LinkmonitorRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkmonitorRoute)(nil)).Elem()
}

func (i LinkmonitorRouteArgs) ToLinkmonitorRouteOutput() LinkmonitorRouteOutput {
	return i.ToLinkmonitorRouteOutputWithContext(context.Background())
}

func (i LinkmonitorRouteArgs) ToLinkmonitorRouteOutputWithContext(ctx context.Context) LinkmonitorRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkmonitorRouteOutput)
}

// LinkmonitorRouteArrayInput is an input type that accepts LinkmonitorRouteArray and LinkmonitorRouteArrayOutput values.
// You can construct a concrete instance of `LinkmonitorRouteArrayInput` via:
//
//	LinkmonitorRouteArray{ LinkmonitorRouteArgs{...} }
type LinkmonitorRouteArrayInput interface {
	pulumi.Input

	ToLinkmonitorRouteArrayOutput() LinkmonitorRouteArrayOutput
	ToLinkmonitorRouteArrayOutputWithContext(context.Context) LinkmonitorRouteArrayOutput
}

type LinkmonitorRouteArray []LinkmonitorRouteInput

func (LinkmonitorRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkmonitorRoute)(nil)).Elem()
}

func (i LinkmonitorRouteArray) ToLinkmonitorRouteArrayOutput() LinkmonitorRouteArrayOutput {
	return i.ToLinkmonitorRouteArrayOutputWithContext(context.Background())
}

func (i LinkmonitorRouteArray) ToLinkmonitorRouteArrayOutputWithContext(ctx context.Context) LinkmonitorRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkmonitorRouteArrayOutput)
}

type LinkmonitorRouteOutput struct{ *pulumi.OutputState }

func (LinkmonitorRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkmonitorRoute)(nil)).Elem()
}

func (o LinkmonitorRouteOutput) ToLinkmonitorRouteOutput() LinkmonitorRouteOutput {
	return o
}

func (o LinkmonitorRouteOutput) ToLinkmonitorRouteOutputWithContext(ctx context.Context) LinkmonitorRouteOutput {
	return o
}

// IP and netmask (x.x.x.x/y).
func (o LinkmonitorRouteOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkmonitorRoute) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type LinkmonitorRouteArrayOutput struct{ *pulumi.OutputState }

func (LinkmonitorRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkmonitorRoute)(nil)).Elem()
}

func (o LinkmonitorRouteArrayOutput) ToLinkmonitorRouteArrayOutput() LinkmonitorRouteArrayOutput {
	return o
}

func (o LinkmonitorRouteArrayOutput) ToLinkmonitorRouteArrayOutputWithContext(ctx context.Context) LinkmonitorRouteArrayOutput {
	return o
}

func (o LinkmonitorRouteArrayOutput) Index(i pulumi.IntInput) LinkmonitorRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkmonitorRoute {
		return vs[0].([]LinkmonitorRoute)[vs[1].(int)]
	}).(LinkmonitorRouteOutput)
}

type LinkmonitorServer struct {
	// Server address.
	Address *string `pulumi:"address"`
}

// LinkmonitorServerInput is an input type that accepts LinkmonitorServerArgs and LinkmonitorServerOutput values.
// You can construct a concrete instance of `LinkmonitorServerInput` via:
//
//	LinkmonitorServerArgs{...}
type LinkmonitorServerInput interface {
	pulumi.Input

	ToLinkmonitorServerOutput() LinkmonitorServerOutput
	ToLinkmonitorServerOutputWithContext(context.Context) LinkmonitorServerOutput
}

type LinkmonitorServerArgs struct {
	// Server address.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (LinkmonitorServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkmonitorServer)(nil)).Elem()
}

func (i LinkmonitorServerArgs) ToLinkmonitorServerOutput() LinkmonitorServerOutput {
	return i.ToLinkmonitorServerOutputWithContext(context.Background())
}

func (i LinkmonitorServerArgs) ToLinkmonitorServerOutputWithContext(ctx context.Context) LinkmonitorServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkmonitorServerOutput)
}

// LinkmonitorServerArrayInput is an input type that accepts LinkmonitorServerArray and LinkmonitorServerArrayOutput values.
// You can construct a concrete instance of `LinkmonitorServerArrayInput` via:
//
//	LinkmonitorServerArray{ LinkmonitorServerArgs{...} }
type LinkmonitorServerArrayInput interface {
	pulumi.Input

	ToLinkmonitorServerArrayOutput() LinkmonitorServerArrayOutput
	ToLinkmonitorServerArrayOutputWithContext(context.Context) LinkmonitorServerArrayOutput
}

type LinkmonitorServerArray []LinkmonitorServerInput

func (LinkmonitorServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkmonitorServer)(nil)).Elem()
}

func (i LinkmonitorServerArray) ToLinkmonitorServerArrayOutput() LinkmonitorServerArrayOutput {
	return i.ToLinkmonitorServerArrayOutputWithContext(context.Background())
}

func (i LinkmonitorServerArray) ToLinkmonitorServerArrayOutputWithContext(ctx context.Context) LinkmonitorServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkmonitorServerArrayOutput)
}

type LinkmonitorServerOutput struct{ *pulumi.OutputState }

func (LinkmonitorServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkmonitorServer)(nil)).Elem()
}

func (o LinkmonitorServerOutput) ToLinkmonitorServerOutput() LinkmonitorServerOutput {
	return o
}

func (o LinkmonitorServerOutput) ToLinkmonitorServerOutputWithContext(ctx context.Context) LinkmonitorServerOutput {
	return o
}

// Server address.
func (o LinkmonitorServerOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkmonitorServer) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type LinkmonitorServerArrayOutput struct{ *pulumi.OutputState }

func (LinkmonitorServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkmonitorServer)(nil)).Elem()
}

func (o LinkmonitorServerArrayOutput) ToLinkmonitorServerArrayOutput() LinkmonitorServerArrayOutput {
	return o
}

func (o LinkmonitorServerArrayOutput) ToLinkmonitorServerArrayOutputWithContext(ctx context.Context) LinkmonitorServerArrayOutput {
	return o
}

func (o LinkmonitorServerArrayOutput) Index(i pulumi.IntInput) LinkmonitorServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkmonitorServer {
		return vs[0].([]LinkmonitorServer)[vs[1].(int)]
	}).(LinkmonitorServerOutput)
}

type LinkmonitorServerList struct {
	// IP address of the server to be monitored.
	Dst *string `pulumi:"dst"`
	// Server ID.
	Id *int `pulumi:"id"`
	// Port number of the traffic to be used to monitor the server.
	Port *int `pulumi:"port"`
	// Protocols used to monitor the server.
	Protocol *string `pulumi:"protocol"`
	// Weight of the monitor to this dst (0 - 255).
	Weight *int `pulumi:"weight"`
}

// LinkmonitorServerListInput is an input type that accepts LinkmonitorServerListArgs and LinkmonitorServerListOutput values.
// You can construct a concrete instance of `LinkmonitorServerListInput` via:
//
//	LinkmonitorServerListArgs{...}
type LinkmonitorServerListInput interface {
	pulumi.Input

	ToLinkmonitorServerListOutput() LinkmonitorServerListOutput
	ToLinkmonitorServerListOutputWithContext(context.Context) LinkmonitorServerListOutput
}

type LinkmonitorServerListArgs struct {
	// IP address of the server to be monitored.
	Dst pulumi.StringPtrInput `pulumi:"dst"`
	// Server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Port number of the traffic to be used to monitor the server.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocols used to monitor the server.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Weight of the monitor to this dst (0 - 255).
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (LinkmonitorServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkmonitorServerList)(nil)).Elem()
}

func (i LinkmonitorServerListArgs) ToLinkmonitorServerListOutput() LinkmonitorServerListOutput {
	return i.ToLinkmonitorServerListOutputWithContext(context.Background())
}

func (i LinkmonitorServerListArgs) ToLinkmonitorServerListOutputWithContext(ctx context.Context) LinkmonitorServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkmonitorServerListOutput)
}

// LinkmonitorServerListArrayInput is an input type that accepts LinkmonitorServerListArray and LinkmonitorServerListArrayOutput values.
// You can construct a concrete instance of `LinkmonitorServerListArrayInput` via:
//
//	LinkmonitorServerListArray{ LinkmonitorServerListArgs{...} }
type LinkmonitorServerListArrayInput interface {
	pulumi.Input

	ToLinkmonitorServerListArrayOutput() LinkmonitorServerListArrayOutput
	ToLinkmonitorServerListArrayOutputWithContext(context.Context) LinkmonitorServerListArrayOutput
}

type LinkmonitorServerListArray []LinkmonitorServerListInput

func (LinkmonitorServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkmonitorServerList)(nil)).Elem()
}

func (i LinkmonitorServerListArray) ToLinkmonitorServerListArrayOutput() LinkmonitorServerListArrayOutput {
	return i.ToLinkmonitorServerListArrayOutputWithContext(context.Background())
}

func (i LinkmonitorServerListArray) ToLinkmonitorServerListArrayOutputWithContext(ctx context.Context) LinkmonitorServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkmonitorServerListArrayOutput)
}

type LinkmonitorServerListOutput struct{ *pulumi.OutputState }

func (LinkmonitorServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkmonitorServerList)(nil)).Elem()
}

func (o LinkmonitorServerListOutput) ToLinkmonitorServerListOutput() LinkmonitorServerListOutput {
	return o
}

func (o LinkmonitorServerListOutput) ToLinkmonitorServerListOutputWithContext(ctx context.Context) LinkmonitorServerListOutput {
	return o
}

// IP address of the server to be monitored.
func (o LinkmonitorServerListOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkmonitorServerList) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

// Server ID.
func (o LinkmonitorServerListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinkmonitorServerList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Port number of the traffic to be used to monitor the server.
func (o LinkmonitorServerListOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinkmonitorServerList) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocols used to monitor the server.
func (o LinkmonitorServerListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkmonitorServerList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Weight of the monitor to this dst (0 - 255).
func (o LinkmonitorServerListOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinkmonitorServerList) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type LinkmonitorServerListArrayOutput struct{ *pulumi.OutputState }

func (LinkmonitorServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkmonitorServerList)(nil)).Elem()
}

func (o LinkmonitorServerListArrayOutput) ToLinkmonitorServerListArrayOutput() LinkmonitorServerListArrayOutput {
	return o
}

func (o LinkmonitorServerListArrayOutput) ToLinkmonitorServerListArrayOutputWithContext(ctx context.Context) LinkmonitorServerListArrayOutput {
	return o
}

func (o LinkmonitorServerListArrayOutput) Index(i pulumi.IntInput) LinkmonitorServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkmonitorServerList {
		return vs[0].([]LinkmonitorServerList)[vs[1].(int)]
	}).(LinkmonitorServerListOutput)
}

type MobiletunnelNetwork struct {
	// Network entry ID.
	Id *int `pulumi:"id"`
	// Select the associated interface name from available options.
	Interface *string `pulumi:"interface"`
	// Class IP and Netmask with correction (Format:xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx or xxx.xxx.xxx.xxx/x).
	Prefix *string `pulumi:"prefix"`
}

// MobiletunnelNetworkInput is an input type that accepts MobiletunnelNetworkArgs and MobiletunnelNetworkOutput values.
// You can construct a concrete instance of `MobiletunnelNetworkInput` via:
//
//	MobiletunnelNetworkArgs{...}
type MobiletunnelNetworkInput interface {
	pulumi.Input

	ToMobiletunnelNetworkOutput() MobiletunnelNetworkOutput
	ToMobiletunnelNetworkOutputWithContext(context.Context) MobiletunnelNetworkOutput
}

type MobiletunnelNetworkArgs struct {
	// Network entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Select the associated interface name from available options.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Class IP and Netmask with correction (Format:xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx or xxx.xxx.xxx.xxx/x).
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (MobiletunnelNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MobiletunnelNetwork)(nil)).Elem()
}

func (i MobiletunnelNetworkArgs) ToMobiletunnelNetworkOutput() MobiletunnelNetworkOutput {
	return i.ToMobiletunnelNetworkOutputWithContext(context.Background())
}

func (i MobiletunnelNetworkArgs) ToMobiletunnelNetworkOutputWithContext(ctx context.Context) MobiletunnelNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobiletunnelNetworkOutput)
}

// MobiletunnelNetworkArrayInput is an input type that accepts MobiletunnelNetworkArray and MobiletunnelNetworkArrayOutput values.
// You can construct a concrete instance of `MobiletunnelNetworkArrayInput` via:
//
//	MobiletunnelNetworkArray{ MobiletunnelNetworkArgs{...} }
type MobiletunnelNetworkArrayInput interface {
	pulumi.Input

	ToMobiletunnelNetworkArrayOutput() MobiletunnelNetworkArrayOutput
	ToMobiletunnelNetworkArrayOutputWithContext(context.Context) MobiletunnelNetworkArrayOutput
}

type MobiletunnelNetworkArray []MobiletunnelNetworkInput

func (MobiletunnelNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobiletunnelNetwork)(nil)).Elem()
}

func (i MobiletunnelNetworkArray) ToMobiletunnelNetworkArrayOutput() MobiletunnelNetworkArrayOutput {
	return i.ToMobiletunnelNetworkArrayOutputWithContext(context.Background())
}

func (i MobiletunnelNetworkArray) ToMobiletunnelNetworkArrayOutputWithContext(ctx context.Context) MobiletunnelNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobiletunnelNetworkArrayOutput)
}

type MobiletunnelNetworkOutput struct{ *pulumi.OutputState }

func (MobiletunnelNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobiletunnelNetwork)(nil)).Elem()
}

func (o MobiletunnelNetworkOutput) ToMobiletunnelNetworkOutput() MobiletunnelNetworkOutput {
	return o
}

func (o MobiletunnelNetworkOutput) ToMobiletunnelNetworkOutputWithContext(ctx context.Context) MobiletunnelNetworkOutput {
	return o
}

// Network entry ID.
func (o MobiletunnelNetworkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MobiletunnelNetwork) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Select the associated interface name from available options.
func (o MobiletunnelNetworkOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobiletunnelNetwork) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Class IP and Netmask with correction (Format:xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx or xxx.xxx.xxx.xxx/x).
func (o MobiletunnelNetworkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobiletunnelNetwork) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type MobiletunnelNetworkArrayOutput struct{ *pulumi.OutputState }

func (MobiletunnelNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobiletunnelNetwork)(nil)).Elem()
}

func (o MobiletunnelNetworkArrayOutput) ToMobiletunnelNetworkArrayOutput() MobiletunnelNetworkArrayOutput {
	return o
}

func (o MobiletunnelNetworkArrayOutput) ToMobiletunnelNetworkArrayOutputWithContext(ctx context.Context) MobiletunnelNetworkArrayOutput {
	return o
}

func (o MobiletunnelNetworkArrayOutput) Index(i pulumi.IntInput) MobiletunnelNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MobiletunnelNetwork {
		return vs[0].([]MobiletunnelNetwork)[vs[1].(int)]
	}).(MobiletunnelNetworkOutput)
}

type Nat64SecondaryPrefix struct {
	// NAT64 prefix name.
	Name *string `pulumi:"name"`
	// NAT64 prefix.
	Nat64Prefix *string `pulumi:"nat64Prefix"`
}

// Nat64SecondaryPrefixInput is an input type that accepts Nat64SecondaryPrefixArgs and Nat64SecondaryPrefixOutput values.
// You can construct a concrete instance of `Nat64SecondaryPrefixInput` via:
//
//	Nat64SecondaryPrefixArgs{...}
type Nat64SecondaryPrefixInput interface {
	pulumi.Input

	ToNat64SecondaryPrefixOutput() Nat64SecondaryPrefixOutput
	ToNat64SecondaryPrefixOutputWithContext(context.Context) Nat64SecondaryPrefixOutput
}

type Nat64SecondaryPrefixArgs struct {
	// NAT64 prefix name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// NAT64 prefix.
	Nat64Prefix pulumi.StringPtrInput `pulumi:"nat64Prefix"`
}

func (Nat64SecondaryPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Nat64SecondaryPrefix)(nil)).Elem()
}

func (i Nat64SecondaryPrefixArgs) ToNat64SecondaryPrefixOutput() Nat64SecondaryPrefixOutput {
	return i.ToNat64SecondaryPrefixOutputWithContext(context.Background())
}

func (i Nat64SecondaryPrefixArgs) ToNat64SecondaryPrefixOutputWithContext(ctx context.Context) Nat64SecondaryPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Nat64SecondaryPrefixOutput)
}

// Nat64SecondaryPrefixArrayInput is an input type that accepts Nat64SecondaryPrefixArray and Nat64SecondaryPrefixArrayOutput values.
// You can construct a concrete instance of `Nat64SecondaryPrefixArrayInput` via:
//
//	Nat64SecondaryPrefixArray{ Nat64SecondaryPrefixArgs{...} }
type Nat64SecondaryPrefixArrayInput interface {
	pulumi.Input

	ToNat64SecondaryPrefixArrayOutput() Nat64SecondaryPrefixArrayOutput
	ToNat64SecondaryPrefixArrayOutputWithContext(context.Context) Nat64SecondaryPrefixArrayOutput
}

type Nat64SecondaryPrefixArray []Nat64SecondaryPrefixInput

func (Nat64SecondaryPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Nat64SecondaryPrefix)(nil)).Elem()
}

func (i Nat64SecondaryPrefixArray) ToNat64SecondaryPrefixArrayOutput() Nat64SecondaryPrefixArrayOutput {
	return i.ToNat64SecondaryPrefixArrayOutputWithContext(context.Background())
}

func (i Nat64SecondaryPrefixArray) ToNat64SecondaryPrefixArrayOutputWithContext(ctx context.Context) Nat64SecondaryPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Nat64SecondaryPrefixArrayOutput)
}

type Nat64SecondaryPrefixOutput struct{ *pulumi.OutputState }

func (Nat64SecondaryPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Nat64SecondaryPrefix)(nil)).Elem()
}

func (o Nat64SecondaryPrefixOutput) ToNat64SecondaryPrefixOutput() Nat64SecondaryPrefixOutput {
	return o
}

func (o Nat64SecondaryPrefixOutput) ToNat64SecondaryPrefixOutputWithContext(ctx context.Context) Nat64SecondaryPrefixOutput {
	return o
}

// NAT64 prefix name.
func (o Nat64SecondaryPrefixOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Nat64SecondaryPrefix) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// NAT64 prefix.
func (o Nat64SecondaryPrefixOutput) Nat64Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Nat64SecondaryPrefix) *string { return v.Nat64Prefix }).(pulumi.StringPtrOutput)
}

type Nat64SecondaryPrefixArrayOutput struct{ *pulumi.OutputState }

func (Nat64SecondaryPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Nat64SecondaryPrefix)(nil)).Elem()
}

func (o Nat64SecondaryPrefixArrayOutput) ToNat64SecondaryPrefixArrayOutput() Nat64SecondaryPrefixArrayOutput {
	return o
}

func (o Nat64SecondaryPrefixArrayOutput) ToNat64SecondaryPrefixArrayOutputWithContext(ctx context.Context) Nat64SecondaryPrefixArrayOutput {
	return o
}

func (o Nat64SecondaryPrefixArrayOutput) Index(i pulumi.IntInput) Nat64SecondaryPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Nat64SecondaryPrefix {
		return vs[0].([]Nat64SecondaryPrefix)[vs[1].(int)]
	}).(Nat64SecondaryPrefixOutput)
}

type NdproxyMember struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// NdproxyMemberInput is an input type that accepts NdproxyMemberArgs and NdproxyMemberOutput values.
// You can construct a concrete instance of `NdproxyMemberInput` via:
//
//	NdproxyMemberArgs{...}
type NdproxyMemberInput interface {
	pulumi.Input

	ToNdproxyMemberOutput() NdproxyMemberOutput
	ToNdproxyMemberOutputWithContext(context.Context) NdproxyMemberOutput
}

type NdproxyMemberArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (NdproxyMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdproxyMember)(nil)).Elem()
}

func (i NdproxyMemberArgs) ToNdproxyMemberOutput() NdproxyMemberOutput {
	return i.ToNdproxyMemberOutputWithContext(context.Background())
}

func (i NdproxyMemberArgs) ToNdproxyMemberOutputWithContext(ctx context.Context) NdproxyMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdproxyMemberOutput)
}

// NdproxyMemberArrayInput is an input type that accepts NdproxyMemberArray and NdproxyMemberArrayOutput values.
// You can construct a concrete instance of `NdproxyMemberArrayInput` via:
//
//	NdproxyMemberArray{ NdproxyMemberArgs{...} }
type NdproxyMemberArrayInput interface {
	pulumi.Input

	ToNdproxyMemberArrayOutput() NdproxyMemberArrayOutput
	ToNdproxyMemberArrayOutputWithContext(context.Context) NdproxyMemberArrayOutput
}

type NdproxyMemberArray []NdproxyMemberInput

func (NdproxyMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdproxyMember)(nil)).Elem()
}

func (i NdproxyMemberArray) ToNdproxyMemberArrayOutput() NdproxyMemberArrayOutput {
	return i.ToNdproxyMemberArrayOutputWithContext(context.Background())
}

func (i NdproxyMemberArray) ToNdproxyMemberArrayOutputWithContext(ctx context.Context) NdproxyMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdproxyMemberArrayOutput)
}

type NdproxyMemberOutput struct{ *pulumi.OutputState }

func (NdproxyMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdproxyMember)(nil)).Elem()
}

func (o NdproxyMemberOutput) ToNdproxyMemberOutput() NdproxyMemberOutput {
	return o
}

func (o NdproxyMemberOutput) ToNdproxyMemberOutputWithContext(ctx context.Context) NdproxyMemberOutput {
	return o
}

// Interface name.
func (o NdproxyMemberOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdproxyMember) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type NdproxyMemberArrayOutput struct{ *pulumi.OutputState }

func (NdproxyMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdproxyMember)(nil)).Elem()
}

func (o NdproxyMemberArrayOutput) ToNdproxyMemberArrayOutput() NdproxyMemberArrayOutput {
	return o
}

func (o NdproxyMemberArrayOutput) ToNdproxyMemberArrayOutputWithContext(ctx context.Context) NdproxyMemberArrayOutput {
	return o
}

func (o NdproxyMemberArrayOutput) Index(i pulumi.IntInput) NdproxyMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdproxyMember {
		return vs[0].([]NdproxyMember)[vs[1].(int)]
	}).(NdproxyMemberOutput)
}

type NetflowCollector struct {
	// Collector IP.
	CollectorIp *string `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort *int `pulumi:"collectorPort"`
	// ID.
	Id *int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp *string `pulumi:"sourceIp"`
}

// NetflowCollectorInput is an input type that accepts NetflowCollectorArgs and NetflowCollectorOutput values.
// You can construct a concrete instance of `NetflowCollectorInput` via:
//
//	NetflowCollectorArgs{...}
type NetflowCollectorInput interface {
	pulumi.Input

	ToNetflowCollectorOutput() NetflowCollectorOutput
	ToNetflowCollectorOutputWithContext(context.Context) NetflowCollectorOutput
}

type NetflowCollectorArgs struct {
	// Collector IP.
	CollectorIp pulumi.StringPtrInput `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort pulumi.IntPtrInput `pulumi:"collectorPort"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
}

func (NetflowCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetflowCollector)(nil)).Elem()
}

func (i NetflowCollectorArgs) ToNetflowCollectorOutput() NetflowCollectorOutput {
	return i.ToNetflowCollectorOutputWithContext(context.Background())
}

func (i NetflowCollectorArgs) ToNetflowCollectorOutputWithContext(ctx context.Context) NetflowCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetflowCollectorOutput)
}

// NetflowCollectorArrayInput is an input type that accepts NetflowCollectorArray and NetflowCollectorArrayOutput values.
// You can construct a concrete instance of `NetflowCollectorArrayInput` via:
//
//	NetflowCollectorArray{ NetflowCollectorArgs{...} }
type NetflowCollectorArrayInput interface {
	pulumi.Input

	ToNetflowCollectorArrayOutput() NetflowCollectorArrayOutput
	ToNetflowCollectorArrayOutputWithContext(context.Context) NetflowCollectorArrayOutput
}

type NetflowCollectorArray []NetflowCollectorInput

func (NetflowCollectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetflowCollector)(nil)).Elem()
}

func (i NetflowCollectorArray) ToNetflowCollectorArrayOutput() NetflowCollectorArrayOutput {
	return i.ToNetflowCollectorArrayOutputWithContext(context.Background())
}

func (i NetflowCollectorArray) ToNetflowCollectorArrayOutputWithContext(ctx context.Context) NetflowCollectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetflowCollectorArrayOutput)
}

type NetflowCollectorOutput struct{ *pulumi.OutputState }

func (NetflowCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetflowCollector)(nil)).Elem()
}

func (o NetflowCollectorOutput) ToNetflowCollectorOutput() NetflowCollectorOutput {
	return o
}

func (o NetflowCollectorOutput) ToNetflowCollectorOutputWithContext(ctx context.Context) NetflowCollectorOutput {
	return o
}

// Collector IP.
func (o NetflowCollectorOutput) CollectorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetflowCollector) *string { return v.CollectorIp }).(pulumi.StringPtrOutput)
}

// NetFlow collector port number.
func (o NetflowCollectorOutput) CollectorPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetflowCollector) *int { return v.CollectorPort }).(pulumi.IntPtrOutput)
}

// ID.
func (o NetflowCollectorOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetflowCollector) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Specify outgoing interface to reach server.
func (o NetflowCollectorOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetflowCollector) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o NetflowCollectorOutput) InterfaceSelectMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetflowCollector) *string { return v.InterfaceSelectMethod }).(pulumi.StringPtrOutput)
}

// Source IP address for communication with the NetFlow agent.
func (o NetflowCollectorOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetflowCollector) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

type NetflowCollectorArrayOutput struct{ *pulumi.OutputState }

func (NetflowCollectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetflowCollector)(nil)).Elem()
}

func (o NetflowCollectorArrayOutput) ToNetflowCollectorArrayOutput() NetflowCollectorArrayOutput {
	return o
}

func (o NetflowCollectorArrayOutput) ToNetflowCollectorArrayOutputWithContext(ctx context.Context) NetflowCollectorArrayOutput {
	return o
}

func (o NetflowCollectorArrayOutput) Index(i pulumi.IntInput) NetflowCollectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetflowCollector {
		return vs[0].([]NetflowCollector)[vs[1].(int)]
	}).(NetflowCollectorOutput)
}

type NpuPriorityProtocol struct {
	// Enable/disable NPU BFD priority protocol. Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Enable/disable NPU BGP priority protocol. Valid values: `enable`, `disable`.
	Bgp *string `pulumi:"bgp"`
	// Enable/disable NPU SLBC priority protocol. Valid values: `enable`, `disable`.
	Slbc *string `pulumi:"slbc"`
}

// NpuPriorityProtocolInput is an input type that accepts NpuPriorityProtocolArgs and NpuPriorityProtocolOutput values.
// You can construct a concrete instance of `NpuPriorityProtocolInput` via:
//
//	NpuPriorityProtocolArgs{...}
type NpuPriorityProtocolInput interface {
	pulumi.Input

	ToNpuPriorityProtocolOutput() NpuPriorityProtocolOutput
	ToNpuPriorityProtocolOutputWithContext(context.Context) NpuPriorityProtocolOutput
}

type NpuPriorityProtocolArgs struct {
	// Enable/disable NPU BFD priority protocol. Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Enable/disable NPU BGP priority protocol. Valid values: `enable`, `disable`.
	Bgp pulumi.StringPtrInput `pulumi:"bgp"`
	// Enable/disable NPU SLBC priority protocol. Valid values: `enable`, `disable`.
	Slbc pulumi.StringPtrInput `pulumi:"slbc"`
}

func (NpuPriorityProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NpuPriorityProtocol)(nil)).Elem()
}

func (i NpuPriorityProtocolArgs) ToNpuPriorityProtocolOutput() NpuPriorityProtocolOutput {
	return i.ToNpuPriorityProtocolOutputWithContext(context.Background())
}

func (i NpuPriorityProtocolArgs) ToNpuPriorityProtocolOutputWithContext(ctx context.Context) NpuPriorityProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NpuPriorityProtocolOutput)
}

func (i NpuPriorityProtocolArgs) ToNpuPriorityProtocolPtrOutput() NpuPriorityProtocolPtrOutput {
	return i.ToNpuPriorityProtocolPtrOutputWithContext(context.Background())
}

func (i NpuPriorityProtocolArgs) ToNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) NpuPriorityProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NpuPriorityProtocolOutput).ToNpuPriorityProtocolPtrOutputWithContext(ctx)
}

// NpuPriorityProtocolPtrInput is an input type that accepts NpuPriorityProtocolArgs, NpuPriorityProtocolPtr and NpuPriorityProtocolPtrOutput values.
// You can construct a concrete instance of `NpuPriorityProtocolPtrInput` via:
//
//	        NpuPriorityProtocolArgs{...}
//
//	or:
//
//	        nil
type NpuPriorityProtocolPtrInput interface {
	pulumi.Input

	ToNpuPriorityProtocolPtrOutput() NpuPriorityProtocolPtrOutput
	ToNpuPriorityProtocolPtrOutputWithContext(context.Context) NpuPriorityProtocolPtrOutput
}

type npuPriorityProtocolPtrType NpuPriorityProtocolArgs

func NpuPriorityProtocolPtr(v *NpuPriorityProtocolArgs) NpuPriorityProtocolPtrInput {
	return (*npuPriorityProtocolPtrType)(v)
}

func (*npuPriorityProtocolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NpuPriorityProtocol)(nil)).Elem()
}

func (i *npuPriorityProtocolPtrType) ToNpuPriorityProtocolPtrOutput() NpuPriorityProtocolPtrOutput {
	return i.ToNpuPriorityProtocolPtrOutputWithContext(context.Background())
}

func (i *npuPriorityProtocolPtrType) ToNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) NpuPriorityProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NpuPriorityProtocolPtrOutput)
}

type NpuPriorityProtocolOutput struct{ *pulumi.OutputState }

func (NpuPriorityProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NpuPriorityProtocol)(nil)).Elem()
}

func (o NpuPriorityProtocolOutput) ToNpuPriorityProtocolOutput() NpuPriorityProtocolOutput {
	return o
}

func (o NpuPriorityProtocolOutput) ToNpuPriorityProtocolOutputWithContext(ctx context.Context) NpuPriorityProtocolOutput {
	return o
}

func (o NpuPriorityProtocolOutput) ToNpuPriorityProtocolPtrOutput() NpuPriorityProtocolPtrOutput {
	return o.ToNpuPriorityProtocolPtrOutputWithContext(context.Background())
}

func (o NpuPriorityProtocolOutput) ToNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) NpuPriorityProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NpuPriorityProtocol) *NpuPriorityProtocol {
		return &v
	}).(NpuPriorityProtocolPtrOutput)
}

// Enable/disable NPU BFD priority protocol. Valid values: `enable`, `disable`.
func (o NpuPriorityProtocolOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NpuPriorityProtocol) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Enable/disable NPU BGP priority protocol. Valid values: `enable`, `disable`.
func (o NpuPriorityProtocolOutput) Bgp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NpuPriorityProtocol) *string { return v.Bgp }).(pulumi.StringPtrOutput)
}

// Enable/disable NPU SLBC priority protocol. Valid values: `enable`, `disable`.
func (o NpuPriorityProtocolOutput) Slbc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NpuPriorityProtocol) *string { return v.Slbc }).(pulumi.StringPtrOutput)
}

type NpuPriorityProtocolPtrOutput struct{ *pulumi.OutputState }

func (NpuPriorityProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NpuPriorityProtocol)(nil)).Elem()
}

func (o NpuPriorityProtocolPtrOutput) ToNpuPriorityProtocolPtrOutput() NpuPriorityProtocolPtrOutput {
	return o
}

func (o NpuPriorityProtocolPtrOutput) ToNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) NpuPriorityProtocolPtrOutput {
	return o
}

func (o NpuPriorityProtocolPtrOutput) Elem() NpuPriorityProtocolOutput {
	return o.ApplyT(func(v *NpuPriorityProtocol) NpuPriorityProtocol {
		if v != nil {
			return *v
		}
		var ret NpuPriorityProtocol
		return ret
	}).(NpuPriorityProtocolOutput)
}

// Enable/disable NPU BFD priority protocol. Valid values: `enable`, `disable`.
func (o NpuPriorityProtocolPtrOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NpuPriorityProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Bfd
	}).(pulumi.StringPtrOutput)
}

// Enable/disable NPU BGP priority protocol. Valid values: `enable`, `disable`.
func (o NpuPriorityProtocolPtrOutput) Bgp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NpuPriorityProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Bgp
	}).(pulumi.StringPtrOutput)
}

// Enable/disable NPU SLBC priority protocol. Valid values: `enable`, `disable`.
func (o NpuPriorityProtocolPtrOutput) Slbc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NpuPriorityProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Slbc
	}).(pulumi.StringPtrOutput)
}

type NtpInterface struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// NtpInterfaceInput is an input type that accepts NtpInterfaceArgs and NtpInterfaceOutput values.
// You can construct a concrete instance of `NtpInterfaceInput` via:
//
//	NtpInterfaceArgs{...}
type NtpInterfaceInput interface {
	pulumi.Input

	ToNtpInterfaceOutput() NtpInterfaceOutput
	ToNtpInterfaceOutputWithContext(context.Context) NtpInterfaceOutput
}

type NtpInterfaceArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (NtpInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NtpInterface)(nil)).Elem()
}

func (i NtpInterfaceArgs) ToNtpInterfaceOutput() NtpInterfaceOutput {
	return i.ToNtpInterfaceOutputWithContext(context.Background())
}

func (i NtpInterfaceArgs) ToNtpInterfaceOutputWithContext(ctx context.Context) NtpInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NtpInterfaceOutput)
}

// NtpInterfaceArrayInput is an input type that accepts NtpInterfaceArray and NtpInterfaceArrayOutput values.
// You can construct a concrete instance of `NtpInterfaceArrayInput` via:
//
//	NtpInterfaceArray{ NtpInterfaceArgs{...} }
type NtpInterfaceArrayInput interface {
	pulumi.Input

	ToNtpInterfaceArrayOutput() NtpInterfaceArrayOutput
	ToNtpInterfaceArrayOutputWithContext(context.Context) NtpInterfaceArrayOutput
}

type NtpInterfaceArray []NtpInterfaceInput

func (NtpInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NtpInterface)(nil)).Elem()
}

func (i NtpInterfaceArray) ToNtpInterfaceArrayOutput() NtpInterfaceArrayOutput {
	return i.ToNtpInterfaceArrayOutputWithContext(context.Background())
}

func (i NtpInterfaceArray) ToNtpInterfaceArrayOutputWithContext(ctx context.Context) NtpInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NtpInterfaceArrayOutput)
}

type NtpInterfaceOutput struct{ *pulumi.OutputState }

func (NtpInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NtpInterface)(nil)).Elem()
}

func (o NtpInterfaceOutput) ToNtpInterfaceOutput() NtpInterfaceOutput {
	return o
}

func (o NtpInterfaceOutput) ToNtpInterfaceOutputWithContext(ctx context.Context) NtpInterfaceOutput {
	return o
}

// Interface name.
func (o NtpInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NtpInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type NtpInterfaceArrayOutput struct{ *pulumi.OutputState }

func (NtpInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NtpInterface)(nil)).Elem()
}

func (o NtpInterfaceArrayOutput) ToNtpInterfaceArrayOutput() NtpInterfaceArrayOutput {
	return o
}

func (o NtpInterfaceArrayOutput) ToNtpInterfaceArrayOutputWithContext(ctx context.Context) NtpInterfaceArrayOutput {
	return o
}

func (o NtpInterfaceArrayOutput) Index(i pulumi.IntInput) NtpInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NtpInterface {
		return vs[0].([]NtpInterface)[vs[1].(int)]
	}).(NtpInterfaceOutput)
}

type NtpNtpserver struct {
	// Enable/disable MD5/SHA1 authentication. Valid values: `enable`, `disable`.
	Authentication *string `pulumi:"authentication"`
	// NTP server ID.
	Id *int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Choose to connect to IPv4 or/and IPv6 NTP server. Valid values: `IPv6`, `IPv4`, `Both`.
	IpType *string `pulumi:"ipType"`
	// Key for MD5/SHA1 authentication.
	Key *string `pulumi:"key"`
	// Key ID for authentication.
	KeyId *int `pulumi:"keyId"`
	// Enable to use NTPv3 instead of NTPv4. Valid values: `enable`, `disable`.
	Ntpv3 *string `pulumi:"ntpv3"`
	// IP address or hostname of the NTP Server.
	Server *string `pulumi:"server"`
}

// NtpNtpserverInput is an input type that accepts NtpNtpserverArgs and NtpNtpserverOutput values.
// You can construct a concrete instance of `NtpNtpserverInput` via:
//
//	NtpNtpserverArgs{...}
type NtpNtpserverInput interface {
	pulumi.Input

	ToNtpNtpserverOutput() NtpNtpserverOutput
	ToNtpNtpserverOutputWithContext(context.Context) NtpNtpserverOutput
}

type NtpNtpserverArgs struct {
	// Enable/disable MD5/SHA1 authentication. Valid values: `enable`, `disable`.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// NTP server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput `pulumi:"interfaceSelectMethod"`
	// Choose to connect to IPv4 or/and IPv6 NTP server. Valid values: `IPv6`, `IPv4`, `Both`.
	IpType pulumi.StringPtrInput `pulumi:"ipType"`
	// Key for MD5/SHA1 authentication.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Key ID for authentication.
	KeyId pulumi.IntPtrInput `pulumi:"keyId"`
	// Enable to use NTPv3 instead of NTPv4. Valid values: `enable`, `disable`.
	Ntpv3 pulumi.StringPtrInput `pulumi:"ntpv3"`
	// IP address or hostname of the NTP Server.
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (NtpNtpserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NtpNtpserver)(nil)).Elem()
}

func (i NtpNtpserverArgs) ToNtpNtpserverOutput() NtpNtpserverOutput {
	return i.ToNtpNtpserverOutputWithContext(context.Background())
}

func (i NtpNtpserverArgs) ToNtpNtpserverOutputWithContext(ctx context.Context) NtpNtpserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NtpNtpserverOutput)
}

// NtpNtpserverArrayInput is an input type that accepts NtpNtpserverArray and NtpNtpserverArrayOutput values.
// You can construct a concrete instance of `NtpNtpserverArrayInput` via:
//
//	NtpNtpserverArray{ NtpNtpserverArgs{...} }
type NtpNtpserverArrayInput interface {
	pulumi.Input

	ToNtpNtpserverArrayOutput() NtpNtpserverArrayOutput
	ToNtpNtpserverArrayOutputWithContext(context.Context) NtpNtpserverArrayOutput
}

type NtpNtpserverArray []NtpNtpserverInput

func (NtpNtpserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NtpNtpserver)(nil)).Elem()
}

func (i NtpNtpserverArray) ToNtpNtpserverArrayOutput() NtpNtpserverArrayOutput {
	return i.ToNtpNtpserverArrayOutputWithContext(context.Background())
}

func (i NtpNtpserverArray) ToNtpNtpserverArrayOutputWithContext(ctx context.Context) NtpNtpserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NtpNtpserverArrayOutput)
}

type NtpNtpserverOutput struct{ *pulumi.OutputState }

func (NtpNtpserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NtpNtpserver)(nil)).Elem()
}

func (o NtpNtpserverOutput) ToNtpNtpserverOutput() NtpNtpserverOutput {
	return o
}

func (o NtpNtpserverOutput) ToNtpNtpserverOutputWithContext(ctx context.Context) NtpNtpserverOutput {
	return o
}

// Enable/disable MD5/SHA1 authentication. Valid values: `enable`, `disable`.
func (o NtpNtpserverOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NtpNtpserver) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// NTP server ID.
func (o NtpNtpserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NtpNtpserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Specify outgoing interface to reach server.
func (o NtpNtpserverOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NtpNtpserver) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o NtpNtpserverOutput) InterfaceSelectMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NtpNtpserver) *string { return v.InterfaceSelectMethod }).(pulumi.StringPtrOutput)
}

// Choose to connect to IPv4 or/and IPv6 NTP server. Valid values: `IPv6`, `IPv4`, `Both`.
func (o NtpNtpserverOutput) IpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NtpNtpserver) *string { return v.IpType }).(pulumi.StringPtrOutput)
}

// Key for MD5/SHA1 authentication.
func (o NtpNtpserverOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NtpNtpserver) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Key ID for authentication.
func (o NtpNtpserverOutput) KeyId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NtpNtpserver) *int { return v.KeyId }).(pulumi.IntPtrOutput)
}

// Enable to use NTPv3 instead of NTPv4. Valid values: `enable`, `disable`.
func (o NtpNtpserverOutput) Ntpv3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NtpNtpserver) *string { return v.Ntpv3 }).(pulumi.StringPtrOutput)
}

// IP address or hostname of the NTP Server.
func (o NtpNtpserverOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NtpNtpserver) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type NtpNtpserverArrayOutput struct{ *pulumi.OutputState }

func (NtpNtpserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NtpNtpserver)(nil)).Elem()
}

func (o NtpNtpserverArrayOutput) ToNtpNtpserverArrayOutput() NtpNtpserverArrayOutput {
	return o
}

func (o NtpNtpserverArrayOutput) ToNtpNtpserverArrayOutputWithContext(ctx context.Context) NtpNtpserverArrayOutput {
	return o
}

func (o NtpNtpserverArrayOutput) Index(i pulumi.IntInput) NtpNtpserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NtpNtpserver {
		return vs[0].([]NtpNtpserver)[vs[1].(int)]
	}).(NtpNtpserverOutput)
}

type ObjecttaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// ObjecttaggingTagInput is an input type that accepts ObjecttaggingTagArgs and ObjecttaggingTagOutput values.
// You can construct a concrete instance of `ObjecttaggingTagInput` via:
//
//	ObjecttaggingTagArgs{...}
type ObjecttaggingTagInput interface {
	pulumi.Input

	ToObjecttaggingTagOutput() ObjecttaggingTagOutput
	ToObjecttaggingTagOutputWithContext(context.Context) ObjecttaggingTagOutput
}

type ObjecttaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ObjecttaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjecttaggingTag)(nil)).Elem()
}

func (i ObjecttaggingTagArgs) ToObjecttaggingTagOutput() ObjecttaggingTagOutput {
	return i.ToObjecttaggingTagOutputWithContext(context.Background())
}

func (i ObjecttaggingTagArgs) ToObjecttaggingTagOutputWithContext(ctx context.Context) ObjecttaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjecttaggingTagOutput)
}

// ObjecttaggingTagArrayInput is an input type that accepts ObjecttaggingTagArray and ObjecttaggingTagArrayOutput values.
// You can construct a concrete instance of `ObjecttaggingTagArrayInput` via:
//
//	ObjecttaggingTagArray{ ObjecttaggingTagArgs{...} }
type ObjecttaggingTagArrayInput interface {
	pulumi.Input

	ToObjecttaggingTagArrayOutput() ObjecttaggingTagArrayOutput
	ToObjecttaggingTagArrayOutputWithContext(context.Context) ObjecttaggingTagArrayOutput
}

type ObjecttaggingTagArray []ObjecttaggingTagInput

func (ObjecttaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjecttaggingTag)(nil)).Elem()
}

func (i ObjecttaggingTagArray) ToObjecttaggingTagArrayOutput() ObjecttaggingTagArrayOutput {
	return i.ToObjecttaggingTagArrayOutputWithContext(context.Background())
}

func (i ObjecttaggingTagArray) ToObjecttaggingTagArrayOutputWithContext(ctx context.Context) ObjecttaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjecttaggingTagArrayOutput)
}

type ObjecttaggingTagOutput struct{ *pulumi.OutputState }

func (ObjecttaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjecttaggingTag)(nil)).Elem()
}

func (o ObjecttaggingTagOutput) ToObjecttaggingTagOutput() ObjecttaggingTagOutput {
	return o
}

func (o ObjecttaggingTagOutput) ToObjecttaggingTagOutputWithContext(ctx context.Context) ObjecttaggingTagOutput {
	return o
}

// Tag name.
func (o ObjecttaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjecttaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ObjecttaggingTagArrayOutput struct{ *pulumi.OutputState }

func (ObjecttaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjecttaggingTag)(nil)).Elem()
}

func (o ObjecttaggingTagArrayOutput) ToObjecttaggingTagArrayOutput() ObjecttaggingTagArrayOutput {
	return o
}

func (o ObjecttaggingTagArrayOutput) ToObjecttaggingTagArrayOutputWithContext(ctx context.Context) ObjecttaggingTagArrayOutput {
	return o
}

func (o ObjecttaggingTagArrayOutput) Index(i pulumi.IntInput) ObjecttaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjecttaggingTag {
		return vs[0].([]ObjecttaggingTag)[vs[1].(int)]
	}).(ObjecttaggingTagOutput)
}

type PcpserverPool struct {
	// Allowed PCP opcode. Valid values: `map`, `peer`, `announce`.
	AllowOpcode *string `pulumi:"allowOpcode"`
	// Number of multicast announcements.
	AnnouncementCount *int `pulumi:"announcementCount"`
	// Enable to respond to ARP requests for external IP (default = enable). Valid values: `disable`, `enable`.
	ArpReply *string `pulumi:"arpReply"`
	// Mapping limit per client (0 - 65535, default = 0, 0 = unlimited).
	ClientMappingLimit *int `pulumi:"clientMappingLimit"`
	// Subnets from which PCP requests are accepted. The structure of `clientSubnet` block is documented below.
	ClientSubnets []PcpserverPoolClientSubnet `pulumi:"clientSubnets"`
	// Description.
	Description *string `pulumi:"description"`
	// External interface name.
	ExtIntf *string `pulumi:"extIntf"`
	// IP address or address range on the external interface that you want to map to an address on the internal network.
	Extip *string `pulumi:"extip"`
	// Incoming port number range that you want to map to a port number on the internal network.
	Extport *string `pulumi:"extport"`
	// ID.
	Id *int `pulumi:"id"`
	// Internal interface name. The structure of `intlIntf` block is documented below.
	IntlIntfs []PcpserverPoolIntlIntf `pulumi:"intlIntfs"`
	// Filter limit per mapping (0 - 5, default = 1).
	MappingFilterLimit *int `pulumi:"mappingFilterLimit"`
	// Maximal lifetime of a PCP mapping in seconds (3600 - 604800, default = 86400).
	MaximalLifetime *int `pulumi:"maximalLifetime"`
	// Minimal lifetime of a PCP mapping in seconds (60 - 300, default = 120).
	MinimalLifetime *int `pulumi:"minimalLifetime"`
	// Enable/disable multicast announcements. Valid values: `enable`, `disable`.
	MulticastAnnouncement *string `pulumi:"multicastAnnouncement"`
	// PCP pool name.
	Name *string `pulumi:"name"`
	// Minimum delay (in seconds) the PCP Server will wait before recycling mappings that have expired (0 - 3600, default = 0).
	RecycleDelay *int `pulumi:"recycleDelay"`
	// Allow/disallow third party option. Valid values: `allow`, `disallow`.
	ThirdParty *string `pulumi:"thirdParty"`
	// Subnets from which third party requests are accepted. The structure of `thirdPartySubnet` block is documented below.
	ThirdPartySubnets []PcpserverPoolThirdPartySubnet `pulumi:"thirdPartySubnets"`
}

// PcpserverPoolInput is an input type that accepts PcpserverPoolArgs and PcpserverPoolOutput values.
// You can construct a concrete instance of `PcpserverPoolInput` via:
//
//	PcpserverPoolArgs{...}
type PcpserverPoolInput interface {
	pulumi.Input

	ToPcpserverPoolOutput() PcpserverPoolOutput
	ToPcpserverPoolOutputWithContext(context.Context) PcpserverPoolOutput
}

type PcpserverPoolArgs struct {
	// Allowed PCP opcode. Valid values: `map`, `peer`, `announce`.
	AllowOpcode pulumi.StringPtrInput `pulumi:"allowOpcode"`
	// Number of multicast announcements.
	AnnouncementCount pulumi.IntPtrInput `pulumi:"announcementCount"`
	// Enable to respond to ARP requests for external IP (default = enable). Valid values: `disable`, `enable`.
	ArpReply pulumi.StringPtrInput `pulumi:"arpReply"`
	// Mapping limit per client (0 - 65535, default = 0, 0 = unlimited).
	ClientMappingLimit pulumi.IntPtrInput `pulumi:"clientMappingLimit"`
	// Subnets from which PCP requests are accepted. The structure of `clientSubnet` block is documented below.
	ClientSubnets PcpserverPoolClientSubnetArrayInput `pulumi:"clientSubnets"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// External interface name.
	ExtIntf pulumi.StringPtrInput `pulumi:"extIntf"`
	// IP address or address range on the external interface that you want to map to an address on the internal network.
	Extip pulumi.StringPtrInput `pulumi:"extip"`
	// Incoming port number range that you want to map to a port number on the internal network.
	Extport pulumi.StringPtrInput `pulumi:"extport"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Internal interface name. The structure of `intlIntf` block is documented below.
	IntlIntfs PcpserverPoolIntlIntfArrayInput `pulumi:"intlIntfs"`
	// Filter limit per mapping (0 - 5, default = 1).
	MappingFilterLimit pulumi.IntPtrInput `pulumi:"mappingFilterLimit"`
	// Maximal lifetime of a PCP mapping in seconds (3600 - 604800, default = 86400).
	MaximalLifetime pulumi.IntPtrInput `pulumi:"maximalLifetime"`
	// Minimal lifetime of a PCP mapping in seconds (60 - 300, default = 120).
	MinimalLifetime pulumi.IntPtrInput `pulumi:"minimalLifetime"`
	// Enable/disable multicast announcements. Valid values: `enable`, `disable`.
	MulticastAnnouncement pulumi.StringPtrInput `pulumi:"multicastAnnouncement"`
	// PCP pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Minimum delay (in seconds) the PCP Server will wait before recycling mappings that have expired (0 - 3600, default = 0).
	RecycleDelay pulumi.IntPtrInput `pulumi:"recycleDelay"`
	// Allow/disallow third party option. Valid values: `allow`, `disallow`.
	ThirdParty pulumi.StringPtrInput `pulumi:"thirdParty"`
	// Subnets from which third party requests are accepted. The structure of `thirdPartySubnet` block is documented below.
	ThirdPartySubnets PcpserverPoolThirdPartySubnetArrayInput `pulumi:"thirdPartySubnets"`
}

func (PcpserverPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcpserverPool)(nil)).Elem()
}

func (i PcpserverPoolArgs) ToPcpserverPoolOutput() PcpserverPoolOutput {
	return i.ToPcpserverPoolOutputWithContext(context.Background())
}

func (i PcpserverPoolArgs) ToPcpserverPoolOutputWithContext(ctx context.Context) PcpserverPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcpserverPoolOutput)
}

// PcpserverPoolArrayInput is an input type that accepts PcpserverPoolArray and PcpserverPoolArrayOutput values.
// You can construct a concrete instance of `PcpserverPoolArrayInput` via:
//
//	PcpserverPoolArray{ PcpserverPoolArgs{...} }
type PcpserverPoolArrayInput interface {
	pulumi.Input

	ToPcpserverPoolArrayOutput() PcpserverPoolArrayOutput
	ToPcpserverPoolArrayOutputWithContext(context.Context) PcpserverPoolArrayOutput
}

type PcpserverPoolArray []PcpserverPoolInput

func (PcpserverPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcpserverPool)(nil)).Elem()
}

func (i PcpserverPoolArray) ToPcpserverPoolArrayOutput() PcpserverPoolArrayOutput {
	return i.ToPcpserverPoolArrayOutputWithContext(context.Background())
}

func (i PcpserverPoolArray) ToPcpserverPoolArrayOutputWithContext(ctx context.Context) PcpserverPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcpserverPoolArrayOutput)
}

type PcpserverPoolOutput struct{ *pulumi.OutputState }

func (PcpserverPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcpserverPool)(nil)).Elem()
}

func (o PcpserverPoolOutput) ToPcpserverPoolOutput() PcpserverPoolOutput {
	return o
}

func (o PcpserverPoolOutput) ToPcpserverPoolOutputWithContext(ctx context.Context) PcpserverPoolOutput {
	return o
}

// Allowed PCP opcode. Valid values: `map`, `peer`, `announce`.
func (o PcpserverPoolOutput) AllowOpcode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *string { return v.AllowOpcode }).(pulumi.StringPtrOutput)
}

// Number of multicast announcements.
func (o PcpserverPoolOutput) AnnouncementCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *int { return v.AnnouncementCount }).(pulumi.IntPtrOutput)
}

// Enable to respond to ARP requests for external IP (default = enable). Valid values: `disable`, `enable`.
func (o PcpserverPoolOutput) ArpReply() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *string { return v.ArpReply }).(pulumi.StringPtrOutput)
}

// Mapping limit per client (0 - 65535, default = 0, 0 = unlimited).
func (o PcpserverPoolOutput) ClientMappingLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *int { return v.ClientMappingLimit }).(pulumi.IntPtrOutput)
}

// Subnets from which PCP requests are accepted. The structure of `clientSubnet` block is documented below.
func (o PcpserverPoolOutput) ClientSubnets() PcpserverPoolClientSubnetArrayOutput {
	return o.ApplyT(func(v PcpserverPool) []PcpserverPoolClientSubnet { return v.ClientSubnets }).(PcpserverPoolClientSubnetArrayOutput)
}

// Description.
func (o PcpserverPoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// External interface name.
func (o PcpserverPoolOutput) ExtIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *string { return v.ExtIntf }).(pulumi.StringPtrOutput)
}

// IP address or address range on the external interface that you want to map to an address on the internal network.
func (o PcpserverPoolOutput) Extip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *string { return v.Extip }).(pulumi.StringPtrOutput)
}

// Incoming port number range that you want to map to a port number on the internal network.
func (o PcpserverPoolOutput) Extport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *string { return v.Extport }).(pulumi.StringPtrOutput)
}

// ID.
func (o PcpserverPoolOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Internal interface name. The structure of `intlIntf` block is documented below.
func (o PcpserverPoolOutput) IntlIntfs() PcpserverPoolIntlIntfArrayOutput {
	return o.ApplyT(func(v PcpserverPool) []PcpserverPoolIntlIntf { return v.IntlIntfs }).(PcpserverPoolIntlIntfArrayOutput)
}

// Filter limit per mapping (0 - 5, default = 1).
func (o PcpserverPoolOutput) MappingFilterLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *int { return v.MappingFilterLimit }).(pulumi.IntPtrOutput)
}

// Maximal lifetime of a PCP mapping in seconds (3600 - 604800, default = 86400).
func (o PcpserverPoolOutput) MaximalLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *int { return v.MaximalLifetime }).(pulumi.IntPtrOutput)
}

// Minimal lifetime of a PCP mapping in seconds (60 - 300, default = 120).
func (o PcpserverPoolOutput) MinimalLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *int { return v.MinimalLifetime }).(pulumi.IntPtrOutput)
}

// Enable/disable multicast announcements. Valid values: `enable`, `disable`.
func (o PcpserverPoolOutput) MulticastAnnouncement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *string { return v.MulticastAnnouncement }).(pulumi.StringPtrOutput)
}

// PCP pool name.
func (o PcpserverPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Minimum delay (in seconds) the PCP Server will wait before recycling mappings that have expired (0 - 3600, default = 0).
func (o PcpserverPoolOutput) RecycleDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *int { return v.RecycleDelay }).(pulumi.IntPtrOutput)
}

// Allow/disallow third party option. Valid values: `allow`, `disallow`.
func (o PcpserverPoolOutput) ThirdParty() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPool) *string { return v.ThirdParty }).(pulumi.StringPtrOutput)
}

// Subnets from which third party requests are accepted. The structure of `thirdPartySubnet` block is documented below.
func (o PcpserverPoolOutput) ThirdPartySubnets() PcpserverPoolThirdPartySubnetArrayOutput {
	return o.ApplyT(func(v PcpserverPool) []PcpserverPoolThirdPartySubnet { return v.ThirdPartySubnets }).(PcpserverPoolThirdPartySubnetArrayOutput)
}

type PcpserverPoolArrayOutput struct{ *pulumi.OutputState }

func (PcpserverPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcpserverPool)(nil)).Elem()
}

func (o PcpserverPoolArrayOutput) ToPcpserverPoolArrayOutput() PcpserverPoolArrayOutput {
	return o
}

func (o PcpserverPoolArrayOutput) ToPcpserverPoolArrayOutputWithContext(ctx context.Context) PcpserverPoolArrayOutput {
	return o
}

func (o PcpserverPoolArrayOutput) Index(i pulumi.IntInput) PcpserverPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcpserverPool {
		return vs[0].([]PcpserverPool)[vs[1].(int)]
	}).(PcpserverPoolOutput)
}

type PcpserverPoolClientSubnet struct {
	// Client subnets.
	Subnet *string `pulumi:"subnet"`
}

// PcpserverPoolClientSubnetInput is an input type that accepts PcpserverPoolClientSubnetArgs and PcpserverPoolClientSubnetOutput values.
// You can construct a concrete instance of `PcpserverPoolClientSubnetInput` via:
//
//	PcpserverPoolClientSubnetArgs{...}
type PcpserverPoolClientSubnetInput interface {
	pulumi.Input

	ToPcpserverPoolClientSubnetOutput() PcpserverPoolClientSubnetOutput
	ToPcpserverPoolClientSubnetOutputWithContext(context.Context) PcpserverPoolClientSubnetOutput
}

type PcpserverPoolClientSubnetArgs struct {
	// Client subnets.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (PcpserverPoolClientSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcpserverPoolClientSubnet)(nil)).Elem()
}

func (i PcpserverPoolClientSubnetArgs) ToPcpserverPoolClientSubnetOutput() PcpserverPoolClientSubnetOutput {
	return i.ToPcpserverPoolClientSubnetOutputWithContext(context.Background())
}

func (i PcpserverPoolClientSubnetArgs) ToPcpserverPoolClientSubnetOutputWithContext(ctx context.Context) PcpserverPoolClientSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcpserverPoolClientSubnetOutput)
}

// PcpserverPoolClientSubnetArrayInput is an input type that accepts PcpserverPoolClientSubnetArray and PcpserverPoolClientSubnetArrayOutput values.
// You can construct a concrete instance of `PcpserverPoolClientSubnetArrayInput` via:
//
//	PcpserverPoolClientSubnetArray{ PcpserverPoolClientSubnetArgs{...} }
type PcpserverPoolClientSubnetArrayInput interface {
	pulumi.Input

	ToPcpserverPoolClientSubnetArrayOutput() PcpserverPoolClientSubnetArrayOutput
	ToPcpserverPoolClientSubnetArrayOutputWithContext(context.Context) PcpserverPoolClientSubnetArrayOutput
}

type PcpserverPoolClientSubnetArray []PcpserverPoolClientSubnetInput

func (PcpserverPoolClientSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcpserverPoolClientSubnet)(nil)).Elem()
}

func (i PcpserverPoolClientSubnetArray) ToPcpserverPoolClientSubnetArrayOutput() PcpserverPoolClientSubnetArrayOutput {
	return i.ToPcpserverPoolClientSubnetArrayOutputWithContext(context.Background())
}

func (i PcpserverPoolClientSubnetArray) ToPcpserverPoolClientSubnetArrayOutputWithContext(ctx context.Context) PcpserverPoolClientSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcpserverPoolClientSubnetArrayOutput)
}

type PcpserverPoolClientSubnetOutput struct{ *pulumi.OutputState }

func (PcpserverPoolClientSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcpserverPoolClientSubnet)(nil)).Elem()
}

func (o PcpserverPoolClientSubnetOutput) ToPcpserverPoolClientSubnetOutput() PcpserverPoolClientSubnetOutput {
	return o
}

func (o PcpserverPoolClientSubnetOutput) ToPcpserverPoolClientSubnetOutputWithContext(ctx context.Context) PcpserverPoolClientSubnetOutput {
	return o
}

// Client subnets.
func (o PcpserverPoolClientSubnetOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPoolClientSubnet) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type PcpserverPoolClientSubnetArrayOutput struct{ *pulumi.OutputState }

func (PcpserverPoolClientSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcpserverPoolClientSubnet)(nil)).Elem()
}

func (o PcpserverPoolClientSubnetArrayOutput) ToPcpserverPoolClientSubnetArrayOutput() PcpserverPoolClientSubnetArrayOutput {
	return o
}

func (o PcpserverPoolClientSubnetArrayOutput) ToPcpserverPoolClientSubnetArrayOutputWithContext(ctx context.Context) PcpserverPoolClientSubnetArrayOutput {
	return o
}

func (o PcpserverPoolClientSubnetArrayOutput) Index(i pulumi.IntInput) PcpserverPoolClientSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcpserverPoolClientSubnet {
		return vs[0].([]PcpserverPoolClientSubnet)[vs[1].(int)]
	}).(PcpserverPoolClientSubnetOutput)
}

type PcpserverPoolIntlIntf struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// PcpserverPoolIntlIntfInput is an input type that accepts PcpserverPoolIntlIntfArgs and PcpserverPoolIntlIntfOutput values.
// You can construct a concrete instance of `PcpserverPoolIntlIntfInput` via:
//
//	PcpserverPoolIntlIntfArgs{...}
type PcpserverPoolIntlIntfInput interface {
	pulumi.Input

	ToPcpserverPoolIntlIntfOutput() PcpserverPoolIntlIntfOutput
	ToPcpserverPoolIntlIntfOutputWithContext(context.Context) PcpserverPoolIntlIntfOutput
}

type PcpserverPoolIntlIntfArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (PcpserverPoolIntlIntfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcpserverPoolIntlIntf)(nil)).Elem()
}

func (i PcpserverPoolIntlIntfArgs) ToPcpserverPoolIntlIntfOutput() PcpserverPoolIntlIntfOutput {
	return i.ToPcpserverPoolIntlIntfOutputWithContext(context.Background())
}

func (i PcpserverPoolIntlIntfArgs) ToPcpserverPoolIntlIntfOutputWithContext(ctx context.Context) PcpserverPoolIntlIntfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcpserverPoolIntlIntfOutput)
}

// PcpserverPoolIntlIntfArrayInput is an input type that accepts PcpserverPoolIntlIntfArray and PcpserverPoolIntlIntfArrayOutput values.
// You can construct a concrete instance of `PcpserverPoolIntlIntfArrayInput` via:
//
//	PcpserverPoolIntlIntfArray{ PcpserverPoolIntlIntfArgs{...} }
type PcpserverPoolIntlIntfArrayInput interface {
	pulumi.Input

	ToPcpserverPoolIntlIntfArrayOutput() PcpserverPoolIntlIntfArrayOutput
	ToPcpserverPoolIntlIntfArrayOutputWithContext(context.Context) PcpserverPoolIntlIntfArrayOutput
}

type PcpserverPoolIntlIntfArray []PcpserverPoolIntlIntfInput

func (PcpserverPoolIntlIntfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcpserverPoolIntlIntf)(nil)).Elem()
}

func (i PcpserverPoolIntlIntfArray) ToPcpserverPoolIntlIntfArrayOutput() PcpserverPoolIntlIntfArrayOutput {
	return i.ToPcpserverPoolIntlIntfArrayOutputWithContext(context.Background())
}

func (i PcpserverPoolIntlIntfArray) ToPcpserverPoolIntlIntfArrayOutputWithContext(ctx context.Context) PcpserverPoolIntlIntfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcpserverPoolIntlIntfArrayOutput)
}

type PcpserverPoolIntlIntfOutput struct{ *pulumi.OutputState }

func (PcpserverPoolIntlIntfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcpserverPoolIntlIntf)(nil)).Elem()
}

func (o PcpserverPoolIntlIntfOutput) ToPcpserverPoolIntlIntfOutput() PcpserverPoolIntlIntfOutput {
	return o
}

func (o PcpserverPoolIntlIntfOutput) ToPcpserverPoolIntlIntfOutputWithContext(ctx context.Context) PcpserverPoolIntlIntfOutput {
	return o
}

// Interface name.
func (o PcpserverPoolIntlIntfOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPoolIntlIntf) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type PcpserverPoolIntlIntfArrayOutput struct{ *pulumi.OutputState }

func (PcpserverPoolIntlIntfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcpserverPoolIntlIntf)(nil)).Elem()
}

func (o PcpserverPoolIntlIntfArrayOutput) ToPcpserverPoolIntlIntfArrayOutput() PcpserverPoolIntlIntfArrayOutput {
	return o
}

func (o PcpserverPoolIntlIntfArrayOutput) ToPcpserverPoolIntlIntfArrayOutputWithContext(ctx context.Context) PcpserverPoolIntlIntfArrayOutput {
	return o
}

func (o PcpserverPoolIntlIntfArrayOutput) Index(i pulumi.IntInput) PcpserverPoolIntlIntfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcpserverPoolIntlIntf {
		return vs[0].([]PcpserverPoolIntlIntf)[vs[1].(int)]
	}).(PcpserverPoolIntlIntfOutput)
}

type PcpserverPoolThirdPartySubnet struct {
	// Third party subnets.
	Subnet *string `pulumi:"subnet"`
}

// PcpserverPoolThirdPartySubnetInput is an input type that accepts PcpserverPoolThirdPartySubnetArgs and PcpserverPoolThirdPartySubnetOutput values.
// You can construct a concrete instance of `PcpserverPoolThirdPartySubnetInput` via:
//
//	PcpserverPoolThirdPartySubnetArgs{...}
type PcpserverPoolThirdPartySubnetInput interface {
	pulumi.Input

	ToPcpserverPoolThirdPartySubnetOutput() PcpserverPoolThirdPartySubnetOutput
	ToPcpserverPoolThirdPartySubnetOutputWithContext(context.Context) PcpserverPoolThirdPartySubnetOutput
}

type PcpserverPoolThirdPartySubnetArgs struct {
	// Third party subnets.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (PcpserverPoolThirdPartySubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcpserverPoolThirdPartySubnet)(nil)).Elem()
}

func (i PcpserverPoolThirdPartySubnetArgs) ToPcpserverPoolThirdPartySubnetOutput() PcpserverPoolThirdPartySubnetOutput {
	return i.ToPcpserverPoolThirdPartySubnetOutputWithContext(context.Background())
}

func (i PcpserverPoolThirdPartySubnetArgs) ToPcpserverPoolThirdPartySubnetOutputWithContext(ctx context.Context) PcpserverPoolThirdPartySubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcpserverPoolThirdPartySubnetOutput)
}

// PcpserverPoolThirdPartySubnetArrayInput is an input type that accepts PcpserverPoolThirdPartySubnetArray and PcpserverPoolThirdPartySubnetArrayOutput values.
// You can construct a concrete instance of `PcpserverPoolThirdPartySubnetArrayInput` via:
//
//	PcpserverPoolThirdPartySubnetArray{ PcpserverPoolThirdPartySubnetArgs{...} }
type PcpserverPoolThirdPartySubnetArrayInput interface {
	pulumi.Input

	ToPcpserverPoolThirdPartySubnetArrayOutput() PcpserverPoolThirdPartySubnetArrayOutput
	ToPcpserverPoolThirdPartySubnetArrayOutputWithContext(context.Context) PcpserverPoolThirdPartySubnetArrayOutput
}

type PcpserverPoolThirdPartySubnetArray []PcpserverPoolThirdPartySubnetInput

func (PcpserverPoolThirdPartySubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcpserverPoolThirdPartySubnet)(nil)).Elem()
}

func (i PcpserverPoolThirdPartySubnetArray) ToPcpserverPoolThirdPartySubnetArrayOutput() PcpserverPoolThirdPartySubnetArrayOutput {
	return i.ToPcpserverPoolThirdPartySubnetArrayOutputWithContext(context.Background())
}

func (i PcpserverPoolThirdPartySubnetArray) ToPcpserverPoolThirdPartySubnetArrayOutputWithContext(ctx context.Context) PcpserverPoolThirdPartySubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcpserverPoolThirdPartySubnetArrayOutput)
}

type PcpserverPoolThirdPartySubnetOutput struct{ *pulumi.OutputState }

func (PcpserverPoolThirdPartySubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcpserverPoolThirdPartySubnet)(nil)).Elem()
}

func (o PcpserverPoolThirdPartySubnetOutput) ToPcpserverPoolThirdPartySubnetOutput() PcpserverPoolThirdPartySubnetOutput {
	return o
}

func (o PcpserverPoolThirdPartySubnetOutput) ToPcpserverPoolThirdPartySubnetOutputWithContext(ctx context.Context) PcpserverPoolThirdPartySubnetOutput {
	return o
}

// Third party subnets.
func (o PcpserverPoolThirdPartySubnetOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcpserverPoolThirdPartySubnet) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type PcpserverPoolThirdPartySubnetArrayOutput struct{ *pulumi.OutputState }

func (PcpserverPoolThirdPartySubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcpserverPoolThirdPartySubnet)(nil)).Elem()
}

func (o PcpserverPoolThirdPartySubnetArrayOutput) ToPcpserverPoolThirdPartySubnetArrayOutput() PcpserverPoolThirdPartySubnetArrayOutput {
	return o
}

func (o PcpserverPoolThirdPartySubnetArrayOutput) ToPcpserverPoolThirdPartySubnetArrayOutputWithContext(ctx context.Context) PcpserverPoolThirdPartySubnetArrayOutput {
	return o
}

func (o PcpserverPoolThirdPartySubnetArrayOutput) Index(i pulumi.IntInput) PcpserverPoolThirdPartySubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcpserverPoolThirdPartySubnet {
		return vs[0].([]PcpserverPoolThirdPartySubnet)[vs[1].(int)]
	}).(PcpserverPoolThirdPartySubnetOutput)
}

type PtpServerInterface struct {
	// End to end delay detection or peer to peer delay detection. Valid values: `E2E`, `P2P`.
	DelayMechanism *string `pulumi:"delayMechanism"`
	// ID.
	Id *int `pulumi:"id"`
	// Interface name.
	ServerInterfaceName *string `pulumi:"serverInterfaceName"`
}

// PtpServerInterfaceInput is an input type that accepts PtpServerInterfaceArgs and PtpServerInterfaceOutput values.
// You can construct a concrete instance of `PtpServerInterfaceInput` via:
//
//	PtpServerInterfaceArgs{...}
type PtpServerInterfaceInput interface {
	pulumi.Input

	ToPtpServerInterfaceOutput() PtpServerInterfaceOutput
	ToPtpServerInterfaceOutputWithContext(context.Context) PtpServerInterfaceOutput
}

type PtpServerInterfaceArgs struct {
	// End to end delay detection or peer to peer delay detection. Valid values: `E2E`, `P2P`.
	DelayMechanism pulumi.StringPtrInput `pulumi:"delayMechanism"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface name.
	ServerInterfaceName pulumi.StringPtrInput `pulumi:"serverInterfaceName"`
}

func (PtpServerInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PtpServerInterface)(nil)).Elem()
}

func (i PtpServerInterfaceArgs) ToPtpServerInterfaceOutput() PtpServerInterfaceOutput {
	return i.ToPtpServerInterfaceOutputWithContext(context.Background())
}

func (i PtpServerInterfaceArgs) ToPtpServerInterfaceOutputWithContext(ctx context.Context) PtpServerInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PtpServerInterfaceOutput)
}

// PtpServerInterfaceArrayInput is an input type that accepts PtpServerInterfaceArray and PtpServerInterfaceArrayOutput values.
// You can construct a concrete instance of `PtpServerInterfaceArrayInput` via:
//
//	PtpServerInterfaceArray{ PtpServerInterfaceArgs{...} }
type PtpServerInterfaceArrayInput interface {
	pulumi.Input

	ToPtpServerInterfaceArrayOutput() PtpServerInterfaceArrayOutput
	ToPtpServerInterfaceArrayOutputWithContext(context.Context) PtpServerInterfaceArrayOutput
}

type PtpServerInterfaceArray []PtpServerInterfaceInput

func (PtpServerInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtpServerInterface)(nil)).Elem()
}

func (i PtpServerInterfaceArray) ToPtpServerInterfaceArrayOutput() PtpServerInterfaceArrayOutput {
	return i.ToPtpServerInterfaceArrayOutputWithContext(context.Background())
}

func (i PtpServerInterfaceArray) ToPtpServerInterfaceArrayOutputWithContext(ctx context.Context) PtpServerInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PtpServerInterfaceArrayOutput)
}

type PtpServerInterfaceOutput struct{ *pulumi.OutputState }

func (PtpServerInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PtpServerInterface)(nil)).Elem()
}

func (o PtpServerInterfaceOutput) ToPtpServerInterfaceOutput() PtpServerInterfaceOutput {
	return o
}

func (o PtpServerInterfaceOutput) ToPtpServerInterfaceOutputWithContext(ctx context.Context) PtpServerInterfaceOutput {
	return o
}

// End to end delay detection or peer to peer delay detection. Valid values: `E2E`, `P2P`.
func (o PtpServerInterfaceOutput) DelayMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PtpServerInterface) *string { return v.DelayMechanism }).(pulumi.StringPtrOutput)
}

// ID.
func (o PtpServerInterfaceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PtpServerInterface) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o PtpServerInterfaceOutput) ServerInterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PtpServerInterface) *string { return v.ServerInterfaceName }).(pulumi.StringPtrOutput)
}

type PtpServerInterfaceArrayOutput struct{ *pulumi.OutputState }

func (PtpServerInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtpServerInterface)(nil)).Elem()
}

func (o PtpServerInterfaceArrayOutput) ToPtpServerInterfaceArrayOutput() PtpServerInterfaceArrayOutput {
	return o
}

func (o PtpServerInterfaceArrayOutput) ToPtpServerInterfaceArrayOutputWithContext(ctx context.Context) PtpServerInterfaceArrayOutput {
	return o
}

func (o PtpServerInterfaceArrayOutput) Index(i pulumi.IntInput) PtpServerInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PtpServerInterface {
		return vs[0].([]PtpServerInterface)[vs[1].(int)]
	}).(PtpServerInterfaceOutput)
}

type ReplacemsggroupAdmin struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupAdminInput is an input type that accepts ReplacemsggroupAdminArgs and ReplacemsggroupAdminOutput values.
// You can construct a concrete instance of `ReplacemsggroupAdminInput` via:
//
//	ReplacemsggroupAdminArgs{...}
type ReplacemsggroupAdminInput interface {
	pulumi.Input

	ToReplacemsggroupAdminOutput() ReplacemsggroupAdminOutput
	ToReplacemsggroupAdminOutputWithContext(context.Context) ReplacemsggroupAdminOutput
}

type ReplacemsggroupAdminArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupAdminArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupAdmin)(nil)).Elem()
}

func (i ReplacemsggroupAdminArgs) ToReplacemsggroupAdminOutput() ReplacemsggroupAdminOutput {
	return i.ToReplacemsggroupAdminOutputWithContext(context.Background())
}

func (i ReplacemsggroupAdminArgs) ToReplacemsggroupAdminOutputWithContext(ctx context.Context) ReplacemsggroupAdminOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupAdminOutput)
}

// ReplacemsggroupAdminArrayInput is an input type that accepts ReplacemsggroupAdminArray and ReplacemsggroupAdminArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupAdminArrayInput` via:
//
//	ReplacemsggroupAdminArray{ ReplacemsggroupAdminArgs{...} }
type ReplacemsggroupAdminArrayInput interface {
	pulumi.Input

	ToReplacemsggroupAdminArrayOutput() ReplacemsggroupAdminArrayOutput
	ToReplacemsggroupAdminArrayOutputWithContext(context.Context) ReplacemsggroupAdminArrayOutput
}

type ReplacemsggroupAdminArray []ReplacemsggroupAdminInput

func (ReplacemsggroupAdminArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupAdmin)(nil)).Elem()
}

func (i ReplacemsggroupAdminArray) ToReplacemsggroupAdminArrayOutput() ReplacemsggroupAdminArrayOutput {
	return i.ToReplacemsggroupAdminArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupAdminArray) ToReplacemsggroupAdminArrayOutputWithContext(ctx context.Context) ReplacemsggroupAdminArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupAdminArrayOutput)
}

type ReplacemsggroupAdminOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupAdminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupAdmin)(nil)).Elem()
}

func (o ReplacemsggroupAdminOutput) ToReplacemsggroupAdminOutput() ReplacemsggroupAdminOutput {
	return o
}

func (o ReplacemsggroupAdminOutput) ToReplacemsggroupAdminOutputWithContext(ctx context.Context) ReplacemsggroupAdminOutput {
	return o
}

// Message string.
func (o ReplacemsggroupAdminOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAdmin) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupAdminOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAdmin) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupAdminOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAdmin) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupAdminOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAdmin) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupAdminArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupAdminArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupAdmin)(nil)).Elem()
}

func (o ReplacemsggroupAdminArrayOutput) ToReplacemsggroupAdminArrayOutput() ReplacemsggroupAdminArrayOutput {
	return o
}

func (o ReplacemsggroupAdminArrayOutput) ToReplacemsggroupAdminArrayOutputWithContext(ctx context.Context) ReplacemsggroupAdminArrayOutput {
	return o
}

func (o ReplacemsggroupAdminArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupAdminOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupAdmin {
		return vs[0].([]ReplacemsggroupAdmin)[vs[1].(int)]
	}).(ReplacemsggroupAdminOutput)
}

type ReplacemsggroupAlertmail struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupAlertmailInput is an input type that accepts ReplacemsggroupAlertmailArgs and ReplacemsggroupAlertmailOutput values.
// You can construct a concrete instance of `ReplacemsggroupAlertmailInput` via:
//
//	ReplacemsggroupAlertmailArgs{...}
type ReplacemsggroupAlertmailInput interface {
	pulumi.Input

	ToReplacemsggroupAlertmailOutput() ReplacemsggroupAlertmailOutput
	ToReplacemsggroupAlertmailOutputWithContext(context.Context) ReplacemsggroupAlertmailOutput
}

type ReplacemsggroupAlertmailArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupAlertmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupAlertmail)(nil)).Elem()
}

func (i ReplacemsggroupAlertmailArgs) ToReplacemsggroupAlertmailOutput() ReplacemsggroupAlertmailOutput {
	return i.ToReplacemsggroupAlertmailOutputWithContext(context.Background())
}

func (i ReplacemsggroupAlertmailArgs) ToReplacemsggroupAlertmailOutputWithContext(ctx context.Context) ReplacemsggroupAlertmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupAlertmailOutput)
}

// ReplacemsggroupAlertmailArrayInput is an input type that accepts ReplacemsggroupAlertmailArray and ReplacemsggroupAlertmailArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupAlertmailArrayInput` via:
//
//	ReplacemsggroupAlertmailArray{ ReplacemsggroupAlertmailArgs{...} }
type ReplacemsggroupAlertmailArrayInput interface {
	pulumi.Input

	ToReplacemsggroupAlertmailArrayOutput() ReplacemsggroupAlertmailArrayOutput
	ToReplacemsggroupAlertmailArrayOutputWithContext(context.Context) ReplacemsggroupAlertmailArrayOutput
}

type ReplacemsggroupAlertmailArray []ReplacemsggroupAlertmailInput

func (ReplacemsggroupAlertmailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupAlertmail)(nil)).Elem()
}

func (i ReplacemsggroupAlertmailArray) ToReplacemsggroupAlertmailArrayOutput() ReplacemsggroupAlertmailArrayOutput {
	return i.ToReplacemsggroupAlertmailArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupAlertmailArray) ToReplacemsggroupAlertmailArrayOutputWithContext(ctx context.Context) ReplacemsggroupAlertmailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupAlertmailArrayOutput)
}

type ReplacemsggroupAlertmailOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupAlertmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupAlertmail)(nil)).Elem()
}

func (o ReplacemsggroupAlertmailOutput) ToReplacemsggroupAlertmailOutput() ReplacemsggroupAlertmailOutput {
	return o
}

func (o ReplacemsggroupAlertmailOutput) ToReplacemsggroupAlertmailOutputWithContext(ctx context.Context) ReplacemsggroupAlertmailOutput {
	return o
}

// Message string.
func (o ReplacemsggroupAlertmailOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAlertmail) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupAlertmailOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAlertmail) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupAlertmailOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAlertmail) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupAlertmailOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAlertmail) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupAlertmailArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupAlertmailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupAlertmail)(nil)).Elem()
}

func (o ReplacemsggroupAlertmailArrayOutput) ToReplacemsggroupAlertmailArrayOutput() ReplacemsggroupAlertmailArrayOutput {
	return o
}

func (o ReplacemsggroupAlertmailArrayOutput) ToReplacemsggroupAlertmailArrayOutputWithContext(ctx context.Context) ReplacemsggroupAlertmailArrayOutput {
	return o
}

func (o ReplacemsggroupAlertmailArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupAlertmailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupAlertmail {
		return vs[0].([]ReplacemsggroupAlertmail)[vs[1].(int)]
	}).(ReplacemsggroupAlertmailOutput)
}

type ReplacemsggroupAuth struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupAuthInput is an input type that accepts ReplacemsggroupAuthArgs and ReplacemsggroupAuthOutput values.
// You can construct a concrete instance of `ReplacemsggroupAuthInput` via:
//
//	ReplacemsggroupAuthArgs{...}
type ReplacemsggroupAuthInput interface {
	pulumi.Input

	ToReplacemsggroupAuthOutput() ReplacemsggroupAuthOutput
	ToReplacemsggroupAuthOutputWithContext(context.Context) ReplacemsggroupAuthOutput
}

type ReplacemsggroupAuthArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupAuth)(nil)).Elem()
}

func (i ReplacemsggroupAuthArgs) ToReplacemsggroupAuthOutput() ReplacemsggroupAuthOutput {
	return i.ToReplacemsggroupAuthOutputWithContext(context.Background())
}

func (i ReplacemsggroupAuthArgs) ToReplacemsggroupAuthOutputWithContext(ctx context.Context) ReplacemsggroupAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupAuthOutput)
}

// ReplacemsggroupAuthArrayInput is an input type that accepts ReplacemsggroupAuthArray and ReplacemsggroupAuthArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupAuthArrayInput` via:
//
//	ReplacemsggroupAuthArray{ ReplacemsggroupAuthArgs{...} }
type ReplacemsggroupAuthArrayInput interface {
	pulumi.Input

	ToReplacemsggroupAuthArrayOutput() ReplacemsggroupAuthArrayOutput
	ToReplacemsggroupAuthArrayOutputWithContext(context.Context) ReplacemsggroupAuthArrayOutput
}

type ReplacemsggroupAuthArray []ReplacemsggroupAuthInput

func (ReplacemsggroupAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupAuth)(nil)).Elem()
}

func (i ReplacemsggroupAuthArray) ToReplacemsggroupAuthArrayOutput() ReplacemsggroupAuthArrayOutput {
	return i.ToReplacemsggroupAuthArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupAuthArray) ToReplacemsggroupAuthArrayOutputWithContext(ctx context.Context) ReplacemsggroupAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupAuthArrayOutput)
}

type ReplacemsggroupAuthOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupAuth)(nil)).Elem()
}

func (o ReplacemsggroupAuthOutput) ToReplacemsggroupAuthOutput() ReplacemsggroupAuthOutput {
	return o
}

func (o ReplacemsggroupAuthOutput) ToReplacemsggroupAuthOutputWithContext(ctx context.Context) ReplacemsggroupAuthOutput {
	return o
}

// Message string.
func (o ReplacemsggroupAuthOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAuth) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupAuthOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAuth) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupAuthOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAuth) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupAuthOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAuth) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupAuthArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupAuth)(nil)).Elem()
}

func (o ReplacemsggroupAuthArrayOutput) ToReplacemsggroupAuthArrayOutput() ReplacemsggroupAuthArrayOutput {
	return o
}

func (o ReplacemsggroupAuthArrayOutput) ToReplacemsggroupAuthArrayOutputWithContext(ctx context.Context) ReplacemsggroupAuthArrayOutput {
	return o
}

func (o ReplacemsggroupAuthArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupAuth {
		return vs[0].([]ReplacemsggroupAuth)[vs[1].(int)]
	}).(ReplacemsggroupAuthOutput)
}

type ReplacemsggroupAutomation struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupAutomationInput is an input type that accepts ReplacemsggroupAutomationArgs and ReplacemsggroupAutomationOutput values.
// You can construct a concrete instance of `ReplacemsggroupAutomationInput` via:
//
//	ReplacemsggroupAutomationArgs{...}
type ReplacemsggroupAutomationInput interface {
	pulumi.Input

	ToReplacemsggroupAutomationOutput() ReplacemsggroupAutomationOutput
	ToReplacemsggroupAutomationOutputWithContext(context.Context) ReplacemsggroupAutomationOutput
}

type ReplacemsggroupAutomationArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupAutomation)(nil)).Elem()
}

func (i ReplacemsggroupAutomationArgs) ToReplacemsggroupAutomationOutput() ReplacemsggroupAutomationOutput {
	return i.ToReplacemsggroupAutomationOutputWithContext(context.Background())
}

func (i ReplacemsggroupAutomationArgs) ToReplacemsggroupAutomationOutputWithContext(ctx context.Context) ReplacemsggroupAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupAutomationOutput)
}

// ReplacemsggroupAutomationArrayInput is an input type that accepts ReplacemsggroupAutomationArray and ReplacemsggroupAutomationArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupAutomationArrayInput` via:
//
//	ReplacemsggroupAutomationArray{ ReplacemsggroupAutomationArgs{...} }
type ReplacemsggroupAutomationArrayInput interface {
	pulumi.Input

	ToReplacemsggroupAutomationArrayOutput() ReplacemsggroupAutomationArrayOutput
	ToReplacemsggroupAutomationArrayOutputWithContext(context.Context) ReplacemsggroupAutomationArrayOutput
}

type ReplacemsggroupAutomationArray []ReplacemsggroupAutomationInput

func (ReplacemsggroupAutomationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupAutomation)(nil)).Elem()
}

func (i ReplacemsggroupAutomationArray) ToReplacemsggroupAutomationArrayOutput() ReplacemsggroupAutomationArrayOutput {
	return i.ToReplacemsggroupAutomationArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupAutomationArray) ToReplacemsggroupAutomationArrayOutputWithContext(ctx context.Context) ReplacemsggroupAutomationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupAutomationArrayOutput)
}

type ReplacemsggroupAutomationOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupAutomation)(nil)).Elem()
}

func (o ReplacemsggroupAutomationOutput) ToReplacemsggroupAutomationOutput() ReplacemsggroupAutomationOutput {
	return o
}

func (o ReplacemsggroupAutomationOutput) ToReplacemsggroupAutomationOutputWithContext(ctx context.Context) ReplacemsggroupAutomationOutput {
	return o
}

// Message string.
func (o ReplacemsggroupAutomationOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAutomation) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag. Valid values: `none`, `text`, `html`.
func (o ReplacemsggroupAutomationOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAutomation) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupAutomationOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAutomation) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupAutomationOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupAutomation) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupAutomationArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupAutomationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupAutomation)(nil)).Elem()
}

func (o ReplacemsggroupAutomationArrayOutput) ToReplacemsggroupAutomationArrayOutput() ReplacemsggroupAutomationArrayOutput {
	return o
}

func (o ReplacemsggroupAutomationArrayOutput) ToReplacemsggroupAutomationArrayOutputWithContext(ctx context.Context) ReplacemsggroupAutomationArrayOutput {
	return o
}

func (o ReplacemsggroupAutomationArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupAutomationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupAutomation {
		return vs[0].([]ReplacemsggroupAutomation)[vs[1].(int)]
	}).(ReplacemsggroupAutomationOutput)
}

type ReplacemsggroupCustomMessage struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupCustomMessageInput is an input type that accepts ReplacemsggroupCustomMessageArgs and ReplacemsggroupCustomMessageOutput values.
// You can construct a concrete instance of `ReplacemsggroupCustomMessageInput` via:
//
//	ReplacemsggroupCustomMessageArgs{...}
type ReplacemsggroupCustomMessageInput interface {
	pulumi.Input

	ToReplacemsggroupCustomMessageOutput() ReplacemsggroupCustomMessageOutput
	ToReplacemsggroupCustomMessageOutputWithContext(context.Context) ReplacemsggroupCustomMessageOutput
}

type ReplacemsggroupCustomMessageArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupCustomMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupCustomMessage)(nil)).Elem()
}

func (i ReplacemsggroupCustomMessageArgs) ToReplacemsggroupCustomMessageOutput() ReplacemsggroupCustomMessageOutput {
	return i.ToReplacemsggroupCustomMessageOutputWithContext(context.Background())
}

func (i ReplacemsggroupCustomMessageArgs) ToReplacemsggroupCustomMessageOutputWithContext(ctx context.Context) ReplacemsggroupCustomMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupCustomMessageOutput)
}

// ReplacemsggroupCustomMessageArrayInput is an input type that accepts ReplacemsggroupCustomMessageArray and ReplacemsggroupCustomMessageArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupCustomMessageArrayInput` via:
//
//	ReplacemsggroupCustomMessageArray{ ReplacemsggroupCustomMessageArgs{...} }
type ReplacemsggroupCustomMessageArrayInput interface {
	pulumi.Input

	ToReplacemsggroupCustomMessageArrayOutput() ReplacemsggroupCustomMessageArrayOutput
	ToReplacemsggroupCustomMessageArrayOutputWithContext(context.Context) ReplacemsggroupCustomMessageArrayOutput
}

type ReplacemsggroupCustomMessageArray []ReplacemsggroupCustomMessageInput

func (ReplacemsggroupCustomMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupCustomMessage)(nil)).Elem()
}

func (i ReplacemsggroupCustomMessageArray) ToReplacemsggroupCustomMessageArrayOutput() ReplacemsggroupCustomMessageArrayOutput {
	return i.ToReplacemsggroupCustomMessageArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupCustomMessageArray) ToReplacemsggroupCustomMessageArrayOutputWithContext(ctx context.Context) ReplacemsggroupCustomMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupCustomMessageArrayOutput)
}

type ReplacemsggroupCustomMessageOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupCustomMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupCustomMessage)(nil)).Elem()
}

func (o ReplacemsggroupCustomMessageOutput) ToReplacemsggroupCustomMessageOutput() ReplacemsggroupCustomMessageOutput {
	return o
}

func (o ReplacemsggroupCustomMessageOutput) ToReplacemsggroupCustomMessageOutputWithContext(ctx context.Context) ReplacemsggroupCustomMessageOutput {
	return o
}

// Message string.
func (o ReplacemsggroupCustomMessageOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupCustomMessage) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupCustomMessageOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupCustomMessage) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupCustomMessageOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupCustomMessage) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupCustomMessageOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupCustomMessage) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupCustomMessageArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupCustomMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupCustomMessage)(nil)).Elem()
}

func (o ReplacemsggroupCustomMessageArrayOutput) ToReplacemsggroupCustomMessageArrayOutput() ReplacemsggroupCustomMessageArrayOutput {
	return o
}

func (o ReplacemsggroupCustomMessageArrayOutput) ToReplacemsggroupCustomMessageArrayOutputWithContext(ctx context.Context) ReplacemsggroupCustomMessageArrayOutput {
	return o
}

func (o ReplacemsggroupCustomMessageArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupCustomMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupCustomMessage {
		return vs[0].([]ReplacemsggroupCustomMessage)[vs[1].(int)]
	}).(ReplacemsggroupCustomMessageOutput)
}

type ReplacemsggroupDeviceDetectionPortal struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupDeviceDetectionPortalInput is an input type that accepts ReplacemsggroupDeviceDetectionPortalArgs and ReplacemsggroupDeviceDetectionPortalOutput values.
// You can construct a concrete instance of `ReplacemsggroupDeviceDetectionPortalInput` via:
//
//	ReplacemsggroupDeviceDetectionPortalArgs{...}
type ReplacemsggroupDeviceDetectionPortalInput interface {
	pulumi.Input

	ToReplacemsggroupDeviceDetectionPortalOutput() ReplacemsggroupDeviceDetectionPortalOutput
	ToReplacemsggroupDeviceDetectionPortalOutputWithContext(context.Context) ReplacemsggroupDeviceDetectionPortalOutput
}

type ReplacemsggroupDeviceDetectionPortalArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupDeviceDetectionPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (i ReplacemsggroupDeviceDetectionPortalArgs) ToReplacemsggroupDeviceDetectionPortalOutput() ReplacemsggroupDeviceDetectionPortalOutput {
	return i.ToReplacemsggroupDeviceDetectionPortalOutputWithContext(context.Background())
}

func (i ReplacemsggroupDeviceDetectionPortalArgs) ToReplacemsggroupDeviceDetectionPortalOutputWithContext(ctx context.Context) ReplacemsggroupDeviceDetectionPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupDeviceDetectionPortalOutput)
}

// ReplacemsggroupDeviceDetectionPortalArrayInput is an input type that accepts ReplacemsggroupDeviceDetectionPortalArray and ReplacemsggroupDeviceDetectionPortalArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupDeviceDetectionPortalArrayInput` via:
//
//	ReplacemsggroupDeviceDetectionPortalArray{ ReplacemsggroupDeviceDetectionPortalArgs{...} }
type ReplacemsggroupDeviceDetectionPortalArrayInput interface {
	pulumi.Input

	ToReplacemsggroupDeviceDetectionPortalArrayOutput() ReplacemsggroupDeviceDetectionPortalArrayOutput
	ToReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(context.Context) ReplacemsggroupDeviceDetectionPortalArrayOutput
}

type ReplacemsggroupDeviceDetectionPortalArray []ReplacemsggroupDeviceDetectionPortalInput

func (ReplacemsggroupDeviceDetectionPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (i ReplacemsggroupDeviceDetectionPortalArray) ToReplacemsggroupDeviceDetectionPortalArrayOutput() ReplacemsggroupDeviceDetectionPortalArrayOutput {
	return i.ToReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupDeviceDetectionPortalArray) ToReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(ctx context.Context) ReplacemsggroupDeviceDetectionPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupDeviceDetectionPortalArrayOutput)
}

type ReplacemsggroupDeviceDetectionPortalOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupDeviceDetectionPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (o ReplacemsggroupDeviceDetectionPortalOutput) ToReplacemsggroupDeviceDetectionPortalOutput() ReplacemsggroupDeviceDetectionPortalOutput {
	return o
}

func (o ReplacemsggroupDeviceDetectionPortalOutput) ToReplacemsggroupDeviceDetectionPortalOutputWithContext(ctx context.Context) ReplacemsggroupDeviceDetectionPortalOutput {
	return o
}

// Message string.
func (o ReplacemsggroupDeviceDetectionPortalOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupDeviceDetectionPortal) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupDeviceDetectionPortalOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupDeviceDetectionPortal) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupDeviceDetectionPortalOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupDeviceDetectionPortal) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupDeviceDetectionPortalOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupDeviceDetectionPortal) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupDeviceDetectionPortalArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupDeviceDetectionPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (o ReplacemsggroupDeviceDetectionPortalArrayOutput) ToReplacemsggroupDeviceDetectionPortalArrayOutput() ReplacemsggroupDeviceDetectionPortalArrayOutput {
	return o
}

func (o ReplacemsggroupDeviceDetectionPortalArrayOutput) ToReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(ctx context.Context) ReplacemsggroupDeviceDetectionPortalArrayOutput {
	return o
}

func (o ReplacemsggroupDeviceDetectionPortalArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupDeviceDetectionPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupDeviceDetectionPortal {
		return vs[0].([]ReplacemsggroupDeviceDetectionPortal)[vs[1].(int)]
	}).(ReplacemsggroupDeviceDetectionPortalOutput)
}

type ReplacemsggroupEc struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`, `wml`.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupEcInput is an input type that accepts ReplacemsggroupEcArgs and ReplacemsggroupEcOutput values.
// You can construct a concrete instance of `ReplacemsggroupEcInput` via:
//
//	ReplacemsggroupEcArgs{...}
type ReplacemsggroupEcInput interface {
	pulumi.Input

	ToReplacemsggroupEcOutput() ReplacemsggroupEcOutput
	ToReplacemsggroupEcOutputWithContext(context.Context) ReplacemsggroupEcOutput
}

type ReplacemsggroupEcArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`, `wml`.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupEcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupEc)(nil)).Elem()
}

func (i ReplacemsggroupEcArgs) ToReplacemsggroupEcOutput() ReplacemsggroupEcOutput {
	return i.ToReplacemsggroupEcOutputWithContext(context.Background())
}

func (i ReplacemsggroupEcArgs) ToReplacemsggroupEcOutputWithContext(ctx context.Context) ReplacemsggroupEcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupEcOutput)
}

// ReplacemsggroupEcArrayInput is an input type that accepts ReplacemsggroupEcArray and ReplacemsggroupEcArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupEcArrayInput` via:
//
//	ReplacemsggroupEcArray{ ReplacemsggroupEcArgs{...} }
type ReplacemsggroupEcArrayInput interface {
	pulumi.Input

	ToReplacemsggroupEcArrayOutput() ReplacemsggroupEcArrayOutput
	ToReplacemsggroupEcArrayOutputWithContext(context.Context) ReplacemsggroupEcArrayOutput
}

type ReplacemsggroupEcArray []ReplacemsggroupEcInput

func (ReplacemsggroupEcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupEc)(nil)).Elem()
}

func (i ReplacemsggroupEcArray) ToReplacemsggroupEcArrayOutput() ReplacemsggroupEcArrayOutput {
	return i.ToReplacemsggroupEcArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupEcArray) ToReplacemsggroupEcArrayOutputWithContext(ctx context.Context) ReplacemsggroupEcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupEcArrayOutput)
}

type ReplacemsggroupEcOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupEcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupEc)(nil)).Elem()
}

func (o ReplacemsggroupEcOutput) ToReplacemsggroupEcOutput() ReplacemsggroupEcOutput {
	return o
}

func (o ReplacemsggroupEcOutput) ToReplacemsggroupEcOutputWithContext(ctx context.Context) ReplacemsggroupEcOutput {
	return o
}

// Message string.
func (o ReplacemsggroupEcOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupEc) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag. Valid values: `none`, `text`, `html`, `wml`.
func (o ReplacemsggroupEcOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupEc) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupEcOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupEc) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupEcOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupEc) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupEcArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupEcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupEc)(nil)).Elem()
}

func (o ReplacemsggroupEcArrayOutput) ToReplacemsggroupEcArrayOutput() ReplacemsggroupEcArrayOutput {
	return o
}

func (o ReplacemsggroupEcArrayOutput) ToReplacemsggroupEcArrayOutputWithContext(ctx context.Context) ReplacemsggroupEcArrayOutput {
	return o
}

func (o ReplacemsggroupEcArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupEcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupEc {
		return vs[0].([]ReplacemsggroupEc)[vs[1].(int)]
	}).(ReplacemsggroupEcOutput)
}

type ReplacemsggroupFortiguardWf struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupFortiguardWfInput is an input type that accepts ReplacemsggroupFortiguardWfArgs and ReplacemsggroupFortiguardWfOutput values.
// You can construct a concrete instance of `ReplacemsggroupFortiguardWfInput` via:
//
//	ReplacemsggroupFortiguardWfArgs{...}
type ReplacemsggroupFortiguardWfInput interface {
	pulumi.Input

	ToReplacemsggroupFortiguardWfOutput() ReplacemsggroupFortiguardWfOutput
	ToReplacemsggroupFortiguardWfOutputWithContext(context.Context) ReplacemsggroupFortiguardWfOutput
}

type ReplacemsggroupFortiguardWfArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupFortiguardWfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (i ReplacemsggroupFortiguardWfArgs) ToReplacemsggroupFortiguardWfOutput() ReplacemsggroupFortiguardWfOutput {
	return i.ToReplacemsggroupFortiguardWfOutputWithContext(context.Background())
}

func (i ReplacemsggroupFortiguardWfArgs) ToReplacemsggroupFortiguardWfOutputWithContext(ctx context.Context) ReplacemsggroupFortiguardWfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupFortiguardWfOutput)
}

// ReplacemsggroupFortiguardWfArrayInput is an input type that accepts ReplacemsggroupFortiguardWfArray and ReplacemsggroupFortiguardWfArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupFortiguardWfArrayInput` via:
//
//	ReplacemsggroupFortiguardWfArray{ ReplacemsggroupFortiguardWfArgs{...} }
type ReplacemsggroupFortiguardWfArrayInput interface {
	pulumi.Input

	ToReplacemsggroupFortiguardWfArrayOutput() ReplacemsggroupFortiguardWfArrayOutput
	ToReplacemsggroupFortiguardWfArrayOutputWithContext(context.Context) ReplacemsggroupFortiguardWfArrayOutput
}

type ReplacemsggroupFortiguardWfArray []ReplacemsggroupFortiguardWfInput

func (ReplacemsggroupFortiguardWfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (i ReplacemsggroupFortiguardWfArray) ToReplacemsggroupFortiguardWfArrayOutput() ReplacemsggroupFortiguardWfArrayOutput {
	return i.ToReplacemsggroupFortiguardWfArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupFortiguardWfArray) ToReplacemsggroupFortiguardWfArrayOutputWithContext(ctx context.Context) ReplacemsggroupFortiguardWfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupFortiguardWfArrayOutput)
}

type ReplacemsggroupFortiguardWfOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupFortiguardWfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (o ReplacemsggroupFortiguardWfOutput) ToReplacemsggroupFortiguardWfOutput() ReplacemsggroupFortiguardWfOutput {
	return o
}

func (o ReplacemsggroupFortiguardWfOutput) ToReplacemsggroupFortiguardWfOutputWithContext(ctx context.Context) ReplacemsggroupFortiguardWfOutput {
	return o
}

// Message string.
func (o ReplacemsggroupFortiguardWfOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupFortiguardWf) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupFortiguardWfOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupFortiguardWf) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupFortiguardWfOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupFortiguardWf) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupFortiguardWfOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupFortiguardWf) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupFortiguardWfArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupFortiguardWfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (o ReplacemsggroupFortiguardWfArrayOutput) ToReplacemsggroupFortiguardWfArrayOutput() ReplacemsggroupFortiguardWfArrayOutput {
	return o
}

func (o ReplacemsggroupFortiguardWfArrayOutput) ToReplacemsggroupFortiguardWfArrayOutputWithContext(ctx context.Context) ReplacemsggroupFortiguardWfArrayOutput {
	return o
}

func (o ReplacemsggroupFortiguardWfArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupFortiguardWfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupFortiguardWf {
		return vs[0].([]ReplacemsggroupFortiguardWf)[vs[1].(int)]
	}).(ReplacemsggroupFortiguardWfOutput)
}

type ReplacemsggroupFtp struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupFtpInput is an input type that accepts ReplacemsggroupFtpArgs and ReplacemsggroupFtpOutput values.
// You can construct a concrete instance of `ReplacemsggroupFtpInput` via:
//
//	ReplacemsggroupFtpArgs{...}
type ReplacemsggroupFtpInput interface {
	pulumi.Input

	ToReplacemsggroupFtpOutput() ReplacemsggroupFtpOutput
	ToReplacemsggroupFtpOutputWithContext(context.Context) ReplacemsggroupFtpOutput
}

type ReplacemsggroupFtpArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupFtp)(nil)).Elem()
}

func (i ReplacemsggroupFtpArgs) ToReplacemsggroupFtpOutput() ReplacemsggroupFtpOutput {
	return i.ToReplacemsggroupFtpOutputWithContext(context.Background())
}

func (i ReplacemsggroupFtpArgs) ToReplacemsggroupFtpOutputWithContext(ctx context.Context) ReplacemsggroupFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupFtpOutput)
}

// ReplacemsggroupFtpArrayInput is an input type that accepts ReplacemsggroupFtpArray and ReplacemsggroupFtpArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupFtpArrayInput` via:
//
//	ReplacemsggroupFtpArray{ ReplacemsggroupFtpArgs{...} }
type ReplacemsggroupFtpArrayInput interface {
	pulumi.Input

	ToReplacemsggroupFtpArrayOutput() ReplacemsggroupFtpArrayOutput
	ToReplacemsggroupFtpArrayOutputWithContext(context.Context) ReplacemsggroupFtpArrayOutput
}

type ReplacemsggroupFtpArray []ReplacemsggroupFtpInput

func (ReplacemsggroupFtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupFtp)(nil)).Elem()
}

func (i ReplacemsggroupFtpArray) ToReplacemsggroupFtpArrayOutput() ReplacemsggroupFtpArrayOutput {
	return i.ToReplacemsggroupFtpArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupFtpArray) ToReplacemsggroupFtpArrayOutputWithContext(ctx context.Context) ReplacemsggroupFtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupFtpArrayOutput)
}

type ReplacemsggroupFtpOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupFtp)(nil)).Elem()
}

func (o ReplacemsggroupFtpOutput) ToReplacemsggroupFtpOutput() ReplacemsggroupFtpOutput {
	return o
}

func (o ReplacemsggroupFtpOutput) ToReplacemsggroupFtpOutputWithContext(ctx context.Context) ReplacemsggroupFtpOutput {
	return o
}

// Message string.
func (o ReplacemsggroupFtpOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupFtp) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupFtpOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupFtp) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupFtpOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupFtp) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupFtpOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupFtp) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupFtpArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupFtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupFtp)(nil)).Elem()
}

func (o ReplacemsggroupFtpArrayOutput) ToReplacemsggroupFtpArrayOutput() ReplacemsggroupFtpArrayOutput {
	return o
}

func (o ReplacemsggroupFtpArrayOutput) ToReplacemsggroupFtpArrayOutputWithContext(ctx context.Context) ReplacemsggroupFtpArrayOutput {
	return o
}

func (o ReplacemsggroupFtpArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupFtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupFtp {
		return vs[0].([]ReplacemsggroupFtp)[vs[1].(int)]
	}).(ReplacemsggroupFtpOutput)
}

type ReplacemsggroupHttp struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupHttpInput is an input type that accepts ReplacemsggroupHttpArgs and ReplacemsggroupHttpOutput values.
// You can construct a concrete instance of `ReplacemsggroupHttpInput` via:
//
//	ReplacemsggroupHttpArgs{...}
type ReplacemsggroupHttpInput interface {
	pulumi.Input

	ToReplacemsggroupHttpOutput() ReplacemsggroupHttpOutput
	ToReplacemsggroupHttpOutputWithContext(context.Context) ReplacemsggroupHttpOutput
}

type ReplacemsggroupHttpArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupHttp)(nil)).Elem()
}

func (i ReplacemsggroupHttpArgs) ToReplacemsggroupHttpOutput() ReplacemsggroupHttpOutput {
	return i.ToReplacemsggroupHttpOutputWithContext(context.Background())
}

func (i ReplacemsggroupHttpArgs) ToReplacemsggroupHttpOutputWithContext(ctx context.Context) ReplacemsggroupHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupHttpOutput)
}

// ReplacemsggroupHttpArrayInput is an input type that accepts ReplacemsggroupHttpArray and ReplacemsggroupHttpArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupHttpArrayInput` via:
//
//	ReplacemsggroupHttpArray{ ReplacemsggroupHttpArgs{...} }
type ReplacemsggroupHttpArrayInput interface {
	pulumi.Input

	ToReplacemsggroupHttpArrayOutput() ReplacemsggroupHttpArrayOutput
	ToReplacemsggroupHttpArrayOutputWithContext(context.Context) ReplacemsggroupHttpArrayOutput
}

type ReplacemsggroupHttpArray []ReplacemsggroupHttpInput

func (ReplacemsggroupHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupHttp)(nil)).Elem()
}

func (i ReplacemsggroupHttpArray) ToReplacemsggroupHttpArrayOutput() ReplacemsggroupHttpArrayOutput {
	return i.ToReplacemsggroupHttpArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupHttpArray) ToReplacemsggroupHttpArrayOutputWithContext(ctx context.Context) ReplacemsggroupHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupHttpArrayOutput)
}

type ReplacemsggroupHttpOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupHttp)(nil)).Elem()
}

func (o ReplacemsggroupHttpOutput) ToReplacemsggroupHttpOutput() ReplacemsggroupHttpOutput {
	return o
}

func (o ReplacemsggroupHttpOutput) ToReplacemsggroupHttpOutputWithContext(ctx context.Context) ReplacemsggroupHttpOutput {
	return o
}

// Message string.
func (o ReplacemsggroupHttpOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupHttp) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupHttpOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupHttp) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupHttpOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupHttp) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupHttpOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupHttp) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupHttpArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupHttp)(nil)).Elem()
}

func (o ReplacemsggroupHttpArrayOutput) ToReplacemsggroupHttpArrayOutput() ReplacemsggroupHttpArrayOutput {
	return o
}

func (o ReplacemsggroupHttpArrayOutput) ToReplacemsggroupHttpArrayOutputWithContext(ctx context.Context) ReplacemsggroupHttpArrayOutput {
	return o
}

func (o ReplacemsggroupHttpArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupHttp {
		return vs[0].([]ReplacemsggroupHttp)[vs[1].(int)]
	}).(ReplacemsggroupHttpOutput)
}

type ReplacemsggroupIcap struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupIcapInput is an input type that accepts ReplacemsggroupIcapArgs and ReplacemsggroupIcapOutput values.
// You can construct a concrete instance of `ReplacemsggroupIcapInput` via:
//
//	ReplacemsggroupIcapArgs{...}
type ReplacemsggroupIcapInput interface {
	pulumi.Input

	ToReplacemsggroupIcapOutput() ReplacemsggroupIcapOutput
	ToReplacemsggroupIcapOutputWithContext(context.Context) ReplacemsggroupIcapOutput
}

type ReplacemsggroupIcapArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupIcapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupIcap)(nil)).Elem()
}

func (i ReplacemsggroupIcapArgs) ToReplacemsggroupIcapOutput() ReplacemsggroupIcapOutput {
	return i.ToReplacemsggroupIcapOutputWithContext(context.Background())
}

func (i ReplacemsggroupIcapArgs) ToReplacemsggroupIcapOutputWithContext(ctx context.Context) ReplacemsggroupIcapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupIcapOutput)
}

// ReplacemsggroupIcapArrayInput is an input type that accepts ReplacemsggroupIcapArray and ReplacemsggroupIcapArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupIcapArrayInput` via:
//
//	ReplacemsggroupIcapArray{ ReplacemsggroupIcapArgs{...} }
type ReplacemsggroupIcapArrayInput interface {
	pulumi.Input

	ToReplacemsggroupIcapArrayOutput() ReplacemsggroupIcapArrayOutput
	ToReplacemsggroupIcapArrayOutputWithContext(context.Context) ReplacemsggroupIcapArrayOutput
}

type ReplacemsggroupIcapArray []ReplacemsggroupIcapInput

func (ReplacemsggroupIcapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupIcap)(nil)).Elem()
}

func (i ReplacemsggroupIcapArray) ToReplacemsggroupIcapArrayOutput() ReplacemsggroupIcapArrayOutput {
	return i.ToReplacemsggroupIcapArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupIcapArray) ToReplacemsggroupIcapArrayOutputWithContext(ctx context.Context) ReplacemsggroupIcapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupIcapArrayOutput)
}

type ReplacemsggroupIcapOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupIcapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupIcap)(nil)).Elem()
}

func (o ReplacemsggroupIcapOutput) ToReplacemsggroupIcapOutput() ReplacemsggroupIcapOutput {
	return o
}

func (o ReplacemsggroupIcapOutput) ToReplacemsggroupIcapOutputWithContext(ctx context.Context) ReplacemsggroupIcapOutput {
	return o
}

// Message string.
func (o ReplacemsggroupIcapOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupIcap) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupIcapOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupIcap) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupIcapOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupIcap) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupIcapOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupIcap) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupIcapArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupIcapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupIcap)(nil)).Elem()
}

func (o ReplacemsggroupIcapArrayOutput) ToReplacemsggroupIcapArrayOutput() ReplacemsggroupIcapArrayOutput {
	return o
}

func (o ReplacemsggroupIcapArrayOutput) ToReplacemsggroupIcapArrayOutputWithContext(ctx context.Context) ReplacemsggroupIcapArrayOutput {
	return o
}

func (o ReplacemsggroupIcapArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupIcapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupIcap {
		return vs[0].([]ReplacemsggroupIcap)[vs[1].(int)]
	}).(ReplacemsggroupIcapOutput)
}

type ReplacemsggroupMail struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupMailInput is an input type that accepts ReplacemsggroupMailArgs and ReplacemsggroupMailOutput values.
// You can construct a concrete instance of `ReplacemsggroupMailInput` via:
//
//	ReplacemsggroupMailArgs{...}
type ReplacemsggroupMailInput interface {
	pulumi.Input

	ToReplacemsggroupMailOutput() ReplacemsggroupMailOutput
	ToReplacemsggroupMailOutputWithContext(context.Context) ReplacemsggroupMailOutput
}

type ReplacemsggroupMailArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupMailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupMail)(nil)).Elem()
}

func (i ReplacemsggroupMailArgs) ToReplacemsggroupMailOutput() ReplacemsggroupMailOutput {
	return i.ToReplacemsggroupMailOutputWithContext(context.Background())
}

func (i ReplacemsggroupMailArgs) ToReplacemsggroupMailOutputWithContext(ctx context.Context) ReplacemsggroupMailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupMailOutput)
}

// ReplacemsggroupMailArrayInput is an input type that accepts ReplacemsggroupMailArray and ReplacemsggroupMailArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupMailArrayInput` via:
//
//	ReplacemsggroupMailArray{ ReplacemsggroupMailArgs{...} }
type ReplacemsggroupMailArrayInput interface {
	pulumi.Input

	ToReplacemsggroupMailArrayOutput() ReplacemsggroupMailArrayOutput
	ToReplacemsggroupMailArrayOutputWithContext(context.Context) ReplacemsggroupMailArrayOutput
}

type ReplacemsggroupMailArray []ReplacemsggroupMailInput

func (ReplacemsggroupMailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupMail)(nil)).Elem()
}

func (i ReplacemsggroupMailArray) ToReplacemsggroupMailArrayOutput() ReplacemsggroupMailArrayOutput {
	return i.ToReplacemsggroupMailArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupMailArray) ToReplacemsggroupMailArrayOutputWithContext(ctx context.Context) ReplacemsggroupMailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupMailArrayOutput)
}

type ReplacemsggroupMailOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupMailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupMail)(nil)).Elem()
}

func (o ReplacemsggroupMailOutput) ToReplacemsggroupMailOutput() ReplacemsggroupMailOutput {
	return o
}

func (o ReplacemsggroupMailOutput) ToReplacemsggroupMailOutputWithContext(ctx context.Context) ReplacemsggroupMailOutput {
	return o
}

// Message string.
func (o ReplacemsggroupMailOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupMail) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupMailOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupMail) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupMailOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupMail) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupMailOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupMail) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupMailArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupMailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupMail)(nil)).Elem()
}

func (o ReplacemsggroupMailArrayOutput) ToReplacemsggroupMailArrayOutput() ReplacemsggroupMailArrayOutput {
	return o
}

func (o ReplacemsggroupMailArrayOutput) ToReplacemsggroupMailArrayOutputWithContext(ctx context.Context) ReplacemsggroupMailArrayOutput {
	return o
}

func (o ReplacemsggroupMailArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupMailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupMail {
		return vs[0].([]ReplacemsggroupMail)[vs[1].(int)]
	}).(ReplacemsggroupMailOutput)
}

type ReplacemsggroupNacQuar struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupNacQuarInput is an input type that accepts ReplacemsggroupNacQuarArgs and ReplacemsggroupNacQuarOutput values.
// You can construct a concrete instance of `ReplacemsggroupNacQuarInput` via:
//
//	ReplacemsggroupNacQuarArgs{...}
type ReplacemsggroupNacQuarInput interface {
	pulumi.Input

	ToReplacemsggroupNacQuarOutput() ReplacemsggroupNacQuarOutput
	ToReplacemsggroupNacQuarOutputWithContext(context.Context) ReplacemsggroupNacQuarOutput
}

type ReplacemsggroupNacQuarArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupNacQuarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupNacQuar)(nil)).Elem()
}

func (i ReplacemsggroupNacQuarArgs) ToReplacemsggroupNacQuarOutput() ReplacemsggroupNacQuarOutput {
	return i.ToReplacemsggroupNacQuarOutputWithContext(context.Background())
}

func (i ReplacemsggroupNacQuarArgs) ToReplacemsggroupNacQuarOutputWithContext(ctx context.Context) ReplacemsggroupNacQuarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupNacQuarOutput)
}

// ReplacemsggroupNacQuarArrayInput is an input type that accepts ReplacemsggroupNacQuarArray and ReplacemsggroupNacQuarArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupNacQuarArrayInput` via:
//
//	ReplacemsggroupNacQuarArray{ ReplacemsggroupNacQuarArgs{...} }
type ReplacemsggroupNacQuarArrayInput interface {
	pulumi.Input

	ToReplacemsggroupNacQuarArrayOutput() ReplacemsggroupNacQuarArrayOutput
	ToReplacemsggroupNacQuarArrayOutputWithContext(context.Context) ReplacemsggroupNacQuarArrayOutput
}

type ReplacemsggroupNacQuarArray []ReplacemsggroupNacQuarInput

func (ReplacemsggroupNacQuarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupNacQuar)(nil)).Elem()
}

func (i ReplacemsggroupNacQuarArray) ToReplacemsggroupNacQuarArrayOutput() ReplacemsggroupNacQuarArrayOutput {
	return i.ToReplacemsggroupNacQuarArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupNacQuarArray) ToReplacemsggroupNacQuarArrayOutputWithContext(ctx context.Context) ReplacemsggroupNacQuarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupNacQuarArrayOutput)
}

type ReplacemsggroupNacQuarOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupNacQuarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupNacQuar)(nil)).Elem()
}

func (o ReplacemsggroupNacQuarOutput) ToReplacemsggroupNacQuarOutput() ReplacemsggroupNacQuarOutput {
	return o
}

func (o ReplacemsggroupNacQuarOutput) ToReplacemsggroupNacQuarOutputWithContext(ctx context.Context) ReplacemsggroupNacQuarOutput {
	return o
}

// Message string.
func (o ReplacemsggroupNacQuarOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupNacQuar) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupNacQuarOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupNacQuar) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupNacQuarOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupNacQuar) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupNacQuarOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupNacQuar) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupNacQuarArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupNacQuarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupNacQuar)(nil)).Elem()
}

func (o ReplacemsggroupNacQuarArrayOutput) ToReplacemsggroupNacQuarArrayOutput() ReplacemsggroupNacQuarArrayOutput {
	return o
}

func (o ReplacemsggroupNacQuarArrayOutput) ToReplacemsggroupNacQuarArrayOutputWithContext(ctx context.Context) ReplacemsggroupNacQuarArrayOutput {
	return o
}

func (o ReplacemsggroupNacQuarArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupNacQuarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupNacQuar {
		return vs[0].([]ReplacemsggroupNacQuar)[vs[1].(int)]
	}).(ReplacemsggroupNacQuarOutput)
}

type ReplacemsggroupNntp struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupNntpInput is an input type that accepts ReplacemsggroupNntpArgs and ReplacemsggroupNntpOutput values.
// You can construct a concrete instance of `ReplacemsggroupNntpInput` via:
//
//	ReplacemsggroupNntpArgs{...}
type ReplacemsggroupNntpInput interface {
	pulumi.Input

	ToReplacemsggroupNntpOutput() ReplacemsggroupNntpOutput
	ToReplacemsggroupNntpOutputWithContext(context.Context) ReplacemsggroupNntpOutput
}

type ReplacemsggroupNntpArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupNntpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupNntp)(nil)).Elem()
}

func (i ReplacemsggroupNntpArgs) ToReplacemsggroupNntpOutput() ReplacemsggroupNntpOutput {
	return i.ToReplacemsggroupNntpOutputWithContext(context.Background())
}

func (i ReplacemsggroupNntpArgs) ToReplacemsggroupNntpOutputWithContext(ctx context.Context) ReplacemsggroupNntpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupNntpOutput)
}

// ReplacemsggroupNntpArrayInput is an input type that accepts ReplacemsggroupNntpArray and ReplacemsggroupNntpArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupNntpArrayInput` via:
//
//	ReplacemsggroupNntpArray{ ReplacemsggroupNntpArgs{...} }
type ReplacemsggroupNntpArrayInput interface {
	pulumi.Input

	ToReplacemsggroupNntpArrayOutput() ReplacemsggroupNntpArrayOutput
	ToReplacemsggroupNntpArrayOutputWithContext(context.Context) ReplacemsggroupNntpArrayOutput
}

type ReplacemsggroupNntpArray []ReplacemsggroupNntpInput

func (ReplacemsggroupNntpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupNntp)(nil)).Elem()
}

func (i ReplacemsggroupNntpArray) ToReplacemsggroupNntpArrayOutput() ReplacemsggroupNntpArrayOutput {
	return i.ToReplacemsggroupNntpArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupNntpArray) ToReplacemsggroupNntpArrayOutputWithContext(ctx context.Context) ReplacemsggroupNntpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupNntpArrayOutput)
}

type ReplacemsggroupNntpOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupNntpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupNntp)(nil)).Elem()
}

func (o ReplacemsggroupNntpOutput) ToReplacemsggroupNntpOutput() ReplacemsggroupNntpOutput {
	return o
}

func (o ReplacemsggroupNntpOutput) ToReplacemsggroupNntpOutputWithContext(ctx context.Context) ReplacemsggroupNntpOutput {
	return o
}

// Message string.
func (o ReplacemsggroupNntpOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupNntp) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupNntpOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupNntp) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupNntpOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupNntp) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupNntpOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupNntp) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupNntpArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupNntpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupNntp)(nil)).Elem()
}

func (o ReplacemsggroupNntpArrayOutput) ToReplacemsggroupNntpArrayOutput() ReplacemsggroupNntpArrayOutput {
	return o
}

func (o ReplacemsggroupNntpArrayOutput) ToReplacemsggroupNntpArrayOutputWithContext(ctx context.Context) ReplacemsggroupNntpArrayOutput {
	return o
}

func (o ReplacemsggroupNntpArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupNntpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupNntp {
		return vs[0].([]ReplacemsggroupNntp)[vs[1].(int)]
	}).(ReplacemsggroupNntpOutput)
}

type ReplacemsggroupSpam struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupSpamInput is an input type that accepts ReplacemsggroupSpamArgs and ReplacemsggroupSpamOutput values.
// You can construct a concrete instance of `ReplacemsggroupSpamInput` via:
//
//	ReplacemsggroupSpamArgs{...}
type ReplacemsggroupSpamInput interface {
	pulumi.Input

	ToReplacemsggroupSpamOutput() ReplacemsggroupSpamOutput
	ToReplacemsggroupSpamOutputWithContext(context.Context) ReplacemsggroupSpamOutput
}

type ReplacemsggroupSpamArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupSpamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupSpam)(nil)).Elem()
}

func (i ReplacemsggroupSpamArgs) ToReplacemsggroupSpamOutput() ReplacemsggroupSpamOutput {
	return i.ToReplacemsggroupSpamOutputWithContext(context.Background())
}

func (i ReplacemsggroupSpamArgs) ToReplacemsggroupSpamOutputWithContext(ctx context.Context) ReplacemsggroupSpamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupSpamOutput)
}

// ReplacemsggroupSpamArrayInput is an input type that accepts ReplacemsggroupSpamArray and ReplacemsggroupSpamArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupSpamArrayInput` via:
//
//	ReplacemsggroupSpamArray{ ReplacemsggroupSpamArgs{...} }
type ReplacemsggroupSpamArrayInput interface {
	pulumi.Input

	ToReplacemsggroupSpamArrayOutput() ReplacemsggroupSpamArrayOutput
	ToReplacemsggroupSpamArrayOutputWithContext(context.Context) ReplacemsggroupSpamArrayOutput
}

type ReplacemsggroupSpamArray []ReplacemsggroupSpamInput

func (ReplacemsggroupSpamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupSpam)(nil)).Elem()
}

func (i ReplacemsggroupSpamArray) ToReplacemsggroupSpamArrayOutput() ReplacemsggroupSpamArrayOutput {
	return i.ToReplacemsggroupSpamArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupSpamArray) ToReplacemsggroupSpamArrayOutputWithContext(ctx context.Context) ReplacemsggroupSpamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupSpamArrayOutput)
}

type ReplacemsggroupSpamOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupSpamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupSpam)(nil)).Elem()
}

func (o ReplacemsggroupSpamOutput) ToReplacemsggroupSpamOutput() ReplacemsggroupSpamOutput {
	return o
}

func (o ReplacemsggroupSpamOutput) ToReplacemsggroupSpamOutputWithContext(ctx context.Context) ReplacemsggroupSpamOutput {
	return o
}

// Message string.
func (o ReplacemsggroupSpamOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupSpam) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupSpamOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupSpam) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupSpamOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupSpam) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupSpamOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupSpam) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupSpamArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupSpamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupSpam)(nil)).Elem()
}

func (o ReplacemsggroupSpamArrayOutput) ToReplacemsggroupSpamArrayOutput() ReplacemsggroupSpamArrayOutput {
	return o
}

func (o ReplacemsggroupSpamArrayOutput) ToReplacemsggroupSpamArrayOutputWithContext(ctx context.Context) ReplacemsggroupSpamArrayOutput {
	return o
}

func (o ReplacemsggroupSpamArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupSpamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupSpam {
		return vs[0].([]ReplacemsggroupSpam)[vs[1].(int)]
	}).(ReplacemsggroupSpamOutput)
}

type ReplacemsggroupSslvpn struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupSslvpnInput is an input type that accepts ReplacemsggroupSslvpnArgs and ReplacemsggroupSslvpnOutput values.
// You can construct a concrete instance of `ReplacemsggroupSslvpnInput` via:
//
//	ReplacemsggroupSslvpnArgs{...}
type ReplacemsggroupSslvpnInput interface {
	pulumi.Input

	ToReplacemsggroupSslvpnOutput() ReplacemsggroupSslvpnOutput
	ToReplacemsggroupSslvpnOutputWithContext(context.Context) ReplacemsggroupSslvpnOutput
}

type ReplacemsggroupSslvpnArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupSslvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupSslvpn)(nil)).Elem()
}

func (i ReplacemsggroupSslvpnArgs) ToReplacemsggroupSslvpnOutput() ReplacemsggroupSslvpnOutput {
	return i.ToReplacemsggroupSslvpnOutputWithContext(context.Background())
}

func (i ReplacemsggroupSslvpnArgs) ToReplacemsggroupSslvpnOutputWithContext(ctx context.Context) ReplacemsggroupSslvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupSslvpnOutput)
}

// ReplacemsggroupSslvpnArrayInput is an input type that accepts ReplacemsggroupSslvpnArray and ReplacemsggroupSslvpnArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupSslvpnArrayInput` via:
//
//	ReplacemsggroupSslvpnArray{ ReplacemsggroupSslvpnArgs{...} }
type ReplacemsggroupSslvpnArrayInput interface {
	pulumi.Input

	ToReplacemsggroupSslvpnArrayOutput() ReplacemsggroupSslvpnArrayOutput
	ToReplacemsggroupSslvpnArrayOutputWithContext(context.Context) ReplacemsggroupSslvpnArrayOutput
}

type ReplacemsggroupSslvpnArray []ReplacemsggroupSslvpnInput

func (ReplacemsggroupSslvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupSslvpn)(nil)).Elem()
}

func (i ReplacemsggroupSslvpnArray) ToReplacemsggroupSslvpnArrayOutput() ReplacemsggroupSslvpnArrayOutput {
	return i.ToReplacemsggroupSslvpnArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupSslvpnArray) ToReplacemsggroupSslvpnArrayOutputWithContext(ctx context.Context) ReplacemsggroupSslvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupSslvpnArrayOutput)
}

type ReplacemsggroupSslvpnOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupSslvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupSslvpn)(nil)).Elem()
}

func (o ReplacemsggroupSslvpnOutput) ToReplacemsggroupSslvpnOutput() ReplacemsggroupSslvpnOutput {
	return o
}

func (o ReplacemsggroupSslvpnOutput) ToReplacemsggroupSslvpnOutputWithContext(ctx context.Context) ReplacemsggroupSslvpnOutput {
	return o
}

// Message string.
func (o ReplacemsggroupSslvpnOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupSslvpn) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupSslvpnOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupSslvpn) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupSslvpnOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupSslvpn) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupSslvpnOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupSslvpn) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupSslvpnArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupSslvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupSslvpn)(nil)).Elem()
}

func (o ReplacemsggroupSslvpnArrayOutput) ToReplacemsggroupSslvpnArrayOutput() ReplacemsggroupSslvpnArrayOutput {
	return o
}

func (o ReplacemsggroupSslvpnArrayOutput) ToReplacemsggroupSslvpnArrayOutputWithContext(ctx context.Context) ReplacemsggroupSslvpnArrayOutput {
	return o
}

func (o ReplacemsggroupSslvpnArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupSslvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupSslvpn {
		return vs[0].([]ReplacemsggroupSslvpn)[vs[1].(int)]
	}).(ReplacemsggroupSslvpnOutput)
}

type ReplacemsggroupTrafficQuota struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupTrafficQuotaInput is an input type that accepts ReplacemsggroupTrafficQuotaArgs and ReplacemsggroupTrafficQuotaOutput values.
// You can construct a concrete instance of `ReplacemsggroupTrafficQuotaInput` via:
//
//	ReplacemsggroupTrafficQuotaArgs{...}
type ReplacemsggroupTrafficQuotaInput interface {
	pulumi.Input

	ToReplacemsggroupTrafficQuotaOutput() ReplacemsggroupTrafficQuotaOutput
	ToReplacemsggroupTrafficQuotaOutputWithContext(context.Context) ReplacemsggroupTrafficQuotaOutput
}

type ReplacemsggroupTrafficQuotaArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupTrafficQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (i ReplacemsggroupTrafficQuotaArgs) ToReplacemsggroupTrafficQuotaOutput() ReplacemsggroupTrafficQuotaOutput {
	return i.ToReplacemsggroupTrafficQuotaOutputWithContext(context.Background())
}

func (i ReplacemsggroupTrafficQuotaArgs) ToReplacemsggroupTrafficQuotaOutputWithContext(ctx context.Context) ReplacemsggroupTrafficQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupTrafficQuotaOutput)
}

// ReplacemsggroupTrafficQuotaArrayInput is an input type that accepts ReplacemsggroupTrafficQuotaArray and ReplacemsggroupTrafficQuotaArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupTrafficQuotaArrayInput` via:
//
//	ReplacemsggroupTrafficQuotaArray{ ReplacemsggroupTrafficQuotaArgs{...} }
type ReplacemsggroupTrafficQuotaArrayInput interface {
	pulumi.Input

	ToReplacemsggroupTrafficQuotaArrayOutput() ReplacemsggroupTrafficQuotaArrayOutput
	ToReplacemsggroupTrafficQuotaArrayOutputWithContext(context.Context) ReplacemsggroupTrafficQuotaArrayOutput
}

type ReplacemsggroupTrafficQuotaArray []ReplacemsggroupTrafficQuotaInput

func (ReplacemsggroupTrafficQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (i ReplacemsggroupTrafficQuotaArray) ToReplacemsggroupTrafficQuotaArrayOutput() ReplacemsggroupTrafficQuotaArrayOutput {
	return i.ToReplacemsggroupTrafficQuotaArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupTrafficQuotaArray) ToReplacemsggroupTrafficQuotaArrayOutputWithContext(ctx context.Context) ReplacemsggroupTrafficQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupTrafficQuotaArrayOutput)
}

type ReplacemsggroupTrafficQuotaOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupTrafficQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (o ReplacemsggroupTrafficQuotaOutput) ToReplacemsggroupTrafficQuotaOutput() ReplacemsggroupTrafficQuotaOutput {
	return o
}

func (o ReplacemsggroupTrafficQuotaOutput) ToReplacemsggroupTrafficQuotaOutputWithContext(ctx context.Context) ReplacemsggroupTrafficQuotaOutput {
	return o
}

// Message string.
func (o ReplacemsggroupTrafficQuotaOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupTrafficQuota) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupTrafficQuotaOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupTrafficQuota) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupTrafficQuotaOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupTrafficQuota) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupTrafficQuotaOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupTrafficQuota) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupTrafficQuotaArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupTrafficQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (o ReplacemsggroupTrafficQuotaArrayOutput) ToReplacemsggroupTrafficQuotaArrayOutput() ReplacemsggroupTrafficQuotaArrayOutput {
	return o
}

func (o ReplacemsggroupTrafficQuotaArrayOutput) ToReplacemsggroupTrafficQuotaArrayOutputWithContext(ctx context.Context) ReplacemsggroupTrafficQuotaArrayOutput {
	return o
}

func (o ReplacemsggroupTrafficQuotaArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupTrafficQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupTrafficQuota {
		return vs[0].([]ReplacemsggroupTrafficQuota)[vs[1].(int)]
	}).(ReplacemsggroupTrafficQuotaOutput)
}

type ReplacemsggroupUtm struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupUtmInput is an input type that accepts ReplacemsggroupUtmArgs and ReplacemsggroupUtmOutput values.
// You can construct a concrete instance of `ReplacemsggroupUtmInput` via:
//
//	ReplacemsggroupUtmArgs{...}
type ReplacemsggroupUtmInput interface {
	pulumi.Input

	ToReplacemsggroupUtmOutput() ReplacemsggroupUtmOutput
	ToReplacemsggroupUtmOutputWithContext(context.Context) ReplacemsggroupUtmOutput
}

type ReplacemsggroupUtmArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupUtmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupUtm)(nil)).Elem()
}

func (i ReplacemsggroupUtmArgs) ToReplacemsggroupUtmOutput() ReplacemsggroupUtmOutput {
	return i.ToReplacemsggroupUtmOutputWithContext(context.Background())
}

func (i ReplacemsggroupUtmArgs) ToReplacemsggroupUtmOutputWithContext(ctx context.Context) ReplacemsggroupUtmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupUtmOutput)
}

// ReplacemsggroupUtmArrayInput is an input type that accepts ReplacemsggroupUtmArray and ReplacemsggroupUtmArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupUtmArrayInput` via:
//
//	ReplacemsggroupUtmArray{ ReplacemsggroupUtmArgs{...} }
type ReplacemsggroupUtmArrayInput interface {
	pulumi.Input

	ToReplacemsggroupUtmArrayOutput() ReplacemsggroupUtmArrayOutput
	ToReplacemsggroupUtmArrayOutputWithContext(context.Context) ReplacemsggroupUtmArrayOutput
}

type ReplacemsggroupUtmArray []ReplacemsggroupUtmInput

func (ReplacemsggroupUtmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupUtm)(nil)).Elem()
}

func (i ReplacemsggroupUtmArray) ToReplacemsggroupUtmArrayOutput() ReplacemsggroupUtmArrayOutput {
	return i.ToReplacemsggroupUtmArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupUtmArray) ToReplacemsggroupUtmArrayOutputWithContext(ctx context.Context) ReplacemsggroupUtmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupUtmArrayOutput)
}

type ReplacemsggroupUtmOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupUtmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupUtm)(nil)).Elem()
}

func (o ReplacemsggroupUtmOutput) ToReplacemsggroupUtmOutput() ReplacemsggroupUtmOutput {
	return o
}

func (o ReplacemsggroupUtmOutput) ToReplacemsggroupUtmOutputWithContext(ctx context.Context) ReplacemsggroupUtmOutput {
	return o
}

// Message string.
func (o ReplacemsggroupUtmOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupUtm) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupUtmOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupUtm) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupUtmOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupUtm) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupUtmOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupUtm) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupUtmArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupUtmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupUtm)(nil)).Elem()
}

func (o ReplacemsggroupUtmArrayOutput) ToReplacemsggroupUtmArrayOutput() ReplacemsggroupUtmArrayOutput {
	return o
}

func (o ReplacemsggroupUtmArrayOutput) ToReplacemsggroupUtmArrayOutputWithContext(ctx context.Context) ReplacemsggroupUtmArrayOutput {
	return o
}

func (o ReplacemsggroupUtmArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupUtmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupUtm {
		return vs[0].([]ReplacemsggroupUtm)[vs[1].(int)]
	}).(ReplacemsggroupUtmOutput)
}

type ReplacemsggroupWebproxy struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// ReplacemsggroupWebproxyInput is an input type that accepts ReplacemsggroupWebproxyArgs and ReplacemsggroupWebproxyOutput values.
// You can construct a concrete instance of `ReplacemsggroupWebproxyInput` via:
//
//	ReplacemsggroupWebproxyArgs{...}
type ReplacemsggroupWebproxyInput interface {
	pulumi.Input

	ToReplacemsggroupWebproxyOutput() ReplacemsggroupWebproxyOutput
	ToReplacemsggroupWebproxyOutputWithContext(context.Context) ReplacemsggroupWebproxyOutput
}

type ReplacemsggroupWebproxyArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (ReplacemsggroupWebproxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupWebproxy)(nil)).Elem()
}

func (i ReplacemsggroupWebproxyArgs) ToReplacemsggroupWebproxyOutput() ReplacemsggroupWebproxyOutput {
	return i.ToReplacemsggroupWebproxyOutputWithContext(context.Background())
}

func (i ReplacemsggroupWebproxyArgs) ToReplacemsggroupWebproxyOutputWithContext(ctx context.Context) ReplacemsggroupWebproxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupWebproxyOutput)
}

// ReplacemsggroupWebproxyArrayInput is an input type that accepts ReplacemsggroupWebproxyArray and ReplacemsggroupWebproxyArrayOutput values.
// You can construct a concrete instance of `ReplacemsggroupWebproxyArrayInput` via:
//
//	ReplacemsggroupWebproxyArray{ ReplacemsggroupWebproxyArgs{...} }
type ReplacemsggroupWebproxyArrayInput interface {
	pulumi.Input

	ToReplacemsggroupWebproxyArrayOutput() ReplacemsggroupWebproxyArrayOutput
	ToReplacemsggroupWebproxyArrayOutputWithContext(context.Context) ReplacemsggroupWebproxyArrayOutput
}

type ReplacemsggroupWebproxyArray []ReplacemsggroupWebproxyInput

func (ReplacemsggroupWebproxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupWebproxy)(nil)).Elem()
}

func (i ReplacemsggroupWebproxyArray) ToReplacemsggroupWebproxyArrayOutput() ReplacemsggroupWebproxyArrayOutput {
	return i.ToReplacemsggroupWebproxyArrayOutputWithContext(context.Background())
}

func (i ReplacemsggroupWebproxyArray) ToReplacemsggroupWebproxyArrayOutputWithContext(ctx context.Context) ReplacemsggroupWebproxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplacemsggroupWebproxyArrayOutput)
}

type ReplacemsggroupWebproxyOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupWebproxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplacemsggroupWebproxy)(nil)).Elem()
}

func (o ReplacemsggroupWebproxyOutput) ToReplacemsggroupWebproxyOutput() ReplacemsggroupWebproxyOutput {
	return o
}

func (o ReplacemsggroupWebproxyOutput) ToReplacemsggroupWebproxyOutputWithContext(ctx context.Context) ReplacemsggroupWebproxyOutput {
	return o
}

// Message string.
func (o ReplacemsggroupWebproxyOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupWebproxy) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o ReplacemsggroupWebproxyOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupWebproxy) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o ReplacemsggroupWebproxyOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupWebproxy) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o ReplacemsggroupWebproxyOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplacemsggroupWebproxy) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type ReplacemsggroupWebproxyArrayOutput struct{ *pulumi.OutputState }

func (ReplacemsggroupWebproxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplacemsggroupWebproxy)(nil)).Elem()
}

func (o ReplacemsggroupWebproxyArrayOutput) ToReplacemsggroupWebproxyArrayOutput() ReplacemsggroupWebproxyArrayOutput {
	return o
}

func (o ReplacemsggroupWebproxyArrayOutput) ToReplacemsggroupWebproxyArrayOutputWithContext(ctx context.Context) ReplacemsggroupWebproxyArrayOutput {
	return o
}

func (o ReplacemsggroupWebproxyArrayOutput) Index(i pulumi.IntInput) ReplacemsggroupWebproxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplacemsggroupWebproxy {
		return vs[0].([]ReplacemsggroupWebproxy)[vs[1].(int)]
	}).(ReplacemsggroupWebproxyOutput)
}

type SamlServiceProvider struct {
	// Customized SAML attributes to send along with assertion. The structure of `assertionAttributes` block is documented below.
	AssertionAttributes []SamlServiceProviderAssertionAttribute `pulumi:"assertionAttributes"`
	// IDP entity ID.
	IdpEntityId *string `pulumi:"idpEntityId"`
	// IDP single logout URL.
	IdpSingleLogoutUrl *string `pulumi:"idpSingleLogoutUrl"`
	// IDP single sign-on URL.
	IdpSingleSignOnUrl *string `pulumi:"idpSingleSignOnUrl"`
	// Name.
	Name *string `pulumi:"name"`
	// Prefix.
	Prefix *string `pulumi:"prefix"`
	// SP binding protocol. Valid values: `post`, `redirect`.
	SpBindingProtocol *string `pulumi:"spBindingProtocol"`
	// SP certificate name.
	SpCert *string `pulumi:"spCert"`
	// SP entity ID.
	SpEntityId *string `pulumi:"spEntityId"`
	// SP portal URL.
	SpPortalUrl *string `pulumi:"spPortalUrl"`
	// SP single logout URL.
	SpSingleLogoutUrl *string `pulumi:"spSingleLogoutUrl"`
	// SP single sign-on URL.
	SpSingleSignOnUrl *string `pulumi:"spSingleSignOnUrl"`
}

// SamlServiceProviderInput is an input type that accepts SamlServiceProviderArgs and SamlServiceProviderOutput values.
// You can construct a concrete instance of `SamlServiceProviderInput` via:
//
//	SamlServiceProviderArgs{...}
type SamlServiceProviderInput interface {
	pulumi.Input

	ToSamlServiceProviderOutput() SamlServiceProviderOutput
	ToSamlServiceProviderOutputWithContext(context.Context) SamlServiceProviderOutput
}

type SamlServiceProviderArgs struct {
	// Customized SAML attributes to send along with assertion. The structure of `assertionAttributes` block is documented below.
	AssertionAttributes SamlServiceProviderAssertionAttributeArrayInput `pulumi:"assertionAttributes"`
	// IDP entity ID.
	IdpEntityId pulumi.StringPtrInput `pulumi:"idpEntityId"`
	// IDP single logout URL.
	IdpSingleLogoutUrl pulumi.StringPtrInput `pulumi:"idpSingleLogoutUrl"`
	// IDP single sign-on URL.
	IdpSingleSignOnUrl pulumi.StringPtrInput `pulumi:"idpSingleSignOnUrl"`
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// SP binding protocol. Valid values: `post`, `redirect`.
	SpBindingProtocol pulumi.StringPtrInput `pulumi:"spBindingProtocol"`
	// SP certificate name.
	SpCert pulumi.StringPtrInput `pulumi:"spCert"`
	// SP entity ID.
	SpEntityId pulumi.StringPtrInput `pulumi:"spEntityId"`
	// SP portal URL.
	SpPortalUrl pulumi.StringPtrInput `pulumi:"spPortalUrl"`
	// SP single logout URL.
	SpSingleLogoutUrl pulumi.StringPtrInput `pulumi:"spSingleLogoutUrl"`
	// SP single sign-on URL.
	SpSingleSignOnUrl pulumi.StringPtrInput `pulumi:"spSingleSignOnUrl"`
}

func (SamlServiceProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlServiceProvider)(nil)).Elem()
}

func (i SamlServiceProviderArgs) ToSamlServiceProviderOutput() SamlServiceProviderOutput {
	return i.ToSamlServiceProviderOutputWithContext(context.Background())
}

func (i SamlServiceProviderArgs) ToSamlServiceProviderOutputWithContext(ctx context.Context) SamlServiceProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlServiceProviderOutput)
}

// SamlServiceProviderArrayInput is an input type that accepts SamlServiceProviderArray and SamlServiceProviderArrayOutput values.
// You can construct a concrete instance of `SamlServiceProviderArrayInput` via:
//
//	SamlServiceProviderArray{ SamlServiceProviderArgs{...} }
type SamlServiceProviderArrayInput interface {
	pulumi.Input

	ToSamlServiceProviderArrayOutput() SamlServiceProviderArrayOutput
	ToSamlServiceProviderArrayOutputWithContext(context.Context) SamlServiceProviderArrayOutput
}

type SamlServiceProviderArray []SamlServiceProviderInput

func (SamlServiceProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlServiceProvider)(nil)).Elem()
}

func (i SamlServiceProviderArray) ToSamlServiceProviderArrayOutput() SamlServiceProviderArrayOutput {
	return i.ToSamlServiceProviderArrayOutputWithContext(context.Background())
}

func (i SamlServiceProviderArray) ToSamlServiceProviderArrayOutputWithContext(ctx context.Context) SamlServiceProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlServiceProviderArrayOutput)
}

type SamlServiceProviderOutput struct{ *pulumi.OutputState }

func (SamlServiceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlServiceProvider)(nil)).Elem()
}

func (o SamlServiceProviderOutput) ToSamlServiceProviderOutput() SamlServiceProviderOutput {
	return o
}

func (o SamlServiceProviderOutput) ToSamlServiceProviderOutputWithContext(ctx context.Context) SamlServiceProviderOutput {
	return o
}

// Customized SAML attributes to send along with assertion. The structure of `assertionAttributes` block is documented below.
func (o SamlServiceProviderOutput) AssertionAttributes() SamlServiceProviderAssertionAttributeArrayOutput {
	return o.ApplyT(func(v SamlServiceProvider) []SamlServiceProviderAssertionAttribute { return v.AssertionAttributes }).(SamlServiceProviderAssertionAttributeArrayOutput)
}

// IDP entity ID.
func (o SamlServiceProviderOutput) IdpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProvider) *string { return v.IdpEntityId }).(pulumi.StringPtrOutput)
}

// IDP single logout URL.
func (o SamlServiceProviderOutput) IdpSingleLogoutUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProvider) *string { return v.IdpSingleLogoutUrl }).(pulumi.StringPtrOutput)
}

// IDP single sign-on URL.
func (o SamlServiceProviderOutput) IdpSingleSignOnUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProvider) *string { return v.IdpSingleSignOnUrl }).(pulumi.StringPtrOutput)
}

// Name.
func (o SamlServiceProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Prefix.
func (o SamlServiceProviderOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProvider) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// SP binding protocol. Valid values: `post`, `redirect`.
func (o SamlServiceProviderOutput) SpBindingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProvider) *string { return v.SpBindingProtocol }).(pulumi.StringPtrOutput)
}

// SP certificate name.
func (o SamlServiceProviderOutput) SpCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProvider) *string { return v.SpCert }).(pulumi.StringPtrOutput)
}

// SP entity ID.
func (o SamlServiceProviderOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProvider) *string { return v.SpEntityId }).(pulumi.StringPtrOutput)
}

// SP portal URL.
func (o SamlServiceProviderOutput) SpPortalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProvider) *string { return v.SpPortalUrl }).(pulumi.StringPtrOutput)
}

// SP single logout URL.
func (o SamlServiceProviderOutput) SpSingleLogoutUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProvider) *string { return v.SpSingleLogoutUrl }).(pulumi.StringPtrOutput)
}

// SP single sign-on URL.
func (o SamlServiceProviderOutput) SpSingleSignOnUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProvider) *string { return v.SpSingleSignOnUrl }).(pulumi.StringPtrOutput)
}

type SamlServiceProviderArrayOutput struct{ *pulumi.OutputState }

func (SamlServiceProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlServiceProvider)(nil)).Elem()
}

func (o SamlServiceProviderArrayOutput) ToSamlServiceProviderArrayOutput() SamlServiceProviderArrayOutput {
	return o
}

func (o SamlServiceProviderArrayOutput) ToSamlServiceProviderArrayOutputWithContext(ctx context.Context) SamlServiceProviderArrayOutput {
	return o
}

func (o SamlServiceProviderArrayOutput) Index(i pulumi.IntInput) SamlServiceProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SamlServiceProvider {
		return vs[0].([]SamlServiceProvider)[vs[1].(int)]
	}).(SamlServiceProviderOutput)
}

type SamlServiceProviderAssertionAttribute struct {
	// Name.
	Name *string `pulumi:"name"`
	// Type.
	Type *string `pulumi:"type"`
}

// SamlServiceProviderAssertionAttributeInput is an input type that accepts SamlServiceProviderAssertionAttributeArgs and SamlServiceProviderAssertionAttributeOutput values.
// You can construct a concrete instance of `SamlServiceProviderAssertionAttributeInput` via:
//
//	SamlServiceProviderAssertionAttributeArgs{...}
type SamlServiceProviderAssertionAttributeInput interface {
	pulumi.Input

	ToSamlServiceProviderAssertionAttributeOutput() SamlServiceProviderAssertionAttributeOutput
	ToSamlServiceProviderAssertionAttributeOutputWithContext(context.Context) SamlServiceProviderAssertionAttributeOutput
}

type SamlServiceProviderAssertionAttributeArgs struct {
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SamlServiceProviderAssertionAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (i SamlServiceProviderAssertionAttributeArgs) ToSamlServiceProviderAssertionAttributeOutput() SamlServiceProviderAssertionAttributeOutput {
	return i.ToSamlServiceProviderAssertionAttributeOutputWithContext(context.Background())
}

func (i SamlServiceProviderAssertionAttributeArgs) ToSamlServiceProviderAssertionAttributeOutputWithContext(ctx context.Context) SamlServiceProviderAssertionAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlServiceProviderAssertionAttributeOutput)
}

// SamlServiceProviderAssertionAttributeArrayInput is an input type that accepts SamlServiceProviderAssertionAttributeArray and SamlServiceProviderAssertionAttributeArrayOutput values.
// You can construct a concrete instance of `SamlServiceProviderAssertionAttributeArrayInput` via:
//
//	SamlServiceProviderAssertionAttributeArray{ SamlServiceProviderAssertionAttributeArgs{...} }
type SamlServiceProviderAssertionAttributeArrayInput interface {
	pulumi.Input

	ToSamlServiceProviderAssertionAttributeArrayOutput() SamlServiceProviderAssertionAttributeArrayOutput
	ToSamlServiceProviderAssertionAttributeArrayOutputWithContext(context.Context) SamlServiceProviderAssertionAttributeArrayOutput
}

type SamlServiceProviderAssertionAttributeArray []SamlServiceProviderAssertionAttributeInput

func (SamlServiceProviderAssertionAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (i SamlServiceProviderAssertionAttributeArray) ToSamlServiceProviderAssertionAttributeArrayOutput() SamlServiceProviderAssertionAttributeArrayOutput {
	return i.ToSamlServiceProviderAssertionAttributeArrayOutputWithContext(context.Background())
}

func (i SamlServiceProviderAssertionAttributeArray) ToSamlServiceProviderAssertionAttributeArrayOutputWithContext(ctx context.Context) SamlServiceProviderAssertionAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlServiceProviderAssertionAttributeArrayOutput)
}

type SamlServiceProviderAssertionAttributeOutput struct{ *pulumi.OutputState }

func (SamlServiceProviderAssertionAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (o SamlServiceProviderAssertionAttributeOutput) ToSamlServiceProviderAssertionAttributeOutput() SamlServiceProviderAssertionAttributeOutput {
	return o
}

func (o SamlServiceProviderAssertionAttributeOutput) ToSamlServiceProviderAssertionAttributeOutputWithContext(ctx context.Context) SamlServiceProviderAssertionAttributeOutput {
	return o
}

// Name.
func (o SamlServiceProviderAssertionAttributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProviderAssertionAttribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type.
func (o SamlServiceProviderAssertionAttributeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlServiceProviderAssertionAttribute) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SamlServiceProviderAssertionAttributeArrayOutput struct{ *pulumi.OutputState }

func (SamlServiceProviderAssertionAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (o SamlServiceProviderAssertionAttributeArrayOutput) ToSamlServiceProviderAssertionAttributeArrayOutput() SamlServiceProviderAssertionAttributeArrayOutput {
	return o
}

func (o SamlServiceProviderAssertionAttributeArrayOutput) ToSamlServiceProviderAssertionAttributeArrayOutputWithContext(ctx context.Context) SamlServiceProviderAssertionAttributeArrayOutput {
	return o
}

func (o SamlServiceProviderAssertionAttributeArrayOutput) Index(i pulumi.IntInput) SamlServiceProviderAssertionAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SamlServiceProviderAssertionAttribute {
		return vs[0].([]SamlServiceProviderAssertionAttribute)[vs[1].(int)]
	}).(SamlServiceProviderAssertionAttributeOutput)
}

type SdnconnectorCompartmentList struct {
	// OCI compartment ID.
	CompartmentId *string `pulumi:"compartmentId"`
}

// SdnconnectorCompartmentListInput is an input type that accepts SdnconnectorCompartmentListArgs and SdnconnectorCompartmentListOutput values.
// You can construct a concrete instance of `SdnconnectorCompartmentListInput` via:
//
//	SdnconnectorCompartmentListArgs{...}
type SdnconnectorCompartmentListInput interface {
	pulumi.Input

	ToSdnconnectorCompartmentListOutput() SdnconnectorCompartmentListOutput
	ToSdnconnectorCompartmentListOutputWithContext(context.Context) SdnconnectorCompartmentListOutput
}

type SdnconnectorCompartmentListArgs struct {
	// OCI compartment ID.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
}

func (SdnconnectorCompartmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorCompartmentList)(nil)).Elem()
}

func (i SdnconnectorCompartmentListArgs) ToSdnconnectorCompartmentListOutput() SdnconnectorCompartmentListOutput {
	return i.ToSdnconnectorCompartmentListOutputWithContext(context.Background())
}

func (i SdnconnectorCompartmentListArgs) ToSdnconnectorCompartmentListOutputWithContext(ctx context.Context) SdnconnectorCompartmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorCompartmentListOutput)
}

// SdnconnectorCompartmentListArrayInput is an input type that accepts SdnconnectorCompartmentListArray and SdnconnectorCompartmentListArrayOutput values.
// You can construct a concrete instance of `SdnconnectorCompartmentListArrayInput` via:
//
//	SdnconnectorCompartmentListArray{ SdnconnectorCompartmentListArgs{...} }
type SdnconnectorCompartmentListArrayInput interface {
	pulumi.Input

	ToSdnconnectorCompartmentListArrayOutput() SdnconnectorCompartmentListArrayOutput
	ToSdnconnectorCompartmentListArrayOutputWithContext(context.Context) SdnconnectorCompartmentListArrayOutput
}

type SdnconnectorCompartmentListArray []SdnconnectorCompartmentListInput

func (SdnconnectorCompartmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorCompartmentList)(nil)).Elem()
}

func (i SdnconnectorCompartmentListArray) ToSdnconnectorCompartmentListArrayOutput() SdnconnectorCompartmentListArrayOutput {
	return i.ToSdnconnectorCompartmentListArrayOutputWithContext(context.Background())
}

func (i SdnconnectorCompartmentListArray) ToSdnconnectorCompartmentListArrayOutputWithContext(ctx context.Context) SdnconnectorCompartmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorCompartmentListArrayOutput)
}

type SdnconnectorCompartmentListOutput struct{ *pulumi.OutputState }

func (SdnconnectorCompartmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorCompartmentList)(nil)).Elem()
}

func (o SdnconnectorCompartmentListOutput) ToSdnconnectorCompartmentListOutput() SdnconnectorCompartmentListOutput {
	return o
}

func (o SdnconnectorCompartmentListOutput) ToSdnconnectorCompartmentListOutputWithContext(ctx context.Context) SdnconnectorCompartmentListOutput {
	return o
}

// OCI compartment ID.
func (o SdnconnectorCompartmentListOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorCompartmentList) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

type SdnconnectorCompartmentListArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorCompartmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorCompartmentList)(nil)).Elem()
}

func (o SdnconnectorCompartmentListArrayOutput) ToSdnconnectorCompartmentListArrayOutput() SdnconnectorCompartmentListArrayOutput {
	return o
}

func (o SdnconnectorCompartmentListArrayOutput) ToSdnconnectorCompartmentListArrayOutputWithContext(ctx context.Context) SdnconnectorCompartmentListArrayOutput {
	return o
}

func (o SdnconnectorCompartmentListArrayOutput) Index(i pulumi.IntInput) SdnconnectorCompartmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorCompartmentList {
		return vs[0].([]SdnconnectorCompartmentList)[vs[1].(int)]
	}).(SdnconnectorCompartmentListOutput)
}

type SdnconnectorExternalAccountList struct {
	// AWS external ID.
	ExternalId *string `pulumi:"externalId"`
	// AWS region name list. The structure of `regionList` block is documented below.
	RegionLists []SdnconnectorExternalAccountListRegionList `pulumi:"regionLists"`
	// AWS role ARN to assume.
	RoleArn *string `pulumi:"roleArn"`
}

// SdnconnectorExternalAccountListInput is an input type that accepts SdnconnectorExternalAccountListArgs and SdnconnectorExternalAccountListOutput values.
// You can construct a concrete instance of `SdnconnectorExternalAccountListInput` via:
//
//	SdnconnectorExternalAccountListArgs{...}
type SdnconnectorExternalAccountListInput interface {
	pulumi.Input

	ToSdnconnectorExternalAccountListOutput() SdnconnectorExternalAccountListOutput
	ToSdnconnectorExternalAccountListOutputWithContext(context.Context) SdnconnectorExternalAccountListOutput
}

type SdnconnectorExternalAccountListArgs struct {
	// AWS external ID.
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// AWS region name list. The structure of `regionList` block is documented below.
	RegionLists SdnconnectorExternalAccountListRegionListArrayInput `pulumi:"regionLists"`
	// AWS role ARN to assume.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (SdnconnectorExternalAccountListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorExternalAccountList)(nil)).Elem()
}

func (i SdnconnectorExternalAccountListArgs) ToSdnconnectorExternalAccountListOutput() SdnconnectorExternalAccountListOutput {
	return i.ToSdnconnectorExternalAccountListOutputWithContext(context.Background())
}

func (i SdnconnectorExternalAccountListArgs) ToSdnconnectorExternalAccountListOutputWithContext(ctx context.Context) SdnconnectorExternalAccountListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorExternalAccountListOutput)
}

// SdnconnectorExternalAccountListArrayInput is an input type that accepts SdnconnectorExternalAccountListArray and SdnconnectorExternalAccountListArrayOutput values.
// You can construct a concrete instance of `SdnconnectorExternalAccountListArrayInput` via:
//
//	SdnconnectorExternalAccountListArray{ SdnconnectorExternalAccountListArgs{...} }
type SdnconnectorExternalAccountListArrayInput interface {
	pulumi.Input

	ToSdnconnectorExternalAccountListArrayOutput() SdnconnectorExternalAccountListArrayOutput
	ToSdnconnectorExternalAccountListArrayOutputWithContext(context.Context) SdnconnectorExternalAccountListArrayOutput
}

type SdnconnectorExternalAccountListArray []SdnconnectorExternalAccountListInput

func (SdnconnectorExternalAccountListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorExternalAccountList)(nil)).Elem()
}

func (i SdnconnectorExternalAccountListArray) ToSdnconnectorExternalAccountListArrayOutput() SdnconnectorExternalAccountListArrayOutput {
	return i.ToSdnconnectorExternalAccountListArrayOutputWithContext(context.Background())
}

func (i SdnconnectorExternalAccountListArray) ToSdnconnectorExternalAccountListArrayOutputWithContext(ctx context.Context) SdnconnectorExternalAccountListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorExternalAccountListArrayOutput)
}

type SdnconnectorExternalAccountListOutput struct{ *pulumi.OutputState }

func (SdnconnectorExternalAccountListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorExternalAccountList)(nil)).Elem()
}

func (o SdnconnectorExternalAccountListOutput) ToSdnconnectorExternalAccountListOutput() SdnconnectorExternalAccountListOutput {
	return o
}

func (o SdnconnectorExternalAccountListOutput) ToSdnconnectorExternalAccountListOutputWithContext(ctx context.Context) SdnconnectorExternalAccountListOutput {
	return o
}

// AWS external ID.
func (o SdnconnectorExternalAccountListOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorExternalAccountList) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// AWS region name list. The structure of `regionList` block is documented below.
func (o SdnconnectorExternalAccountListOutput) RegionLists() SdnconnectorExternalAccountListRegionListArrayOutput {
	return o.ApplyT(func(v SdnconnectorExternalAccountList) []SdnconnectorExternalAccountListRegionList {
		return v.RegionLists
	}).(SdnconnectorExternalAccountListRegionListArrayOutput)
}

// AWS role ARN to assume.
func (o SdnconnectorExternalAccountListOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorExternalAccountList) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type SdnconnectorExternalAccountListArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorExternalAccountListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorExternalAccountList)(nil)).Elem()
}

func (o SdnconnectorExternalAccountListArrayOutput) ToSdnconnectorExternalAccountListArrayOutput() SdnconnectorExternalAccountListArrayOutput {
	return o
}

func (o SdnconnectorExternalAccountListArrayOutput) ToSdnconnectorExternalAccountListArrayOutputWithContext(ctx context.Context) SdnconnectorExternalAccountListArrayOutput {
	return o
}

func (o SdnconnectorExternalAccountListArrayOutput) Index(i pulumi.IntInput) SdnconnectorExternalAccountListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorExternalAccountList {
		return vs[0].([]SdnconnectorExternalAccountList)[vs[1].(int)]
	}).(SdnconnectorExternalAccountListOutput)
}

type SdnconnectorExternalAccountListRegionList struct {
	// AWS region name.
	Region *string `pulumi:"region"`
}

// SdnconnectorExternalAccountListRegionListInput is an input type that accepts SdnconnectorExternalAccountListRegionListArgs and SdnconnectorExternalAccountListRegionListOutput values.
// You can construct a concrete instance of `SdnconnectorExternalAccountListRegionListInput` via:
//
//	SdnconnectorExternalAccountListRegionListArgs{...}
type SdnconnectorExternalAccountListRegionListInput interface {
	pulumi.Input

	ToSdnconnectorExternalAccountListRegionListOutput() SdnconnectorExternalAccountListRegionListOutput
	ToSdnconnectorExternalAccountListRegionListOutputWithContext(context.Context) SdnconnectorExternalAccountListRegionListOutput
}

type SdnconnectorExternalAccountListRegionListArgs struct {
	// AWS region name.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (SdnconnectorExternalAccountListRegionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (i SdnconnectorExternalAccountListRegionListArgs) ToSdnconnectorExternalAccountListRegionListOutput() SdnconnectorExternalAccountListRegionListOutput {
	return i.ToSdnconnectorExternalAccountListRegionListOutputWithContext(context.Background())
}

func (i SdnconnectorExternalAccountListRegionListArgs) ToSdnconnectorExternalAccountListRegionListOutputWithContext(ctx context.Context) SdnconnectorExternalAccountListRegionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorExternalAccountListRegionListOutput)
}

// SdnconnectorExternalAccountListRegionListArrayInput is an input type that accepts SdnconnectorExternalAccountListRegionListArray and SdnconnectorExternalAccountListRegionListArrayOutput values.
// You can construct a concrete instance of `SdnconnectorExternalAccountListRegionListArrayInput` via:
//
//	SdnconnectorExternalAccountListRegionListArray{ SdnconnectorExternalAccountListRegionListArgs{...} }
type SdnconnectorExternalAccountListRegionListArrayInput interface {
	pulumi.Input

	ToSdnconnectorExternalAccountListRegionListArrayOutput() SdnconnectorExternalAccountListRegionListArrayOutput
	ToSdnconnectorExternalAccountListRegionListArrayOutputWithContext(context.Context) SdnconnectorExternalAccountListRegionListArrayOutput
}

type SdnconnectorExternalAccountListRegionListArray []SdnconnectorExternalAccountListRegionListInput

func (SdnconnectorExternalAccountListRegionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (i SdnconnectorExternalAccountListRegionListArray) ToSdnconnectorExternalAccountListRegionListArrayOutput() SdnconnectorExternalAccountListRegionListArrayOutput {
	return i.ToSdnconnectorExternalAccountListRegionListArrayOutputWithContext(context.Background())
}

func (i SdnconnectorExternalAccountListRegionListArray) ToSdnconnectorExternalAccountListRegionListArrayOutputWithContext(ctx context.Context) SdnconnectorExternalAccountListRegionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorExternalAccountListRegionListArrayOutput)
}

type SdnconnectorExternalAccountListRegionListOutput struct{ *pulumi.OutputState }

func (SdnconnectorExternalAccountListRegionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (o SdnconnectorExternalAccountListRegionListOutput) ToSdnconnectorExternalAccountListRegionListOutput() SdnconnectorExternalAccountListRegionListOutput {
	return o
}

func (o SdnconnectorExternalAccountListRegionListOutput) ToSdnconnectorExternalAccountListRegionListOutputWithContext(ctx context.Context) SdnconnectorExternalAccountListRegionListOutput {
	return o
}

// AWS region name.
func (o SdnconnectorExternalAccountListRegionListOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorExternalAccountListRegionList) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type SdnconnectorExternalAccountListRegionListArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorExternalAccountListRegionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (o SdnconnectorExternalAccountListRegionListArrayOutput) ToSdnconnectorExternalAccountListRegionListArrayOutput() SdnconnectorExternalAccountListRegionListArrayOutput {
	return o
}

func (o SdnconnectorExternalAccountListRegionListArrayOutput) ToSdnconnectorExternalAccountListRegionListArrayOutputWithContext(ctx context.Context) SdnconnectorExternalAccountListRegionListArrayOutput {
	return o
}

func (o SdnconnectorExternalAccountListRegionListArrayOutput) Index(i pulumi.IntInput) SdnconnectorExternalAccountListRegionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorExternalAccountListRegionList {
		return vs[0].([]SdnconnectorExternalAccountListRegionList)[vs[1].(int)]
	}).(SdnconnectorExternalAccountListRegionListOutput)
}

type SdnconnectorExternalIp struct {
	// External IP name.
	Name *string `pulumi:"name"`
}

// SdnconnectorExternalIpInput is an input type that accepts SdnconnectorExternalIpArgs and SdnconnectorExternalIpOutput values.
// You can construct a concrete instance of `SdnconnectorExternalIpInput` via:
//
//	SdnconnectorExternalIpArgs{...}
type SdnconnectorExternalIpInput interface {
	pulumi.Input

	ToSdnconnectorExternalIpOutput() SdnconnectorExternalIpOutput
	ToSdnconnectorExternalIpOutputWithContext(context.Context) SdnconnectorExternalIpOutput
}

type SdnconnectorExternalIpArgs struct {
	// External IP name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdnconnectorExternalIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorExternalIp)(nil)).Elem()
}

func (i SdnconnectorExternalIpArgs) ToSdnconnectorExternalIpOutput() SdnconnectorExternalIpOutput {
	return i.ToSdnconnectorExternalIpOutputWithContext(context.Background())
}

func (i SdnconnectorExternalIpArgs) ToSdnconnectorExternalIpOutputWithContext(ctx context.Context) SdnconnectorExternalIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorExternalIpOutput)
}

// SdnconnectorExternalIpArrayInput is an input type that accepts SdnconnectorExternalIpArray and SdnconnectorExternalIpArrayOutput values.
// You can construct a concrete instance of `SdnconnectorExternalIpArrayInput` via:
//
//	SdnconnectorExternalIpArray{ SdnconnectorExternalIpArgs{...} }
type SdnconnectorExternalIpArrayInput interface {
	pulumi.Input

	ToSdnconnectorExternalIpArrayOutput() SdnconnectorExternalIpArrayOutput
	ToSdnconnectorExternalIpArrayOutputWithContext(context.Context) SdnconnectorExternalIpArrayOutput
}

type SdnconnectorExternalIpArray []SdnconnectorExternalIpInput

func (SdnconnectorExternalIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorExternalIp)(nil)).Elem()
}

func (i SdnconnectorExternalIpArray) ToSdnconnectorExternalIpArrayOutput() SdnconnectorExternalIpArrayOutput {
	return i.ToSdnconnectorExternalIpArrayOutputWithContext(context.Background())
}

func (i SdnconnectorExternalIpArray) ToSdnconnectorExternalIpArrayOutputWithContext(ctx context.Context) SdnconnectorExternalIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorExternalIpArrayOutput)
}

type SdnconnectorExternalIpOutput struct{ *pulumi.OutputState }

func (SdnconnectorExternalIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorExternalIp)(nil)).Elem()
}

func (o SdnconnectorExternalIpOutput) ToSdnconnectorExternalIpOutput() SdnconnectorExternalIpOutput {
	return o
}

func (o SdnconnectorExternalIpOutput) ToSdnconnectorExternalIpOutputWithContext(ctx context.Context) SdnconnectorExternalIpOutput {
	return o
}

// External IP name.
func (o SdnconnectorExternalIpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorExternalIp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdnconnectorExternalIpArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorExternalIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorExternalIp)(nil)).Elem()
}

func (o SdnconnectorExternalIpArrayOutput) ToSdnconnectorExternalIpArrayOutput() SdnconnectorExternalIpArrayOutput {
	return o
}

func (o SdnconnectorExternalIpArrayOutput) ToSdnconnectorExternalIpArrayOutputWithContext(ctx context.Context) SdnconnectorExternalIpArrayOutput {
	return o
}

func (o SdnconnectorExternalIpArrayOutput) Index(i pulumi.IntInput) SdnconnectorExternalIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorExternalIp {
		return vs[0].([]SdnconnectorExternalIp)[vs[1].(int)]
	}).(SdnconnectorExternalIpOutput)
}

type SdnconnectorForwardingRule struct {
	// Forwarding rule name.
	RuleName *string `pulumi:"ruleName"`
	// Target instance name.
	Target *string `pulumi:"target"`
}

// SdnconnectorForwardingRuleInput is an input type that accepts SdnconnectorForwardingRuleArgs and SdnconnectorForwardingRuleOutput values.
// You can construct a concrete instance of `SdnconnectorForwardingRuleInput` via:
//
//	SdnconnectorForwardingRuleArgs{...}
type SdnconnectorForwardingRuleInput interface {
	pulumi.Input

	ToSdnconnectorForwardingRuleOutput() SdnconnectorForwardingRuleOutput
	ToSdnconnectorForwardingRuleOutputWithContext(context.Context) SdnconnectorForwardingRuleOutput
}

type SdnconnectorForwardingRuleArgs struct {
	// Forwarding rule name.
	RuleName pulumi.StringPtrInput `pulumi:"ruleName"`
	// Target instance name.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (SdnconnectorForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorForwardingRule)(nil)).Elem()
}

func (i SdnconnectorForwardingRuleArgs) ToSdnconnectorForwardingRuleOutput() SdnconnectorForwardingRuleOutput {
	return i.ToSdnconnectorForwardingRuleOutputWithContext(context.Background())
}

func (i SdnconnectorForwardingRuleArgs) ToSdnconnectorForwardingRuleOutputWithContext(ctx context.Context) SdnconnectorForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorForwardingRuleOutput)
}

// SdnconnectorForwardingRuleArrayInput is an input type that accepts SdnconnectorForwardingRuleArray and SdnconnectorForwardingRuleArrayOutput values.
// You can construct a concrete instance of `SdnconnectorForwardingRuleArrayInput` via:
//
//	SdnconnectorForwardingRuleArray{ SdnconnectorForwardingRuleArgs{...} }
type SdnconnectorForwardingRuleArrayInput interface {
	pulumi.Input

	ToSdnconnectorForwardingRuleArrayOutput() SdnconnectorForwardingRuleArrayOutput
	ToSdnconnectorForwardingRuleArrayOutputWithContext(context.Context) SdnconnectorForwardingRuleArrayOutput
}

type SdnconnectorForwardingRuleArray []SdnconnectorForwardingRuleInput

func (SdnconnectorForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorForwardingRule)(nil)).Elem()
}

func (i SdnconnectorForwardingRuleArray) ToSdnconnectorForwardingRuleArrayOutput() SdnconnectorForwardingRuleArrayOutput {
	return i.ToSdnconnectorForwardingRuleArrayOutputWithContext(context.Background())
}

func (i SdnconnectorForwardingRuleArray) ToSdnconnectorForwardingRuleArrayOutputWithContext(ctx context.Context) SdnconnectorForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorForwardingRuleArrayOutput)
}

type SdnconnectorForwardingRuleOutput struct{ *pulumi.OutputState }

func (SdnconnectorForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorForwardingRule)(nil)).Elem()
}

func (o SdnconnectorForwardingRuleOutput) ToSdnconnectorForwardingRuleOutput() SdnconnectorForwardingRuleOutput {
	return o
}

func (o SdnconnectorForwardingRuleOutput) ToSdnconnectorForwardingRuleOutputWithContext(ctx context.Context) SdnconnectorForwardingRuleOutput {
	return o
}

// Forwarding rule name.
func (o SdnconnectorForwardingRuleOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorForwardingRule) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

// Target instance name.
func (o SdnconnectorForwardingRuleOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorForwardingRule) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type SdnconnectorForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorForwardingRule)(nil)).Elem()
}

func (o SdnconnectorForwardingRuleArrayOutput) ToSdnconnectorForwardingRuleArrayOutput() SdnconnectorForwardingRuleArrayOutput {
	return o
}

func (o SdnconnectorForwardingRuleArrayOutput) ToSdnconnectorForwardingRuleArrayOutputWithContext(ctx context.Context) SdnconnectorForwardingRuleArrayOutput {
	return o
}

func (o SdnconnectorForwardingRuleArrayOutput) Index(i pulumi.IntInput) SdnconnectorForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorForwardingRule {
		return vs[0].([]SdnconnectorForwardingRule)[vs[1].(int)]
	}).(SdnconnectorForwardingRuleOutput)
}

type SdnconnectorGcpProjectList struct {
	// Configure GCP zone list. The structure of `gcpZoneList` block is documented below.
	GcpZoneLists []SdnconnectorGcpProjectListGcpZoneList `pulumi:"gcpZoneLists"`
	// GCP project ID.
	Id *string `pulumi:"id"`
}

// SdnconnectorGcpProjectListInput is an input type that accepts SdnconnectorGcpProjectListArgs and SdnconnectorGcpProjectListOutput values.
// You can construct a concrete instance of `SdnconnectorGcpProjectListInput` via:
//
//	SdnconnectorGcpProjectListArgs{...}
type SdnconnectorGcpProjectListInput interface {
	pulumi.Input

	ToSdnconnectorGcpProjectListOutput() SdnconnectorGcpProjectListOutput
	ToSdnconnectorGcpProjectListOutputWithContext(context.Context) SdnconnectorGcpProjectListOutput
}

type SdnconnectorGcpProjectListArgs struct {
	// Configure GCP zone list. The structure of `gcpZoneList` block is documented below.
	GcpZoneLists SdnconnectorGcpProjectListGcpZoneListArrayInput `pulumi:"gcpZoneLists"`
	// GCP project ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SdnconnectorGcpProjectListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorGcpProjectList)(nil)).Elem()
}

func (i SdnconnectorGcpProjectListArgs) ToSdnconnectorGcpProjectListOutput() SdnconnectorGcpProjectListOutput {
	return i.ToSdnconnectorGcpProjectListOutputWithContext(context.Background())
}

func (i SdnconnectorGcpProjectListArgs) ToSdnconnectorGcpProjectListOutputWithContext(ctx context.Context) SdnconnectorGcpProjectListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorGcpProjectListOutput)
}

// SdnconnectorGcpProjectListArrayInput is an input type that accepts SdnconnectorGcpProjectListArray and SdnconnectorGcpProjectListArrayOutput values.
// You can construct a concrete instance of `SdnconnectorGcpProjectListArrayInput` via:
//
//	SdnconnectorGcpProjectListArray{ SdnconnectorGcpProjectListArgs{...} }
type SdnconnectorGcpProjectListArrayInput interface {
	pulumi.Input

	ToSdnconnectorGcpProjectListArrayOutput() SdnconnectorGcpProjectListArrayOutput
	ToSdnconnectorGcpProjectListArrayOutputWithContext(context.Context) SdnconnectorGcpProjectListArrayOutput
}

type SdnconnectorGcpProjectListArray []SdnconnectorGcpProjectListInput

func (SdnconnectorGcpProjectListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorGcpProjectList)(nil)).Elem()
}

func (i SdnconnectorGcpProjectListArray) ToSdnconnectorGcpProjectListArrayOutput() SdnconnectorGcpProjectListArrayOutput {
	return i.ToSdnconnectorGcpProjectListArrayOutputWithContext(context.Background())
}

func (i SdnconnectorGcpProjectListArray) ToSdnconnectorGcpProjectListArrayOutputWithContext(ctx context.Context) SdnconnectorGcpProjectListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorGcpProjectListArrayOutput)
}

type SdnconnectorGcpProjectListOutput struct{ *pulumi.OutputState }

func (SdnconnectorGcpProjectListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorGcpProjectList)(nil)).Elem()
}

func (o SdnconnectorGcpProjectListOutput) ToSdnconnectorGcpProjectListOutput() SdnconnectorGcpProjectListOutput {
	return o
}

func (o SdnconnectorGcpProjectListOutput) ToSdnconnectorGcpProjectListOutputWithContext(ctx context.Context) SdnconnectorGcpProjectListOutput {
	return o
}

// Configure GCP zone list. The structure of `gcpZoneList` block is documented below.
func (o SdnconnectorGcpProjectListOutput) GcpZoneLists() SdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return o.ApplyT(func(v SdnconnectorGcpProjectList) []SdnconnectorGcpProjectListGcpZoneList { return v.GcpZoneLists }).(SdnconnectorGcpProjectListGcpZoneListArrayOutput)
}

// GCP project ID.
func (o SdnconnectorGcpProjectListOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorGcpProjectList) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SdnconnectorGcpProjectListArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorGcpProjectListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorGcpProjectList)(nil)).Elem()
}

func (o SdnconnectorGcpProjectListArrayOutput) ToSdnconnectorGcpProjectListArrayOutput() SdnconnectorGcpProjectListArrayOutput {
	return o
}

func (o SdnconnectorGcpProjectListArrayOutput) ToSdnconnectorGcpProjectListArrayOutputWithContext(ctx context.Context) SdnconnectorGcpProjectListArrayOutput {
	return o
}

func (o SdnconnectorGcpProjectListArrayOutput) Index(i pulumi.IntInput) SdnconnectorGcpProjectListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorGcpProjectList {
		return vs[0].([]SdnconnectorGcpProjectList)[vs[1].(int)]
	}).(SdnconnectorGcpProjectListOutput)
}

type SdnconnectorGcpProjectListGcpZoneList struct {
	// GCP zone name.
	Name *string `pulumi:"name"`
}

// SdnconnectorGcpProjectListGcpZoneListInput is an input type that accepts SdnconnectorGcpProjectListGcpZoneListArgs and SdnconnectorGcpProjectListGcpZoneListOutput values.
// You can construct a concrete instance of `SdnconnectorGcpProjectListGcpZoneListInput` via:
//
//	SdnconnectorGcpProjectListGcpZoneListArgs{...}
type SdnconnectorGcpProjectListGcpZoneListInput interface {
	pulumi.Input

	ToSdnconnectorGcpProjectListGcpZoneListOutput() SdnconnectorGcpProjectListGcpZoneListOutput
	ToSdnconnectorGcpProjectListGcpZoneListOutputWithContext(context.Context) SdnconnectorGcpProjectListGcpZoneListOutput
}

type SdnconnectorGcpProjectListGcpZoneListArgs struct {
	// GCP zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdnconnectorGcpProjectListGcpZoneListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (i SdnconnectorGcpProjectListGcpZoneListArgs) ToSdnconnectorGcpProjectListGcpZoneListOutput() SdnconnectorGcpProjectListGcpZoneListOutput {
	return i.ToSdnconnectorGcpProjectListGcpZoneListOutputWithContext(context.Background())
}

func (i SdnconnectorGcpProjectListGcpZoneListArgs) ToSdnconnectorGcpProjectListGcpZoneListOutputWithContext(ctx context.Context) SdnconnectorGcpProjectListGcpZoneListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorGcpProjectListGcpZoneListOutput)
}

// SdnconnectorGcpProjectListGcpZoneListArrayInput is an input type that accepts SdnconnectorGcpProjectListGcpZoneListArray and SdnconnectorGcpProjectListGcpZoneListArrayOutput values.
// You can construct a concrete instance of `SdnconnectorGcpProjectListGcpZoneListArrayInput` via:
//
//	SdnconnectorGcpProjectListGcpZoneListArray{ SdnconnectorGcpProjectListGcpZoneListArgs{...} }
type SdnconnectorGcpProjectListGcpZoneListArrayInput interface {
	pulumi.Input

	ToSdnconnectorGcpProjectListGcpZoneListArrayOutput() SdnconnectorGcpProjectListGcpZoneListArrayOutput
	ToSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(context.Context) SdnconnectorGcpProjectListGcpZoneListArrayOutput
}

type SdnconnectorGcpProjectListGcpZoneListArray []SdnconnectorGcpProjectListGcpZoneListInput

func (SdnconnectorGcpProjectListGcpZoneListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (i SdnconnectorGcpProjectListGcpZoneListArray) ToSdnconnectorGcpProjectListGcpZoneListArrayOutput() SdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return i.ToSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(context.Background())
}

func (i SdnconnectorGcpProjectListGcpZoneListArray) ToSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(ctx context.Context) SdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorGcpProjectListGcpZoneListArrayOutput)
}

type SdnconnectorGcpProjectListGcpZoneListOutput struct{ *pulumi.OutputState }

func (SdnconnectorGcpProjectListGcpZoneListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (o SdnconnectorGcpProjectListGcpZoneListOutput) ToSdnconnectorGcpProjectListGcpZoneListOutput() SdnconnectorGcpProjectListGcpZoneListOutput {
	return o
}

func (o SdnconnectorGcpProjectListGcpZoneListOutput) ToSdnconnectorGcpProjectListGcpZoneListOutputWithContext(ctx context.Context) SdnconnectorGcpProjectListGcpZoneListOutput {
	return o
}

// GCP zone name.
func (o SdnconnectorGcpProjectListGcpZoneListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorGcpProjectListGcpZoneList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdnconnectorGcpProjectListGcpZoneListArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorGcpProjectListGcpZoneListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (o SdnconnectorGcpProjectListGcpZoneListArrayOutput) ToSdnconnectorGcpProjectListGcpZoneListArrayOutput() SdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return o
}

func (o SdnconnectorGcpProjectListGcpZoneListArrayOutput) ToSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(ctx context.Context) SdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return o
}

func (o SdnconnectorGcpProjectListGcpZoneListArrayOutput) Index(i pulumi.IntInput) SdnconnectorGcpProjectListGcpZoneListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorGcpProjectListGcpZoneList {
		return vs[0].([]SdnconnectorGcpProjectListGcpZoneList)[vs[1].(int)]
	}).(SdnconnectorGcpProjectListGcpZoneListOutput)
}

type SdnconnectorNic struct {
	// Configure IP configuration. The structure of `ip` block is documented below.
	Ips []SdnconnectorNicIp `pulumi:"ips"`
	// Network interface name.
	Name *string `pulumi:"name"`
}

// SdnconnectorNicInput is an input type that accepts SdnconnectorNicArgs and SdnconnectorNicOutput values.
// You can construct a concrete instance of `SdnconnectorNicInput` via:
//
//	SdnconnectorNicArgs{...}
type SdnconnectorNicInput interface {
	pulumi.Input

	ToSdnconnectorNicOutput() SdnconnectorNicOutput
	ToSdnconnectorNicOutputWithContext(context.Context) SdnconnectorNicOutput
}

type SdnconnectorNicArgs struct {
	// Configure IP configuration. The structure of `ip` block is documented below.
	Ips SdnconnectorNicIpArrayInput `pulumi:"ips"`
	// Network interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdnconnectorNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorNic)(nil)).Elem()
}

func (i SdnconnectorNicArgs) ToSdnconnectorNicOutput() SdnconnectorNicOutput {
	return i.ToSdnconnectorNicOutputWithContext(context.Background())
}

func (i SdnconnectorNicArgs) ToSdnconnectorNicOutputWithContext(ctx context.Context) SdnconnectorNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorNicOutput)
}

// SdnconnectorNicArrayInput is an input type that accepts SdnconnectorNicArray and SdnconnectorNicArrayOutput values.
// You can construct a concrete instance of `SdnconnectorNicArrayInput` via:
//
//	SdnconnectorNicArray{ SdnconnectorNicArgs{...} }
type SdnconnectorNicArrayInput interface {
	pulumi.Input

	ToSdnconnectorNicArrayOutput() SdnconnectorNicArrayOutput
	ToSdnconnectorNicArrayOutputWithContext(context.Context) SdnconnectorNicArrayOutput
}

type SdnconnectorNicArray []SdnconnectorNicInput

func (SdnconnectorNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorNic)(nil)).Elem()
}

func (i SdnconnectorNicArray) ToSdnconnectorNicArrayOutput() SdnconnectorNicArrayOutput {
	return i.ToSdnconnectorNicArrayOutputWithContext(context.Background())
}

func (i SdnconnectorNicArray) ToSdnconnectorNicArrayOutputWithContext(ctx context.Context) SdnconnectorNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorNicArrayOutput)
}

type SdnconnectorNicOutput struct{ *pulumi.OutputState }

func (SdnconnectorNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorNic)(nil)).Elem()
}

func (o SdnconnectorNicOutput) ToSdnconnectorNicOutput() SdnconnectorNicOutput {
	return o
}

func (o SdnconnectorNicOutput) ToSdnconnectorNicOutputWithContext(ctx context.Context) SdnconnectorNicOutput {
	return o
}

// Configure IP configuration. The structure of `ip` block is documented below.
func (o SdnconnectorNicOutput) Ips() SdnconnectorNicIpArrayOutput {
	return o.ApplyT(func(v SdnconnectorNic) []SdnconnectorNicIp { return v.Ips }).(SdnconnectorNicIpArrayOutput)
}

// Network interface name.
func (o SdnconnectorNicOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorNic) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdnconnectorNicArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorNic)(nil)).Elem()
}

func (o SdnconnectorNicArrayOutput) ToSdnconnectorNicArrayOutput() SdnconnectorNicArrayOutput {
	return o
}

func (o SdnconnectorNicArrayOutput) ToSdnconnectorNicArrayOutputWithContext(ctx context.Context) SdnconnectorNicArrayOutput {
	return o
}

func (o SdnconnectorNicArrayOutput) Index(i pulumi.IntInput) SdnconnectorNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorNic {
		return vs[0].([]SdnconnectorNic)[vs[1].(int)]
	}).(SdnconnectorNicOutput)
}

type SdnconnectorNicIp struct {
	// IP configuration name.
	Name *string `pulumi:"name"`
	// Public IP name.
	PublicIp *string `pulumi:"publicIp"`
	// Resource group of Azure public IP.
	ResourceGroup *string `pulumi:"resourceGroup"`
}

// SdnconnectorNicIpInput is an input type that accepts SdnconnectorNicIpArgs and SdnconnectorNicIpOutput values.
// You can construct a concrete instance of `SdnconnectorNicIpInput` via:
//
//	SdnconnectorNicIpArgs{...}
type SdnconnectorNicIpInput interface {
	pulumi.Input

	ToSdnconnectorNicIpOutput() SdnconnectorNicIpOutput
	ToSdnconnectorNicIpOutputWithContext(context.Context) SdnconnectorNicIpOutput
}

type SdnconnectorNicIpArgs struct {
	// IP configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Public IP name.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// Resource group of Azure public IP.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
}

func (SdnconnectorNicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorNicIp)(nil)).Elem()
}

func (i SdnconnectorNicIpArgs) ToSdnconnectorNicIpOutput() SdnconnectorNicIpOutput {
	return i.ToSdnconnectorNicIpOutputWithContext(context.Background())
}

func (i SdnconnectorNicIpArgs) ToSdnconnectorNicIpOutputWithContext(ctx context.Context) SdnconnectorNicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorNicIpOutput)
}

// SdnconnectorNicIpArrayInput is an input type that accepts SdnconnectorNicIpArray and SdnconnectorNicIpArrayOutput values.
// You can construct a concrete instance of `SdnconnectorNicIpArrayInput` via:
//
//	SdnconnectorNicIpArray{ SdnconnectorNicIpArgs{...} }
type SdnconnectorNicIpArrayInput interface {
	pulumi.Input

	ToSdnconnectorNicIpArrayOutput() SdnconnectorNicIpArrayOutput
	ToSdnconnectorNicIpArrayOutputWithContext(context.Context) SdnconnectorNicIpArrayOutput
}

type SdnconnectorNicIpArray []SdnconnectorNicIpInput

func (SdnconnectorNicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorNicIp)(nil)).Elem()
}

func (i SdnconnectorNicIpArray) ToSdnconnectorNicIpArrayOutput() SdnconnectorNicIpArrayOutput {
	return i.ToSdnconnectorNicIpArrayOutputWithContext(context.Background())
}

func (i SdnconnectorNicIpArray) ToSdnconnectorNicIpArrayOutputWithContext(ctx context.Context) SdnconnectorNicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorNicIpArrayOutput)
}

type SdnconnectorNicIpOutput struct{ *pulumi.OutputState }

func (SdnconnectorNicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorNicIp)(nil)).Elem()
}

func (o SdnconnectorNicIpOutput) ToSdnconnectorNicIpOutput() SdnconnectorNicIpOutput {
	return o
}

func (o SdnconnectorNicIpOutput) ToSdnconnectorNicIpOutputWithContext(ctx context.Context) SdnconnectorNicIpOutput {
	return o
}

// IP configuration name.
func (o SdnconnectorNicIpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorNicIp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Public IP name.
func (o SdnconnectorNicIpOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorNicIp) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// Resource group of Azure public IP.
func (o SdnconnectorNicIpOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorNicIp) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

type SdnconnectorNicIpArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorNicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorNicIp)(nil)).Elem()
}

func (o SdnconnectorNicIpArrayOutput) ToSdnconnectorNicIpArrayOutput() SdnconnectorNicIpArrayOutput {
	return o
}

func (o SdnconnectorNicIpArrayOutput) ToSdnconnectorNicIpArrayOutputWithContext(ctx context.Context) SdnconnectorNicIpArrayOutput {
	return o
}

func (o SdnconnectorNicIpArrayOutput) Index(i pulumi.IntInput) SdnconnectorNicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorNicIp {
		return vs[0].([]SdnconnectorNicIp)[vs[1].(int)]
	}).(SdnconnectorNicIpOutput)
}

type SdnconnectorOciRegionList struct {
	// OCI region.
	Region *string `pulumi:"region"`
}

// SdnconnectorOciRegionListInput is an input type that accepts SdnconnectorOciRegionListArgs and SdnconnectorOciRegionListOutput values.
// You can construct a concrete instance of `SdnconnectorOciRegionListInput` via:
//
//	SdnconnectorOciRegionListArgs{...}
type SdnconnectorOciRegionListInput interface {
	pulumi.Input

	ToSdnconnectorOciRegionListOutput() SdnconnectorOciRegionListOutput
	ToSdnconnectorOciRegionListOutputWithContext(context.Context) SdnconnectorOciRegionListOutput
}

type SdnconnectorOciRegionListArgs struct {
	// OCI region.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (SdnconnectorOciRegionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorOciRegionList)(nil)).Elem()
}

func (i SdnconnectorOciRegionListArgs) ToSdnconnectorOciRegionListOutput() SdnconnectorOciRegionListOutput {
	return i.ToSdnconnectorOciRegionListOutputWithContext(context.Background())
}

func (i SdnconnectorOciRegionListArgs) ToSdnconnectorOciRegionListOutputWithContext(ctx context.Context) SdnconnectorOciRegionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorOciRegionListOutput)
}

// SdnconnectorOciRegionListArrayInput is an input type that accepts SdnconnectorOciRegionListArray and SdnconnectorOciRegionListArrayOutput values.
// You can construct a concrete instance of `SdnconnectorOciRegionListArrayInput` via:
//
//	SdnconnectorOciRegionListArray{ SdnconnectorOciRegionListArgs{...} }
type SdnconnectorOciRegionListArrayInput interface {
	pulumi.Input

	ToSdnconnectorOciRegionListArrayOutput() SdnconnectorOciRegionListArrayOutput
	ToSdnconnectorOciRegionListArrayOutputWithContext(context.Context) SdnconnectorOciRegionListArrayOutput
}

type SdnconnectorOciRegionListArray []SdnconnectorOciRegionListInput

func (SdnconnectorOciRegionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorOciRegionList)(nil)).Elem()
}

func (i SdnconnectorOciRegionListArray) ToSdnconnectorOciRegionListArrayOutput() SdnconnectorOciRegionListArrayOutput {
	return i.ToSdnconnectorOciRegionListArrayOutputWithContext(context.Background())
}

func (i SdnconnectorOciRegionListArray) ToSdnconnectorOciRegionListArrayOutputWithContext(ctx context.Context) SdnconnectorOciRegionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorOciRegionListArrayOutput)
}

type SdnconnectorOciRegionListOutput struct{ *pulumi.OutputState }

func (SdnconnectorOciRegionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorOciRegionList)(nil)).Elem()
}

func (o SdnconnectorOciRegionListOutput) ToSdnconnectorOciRegionListOutput() SdnconnectorOciRegionListOutput {
	return o
}

func (o SdnconnectorOciRegionListOutput) ToSdnconnectorOciRegionListOutputWithContext(ctx context.Context) SdnconnectorOciRegionListOutput {
	return o
}

// OCI region.
func (o SdnconnectorOciRegionListOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorOciRegionList) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type SdnconnectorOciRegionListArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorOciRegionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorOciRegionList)(nil)).Elem()
}

func (o SdnconnectorOciRegionListArrayOutput) ToSdnconnectorOciRegionListArrayOutput() SdnconnectorOciRegionListArrayOutput {
	return o
}

func (o SdnconnectorOciRegionListArrayOutput) ToSdnconnectorOciRegionListArrayOutputWithContext(ctx context.Context) SdnconnectorOciRegionListArrayOutput {
	return o
}

func (o SdnconnectorOciRegionListArrayOutput) Index(i pulumi.IntInput) SdnconnectorOciRegionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorOciRegionList {
		return vs[0].([]SdnconnectorOciRegionList)[vs[1].(int)]
	}).(SdnconnectorOciRegionListOutput)
}

type SdnconnectorRoute struct {
	// Route name.
	Name *string `pulumi:"name"`
}

// SdnconnectorRouteInput is an input type that accepts SdnconnectorRouteArgs and SdnconnectorRouteOutput values.
// You can construct a concrete instance of `SdnconnectorRouteInput` via:
//
//	SdnconnectorRouteArgs{...}
type SdnconnectorRouteInput interface {
	pulumi.Input

	ToSdnconnectorRouteOutput() SdnconnectorRouteOutput
	ToSdnconnectorRouteOutputWithContext(context.Context) SdnconnectorRouteOutput
}

type SdnconnectorRouteArgs struct {
	// Route name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdnconnectorRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorRoute)(nil)).Elem()
}

func (i SdnconnectorRouteArgs) ToSdnconnectorRouteOutput() SdnconnectorRouteOutput {
	return i.ToSdnconnectorRouteOutputWithContext(context.Background())
}

func (i SdnconnectorRouteArgs) ToSdnconnectorRouteOutputWithContext(ctx context.Context) SdnconnectorRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorRouteOutput)
}

// SdnconnectorRouteArrayInput is an input type that accepts SdnconnectorRouteArray and SdnconnectorRouteArrayOutput values.
// You can construct a concrete instance of `SdnconnectorRouteArrayInput` via:
//
//	SdnconnectorRouteArray{ SdnconnectorRouteArgs{...} }
type SdnconnectorRouteArrayInput interface {
	pulumi.Input

	ToSdnconnectorRouteArrayOutput() SdnconnectorRouteArrayOutput
	ToSdnconnectorRouteArrayOutputWithContext(context.Context) SdnconnectorRouteArrayOutput
}

type SdnconnectorRouteArray []SdnconnectorRouteInput

func (SdnconnectorRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorRoute)(nil)).Elem()
}

func (i SdnconnectorRouteArray) ToSdnconnectorRouteArrayOutput() SdnconnectorRouteArrayOutput {
	return i.ToSdnconnectorRouteArrayOutputWithContext(context.Background())
}

func (i SdnconnectorRouteArray) ToSdnconnectorRouteArrayOutputWithContext(ctx context.Context) SdnconnectorRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorRouteArrayOutput)
}

type SdnconnectorRouteOutput struct{ *pulumi.OutputState }

func (SdnconnectorRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorRoute)(nil)).Elem()
}

func (o SdnconnectorRouteOutput) ToSdnconnectorRouteOutput() SdnconnectorRouteOutput {
	return o
}

func (o SdnconnectorRouteOutput) ToSdnconnectorRouteOutputWithContext(ctx context.Context) SdnconnectorRouteOutput {
	return o
}

// Route name.
func (o SdnconnectorRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdnconnectorRouteArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorRoute)(nil)).Elem()
}

func (o SdnconnectorRouteArrayOutput) ToSdnconnectorRouteArrayOutput() SdnconnectorRouteArrayOutput {
	return o
}

func (o SdnconnectorRouteArrayOutput) ToSdnconnectorRouteArrayOutputWithContext(ctx context.Context) SdnconnectorRouteArrayOutput {
	return o
}

func (o SdnconnectorRouteArrayOutput) Index(i pulumi.IntInput) SdnconnectorRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorRoute {
		return vs[0].([]SdnconnectorRoute)[vs[1].(int)]
	}).(SdnconnectorRouteOutput)
}

type SdnconnectorRouteTable struct {
	// Route table name.
	Name *string `pulumi:"name"`
	// Resource group of Azure route table.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Configure Azure route. The structure of `route` block is documented below.
	Routes []SdnconnectorRouteTableRoute `pulumi:"routes"`
	// Subscription ID of Azure route table.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// SdnconnectorRouteTableInput is an input type that accepts SdnconnectorRouteTableArgs and SdnconnectorRouteTableOutput values.
// You can construct a concrete instance of `SdnconnectorRouteTableInput` via:
//
//	SdnconnectorRouteTableArgs{...}
type SdnconnectorRouteTableInput interface {
	pulumi.Input

	ToSdnconnectorRouteTableOutput() SdnconnectorRouteTableOutput
	ToSdnconnectorRouteTableOutputWithContext(context.Context) SdnconnectorRouteTableOutput
}

type SdnconnectorRouteTableArgs struct {
	// Route table name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource group of Azure route table.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Configure Azure route. The structure of `route` block is documented below.
	Routes SdnconnectorRouteTableRouteArrayInput `pulumi:"routes"`
	// Subscription ID of Azure route table.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (SdnconnectorRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorRouteTable)(nil)).Elem()
}

func (i SdnconnectorRouteTableArgs) ToSdnconnectorRouteTableOutput() SdnconnectorRouteTableOutput {
	return i.ToSdnconnectorRouteTableOutputWithContext(context.Background())
}

func (i SdnconnectorRouteTableArgs) ToSdnconnectorRouteTableOutputWithContext(ctx context.Context) SdnconnectorRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorRouteTableOutput)
}

// SdnconnectorRouteTableArrayInput is an input type that accepts SdnconnectorRouteTableArray and SdnconnectorRouteTableArrayOutput values.
// You can construct a concrete instance of `SdnconnectorRouteTableArrayInput` via:
//
//	SdnconnectorRouteTableArray{ SdnconnectorRouteTableArgs{...} }
type SdnconnectorRouteTableArrayInput interface {
	pulumi.Input

	ToSdnconnectorRouteTableArrayOutput() SdnconnectorRouteTableArrayOutput
	ToSdnconnectorRouteTableArrayOutputWithContext(context.Context) SdnconnectorRouteTableArrayOutput
}

type SdnconnectorRouteTableArray []SdnconnectorRouteTableInput

func (SdnconnectorRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorRouteTable)(nil)).Elem()
}

func (i SdnconnectorRouteTableArray) ToSdnconnectorRouteTableArrayOutput() SdnconnectorRouteTableArrayOutput {
	return i.ToSdnconnectorRouteTableArrayOutputWithContext(context.Background())
}

func (i SdnconnectorRouteTableArray) ToSdnconnectorRouteTableArrayOutputWithContext(ctx context.Context) SdnconnectorRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorRouteTableArrayOutput)
}

type SdnconnectorRouteTableOutput struct{ *pulumi.OutputState }

func (SdnconnectorRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorRouteTable)(nil)).Elem()
}

func (o SdnconnectorRouteTableOutput) ToSdnconnectorRouteTableOutput() SdnconnectorRouteTableOutput {
	return o
}

func (o SdnconnectorRouteTableOutput) ToSdnconnectorRouteTableOutputWithContext(ctx context.Context) SdnconnectorRouteTableOutput {
	return o
}

// Route table name.
func (o SdnconnectorRouteTableOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorRouteTable) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource group of Azure route table.
func (o SdnconnectorRouteTableOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorRouteTable) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Configure Azure route. The structure of `route` block is documented below.
func (o SdnconnectorRouteTableOutput) Routes() SdnconnectorRouteTableRouteArrayOutput {
	return o.ApplyT(func(v SdnconnectorRouteTable) []SdnconnectorRouteTableRoute { return v.Routes }).(SdnconnectorRouteTableRouteArrayOutput)
}

// Subscription ID of Azure route table.
func (o SdnconnectorRouteTableOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorRouteTable) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type SdnconnectorRouteTableArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorRouteTable)(nil)).Elem()
}

func (o SdnconnectorRouteTableArrayOutput) ToSdnconnectorRouteTableArrayOutput() SdnconnectorRouteTableArrayOutput {
	return o
}

func (o SdnconnectorRouteTableArrayOutput) ToSdnconnectorRouteTableArrayOutputWithContext(ctx context.Context) SdnconnectorRouteTableArrayOutput {
	return o
}

func (o SdnconnectorRouteTableArrayOutput) Index(i pulumi.IntInput) SdnconnectorRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorRouteTable {
		return vs[0].([]SdnconnectorRouteTable)[vs[1].(int)]
	}).(SdnconnectorRouteTableOutput)
}

type SdnconnectorRouteTableRoute struct {
	// Route name.
	Name *string `pulumi:"name"`
	// Next hop address.
	NextHop *string `pulumi:"nextHop"`
}

// SdnconnectorRouteTableRouteInput is an input type that accepts SdnconnectorRouteTableRouteArgs and SdnconnectorRouteTableRouteOutput values.
// You can construct a concrete instance of `SdnconnectorRouteTableRouteInput` via:
//
//	SdnconnectorRouteTableRouteArgs{...}
type SdnconnectorRouteTableRouteInput interface {
	pulumi.Input

	ToSdnconnectorRouteTableRouteOutput() SdnconnectorRouteTableRouteOutput
	ToSdnconnectorRouteTableRouteOutputWithContext(context.Context) SdnconnectorRouteTableRouteOutput
}

type SdnconnectorRouteTableRouteArgs struct {
	// Route name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Next hop address.
	NextHop pulumi.StringPtrInput `pulumi:"nextHop"`
}

func (SdnconnectorRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorRouteTableRoute)(nil)).Elem()
}

func (i SdnconnectorRouteTableRouteArgs) ToSdnconnectorRouteTableRouteOutput() SdnconnectorRouteTableRouteOutput {
	return i.ToSdnconnectorRouteTableRouteOutputWithContext(context.Background())
}

func (i SdnconnectorRouteTableRouteArgs) ToSdnconnectorRouteTableRouteOutputWithContext(ctx context.Context) SdnconnectorRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorRouteTableRouteOutput)
}

// SdnconnectorRouteTableRouteArrayInput is an input type that accepts SdnconnectorRouteTableRouteArray and SdnconnectorRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `SdnconnectorRouteTableRouteArrayInput` via:
//
//	SdnconnectorRouteTableRouteArray{ SdnconnectorRouteTableRouteArgs{...} }
type SdnconnectorRouteTableRouteArrayInput interface {
	pulumi.Input

	ToSdnconnectorRouteTableRouteArrayOutput() SdnconnectorRouteTableRouteArrayOutput
	ToSdnconnectorRouteTableRouteArrayOutputWithContext(context.Context) SdnconnectorRouteTableRouteArrayOutput
}

type SdnconnectorRouteTableRouteArray []SdnconnectorRouteTableRouteInput

func (SdnconnectorRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorRouteTableRoute)(nil)).Elem()
}

func (i SdnconnectorRouteTableRouteArray) ToSdnconnectorRouteTableRouteArrayOutput() SdnconnectorRouteTableRouteArrayOutput {
	return i.ToSdnconnectorRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i SdnconnectorRouteTableRouteArray) ToSdnconnectorRouteTableRouteArrayOutputWithContext(ctx context.Context) SdnconnectorRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorRouteTableRouteArrayOutput)
}

type SdnconnectorRouteTableRouteOutput struct{ *pulumi.OutputState }

func (SdnconnectorRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorRouteTableRoute)(nil)).Elem()
}

func (o SdnconnectorRouteTableRouteOutput) ToSdnconnectorRouteTableRouteOutput() SdnconnectorRouteTableRouteOutput {
	return o
}

func (o SdnconnectorRouteTableRouteOutput) ToSdnconnectorRouteTableRouteOutputWithContext(ctx context.Context) SdnconnectorRouteTableRouteOutput {
	return o
}

// Route name.
func (o SdnconnectorRouteTableRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorRouteTableRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Next hop address.
func (o SdnconnectorRouteTableRouteOutput) NextHop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorRouteTableRoute) *string { return v.NextHop }).(pulumi.StringPtrOutput)
}

type SdnconnectorRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorRouteTableRoute)(nil)).Elem()
}

func (o SdnconnectorRouteTableRouteArrayOutput) ToSdnconnectorRouteTableRouteArrayOutput() SdnconnectorRouteTableRouteArrayOutput {
	return o
}

func (o SdnconnectorRouteTableRouteArrayOutput) ToSdnconnectorRouteTableRouteArrayOutputWithContext(ctx context.Context) SdnconnectorRouteTableRouteArrayOutput {
	return o
}

func (o SdnconnectorRouteTableRouteArrayOutput) Index(i pulumi.IntInput) SdnconnectorRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorRouteTableRoute {
		return vs[0].([]SdnconnectorRouteTableRoute)[vs[1].(int)]
	}).(SdnconnectorRouteTableRouteOutput)
}

type SdnconnectorServerList struct {
	// IPv4 address.
	Ip *string `pulumi:"ip"`
}

// SdnconnectorServerListInput is an input type that accepts SdnconnectorServerListArgs and SdnconnectorServerListOutput values.
// You can construct a concrete instance of `SdnconnectorServerListInput` via:
//
//	SdnconnectorServerListArgs{...}
type SdnconnectorServerListInput interface {
	pulumi.Input

	ToSdnconnectorServerListOutput() SdnconnectorServerListOutput
	ToSdnconnectorServerListOutputWithContext(context.Context) SdnconnectorServerListOutput
}

type SdnconnectorServerListArgs struct {
	// IPv4 address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SdnconnectorServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorServerList)(nil)).Elem()
}

func (i SdnconnectorServerListArgs) ToSdnconnectorServerListOutput() SdnconnectorServerListOutput {
	return i.ToSdnconnectorServerListOutputWithContext(context.Background())
}

func (i SdnconnectorServerListArgs) ToSdnconnectorServerListOutputWithContext(ctx context.Context) SdnconnectorServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorServerListOutput)
}

// SdnconnectorServerListArrayInput is an input type that accepts SdnconnectorServerListArray and SdnconnectorServerListArrayOutput values.
// You can construct a concrete instance of `SdnconnectorServerListArrayInput` via:
//
//	SdnconnectorServerListArray{ SdnconnectorServerListArgs{...} }
type SdnconnectorServerListArrayInput interface {
	pulumi.Input

	ToSdnconnectorServerListArrayOutput() SdnconnectorServerListArrayOutput
	ToSdnconnectorServerListArrayOutputWithContext(context.Context) SdnconnectorServerListArrayOutput
}

type SdnconnectorServerListArray []SdnconnectorServerListInput

func (SdnconnectorServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorServerList)(nil)).Elem()
}

func (i SdnconnectorServerListArray) ToSdnconnectorServerListArrayOutput() SdnconnectorServerListArrayOutput {
	return i.ToSdnconnectorServerListArrayOutputWithContext(context.Background())
}

func (i SdnconnectorServerListArray) ToSdnconnectorServerListArrayOutputWithContext(ctx context.Context) SdnconnectorServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnconnectorServerListArrayOutput)
}

type SdnconnectorServerListOutput struct{ *pulumi.OutputState }

func (SdnconnectorServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnconnectorServerList)(nil)).Elem()
}

func (o SdnconnectorServerListOutput) ToSdnconnectorServerListOutput() SdnconnectorServerListOutput {
	return o
}

func (o SdnconnectorServerListOutput) ToSdnconnectorServerListOutputWithContext(ctx context.Context) SdnconnectorServerListOutput {
	return o
}

// IPv4 address.
func (o SdnconnectorServerListOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdnconnectorServerList) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SdnconnectorServerListArrayOutput struct{ *pulumi.OutputState }

func (SdnconnectorServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdnconnectorServerList)(nil)).Elem()
}

func (o SdnconnectorServerListArrayOutput) ToSdnconnectorServerListArrayOutput() SdnconnectorServerListArrayOutput {
	return o
}

func (o SdnconnectorServerListArrayOutput) ToSdnconnectorServerListArrayOutputWithContext(ctx context.Context) SdnconnectorServerListArrayOutput {
	return o
}

func (o SdnconnectorServerListArrayOutput) Index(i pulumi.IntInput) SdnconnectorServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdnconnectorServerList {
		return vs[0].([]SdnconnectorServerList)[vs[1].(int)]
	}).(SdnconnectorServerListOutput)
}

type SdwanDuplication struct {
	// Destination address6 or address6 group names. The structure of `dstaddr6` block is documented below.
	Dstaddr6s []SdwanDuplicationDstaddr6 `pulumi:"dstaddr6s"`
	// Destination address or address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs []SdwanDuplicationDstaddr `pulumi:"dstaddrs"`
	// Outgoing (egress) interfaces or zones. The structure of `dstintf` block is documented below.
	Dstintfs []SdwanDuplicationDstintf `pulumi:"dstintfs"`
	// Duplication rule ID (1 - 255).
	Id *int `pulumi:"id"`
	// Enable/disable discarding of packets that have been duplicated. Valid values: `enable`, `disable`.
	PacketDeDuplication *string `pulumi:"packetDeDuplication"`
	// Configure packet duplication method. Valid values: `disable`, `force`, `on-demand`.
	PacketDuplication *string `pulumi:"packetDuplication"`
	// SD-WAN service rule ID list. The structure of `serviceId` block is documented below.
	ServiceIds []SdwanDuplicationServiceId `pulumi:"serviceIds"`
	// Service and service group name. The structure of `service` block is documented below.
	Services []SdwanDuplicationService `pulumi:"services"`
	// Enable/disable packet duplication matching health-check SLAs in service rule. Valid values: `enable`, `disable`.
	SlaMatchService *string `pulumi:"slaMatchService"`
	// Source address6 or address6 group names. The structure of `srcaddr6` block is documented below.
	Srcaddr6s []SdwanDuplicationSrcaddr6 `pulumi:"srcaddr6s"`
	// Source address or address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs []SdwanDuplicationSrcaddr `pulumi:"srcaddrs"`
	// Incoming (ingress) interfaces or zones. The structure of `srcintf` block is documented below.
	Srcintfs []SdwanDuplicationSrcintf `pulumi:"srcintfs"`
}

// SdwanDuplicationInput is an input type that accepts SdwanDuplicationArgs and SdwanDuplicationOutput values.
// You can construct a concrete instance of `SdwanDuplicationInput` via:
//
//	SdwanDuplicationArgs{...}
type SdwanDuplicationInput interface {
	pulumi.Input

	ToSdwanDuplicationOutput() SdwanDuplicationOutput
	ToSdwanDuplicationOutputWithContext(context.Context) SdwanDuplicationOutput
}

type SdwanDuplicationArgs struct {
	// Destination address6 or address6 group names. The structure of `dstaddr6` block is documented below.
	Dstaddr6s SdwanDuplicationDstaddr6ArrayInput `pulumi:"dstaddr6s"`
	// Destination address or address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs SdwanDuplicationDstaddrArrayInput `pulumi:"dstaddrs"`
	// Outgoing (egress) interfaces or zones. The structure of `dstintf` block is documented below.
	Dstintfs SdwanDuplicationDstintfArrayInput `pulumi:"dstintfs"`
	// Duplication rule ID (1 - 255).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable discarding of packets that have been duplicated. Valid values: `enable`, `disable`.
	PacketDeDuplication pulumi.StringPtrInput `pulumi:"packetDeDuplication"`
	// Configure packet duplication method. Valid values: `disable`, `force`, `on-demand`.
	PacketDuplication pulumi.StringPtrInput `pulumi:"packetDuplication"`
	// SD-WAN service rule ID list. The structure of `serviceId` block is documented below.
	ServiceIds SdwanDuplicationServiceIdArrayInput `pulumi:"serviceIds"`
	// Service and service group name. The structure of `service` block is documented below.
	Services SdwanDuplicationServiceArrayInput `pulumi:"services"`
	// Enable/disable packet duplication matching health-check SLAs in service rule. Valid values: `enable`, `disable`.
	SlaMatchService pulumi.StringPtrInput `pulumi:"slaMatchService"`
	// Source address6 or address6 group names. The structure of `srcaddr6` block is documented below.
	Srcaddr6s SdwanDuplicationSrcaddr6ArrayInput `pulumi:"srcaddr6s"`
	// Source address or address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs SdwanDuplicationSrcaddrArrayInput `pulumi:"srcaddrs"`
	// Incoming (ingress) interfaces or zones. The structure of `srcintf` block is documented below.
	Srcintfs SdwanDuplicationSrcintfArrayInput `pulumi:"srcintfs"`
}

func (SdwanDuplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplication)(nil)).Elem()
}

func (i SdwanDuplicationArgs) ToSdwanDuplicationOutput() SdwanDuplicationOutput {
	return i.ToSdwanDuplicationOutputWithContext(context.Background())
}

func (i SdwanDuplicationArgs) ToSdwanDuplicationOutputWithContext(ctx context.Context) SdwanDuplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationOutput)
}

// SdwanDuplicationArrayInput is an input type that accepts SdwanDuplicationArray and SdwanDuplicationArrayOutput values.
// You can construct a concrete instance of `SdwanDuplicationArrayInput` via:
//
//	SdwanDuplicationArray{ SdwanDuplicationArgs{...} }
type SdwanDuplicationArrayInput interface {
	pulumi.Input

	ToSdwanDuplicationArrayOutput() SdwanDuplicationArrayOutput
	ToSdwanDuplicationArrayOutputWithContext(context.Context) SdwanDuplicationArrayOutput
}

type SdwanDuplicationArray []SdwanDuplicationInput

func (SdwanDuplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplication)(nil)).Elem()
}

func (i SdwanDuplicationArray) ToSdwanDuplicationArrayOutput() SdwanDuplicationArrayOutput {
	return i.ToSdwanDuplicationArrayOutputWithContext(context.Background())
}

func (i SdwanDuplicationArray) ToSdwanDuplicationArrayOutputWithContext(ctx context.Context) SdwanDuplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationArrayOutput)
}

type SdwanDuplicationOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplication)(nil)).Elem()
}

func (o SdwanDuplicationOutput) ToSdwanDuplicationOutput() SdwanDuplicationOutput {
	return o
}

func (o SdwanDuplicationOutput) ToSdwanDuplicationOutputWithContext(ctx context.Context) SdwanDuplicationOutput {
	return o
}

// Destination address6 or address6 group names. The structure of `dstaddr6` block is documented below.
func (o SdwanDuplicationOutput) Dstaddr6s() SdwanDuplicationDstaddr6ArrayOutput {
	return o.ApplyT(func(v SdwanDuplication) []SdwanDuplicationDstaddr6 { return v.Dstaddr6s }).(SdwanDuplicationDstaddr6ArrayOutput)
}

// Destination address or address group names. The structure of `dstaddr` block is documented below.
func (o SdwanDuplicationOutput) Dstaddrs() SdwanDuplicationDstaddrArrayOutput {
	return o.ApplyT(func(v SdwanDuplication) []SdwanDuplicationDstaddr { return v.Dstaddrs }).(SdwanDuplicationDstaddrArrayOutput)
}

// Outgoing (egress) interfaces or zones. The structure of `dstintf` block is documented below.
func (o SdwanDuplicationOutput) Dstintfs() SdwanDuplicationDstintfArrayOutput {
	return o.ApplyT(func(v SdwanDuplication) []SdwanDuplicationDstintf { return v.Dstintfs }).(SdwanDuplicationDstintfArrayOutput)
}

// Duplication rule ID (1 - 255).
func (o SdwanDuplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanDuplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable discarding of packets that have been duplicated. Valid values: `enable`, `disable`.
func (o SdwanDuplicationOutput) PacketDeDuplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanDuplication) *string { return v.PacketDeDuplication }).(pulumi.StringPtrOutput)
}

// Configure packet duplication method. Valid values: `disable`, `force`, `on-demand`.
func (o SdwanDuplicationOutput) PacketDuplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanDuplication) *string { return v.PacketDuplication }).(pulumi.StringPtrOutput)
}

// SD-WAN service rule ID list. The structure of `serviceId` block is documented below.
func (o SdwanDuplicationOutput) ServiceIds() SdwanDuplicationServiceIdArrayOutput {
	return o.ApplyT(func(v SdwanDuplication) []SdwanDuplicationServiceId { return v.ServiceIds }).(SdwanDuplicationServiceIdArrayOutput)
}

// Service and service group name. The structure of `service` block is documented below.
func (o SdwanDuplicationOutput) Services() SdwanDuplicationServiceArrayOutput {
	return o.ApplyT(func(v SdwanDuplication) []SdwanDuplicationService { return v.Services }).(SdwanDuplicationServiceArrayOutput)
}

// Enable/disable packet duplication matching health-check SLAs in service rule. Valid values: `enable`, `disable`.
func (o SdwanDuplicationOutput) SlaMatchService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanDuplication) *string { return v.SlaMatchService }).(pulumi.StringPtrOutput)
}

// Source address6 or address6 group names. The structure of `srcaddr6` block is documented below.
func (o SdwanDuplicationOutput) Srcaddr6s() SdwanDuplicationSrcaddr6ArrayOutput {
	return o.ApplyT(func(v SdwanDuplication) []SdwanDuplicationSrcaddr6 { return v.Srcaddr6s }).(SdwanDuplicationSrcaddr6ArrayOutput)
}

// Source address or address group names. The structure of `srcaddr` block is documented below.
func (o SdwanDuplicationOutput) Srcaddrs() SdwanDuplicationSrcaddrArrayOutput {
	return o.ApplyT(func(v SdwanDuplication) []SdwanDuplicationSrcaddr { return v.Srcaddrs }).(SdwanDuplicationSrcaddrArrayOutput)
}

// Incoming (ingress) interfaces or zones. The structure of `srcintf` block is documented below.
func (o SdwanDuplicationOutput) Srcintfs() SdwanDuplicationSrcintfArrayOutput {
	return o.ApplyT(func(v SdwanDuplication) []SdwanDuplicationSrcintf { return v.Srcintfs }).(SdwanDuplicationSrcintfArrayOutput)
}

type SdwanDuplicationArrayOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplication)(nil)).Elem()
}

func (o SdwanDuplicationArrayOutput) ToSdwanDuplicationArrayOutput() SdwanDuplicationArrayOutput {
	return o
}

func (o SdwanDuplicationArrayOutput) ToSdwanDuplicationArrayOutputWithContext(ctx context.Context) SdwanDuplicationArrayOutput {
	return o
}

func (o SdwanDuplicationArrayOutput) Index(i pulumi.IntInput) SdwanDuplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanDuplication {
		return vs[0].([]SdwanDuplication)[vs[1].(int)]
	}).(SdwanDuplicationOutput)
}

type SdwanDuplicationDstaddr6 struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// SdwanDuplicationDstaddr6Input is an input type that accepts SdwanDuplicationDstaddr6Args and SdwanDuplicationDstaddr6Output values.
// You can construct a concrete instance of `SdwanDuplicationDstaddr6Input` via:
//
//	SdwanDuplicationDstaddr6Args{...}
type SdwanDuplicationDstaddr6Input interface {
	pulumi.Input

	ToSdwanDuplicationDstaddr6Output() SdwanDuplicationDstaddr6Output
	ToSdwanDuplicationDstaddr6OutputWithContext(context.Context) SdwanDuplicationDstaddr6Output
}

type SdwanDuplicationDstaddr6Args struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanDuplicationDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationDstaddr6)(nil)).Elem()
}

func (i SdwanDuplicationDstaddr6Args) ToSdwanDuplicationDstaddr6Output() SdwanDuplicationDstaddr6Output {
	return i.ToSdwanDuplicationDstaddr6OutputWithContext(context.Background())
}

func (i SdwanDuplicationDstaddr6Args) ToSdwanDuplicationDstaddr6OutputWithContext(ctx context.Context) SdwanDuplicationDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationDstaddr6Output)
}

// SdwanDuplicationDstaddr6ArrayInput is an input type that accepts SdwanDuplicationDstaddr6Array and SdwanDuplicationDstaddr6ArrayOutput values.
// You can construct a concrete instance of `SdwanDuplicationDstaddr6ArrayInput` via:
//
//	SdwanDuplicationDstaddr6Array{ SdwanDuplicationDstaddr6Args{...} }
type SdwanDuplicationDstaddr6ArrayInput interface {
	pulumi.Input

	ToSdwanDuplicationDstaddr6ArrayOutput() SdwanDuplicationDstaddr6ArrayOutput
	ToSdwanDuplicationDstaddr6ArrayOutputWithContext(context.Context) SdwanDuplicationDstaddr6ArrayOutput
}

type SdwanDuplicationDstaddr6Array []SdwanDuplicationDstaddr6Input

func (SdwanDuplicationDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationDstaddr6)(nil)).Elem()
}

func (i SdwanDuplicationDstaddr6Array) ToSdwanDuplicationDstaddr6ArrayOutput() SdwanDuplicationDstaddr6ArrayOutput {
	return i.ToSdwanDuplicationDstaddr6ArrayOutputWithContext(context.Background())
}

func (i SdwanDuplicationDstaddr6Array) ToSdwanDuplicationDstaddr6ArrayOutputWithContext(ctx context.Context) SdwanDuplicationDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationDstaddr6ArrayOutput)
}

type SdwanDuplicationDstaddr6Output struct{ *pulumi.OutputState }

func (SdwanDuplicationDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationDstaddr6)(nil)).Elem()
}

func (o SdwanDuplicationDstaddr6Output) ToSdwanDuplicationDstaddr6Output() SdwanDuplicationDstaddr6Output {
	return o
}

func (o SdwanDuplicationDstaddr6Output) ToSdwanDuplicationDstaddr6OutputWithContext(ctx context.Context) SdwanDuplicationDstaddr6Output {
	return o
}

// Address or address group name.
func (o SdwanDuplicationDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanDuplicationDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanDuplicationDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationDstaddr6)(nil)).Elem()
}

func (o SdwanDuplicationDstaddr6ArrayOutput) ToSdwanDuplicationDstaddr6ArrayOutput() SdwanDuplicationDstaddr6ArrayOutput {
	return o
}

func (o SdwanDuplicationDstaddr6ArrayOutput) ToSdwanDuplicationDstaddr6ArrayOutputWithContext(ctx context.Context) SdwanDuplicationDstaddr6ArrayOutput {
	return o
}

func (o SdwanDuplicationDstaddr6ArrayOutput) Index(i pulumi.IntInput) SdwanDuplicationDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanDuplicationDstaddr6 {
		return vs[0].([]SdwanDuplicationDstaddr6)[vs[1].(int)]
	}).(SdwanDuplicationDstaddr6Output)
}

type SdwanDuplicationDstaddr struct {
	// Address6 or address6 group name.
	Name *string `pulumi:"name"`
}

// SdwanDuplicationDstaddrInput is an input type that accepts SdwanDuplicationDstaddrArgs and SdwanDuplicationDstaddrOutput values.
// You can construct a concrete instance of `SdwanDuplicationDstaddrInput` via:
//
//	SdwanDuplicationDstaddrArgs{...}
type SdwanDuplicationDstaddrInput interface {
	pulumi.Input

	ToSdwanDuplicationDstaddrOutput() SdwanDuplicationDstaddrOutput
	ToSdwanDuplicationDstaddrOutputWithContext(context.Context) SdwanDuplicationDstaddrOutput
}

type SdwanDuplicationDstaddrArgs struct {
	// Address6 or address6 group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanDuplicationDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationDstaddr)(nil)).Elem()
}

func (i SdwanDuplicationDstaddrArgs) ToSdwanDuplicationDstaddrOutput() SdwanDuplicationDstaddrOutput {
	return i.ToSdwanDuplicationDstaddrOutputWithContext(context.Background())
}

func (i SdwanDuplicationDstaddrArgs) ToSdwanDuplicationDstaddrOutputWithContext(ctx context.Context) SdwanDuplicationDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationDstaddrOutput)
}

// SdwanDuplicationDstaddrArrayInput is an input type that accepts SdwanDuplicationDstaddrArray and SdwanDuplicationDstaddrArrayOutput values.
// You can construct a concrete instance of `SdwanDuplicationDstaddrArrayInput` via:
//
//	SdwanDuplicationDstaddrArray{ SdwanDuplicationDstaddrArgs{...} }
type SdwanDuplicationDstaddrArrayInput interface {
	pulumi.Input

	ToSdwanDuplicationDstaddrArrayOutput() SdwanDuplicationDstaddrArrayOutput
	ToSdwanDuplicationDstaddrArrayOutputWithContext(context.Context) SdwanDuplicationDstaddrArrayOutput
}

type SdwanDuplicationDstaddrArray []SdwanDuplicationDstaddrInput

func (SdwanDuplicationDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationDstaddr)(nil)).Elem()
}

func (i SdwanDuplicationDstaddrArray) ToSdwanDuplicationDstaddrArrayOutput() SdwanDuplicationDstaddrArrayOutput {
	return i.ToSdwanDuplicationDstaddrArrayOutputWithContext(context.Background())
}

func (i SdwanDuplicationDstaddrArray) ToSdwanDuplicationDstaddrArrayOutputWithContext(ctx context.Context) SdwanDuplicationDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationDstaddrArrayOutput)
}

type SdwanDuplicationDstaddrOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationDstaddr)(nil)).Elem()
}

func (o SdwanDuplicationDstaddrOutput) ToSdwanDuplicationDstaddrOutput() SdwanDuplicationDstaddrOutput {
	return o
}

func (o SdwanDuplicationDstaddrOutput) ToSdwanDuplicationDstaddrOutputWithContext(ctx context.Context) SdwanDuplicationDstaddrOutput {
	return o
}

// Address6 or address6 group name.
func (o SdwanDuplicationDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanDuplicationDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanDuplicationDstaddrArrayOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationDstaddr)(nil)).Elem()
}

func (o SdwanDuplicationDstaddrArrayOutput) ToSdwanDuplicationDstaddrArrayOutput() SdwanDuplicationDstaddrArrayOutput {
	return o
}

func (o SdwanDuplicationDstaddrArrayOutput) ToSdwanDuplicationDstaddrArrayOutputWithContext(ctx context.Context) SdwanDuplicationDstaddrArrayOutput {
	return o
}

func (o SdwanDuplicationDstaddrArrayOutput) Index(i pulumi.IntInput) SdwanDuplicationDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanDuplicationDstaddr {
		return vs[0].([]SdwanDuplicationDstaddr)[vs[1].(int)]
	}).(SdwanDuplicationDstaddrOutput)
}

type SdwanDuplicationDstintf struct {
	// Interface, zone or SDWAN zone name.
	Name *string `pulumi:"name"`
}

// SdwanDuplicationDstintfInput is an input type that accepts SdwanDuplicationDstintfArgs and SdwanDuplicationDstintfOutput values.
// You can construct a concrete instance of `SdwanDuplicationDstintfInput` via:
//
//	SdwanDuplicationDstintfArgs{...}
type SdwanDuplicationDstintfInput interface {
	pulumi.Input

	ToSdwanDuplicationDstintfOutput() SdwanDuplicationDstintfOutput
	ToSdwanDuplicationDstintfOutputWithContext(context.Context) SdwanDuplicationDstintfOutput
}

type SdwanDuplicationDstintfArgs struct {
	// Interface, zone or SDWAN zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanDuplicationDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationDstintf)(nil)).Elem()
}

func (i SdwanDuplicationDstintfArgs) ToSdwanDuplicationDstintfOutput() SdwanDuplicationDstintfOutput {
	return i.ToSdwanDuplicationDstintfOutputWithContext(context.Background())
}

func (i SdwanDuplicationDstintfArgs) ToSdwanDuplicationDstintfOutputWithContext(ctx context.Context) SdwanDuplicationDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationDstintfOutput)
}

// SdwanDuplicationDstintfArrayInput is an input type that accepts SdwanDuplicationDstintfArray and SdwanDuplicationDstintfArrayOutput values.
// You can construct a concrete instance of `SdwanDuplicationDstintfArrayInput` via:
//
//	SdwanDuplicationDstintfArray{ SdwanDuplicationDstintfArgs{...} }
type SdwanDuplicationDstintfArrayInput interface {
	pulumi.Input

	ToSdwanDuplicationDstintfArrayOutput() SdwanDuplicationDstintfArrayOutput
	ToSdwanDuplicationDstintfArrayOutputWithContext(context.Context) SdwanDuplicationDstintfArrayOutput
}

type SdwanDuplicationDstintfArray []SdwanDuplicationDstintfInput

func (SdwanDuplicationDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationDstintf)(nil)).Elem()
}

func (i SdwanDuplicationDstintfArray) ToSdwanDuplicationDstintfArrayOutput() SdwanDuplicationDstintfArrayOutput {
	return i.ToSdwanDuplicationDstintfArrayOutputWithContext(context.Background())
}

func (i SdwanDuplicationDstintfArray) ToSdwanDuplicationDstintfArrayOutputWithContext(ctx context.Context) SdwanDuplicationDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationDstintfArrayOutput)
}

type SdwanDuplicationDstintfOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationDstintf)(nil)).Elem()
}

func (o SdwanDuplicationDstintfOutput) ToSdwanDuplicationDstintfOutput() SdwanDuplicationDstintfOutput {
	return o
}

func (o SdwanDuplicationDstintfOutput) ToSdwanDuplicationDstintfOutputWithContext(ctx context.Context) SdwanDuplicationDstintfOutput {
	return o
}

// Interface, zone or SDWAN zone name.
func (o SdwanDuplicationDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanDuplicationDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanDuplicationDstintfArrayOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationDstintf)(nil)).Elem()
}

func (o SdwanDuplicationDstintfArrayOutput) ToSdwanDuplicationDstintfArrayOutput() SdwanDuplicationDstintfArrayOutput {
	return o
}

func (o SdwanDuplicationDstintfArrayOutput) ToSdwanDuplicationDstintfArrayOutputWithContext(ctx context.Context) SdwanDuplicationDstintfArrayOutput {
	return o
}

func (o SdwanDuplicationDstintfArrayOutput) Index(i pulumi.IntInput) SdwanDuplicationDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanDuplicationDstintf {
		return vs[0].([]SdwanDuplicationDstintf)[vs[1].(int)]
	}).(SdwanDuplicationDstintfOutput)
}

type SdwanDuplicationService struct {
	// Service and service group name.
	Name *string `pulumi:"name"`
}

// SdwanDuplicationServiceInput is an input type that accepts SdwanDuplicationServiceArgs and SdwanDuplicationServiceOutput values.
// You can construct a concrete instance of `SdwanDuplicationServiceInput` via:
//
//	SdwanDuplicationServiceArgs{...}
type SdwanDuplicationServiceInput interface {
	pulumi.Input

	ToSdwanDuplicationServiceOutput() SdwanDuplicationServiceOutput
	ToSdwanDuplicationServiceOutputWithContext(context.Context) SdwanDuplicationServiceOutput
}

type SdwanDuplicationServiceArgs struct {
	// Service and service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanDuplicationServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationService)(nil)).Elem()
}

func (i SdwanDuplicationServiceArgs) ToSdwanDuplicationServiceOutput() SdwanDuplicationServiceOutput {
	return i.ToSdwanDuplicationServiceOutputWithContext(context.Background())
}

func (i SdwanDuplicationServiceArgs) ToSdwanDuplicationServiceOutputWithContext(ctx context.Context) SdwanDuplicationServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationServiceOutput)
}

// SdwanDuplicationServiceArrayInput is an input type that accepts SdwanDuplicationServiceArray and SdwanDuplicationServiceArrayOutput values.
// You can construct a concrete instance of `SdwanDuplicationServiceArrayInput` via:
//
//	SdwanDuplicationServiceArray{ SdwanDuplicationServiceArgs{...} }
type SdwanDuplicationServiceArrayInput interface {
	pulumi.Input

	ToSdwanDuplicationServiceArrayOutput() SdwanDuplicationServiceArrayOutput
	ToSdwanDuplicationServiceArrayOutputWithContext(context.Context) SdwanDuplicationServiceArrayOutput
}

type SdwanDuplicationServiceArray []SdwanDuplicationServiceInput

func (SdwanDuplicationServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationService)(nil)).Elem()
}

func (i SdwanDuplicationServiceArray) ToSdwanDuplicationServiceArrayOutput() SdwanDuplicationServiceArrayOutput {
	return i.ToSdwanDuplicationServiceArrayOutputWithContext(context.Background())
}

func (i SdwanDuplicationServiceArray) ToSdwanDuplicationServiceArrayOutputWithContext(ctx context.Context) SdwanDuplicationServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationServiceArrayOutput)
}

type SdwanDuplicationServiceOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationService)(nil)).Elem()
}

func (o SdwanDuplicationServiceOutput) ToSdwanDuplicationServiceOutput() SdwanDuplicationServiceOutput {
	return o
}

func (o SdwanDuplicationServiceOutput) ToSdwanDuplicationServiceOutputWithContext(ctx context.Context) SdwanDuplicationServiceOutput {
	return o
}

// Service and service group name.
func (o SdwanDuplicationServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanDuplicationService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanDuplicationServiceArrayOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationService)(nil)).Elem()
}

func (o SdwanDuplicationServiceArrayOutput) ToSdwanDuplicationServiceArrayOutput() SdwanDuplicationServiceArrayOutput {
	return o
}

func (o SdwanDuplicationServiceArrayOutput) ToSdwanDuplicationServiceArrayOutputWithContext(ctx context.Context) SdwanDuplicationServiceArrayOutput {
	return o
}

func (o SdwanDuplicationServiceArrayOutput) Index(i pulumi.IntInput) SdwanDuplicationServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanDuplicationService {
		return vs[0].([]SdwanDuplicationService)[vs[1].(int)]
	}).(SdwanDuplicationServiceOutput)
}

type SdwanDuplicationServiceId struct {
	// SD-WAN service rule ID.
	Id *int `pulumi:"id"`
}

// SdwanDuplicationServiceIdInput is an input type that accepts SdwanDuplicationServiceIdArgs and SdwanDuplicationServiceIdOutput values.
// You can construct a concrete instance of `SdwanDuplicationServiceIdInput` via:
//
//	SdwanDuplicationServiceIdArgs{...}
type SdwanDuplicationServiceIdInput interface {
	pulumi.Input

	ToSdwanDuplicationServiceIdOutput() SdwanDuplicationServiceIdOutput
	ToSdwanDuplicationServiceIdOutputWithContext(context.Context) SdwanDuplicationServiceIdOutput
}

type SdwanDuplicationServiceIdArgs struct {
	// SD-WAN service rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SdwanDuplicationServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationServiceId)(nil)).Elem()
}

func (i SdwanDuplicationServiceIdArgs) ToSdwanDuplicationServiceIdOutput() SdwanDuplicationServiceIdOutput {
	return i.ToSdwanDuplicationServiceIdOutputWithContext(context.Background())
}

func (i SdwanDuplicationServiceIdArgs) ToSdwanDuplicationServiceIdOutputWithContext(ctx context.Context) SdwanDuplicationServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationServiceIdOutput)
}

// SdwanDuplicationServiceIdArrayInput is an input type that accepts SdwanDuplicationServiceIdArray and SdwanDuplicationServiceIdArrayOutput values.
// You can construct a concrete instance of `SdwanDuplicationServiceIdArrayInput` via:
//
//	SdwanDuplicationServiceIdArray{ SdwanDuplicationServiceIdArgs{...} }
type SdwanDuplicationServiceIdArrayInput interface {
	pulumi.Input

	ToSdwanDuplicationServiceIdArrayOutput() SdwanDuplicationServiceIdArrayOutput
	ToSdwanDuplicationServiceIdArrayOutputWithContext(context.Context) SdwanDuplicationServiceIdArrayOutput
}

type SdwanDuplicationServiceIdArray []SdwanDuplicationServiceIdInput

func (SdwanDuplicationServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationServiceId)(nil)).Elem()
}

func (i SdwanDuplicationServiceIdArray) ToSdwanDuplicationServiceIdArrayOutput() SdwanDuplicationServiceIdArrayOutput {
	return i.ToSdwanDuplicationServiceIdArrayOutputWithContext(context.Background())
}

func (i SdwanDuplicationServiceIdArray) ToSdwanDuplicationServiceIdArrayOutputWithContext(ctx context.Context) SdwanDuplicationServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationServiceIdArrayOutput)
}

type SdwanDuplicationServiceIdOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationServiceId)(nil)).Elem()
}

func (o SdwanDuplicationServiceIdOutput) ToSdwanDuplicationServiceIdOutput() SdwanDuplicationServiceIdOutput {
	return o
}

func (o SdwanDuplicationServiceIdOutput) ToSdwanDuplicationServiceIdOutputWithContext(ctx context.Context) SdwanDuplicationServiceIdOutput {
	return o
}

// SD-WAN service rule ID.
func (o SdwanDuplicationServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanDuplicationServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SdwanDuplicationServiceIdArrayOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationServiceId)(nil)).Elem()
}

func (o SdwanDuplicationServiceIdArrayOutput) ToSdwanDuplicationServiceIdArrayOutput() SdwanDuplicationServiceIdArrayOutput {
	return o
}

func (o SdwanDuplicationServiceIdArrayOutput) ToSdwanDuplicationServiceIdArrayOutputWithContext(ctx context.Context) SdwanDuplicationServiceIdArrayOutput {
	return o
}

func (o SdwanDuplicationServiceIdArrayOutput) Index(i pulumi.IntInput) SdwanDuplicationServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanDuplicationServiceId {
		return vs[0].([]SdwanDuplicationServiceId)[vs[1].(int)]
	}).(SdwanDuplicationServiceIdOutput)
}

type SdwanDuplicationSrcaddr6 struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// SdwanDuplicationSrcaddr6Input is an input type that accepts SdwanDuplicationSrcaddr6Args and SdwanDuplicationSrcaddr6Output values.
// You can construct a concrete instance of `SdwanDuplicationSrcaddr6Input` via:
//
//	SdwanDuplicationSrcaddr6Args{...}
type SdwanDuplicationSrcaddr6Input interface {
	pulumi.Input

	ToSdwanDuplicationSrcaddr6Output() SdwanDuplicationSrcaddr6Output
	ToSdwanDuplicationSrcaddr6OutputWithContext(context.Context) SdwanDuplicationSrcaddr6Output
}

type SdwanDuplicationSrcaddr6Args struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanDuplicationSrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (i SdwanDuplicationSrcaddr6Args) ToSdwanDuplicationSrcaddr6Output() SdwanDuplicationSrcaddr6Output {
	return i.ToSdwanDuplicationSrcaddr6OutputWithContext(context.Background())
}

func (i SdwanDuplicationSrcaddr6Args) ToSdwanDuplicationSrcaddr6OutputWithContext(ctx context.Context) SdwanDuplicationSrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationSrcaddr6Output)
}

// SdwanDuplicationSrcaddr6ArrayInput is an input type that accepts SdwanDuplicationSrcaddr6Array and SdwanDuplicationSrcaddr6ArrayOutput values.
// You can construct a concrete instance of `SdwanDuplicationSrcaddr6ArrayInput` via:
//
//	SdwanDuplicationSrcaddr6Array{ SdwanDuplicationSrcaddr6Args{...} }
type SdwanDuplicationSrcaddr6ArrayInput interface {
	pulumi.Input

	ToSdwanDuplicationSrcaddr6ArrayOutput() SdwanDuplicationSrcaddr6ArrayOutput
	ToSdwanDuplicationSrcaddr6ArrayOutputWithContext(context.Context) SdwanDuplicationSrcaddr6ArrayOutput
}

type SdwanDuplicationSrcaddr6Array []SdwanDuplicationSrcaddr6Input

func (SdwanDuplicationSrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (i SdwanDuplicationSrcaddr6Array) ToSdwanDuplicationSrcaddr6ArrayOutput() SdwanDuplicationSrcaddr6ArrayOutput {
	return i.ToSdwanDuplicationSrcaddr6ArrayOutputWithContext(context.Background())
}

func (i SdwanDuplicationSrcaddr6Array) ToSdwanDuplicationSrcaddr6ArrayOutputWithContext(ctx context.Context) SdwanDuplicationSrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationSrcaddr6ArrayOutput)
}

type SdwanDuplicationSrcaddr6Output struct{ *pulumi.OutputState }

func (SdwanDuplicationSrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (o SdwanDuplicationSrcaddr6Output) ToSdwanDuplicationSrcaddr6Output() SdwanDuplicationSrcaddr6Output {
	return o
}

func (o SdwanDuplicationSrcaddr6Output) ToSdwanDuplicationSrcaddr6OutputWithContext(ctx context.Context) SdwanDuplicationSrcaddr6Output {
	return o
}

// Address or address group name.
func (o SdwanDuplicationSrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanDuplicationSrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanDuplicationSrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationSrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (o SdwanDuplicationSrcaddr6ArrayOutput) ToSdwanDuplicationSrcaddr6ArrayOutput() SdwanDuplicationSrcaddr6ArrayOutput {
	return o
}

func (o SdwanDuplicationSrcaddr6ArrayOutput) ToSdwanDuplicationSrcaddr6ArrayOutputWithContext(ctx context.Context) SdwanDuplicationSrcaddr6ArrayOutput {
	return o
}

func (o SdwanDuplicationSrcaddr6ArrayOutput) Index(i pulumi.IntInput) SdwanDuplicationSrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanDuplicationSrcaddr6 {
		return vs[0].([]SdwanDuplicationSrcaddr6)[vs[1].(int)]
	}).(SdwanDuplicationSrcaddr6Output)
}

type SdwanDuplicationSrcaddr struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// SdwanDuplicationSrcaddrInput is an input type that accepts SdwanDuplicationSrcaddrArgs and SdwanDuplicationSrcaddrOutput values.
// You can construct a concrete instance of `SdwanDuplicationSrcaddrInput` via:
//
//	SdwanDuplicationSrcaddrArgs{...}
type SdwanDuplicationSrcaddrInput interface {
	pulumi.Input

	ToSdwanDuplicationSrcaddrOutput() SdwanDuplicationSrcaddrOutput
	ToSdwanDuplicationSrcaddrOutputWithContext(context.Context) SdwanDuplicationSrcaddrOutput
}

type SdwanDuplicationSrcaddrArgs struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanDuplicationSrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationSrcaddr)(nil)).Elem()
}

func (i SdwanDuplicationSrcaddrArgs) ToSdwanDuplicationSrcaddrOutput() SdwanDuplicationSrcaddrOutput {
	return i.ToSdwanDuplicationSrcaddrOutputWithContext(context.Background())
}

func (i SdwanDuplicationSrcaddrArgs) ToSdwanDuplicationSrcaddrOutputWithContext(ctx context.Context) SdwanDuplicationSrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationSrcaddrOutput)
}

// SdwanDuplicationSrcaddrArrayInput is an input type that accepts SdwanDuplicationSrcaddrArray and SdwanDuplicationSrcaddrArrayOutput values.
// You can construct a concrete instance of `SdwanDuplicationSrcaddrArrayInput` via:
//
//	SdwanDuplicationSrcaddrArray{ SdwanDuplicationSrcaddrArgs{...} }
type SdwanDuplicationSrcaddrArrayInput interface {
	pulumi.Input

	ToSdwanDuplicationSrcaddrArrayOutput() SdwanDuplicationSrcaddrArrayOutput
	ToSdwanDuplicationSrcaddrArrayOutputWithContext(context.Context) SdwanDuplicationSrcaddrArrayOutput
}

type SdwanDuplicationSrcaddrArray []SdwanDuplicationSrcaddrInput

func (SdwanDuplicationSrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationSrcaddr)(nil)).Elem()
}

func (i SdwanDuplicationSrcaddrArray) ToSdwanDuplicationSrcaddrArrayOutput() SdwanDuplicationSrcaddrArrayOutput {
	return i.ToSdwanDuplicationSrcaddrArrayOutputWithContext(context.Background())
}

func (i SdwanDuplicationSrcaddrArray) ToSdwanDuplicationSrcaddrArrayOutputWithContext(ctx context.Context) SdwanDuplicationSrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationSrcaddrArrayOutput)
}

type SdwanDuplicationSrcaddrOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationSrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationSrcaddr)(nil)).Elem()
}

func (o SdwanDuplicationSrcaddrOutput) ToSdwanDuplicationSrcaddrOutput() SdwanDuplicationSrcaddrOutput {
	return o
}

func (o SdwanDuplicationSrcaddrOutput) ToSdwanDuplicationSrcaddrOutputWithContext(ctx context.Context) SdwanDuplicationSrcaddrOutput {
	return o
}

// Address or address group name.
func (o SdwanDuplicationSrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanDuplicationSrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanDuplicationSrcaddrArrayOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationSrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationSrcaddr)(nil)).Elem()
}

func (o SdwanDuplicationSrcaddrArrayOutput) ToSdwanDuplicationSrcaddrArrayOutput() SdwanDuplicationSrcaddrArrayOutput {
	return o
}

func (o SdwanDuplicationSrcaddrArrayOutput) ToSdwanDuplicationSrcaddrArrayOutputWithContext(ctx context.Context) SdwanDuplicationSrcaddrArrayOutput {
	return o
}

func (o SdwanDuplicationSrcaddrArrayOutput) Index(i pulumi.IntInput) SdwanDuplicationSrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanDuplicationSrcaddr {
		return vs[0].([]SdwanDuplicationSrcaddr)[vs[1].(int)]
	}).(SdwanDuplicationSrcaddrOutput)
}

type SdwanDuplicationSrcintf struct {
	// Interface, zone or SDWAN zone name.
	Name *string `pulumi:"name"`
}

// SdwanDuplicationSrcintfInput is an input type that accepts SdwanDuplicationSrcintfArgs and SdwanDuplicationSrcintfOutput values.
// You can construct a concrete instance of `SdwanDuplicationSrcintfInput` via:
//
//	SdwanDuplicationSrcintfArgs{...}
type SdwanDuplicationSrcintfInput interface {
	pulumi.Input

	ToSdwanDuplicationSrcintfOutput() SdwanDuplicationSrcintfOutput
	ToSdwanDuplicationSrcintfOutputWithContext(context.Context) SdwanDuplicationSrcintfOutput
}

type SdwanDuplicationSrcintfArgs struct {
	// Interface, zone or SDWAN zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanDuplicationSrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationSrcintf)(nil)).Elem()
}

func (i SdwanDuplicationSrcintfArgs) ToSdwanDuplicationSrcintfOutput() SdwanDuplicationSrcintfOutput {
	return i.ToSdwanDuplicationSrcintfOutputWithContext(context.Background())
}

func (i SdwanDuplicationSrcintfArgs) ToSdwanDuplicationSrcintfOutputWithContext(ctx context.Context) SdwanDuplicationSrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationSrcintfOutput)
}

// SdwanDuplicationSrcintfArrayInput is an input type that accepts SdwanDuplicationSrcintfArray and SdwanDuplicationSrcintfArrayOutput values.
// You can construct a concrete instance of `SdwanDuplicationSrcintfArrayInput` via:
//
//	SdwanDuplicationSrcintfArray{ SdwanDuplicationSrcintfArgs{...} }
type SdwanDuplicationSrcintfArrayInput interface {
	pulumi.Input

	ToSdwanDuplicationSrcintfArrayOutput() SdwanDuplicationSrcintfArrayOutput
	ToSdwanDuplicationSrcintfArrayOutputWithContext(context.Context) SdwanDuplicationSrcintfArrayOutput
}

type SdwanDuplicationSrcintfArray []SdwanDuplicationSrcintfInput

func (SdwanDuplicationSrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationSrcintf)(nil)).Elem()
}

func (i SdwanDuplicationSrcintfArray) ToSdwanDuplicationSrcintfArrayOutput() SdwanDuplicationSrcintfArrayOutput {
	return i.ToSdwanDuplicationSrcintfArrayOutputWithContext(context.Background())
}

func (i SdwanDuplicationSrcintfArray) ToSdwanDuplicationSrcintfArrayOutputWithContext(ctx context.Context) SdwanDuplicationSrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanDuplicationSrcintfArrayOutput)
}

type SdwanDuplicationSrcintfOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationSrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanDuplicationSrcintf)(nil)).Elem()
}

func (o SdwanDuplicationSrcintfOutput) ToSdwanDuplicationSrcintfOutput() SdwanDuplicationSrcintfOutput {
	return o
}

func (o SdwanDuplicationSrcintfOutput) ToSdwanDuplicationSrcintfOutputWithContext(ctx context.Context) SdwanDuplicationSrcintfOutput {
	return o
}

// Interface, zone or SDWAN zone name.
func (o SdwanDuplicationSrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanDuplicationSrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanDuplicationSrcintfArrayOutput struct{ *pulumi.OutputState }

func (SdwanDuplicationSrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanDuplicationSrcintf)(nil)).Elem()
}

func (o SdwanDuplicationSrcintfArrayOutput) ToSdwanDuplicationSrcintfArrayOutput() SdwanDuplicationSrcintfArrayOutput {
	return o
}

func (o SdwanDuplicationSrcintfArrayOutput) ToSdwanDuplicationSrcintfArrayOutputWithContext(ctx context.Context) SdwanDuplicationSrcintfArrayOutput {
	return o
}

func (o SdwanDuplicationSrcintfArrayOutput) Index(i pulumi.IntInput) SdwanDuplicationSrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanDuplicationSrcintf {
		return vs[0].([]SdwanDuplicationSrcintf)[vs[1].(int)]
	}).(SdwanDuplicationSrcintfOutput)
}

type SdwanFailAlertInterface struct {
	// Physical interface name.
	Name *string `pulumi:"name"`
}

// SdwanFailAlertInterfaceInput is an input type that accepts SdwanFailAlertInterfaceArgs and SdwanFailAlertInterfaceOutput values.
// You can construct a concrete instance of `SdwanFailAlertInterfaceInput` via:
//
//	SdwanFailAlertInterfaceArgs{...}
type SdwanFailAlertInterfaceInput interface {
	pulumi.Input

	ToSdwanFailAlertInterfaceOutput() SdwanFailAlertInterfaceOutput
	ToSdwanFailAlertInterfaceOutputWithContext(context.Context) SdwanFailAlertInterfaceOutput
}

type SdwanFailAlertInterfaceArgs struct {
	// Physical interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanFailAlertInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanFailAlertInterface)(nil)).Elem()
}

func (i SdwanFailAlertInterfaceArgs) ToSdwanFailAlertInterfaceOutput() SdwanFailAlertInterfaceOutput {
	return i.ToSdwanFailAlertInterfaceOutputWithContext(context.Background())
}

func (i SdwanFailAlertInterfaceArgs) ToSdwanFailAlertInterfaceOutputWithContext(ctx context.Context) SdwanFailAlertInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanFailAlertInterfaceOutput)
}

// SdwanFailAlertInterfaceArrayInput is an input type that accepts SdwanFailAlertInterfaceArray and SdwanFailAlertInterfaceArrayOutput values.
// You can construct a concrete instance of `SdwanFailAlertInterfaceArrayInput` via:
//
//	SdwanFailAlertInterfaceArray{ SdwanFailAlertInterfaceArgs{...} }
type SdwanFailAlertInterfaceArrayInput interface {
	pulumi.Input

	ToSdwanFailAlertInterfaceArrayOutput() SdwanFailAlertInterfaceArrayOutput
	ToSdwanFailAlertInterfaceArrayOutputWithContext(context.Context) SdwanFailAlertInterfaceArrayOutput
}

type SdwanFailAlertInterfaceArray []SdwanFailAlertInterfaceInput

func (SdwanFailAlertInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanFailAlertInterface)(nil)).Elem()
}

func (i SdwanFailAlertInterfaceArray) ToSdwanFailAlertInterfaceArrayOutput() SdwanFailAlertInterfaceArrayOutput {
	return i.ToSdwanFailAlertInterfaceArrayOutputWithContext(context.Background())
}

func (i SdwanFailAlertInterfaceArray) ToSdwanFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SdwanFailAlertInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanFailAlertInterfaceArrayOutput)
}

type SdwanFailAlertInterfaceOutput struct{ *pulumi.OutputState }

func (SdwanFailAlertInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanFailAlertInterface)(nil)).Elem()
}

func (o SdwanFailAlertInterfaceOutput) ToSdwanFailAlertInterfaceOutput() SdwanFailAlertInterfaceOutput {
	return o
}

func (o SdwanFailAlertInterfaceOutput) ToSdwanFailAlertInterfaceOutputWithContext(ctx context.Context) SdwanFailAlertInterfaceOutput {
	return o
}

// Physical interface name.
func (o SdwanFailAlertInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanFailAlertInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanFailAlertInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SdwanFailAlertInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanFailAlertInterface)(nil)).Elem()
}

func (o SdwanFailAlertInterfaceArrayOutput) ToSdwanFailAlertInterfaceArrayOutput() SdwanFailAlertInterfaceArrayOutput {
	return o
}

func (o SdwanFailAlertInterfaceArrayOutput) ToSdwanFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SdwanFailAlertInterfaceArrayOutput {
	return o
}

func (o SdwanFailAlertInterfaceArrayOutput) Index(i pulumi.IntInput) SdwanFailAlertInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanFailAlertInterface {
		return vs[0].([]SdwanFailAlertInterface)[vs[1].(int)]
	}).(SdwanFailAlertInterfaceOutput)
}

type SdwanHealthCheck struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Traffic class ID.
	ClassId *int `pulumi:"classId"`
	// The mode determining how to detect the server.
	DetectMode *string `pulumi:"detectMode"`
	// Differentiated services code point (DSCP) in the IP header of the probe packet.
	Diffservcode *string `pulumi:"diffservcode"`
	// Response IP expected from DNS server if the protocol is DNS.
	DnsMatchIp *string `pulumi:"dnsMatchIp"`
	// Fully qualified domain name to resolve for the DNS probe.
	DnsRequestDomain *string `pulumi:"dnsRequestDomain"`
	// Enable/disable embedding measured health information. Valid values: `enable`, `disable`.
	EmbedMeasuredHealth *string `pulumi:"embedMeasuredHealth"`
	// Number of failures before server is considered lost (1 - 3600, default = 5).
	Failtime *int `pulumi:"failtime"`
	// Full path and file name on the FTP server to download for FTP health-check to probe.
	FtpFile *string `pulumi:"ftpFile"`
	// FTP mode. Valid values: `passive`, `port`.
	FtpMode *string `pulumi:"ftpMode"`
	// HA election priority (1 - 50).
	HaPriority *int `pulumi:"haPriority"`
	// String in the http-agent field in the HTTP header.
	HttpAgent *string `pulumi:"httpAgent"`
	// URL used to communicate with the server if the protocol if the protocol is HTTP.
	HttpGet *string `pulumi:"httpGet"`
	// Response string expected from the server if the protocol is HTTP.
	HttpMatch *string `pulumi:"httpMatch"`
	// Status check interval in milliseconds, or the time between attempting to connect to the server (500 - 3600*1000 msec, default = 500).
	Interval *int `pulumi:"interval"`
	// Member sequence number list. The structure of `members` block is documented below.
	Members []SdwanHealthCheckMember `pulumi:"members"`
	// Codec to use for MOS calculation (default = g711). Valid values: `g711`, `g722`, `g729`.
	MosCodec *string `pulumi:"mosCodec"`
	// Health check name.
	Name *string `pulumi:"name"`
	// Packet size of a twamp test session,
	PacketSize *int `pulumi:"packetSize"`
	// Twamp controller password in authentication mode
	Password *string `pulumi:"password"`
	// Port number used to communicate with the server over the selected protocol (0-65535, default = 0, auto select. http, twamp: 80, udp-echo, tcp-echo: 7, dns: 53, ftp: 21).
	Port *int `pulumi:"port"`
	// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
	ProbeCount *int `pulumi:"probeCount"`
	// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
	ProbePackets *string `pulumi:"probePackets"`
	// Time to wait before a probe packet is considered lost (500 - 3600*1000 msec, default = 500).
	ProbeTimeout *int `pulumi:"probeTimeout"`
	// Protocol used to determine if the FortiGate can communicate with the server.
	Protocol *string `pulumi:"protocol"`
	// Method to measure the quality of tcp-connect. Valid values: `half-open`, `half-close`.
	QualityMeasuredMethod *string `pulumi:"qualityMeasuredMethod"`
	// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
	Recoverytime *int `pulumi:"recoverytime"`
	// Twamp controller security mode. Valid values: `none`, `authentication`.
	SecurityMode *string `pulumi:"securityMode"`
	// IP address or FQDN name of the server.
	Server *string `pulumi:"server"`
	// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
	SlaFailLogPeriod *int `pulumi:"slaFailLogPeriod"`
	// Select the ID from the SLA sub-table. The selected SLA's priority value will be distributed into the routing table (0 - 32, default = 0).
	SlaIdRedistribute *int `pulumi:"slaIdRedistribute"`
	// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
	SlaPassLogPeriod *int `pulumi:"slaPassLogPeriod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas []SdwanHealthCheckSla `pulumi:"slas"`
	// Source IP address used in the health-check packet to the server.
	Source *string `pulumi:"source"`
	// Source IPv6 addressused in the health-check packet to server.
	Source6 *string `pulumi:"source6"`
	// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
	SystemDns *string `pulumi:"systemDns"`
	// Alert threshold for jitter (ms, default = 0).
	ThresholdAlertJitter *int `pulumi:"thresholdAlertJitter"`
	// Alert threshold for latency (ms, default = 0).
	ThresholdAlertLatency *int `pulumi:"thresholdAlertLatency"`
	// Alert threshold for packet loss (percentage, default = 0).
	ThresholdAlertPacketloss *int `pulumi:"thresholdAlertPacketloss"`
	// Warning threshold for jitter (ms, default = 0).
	ThresholdWarningJitter *int `pulumi:"thresholdWarningJitter"`
	// Warning threshold for latency (ms, default = 0).
	ThresholdWarningLatency *int `pulumi:"thresholdWarningLatency"`
	// Warning threshold for packet loss (percentage, default = 0).
	ThresholdWarningPacketloss *int `pulumi:"thresholdWarningPacketloss"`
	// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
	UpdateCascadeInterface *string `pulumi:"updateCascadeInterface"`
	// Enable/disable updating the static route. Valid values: `enable`, `disable`.
	UpdateStaticRoute *string `pulumi:"updateStaticRoute"`
	// The user name to access probe server.
	User *string `pulumi:"user"`
	// Virtual Routing Forwarding ID.
	Vrf *int `pulumi:"vrf"`
}

// SdwanHealthCheckInput is an input type that accepts SdwanHealthCheckArgs and SdwanHealthCheckOutput values.
// You can construct a concrete instance of `SdwanHealthCheckInput` via:
//
//	SdwanHealthCheckArgs{...}
type SdwanHealthCheckInput interface {
	pulumi.Input

	ToSdwanHealthCheckOutput() SdwanHealthCheckOutput
	ToSdwanHealthCheckOutputWithContext(context.Context) SdwanHealthCheckOutput
}

type SdwanHealthCheckArgs struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Traffic class ID.
	ClassId pulumi.IntPtrInput `pulumi:"classId"`
	// The mode determining how to detect the server.
	DetectMode pulumi.StringPtrInput `pulumi:"detectMode"`
	// Differentiated services code point (DSCP) in the IP header of the probe packet.
	Diffservcode pulumi.StringPtrInput `pulumi:"diffservcode"`
	// Response IP expected from DNS server if the protocol is DNS.
	DnsMatchIp pulumi.StringPtrInput `pulumi:"dnsMatchIp"`
	// Fully qualified domain name to resolve for the DNS probe.
	DnsRequestDomain pulumi.StringPtrInput `pulumi:"dnsRequestDomain"`
	// Enable/disable embedding measured health information. Valid values: `enable`, `disable`.
	EmbedMeasuredHealth pulumi.StringPtrInput `pulumi:"embedMeasuredHealth"`
	// Number of failures before server is considered lost (1 - 3600, default = 5).
	Failtime pulumi.IntPtrInput `pulumi:"failtime"`
	// Full path and file name on the FTP server to download for FTP health-check to probe.
	FtpFile pulumi.StringPtrInput `pulumi:"ftpFile"`
	// FTP mode. Valid values: `passive`, `port`.
	FtpMode pulumi.StringPtrInput `pulumi:"ftpMode"`
	// HA election priority (1 - 50).
	HaPriority pulumi.IntPtrInput `pulumi:"haPriority"`
	// String in the http-agent field in the HTTP header.
	HttpAgent pulumi.StringPtrInput `pulumi:"httpAgent"`
	// URL used to communicate with the server if the protocol if the protocol is HTTP.
	HttpGet pulumi.StringPtrInput `pulumi:"httpGet"`
	// Response string expected from the server if the protocol is HTTP.
	HttpMatch pulumi.StringPtrInput `pulumi:"httpMatch"`
	// Status check interval in milliseconds, or the time between attempting to connect to the server (500 - 3600*1000 msec, default = 500).
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Member sequence number list. The structure of `members` block is documented below.
	Members SdwanHealthCheckMemberArrayInput `pulumi:"members"`
	// Codec to use for MOS calculation (default = g711). Valid values: `g711`, `g722`, `g729`.
	MosCodec pulumi.StringPtrInput `pulumi:"mosCodec"`
	// Health check name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Packet size of a twamp test session,
	PacketSize pulumi.IntPtrInput `pulumi:"packetSize"`
	// Twamp controller password in authentication mode
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port number used to communicate with the server over the selected protocol (0-65535, default = 0, auto select. http, twamp: 80, udp-echo, tcp-echo: 7, dns: 53, ftp: 21).
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
	ProbeCount pulumi.IntPtrInput `pulumi:"probeCount"`
	// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
	ProbePackets pulumi.StringPtrInput `pulumi:"probePackets"`
	// Time to wait before a probe packet is considered lost (500 - 3600*1000 msec, default = 500).
	ProbeTimeout pulumi.IntPtrInput `pulumi:"probeTimeout"`
	// Protocol used to determine if the FortiGate can communicate with the server.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Method to measure the quality of tcp-connect. Valid values: `half-open`, `half-close`.
	QualityMeasuredMethod pulumi.StringPtrInput `pulumi:"qualityMeasuredMethod"`
	// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
	Recoverytime pulumi.IntPtrInput `pulumi:"recoverytime"`
	// Twamp controller security mode. Valid values: `none`, `authentication`.
	SecurityMode pulumi.StringPtrInput `pulumi:"securityMode"`
	// IP address or FQDN name of the server.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
	SlaFailLogPeriod pulumi.IntPtrInput `pulumi:"slaFailLogPeriod"`
	// Select the ID from the SLA sub-table. The selected SLA's priority value will be distributed into the routing table (0 - 32, default = 0).
	SlaIdRedistribute pulumi.IntPtrInput `pulumi:"slaIdRedistribute"`
	// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
	SlaPassLogPeriod pulumi.IntPtrInput `pulumi:"slaPassLogPeriod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas SdwanHealthCheckSlaArrayInput `pulumi:"slas"`
	// Source IP address used in the health-check packet to the server.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Source IPv6 addressused in the health-check packet to server.
	Source6 pulumi.StringPtrInput `pulumi:"source6"`
	// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
	SystemDns pulumi.StringPtrInput `pulumi:"systemDns"`
	// Alert threshold for jitter (ms, default = 0).
	ThresholdAlertJitter pulumi.IntPtrInput `pulumi:"thresholdAlertJitter"`
	// Alert threshold for latency (ms, default = 0).
	ThresholdAlertLatency pulumi.IntPtrInput `pulumi:"thresholdAlertLatency"`
	// Alert threshold for packet loss (percentage, default = 0).
	ThresholdAlertPacketloss pulumi.IntPtrInput `pulumi:"thresholdAlertPacketloss"`
	// Warning threshold for jitter (ms, default = 0).
	ThresholdWarningJitter pulumi.IntPtrInput `pulumi:"thresholdWarningJitter"`
	// Warning threshold for latency (ms, default = 0).
	ThresholdWarningLatency pulumi.IntPtrInput `pulumi:"thresholdWarningLatency"`
	// Warning threshold for packet loss (percentage, default = 0).
	ThresholdWarningPacketloss pulumi.IntPtrInput `pulumi:"thresholdWarningPacketloss"`
	// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
	UpdateCascadeInterface pulumi.StringPtrInput `pulumi:"updateCascadeInterface"`
	// Enable/disable updating the static route. Valid values: `enable`, `disable`.
	UpdateStaticRoute pulumi.StringPtrInput `pulumi:"updateStaticRoute"`
	// The user name to access probe server.
	User pulumi.StringPtrInput `pulumi:"user"`
	// Virtual Routing Forwarding ID.
	Vrf pulumi.IntPtrInput `pulumi:"vrf"`
}

func (SdwanHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanHealthCheck)(nil)).Elem()
}

func (i SdwanHealthCheckArgs) ToSdwanHealthCheckOutput() SdwanHealthCheckOutput {
	return i.ToSdwanHealthCheckOutputWithContext(context.Background())
}

func (i SdwanHealthCheckArgs) ToSdwanHealthCheckOutputWithContext(ctx context.Context) SdwanHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanHealthCheckOutput)
}

// SdwanHealthCheckArrayInput is an input type that accepts SdwanHealthCheckArray and SdwanHealthCheckArrayOutput values.
// You can construct a concrete instance of `SdwanHealthCheckArrayInput` via:
//
//	SdwanHealthCheckArray{ SdwanHealthCheckArgs{...} }
type SdwanHealthCheckArrayInput interface {
	pulumi.Input

	ToSdwanHealthCheckArrayOutput() SdwanHealthCheckArrayOutput
	ToSdwanHealthCheckArrayOutputWithContext(context.Context) SdwanHealthCheckArrayOutput
}

type SdwanHealthCheckArray []SdwanHealthCheckInput

func (SdwanHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanHealthCheck)(nil)).Elem()
}

func (i SdwanHealthCheckArray) ToSdwanHealthCheckArrayOutput() SdwanHealthCheckArrayOutput {
	return i.ToSdwanHealthCheckArrayOutputWithContext(context.Background())
}

func (i SdwanHealthCheckArray) ToSdwanHealthCheckArrayOutputWithContext(ctx context.Context) SdwanHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanHealthCheckArrayOutput)
}

type SdwanHealthCheckOutput struct{ *pulumi.OutputState }

func (SdwanHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanHealthCheck)(nil)).Elem()
}

func (o SdwanHealthCheckOutput) ToSdwanHealthCheckOutput() SdwanHealthCheckOutput {
	return o
}

func (o SdwanHealthCheckOutput) ToSdwanHealthCheckOutputWithContext(ctx context.Context) SdwanHealthCheckOutput {
	return o
}

// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
func (o SdwanHealthCheckOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Traffic class ID.
func (o SdwanHealthCheckOutput) ClassId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.ClassId }).(pulumi.IntPtrOutput)
}

// The mode determining how to detect the server.
func (o SdwanHealthCheckOutput) DetectMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.DetectMode }).(pulumi.StringPtrOutput)
}

// Differentiated services code point (DSCP) in the IP header of the probe packet.
func (o SdwanHealthCheckOutput) Diffservcode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.Diffservcode }).(pulumi.StringPtrOutput)
}

// Response IP expected from DNS server if the protocol is DNS.
func (o SdwanHealthCheckOutput) DnsMatchIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.DnsMatchIp }).(pulumi.StringPtrOutput)
}

// Fully qualified domain name to resolve for the DNS probe.
func (o SdwanHealthCheckOutput) DnsRequestDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.DnsRequestDomain }).(pulumi.StringPtrOutput)
}

// Enable/disable embedding measured health information. Valid values: `enable`, `disable`.
func (o SdwanHealthCheckOutput) EmbedMeasuredHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.EmbedMeasuredHealth }).(pulumi.StringPtrOutput)
}

// Number of failures before server is considered lost (1 - 3600, default = 5).
func (o SdwanHealthCheckOutput) Failtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.Failtime }).(pulumi.IntPtrOutput)
}

// Full path and file name on the FTP server to download for FTP health-check to probe.
func (o SdwanHealthCheckOutput) FtpFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.FtpFile }).(pulumi.StringPtrOutput)
}

// FTP mode. Valid values: `passive`, `port`.
func (o SdwanHealthCheckOutput) FtpMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.FtpMode }).(pulumi.StringPtrOutput)
}

// HA election priority (1 - 50).
func (o SdwanHealthCheckOutput) HaPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.HaPriority }).(pulumi.IntPtrOutput)
}

// String in the http-agent field in the HTTP header.
func (o SdwanHealthCheckOutput) HttpAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.HttpAgent }).(pulumi.StringPtrOutput)
}

// URL used to communicate with the server if the protocol if the protocol is HTTP.
func (o SdwanHealthCheckOutput) HttpGet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.HttpGet }).(pulumi.StringPtrOutput)
}

// Response string expected from the server if the protocol is HTTP.
func (o SdwanHealthCheckOutput) HttpMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.HttpMatch }).(pulumi.StringPtrOutput)
}

// Status check interval in milliseconds, or the time between attempting to connect to the server (500 - 3600*1000 msec, default = 500).
func (o SdwanHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Member sequence number list. The structure of `members` block is documented below.
func (o SdwanHealthCheckOutput) Members() SdwanHealthCheckMemberArrayOutput {
	return o.ApplyT(func(v SdwanHealthCheck) []SdwanHealthCheckMember { return v.Members }).(SdwanHealthCheckMemberArrayOutput)
}

// Codec to use for MOS calculation (default = g711). Valid values: `g711`, `g722`, `g729`.
func (o SdwanHealthCheckOutput) MosCodec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.MosCodec }).(pulumi.StringPtrOutput)
}

// Health check name.
func (o SdwanHealthCheckOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Packet size of a twamp test session,
func (o SdwanHealthCheckOutput) PacketSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.PacketSize }).(pulumi.IntPtrOutput)
}

// Twamp controller password in authentication mode
func (o SdwanHealthCheckOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port number used to communicate with the server over the selected protocol (0-65535, default = 0, auto select. http, twamp: 80, udp-echo, tcp-echo: 7, dns: 53, ftp: 21).
func (o SdwanHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
func (o SdwanHealthCheckOutput) ProbeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.ProbeCount }).(pulumi.IntPtrOutput)
}

// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
func (o SdwanHealthCheckOutput) ProbePackets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.ProbePackets }).(pulumi.StringPtrOutput)
}

// Time to wait before a probe packet is considered lost (500 - 3600*1000 msec, default = 500).
func (o SdwanHealthCheckOutput) ProbeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.ProbeTimeout }).(pulumi.IntPtrOutput)
}

// Protocol used to determine if the FortiGate can communicate with the server.
func (o SdwanHealthCheckOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Method to measure the quality of tcp-connect. Valid values: `half-open`, `half-close`.
func (o SdwanHealthCheckOutput) QualityMeasuredMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.QualityMeasuredMethod }).(pulumi.StringPtrOutput)
}

// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
func (o SdwanHealthCheckOutput) Recoverytime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.Recoverytime }).(pulumi.IntPtrOutput)
}

// Twamp controller security mode. Valid values: `none`, `authentication`.
func (o SdwanHealthCheckOutput) SecurityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.SecurityMode }).(pulumi.StringPtrOutput)
}

// IP address or FQDN name of the server.
func (o SdwanHealthCheckOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
func (o SdwanHealthCheckOutput) SlaFailLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.SlaFailLogPeriod }).(pulumi.IntPtrOutput)
}

// Select the ID from the SLA sub-table. The selected SLA's priority value will be distributed into the routing table (0 - 32, default = 0).
func (o SdwanHealthCheckOutput) SlaIdRedistribute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.SlaIdRedistribute }).(pulumi.IntPtrOutput)
}

// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
func (o SdwanHealthCheckOutput) SlaPassLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.SlaPassLogPeriod }).(pulumi.IntPtrOutput)
}

// Service level agreement (SLA). The structure of `sla` block is documented below.
func (o SdwanHealthCheckOutput) Slas() SdwanHealthCheckSlaArrayOutput {
	return o.ApplyT(func(v SdwanHealthCheck) []SdwanHealthCheckSla { return v.Slas }).(SdwanHealthCheckSlaArrayOutput)
}

// Source IP address used in the health-check packet to the server.
func (o SdwanHealthCheckOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Source IPv6 addressused in the health-check packet to server.
func (o SdwanHealthCheckOutput) Source6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.Source6 }).(pulumi.StringPtrOutput)
}

// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
func (o SdwanHealthCheckOutput) SystemDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.SystemDns }).(pulumi.StringPtrOutput)
}

// Alert threshold for jitter (ms, default = 0).
func (o SdwanHealthCheckOutput) ThresholdAlertJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.ThresholdAlertJitter }).(pulumi.IntPtrOutput)
}

// Alert threshold for latency (ms, default = 0).
func (o SdwanHealthCheckOutput) ThresholdAlertLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.ThresholdAlertLatency }).(pulumi.IntPtrOutput)
}

// Alert threshold for packet loss (percentage, default = 0).
func (o SdwanHealthCheckOutput) ThresholdAlertPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.ThresholdAlertPacketloss }).(pulumi.IntPtrOutput)
}

// Warning threshold for jitter (ms, default = 0).
func (o SdwanHealthCheckOutput) ThresholdWarningJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.ThresholdWarningJitter }).(pulumi.IntPtrOutput)
}

// Warning threshold for latency (ms, default = 0).
func (o SdwanHealthCheckOutput) ThresholdWarningLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.ThresholdWarningLatency }).(pulumi.IntPtrOutput)
}

// Warning threshold for packet loss (percentage, default = 0).
func (o SdwanHealthCheckOutput) ThresholdWarningPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.ThresholdWarningPacketloss }).(pulumi.IntPtrOutput)
}

// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
func (o SdwanHealthCheckOutput) UpdateCascadeInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.UpdateCascadeInterface }).(pulumi.StringPtrOutput)
}

// Enable/disable updating the static route. Valid values: `enable`, `disable`.
func (o SdwanHealthCheckOutput) UpdateStaticRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.UpdateStaticRoute }).(pulumi.StringPtrOutput)
}

// The user name to access probe server.
func (o SdwanHealthCheckOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *string { return v.User }).(pulumi.StringPtrOutput)
}

// Virtual Routing Forwarding ID.
func (o SdwanHealthCheckOutput) Vrf() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheck) *int { return v.Vrf }).(pulumi.IntPtrOutput)
}

type SdwanHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (SdwanHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanHealthCheck)(nil)).Elem()
}

func (o SdwanHealthCheckArrayOutput) ToSdwanHealthCheckArrayOutput() SdwanHealthCheckArrayOutput {
	return o
}

func (o SdwanHealthCheckArrayOutput) ToSdwanHealthCheckArrayOutputWithContext(ctx context.Context) SdwanHealthCheckArrayOutput {
	return o
}

func (o SdwanHealthCheckArrayOutput) Index(i pulumi.IntInput) SdwanHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanHealthCheck {
		return vs[0].([]SdwanHealthCheck)[vs[1].(int)]
	}).(SdwanHealthCheckOutput)
}

type SdwanHealthCheckMember struct {
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
}

// SdwanHealthCheckMemberInput is an input type that accepts SdwanHealthCheckMemberArgs and SdwanHealthCheckMemberOutput values.
// You can construct a concrete instance of `SdwanHealthCheckMemberInput` via:
//
//	SdwanHealthCheckMemberArgs{...}
type SdwanHealthCheckMemberInput interface {
	pulumi.Input

	ToSdwanHealthCheckMemberOutput() SdwanHealthCheckMemberOutput
	ToSdwanHealthCheckMemberOutputWithContext(context.Context) SdwanHealthCheckMemberOutput
}

type SdwanHealthCheckMemberArgs struct {
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SdwanHealthCheckMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanHealthCheckMember)(nil)).Elem()
}

func (i SdwanHealthCheckMemberArgs) ToSdwanHealthCheckMemberOutput() SdwanHealthCheckMemberOutput {
	return i.ToSdwanHealthCheckMemberOutputWithContext(context.Background())
}

func (i SdwanHealthCheckMemberArgs) ToSdwanHealthCheckMemberOutputWithContext(ctx context.Context) SdwanHealthCheckMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanHealthCheckMemberOutput)
}

// SdwanHealthCheckMemberArrayInput is an input type that accepts SdwanHealthCheckMemberArray and SdwanHealthCheckMemberArrayOutput values.
// You can construct a concrete instance of `SdwanHealthCheckMemberArrayInput` via:
//
//	SdwanHealthCheckMemberArray{ SdwanHealthCheckMemberArgs{...} }
type SdwanHealthCheckMemberArrayInput interface {
	pulumi.Input

	ToSdwanHealthCheckMemberArrayOutput() SdwanHealthCheckMemberArrayOutput
	ToSdwanHealthCheckMemberArrayOutputWithContext(context.Context) SdwanHealthCheckMemberArrayOutput
}

type SdwanHealthCheckMemberArray []SdwanHealthCheckMemberInput

func (SdwanHealthCheckMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanHealthCheckMember)(nil)).Elem()
}

func (i SdwanHealthCheckMemberArray) ToSdwanHealthCheckMemberArrayOutput() SdwanHealthCheckMemberArrayOutput {
	return i.ToSdwanHealthCheckMemberArrayOutputWithContext(context.Background())
}

func (i SdwanHealthCheckMemberArray) ToSdwanHealthCheckMemberArrayOutputWithContext(ctx context.Context) SdwanHealthCheckMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanHealthCheckMemberArrayOutput)
}

type SdwanHealthCheckMemberOutput struct{ *pulumi.OutputState }

func (SdwanHealthCheckMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanHealthCheckMember)(nil)).Elem()
}

func (o SdwanHealthCheckMemberOutput) ToSdwanHealthCheckMemberOutput() SdwanHealthCheckMemberOutput {
	return o
}

func (o SdwanHealthCheckMemberOutput) ToSdwanHealthCheckMemberOutputWithContext(ctx context.Context) SdwanHealthCheckMemberOutput {
	return o
}

// Member sequence number.
func (o SdwanHealthCheckMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheckMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SdwanHealthCheckMemberArrayOutput struct{ *pulumi.OutputState }

func (SdwanHealthCheckMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanHealthCheckMember)(nil)).Elem()
}

func (o SdwanHealthCheckMemberArrayOutput) ToSdwanHealthCheckMemberArrayOutput() SdwanHealthCheckMemberArrayOutput {
	return o
}

func (o SdwanHealthCheckMemberArrayOutput) ToSdwanHealthCheckMemberArrayOutputWithContext(ctx context.Context) SdwanHealthCheckMemberArrayOutput {
	return o
}

func (o SdwanHealthCheckMemberArrayOutput) Index(i pulumi.IntInput) SdwanHealthCheckMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanHealthCheckMember {
		return vs[0].([]SdwanHealthCheckMember)[vs[1].(int)]
	}).(SdwanHealthCheckMemberOutput)
}

type SdwanHealthCheckSla struct {
	// SLA ID.
	Id *int `pulumi:"id"`
	// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	JitterThreshold *int `pulumi:"jitterThreshold"`
	// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	LatencyThreshold *int `pulumi:"latencyThreshold"`
	// Criteria on which to base link selection.
	LinkCostFactor *string `pulumi:"linkCostFactor"`
	// Minimum Mean Opinion Score for SLA to be marked as pass. (1.0 - 5.0, default = 3.6).
	MosThreshold *string `pulumi:"mosThreshold"`
	// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
	PacketlossThreshold *int `pulumi:"packetlossThreshold"`
	// Value to be distributed into routing table when in-sla (0 - 65535, default = 0).
	PriorityInSla *int `pulumi:"priorityInSla"`
	// Value to be distributed into routing table when out-sla (0 - 65535, default = 0).
	PriorityOutSla *int `pulumi:"priorityOutSla"`
}

// SdwanHealthCheckSlaInput is an input type that accepts SdwanHealthCheckSlaArgs and SdwanHealthCheckSlaOutput values.
// You can construct a concrete instance of `SdwanHealthCheckSlaInput` via:
//
//	SdwanHealthCheckSlaArgs{...}
type SdwanHealthCheckSlaInput interface {
	pulumi.Input

	ToSdwanHealthCheckSlaOutput() SdwanHealthCheckSlaOutput
	ToSdwanHealthCheckSlaOutputWithContext(context.Context) SdwanHealthCheckSlaOutput
}

type SdwanHealthCheckSlaArgs struct {
	// SLA ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	JitterThreshold pulumi.IntPtrInput `pulumi:"jitterThreshold"`
	// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	LatencyThreshold pulumi.IntPtrInput `pulumi:"latencyThreshold"`
	// Criteria on which to base link selection.
	LinkCostFactor pulumi.StringPtrInput `pulumi:"linkCostFactor"`
	// Minimum Mean Opinion Score for SLA to be marked as pass. (1.0 - 5.0, default = 3.6).
	MosThreshold pulumi.StringPtrInput `pulumi:"mosThreshold"`
	// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
	PacketlossThreshold pulumi.IntPtrInput `pulumi:"packetlossThreshold"`
	// Value to be distributed into routing table when in-sla (0 - 65535, default = 0).
	PriorityInSla pulumi.IntPtrInput `pulumi:"priorityInSla"`
	// Value to be distributed into routing table when out-sla (0 - 65535, default = 0).
	PriorityOutSla pulumi.IntPtrInput `pulumi:"priorityOutSla"`
}

func (SdwanHealthCheckSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanHealthCheckSla)(nil)).Elem()
}

func (i SdwanHealthCheckSlaArgs) ToSdwanHealthCheckSlaOutput() SdwanHealthCheckSlaOutput {
	return i.ToSdwanHealthCheckSlaOutputWithContext(context.Background())
}

func (i SdwanHealthCheckSlaArgs) ToSdwanHealthCheckSlaOutputWithContext(ctx context.Context) SdwanHealthCheckSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanHealthCheckSlaOutput)
}

// SdwanHealthCheckSlaArrayInput is an input type that accepts SdwanHealthCheckSlaArray and SdwanHealthCheckSlaArrayOutput values.
// You can construct a concrete instance of `SdwanHealthCheckSlaArrayInput` via:
//
//	SdwanHealthCheckSlaArray{ SdwanHealthCheckSlaArgs{...} }
type SdwanHealthCheckSlaArrayInput interface {
	pulumi.Input

	ToSdwanHealthCheckSlaArrayOutput() SdwanHealthCheckSlaArrayOutput
	ToSdwanHealthCheckSlaArrayOutputWithContext(context.Context) SdwanHealthCheckSlaArrayOutput
}

type SdwanHealthCheckSlaArray []SdwanHealthCheckSlaInput

func (SdwanHealthCheckSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanHealthCheckSla)(nil)).Elem()
}

func (i SdwanHealthCheckSlaArray) ToSdwanHealthCheckSlaArrayOutput() SdwanHealthCheckSlaArrayOutput {
	return i.ToSdwanHealthCheckSlaArrayOutputWithContext(context.Background())
}

func (i SdwanHealthCheckSlaArray) ToSdwanHealthCheckSlaArrayOutputWithContext(ctx context.Context) SdwanHealthCheckSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanHealthCheckSlaArrayOutput)
}

type SdwanHealthCheckSlaOutput struct{ *pulumi.OutputState }

func (SdwanHealthCheckSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanHealthCheckSla)(nil)).Elem()
}

func (o SdwanHealthCheckSlaOutput) ToSdwanHealthCheckSlaOutput() SdwanHealthCheckSlaOutput {
	return o
}

func (o SdwanHealthCheckSlaOutput) ToSdwanHealthCheckSlaOutputWithContext(ctx context.Context) SdwanHealthCheckSlaOutput {
	return o
}

// SLA ID.
func (o SdwanHealthCheckSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheckSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
func (o SdwanHealthCheckSlaOutput) JitterThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheckSla) *int { return v.JitterThreshold }).(pulumi.IntPtrOutput)
}

// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
func (o SdwanHealthCheckSlaOutput) LatencyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheckSla) *int { return v.LatencyThreshold }).(pulumi.IntPtrOutput)
}

// Criteria on which to base link selection.
func (o SdwanHealthCheckSlaOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheckSla) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

// Minimum Mean Opinion Score for SLA to be marked as pass. (1.0 - 5.0, default = 3.6).
func (o SdwanHealthCheckSlaOutput) MosThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheckSla) *string { return v.MosThreshold }).(pulumi.StringPtrOutput)
}

// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
func (o SdwanHealthCheckSlaOutput) PacketlossThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheckSla) *int { return v.PacketlossThreshold }).(pulumi.IntPtrOutput)
}

// Value to be distributed into routing table when in-sla (0 - 65535, default = 0).
func (o SdwanHealthCheckSlaOutput) PriorityInSla() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheckSla) *int { return v.PriorityInSla }).(pulumi.IntPtrOutput)
}

// Value to be distributed into routing table when out-sla (0 - 65535, default = 0).
func (o SdwanHealthCheckSlaOutput) PriorityOutSla() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanHealthCheckSla) *int { return v.PriorityOutSla }).(pulumi.IntPtrOutput)
}

type SdwanHealthCheckSlaArrayOutput struct{ *pulumi.OutputState }

func (SdwanHealthCheckSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanHealthCheckSla)(nil)).Elem()
}

func (o SdwanHealthCheckSlaArrayOutput) ToSdwanHealthCheckSlaArrayOutput() SdwanHealthCheckSlaArrayOutput {
	return o
}

func (o SdwanHealthCheckSlaArrayOutput) ToSdwanHealthCheckSlaArrayOutputWithContext(ctx context.Context) SdwanHealthCheckSlaArrayOutput {
	return o
}

func (o SdwanHealthCheckSlaArrayOutput) Index(i pulumi.IntInput) SdwanHealthCheckSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanHealthCheckSla {
		return vs[0].([]SdwanHealthCheckSla)[vs[1].(int)]
	}).(SdwanHealthCheckSlaOutput)
}

type SdwanMember struct {
	// Comments.
	Comment *string `pulumi:"comment"`
	// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
	Cost *int `pulumi:"cost"`
	// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
	Gateway *string `pulumi:"gateway"`
	// IPv6 gateway.
	Gateway6 *string `pulumi:"gateway6"`
	// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	IngressSpilloverThreshold *int `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// Preferred source of route for this member.
	PreferredSource *string `pulumi:"preferredSource"`
	// Priority of the interface (0 - 65535). Used for SD-WAN rules or priority rules.
	Priority *int `pulumi:"priority"`
	// Priority of the interface for IPv6 (1 - 65535, default = 1024). Used for SD-WAN rules or priority rules.
	Priority6 *int `pulumi:"priority6"`
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
	// Source IP address used in the health-check packet to the server.
	Source *string `pulumi:"source"`
	// Source IPv6 address used in the health-check packet to the server.
	Source6 *string `pulumi:"source6"`
	// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	SpilloverThreshold *int `pulumi:"spilloverThreshold"`
	// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Measured transport group (0 - 255).
	TransportGroup *int `pulumi:"transportGroup"`
	// Measured volume ratio (this value / sum of all values = percentage of link volume, 1 - 255).
	VolumeRatio *int `pulumi:"volumeRatio"`
	// Weight of this interface for weighted load balancing. (1 - 255) More traffic is directed to interfaces with higher weights.
	Weight *int `pulumi:"weight"`
	// Zone name.
	Zone *string `pulumi:"zone"`
}

// SdwanMemberInput is an input type that accepts SdwanMemberArgs and SdwanMemberOutput values.
// You can construct a concrete instance of `SdwanMemberInput` via:
//
//	SdwanMemberArgs{...}
type SdwanMemberInput interface {
	pulumi.Input

	ToSdwanMemberOutput() SdwanMemberOutput
	ToSdwanMemberOutputWithContext(context.Context) SdwanMemberOutput
}

type SdwanMemberArgs struct {
	// Comments.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// IPv6 gateway.
	Gateway6 pulumi.StringPtrInput `pulumi:"gateway6"`
	// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	IngressSpilloverThreshold pulumi.IntPtrInput `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Preferred source of route for this member.
	PreferredSource pulumi.StringPtrInput `pulumi:"preferredSource"`
	// Priority of the interface (0 - 65535). Used for SD-WAN rules or priority rules.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Priority of the interface for IPv6 (1 - 65535, default = 1024). Used for SD-WAN rules or priority rules.
	Priority6 pulumi.IntPtrInput `pulumi:"priority6"`
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
	// Source IP address used in the health-check packet to the server.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Source IPv6 address used in the health-check packet to the server.
	Source6 pulumi.StringPtrInput `pulumi:"source6"`
	// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	SpilloverThreshold pulumi.IntPtrInput `pulumi:"spilloverThreshold"`
	// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Measured transport group (0 - 255).
	TransportGroup pulumi.IntPtrInput `pulumi:"transportGroup"`
	// Measured volume ratio (this value / sum of all values = percentage of link volume, 1 - 255).
	VolumeRatio pulumi.IntPtrInput `pulumi:"volumeRatio"`
	// Weight of this interface for weighted load balancing. (1 - 255) More traffic is directed to interfaces with higher weights.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
	// Zone name.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (SdwanMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanMember)(nil)).Elem()
}

func (i SdwanMemberArgs) ToSdwanMemberOutput() SdwanMemberOutput {
	return i.ToSdwanMemberOutputWithContext(context.Background())
}

func (i SdwanMemberArgs) ToSdwanMemberOutputWithContext(ctx context.Context) SdwanMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanMemberOutput)
}

// SdwanMemberArrayInput is an input type that accepts SdwanMemberArray and SdwanMemberArrayOutput values.
// You can construct a concrete instance of `SdwanMemberArrayInput` via:
//
//	SdwanMemberArray{ SdwanMemberArgs{...} }
type SdwanMemberArrayInput interface {
	pulumi.Input

	ToSdwanMemberArrayOutput() SdwanMemberArrayOutput
	ToSdwanMemberArrayOutputWithContext(context.Context) SdwanMemberArrayOutput
}

type SdwanMemberArray []SdwanMemberInput

func (SdwanMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanMember)(nil)).Elem()
}

func (i SdwanMemberArray) ToSdwanMemberArrayOutput() SdwanMemberArrayOutput {
	return i.ToSdwanMemberArrayOutputWithContext(context.Background())
}

func (i SdwanMemberArray) ToSdwanMemberArrayOutputWithContext(ctx context.Context) SdwanMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanMemberArrayOutput)
}

type SdwanMemberOutput struct{ *pulumi.OutputState }

func (SdwanMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanMember)(nil)).Elem()
}

func (o SdwanMemberOutput) ToSdwanMemberOutput() SdwanMemberOutput {
	return o
}

func (o SdwanMemberOutput) ToSdwanMemberOutputWithContext(ctx context.Context) SdwanMemberOutput {
	return o
}

// Comments.
func (o SdwanMemberOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanMember) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
func (o SdwanMemberOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanMember) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
func (o SdwanMemberOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanMember) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// IPv6 gateway.
func (o SdwanMemberOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanMember) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
func (o SdwanMemberOutput) IngressSpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanMember) *int { return v.IngressSpilloverThreshold }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o SdwanMemberOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanMember) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Preferred source of route for this member.
func (o SdwanMemberOutput) PreferredSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanMember) *string { return v.PreferredSource }).(pulumi.StringPtrOutput)
}

// Priority of the interface (0 - 65535). Used for SD-WAN rules or priority rules.
func (o SdwanMemberOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanMember) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Priority of the interface for IPv6 (1 - 65535, default = 1024). Used for SD-WAN rules or priority rules.
func (o SdwanMemberOutput) Priority6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanMember) *int { return v.Priority6 }).(pulumi.IntPtrOutput)
}

// Member sequence number.
func (o SdwanMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

// Source IP address used in the health-check packet to the server.
func (o SdwanMemberOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanMember) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Source IPv6 address used in the health-check packet to the server.
func (o SdwanMemberOutput) Source6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanMember) *string { return v.Source6 }).(pulumi.StringPtrOutput)
}

// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
func (o SdwanMemberOutput) SpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanMember) *int { return v.SpilloverThreshold }).(pulumi.IntPtrOutput)
}

// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
func (o SdwanMemberOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanMember) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Measured transport group (0 - 255).
func (o SdwanMemberOutput) TransportGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanMember) *int { return v.TransportGroup }).(pulumi.IntPtrOutput)
}

// Measured volume ratio (this value / sum of all values = percentage of link volume, 1 - 255).
func (o SdwanMemberOutput) VolumeRatio() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanMember) *int { return v.VolumeRatio }).(pulumi.IntPtrOutput)
}

// Weight of this interface for weighted load balancing. (1 - 255) More traffic is directed to interfaces with higher weights.
func (o SdwanMemberOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanMember) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

// Zone name.
func (o SdwanMemberOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanMember) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type SdwanMemberArrayOutput struct{ *pulumi.OutputState }

func (SdwanMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanMember)(nil)).Elem()
}

func (o SdwanMemberArrayOutput) ToSdwanMemberArrayOutput() SdwanMemberArrayOutput {
	return o
}

func (o SdwanMemberArrayOutput) ToSdwanMemberArrayOutputWithContext(ctx context.Context) SdwanMemberArrayOutput {
	return o
}

func (o SdwanMemberArrayOutput) Index(i pulumi.IntInput) SdwanMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanMember {
		return vs[0].([]SdwanMember)[vs[1].(int)]
	}).(SdwanMemberOutput)
}

type SdwanNeighbor struct {
	// SD-WAN health-check name.
	HealthCheck *string `pulumi:"healthCheck"`
	// IP/IPv6 address of neighbor.
	Ip *string `pulumi:"ip"`
	// Member sequence number.
	Member *int `pulumi:"member"`
	// Member sequence number list. The structure of `memberBlock` block is documented below.
	MemberBlocks []SdwanNeighborMemberBlock `pulumi:"memberBlocks"`
	// Minimum number of members which meet SLA when the neighbor is preferred.
	MinimumSlaMeetMembers *int `pulumi:"minimumSlaMeetMembers"`
	// What metric to select the neighbor. Valid values: `sla`, `speedtest`.
	Mode *string `pulumi:"mode"`
	// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// SD-WAN service ID to work with the neighbor.
	ServiceId *int `pulumi:"serviceId"`
	// SLA ID.
	SlaId *int `pulumi:"slaId"`
}

// SdwanNeighborInput is an input type that accepts SdwanNeighborArgs and SdwanNeighborOutput values.
// You can construct a concrete instance of `SdwanNeighborInput` via:
//
//	SdwanNeighborArgs{...}
type SdwanNeighborInput interface {
	pulumi.Input

	ToSdwanNeighborOutput() SdwanNeighborOutput
	ToSdwanNeighborOutputWithContext(context.Context) SdwanNeighborOutput
}

type SdwanNeighborArgs struct {
	// SD-WAN health-check name.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// IP/IPv6 address of neighbor.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Member sequence number.
	Member pulumi.IntPtrInput `pulumi:"member"`
	// Member sequence number list. The structure of `memberBlock` block is documented below.
	MemberBlocks SdwanNeighborMemberBlockArrayInput `pulumi:"memberBlocks"`
	// Minimum number of members which meet SLA when the neighbor is preferred.
	MinimumSlaMeetMembers pulumi.IntPtrInput `pulumi:"minimumSlaMeetMembers"`
	// What metric to select the neighbor. Valid values: `sla`, `speedtest`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// SD-WAN service ID to work with the neighbor.
	ServiceId pulumi.IntPtrInput `pulumi:"serviceId"`
	// SLA ID.
	SlaId pulumi.IntPtrInput `pulumi:"slaId"`
}

func (SdwanNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanNeighbor)(nil)).Elem()
}

func (i SdwanNeighborArgs) ToSdwanNeighborOutput() SdwanNeighborOutput {
	return i.ToSdwanNeighborOutputWithContext(context.Background())
}

func (i SdwanNeighborArgs) ToSdwanNeighborOutputWithContext(ctx context.Context) SdwanNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanNeighborOutput)
}

// SdwanNeighborArrayInput is an input type that accepts SdwanNeighborArray and SdwanNeighborArrayOutput values.
// You can construct a concrete instance of `SdwanNeighborArrayInput` via:
//
//	SdwanNeighborArray{ SdwanNeighborArgs{...} }
type SdwanNeighborArrayInput interface {
	pulumi.Input

	ToSdwanNeighborArrayOutput() SdwanNeighborArrayOutput
	ToSdwanNeighborArrayOutputWithContext(context.Context) SdwanNeighborArrayOutput
}

type SdwanNeighborArray []SdwanNeighborInput

func (SdwanNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanNeighbor)(nil)).Elem()
}

func (i SdwanNeighborArray) ToSdwanNeighborArrayOutput() SdwanNeighborArrayOutput {
	return i.ToSdwanNeighborArrayOutputWithContext(context.Background())
}

func (i SdwanNeighborArray) ToSdwanNeighborArrayOutputWithContext(ctx context.Context) SdwanNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanNeighborArrayOutput)
}

type SdwanNeighborOutput struct{ *pulumi.OutputState }

func (SdwanNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanNeighbor)(nil)).Elem()
}

func (o SdwanNeighborOutput) ToSdwanNeighborOutput() SdwanNeighborOutput {
	return o
}

func (o SdwanNeighborOutput) ToSdwanNeighborOutputWithContext(ctx context.Context) SdwanNeighborOutput {
	return o
}

// SD-WAN health-check name.
func (o SdwanNeighborOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanNeighbor) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// IP/IPv6 address of neighbor.
func (o SdwanNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Member sequence number.
func (o SdwanNeighborOutput) Member() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanNeighbor) *int { return v.Member }).(pulumi.IntPtrOutput)
}

// Member sequence number list. The structure of `memberBlock` block is documented below.
func (o SdwanNeighborOutput) MemberBlocks() SdwanNeighborMemberBlockArrayOutput {
	return o.ApplyT(func(v SdwanNeighbor) []SdwanNeighborMemberBlock { return v.MemberBlocks }).(SdwanNeighborMemberBlockArrayOutput)
}

// Minimum number of members which meet SLA when the neighbor is preferred.
func (o SdwanNeighborOutput) MinimumSlaMeetMembers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanNeighbor) *int { return v.MinimumSlaMeetMembers }).(pulumi.IntPtrOutput)
}

// What metric to select the neighbor. Valid values: `sla`, `speedtest`.
func (o SdwanNeighborOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanNeighbor) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
func (o SdwanNeighborOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanNeighbor) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// SD-WAN service ID to work with the neighbor.
func (o SdwanNeighborOutput) ServiceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanNeighbor) *int { return v.ServiceId }).(pulumi.IntPtrOutput)
}

// SLA ID.
func (o SdwanNeighborOutput) SlaId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanNeighbor) *int { return v.SlaId }).(pulumi.IntPtrOutput)
}

type SdwanNeighborArrayOutput struct{ *pulumi.OutputState }

func (SdwanNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanNeighbor)(nil)).Elem()
}

func (o SdwanNeighborArrayOutput) ToSdwanNeighborArrayOutput() SdwanNeighborArrayOutput {
	return o
}

func (o SdwanNeighborArrayOutput) ToSdwanNeighborArrayOutputWithContext(ctx context.Context) SdwanNeighborArrayOutput {
	return o
}

func (o SdwanNeighborArrayOutput) Index(i pulumi.IntInput) SdwanNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanNeighbor {
		return vs[0].([]SdwanNeighbor)[vs[1].(int)]
	}).(SdwanNeighborOutput)
}

type SdwanNeighborMemberBlock struct {
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
}

// SdwanNeighborMemberBlockInput is an input type that accepts SdwanNeighborMemberBlockArgs and SdwanNeighborMemberBlockOutput values.
// You can construct a concrete instance of `SdwanNeighborMemberBlockInput` via:
//
//	SdwanNeighborMemberBlockArgs{...}
type SdwanNeighborMemberBlockInput interface {
	pulumi.Input

	ToSdwanNeighborMemberBlockOutput() SdwanNeighborMemberBlockOutput
	ToSdwanNeighborMemberBlockOutputWithContext(context.Context) SdwanNeighborMemberBlockOutput
}

type SdwanNeighborMemberBlockArgs struct {
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SdwanNeighborMemberBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanNeighborMemberBlock)(nil)).Elem()
}

func (i SdwanNeighborMemberBlockArgs) ToSdwanNeighborMemberBlockOutput() SdwanNeighborMemberBlockOutput {
	return i.ToSdwanNeighborMemberBlockOutputWithContext(context.Background())
}

func (i SdwanNeighborMemberBlockArgs) ToSdwanNeighborMemberBlockOutputWithContext(ctx context.Context) SdwanNeighborMemberBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanNeighborMemberBlockOutput)
}

// SdwanNeighborMemberBlockArrayInput is an input type that accepts SdwanNeighborMemberBlockArray and SdwanNeighborMemberBlockArrayOutput values.
// You can construct a concrete instance of `SdwanNeighborMemberBlockArrayInput` via:
//
//	SdwanNeighborMemberBlockArray{ SdwanNeighborMemberBlockArgs{...} }
type SdwanNeighborMemberBlockArrayInput interface {
	pulumi.Input

	ToSdwanNeighborMemberBlockArrayOutput() SdwanNeighborMemberBlockArrayOutput
	ToSdwanNeighborMemberBlockArrayOutputWithContext(context.Context) SdwanNeighborMemberBlockArrayOutput
}

type SdwanNeighborMemberBlockArray []SdwanNeighborMemberBlockInput

func (SdwanNeighborMemberBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanNeighborMemberBlock)(nil)).Elem()
}

func (i SdwanNeighborMemberBlockArray) ToSdwanNeighborMemberBlockArrayOutput() SdwanNeighborMemberBlockArrayOutput {
	return i.ToSdwanNeighborMemberBlockArrayOutputWithContext(context.Background())
}

func (i SdwanNeighborMemberBlockArray) ToSdwanNeighborMemberBlockArrayOutputWithContext(ctx context.Context) SdwanNeighborMemberBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanNeighborMemberBlockArrayOutput)
}

type SdwanNeighborMemberBlockOutput struct{ *pulumi.OutputState }

func (SdwanNeighborMemberBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanNeighborMemberBlock)(nil)).Elem()
}

func (o SdwanNeighborMemberBlockOutput) ToSdwanNeighborMemberBlockOutput() SdwanNeighborMemberBlockOutput {
	return o
}

func (o SdwanNeighborMemberBlockOutput) ToSdwanNeighborMemberBlockOutputWithContext(ctx context.Context) SdwanNeighborMemberBlockOutput {
	return o
}

// Member sequence number.
func (o SdwanNeighborMemberBlockOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanNeighborMemberBlock) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SdwanNeighborMemberBlockArrayOutput struct{ *pulumi.OutputState }

func (SdwanNeighborMemberBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanNeighborMemberBlock)(nil)).Elem()
}

func (o SdwanNeighborMemberBlockArrayOutput) ToSdwanNeighborMemberBlockArrayOutput() SdwanNeighborMemberBlockArrayOutput {
	return o
}

func (o SdwanNeighborMemberBlockArrayOutput) ToSdwanNeighborMemberBlockArrayOutputWithContext(ctx context.Context) SdwanNeighborMemberBlockArrayOutput {
	return o
}

func (o SdwanNeighborMemberBlockArrayOutput) Index(i pulumi.IntInput) SdwanNeighborMemberBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanNeighborMemberBlock {
		return vs[0].([]SdwanNeighborMemberBlock)[vs[1].(int)]
	}).(SdwanNeighborMemberBlockOutput)
}

type SdwanService struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Set/unset the service as agent use exclusively. Valid values: `enable`, `disable`.
	AgentExclusive *string `pulumi:"agentExclusive"`
	// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
	BandwidthWeight *int `pulumi:"bandwidthWeight"`
	// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
	Default *string `pulumi:"default"`
	// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpForward *string `pulumi:"dscpForward"`
	// Forward traffic DSCP tag.
	DscpForwardTag *string `pulumi:"dscpForwardTag"`
	// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpReverse *string `pulumi:"dscpReverse"`
	// Reverse traffic DSCP tag.
	DscpReverseTag *string `pulumi:"dscpReverseTag"`
	// Destination address6 name. The structure of `dst6` block is documented below.
	Dst6s []SdwanServiceDst6 `pulumi:"dst6s"`
	// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
	DstNegate *string `pulumi:"dstNegate"`
	// Destination address name. The structure of `dst` block is documented below.
	Dsts []SdwanServiceDst `pulumi:"dsts"`
	// End destination port number.
	EndPort *int `pulumi:"endPort"`
	// End source port number.
	EndSrcPort *int `pulumi:"endSrcPort"`
	// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
	Gateway *string `pulumi:"gateway"`
	// User groups. The structure of `groups` block is documented below.
	Groups []SdwanServiceGroup `pulumi:"groups"`
	// Hash algorithm for selected priority members for load balance mode. Valid values: `round-robin`, `source-ip-based`, `source-dest-ip-based`, `inbandwidth`, `outbandwidth`, `bibandwidth`.
	HashMode *string `pulumi:"hashMode"`
	// Health check list. The structure of `healthCheck` block is documented below.
	HealthChecks []SdwanServiceHealthCheck `pulumi:"healthChecks"`
	// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
	HoldDownTime *int `pulumi:"holdDownTime"`
	// SD-WAN rule ID (1 - 4000).
	Id *int `pulumi:"id"`
	// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
	InputDeviceNegate *string `pulumi:"inputDeviceNegate"`
	// Source interface name. The structure of `inputDevice` block is documented below.
	InputDevices []SdwanServiceInputDevice `pulumi:"inputDevices"`
	// Source input-zone name. The structure of `inputZone` block is documented below.
	InputZones []SdwanServiceInputZone `pulumi:"inputZones"`
	// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
	InternetService *string `pulumi:"internetService"`
	// IDs of one or more application control categories. The structure of `internetServiceAppCtrlCategory` block is documented below.
	InternetServiceAppCtrlCategories []SdwanServiceInternetServiceAppCtrlCategory `pulumi:"internetServiceAppCtrlCategories"`
	// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
	InternetServiceAppCtrlGroups []SdwanServiceInternetServiceAppCtrlGroup `pulumi:"internetServiceAppCtrlGroups"`
	// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
	InternetServiceAppCtrls []SdwanServiceInternetServiceAppCtrl `pulumi:"internetServiceAppCtrls"`
	// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups []SdwanServiceInternetServiceCustomGroup `pulumi:"internetServiceCustomGroups"`
	// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms []SdwanServiceInternetServiceCustom `pulumi:"internetServiceCustoms"`
	// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups []SdwanServiceInternetServiceGroup `pulumi:"internetServiceGroups"`
	// Internet service name list. The structure of `internetServiceName` block is documented below.
	InternetServiceNames []SdwanServiceInternetServiceName `pulumi:"internetServiceNames"`
	// Coefficient of jitter in the formula of custom-profile-1.
	JitterWeight *int `pulumi:"jitterWeight"`
	// Coefficient of latency in the formula of custom-profile-1.
	LatencyWeight *int `pulumi:"latencyWeight"`
	// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
	LinkCostFactor *string `pulumi:"linkCostFactor"`
	// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
	LinkCostThreshold *int `pulumi:"linkCostThreshold"`
	// Enable/disable load-balance. Valid values: `enable`, `disable`.
	LoadBalance *string `pulumi:"loadBalance"`
	// Minimum number of members which meet SLA.
	MinimumSlaMeetMembers *int `pulumi:"minimumSlaMeetMembers"`
	// Control how the SD-WAN rule sets the priority of interfaces in the SD-WAN.
	Mode *string `pulumi:"mode"`
	// Service and service group name.
	Name *string `pulumi:"name"`
	// Coefficient of packet-loss in the formula of custom-profile-1.
	PacketLossWeight *int `pulumi:"packetLossWeight"`
	// Enable/disable passive measurement based on the service criteria. Valid values: `enable`, `disable`.
	PassiveMeasurement *string `pulumi:"passiveMeasurement"`
	// Member sequence number list. The structure of `priorityMembers` block is documented below.
	PriorityMembers []SdwanServicePriorityMember `pulumi:"priorityMembers"`
	// Priority zone name list. The structure of `priorityZone` block is documented below.
	PriorityZones []SdwanServicePriorityZone `pulumi:"priorityZones"`
	// Protocol number.
	Protocol *int `pulumi:"protocol"`
	// Quality grade.
	QualityLink *int `pulumi:"qualityLink"`
	// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// IPv4 route map route-tag.
	RouteTag *int `pulumi:"routeTag"`
	// Enable/disable shortcut for this service. Valid values: `enable`, `disable`.
	Shortcut *string `pulumi:"shortcut"`
	// High priority of ADVPN shortcut for this service. Valid values: `enable`, `disable`, `auto`.
	ShortcutPriority *string `pulumi:"shortcutPriority"`
	// Enable/disable shortcut-stickiness of ADVPN. Valid values: `enable`, `disable`.
	ShortcutStickiness *string `pulumi:"shortcutStickiness"`
	// Method to compare SLA value for SLA mode. Valid values: `order`, `number`.
	SlaCompareMethod *string `pulumi:"slaCompareMethod"`
	// Enable/disable SLA stickiness (default = disable). Valid values: `enable`, `disable`.
	SlaStickiness *string `pulumi:"slaStickiness"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas []SdwanServiceSla `pulumi:"slas"`
	// Source address6 name. The structure of `src6` block is documented below.
	Src6s []SdwanServiceSrc6 `pulumi:"src6s"`
	// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
	SrcNegate *string `pulumi:"srcNegate"`
	// Source address name. The structure of `src` block is documented below.
	Srcs []SdwanServiceSrc `pulumi:"srcs"`
	// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
	StandaloneAction *string `pulumi:"standaloneAction"`
	// Start destination port number.
	StartPort *int `pulumi:"startPort"`
	// Start source port number.
	StartSrcPort *int `pulumi:"startSrcPort"`
	// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Method of selecting member if more than one meets the SLA.
	TieBreak *string `pulumi:"tieBreak"`
	// Type of service bit pattern.
	Tos *string `pulumi:"tos"`
	// Type of service evaluated bits.
	TosMask *string `pulumi:"tosMask"`
	// Enable/disable use of ADVPN shortcut for quality comparison. Valid values: `enable`, `disable`.
	UseShortcutSla *string `pulumi:"useShortcutSla"`
	// User name. The structure of `users` block is documented below.
	Users []SdwanServiceUser `pulumi:"users"`
	// Enable/disable zone mode. Valid values: `enable`, `disable`.
	ZoneMode *string `pulumi:"zoneMode"`
}

// SdwanServiceInput is an input type that accepts SdwanServiceArgs and SdwanServiceOutput values.
// You can construct a concrete instance of `SdwanServiceInput` via:
//
//	SdwanServiceArgs{...}
type SdwanServiceInput interface {
	pulumi.Input

	ToSdwanServiceOutput() SdwanServiceOutput
	ToSdwanServiceOutputWithContext(context.Context) SdwanServiceOutput
}

type SdwanServiceArgs struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Set/unset the service as agent use exclusively. Valid values: `enable`, `disable`.
	AgentExclusive pulumi.StringPtrInput `pulumi:"agentExclusive"`
	// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
	BandwidthWeight pulumi.IntPtrInput `pulumi:"bandwidthWeight"`
	// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
	Default pulumi.StringPtrInput `pulumi:"default"`
	// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpForward pulumi.StringPtrInput `pulumi:"dscpForward"`
	// Forward traffic DSCP tag.
	DscpForwardTag pulumi.StringPtrInput `pulumi:"dscpForwardTag"`
	// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpReverse pulumi.StringPtrInput `pulumi:"dscpReverse"`
	// Reverse traffic DSCP tag.
	DscpReverseTag pulumi.StringPtrInput `pulumi:"dscpReverseTag"`
	// Destination address6 name. The structure of `dst6` block is documented below.
	Dst6s SdwanServiceDst6ArrayInput `pulumi:"dst6s"`
	// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
	DstNegate pulumi.StringPtrInput `pulumi:"dstNegate"`
	// Destination address name. The structure of `dst` block is documented below.
	Dsts SdwanServiceDstArrayInput `pulumi:"dsts"`
	// End destination port number.
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// End source port number.
	EndSrcPort pulumi.IntPtrInput `pulumi:"endSrcPort"`
	// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// User groups. The structure of `groups` block is documented below.
	Groups SdwanServiceGroupArrayInput `pulumi:"groups"`
	// Hash algorithm for selected priority members for load balance mode. Valid values: `round-robin`, `source-ip-based`, `source-dest-ip-based`, `inbandwidth`, `outbandwidth`, `bibandwidth`.
	HashMode pulumi.StringPtrInput `pulumi:"hashMode"`
	// Health check list. The structure of `healthCheck` block is documented below.
	HealthChecks SdwanServiceHealthCheckArrayInput `pulumi:"healthChecks"`
	// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
	HoldDownTime pulumi.IntPtrInput `pulumi:"holdDownTime"`
	// SD-WAN rule ID (1 - 4000).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
	InputDeviceNegate pulumi.StringPtrInput `pulumi:"inputDeviceNegate"`
	// Source interface name. The structure of `inputDevice` block is documented below.
	InputDevices SdwanServiceInputDeviceArrayInput `pulumi:"inputDevices"`
	// Source input-zone name. The structure of `inputZone` block is documented below.
	InputZones SdwanServiceInputZoneArrayInput `pulumi:"inputZones"`
	// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
	InternetService pulumi.StringPtrInput `pulumi:"internetService"`
	// IDs of one or more application control categories. The structure of `internetServiceAppCtrlCategory` block is documented below.
	InternetServiceAppCtrlCategories SdwanServiceInternetServiceAppCtrlCategoryArrayInput `pulumi:"internetServiceAppCtrlCategories"`
	// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
	InternetServiceAppCtrlGroups SdwanServiceInternetServiceAppCtrlGroupArrayInput `pulumi:"internetServiceAppCtrlGroups"`
	// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
	InternetServiceAppCtrls SdwanServiceInternetServiceAppCtrlArrayInput `pulumi:"internetServiceAppCtrls"`
	// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups SdwanServiceInternetServiceCustomGroupArrayInput `pulumi:"internetServiceCustomGroups"`
	// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms SdwanServiceInternetServiceCustomArrayInput `pulumi:"internetServiceCustoms"`
	// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups SdwanServiceInternetServiceGroupArrayInput `pulumi:"internetServiceGroups"`
	// Internet service name list. The structure of `internetServiceName` block is documented below.
	InternetServiceNames SdwanServiceInternetServiceNameArrayInput `pulumi:"internetServiceNames"`
	// Coefficient of jitter in the formula of custom-profile-1.
	JitterWeight pulumi.IntPtrInput `pulumi:"jitterWeight"`
	// Coefficient of latency in the formula of custom-profile-1.
	LatencyWeight pulumi.IntPtrInput `pulumi:"latencyWeight"`
	// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
	LinkCostFactor pulumi.StringPtrInput `pulumi:"linkCostFactor"`
	// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
	LinkCostThreshold pulumi.IntPtrInput `pulumi:"linkCostThreshold"`
	// Enable/disable load-balance. Valid values: `enable`, `disable`.
	LoadBalance pulumi.StringPtrInput `pulumi:"loadBalance"`
	// Minimum number of members which meet SLA.
	MinimumSlaMeetMembers pulumi.IntPtrInput `pulumi:"minimumSlaMeetMembers"`
	// Control how the SD-WAN rule sets the priority of interfaces in the SD-WAN.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Service and service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Coefficient of packet-loss in the formula of custom-profile-1.
	PacketLossWeight pulumi.IntPtrInput `pulumi:"packetLossWeight"`
	// Enable/disable passive measurement based on the service criteria. Valid values: `enable`, `disable`.
	PassiveMeasurement pulumi.StringPtrInput `pulumi:"passiveMeasurement"`
	// Member sequence number list. The structure of `priorityMembers` block is documented below.
	PriorityMembers SdwanServicePriorityMemberArrayInput `pulumi:"priorityMembers"`
	// Priority zone name list. The structure of `priorityZone` block is documented below.
	PriorityZones SdwanServicePriorityZoneArrayInput `pulumi:"priorityZones"`
	// Protocol number.
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
	// Quality grade.
	QualityLink pulumi.IntPtrInput `pulumi:"qualityLink"`
	// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// IPv4 route map route-tag.
	RouteTag pulumi.IntPtrInput `pulumi:"routeTag"`
	// Enable/disable shortcut for this service. Valid values: `enable`, `disable`.
	Shortcut pulumi.StringPtrInput `pulumi:"shortcut"`
	// High priority of ADVPN shortcut for this service. Valid values: `enable`, `disable`, `auto`.
	ShortcutPriority pulumi.StringPtrInput `pulumi:"shortcutPriority"`
	// Enable/disable shortcut-stickiness of ADVPN. Valid values: `enable`, `disable`.
	ShortcutStickiness pulumi.StringPtrInput `pulumi:"shortcutStickiness"`
	// Method to compare SLA value for SLA mode. Valid values: `order`, `number`.
	SlaCompareMethod pulumi.StringPtrInput `pulumi:"slaCompareMethod"`
	// Enable/disable SLA stickiness (default = disable). Valid values: `enable`, `disable`.
	SlaStickiness pulumi.StringPtrInput `pulumi:"slaStickiness"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas SdwanServiceSlaArrayInput `pulumi:"slas"`
	// Source address6 name. The structure of `src6` block is documented below.
	Src6s SdwanServiceSrc6ArrayInput `pulumi:"src6s"`
	// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
	SrcNegate pulumi.StringPtrInput `pulumi:"srcNegate"`
	// Source address name. The structure of `src` block is documented below.
	Srcs SdwanServiceSrcArrayInput `pulumi:"srcs"`
	// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
	StandaloneAction pulumi.StringPtrInput `pulumi:"standaloneAction"`
	// Start destination port number.
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
	// Start source port number.
	StartSrcPort pulumi.IntPtrInput `pulumi:"startSrcPort"`
	// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Method of selecting member if more than one meets the SLA.
	TieBreak pulumi.StringPtrInput `pulumi:"tieBreak"`
	// Type of service bit pattern.
	Tos pulumi.StringPtrInput `pulumi:"tos"`
	// Type of service evaluated bits.
	TosMask pulumi.StringPtrInput `pulumi:"tosMask"`
	// Enable/disable use of ADVPN shortcut for quality comparison. Valid values: `enable`, `disable`.
	UseShortcutSla pulumi.StringPtrInput `pulumi:"useShortcutSla"`
	// User name. The structure of `users` block is documented below.
	Users SdwanServiceUserArrayInput `pulumi:"users"`
	// Enable/disable zone mode. Valid values: `enable`, `disable`.
	ZoneMode pulumi.StringPtrInput `pulumi:"zoneMode"`
}

func (SdwanServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanService)(nil)).Elem()
}

func (i SdwanServiceArgs) ToSdwanServiceOutput() SdwanServiceOutput {
	return i.ToSdwanServiceOutputWithContext(context.Background())
}

func (i SdwanServiceArgs) ToSdwanServiceOutputWithContext(ctx context.Context) SdwanServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceOutput)
}

// SdwanServiceArrayInput is an input type that accepts SdwanServiceArray and SdwanServiceArrayOutput values.
// You can construct a concrete instance of `SdwanServiceArrayInput` via:
//
//	SdwanServiceArray{ SdwanServiceArgs{...} }
type SdwanServiceArrayInput interface {
	pulumi.Input

	ToSdwanServiceArrayOutput() SdwanServiceArrayOutput
	ToSdwanServiceArrayOutputWithContext(context.Context) SdwanServiceArrayOutput
}

type SdwanServiceArray []SdwanServiceInput

func (SdwanServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanService)(nil)).Elem()
}

func (i SdwanServiceArray) ToSdwanServiceArrayOutput() SdwanServiceArrayOutput {
	return i.ToSdwanServiceArrayOutputWithContext(context.Background())
}

func (i SdwanServiceArray) ToSdwanServiceArrayOutputWithContext(ctx context.Context) SdwanServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceArrayOutput)
}

type SdwanServiceOutput struct{ *pulumi.OutputState }

func (SdwanServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanService)(nil)).Elem()
}

func (o SdwanServiceOutput) ToSdwanServiceOutput() SdwanServiceOutput {
	return o
}

func (o SdwanServiceOutput) ToSdwanServiceOutputWithContext(ctx context.Context) SdwanServiceOutput {
	return o
}

// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
func (o SdwanServiceOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Set/unset the service as agent use exclusively. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) AgentExclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.AgentExclusive }).(pulumi.StringPtrOutput)
}

// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
func (o SdwanServiceOutput) BandwidthWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.BandwidthWeight }).(pulumi.IntPtrOutput)
}

// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.Default }).(pulumi.StringPtrOutput)
}

// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) DscpForward() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.DscpForward }).(pulumi.StringPtrOutput)
}

// Forward traffic DSCP tag.
func (o SdwanServiceOutput) DscpForwardTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.DscpForwardTag }).(pulumi.StringPtrOutput)
}

// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) DscpReverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.DscpReverse }).(pulumi.StringPtrOutput)
}

// Reverse traffic DSCP tag.
func (o SdwanServiceOutput) DscpReverseTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.DscpReverseTag }).(pulumi.StringPtrOutput)
}

// Destination address6 name. The structure of `dst6` block is documented below.
func (o SdwanServiceOutput) Dst6s() SdwanServiceDst6ArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceDst6 { return v.Dst6s }).(SdwanServiceDst6ArrayOutput)
}

// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) DstNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.DstNegate }).(pulumi.StringPtrOutput)
}

// Destination address name. The structure of `dst` block is documented below.
func (o SdwanServiceOutput) Dsts() SdwanServiceDstArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceDst { return v.Dsts }).(SdwanServiceDstArrayOutput)
}

// End destination port number.
func (o SdwanServiceOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// End source port number.
func (o SdwanServiceOutput) EndSrcPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.EndSrcPort }).(pulumi.IntPtrOutput)
}

// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// User groups. The structure of `groups` block is documented below.
func (o SdwanServiceOutput) Groups() SdwanServiceGroupArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceGroup { return v.Groups }).(SdwanServiceGroupArrayOutput)
}

// Hash algorithm for selected priority members for load balance mode. Valid values: `round-robin`, `source-ip-based`, `source-dest-ip-based`, `inbandwidth`, `outbandwidth`, `bibandwidth`.
func (o SdwanServiceOutput) HashMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.HashMode }).(pulumi.StringPtrOutput)
}

// Health check list. The structure of `healthCheck` block is documented below.
func (o SdwanServiceOutput) HealthChecks() SdwanServiceHealthCheckArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceHealthCheck { return v.HealthChecks }).(SdwanServiceHealthCheckArrayOutput)
}

// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
func (o SdwanServiceOutput) HoldDownTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.HoldDownTime }).(pulumi.IntPtrOutput)
}

// SD-WAN rule ID (1 - 4000).
func (o SdwanServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) InputDeviceNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.InputDeviceNegate }).(pulumi.StringPtrOutput)
}

// Source interface name. The structure of `inputDevice` block is documented below.
func (o SdwanServiceOutput) InputDevices() SdwanServiceInputDeviceArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceInputDevice { return v.InputDevices }).(SdwanServiceInputDeviceArrayOutput)
}

// Source input-zone name. The structure of `inputZone` block is documented below.
func (o SdwanServiceOutput) InputZones() SdwanServiceInputZoneArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceInputZone { return v.InputZones }).(SdwanServiceInputZoneArrayOutput)
}

// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) InternetService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.InternetService }).(pulumi.StringPtrOutput)
}

// IDs of one or more application control categories. The structure of `internetServiceAppCtrlCategory` block is documented below.
func (o SdwanServiceOutput) InternetServiceAppCtrlCategories() SdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceInternetServiceAppCtrlCategory {
		return v.InternetServiceAppCtrlCategories
	}).(SdwanServiceInternetServiceAppCtrlCategoryArrayOutput)
}

// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
func (o SdwanServiceOutput) InternetServiceAppCtrlGroups() SdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceInternetServiceAppCtrlGroup { return v.InternetServiceAppCtrlGroups }).(SdwanServiceInternetServiceAppCtrlGroupArrayOutput)
}

// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
func (o SdwanServiceOutput) InternetServiceAppCtrls() SdwanServiceInternetServiceAppCtrlArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceInternetServiceAppCtrl { return v.InternetServiceAppCtrls }).(SdwanServiceInternetServiceAppCtrlArrayOutput)
}

// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
func (o SdwanServiceOutput) InternetServiceCustomGroups() SdwanServiceInternetServiceCustomGroupArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceInternetServiceCustomGroup { return v.InternetServiceCustomGroups }).(SdwanServiceInternetServiceCustomGroupArrayOutput)
}

// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
func (o SdwanServiceOutput) InternetServiceCustoms() SdwanServiceInternetServiceCustomArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceInternetServiceCustom { return v.InternetServiceCustoms }).(SdwanServiceInternetServiceCustomArrayOutput)
}

// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
func (o SdwanServiceOutput) InternetServiceGroups() SdwanServiceInternetServiceGroupArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceInternetServiceGroup { return v.InternetServiceGroups }).(SdwanServiceInternetServiceGroupArrayOutput)
}

// Internet service name list. The structure of `internetServiceName` block is documented below.
func (o SdwanServiceOutput) InternetServiceNames() SdwanServiceInternetServiceNameArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceInternetServiceName { return v.InternetServiceNames }).(SdwanServiceInternetServiceNameArrayOutput)
}

// Coefficient of jitter in the formula of custom-profile-1.
func (o SdwanServiceOutput) JitterWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.JitterWeight }).(pulumi.IntPtrOutput)
}

// Coefficient of latency in the formula of custom-profile-1.
func (o SdwanServiceOutput) LatencyWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.LatencyWeight }).(pulumi.IntPtrOutput)
}

// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
func (o SdwanServiceOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
func (o SdwanServiceOutput) LinkCostThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.LinkCostThreshold }).(pulumi.IntPtrOutput)
}

// Enable/disable load-balance. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) LoadBalance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.LoadBalance }).(pulumi.StringPtrOutput)
}

// Minimum number of members which meet SLA.
func (o SdwanServiceOutput) MinimumSlaMeetMembers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.MinimumSlaMeetMembers }).(pulumi.IntPtrOutput)
}

// Control how the SD-WAN rule sets the priority of interfaces in the SD-WAN.
func (o SdwanServiceOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Service and service group name.
func (o SdwanServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Coefficient of packet-loss in the formula of custom-profile-1.
func (o SdwanServiceOutput) PacketLossWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.PacketLossWeight }).(pulumi.IntPtrOutput)
}

// Enable/disable passive measurement based on the service criteria. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) PassiveMeasurement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.PassiveMeasurement }).(pulumi.StringPtrOutput)
}

// Member sequence number list. The structure of `priorityMembers` block is documented below.
func (o SdwanServiceOutput) PriorityMembers() SdwanServicePriorityMemberArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServicePriorityMember { return v.PriorityMembers }).(SdwanServicePriorityMemberArrayOutput)
}

// Priority zone name list. The structure of `priorityZone` block is documented below.
func (o SdwanServiceOutput) PriorityZones() SdwanServicePriorityZoneArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServicePriorityZone { return v.PriorityZones }).(SdwanServicePriorityZoneArrayOutput)
}

// Protocol number.
func (o SdwanServiceOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

// Quality grade.
func (o SdwanServiceOutput) QualityLink() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.QualityLink }).(pulumi.IntPtrOutput)
}

// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
func (o SdwanServiceOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// IPv4 route map route-tag.
func (o SdwanServiceOutput) RouteTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.RouteTag }).(pulumi.IntPtrOutput)
}

// Enable/disable shortcut for this service. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) Shortcut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.Shortcut }).(pulumi.StringPtrOutput)
}

// High priority of ADVPN shortcut for this service. Valid values: `enable`, `disable`, `auto`.
func (o SdwanServiceOutput) ShortcutPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.ShortcutPriority }).(pulumi.StringPtrOutput)
}

// Enable/disable shortcut-stickiness of ADVPN. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) ShortcutStickiness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.ShortcutStickiness }).(pulumi.StringPtrOutput)
}

// Method to compare SLA value for SLA mode. Valid values: `order`, `number`.
func (o SdwanServiceOutput) SlaCompareMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.SlaCompareMethod }).(pulumi.StringPtrOutput)
}

// Enable/disable SLA stickiness (default = disable). Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) SlaStickiness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.SlaStickiness }).(pulumi.StringPtrOutput)
}

// Service level agreement (SLA). The structure of `sla` block is documented below.
func (o SdwanServiceOutput) Slas() SdwanServiceSlaArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceSla { return v.Slas }).(SdwanServiceSlaArrayOutput)
}

// Source address6 name. The structure of `src6` block is documented below.
func (o SdwanServiceOutput) Src6s() SdwanServiceSrc6ArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceSrc6 { return v.Src6s }).(SdwanServiceSrc6ArrayOutput)
}

// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) SrcNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.SrcNegate }).(pulumi.StringPtrOutput)
}

// Source address name. The structure of `src` block is documented below.
func (o SdwanServiceOutput) Srcs() SdwanServiceSrcArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceSrc { return v.Srcs }).(SdwanServiceSrcArrayOutput)
}

// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) StandaloneAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.StandaloneAction }).(pulumi.StringPtrOutput)
}

// Start destination port number.
func (o SdwanServiceOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

// Start source port number.
func (o SdwanServiceOutput) StartSrcPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanService) *int { return v.StartSrcPort }).(pulumi.IntPtrOutput)
}

// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Method of selecting member if more than one meets the SLA.
func (o SdwanServiceOutput) TieBreak() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.TieBreak }).(pulumi.StringPtrOutput)
}

// Type of service bit pattern.
func (o SdwanServiceOutput) Tos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.Tos }).(pulumi.StringPtrOutput)
}

// Type of service evaluated bits.
func (o SdwanServiceOutput) TosMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.TosMask }).(pulumi.StringPtrOutput)
}

// Enable/disable use of ADVPN shortcut for quality comparison. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) UseShortcutSla() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.UseShortcutSla }).(pulumi.StringPtrOutput)
}

// User name. The structure of `users` block is documented below.
func (o SdwanServiceOutput) Users() SdwanServiceUserArrayOutput {
	return o.ApplyT(func(v SdwanService) []SdwanServiceUser { return v.Users }).(SdwanServiceUserArrayOutput)
}

// Enable/disable zone mode. Valid values: `enable`, `disable`.
func (o SdwanServiceOutput) ZoneMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanService) *string { return v.ZoneMode }).(pulumi.StringPtrOutput)
}

type SdwanServiceArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanService)(nil)).Elem()
}

func (o SdwanServiceArrayOutput) ToSdwanServiceArrayOutput() SdwanServiceArrayOutput {
	return o
}

func (o SdwanServiceArrayOutput) ToSdwanServiceArrayOutputWithContext(ctx context.Context) SdwanServiceArrayOutput {
	return o
}

func (o SdwanServiceArrayOutput) Index(i pulumi.IntInput) SdwanServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanService {
		return vs[0].([]SdwanService)[vs[1].(int)]
	}).(SdwanServiceOutput)
}

type SdwanServiceDst6 struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// SdwanServiceDst6Input is an input type that accepts SdwanServiceDst6Args and SdwanServiceDst6Output values.
// You can construct a concrete instance of `SdwanServiceDst6Input` via:
//
//	SdwanServiceDst6Args{...}
type SdwanServiceDst6Input interface {
	pulumi.Input

	ToSdwanServiceDst6Output() SdwanServiceDst6Output
	ToSdwanServiceDst6OutputWithContext(context.Context) SdwanServiceDst6Output
}

type SdwanServiceDst6Args struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceDst6)(nil)).Elem()
}

func (i SdwanServiceDst6Args) ToSdwanServiceDst6Output() SdwanServiceDst6Output {
	return i.ToSdwanServiceDst6OutputWithContext(context.Background())
}

func (i SdwanServiceDst6Args) ToSdwanServiceDst6OutputWithContext(ctx context.Context) SdwanServiceDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceDst6Output)
}

// SdwanServiceDst6ArrayInput is an input type that accepts SdwanServiceDst6Array and SdwanServiceDst6ArrayOutput values.
// You can construct a concrete instance of `SdwanServiceDst6ArrayInput` via:
//
//	SdwanServiceDst6Array{ SdwanServiceDst6Args{...} }
type SdwanServiceDst6ArrayInput interface {
	pulumi.Input

	ToSdwanServiceDst6ArrayOutput() SdwanServiceDst6ArrayOutput
	ToSdwanServiceDst6ArrayOutputWithContext(context.Context) SdwanServiceDst6ArrayOutput
}

type SdwanServiceDst6Array []SdwanServiceDst6Input

func (SdwanServiceDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceDst6)(nil)).Elem()
}

func (i SdwanServiceDst6Array) ToSdwanServiceDst6ArrayOutput() SdwanServiceDst6ArrayOutput {
	return i.ToSdwanServiceDst6ArrayOutputWithContext(context.Background())
}

func (i SdwanServiceDst6Array) ToSdwanServiceDst6ArrayOutputWithContext(ctx context.Context) SdwanServiceDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceDst6ArrayOutput)
}

type SdwanServiceDst6Output struct{ *pulumi.OutputState }

func (SdwanServiceDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceDst6)(nil)).Elem()
}

func (o SdwanServiceDst6Output) ToSdwanServiceDst6Output() SdwanServiceDst6Output {
	return o
}

func (o SdwanServiceDst6Output) ToSdwanServiceDst6OutputWithContext(ctx context.Context) SdwanServiceDst6Output {
	return o
}

// Address or address group name.
func (o SdwanServiceDst6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceDst6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceDst6ArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceDst6)(nil)).Elem()
}

func (o SdwanServiceDst6ArrayOutput) ToSdwanServiceDst6ArrayOutput() SdwanServiceDst6ArrayOutput {
	return o
}

func (o SdwanServiceDst6ArrayOutput) ToSdwanServiceDst6ArrayOutputWithContext(ctx context.Context) SdwanServiceDst6ArrayOutput {
	return o
}

func (o SdwanServiceDst6ArrayOutput) Index(i pulumi.IntInput) SdwanServiceDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceDst6 {
		return vs[0].([]SdwanServiceDst6)[vs[1].(int)]
	}).(SdwanServiceDst6Output)
}

type SdwanServiceDst struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// SdwanServiceDstInput is an input type that accepts SdwanServiceDstArgs and SdwanServiceDstOutput values.
// You can construct a concrete instance of `SdwanServiceDstInput` via:
//
//	SdwanServiceDstArgs{...}
type SdwanServiceDstInput interface {
	pulumi.Input

	ToSdwanServiceDstOutput() SdwanServiceDstOutput
	ToSdwanServiceDstOutputWithContext(context.Context) SdwanServiceDstOutput
}

type SdwanServiceDstArgs struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceDst)(nil)).Elem()
}

func (i SdwanServiceDstArgs) ToSdwanServiceDstOutput() SdwanServiceDstOutput {
	return i.ToSdwanServiceDstOutputWithContext(context.Background())
}

func (i SdwanServiceDstArgs) ToSdwanServiceDstOutputWithContext(ctx context.Context) SdwanServiceDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceDstOutput)
}

// SdwanServiceDstArrayInput is an input type that accepts SdwanServiceDstArray and SdwanServiceDstArrayOutput values.
// You can construct a concrete instance of `SdwanServiceDstArrayInput` via:
//
//	SdwanServiceDstArray{ SdwanServiceDstArgs{...} }
type SdwanServiceDstArrayInput interface {
	pulumi.Input

	ToSdwanServiceDstArrayOutput() SdwanServiceDstArrayOutput
	ToSdwanServiceDstArrayOutputWithContext(context.Context) SdwanServiceDstArrayOutput
}

type SdwanServiceDstArray []SdwanServiceDstInput

func (SdwanServiceDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceDst)(nil)).Elem()
}

func (i SdwanServiceDstArray) ToSdwanServiceDstArrayOutput() SdwanServiceDstArrayOutput {
	return i.ToSdwanServiceDstArrayOutputWithContext(context.Background())
}

func (i SdwanServiceDstArray) ToSdwanServiceDstArrayOutputWithContext(ctx context.Context) SdwanServiceDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceDstArrayOutput)
}

type SdwanServiceDstOutput struct{ *pulumi.OutputState }

func (SdwanServiceDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceDst)(nil)).Elem()
}

func (o SdwanServiceDstOutput) ToSdwanServiceDstOutput() SdwanServiceDstOutput {
	return o
}

func (o SdwanServiceDstOutput) ToSdwanServiceDstOutputWithContext(ctx context.Context) SdwanServiceDstOutput {
	return o
}

// Address or address group name.
func (o SdwanServiceDstOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceDst) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceDstArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceDst)(nil)).Elem()
}

func (o SdwanServiceDstArrayOutput) ToSdwanServiceDstArrayOutput() SdwanServiceDstArrayOutput {
	return o
}

func (o SdwanServiceDstArrayOutput) ToSdwanServiceDstArrayOutputWithContext(ctx context.Context) SdwanServiceDstArrayOutput {
	return o
}

func (o SdwanServiceDstArrayOutput) Index(i pulumi.IntInput) SdwanServiceDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceDst {
		return vs[0].([]SdwanServiceDst)[vs[1].(int)]
	}).(SdwanServiceDstOutput)
}

type SdwanServiceGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// SdwanServiceGroupInput is an input type that accepts SdwanServiceGroupArgs and SdwanServiceGroupOutput values.
// You can construct a concrete instance of `SdwanServiceGroupInput` via:
//
//	SdwanServiceGroupArgs{...}
type SdwanServiceGroupInput interface {
	pulumi.Input

	ToSdwanServiceGroupOutput() SdwanServiceGroupOutput
	ToSdwanServiceGroupOutputWithContext(context.Context) SdwanServiceGroupOutput
}

type SdwanServiceGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceGroup)(nil)).Elem()
}

func (i SdwanServiceGroupArgs) ToSdwanServiceGroupOutput() SdwanServiceGroupOutput {
	return i.ToSdwanServiceGroupOutputWithContext(context.Background())
}

func (i SdwanServiceGroupArgs) ToSdwanServiceGroupOutputWithContext(ctx context.Context) SdwanServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceGroupOutput)
}

// SdwanServiceGroupArrayInput is an input type that accepts SdwanServiceGroupArray and SdwanServiceGroupArrayOutput values.
// You can construct a concrete instance of `SdwanServiceGroupArrayInput` via:
//
//	SdwanServiceGroupArray{ SdwanServiceGroupArgs{...} }
type SdwanServiceGroupArrayInput interface {
	pulumi.Input

	ToSdwanServiceGroupArrayOutput() SdwanServiceGroupArrayOutput
	ToSdwanServiceGroupArrayOutputWithContext(context.Context) SdwanServiceGroupArrayOutput
}

type SdwanServiceGroupArray []SdwanServiceGroupInput

func (SdwanServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceGroup)(nil)).Elem()
}

func (i SdwanServiceGroupArray) ToSdwanServiceGroupArrayOutput() SdwanServiceGroupArrayOutput {
	return i.ToSdwanServiceGroupArrayOutputWithContext(context.Background())
}

func (i SdwanServiceGroupArray) ToSdwanServiceGroupArrayOutputWithContext(ctx context.Context) SdwanServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceGroupArrayOutput)
}

type SdwanServiceGroupOutput struct{ *pulumi.OutputState }

func (SdwanServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceGroup)(nil)).Elem()
}

func (o SdwanServiceGroupOutput) ToSdwanServiceGroupOutput() SdwanServiceGroupOutput {
	return o
}

func (o SdwanServiceGroupOutput) ToSdwanServiceGroupOutputWithContext(ctx context.Context) SdwanServiceGroupOutput {
	return o
}

// Group name.
func (o SdwanServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceGroup)(nil)).Elem()
}

func (o SdwanServiceGroupArrayOutput) ToSdwanServiceGroupArrayOutput() SdwanServiceGroupArrayOutput {
	return o
}

func (o SdwanServiceGroupArrayOutput) ToSdwanServiceGroupArrayOutputWithContext(ctx context.Context) SdwanServiceGroupArrayOutput {
	return o
}

func (o SdwanServiceGroupArrayOutput) Index(i pulumi.IntInput) SdwanServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceGroup {
		return vs[0].([]SdwanServiceGroup)[vs[1].(int)]
	}).(SdwanServiceGroupOutput)
}

type SdwanServiceHealthCheck struct {
	// Health check name.
	Name *string `pulumi:"name"`
}

// SdwanServiceHealthCheckInput is an input type that accepts SdwanServiceHealthCheckArgs and SdwanServiceHealthCheckOutput values.
// You can construct a concrete instance of `SdwanServiceHealthCheckInput` via:
//
//	SdwanServiceHealthCheckArgs{...}
type SdwanServiceHealthCheckInput interface {
	pulumi.Input

	ToSdwanServiceHealthCheckOutput() SdwanServiceHealthCheckOutput
	ToSdwanServiceHealthCheckOutputWithContext(context.Context) SdwanServiceHealthCheckOutput
}

type SdwanServiceHealthCheckArgs struct {
	// Health check name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceHealthCheck)(nil)).Elem()
}

func (i SdwanServiceHealthCheckArgs) ToSdwanServiceHealthCheckOutput() SdwanServiceHealthCheckOutput {
	return i.ToSdwanServiceHealthCheckOutputWithContext(context.Background())
}

func (i SdwanServiceHealthCheckArgs) ToSdwanServiceHealthCheckOutputWithContext(ctx context.Context) SdwanServiceHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceHealthCheckOutput)
}

// SdwanServiceHealthCheckArrayInput is an input type that accepts SdwanServiceHealthCheckArray and SdwanServiceHealthCheckArrayOutput values.
// You can construct a concrete instance of `SdwanServiceHealthCheckArrayInput` via:
//
//	SdwanServiceHealthCheckArray{ SdwanServiceHealthCheckArgs{...} }
type SdwanServiceHealthCheckArrayInput interface {
	pulumi.Input

	ToSdwanServiceHealthCheckArrayOutput() SdwanServiceHealthCheckArrayOutput
	ToSdwanServiceHealthCheckArrayOutputWithContext(context.Context) SdwanServiceHealthCheckArrayOutput
}

type SdwanServiceHealthCheckArray []SdwanServiceHealthCheckInput

func (SdwanServiceHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceHealthCheck)(nil)).Elem()
}

func (i SdwanServiceHealthCheckArray) ToSdwanServiceHealthCheckArrayOutput() SdwanServiceHealthCheckArrayOutput {
	return i.ToSdwanServiceHealthCheckArrayOutputWithContext(context.Background())
}

func (i SdwanServiceHealthCheckArray) ToSdwanServiceHealthCheckArrayOutputWithContext(ctx context.Context) SdwanServiceHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceHealthCheckArrayOutput)
}

type SdwanServiceHealthCheckOutput struct{ *pulumi.OutputState }

func (SdwanServiceHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceHealthCheck)(nil)).Elem()
}

func (o SdwanServiceHealthCheckOutput) ToSdwanServiceHealthCheckOutput() SdwanServiceHealthCheckOutput {
	return o
}

func (o SdwanServiceHealthCheckOutput) ToSdwanServiceHealthCheckOutputWithContext(ctx context.Context) SdwanServiceHealthCheckOutput {
	return o
}

// Health check name.
func (o SdwanServiceHealthCheckOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceHealthCheck) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceHealthCheck)(nil)).Elem()
}

func (o SdwanServiceHealthCheckArrayOutput) ToSdwanServiceHealthCheckArrayOutput() SdwanServiceHealthCheckArrayOutput {
	return o
}

func (o SdwanServiceHealthCheckArrayOutput) ToSdwanServiceHealthCheckArrayOutputWithContext(ctx context.Context) SdwanServiceHealthCheckArrayOutput {
	return o
}

func (o SdwanServiceHealthCheckArrayOutput) Index(i pulumi.IntInput) SdwanServiceHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceHealthCheck {
		return vs[0].([]SdwanServiceHealthCheck)[vs[1].(int)]
	}).(SdwanServiceHealthCheckOutput)
}

type SdwanServiceInputDevice struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// SdwanServiceInputDeviceInput is an input type that accepts SdwanServiceInputDeviceArgs and SdwanServiceInputDeviceOutput values.
// You can construct a concrete instance of `SdwanServiceInputDeviceInput` via:
//
//	SdwanServiceInputDeviceArgs{...}
type SdwanServiceInputDeviceInput interface {
	pulumi.Input

	ToSdwanServiceInputDeviceOutput() SdwanServiceInputDeviceOutput
	ToSdwanServiceInputDeviceOutputWithContext(context.Context) SdwanServiceInputDeviceOutput
}

type SdwanServiceInputDeviceArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInputDevice)(nil)).Elem()
}

func (i SdwanServiceInputDeviceArgs) ToSdwanServiceInputDeviceOutput() SdwanServiceInputDeviceOutput {
	return i.ToSdwanServiceInputDeviceOutputWithContext(context.Background())
}

func (i SdwanServiceInputDeviceArgs) ToSdwanServiceInputDeviceOutputWithContext(ctx context.Context) SdwanServiceInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInputDeviceOutput)
}

// SdwanServiceInputDeviceArrayInput is an input type that accepts SdwanServiceInputDeviceArray and SdwanServiceInputDeviceArrayOutput values.
// You can construct a concrete instance of `SdwanServiceInputDeviceArrayInput` via:
//
//	SdwanServiceInputDeviceArray{ SdwanServiceInputDeviceArgs{...} }
type SdwanServiceInputDeviceArrayInput interface {
	pulumi.Input

	ToSdwanServiceInputDeviceArrayOutput() SdwanServiceInputDeviceArrayOutput
	ToSdwanServiceInputDeviceArrayOutputWithContext(context.Context) SdwanServiceInputDeviceArrayOutput
}

type SdwanServiceInputDeviceArray []SdwanServiceInputDeviceInput

func (SdwanServiceInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInputDevice)(nil)).Elem()
}

func (i SdwanServiceInputDeviceArray) ToSdwanServiceInputDeviceArrayOutput() SdwanServiceInputDeviceArrayOutput {
	return i.ToSdwanServiceInputDeviceArrayOutputWithContext(context.Background())
}

func (i SdwanServiceInputDeviceArray) ToSdwanServiceInputDeviceArrayOutputWithContext(ctx context.Context) SdwanServiceInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInputDeviceArrayOutput)
}

type SdwanServiceInputDeviceOutput struct{ *pulumi.OutputState }

func (SdwanServiceInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInputDevice)(nil)).Elem()
}

func (o SdwanServiceInputDeviceOutput) ToSdwanServiceInputDeviceOutput() SdwanServiceInputDeviceOutput {
	return o
}

func (o SdwanServiceInputDeviceOutput) ToSdwanServiceInputDeviceOutputWithContext(ctx context.Context) SdwanServiceInputDeviceOutput {
	return o
}

// Interface name.
func (o SdwanServiceInputDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceInputDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInputDevice)(nil)).Elem()
}

func (o SdwanServiceInputDeviceArrayOutput) ToSdwanServiceInputDeviceArrayOutput() SdwanServiceInputDeviceArrayOutput {
	return o
}

func (o SdwanServiceInputDeviceArrayOutput) ToSdwanServiceInputDeviceArrayOutputWithContext(ctx context.Context) SdwanServiceInputDeviceArrayOutput {
	return o
}

func (o SdwanServiceInputDeviceArrayOutput) Index(i pulumi.IntInput) SdwanServiceInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceInputDevice {
		return vs[0].([]SdwanServiceInputDevice)[vs[1].(int)]
	}).(SdwanServiceInputDeviceOutput)
}

type SdwanServiceInputZone struct {
	// Zone.
	Name *string `pulumi:"name"`
}

// SdwanServiceInputZoneInput is an input type that accepts SdwanServiceInputZoneArgs and SdwanServiceInputZoneOutput values.
// You can construct a concrete instance of `SdwanServiceInputZoneInput` via:
//
//	SdwanServiceInputZoneArgs{...}
type SdwanServiceInputZoneInput interface {
	pulumi.Input

	ToSdwanServiceInputZoneOutput() SdwanServiceInputZoneOutput
	ToSdwanServiceInputZoneOutputWithContext(context.Context) SdwanServiceInputZoneOutput
}

type SdwanServiceInputZoneArgs struct {
	// Zone.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceInputZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInputZone)(nil)).Elem()
}

func (i SdwanServiceInputZoneArgs) ToSdwanServiceInputZoneOutput() SdwanServiceInputZoneOutput {
	return i.ToSdwanServiceInputZoneOutputWithContext(context.Background())
}

func (i SdwanServiceInputZoneArgs) ToSdwanServiceInputZoneOutputWithContext(ctx context.Context) SdwanServiceInputZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInputZoneOutput)
}

// SdwanServiceInputZoneArrayInput is an input type that accepts SdwanServiceInputZoneArray and SdwanServiceInputZoneArrayOutput values.
// You can construct a concrete instance of `SdwanServiceInputZoneArrayInput` via:
//
//	SdwanServiceInputZoneArray{ SdwanServiceInputZoneArgs{...} }
type SdwanServiceInputZoneArrayInput interface {
	pulumi.Input

	ToSdwanServiceInputZoneArrayOutput() SdwanServiceInputZoneArrayOutput
	ToSdwanServiceInputZoneArrayOutputWithContext(context.Context) SdwanServiceInputZoneArrayOutput
}

type SdwanServiceInputZoneArray []SdwanServiceInputZoneInput

func (SdwanServiceInputZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInputZone)(nil)).Elem()
}

func (i SdwanServiceInputZoneArray) ToSdwanServiceInputZoneArrayOutput() SdwanServiceInputZoneArrayOutput {
	return i.ToSdwanServiceInputZoneArrayOutputWithContext(context.Background())
}

func (i SdwanServiceInputZoneArray) ToSdwanServiceInputZoneArrayOutputWithContext(ctx context.Context) SdwanServiceInputZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInputZoneArrayOutput)
}

type SdwanServiceInputZoneOutput struct{ *pulumi.OutputState }

func (SdwanServiceInputZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInputZone)(nil)).Elem()
}

func (o SdwanServiceInputZoneOutput) ToSdwanServiceInputZoneOutput() SdwanServiceInputZoneOutput {
	return o
}

func (o SdwanServiceInputZoneOutput) ToSdwanServiceInputZoneOutputWithContext(ctx context.Context) SdwanServiceInputZoneOutput {
	return o
}

// Zone.
func (o SdwanServiceInputZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceInputZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceInputZoneArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceInputZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInputZone)(nil)).Elem()
}

func (o SdwanServiceInputZoneArrayOutput) ToSdwanServiceInputZoneArrayOutput() SdwanServiceInputZoneArrayOutput {
	return o
}

func (o SdwanServiceInputZoneArrayOutput) ToSdwanServiceInputZoneArrayOutputWithContext(ctx context.Context) SdwanServiceInputZoneArrayOutput {
	return o
}

func (o SdwanServiceInputZoneArrayOutput) Index(i pulumi.IntInput) SdwanServiceInputZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceInputZone {
		return vs[0].([]SdwanServiceInputZone)[vs[1].(int)]
	}).(SdwanServiceInputZoneOutput)
}

type SdwanServiceInternetServiceAppCtrl struct {
	// Application control based Internet Service ID.
	Id *int `pulumi:"id"`
}

// SdwanServiceInternetServiceAppCtrlInput is an input type that accepts SdwanServiceInternetServiceAppCtrlArgs and SdwanServiceInternetServiceAppCtrlOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceAppCtrlInput` via:
//
//	SdwanServiceInternetServiceAppCtrlArgs{...}
type SdwanServiceInternetServiceAppCtrlInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceAppCtrlOutput() SdwanServiceInternetServiceAppCtrlOutput
	ToSdwanServiceInternetServiceAppCtrlOutputWithContext(context.Context) SdwanServiceInternetServiceAppCtrlOutput
}

type SdwanServiceInternetServiceAppCtrlArgs struct {
	// Application control based Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SdwanServiceInternetServiceAppCtrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i SdwanServiceInternetServiceAppCtrlArgs) ToSdwanServiceInternetServiceAppCtrlOutput() SdwanServiceInternetServiceAppCtrlOutput {
	return i.ToSdwanServiceInternetServiceAppCtrlOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceAppCtrlArgs) ToSdwanServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceAppCtrlOutput)
}

// SdwanServiceInternetServiceAppCtrlArrayInput is an input type that accepts SdwanServiceInternetServiceAppCtrlArray and SdwanServiceInternetServiceAppCtrlArrayOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceAppCtrlArrayInput` via:
//
//	SdwanServiceInternetServiceAppCtrlArray{ SdwanServiceInternetServiceAppCtrlArgs{...} }
type SdwanServiceInternetServiceAppCtrlArrayInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceAppCtrlArrayOutput() SdwanServiceInternetServiceAppCtrlArrayOutput
	ToSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(context.Context) SdwanServiceInternetServiceAppCtrlArrayOutput
}

type SdwanServiceInternetServiceAppCtrlArray []SdwanServiceInternetServiceAppCtrlInput

func (SdwanServiceInternetServiceAppCtrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i SdwanServiceInternetServiceAppCtrlArray) ToSdwanServiceInternetServiceAppCtrlArrayOutput() SdwanServiceInternetServiceAppCtrlArrayOutput {
	return i.ToSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceAppCtrlArray) ToSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceAppCtrlArrayOutput)
}

type SdwanServiceInternetServiceAppCtrlOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceAppCtrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o SdwanServiceInternetServiceAppCtrlOutput) ToSdwanServiceInternetServiceAppCtrlOutput() SdwanServiceInternetServiceAppCtrlOutput {
	return o
}

func (o SdwanServiceInternetServiceAppCtrlOutput) ToSdwanServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlOutput {
	return o
}

// Application control based Internet Service ID.
func (o SdwanServiceInternetServiceAppCtrlOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanServiceInternetServiceAppCtrl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SdwanServiceInternetServiceAppCtrlArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceAppCtrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o SdwanServiceInternetServiceAppCtrlArrayOutput) ToSdwanServiceInternetServiceAppCtrlArrayOutput() SdwanServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceAppCtrlArrayOutput) ToSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceAppCtrlArrayOutput) Index(i pulumi.IntInput) SdwanServiceInternetServiceAppCtrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceInternetServiceAppCtrl {
		return vs[0].([]SdwanServiceInternetServiceAppCtrl)[vs[1].(int)]
	}).(SdwanServiceInternetServiceAppCtrlOutput)
}

type SdwanServiceInternetServiceAppCtrlCategory struct {
	// Application control category ID.
	Id *int `pulumi:"id"`
}

// SdwanServiceInternetServiceAppCtrlCategoryInput is an input type that accepts SdwanServiceInternetServiceAppCtrlCategoryArgs and SdwanServiceInternetServiceAppCtrlCategoryOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceAppCtrlCategoryInput` via:
//
//	SdwanServiceInternetServiceAppCtrlCategoryArgs{...}
type SdwanServiceInternetServiceAppCtrlCategoryInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceAppCtrlCategoryOutput() SdwanServiceInternetServiceAppCtrlCategoryOutput
	ToSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(context.Context) SdwanServiceInternetServiceAppCtrlCategoryOutput
}

type SdwanServiceInternetServiceAppCtrlCategoryArgs struct {
	// Application control category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SdwanServiceInternetServiceAppCtrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (i SdwanServiceInternetServiceAppCtrlCategoryArgs) ToSdwanServiceInternetServiceAppCtrlCategoryOutput() SdwanServiceInternetServiceAppCtrlCategoryOutput {
	return i.ToSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceAppCtrlCategoryArgs) ToSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceAppCtrlCategoryOutput)
}

// SdwanServiceInternetServiceAppCtrlCategoryArrayInput is an input type that accepts SdwanServiceInternetServiceAppCtrlCategoryArray and SdwanServiceInternetServiceAppCtrlCategoryArrayOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceAppCtrlCategoryArrayInput` via:
//
//	SdwanServiceInternetServiceAppCtrlCategoryArray{ SdwanServiceInternetServiceAppCtrlCategoryArgs{...} }
type SdwanServiceInternetServiceAppCtrlCategoryArrayInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceAppCtrlCategoryArrayOutput() SdwanServiceInternetServiceAppCtrlCategoryArrayOutput
	ToSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(context.Context) SdwanServiceInternetServiceAppCtrlCategoryArrayOutput
}

type SdwanServiceInternetServiceAppCtrlCategoryArray []SdwanServiceInternetServiceAppCtrlCategoryInput

func (SdwanServiceInternetServiceAppCtrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (i SdwanServiceInternetServiceAppCtrlCategoryArray) ToSdwanServiceInternetServiceAppCtrlCategoryArrayOutput() SdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return i.ToSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceAppCtrlCategoryArray) ToSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceAppCtrlCategoryArrayOutput)
}

type SdwanServiceInternetServiceAppCtrlCategoryOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceAppCtrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (o SdwanServiceInternetServiceAppCtrlCategoryOutput) ToSdwanServiceInternetServiceAppCtrlCategoryOutput() SdwanServiceInternetServiceAppCtrlCategoryOutput {
	return o
}

func (o SdwanServiceInternetServiceAppCtrlCategoryOutput) ToSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlCategoryOutput {
	return o
}

// Application control category ID.
func (o SdwanServiceInternetServiceAppCtrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanServiceInternetServiceAppCtrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SdwanServiceInternetServiceAppCtrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceAppCtrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (o SdwanServiceInternetServiceAppCtrlCategoryArrayOutput) ToSdwanServiceInternetServiceAppCtrlCategoryArrayOutput() SdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceAppCtrlCategoryArrayOutput) ToSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceAppCtrlCategoryArrayOutput) Index(i pulumi.IntInput) SdwanServiceInternetServiceAppCtrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceInternetServiceAppCtrlCategory {
		return vs[0].([]SdwanServiceInternetServiceAppCtrlCategory)[vs[1].(int)]
	}).(SdwanServiceInternetServiceAppCtrlCategoryOutput)
}

type SdwanServiceInternetServiceAppCtrlGroup struct {
	// Application control based Internet Service group name.
	Name *string `pulumi:"name"`
}

// SdwanServiceInternetServiceAppCtrlGroupInput is an input type that accepts SdwanServiceInternetServiceAppCtrlGroupArgs and SdwanServiceInternetServiceAppCtrlGroupOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceAppCtrlGroupInput` via:
//
//	SdwanServiceInternetServiceAppCtrlGroupArgs{...}
type SdwanServiceInternetServiceAppCtrlGroupInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceAppCtrlGroupOutput() SdwanServiceInternetServiceAppCtrlGroupOutput
	ToSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(context.Context) SdwanServiceInternetServiceAppCtrlGroupOutput
}

type SdwanServiceInternetServiceAppCtrlGroupArgs struct {
	// Application control based Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceInternetServiceAppCtrlGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i SdwanServiceInternetServiceAppCtrlGroupArgs) ToSdwanServiceInternetServiceAppCtrlGroupOutput() SdwanServiceInternetServiceAppCtrlGroupOutput {
	return i.ToSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceAppCtrlGroupArgs) ToSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceAppCtrlGroupOutput)
}

// SdwanServiceInternetServiceAppCtrlGroupArrayInput is an input type that accepts SdwanServiceInternetServiceAppCtrlGroupArray and SdwanServiceInternetServiceAppCtrlGroupArrayOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceAppCtrlGroupArrayInput` via:
//
//	SdwanServiceInternetServiceAppCtrlGroupArray{ SdwanServiceInternetServiceAppCtrlGroupArgs{...} }
type SdwanServiceInternetServiceAppCtrlGroupArrayInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceAppCtrlGroupArrayOutput() SdwanServiceInternetServiceAppCtrlGroupArrayOutput
	ToSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Context) SdwanServiceInternetServiceAppCtrlGroupArrayOutput
}

type SdwanServiceInternetServiceAppCtrlGroupArray []SdwanServiceInternetServiceAppCtrlGroupInput

func (SdwanServiceInternetServiceAppCtrlGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i SdwanServiceInternetServiceAppCtrlGroupArray) ToSdwanServiceInternetServiceAppCtrlGroupArrayOutput() SdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return i.ToSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceAppCtrlGroupArray) ToSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceAppCtrlGroupArrayOutput)
}

type SdwanServiceInternetServiceAppCtrlGroupOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceAppCtrlGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o SdwanServiceInternetServiceAppCtrlGroupOutput) ToSdwanServiceInternetServiceAppCtrlGroupOutput() SdwanServiceInternetServiceAppCtrlGroupOutput {
	return o
}

func (o SdwanServiceInternetServiceAppCtrlGroupOutput) ToSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlGroupOutput {
	return o
}

// Application control based Internet Service group name.
func (o SdwanServiceInternetServiceAppCtrlGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceInternetServiceAppCtrlGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceInternetServiceAppCtrlGroupArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceAppCtrlGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o SdwanServiceInternetServiceAppCtrlGroupArrayOutput) ToSdwanServiceInternetServiceAppCtrlGroupArrayOutput() SdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceAppCtrlGroupArrayOutput) ToSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceAppCtrlGroupArrayOutput) Index(i pulumi.IntInput) SdwanServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceInternetServiceAppCtrlGroup {
		return vs[0].([]SdwanServiceInternetServiceAppCtrlGroup)[vs[1].(int)]
	}).(SdwanServiceInternetServiceAppCtrlGroupOutput)
}

type SdwanServiceInternetServiceCustom struct {
	// Custom Internet service name.
	Name *string `pulumi:"name"`
}

// SdwanServiceInternetServiceCustomInput is an input type that accepts SdwanServiceInternetServiceCustomArgs and SdwanServiceInternetServiceCustomOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceCustomInput` via:
//
//	SdwanServiceInternetServiceCustomArgs{...}
type SdwanServiceInternetServiceCustomInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceCustomOutput() SdwanServiceInternetServiceCustomOutput
	ToSdwanServiceInternetServiceCustomOutputWithContext(context.Context) SdwanServiceInternetServiceCustomOutput
}

type SdwanServiceInternetServiceCustomArgs struct {
	// Custom Internet service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (i SdwanServiceInternetServiceCustomArgs) ToSdwanServiceInternetServiceCustomOutput() SdwanServiceInternetServiceCustomOutput {
	return i.ToSdwanServiceInternetServiceCustomOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceCustomArgs) ToSdwanServiceInternetServiceCustomOutputWithContext(ctx context.Context) SdwanServiceInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceCustomOutput)
}

// SdwanServiceInternetServiceCustomArrayInput is an input type that accepts SdwanServiceInternetServiceCustomArray and SdwanServiceInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceCustomArrayInput` via:
//
//	SdwanServiceInternetServiceCustomArray{ SdwanServiceInternetServiceCustomArgs{...} }
type SdwanServiceInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceCustomArrayOutput() SdwanServiceInternetServiceCustomArrayOutput
	ToSdwanServiceInternetServiceCustomArrayOutputWithContext(context.Context) SdwanServiceInternetServiceCustomArrayOutput
}

type SdwanServiceInternetServiceCustomArray []SdwanServiceInternetServiceCustomInput

func (SdwanServiceInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (i SdwanServiceInternetServiceCustomArray) ToSdwanServiceInternetServiceCustomArrayOutput() SdwanServiceInternetServiceCustomArrayOutput {
	return i.ToSdwanServiceInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceCustomArray) ToSdwanServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceCustomArrayOutput)
}

type SdwanServiceInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (o SdwanServiceInternetServiceCustomOutput) ToSdwanServiceInternetServiceCustomOutput() SdwanServiceInternetServiceCustomOutput {
	return o
}

func (o SdwanServiceInternetServiceCustomOutput) ToSdwanServiceInternetServiceCustomOutputWithContext(ctx context.Context) SdwanServiceInternetServiceCustomOutput {
	return o
}

// Custom Internet service name.
func (o SdwanServiceInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (o SdwanServiceInternetServiceCustomArrayOutput) ToSdwanServiceInternetServiceCustomArrayOutput() SdwanServiceInternetServiceCustomArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceCustomArrayOutput) ToSdwanServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceCustomArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) SdwanServiceInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceInternetServiceCustom {
		return vs[0].([]SdwanServiceInternetServiceCustom)[vs[1].(int)]
	}).(SdwanServiceInternetServiceCustomOutput)
}

type SdwanServiceInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// SdwanServiceInternetServiceCustomGroupInput is an input type that accepts SdwanServiceInternetServiceCustomGroupArgs and SdwanServiceInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceCustomGroupInput` via:
//
//	SdwanServiceInternetServiceCustomGroupArgs{...}
type SdwanServiceInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceCustomGroupOutput() SdwanServiceInternetServiceCustomGroupOutput
	ToSdwanServiceInternetServiceCustomGroupOutputWithContext(context.Context) SdwanServiceInternetServiceCustomGroupOutput
}

type SdwanServiceInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i SdwanServiceInternetServiceCustomGroupArgs) ToSdwanServiceInternetServiceCustomGroupOutput() SdwanServiceInternetServiceCustomGroupOutput {
	return i.ToSdwanServiceInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceCustomGroupArgs) ToSdwanServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) SdwanServiceInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceCustomGroupOutput)
}

// SdwanServiceInternetServiceCustomGroupArrayInput is an input type that accepts SdwanServiceInternetServiceCustomGroupArray and SdwanServiceInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceCustomGroupArrayInput` via:
//
//	SdwanServiceInternetServiceCustomGroupArray{ SdwanServiceInternetServiceCustomGroupArgs{...} }
type SdwanServiceInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceCustomGroupArrayOutput() SdwanServiceInternetServiceCustomGroupArrayOutput
	ToSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(context.Context) SdwanServiceInternetServiceCustomGroupArrayOutput
}

type SdwanServiceInternetServiceCustomGroupArray []SdwanServiceInternetServiceCustomGroupInput

func (SdwanServiceInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i SdwanServiceInternetServiceCustomGroupArray) ToSdwanServiceInternetServiceCustomGroupArrayOutput() SdwanServiceInternetServiceCustomGroupArrayOutput {
	return i.ToSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceCustomGroupArray) ToSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceCustomGroupArrayOutput)
}

type SdwanServiceInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o SdwanServiceInternetServiceCustomGroupOutput) ToSdwanServiceInternetServiceCustomGroupOutput() SdwanServiceInternetServiceCustomGroupOutput {
	return o
}

func (o SdwanServiceInternetServiceCustomGroupOutput) ToSdwanServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) SdwanServiceInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o SdwanServiceInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o SdwanServiceInternetServiceCustomGroupArrayOutput) ToSdwanServiceInternetServiceCustomGroupArrayOutput() SdwanServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceCustomGroupArrayOutput) ToSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) SdwanServiceInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceInternetServiceCustomGroup {
		return vs[0].([]SdwanServiceInternetServiceCustomGroup)[vs[1].(int)]
	}).(SdwanServiceInternetServiceCustomGroupOutput)
}

type SdwanServiceInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// SdwanServiceInternetServiceGroupInput is an input type that accepts SdwanServiceInternetServiceGroupArgs and SdwanServiceInternetServiceGroupOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceGroupInput` via:
//
//	SdwanServiceInternetServiceGroupArgs{...}
type SdwanServiceInternetServiceGroupInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceGroupOutput() SdwanServiceInternetServiceGroupOutput
	ToSdwanServiceInternetServiceGroupOutputWithContext(context.Context) SdwanServiceInternetServiceGroupOutput
}

type SdwanServiceInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (i SdwanServiceInternetServiceGroupArgs) ToSdwanServiceInternetServiceGroupOutput() SdwanServiceInternetServiceGroupOutput {
	return i.ToSdwanServiceInternetServiceGroupOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceGroupArgs) ToSdwanServiceInternetServiceGroupOutputWithContext(ctx context.Context) SdwanServiceInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceGroupOutput)
}

// SdwanServiceInternetServiceGroupArrayInput is an input type that accepts SdwanServiceInternetServiceGroupArray and SdwanServiceInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceGroupArrayInput` via:
//
//	SdwanServiceInternetServiceGroupArray{ SdwanServiceInternetServiceGroupArgs{...} }
type SdwanServiceInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceGroupArrayOutput() SdwanServiceInternetServiceGroupArrayOutput
	ToSdwanServiceInternetServiceGroupArrayOutputWithContext(context.Context) SdwanServiceInternetServiceGroupArrayOutput
}

type SdwanServiceInternetServiceGroupArray []SdwanServiceInternetServiceGroupInput

func (SdwanServiceInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (i SdwanServiceInternetServiceGroupArray) ToSdwanServiceInternetServiceGroupArrayOutput() SdwanServiceInternetServiceGroupArrayOutput {
	return i.ToSdwanServiceInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceGroupArray) ToSdwanServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceGroupArrayOutput)
}

type SdwanServiceInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (o SdwanServiceInternetServiceGroupOutput) ToSdwanServiceInternetServiceGroupOutput() SdwanServiceInternetServiceGroupOutput {
	return o
}

func (o SdwanServiceInternetServiceGroupOutput) ToSdwanServiceInternetServiceGroupOutputWithContext(ctx context.Context) SdwanServiceInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o SdwanServiceInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (o SdwanServiceInternetServiceGroupArrayOutput) ToSdwanServiceInternetServiceGroupArrayOutput() SdwanServiceInternetServiceGroupArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceGroupArrayOutput) ToSdwanServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceGroupArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) SdwanServiceInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceInternetServiceGroup {
		return vs[0].([]SdwanServiceInternetServiceGroup)[vs[1].(int)]
	}).(SdwanServiceInternetServiceGroupOutput)
}

type SdwanServiceInternetServiceName struct {
	// Internet service name.
	Name *string `pulumi:"name"`
}

// SdwanServiceInternetServiceNameInput is an input type that accepts SdwanServiceInternetServiceNameArgs and SdwanServiceInternetServiceNameOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceNameInput` via:
//
//	SdwanServiceInternetServiceNameArgs{...}
type SdwanServiceInternetServiceNameInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceNameOutput() SdwanServiceInternetServiceNameOutput
	ToSdwanServiceInternetServiceNameOutputWithContext(context.Context) SdwanServiceInternetServiceNameOutput
}

type SdwanServiceInternetServiceNameArgs struct {
	// Internet service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceName)(nil)).Elem()
}

func (i SdwanServiceInternetServiceNameArgs) ToSdwanServiceInternetServiceNameOutput() SdwanServiceInternetServiceNameOutput {
	return i.ToSdwanServiceInternetServiceNameOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceNameArgs) ToSdwanServiceInternetServiceNameOutputWithContext(ctx context.Context) SdwanServiceInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceNameOutput)
}

// SdwanServiceInternetServiceNameArrayInput is an input type that accepts SdwanServiceInternetServiceNameArray and SdwanServiceInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `SdwanServiceInternetServiceNameArrayInput` via:
//
//	SdwanServiceInternetServiceNameArray{ SdwanServiceInternetServiceNameArgs{...} }
type SdwanServiceInternetServiceNameArrayInput interface {
	pulumi.Input

	ToSdwanServiceInternetServiceNameArrayOutput() SdwanServiceInternetServiceNameArrayOutput
	ToSdwanServiceInternetServiceNameArrayOutputWithContext(context.Context) SdwanServiceInternetServiceNameArrayOutput
}

type SdwanServiceInternetServiceNameArray []SdwanServiceInternetServiceNameInput

func (SdwanServiceInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceName)(nil)).Elem()
}

func (i SdwanServiceInternetServiceNameArray) ToSdwanServiceInternetServiceNameArrayOutput() SdwanServiceInternetServiceNameArrayOutput {
	return i.ToSdwanServiceInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i SdwanServiceInternetServiceNameArray) ToSdwanServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceInternetServiceNameArrayOutput)
}

type SdwanServiceInternetServiceNameOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceInternetServiceName)(nil)).Elem()
}

func (o SdwanServiceInternetServiceNameOutput) ToSdwanServiceInternetServiceNameOutput() SdwanServiceInternetServiceNameOutput {
	return o
}

func (o SdwanServiceInternetServiceNameOutput) ToSdwanServiceInternetServiceNameOutputWithContext(ctx context.Context) SdwanServiceInternetServiceNameOutput {
	return o
}

// Internet service name.
func (o SdwanServiceInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceInternetServiceName)(nil)).Elem()
}

func (o SdwanServiceInternetServiceNameArrayOutput) ToSdwanServiceInternetServiceNameArrayOutput() SdwanServiceInternetServiceNameArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceNameArrayOutput) ToSdwanServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) SdwanServiceInternetServiceNameArrayOutput {
	return o
}

func (o SdwanServiceInternetServiceNameArrayOutput) Index(i pulumi.IntInput) SdwanServiceInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceInternetServiceName {
		return vs[0].([]SdwanServiceInternetServiceName)[vs[1].(int)]
	}).(SdwanServiceInternetServiceNameOutput)
}

type SdwanServicePriorityMember struct {
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
}

// SdwanServicePriorityMemberInput is an input type that accepts SdwanServicePriorityMemberArgs and SdwanServicePriorityMemberOutput values.
// You can construct a concrete instance of `SdwanServicePriorityMemberInput` via:
//
//	SdwanServicePriorityMemberArgs{...}
type SdwanServicePriorityMemberInput interface {
	pulumi.Input

	ToSdwanServicePriorityMemberOutput() SdwanServicePriorityMemberOutput
	ToSdwanServicePriorityMemberOutputWithContext(context.Context) SdwanServicePriorityMemberOutput
}

type SdwanServicePriorityMemberArgs struct {
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SdwanServicePriorityMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServicePriorityMember)(nil)).Elem()
}

func (i SdwanServicePriorityMemberArgs) ToSdwanServicePriorityMemberOutput() SdwanServicePriorityMemberOutput {
	return i.ToSdwanServicePriorityMemberOutputWithContext(context.Background())
}

func (i SdwanServicePriorityMemberArgs) ToSdwanServicePriorityMemberOutputWithContext(ctx context.Context) SdwanServicePriorityMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServicePriorityMemberOutput)
}

// SdwanServicePriorityMemberArrayInput is an input type that accepts SdwanServicePriorityMemberArray and SdwanServicePriorityMemberArrayOutput values.
// You can construct a concrete instance of `SdwanServicePriorityMemberArrayInput` via:
//
//	SdwanServicePriorityMemberArray{ SdwanServicePriorityMemberArgs{...} }
type SdwanServicePriorityMemberArrayInput interface {
	pulumi.Input

	ToSdwanServicePriorityMemberArrayOutput() SdwanServicePriorityMemberArrayOutput
	ToSdwanServicePriorityMemberArrayOutputWithContext(context.Context) SdwanServicePriorityMemberArrayOutput
}

type SdwanServicePriorityMemberArray []SdwanServicePriorityMemberInput

func (SdwanServicePriorityMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServicePriorityMember)(nil)).Elem()
}

func (i SdwanServicePriorityMemberArray) ToSdwanServicePriorityMemberArrayOutput() SdwanServicePriorityMemberArrayOutput {
	return i.ToSdwanServicePriorityMemberArrayOutputWithContext(context.Background())
}

func (i SdwanServicePriorityMemberArray) ToSdwanServicePriorityMemberArrayOutputWithContext(ctx context.Context) SdwanServicePriorityMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServicePriorityMemberArrayOutput)
}

type SdwanServicePriorityMemberOutput struct{ *pulumi.OutputState }

func (SdwanServicePriorityMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServicePriorityMember)(nil)).Elem()
}

func (o SdwanServicePriorityMemberOutput) ToSdwanServicePriorityMemberOutput() SdwanServicePriorityMemberOutput {
	return o
}

func (o SdwanServicePriorityMemberOutput) ToSdwanServicePriorityMemberOutputWithContext(ctx context.Context) SdwanServicePriorityMemberOutput {
	return o
}

// Member sequence number.
func (o SdwanServicePriorityMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanServicePriorityMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SdwanServicePriorityMemberArrayOutput struct{ *pulumi.OutputState }

func (SdwanServicePriorityMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServicePriorityMember)(nil)).Elem()
}

func (o SdwanServicePriorityMemberArrayOutput) ToSdwanServicePriorityMemberArrayOutput() SdwanServicePriorityMemberArrayOutput {
	return o
}

func (o SdwanServicePriorityMemberArrayOutput) ToSdwanServicePriorityMemberArrayOutputWithContext(ctx context.Context) SdwanServicePriorityMemberArrayOutput {
	return o
}

func (o SdwanServicePriorityMemberArrayOutput) Index(i pulumi.IntInput) SdwanServicePriorityMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServicePriorityMember {
		return vs[0].([]SdwanServicePriorityMember)[vs[1].(int)]
	}).(SdwanServicePriorityMemberOutput)
}

type SdwanServicePriorityZone struct {
	// Priority zone name.
	Name *string `pulumi:"name"`
}

// SdwanServicePriorityZoneInput is an input type that accepts SdwanServicePriorityZoneArgs and SdwanServicePriorityZoneOutput values.
// You can construct a concrete instance of `SdwanServicePriorityZoneInput` via:
//
//	SdwanServicePriorityZoneArgs{...}
type SdwanServicePriorityZoneInput interface {
	pulumi.Input

	ToSdwanServicePriorityZoneOutput() SdwanServicePriorityZoneOutput
	ToSdwanServicePriorityZoneOutputWithContext(context.Context) SdwanServicePriorityZoneOutput
}

type SdwanServicePriorityZoneArgs struct {
	// Priority zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServicePriorityZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServicePriorityZone)(nil)).Elem()
}

func (i SdwanServicePriorityZoneArgs) ToSdwanServicePriorityZoneOutput() SdwanServicePriorityZoneOutput {
	return i.ToSdwanServicePriorityZoneOutputWithContext(context.Background())
}

func (i SdwanServicePriorityZoneArgs) ToSdwanServicePriorityZoneOutputWithContext(ctx context.Context) SdwanServicePriorityZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServicePriorityZoneOutput)
}

// SdwanServicePriorityZoneArrayInput is an input type that accepts SdwanServicePriorityZoneArray and SdwanServicePriorityZoneArrayOutput values.
// You can construct a concrete instance of `SdwanServicePriorityZoneArrayInput` via:
//
//	SdwanServicePriorityZoneArray{ SdwanServicePriorityZoneArgs{...} }
type SdwanServicePriorityZoneArrayInput interface {
	pulumi.Input

	ToSdwanServicePriorityZoneArrayOutput() SdwanServicePriorityZoneArrayOutput
	ToSdwanServicePriorityZoneArrayOutputWithContext(context.Context) SdwanServicePriorityZoneArrayOutput
}

type SdwanServicePriorityZoneArray []SdwanServicePriorityZoneInput

func (SdwanServicePriorityZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServicePriorityZone)(nil)).Elem()
}

func (i SdwanServicePriorityZoneArray) ToSdwanServicePriorityZoneArrayOutput() SdwanServicePriorityZoneArrayOutput {
	return i.ToSdwanServicePriorityZoneArrayOutputWithContext(context.Background())
}

func (i SdwanServicePriorityZoneArray) ToSdwanServicePriorityZoneArrayOutputWithContext(ctx context.Context) SdwanServicePriorityZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServicePriorityZoneArrayOutput)
}

type SdwanServicePriorityZoneOutput struct{ *pulumi.OutputState }

func (SdwanServicePriorityZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServicePriorityZone)(nil)).Elem()
}

func (o SdwanServicePriorityZoneOutput) ToSdwanServicePriorityZoneOutput() SdwanServicePriorityZoneOutput {
	return o
}

func (o SdwanServicePriorityZoneOutput) ToSdwanServicePriorityZoneOutputWithContext(ctx context.Context) SdwanServicePriorityZoneOutput {
	return o
}

// Priority zone name.
func (o SdwanServicePriorityZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServicePriorityZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServicePriorityZoneArrayOutput struct{ *pulumi.OutputState }

func (SdwanServicePriorityZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServicePriorityZone)(nil)).Elem()
}

func (o SdwanServicePriorityZoneArrayOutput) ToSdwanServicePriorityZoneArrayOutput() SdwanServicePriorityZoneArrayOutput {
	return o
}

func (o SdwanServicePriorityZoneArrayOutput) ToSdwanServicePriorityZoneArrayOutputWithContext(ctx context.Context) SdwanServicePriorityZoneArrayOutput {
	return o
}

func (o SdwanServicePriorityZoneArrayOutput) Index(i pulumi.IntInput) SdwanServicePriorityZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServicePriorityZone {
		return vs[0].([]SdwanServicePriorityZone)[vs[1].(int)]
	}).(SdwanServicePriorityZoneOutput)
}

type SdwanServiceSla struct {
	// SD-WAN health-check.
	HealthCheck *string `pulumi:"healthCheck"`
	// SLA ID.
	Id *int `pulumi:"id"`
}

// SdwanServiceSlaInput is an input type that accepts SdwanServiceSlaArgs and SdwanServiceSlaOutput values.
// You can construct a concrete instance of `SdwanServiceSlaInput` via:
//
//	SdwanServiceSlaArgs{...}
type SdwanServiceSlaInput interface {
	pulumi.Input

	ToSdwanServiceSlaOutput() SdwanServiceSlaOutput
	ToSdwanServiceSlaOutputWithContext(context.Context) SdwanServiceSlaOutput
}

type SdwanServiceSlaArgs struct {
	// SD-WAN health-check.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// SLA ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SdwanServiceSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceSla)(nil)).Elem()
}

func (i SdwanServiceSlaArgs) ToSdwanServiceSlaOutput() SdwanServiceSlaOutput {
	return i.ToSdwanServiceSlaOutputWithContext(context.Background())
}

func (i SdwanServiceSlaArgs) ToSdwanServiceSlaOutputWithContext(ctx context.Context) SdwanServiceSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceSlaOutput)
}

// SdwanServiceSlaArrayInput is an input type that accepts SdwanServiceSlaArray and SdwanServiceSlaArrayOutput values.
// You can construct a concrete instance of `SdwanServiceSlaArrayInput` via:
//
//	SdwanServiceSlaArray{ SdwanServiceSlaArgs{...} }
type SdwanServiceSlaArrayInput interface {
	pulumi.Input

	ToSdwanServiceSlaArrayOutput() SdwanServiceSlaArrayOutput
	ToSdwanServiceSlaArrayOutputWithContext(context.Context) SdwanServiceSlaArrayOutput
}

type SdwanServiceSlaArray []SdwanServiceSlaInput

func (SdwanServiceSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceSla)(nil)).Elem()
}

func (i SdwanServiceSlaArray) ToSdwanServiceSlaArrayOutput() SdwanServiceSlaArrayOutput {
	return i.ToSdwanServiceSlaArrayOutputWithContext(context.Background())
}

func (i SdwanServiceSlaArray) ToSdwanServiceSlaArrayOutputWithContext(ctx context.Context) SdwanServiceSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceSlaArrayOutput)
}

type SdwanServiceSlaOutput struct{ *pulumi.OutputState }

func (SdwanServiceSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceSla)(nil)).Elem()
}

func (o SdwanServiceSlaOutput) ToSdwanServiceSlaOutput() SdwanServiceSlaOutput {
	return o
}

func (o SdwanServiceSlaOutput) ToSdwanServiceSlaOutputWithContext(ctx context.Context) SdwanServiceSlaOutput {
	return o
}

// SD-WAN health-check.
func (o SdwanServiceSlaOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceSla) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// SLA ID.
func (o SdwanServiceSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanServiceSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SdwanServiceSlaArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceSla)(nil)).Elem()
}

func (o SdwanServiceSlaArrayOutput) ToSdwanServiceSlaArrayOutput() SdwanServiceSlaArrayOutput {
	return o
}

func (o SdwanServiceSlaArrayOutput) ToSdwanServiceSlaArrayOutputWithContext(ctx context.Context) SdwanServiceSlaArrayOutput {
	return o
}

func (o SdwanServiceSlaArrayOutput) Index(i pulumi.IntInput) SdwanServiceSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceSla {
		return vs[0].([]SdwanServiceSla)[vs[1].(int)]
	}).(SdwanServiceSlaOutput)
}

type SdwanServiceSrc6 struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// SdwanServiceSrc6Input is an input type that accepts SdwanServiceSrc6Args and SdwanServiceSrc6Output values.
// You can construct a concrete instance of `SdwanServiceSrc6Input` via:
//
//	SdwanServiceSrc6Args{...}
type SdwanServiceSrc6Input interface {
	pulumi.Input

	ToSdwanServiceSrc6Output() SdwanServiceSrc6Output
	ToSdwanServiceSrc6OutputWithContext(context.Context) SdwanServiceSrc6Output
}

type SdwanServiceSrc6Args struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceSrc6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceSrc6)(nil)).Elem()
}

func (i SdwanServiceSrc6Args) ToSdwanServiceSrc6Output() SdwanServiceSrc6Output {
	return i.ToSdwanServiceSrc6OutputWithContext(context.Background())
}

func (i SdwanServiceSrc6Args) ToSdwanServiceSrc6OutputWithContext(ctx context.Context) SdwanServiceSrc6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceSrc6Output)
}

// SdwanServiceSrc6ArrayInput is an input type that accepts SdwanServiceSrc6Array and SdwanServiceSrc6ArrayOutput values.
// You can construct a concrete instance of `SdwanServiceSrc6ArrayInput` via:
//
//	SdwanServiceSrc6Array{ SdwanServiceSrc6Args{...} }
type SdwanServiceSrc6ArrayInput interface {
	pulumi.Input

	ToSdwanServiceSrc6ArrayOutput() SdwanServiceSrc6ArrayOutput
	ToSdwanServiceSrc6ArrayOutputWithContext(context.Context) SdwanServiceSrc6ArrayOutput
}

type SdwanServiceSrc6Array []SdwanServiceSrc6Input

func (SdwanServiceSrc6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceSrc6)(nil)).Elem()
}

func (i SdwanServiceSrc6Array) ToSdwanServiceSrc6ArrayOutput() SdwanServiceSrc6ArrayOutput {
	return i.ToSdwanServiceSrc6ArrayOutputWithContext(context.Background())
}

func (i SdwanServiceSrc6Array) ToSdwanServiceSrc6ArrayOutputWithContext(ctx context.Context) SdwanServiceSrc6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceSrc6ArrayOutput)
}

type SdwanServiceSrc6Output struct{ *pulumi.OutputState }

func (SdwanServiceSrc6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceSrc6)(nil)).Elem()
}

func (o SdwanServiceSrc6Output) ToSdwanServiceSrc6Output() SdwanServiceSrc6Output {
	return o
}

func (o SdwanServiceSrc6Output) ToSdwanServiceSrc6OutputWithContext(ctx context.Context) SdwanServiceSrc6Output {
	return o
}

// Address or address group name.
func (o SdwanServiceSrc6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceSrc6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceSrc6ArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceSrc6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceSrc6)(nil)).Elem()
}

func (o SdwanServiceSrc6ArrayOutput) ToSdwanServiceSrc6ArrayOutput() SdwanServiceSrc6ArrayOutput {
	return o
}

func (o SdwanServiceSrc6ArrayOutput) ToSdwanServiceSrc6ArrayOutputWithContext(ctx context.Context) SdwanServiceSrc6ArrayOutput {
	return o
}

func (o SdwanServiceSrc6ArrayOutput) Index(i pulumi.IntInput) SdwanServiceSrc6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceSrc6 {
		return vs[0].([]SdwanServiceSrc6)[vs[1].(int)]
	}).(SdwanServiceSrc6Output)
}

type SdwanServiceSrc struct {
	// Address6 or address6 group name.
	Name *string `pulumi:"name"`
}

// SdwanServiceSrcInput is an input type that accepts SdwanServiceSrcArgs and SdwanServiceSrcOutput values.
// You can construct a concrete instance of `SdwanServiceSrcInput` via:
//
//	SdwanServiceSrcArgs{...}
type SdwanServiceSrcInput interface {
	pulumi.Input

	ToSdwanServiceSrcOutput() SdwanServiceSrcOutput
	ToSdwanServiceSrcOutputWithContext(context.Context) SdwanServiceSrcOutput
}

type SdwanServiceSrcArgs struct {
	// Address6 or address6 group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceSrcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceSrc)(nil)).Elem()
}

func (i SdwanServiceSrcArgs) ToSdwanServiceSrcOutput() SdwanServiceSrcOutput {
	return i.ToSdwanServiceSrcOutputWithContext(context.Background())
}

func (i SdwanServiceSrcArgs) ToSdwanServiceSrcOutputWithContext(ctx context.Context) SdwanServiceSrcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceSrcOutput)
}

// SdwanServiceSrcArrayInput is an input type that accepts SdwanServiceSrcArray and SdwanServiceSrcArrayOutput values.
// You can construct a concrete instance of `SdwanServiceSrcArrayInput` via:
//
//	SdwanServiceSrcArray{ SdwanServiceSrcArgs{...} }
type SdwanServiceSrcArrayInput interface {
	pulumi.Input

	ToSdwanServiceSrcArrayOutput() SdwanServiceSrcArrayOutput
	ToSdwanServiceSrcArrayOutputWithContext(context.Context) SdwanServiceSrcArrayOutput
}

type SdwanServiceSrcArray []SdwanServiceSrcInput

func (SdwanServiceSrcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceSrc)(nil)).Elem()
}

func (i SdwanServiceSrcArray) ToSdwanServiceSrcArrayOutput() SdwanServiceSrcArrayOutput {
	return i.ToSdwanServiceSrcArrayOutputWithContext(context.Background())
}

func (i SdwanServiceSrcArray) ToSdwanServiceSrcArrayOutputWithContext(ctx context.Context) SdwanServiceSrcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceSrcArrayOutput)
}

type SdwanServiceSrcOutput struct{ *pulumi.OutputState }

func (SdwanServiceSrcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceSrc)(nil)).Elem()
}

func (o SdwanServiceSrcOutput) ToSdwanServiceSrcOutput() SdwanServiceSrcOutput {
	return o
}

func (o SdwanServiceSrcOutput) ToSdwanServiceSrcOutputWithContext(ctx context.Context) SdwanServiceSrcOutput {
	return o
}

// Address6 or address6 group name.
func (o SdwanServiceSrcOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceSrc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceSrcArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceSrcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceSrc)(nil)).Elem()
}

func (o SdwanServiceSrcArrayOutput) ToSdwanServiceSrcArrayOutput() SdwanServiceSrcArrayOutput {
	return o
}

func (o SdwanServiceSrcArrayOutput) ToSdwanServiceSrcArrayOutputWithContext(ctx context.Context) SdwanServiceSrcArrayOutput {
	return o
}

func (o SdwanServiceSrcArrayOutput) Index(i pulumi.IntInput) SdwanServiceSrcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceSrc {
		return vs[0].([]SdwanServiceSrc)[vs[1].(int)]
	}).(SdwanServiceSrcOutput)
}

type SdwanServiceUser struct {
	// User name.
	Name *string `pulumi:"name"`
}

// SdwanServiceUserInput is an input type that accepts SdwanServiceUserArgs and SdwanServiceUserOutput values.
// You can construct a concrete instance of `SdwanServiceUserInput` via:
//
//	SdwanServiceUserArgs{...}
type SdwanServiceUserInput interface {
	pulumi.Input

	ToSdwanServiceUserOutput() SdwanServiceUserOutput
	ToSdwanServiceUserOutputWithContext(context.Context) SdwanServiceUserOutput
}

type SdwanServiceUserArgs struct {
	// User name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SdwanServiceUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceUser)(nil)).Elem()
}

func (i SdwanServiceUserArgs) ToSdwanServiceUserOutput() SdwanServiceUserOutput {
	return i.ToSdwanServiceUserOutputWithContext(context.Background())
}

func (i SdwanServiceUserArgs) ToSdwanServiceUserOutputWithContext(ctx context.Context) SdwanServiceUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceUserOutput)
}

// SdwanServiceUserArrayInput is an input type that accepts SdwanServiceUserArray and SdwanServiceUserArrayOutput values.
// You can construct a concrete instance of `SdwanServiceUserArrayInput` via:
//
//	SdwanServiceUserArray{ SdwanServiceUserArgs{...} }
type SdwanServiceUserArrayInput interface {
	pulumi.Input

	ToSdwanServiceUserArrayOutput() SdwanServiceUserArrayOutput
	ToSdwanServiceUserArrayOutputWithContext(context.Context) SdwanServiceUserArrayOutput
}

type SdwanServiceUserArray []SdwanServiceUserInput

func (SdwanServiceUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceUser)(nil)).Elem()
}

func (i SdwanServiceUserArray) ToSdwanServiceUserArrayOutput() SdwanServiceUserArrayOutput {
	return i.ToSdwanServiceUserArrayOutputWithContext(context.Background())
}

func (i SdwanServiceUserArray) ToSdwanServiceUserArrayOutputWithContext(ctx context.Context) SdwanServiceUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanServiceUserArrayOutput)
}

type SdwanServiceUserOutput struct{ *pulumi.OutputState }

func (SdwanServiceUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanServiceUser)(nil)).Elem()
}

func (o SdwanServiceUserOutput) ToSdwanServiceUserOutput() SdwanServiceUserOutput {
	return o
}

func (o SdwanServiceUserOutput) ToSdwanServiceUserOutputWithContext(ctx context.Context) SdwanServiceUserOutput {
	return o
}

// User name.
func (o SdwanServiceUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanServiceUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SdwanServiceUserArrayOutput struct{ *pulumi.OutputState }

func (SdwanServiceUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanServiceUser)(nil)).Elem()
}

func (o SdwanServiceUserArrayOutput) ToSdwanServiceUserArrayOutput() SdwanServiceUserArrayOutput {
	return o
}

func (o SdwanServiceUserArrayOutput) ToSdwanServiceUserArrayOutputWithContext(ctx context.Context) SdwanServiceUserArrayOutput {
	return o
}

func (o SdwanServiceUserArrayOutput) Index(i pulumi.IntInput) SdwanServiceUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanServiceUser {
		return vs[0].([]SdwanServiceUser)[vs[1].(int)]
	}).(SdwanServiceUserOutput)
}

type SdwanZone struct {
	// Health check for ADVPN local overlay link quality.
	AdvpnHealthCheck *string `pulumi:"advpnHealthCheck"`
	// Enable/disable selection of ADVPN based on SDWAN information. Valid values: `enable`, `disable`.
	AdvpnSelect *string `pulumi:"advpnSelect"`
	// Minimum number of members which meet SLA when the neighbor is preferred.
	MinimumSlaMeetMembers *int `pulumi:"minimumSlaMeetMembers"`
	// Zone name.
	Name *string `pulumi:"name"`
	// Method of selecting member if more than one meets the SLA.
	ServiceSlaTieBreak *string `pulumi:"serviceSlaTieBreak"`
}

// SdwanZoneInput is an input type that accepts SdwanZoneArgs and SdwanZoneOutput values.
// You can construct a concrete instance of `SdwanZoneInput` via:
//
//	SdwanZoneArgs{...}
type SdwanZoneInput interface {
	pulumi.Input

	ToSdwanZoneOutput() SdwanZoneOutput
	ToSdwanZoneOutputWithContext(context.Context) SdwanZoneOutput
}

type SdwanZoneArgs struct {
	// Health check for ADVPN local overlay link quality.
	AdvpnHealthCheck pulumi.StringPtrInput `pulumi:"advpnHealthCheck"`
	// Enable/disable selection of ADVPN based on SDWAN information. Valid values: `enable`, `disable`.
	AdvpnSelect pulumi.StringPtrInput `pulumi:"advpnSelect"`
	// Minimum number of members which meet SLA when the neighbor is preferred.
	MinimumSlaMeetMembers pulumi.IntPtrInput `pulumi:"minimumSlaMeetMembers"`
	// Zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Method of selecting member if more than one meets the SLA.
	ServiceSlaTieBreak pulumi.StringPtrInput `pulumi:"serviceSlaTieBreak"`
}

func (SdwanZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanZone)(nil)).Elem()
}

func (i SdwanZoneArgs) ToSdwanZoneOutput() SdwanZoneOutput {
	return i.ToSdwanZoneOutputWithContext(context.Background())
}

func (i SdwanZoneArgs) ToSdwanZoneOutputWithContext(ctx context.Context) SdwanZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanZoneOutput)
}

// SdwanZoneArrayInput is an input type that accepts SdwanZoneArray and SdwanZoneArrayOutput values.
// You can construct a concrete instance of `SdwanZoneArrayInput` via:
//
//	SdwanZoneArray{ SdwanZoneArgs{...} }
type SdwanZoneArrayInput interface {
	pulumi.Input

	ToSdwanZoneArrayOutput() SdwanZoneArrayOutput
	ToSdwanZoneArrayOutputWithContext(context.Context) SdwanZoneArrayOutput
}

type SdwanZoneArray []SdwanZoneInput

func (SdwanZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanZone)(nil)).Elem()
}

func (i SdwanZoneArray) ToSdwanZoneArrayOutput() SdwanZoneArrayOutput {
	return i.ToSdwanZoneArrayOutputWithContext(context.Background())
}

func (i SdwanZoneArray) ToSdwanZoneArrayOutputWithContext(ctx context.Context) SdwanZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdwanZoneArrayOutput)
}

type SdwanZoneOutput struct{ *pulumi.OutputState }

func (SdwanZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdwanZone)(nil)).Elem()
}

func (o SdwanZoneOutput) ToSdwanZoneOutput() SdwanZoneOutput {
	return o
}

func (o SdwanZoneOutput) ToSdwanZoneOutputWithContext(ctx context.Context) SdwanZoneOutput {
	return o
}

// Health check for ADVPN local overlay link quality.
func (o SdwanZoneOutput) AdvpnHealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanZone) *string { return v.AdvpnHealthCheck }).(pulumi.StringPtrOutput)
}

// Enable/disable selection of ADVPN based on SDWAN information. Valid values: `enable`, `disable`.
func (o SdwanZoneOutput) AdvpnSelect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanZone) *string { return v.AdvpnSelect }).(pulumi.StringPtrOutput)
}

// Minimum number of members which meet SLA when the neighbor is preferred.
func (o SdwanZoneOutput) MinimumSlaMeetMembers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SdwanZone) *int { return v.MinimumSlaMeetMembers }).(pulumi.IntPtrOutput)
}

// Zone name.
func (o SdwanZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Method of selecting member if more than one meets the SLA.
func (o SdwanZoneOutput) ServiceSlaTieBreak() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SdwanZone) *string { return v.ServiceSlaTieBreak }).(pulumi.StringPtrOutput)
}

type SdwanZoneArrayOutput struct{ *pulumi.OutputState }

func (SdwanZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SdwanZone)(nil)).Elem()
}

func (o SdwanZoneArrayOutput) ToSdwanZoneArrayOutput() SdwanZoneArrayOutput {
	return o
}

func (o SdwanZoneArrayOutput) ToSdwanZoneArrayOutputWithContext(ctx context.Context) SdwanZoneArrayOutput {
	return o
}

func (o SdwanZoneArrayOutput) Index(i pulumi.IntInput) SdwanZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SdwanZone {
		return vs[0].([]SdwanZone)[vs[1].(int)]
	}).(SdwanZoneOutput)
}

type SessionttlPort struct {
	// End port number.
	EndPort *int `pulumi:"endPort"`
	// Table entry ID.
	Id *int `pulumi:"id"`
	// Protocol (0 - 255).
	Protocol *int `pulumi:"protocol"`
	// Refresh direction: Both, outgoing, incoming Valid values: `both`, `outgoing`, `incoming`.
	RefreshDirection *string `pulumi:"refreshDirection"`
	// Start port number.
	StartPort *int `pulumi:"startPort"`
	// Session timeout (TTL).
	Timeout *string `pulumi:"timeout"`
}

// SessionttlPortInput is an input type that accepts SessionttlPortArgs and SessionttlPortOutput values.
// You can construct a concrete instance of `SessionttlPortInput` via:
//
//	SessionttlPortArgs{...}
type SessionttlPortInput interface {
	pulumi.Input

	ToSessionttlPortOutput() SessionttlPortOutput
	ToSessionttlPortOutputWithContext(context.Context) SessionttlPortOutput
}

type SessionttlPortArgs struct {
	// End port number.
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Table entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Protocol (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
	// Refresh direction: Both, outgoing, incoming Valid values: `both`, `outgoing`, `incoming`.
	RefreshDirection pulumi.StringPtrInput `pulumi:"refreshDirection"`
	// Start port number.
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
	// Session timeout (TTL).
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (SessionttlPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionttlPort)(nil)).Elem()
}

func (i SessionttlPortArgs) ToSessionttlPortOutput() SessionttlPortOutput {
	return i.ToSessionttlPortOutputWithContext(context.Background())
}

func (i SessionttlPortArgs) ToSessionttlPortOutputWithContext(ctx context.Context) SessionttlPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionttlPortOutput)
}

// SessionttlPortArrayInput is an input type that accepts SessionttlPortArray and SessionttlPortArrayOutput values.
// You can construct a concrete instance of `SessionttlPortArrayInput` via:
//
//	SessionttlPortArray{ SessionttlPortArgs{...} }
type SessionttlPortArrayInput interface {
	pulumi.Input

	ToSessionttlPortArrayOutput() SessionttlPortArrayOutput
	ToSessionttlPortArrayOutputWithContext(context.Context) SessionttlPortArrayOutput
}

type SessionttlPortArray []SessionttlPortInput

func (SessionttlPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SessionttlPort)(nil)).Elem()
}

func (i SessionttlPortArray) ToSessionttlPortArrayOutput() SessionttlPortArrayOutput {
	return i.ToSessionttlPortArrayOutputWithContext(context.Background())
}

func (i SessionttlPortArray) ToSessionttlPortArrayOutputWithContext(ctx context.Context) SessionttlPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionttlPortArrayOutput)
}

type SessionttlPortOutput struct{ *pulumi.OutputState }

func (SessionttlPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionttlPort)(nil)).Elem()
}

func (o SessionttlPortOutput) ToSessionttlPortOutput() SessionttlPortOutput {
	return o
}

func (o SessionttlPortOutput) ToSessionttlPortOutputWithContext(ctx context.Context) SessionttlPortOutput {
	return o
}

// End port number.
func (o SessionttlPortOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SessionttlPort) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Table entry ID.
func (o SessionttlPortOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SessionttlPort) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Protocol (0 - 255).
func (o SessionttlPortOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SessionttlPort) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

// Refresh direction: Both, outgoing, incoming Valid values: `both`, `outgoing`, `incoming`.
func (o SessionttlPortOutput) RefreshDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionttlPort) *string { return v.RefreshDirection }).(pulumi.StringPtrOutput)
}

// Start port number.
func (o SessionttlPortOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SessionttlPort) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

// Session timeout (TTL).
func (o SessionttlPortOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionttlPort) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type SessionttlPortArrayOutput struct{ *pulumi.OutputState }

func (SessionttlPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SessionttlPort)(nil)).Elem()
}

func (o SessionttlPortArrayOutput) ToSessionttlPortArrayOutput() SessionttlPortArrayOutput {
	return o
}

func (o SessionttlPortArrayOutput) ToSessionttlPortArrayOutputWithContext(ctx context.Context) SessionttlPortArrayOutput {
	return o
}

func (o SessionttlPortArrayOutput) Index(i pulumi.IntInput) SessionttlPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SessionttlPort {
		return vs[0].([]SessionttlPort)[vs[1].(int)]
	}).(SessionttlPortOutput)
}

type SettingsGuiDefaultPolicyColumn struct {
	// Select column name.
	Name *string `pulumi:"name"`
}

// SettingsGuiDefaultPolicyColumnInput is an input type that accepts SettingsGuiDefaultPolicyColumnArgs and SettingsGuiDefaultPolicyColumnOutput values.
// You can construct a concrete instance of `SettingsGuiDefaultPolicyColumnInput` via:
//
//	SettingsGuiDefaultPolicyColumnArgs{...}
type SettingsGuiDefaultPolicyColumnInput interface {
	pulumi.Input

	ToSettingsGuiDefaultPolicyColumnOutput() SettingsGuiDefaultPolicyColumnOutput
	ToSettingsGuiDefaultPolicyColumnOutputWithContext(context.Context) SettingsGuiDefaultPolicyColumnOutput
}

type SettingsGuiDefaultPolicyColumnArgs struct {
	// Select column name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SettingsGuiDefaultPolicyColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (i SettingsGuiDefaultPolicyColumnArgs) ToSettingsGuiDefaultPolicyColumnOutput() SettingsGuiDefaultPolicyColumnOutput {
	return i.ToSettingsGuiDefaultPolicyColumnOutputWithContext(context.Background())
}

func (i SettingsGuiDefaultPolicyColumnArgs) ToSettingsGuiDefaultPolicyColumnOutputWithContext(ctx context.Context) SettingsGuiDefaultPolicyColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsGuiDefaultPolicyColumnOutput)
}

// SettingsGuiDefaultPolicyColumnArrayInput is an input type that accepts SettingsGuiDefaultPolicyColumnArray and SettingsGuiDefaultPolicyColumnArrayOutput values.
// You can construct a concrete instance of `SettingsGuiDefaultPolicyColumnArrayInput` via:
//
//	SettingsGuiDefaultPolicyColumnArray{ SettingsGuiDefaultPolicyColumnArgs{...} }
type SettingsGuiDefaultPolicyColumnArrayInput interface {
	pulumi.Input

	ToSettingsGuiDefaultPolicyColumnArrayOutput() SettingsGuiDefaultPolicyColumnArrayOutput
	ToSettingsGuiDefaultPolicyColumnArrayOutputWithContext(context.Context) SettingsGuiDefaultPolicyColumnArrayOutput
}

type SettingsGuiDefaultPolicyColumnArray []SettingsGuiDefaultPolicyColumnInput

func (SettingsGuiDefaultPolicyColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (i SettingsGuiDefaultPolicyColumnArray) ToSettingsGuiDefaultPolicyColumnArrayOutput() SettingsGuiDefaultPolicyColumnArrayOutput {
	return i.ToSettingsGuiDefaultPolicyColumnArrayOutputWithContext(context.Background())
}

func (i SettingsGuiDefaultPolicyColumnArray) ToSettingsGuiDefaultPolicyColumnArrayOutputWithContext(ctx context.Context) SettingsGuiDefaultPolicyColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsGuiDefaultPolicyColumnArrayOutput)
}

type SettingsGuiDefaultPolicyColumnOutput struct{ *pulumi.OutputState }

func (SettingsGuiDefaultPolicyColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (o SettingsGuiDefaultPolicyColumnOutput) ToSettingsGuiDefaultPolicyColumnOutput() SettingsGuiDefaultPolicyColumnOutput {
	return o
}

func (o SettingsGuiDefaultPolicyColumnOutput) ToSettingsGuiDefaultPolicyColumnOutputWithContext(ctx context.Context) SettingsGuiDefaultPolicyColumnOutput {
	return o
}

// Select column name.
func (o SettingsGuiDefaultPolicyColumnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsGuiDefaultPolicyColumn) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SettingsGuiDefaultPolicyColumnArrayOutput struct{ *pulumi.OutputState }

func (SettingsGuiDefaultPolicyColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (o SettingsGuiDefaultPolicyColumnArrayOutput) ToSettingsGuiDefaultPolicyColumnArrayOutput() SettingsGuiDefaultPolicyColumnArrayOutput {
	return o
}

func (o SettingsGuiDefaultPolicyColumnArrayOutput) ToSettingsGuiDefaultPolicyColumnArrayOutputWithContext(ctx context.Context) SettingsGuiDefaultPolicyColumnArrayOutput {
	return o
}

func (o SettingsGuiDefaultPolicyColumnArrayOutput) Index(i pulumi.IntInput) SettingsGuiDefaultPolicyColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingsGuiDefaultPolicyColumn {
		return vs[0].([]SettingsGuiDefaultPolicyColumn)[vs[1].(int)]
	}).(SettingsGuiDefaultPolicyColumnOutput)
}

type SflowCollector struct {
	// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
	CollectorIp *string `pulumi:"collectorIp"`
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort *int `pulumi:"collectorPort"`
	// ID.
	Id *int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for sFlow agent.
	SourceIp *string `pulumi:"sourceIp"`
}

// SflowCollectorInput is an input type that accepts SflowCollectorArgs and SflowCollectorOutput values.
// You can construct a concrete instance of `SflowCollectorInput` via:
//
//	SflowCollectorArgs{...}
type SflowCollectorInput interface {
	pulumi.Input

	ToSflowCollectorOutput() SflowCollectorOutput
	ToSflowCollectorOutputWithContext(context.Context) SflowCollectorOutput
}

type SflowCollectorArgs struct {
	// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
	CollectorIp pulumi.StringPtrInput `pulumi:"collectorIp"`
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort pulumi.IntPtrInput `pulumi:"collectorPort"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput `pulumi:"interfaceSelectMethod"`
	// Source IP address for sFlow agent.
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
}

func (SflowCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SflowCollector)(nil)).Elem()
}

func (i SflowCollectorArgs) ToSflowCollectorOutput() SflowCollectorOutput {
	return i.ToSflowCollectorOutputWithContext(context.Background())
}

func (i SflowCollectorArgs) ToSflowCollectorOutputWithContext(ctx context.Context) SflowCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SflowCollectorOutput)
}

// SflowCollectorArrayInput is an input type that accepts SflowCollectorArray and SflowCollectorArrayOutput values.
// You can construct a concrete instance of `SflowCollectorArrayInput` via:
//
//	SflowCollectorArray{ SflowCollectorArgs{...} }
type SflowCollectorArrayInput interface {
	pulumi.Input

	ToSflowCollectorArrayOutput() SflowCollectorArrayOutput
	ToSflowCollectorArrayOutputWithContext(context.Context) SflowCollectorArrayOutput
}

type SflowCollectorArray []SflowCollectorInput

func (SflowCollectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SflowCollector)(nil)).Elem()
}

func (i SflowCollectorArray) ToSflowCollectorArrayOutput() SflowCollectorArrayOutput {
	return i.ToSflowCollectorArrayOutputWithContext(context.Background())
}

func (i SflowCollectorArray) ToSflowCollectorArrayOutputWithContext(ctx context.Context) SflowCollectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SflowCollectorArrayOutput)
}

type SflowCollectorOutput struct{ *pulumi.OutputState }

func (SflowCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SflowCollector)(nil)).Elem()
}

func (o SflowCollectorOutput) ToSflowCollectorOutput() SflowCollectorOutput {
	return o
}

func (o SflowCollectorOutput) ToSflowCollectorOutputWithContext(ctx context.Context) SflowCollectorOutput {
	return o
}

// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
func (o SflowCollectorOutput) CollectorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SflowCollector) *string { return v.CollectorIp }).(pulumi.StringPtrOutput)
}

// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
func (o SflowCollectorOutput) CollectorPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SflowCollector) *int { return v.CollectorPort }).(pulumi.IntPtrOutput)
}

// ID.
func (o SflowCollectorOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SflowCollector) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Specify outgoing interface to reach server.
func (o SflowCollectorOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SflowCollector) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o SflowCollectorOutput) InterfaceSelectMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SflowCollector) *string { return v.InterfaceSelectMethod }).(pulumi.StringPtrOutput)
}

// Source IP address for sFlow agent.
func (o SflowCollectorOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SflowCollector) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

type SflowCollectorArrayOutput struct{ *pulumi.OutputState }

func (SflowCollectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SflowCollector)(nil)).Elem()
}

func (o SflowCollectorArrayOutput) ToSflowCollectorArrayOutput() SflowCollectorArrayOutput {
	return o
}

func (o SflowCollectorArrayOutput) ToSflowCollectorArrayOutputWithContext(ctx context.Context) SflowCollectorArrayOutput {
	return o
}

func (o SflowCollectorArrayOutput) Index(i pulumi.IntInput) SflowCollectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SflowCollector {
		return vs[0].([]SflowCollector)[vs[1].(int)]
	}).(SflowCollectorOutput)
}

type SpeedtestscheduleSchedule struct {
	// Name of a firewall recurring schedule.
	Name *string `pulumi:"name"`
}

// SpeedtestscheduleScheduleInput is an input type that accepts SpeedtestscheduleScheduleArgs and SpeedtestscheduleScheduleOutput values.
// You can construct a concrete instance of `SpeedtestscheduleScheduleInput` via:
//
//	SpeedtestscheduleScheduleArgs{...}
type SpeedtestscheduleScheduleInput interface {
	pulumi.Input

	ToSpeedtestscheduleScheduleOutput() SpeedtestscheduleScheduleOutput
	ToSpeedtestscheduleScheduleOutputWithContext(context.Context) SpeedtestscheduleScheduleOutput
}

type SpeedtestscheduleScheduleArgs struct {
	// Name of a firewall recurring schedule.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SpeedtestscheduleScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpeedtestscheduleSchedule)(nil)).Elem()
}

func (i SpeedtestscheduleScheduleArgs) ToSpeedtestscheduleScheduleOutput() SpeedtestscheduleScheduleOutput {
	return i.ToSpeedtestscheduleScheduleOutputWithContext(context.Background())
}

func (i SpeedtestscheduleScheduleArgs) ToSpeedtestscheduleScheduleOutputWithContext(ctx context.Context) SpeedtestscheduleScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpeedtestscheduleScheduleOutput)
}

// SpeedtestscheduleScheduleArrayInput is an input type that accepts SpeedtestscheduleScheduleArray and SpeedtestscheduleScheduleArrayOutput values.
// You can construct a concrete instance of `SpeedtestscheduleScheduleArrayInput` via:
//
//	SpeedtestscheduleScheduleArray{ SpeedtestscheduleScheduleArgs{...} }
type SpeedtestscheduleScheduleArrayInput interface {
	pulumi.Input

	ToSpeedtestscheduleScheduleArrayOutput() SpeedtestscheduleScheduleArrayOutput
	ToSpeedtestscheduleScheduleArrayOutputWithContext(context.Context) SpeedtestscheduleScheduleArrayOutput
}

type SpeedtestscheduleScheduleArray []SpeedtestscheduleScheduleInput

func (SpeedtestscheduleScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpeedtestscheduleSchedule)(nil)).Elem()
}

func (i SpeedtestscheduleScheduleArray) ToSpeedtestscheduleScheduleArrayOutput() SpeedtestscheduleScheduleArrayOutput {
	return i.ToSpeedtestscheduleScheduleArrayOutputWithContext(context.Background())
}

func (i SpeedtestscheduleScheduleArray) ToSpeedtestscheduleScheduleArrayOutputWithContext(ctx context.Context) SpeedtestscheduleScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpeedtestscheduleScheduleArrayOutput)
}

type SpeedtestscheduleScheduleOutput struct{ *pulumi.OutputState }

func (SpeedtestscheduleScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpeedtestscheduleSchedule)(nil)).Elem()
}

func (o SpeedtestscheduleScheduleOutput) ToSpeedtestscheduleScheduleOutput() SpeedtestscheduleScheduleOutput {
	return o
}

func (o SpeedtestscheduleScheduleOutput) ToSpeedtestscheduleScheduleOutputWithContext(ctx context.Context) SpeedtestscheduleScheduleOutput {
	return o
}

// Name of a firewall recurring schedule.
func (o SpeedtestscheduleScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpeedtestscheduleSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SpeedtestscheduleScheduleArrayOutput struct{ *pulumi.OutputState }

func (SpeedtestscheduleScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpeedtestscheduleSchedule)(nil)).Elem()
}

func (o SpeedtestscheduleScheduleArrayOutput) ToSpeedtestscheduleScheduleArrayOutput() SpeedtestscheduleScheduleArrayOutput {
	return o
}

func (o SpeedtestscheduleScheduleArrayOutput) ToSpeedtestscheduleScheduleArrayOutputWithContext(ctx context.Context) SpeedtestscheduleScheduleArrayOutput {
	return o
}

func (o SpeedtestscheduleScheduleArrayOutput) Index(i pulumi.IntInput) SpeedtestscheduleScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpeedtestscheduleSchedule {
		return vs[0].([]SpeedtestscheduleSchedule)[vs[1].(int)]
	}).(SpeedtestscheduleScheduleOutput)
}

type SpeedtestserverHost struct {
	// Speed test host distance.
	Distance *int `pulumi:"distance"`
	// Server host ID.
	Id *int `pulumi:"id"`
	// Server host IPv4 address.
	Ip *string `pulumi:"ip"`
	// Speed test host latitude.
	Latitude *string `pulumi:"latitude"`
	// Speed test host longitude.
	Longitude *string `pulumi:"longitude"`
	// Speed test host password.
	Password *string `pulumi:"password"`
	// Server host port number to communicate with client.
	Port *int `pulumi:"port"`
	// Speed test host user name.
	User *string `pulumi:"user"`
}

// SpeedtestserverHostInput is an input type that accepts SpeedtestserverHostArgs and SpeedtestserverHostOutput values.
// You can construct a concrete instance of `SpeedtestserverHostInput` via:
//
//	SpeedtestserverHostArgs{...}
type SpeedtestserverHostInput interface {
	pulumi.Input

	ToSpeedtestserverHostOutput() SpeedtestserverHostOutput
	ToSpeedtestserverHostOutputWithContext(context.Context) SpeedtestserverHostOutput
}

type SpeedtestserverHostArgs struct {
	// Speed test host distance.
	Distance pulumi.IntPtrInput `pulumi:"distance"`
	// Server host ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Server host IPv4 address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Speed test host latitude.
	Latitude pulumi.StringPtrInput `pulumi:"latitude"`
	// Speed test host longitude.
	Longitude pulumi.StringPtrInput `pulumi:"longitude"`
	// Speed test host password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Server host port number to communicate with client.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Speed test host user name.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (SpeedtestserverHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpeedtestserverHost)(nil)).Elem()
}

func (i SpeedtestserverHostArgs) ToSpeedtestserverHostOutput() SpeedtestserverHostOutput {
	return i.ToSpeedtestserverHostOutputWithContext(context.Background())
}

func (i SpeedtestserverHostArgs) ToSpeedtestserverHostOutputWithContext(ctx context.Context) SpeedtestserverHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpeedtestserverHostOutput)
}

// SpeedtestserverHostArrayInput is an input type that accepts SpeedtestserverHostArray and SpeedtestserverHostArrayOutput values.
// You can construct a concrete instance of `SpeedtestserverHostArrayInput` via:
//
//	SpeedtestserverHostArray{ SpeedtestserverHostArgs{...} }
type SpeedtestserverHostArrayInput interface {
	pulumi.Input

	ToSpeedtestserverHostArrayOutput() SpeedtestserverHostArrayOutput
	ToSpeedtestserverHostArrayOutputWithContext(context.Context) SpeedtestserverHostArrayOutput
}

type SpeedtestserverHostArray []SpeedtestserverHostInput

func (SpeedtestserverHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpeedtestserverHost)(nil)).Elem()
}

func (i SpeedtestserverHostArray) ToSpeedtestserverHostArrayOutput() SpeedtestserverHostArrayOutput {
	return i.ToSpeedtestserverHostArrayOutputWithContext(context.Background())
}

func (i SpeedtestserverHostArray) ToSpeedtestserverHostArrayOutputWithContext(ctx context.Context) SpeedtestserverHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpeedtestserverHostArrayOutput)
}

type SpeedtestserverHostOutput struct{ *pulumi.OutputState }

func (SpeedtestserverHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpeedtestserverHost)(nil)).Elem()
}

func (o SpeedtestserverHostOutput) ToSpeedtestserverHostOutput() SpeedtestserverHostOutput {
	return o
}

func (o SpeedtestserverHostOutput) ToSpeedtestserverHostOutputWithContext(ctx context.Context) SpeedtestserverHostOutput {
	return o
}

// Speed test host distance.
func (o SpeedtestserverHostOutput) Distance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpeedtestserverHost) *int { return v.Distance }).(pulumi.IntPtrOutput)
}

// Server host ID.
func (o SpeedtestserverHostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpeedtestserverHost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Server host IPv4 address.
func (o SpeedtestserverHostOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpeedtestserverHost) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Speed test host latitude.
func (o SpeedtestserverHostOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpeedtestserverHost) *string { return v.Latitude }).(pulumi.StringPtrOutput)
}

// Speed test host longitude.
func (o SpeedtestserverHostOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpeedtestserverHost) *string { return v.Longitude }).(pulumi.StringPtrOutput)
}

// Speed test host password.
func (o SpeedtestserverHostOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpeedtestserverHost) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Server host port number to communicate with client.
func (o SpeedtestserverHostOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpeedtestserverHost) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Speed test host user name.
func (o SpeedtestserverHostOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpeedtestserverHost) *string { return v.User }).(pulumi.StringPtrOutput)
}

type SpeedtestserverHostArrayOutput struct{ *pulumi.OutputState }

func (SpeedtestserverHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpeedtestserverHost)(nil)).Elem()
}

func (o SpeedtestserverHostArrayOutput) ToSpeedtestserverHostArrayOutput() SpeedtestserverHostArrayOutput {
	return o
}

func (o SpeedtestserverHostArrayOutput) ToSpeedtestserverHostArrayOutputWithContext(ctx context.Context) SpeedtestserverHostArrayOutput {
	return o
}

func (o SpeedtestserverHostArrayOutput) Index(i pulumi.IntInput) SpeedtestserverHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpeedtestserverHost {
		return vs[0].([]SpeedtestserverHost)[vs[1].(int)]
	}).(SpeedtestserverHostOutput)
}

type SsoadminVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// SsoadminVdomInput is an input type that accepts SsoadminVdomArgs and SsoadminVdomOutput values.
// You can construct a concrete instance of `SsoadminVdomInput` via:
//
//	SsoadminVdomArgs{...}
type SsoadminVdomInput interface {
	pulumi.Input

	ToSsoadminVdomOutput() SsoadminVdomOutput
	ToSsoadminVdomOutputWithContext(context.Context) SsoadminVdomOutput
}

type SsoadminVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SsoadminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoadminVdom)(nil)).Elem()
}

func (i SsoadminVdomArgs) ToSsoadminVdomOutput() SsoadminVdomOutput {
	return i.ToSsoadminVdomOutputWithContext(context.Background())
}

func (i SsoadminVdomArgs) ToSsoadminVdomOutputWithContext(ctx context.Context) SsoadminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoadminVdomOutput)
}

// SsoadminVdomArrayInput is an input type that accepts SsoadminVdomArray and SsoadminVdomArrayOutput values.
// You can construct a concrete instance of `SsoadminVdomArrayInput` via:
//
//	SsoadminVdomArray{ SsoadminVdomArgs{...} }
type SsoadminVdomArrayInput interface {
	pulumi.Input

	ToSsoadminVdomArrayOutput() SsoadminVdomArrayOutput
	ToSsoadminVdomArrayOutputWithContext(context.Context) SsoadminVdomArrayOutput
}

type SsoadminVdomArray []SsoadminVdomInput

func (SsoadminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SsoadminVdom)(nil)).Elem()
}

func (i SsoadminVdomArray) ToSsoadminVdomArrayOutput() SsoadminVdomArrayOutput {
	return i.ToSsoadminVdomArrayOutputWithContext(context.Background())
}

func (i SsoadminVdomArray) ToSsoadminVdomArrayOutputWithContext(ctx context.Context) SsoadminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoadminVdomArrayOutput)
}

type SsoadminVdomOutput struct{ *pulumi.OutputState }

func (SsoadminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoadminVdom)(nil)).Elem()
}

func (o SsoadminVdomOutput) ToSsoadminVdomOutput() SsoadminVdomOutput {
	return o
}

func (o SsoadminVdomOutput) ToSsoadminVdomOutputWithContext(ctx context.Context) SsoadminVdomOutput {
	return o
}

// Virtual domain name.
func (o SsoadminVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsoadminVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SsoadminVdomArrayOutput struct{ *pulumi.OutputState }

func (SsoadminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SsoadminVdom)(nil)).Elem()
}

func (o SsoadminVdomArrayOutput) ToSsoadminVdomArrayOutput() SsoadminVdomArrayOutput {
	return o
}

func (o SsoadminVdomArrayOutput) ToSsoadminVdomArrayOutputWithContext(ctx context.Context) SsoadminVdomArrayOutput {
	return o
}

func (o SsoadminVdomArrayOutput) Index(i pulumi.IntInput) SsoadminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SsoadminVdom {
		return vs[0].([]SsoadminVdom)[vs[1].(int)]
	}).(SsoadminVdomOutput)
}

type SsoforticloudadminVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// SsoforticloudadminVdomInput is an input type that accepts SsoforticloudadminVdomArgs and SsoforticloudadminVdomOutput values.
// You can construct a concrete instance of `SsoforticloudadminVdomInput` via:
//
//	SsoforticloudadminVdomArgs{...}
type SsoforticloudadminVdomInput interface {
	pulumi.Input

	ToSsoforticloudadminVdomOutput() SsoforticloudadminVdomOutput
	ToSsoforticloudadminVdomOutputWithContext(context.Context) SsoforticloudadminVdomOutput
}

type SsoforticloudadminVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SsoforticloudadminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoforticloudadminVdom)(nil)).Elem()
}

func (i SsoforticloudadminVdomArgs) ToSsoforticloudadminVdomOutput() SsoforticloudadminVdomOutput {
	return i.ToSsoforticloudadminVdomOutputWithContext(context.Background())
}

func (i SsoforticloudadminVdomArgs) ToSsoforticloudadminVdomOutputWithContext(ctx context.Context) SsoforticloudadminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoforticloudadminVdomOutput)
}

// SsoforticloudadminVdomArrayInput is an input type that accepts SsoforticloudadminVdomArray and SsoforticloudadminVdomArrayOutput values.
// You can construct a concrete instance of `SsoforticloudadminVdomArrayInput` via:
//
//	SsoforticloudadminVdomArray{ SsoforticloudadminVdomArgs{...} }
type SsoforticloudadminVdomArrayInput interface {
	pulumi.Input

	ToSsoforticloudadminVdomArrayOutput() SsoforticloudadminVdomArrayOutput
	ToSsoforticloudadminVdomArrayOutputWithContext(context.Context) SsoforticloudadminVdomArrayOutput
}

type SsoforticloudadminVdomArray []SsoforticloudadminVdomInput

func (SsoforticloudadminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SsoforticloudadminVdom)(nil)).Elem()
}

func (i SsoforticloudadminVdomArray) ToSsoforticloudadminVdomArrayOutput() SsoforticloudadminVdomArrayOutput {
	return i.ToSsoforticloudadminVdomArrayOutputWithContext(context.Background())
}

func (i SsoforticloudadminVdomArray) ToSsoforticloudadminVdomArrayOutputWithContext(ctx context.Context) SsoforticloudadminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoforticloudadminVdomArrayOutput)
}

type SsoforticloudadminVdomOutput struct{ *pulumi.OutputState }

func (SsoforticloudadminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoforticloudadminVdom)(nil)).Elem()
}

func (o SsoforticloudadminVdomOutput) ToSsoforticloudadminVdomOutput() SsoforticloudadminVdomOutput {
	return o
}

func (o SsoforticloudadminVdomOutput) ToSsoforticloudadminVdomOutputWithContext(ctx context.Context) SsoforticloudadminVdomOutput {
	return o
}

// Virtual domain name.
func (o SsoforticloudadminVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsoforticloudadminVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SsoforticloudadminVdomArrayOutput struct{ *pulumi.OutputState }

func (SsoforticloudadminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SsoforticloudadminVdom)(nil)).Elem()
}

func (o SsoforticloudadminVdomArrayOutput) ToSsoforticloudadminVdomArrayOutput() SsoforticloudadminVdomArrayOutput {
	return o
}

func (o SsoforticloudadminVdomArrayOutput) ToSsoforticloudadminVdomArrayOutputWithContext(ctx context.Context) SsoforticloudadminVdomArrayOutput {
	return o
}

func (o SsoforticloudadminVdomArrayOutput) Index(i pulumi.IntInput) SsoforticloudadminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SsoforticloudadminVdom {
		return vs[0].([]SsoforticloudadminVdom)[vs[1].(int)]
	}).(SsoforticloudadminVdomOutput)
}

type SsofortigatecloudadminVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// SsofortigatecloudadminVdomInput is an input type that accepts SsofortigatecloudadminVdomArgs and SsofortigatecloudadminVdomOutput values.
// You can construct a concrete instance of `SsofortigatecloudadminVdomInput` via:
//
//	SsofortigatecloudadminVdomArgs{...}
type SsofortigatecloudadminVdomInput interface {
	pulumi.Input

	ToSsofortigatecloudadminVdomOutput() SsofortigatecloudadminVdomOutput
	ToSsofortigatecloudadminVdomOutputWithContext(context.Context) SsofortigatecloudadminVdomOutput
}

type SsofortigatecloudadminVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SsofortigatecloudadminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsofortigatecloudadminVdom)(nil)).Elem()
}

func (i SsofortigatecloudadminVdomArgs) ToSsofortigatecloudadminVdomOutput() SsofortigatecloudadminVdomOutput {
	return i.ToSsofortigatecloudadminVdomOutputWithContext(context.Background())
}

func (i SsofortigatecloudadminVdomArgs) ToSsofortigatecloudadminVdomOutputWithContext(ctx context.Context) SsofortigatecloudadminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsofortigatecloudadminVdomOutput)
}

// SsofortigatecloudadminVdomArrayInput is an input type that accepts SsofortigatecloudadminVdomArray and SsofortigatecloudadminVdomArrayOutput values.
// You can construct a concrete instance of `SsofortigatecloudadminVdomArrayInput` via:
//
//	SsofortigatecloudadminVdomArray{ SsofortigatecloudadminVdomArgs{...} }
type SsofortigatecloudadminVdomArrayInput interface {
	pulumi.Input

	ToSsofortigatecloudadminVdomArrayOutput() SsofortigatecloudadminVdomArrayOutput
	ToSsofortigatecloudadminVdomArrayOutputWithContext(context.Context) SsofortigatecloudadminVdomArrayOutput
}

type SsofortigatecloudadminVdomArray []SsofortigatecloudadminVdomInput

func (SsofortigatecloudadminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SsofortigatecloudadminVdom)(nil)).Elem()
}

func (i SsofortigatecloudadminVdomArray) ToSsofortigatecloudadminVdomArrayOutput() SsofortigatecloudadminVdomArrayOutput {
	return i.ToSsofortigatecloudadminVdomArrayOutputWithContext(context.Background())
}

func (i SsofortigatecloudadminVdomArray) ToSsofortigatecloudadminVdomArrayOutputWithContext(ctx context.Context) SsofortigatecloudadminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsofortigatecloudadminVdomArrayOutput)
}

type SsofortigatecloudadminVdomOutput struct{ *pulumi.OutputState }

func (SsofortigatecloudadminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsofortigatecloudadminVdom)(nil)).Elem()
}

func (o SsofortigatecloudadminVdomOutput) ToSsofortigatecloudadminVdomOutput() SsofortigatecloudadminVdomOutput {
	return o
}

func (o SsofortigatecloudadminVdomOutput) ToSsofortigatecloudadminVdomOutputWithContext(ctx context.Context) SsofortigatecloudadminVdomOutput {
	return o
}

// Virtual domain name.
func (o SsofortigatecloudadminVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsofortigatecloudadminVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SsofortigatecloudadminVdomArrayOutput struct{ *pulumi.OutputState }

func (SsofortigatecloudadminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SsofortigatecloudadminVdom)(nil)).Elem()
}

func (o SsofortigatecloudadminVdomArrayOutput) ToSsofortigatecloudadminVdomArrayOutput() SsofortigatecloudadminVdomArrayOutput {
	return o
}

func (o SsofortigatecloudadminVdomArrayOutput) ToSsofortigatecloudadminVdomArrayOutputWithContext(ctx context.Context) SsofortigatecloudadminVdomArrayOutput {
	return o
}

func (o SsofortigatecloudadminVdomArrayOutput) Index(i pulumi.IntInput) SsofortigatecloudadminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SsofortigatecloudadminVdom {
		return vs[0].([]SsofortigatecloudadminVdom)[vs[1].(int)]
	}).(SsofortigatecloudadminVdomOutput)
}

type StandaloneclusterClusterPeer struct {
	// List of interfaces to be turned down before session synchronization is complete. The structure of `downIntfsBeforeSessSync` block is documented below.
	DownIntfsBeforeSessSyncs []StandaloneclusterClusterPeerDownIntfsBeforeSessSync `pulumi:"downIntfsBeforeSessSyncs"`
	// Heartbeat interval (1 - 20 (100*ms). Increase to reduce false positives.
	HbInterval *int `pulumi:"hbInterval"`
	// Lost heartbeat threshold (1 - 60). Increase to reduce false positives.
	HbLostThreshold *int `pulumi:"hbLostThreshold"`
	// Enable/disable IPsec tunnel synchronization. Valid values: `enable`, `disable`.
	IpsecTunnelSync *string `pulumi:"ipsecTunnelSync"`
	// IP address of the interface on the peer unit that is used for the session synchronization link.
	Peerip *string `pulumi:"peerip"`
	// VDOM that contains the session synchronization link interface on the peer unit. Usually both peers would have the same peervd.
	Peervd *string `pulumi:"peervd"`
	// Enable/disable IKE route announcement on the backup unit. Valid values: `enable`, `disable`.
	SecondaryAddIpsecRoutes *string `pulumi:"secondaryAddIpsecRoutes"`
	// Add one or more filters if you only want to synchronize some sessions. Use the filter to configure the types of sessions to synchronize. The structure of `sessionSyncFilter` block is documented below.
	SessionSyncFilter *StandaloneclusterClusterPeerSessionSyncFilter `pulumi:"sessionSyncFilter"`
	// Sync ID.
	SyncId *int `pulumi:"syncId"`
	// Sessions from these VDOMs are synchronized using this session synchronization configuration. The structure of `syncvd` block is documented below.
	Syncvds []StandaloneclusterClusterPeerSyncvd `pulumi:"syncvds"`
}

// StandaloneclusterClusterPeerInput is an input type that accepts StandaloneclusterClusterPeerArgs and StandaloneclusterClusterPeerOutput values.
// You can construct a concrete instance of `StandaloneclusterClusterPeerInput` via:
//
//	StandaloneclusterClusterPeerArgs{...}
type StandaloneclusterClusterPeerInput interface {
	pulumi.Input

	ToStandaloneclusterClusterPeerOutput() StandaloneclusterClusterPeerOutput
	ToStandaloneclusterClusterPeerOutputWithContext(context.Context) StandaloneclusterClusterPeerOutput
}

type StandaloneclusterClusterPeerArgs struct {
	// List of interfaces to be turned down before session synchronization is complete. The structure of `downIntfsBeforeSessSync` block is documented below.
	DownIntfsBeforeSessSyncs StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayInput `pulumi:"downIntfsBeforeSessSyncs"`
	// Heartbeat interval (1 - 20 (100*ms). Increase to reduce false positives.
	HbInterval pulumi.IntPtrInput `pulumi:"hbInterval"`
	// Lost heartbeat threshold (1 - 60). Increase to reduce false positives.
	HbLostThreshold pulumi.IntPtrInput `pulumi:"hbLostThreshold"`
	// Enable/disable IPsec tunnel synchronization. Valid values: `enable`, `disable`.
	IpsecTunnelSync pulumi.StringPtrInput `pulumi:"ipsecTunnelSync"`
	// IP address of the interface on the peer unit that is used for the session synchronization link.
	Peerip pulumi.StringPtrInput `pulumi:"peerip"`
	// VDOM that contains the session synchronization link interface on the peer unit. Usually both peers would have the same peervd.
	Peervd pulumi.StringPtrInput `pulumi:"peervd"`
	// Enable/disable IKE route announcement on the backup unit. Valid values: `enable`, `disable`.
	SecondaryAddIpsecRoutes pulumi.StringPtrInput `pulumi:"secondaryAddIpsecRoutes"`
	// Add one or more filters if you only want to synchronize some sessions. Use the filter to configure the types of sessions to synchronize. The structure of `sessionSyncFilter` block is documented below.
	SessionSyncFilter StandaloneclusterClusterPeerSessionSyncFilterPtrInput `pulumi:"sessionSyncFilter"`
	// Sync ID.
	SyncId pulumi.IntPtrInput `pulumi:"syncId"`
	// Sessions from these VDOMs are synchronized using this session synchronization configuration. The structure of `syncvd` block is documented below.
	Syncvds StandaloneclusterClusterPeerSyncvdArrayInput `pulumi:"syncvds"`
}

func (StandaloneclusterClusterPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandaloneclusterClusterPeer)(nil)).Elem()
}

func (i StandaloneclusterClusterPeerArgs) ToStandaloneclusterClusterPeerOutput() StandaloneclusterClusterPeerOutput {
	return i.ToStandaloneclusterClusterPeerOutputWithContext(context.Background())
}

func (i StandaloneclusterClusterPeerArgs) ToStandaloneclusterClusterPeerOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterClusterPeerOutput)
}

// StandaloneclusterClusterPeerArrayInput is an input type that accepts StandaloneclusterClusterPeerArray and StandaloneclusterClusterPeerArrayOutput values.
// You can construct a concrete instance of `StandaloneclusterClusterPeerArrayInput` via:
//
//	StandaloneclusterClusterPeerArray{ StandaloneclusterClusterPeerArgs{...} }
type StandaloneclusterClusterPeerArrayInput interface {
	pulumi.Input

	ToStandaloneclusterClusterPeerArrayOutput() StandaloneclusterClusterPeerArrayOutput
	ToStandaloneclusterClusterPeerArrayOutputWithContext(context.Context) StandaloneclusterClusterPeerArrayOutput
}

type StandaloneclusterClusterPeerArray []StandaloneclusterClusterPeerInput

func (StandaloneclusterClusterPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandaloneclusterClusterPeer)(nil)).Elem()
}

func (i StandaloneclusterClusterPeerArray) ToStandaloneclusterClusterPeerArrayOutput() StandaloneclusterClusterPeerArrayOutput {
	return i.ToStandaloneclusterClusterPeerArrayOutputWithContext(context.Background())
}

func (i StandaloneclusterClusterPeerArray) ToStandaloneclusterClusterPeerArrayOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterClusterPeerArrayOutput)
}

type StandaloneclusterClusterPeerOutput struct{ *pulumi.OutputState }

func (StandaloneclusterClusterPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandaloneclusterClusterPeer)(nil)).Elem()
}

func (o StandaloneclusterClusterPeerOutput) ToStandaloneclusterClusterPeerOutput() StandaloneclusterClusterPeerOutput {
	return o
}

func (o StandaloneclusterClusterPeerOutput) ToStandaloneclusterClusterPeerOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerOutput {
	return o
}

// List of interfaces to be turned down before session synchronization is complete. The structure of `downIntfsBeforeSessSync` block is documented below.
func (o StandaloneclusterClusterPeerOutput) DownIntfsBeforeSessSyncs() StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeer) []StandaloneclusterClusterPeerDownIntfsBeforeSessSync {
		return v.DownIntfsBeforeSessSyncs
	}).(StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput)
}

// Heartbeat interval (1 - 20 (100*ms). Increase to reduce false positives.
func (o StandaloneclusterClusterPeerOutput) HbInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeer) *int { return v.HbInterval }).(pulumi.IntPtrOutput)
}

// Lost heartbeat threshold (1 - 60). Increase to reduce false positives.
func (o StandaloneclusterClusterPeerOutput) HbLostThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeer) *int { return v.HbLostThreshold }).(pulumi.IntPtrOutput)
}

// Enable/disable IPsec tunnel synchronization. Valid values: `enable`, `disable`.
func (o StandaloneclusterClusterPeerOutput) IpsecTunnelSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeer) *string { return v.IpsecTunnelSync }).(pulumi.StringPtrOutput)
}

// IP address of the interface on the peer unit that is used for the session synchronization link.
func (o StandaloneclusterClusterPeerOutput) Peerip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeer) *string { return v.Peerip }).(pulumi.StringPtrOutput)
}

// VDOM that contains the session synchronization link interface on the peer unit. Usually both peers would have the same peervd.
func (o StandaloneclusterClusterPeerOutput) Peervd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeer) *string { return v.Peervd }).(pulumi.StringPtrOutput)
}

// Enable/disable IKE route announcement on the backup unit. Valid values: `enable`, `disable`.
func (o StandaloneclusterClusterPeerOutput) SecondaryAddIpsecRoutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeer) *string { return v.SecondaryAddIpsecRoutes }).(pulumi.StringPtrOutput)
}

// Add one or more filters if you only want to synchronize some sessions. Use the filter to configure the types of sessions to synchronize. The structure of `sessionSyncFilter` block is documented below.
func (o StandaloneclusterClusterPeerOutput) SessionSyncFilter() StandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeer) *StandaloneclusterClusterPeerSessionSyncFilter {
		return v.SessionSyncFilter
	}).(StandaloneclusterClusterPeerSessionSyncFilterPtrOutput)
}

// Sync ID.
func (o StandaloneclusterClusterPeerOutput) SyncId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeer) *int { return v.SyncId }).(pulumi.IntPtrOutput)
}

// Sessions from these VDOMs are synchronized using this session synchronization configuration. The structure of `syncvd` block is documented below.
func (o StandaloneclusterClusterPeerOutput) Syncvds() StandaloneclusterClusterPeerSyncvdArrayOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeer) []StandaloneclusterClusterPeerSyncvd { return v.Syncvds }).(StandaloneclusterClusterPeerSyncvdArrayOutput)
}

type StandaloneclusterClusterPeerArrayOutput struct{ *pulumi.OutputState }

func (StandaloneclusterClusterPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandaloneclusterClusterPeer)(nil)).Elem()
}

func (o StandaloneclusterClusterPeerArrayOutput) ToStandaloneclusterClusterPeerArrayOutput() StandaloneclusterClusterPeerArrayOutput {
	return o
}

func (o StandaloneclusterClusterPeerArrayOutput) ToStandaloneclusterClusterPeerArrayOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerArrayOutput {
	return o
}

func (o StandaloneclusterClusterPeerArrayOutput) Index(i pulumi.IntInput) StandaloneclusterClusterPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StandaloneclusterClusterPeer {
		return vs[0].([]StandaloneclusterClusterPeer)[vs[1].(int)]
	}).(StandaloneclusterClusterPeerOutput)
}

type StandaloneclusterClusterPeerDownIntfsBeforeSessSync struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// StandaloneclusterClusterPeerDownIntfsBeforeSessSyncInput is an input type that accepts StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs and StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput values.
// You can construct a concrete instance of `StandaloneclusterClusterPeerDownIntfsBeforeSessSyncInput` via:
//
//	StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs{...}
type StandaloneclusterClusterPeerDownIntfsBeforeSessSyncInput interface {
	pulumi.Input

	ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput() StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput
	ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(context.Context) StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput
}

type StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandaloneclusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs) ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput() StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return i.ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(context.Background())
}

func (i StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs) ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput)
}

// StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayInput is an input type that accepts StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray and StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput values.
// You can construct a concrete instance of `StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayInput` via:
//
//	StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray{ StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs{...} }
type StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayInput interface {
	pulumi.Input

	ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput() StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput
	ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(context.Context) StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput
}

type StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray []StandaloneclusterClusterPeerDownIntfsBeforeSessSyncInput

func (StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandaloneclusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray) ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput() StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return i.ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(context.Background())
}

func (i StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray) ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput)
}

type StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput struct{ *pulumi.OutputState }

func (StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandaloneclusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput) ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput() StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return o
}

func (o StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput) ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return o
}

// Interface name.
func (o StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerDownIntfsBeforeSessSync) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput struct{ *pulumi.OutputState }

func (StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandaloneclusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput() StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) ToStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) Index(i pulumi.IntInput) StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StandaloneclusterClusterPeerDownIntfsBeforeSessSync {
		return vs[0].([]StandaloneclusterClusterPeerDownIntfsBeforeSessSync)[vs[1].(int)]
	}).(StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput)
}

type StandaloneclusterClusterPeerSessionSyncFilter struct {
	// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custom services. The structure of `customService` block is documented below.
	CustomServices []StandaloneclusterClusterPeerSessionSyncFilterCustomService `pulumi:"customServices"`
	// Only sessions to this IPv4 address are synchronized.
	Dstaddr *string `pulumi:"dstaddr"`
	// Only sessions to this IPv6 address are synchronized.
	Dstaddr6 *string `pulumi:"dstaddr6"`
	// Only sessions to this interface are synchronized.
	Dstintf *string `pulumi:"dstintf"`
	// Only sessions from this IPv4 address are synchronized.
	Srcaddr *string `pulumi:"srcaddr"`
	// Only sessions from this IPv6 address are synchronized.
	Srcaddr6 *string `pulumi:"srcaddr6"`
	// Only sessions from this interface are synchronized.
	Srcintf *string `pulumi:"srcintf"`
}

// StandaloneclusterClusterPeerSessionSyncFilterInput is an input type that accepts StandaloneclusterClusterPeerSessionSyncFilterArgs and StandaloneclusterClusterPeerSessionSyncFilterOutput values.
// You can construct a concrete instance of `StandaloneclusterClusterPeerSessionSyncFilterInput` via:
//
//	StandaloneclusterClusterPeerSessionSyncFilterArgs{...}
type StandaloneclusterClusterPeerSessionSyncFilterInput interface {
	pulumi.Input

	ToStandaloneclusterClusterPeerSessionSyncFilterOutput() StandaloneclusterClusterPeerSessionSyncFilterOutput
	ToStandaloneclusterClusterPeerSessionSyncFilterOutputWithContext(context.Context) StandaloneclusterClusterPeerSessionSyncFilterOutput
}

type StandaloneclusterClusterPeerSessionSyncFilterArgs struct {
	// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custom services. The structure of `customService` block is documented below.
	CustomServices StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayInput `pulumi:"customServices"`
	// Only sessions to this IPv4 address are synchronized.
	Dstaddr pulumi.StringPtrInput `pulumi:"dstaddr"`
	// Only sessions to this IPv6 address are synchronized.
	Dstaddr6 pulumi.StringPtrInput `pulumi:"dstaddr6"`
	// Only sessions to this interface are synchronized.
	Dstintf pulumi.StringPtrInput `pulumi:"dstintf"`
	// Only sessions from this IPv4 address are synchronized.
	Srcaddr pulumi.StringPtrInput `pulumi:"srcaddr"`
	// Only sessions from this IPv6 address are synchronized.
	Srcaddr6 pulumi.StringPtrInput `pulumi:"srcaddr6"`
	// Only sessions from this interface are synchronized.
	Srcintf pulumi.StringPtrInput `pulumi:"srcintf"`
}

func (StandaloneclusterClusterPeerSessionSyncFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandaloneclusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (i StandaloneclusterClusterPeerSessionSyncFilterArgs) ToStandaloneclusterClusterPeerSessionSyncFilterOutput() StandaloneclusterClusterPeerSessionSyncFilterOutput {
	return i.ToStandaloneclusterClusterPeerSessionSyncFilterOutputWithContext(context.Background())
}

func (i StandaloneclusterClusterPeerSessionSyncFilterArgs) ToStandaloneclusterClusterPeerSessionSyncFilterOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSessionSyncFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterClusterPeerSessionSyncFilterOutput)
}

func (i StandaloneclusterClusterPeerSessionSyncFilterArgs) ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutput() StandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return i.ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i StandaloneclusterClusterPeerSessionSyncFilterArgs) ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterClusterPeerSessionSyncFilterOutput).ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx)
}

// StandaloneclusterClusterPeerSessionSyncFilterPtrInput is an input type that accepts StandaloneclusterClusterPeerSessionSyncFilterArgs, StandaloneclusterClusterPeerSessionSyncFilterPtr and StandaloneclusterClusterPeerSessionSyncFilterPtrOutput values.
// You can construct a concrete instance of `StandaloneclusterClusterPeerSessionSyncFilterPtrInput` via:
//
//	        StandaloneclusterClusterPeerSessionSyncFilterArgs{...}
//
//	or:
//
//	        nil
type StandaloneclusterClusterPeerSessionSyncFilterPtrInput interface {
	pulumi.Input

	ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutput() StandaloneclusterClusterPeerSessionSyncFilterPtrOutput
	ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Context) StandaloneclusterClusterPeerSessionSyncFilterPtrOutput
}

type standaloneclusterClusterPeerSessionSyncFilterPtrType StandaloneclusterClusterPeerSessionSyncFilterArgs

func StandaloneclusterClusterPeerSessionSyncFilterPtr(v *StandaloneclusterClusterPeerSessionSyncFilterArgs) StandaloneclusterClusterPeerSessionSyncFilterPtrInput {
	return (*standaloneclusterClusterPeerSessionSyncFilterPtrType)(v)
}

func (*standaloneclusterClusterPeerSessionSyncFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StandaloneclusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (i *standaloneclusterClusterPeerSessionSyncFilterPtrType) ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutput() StandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return i.ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i *standaloneclusterClusterPeerSessionSyncFilterPtrType) ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterClusterPeerSessionSyncFilterPtrOutput)
}

type StandaloneclusterClusterPeerSessionSyncFilterOutput struct{ *pulumi.OutputState }

func (StandaloneclusterClusterPeerSessionSyncFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandaloneclusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (o StandaloneclusterClusterPeerSessionSyncFilterOutput) ToStandaloneclusterClusterPeerSessionSyncFilterOutput() StandaloneclusterClusterPeerSessionSyncFilterOutput {
	return o
}

func (o StandaloneclusterClusterPeerSessionSyncFilterOutput) ToStandaloneclusterClusterPeerSessionSyncFilterOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSessionSyncFilterOutput {
	return o
}

func (o StandaloneclusterClusterPeerSessionSyncFilterOutput) ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutput() StandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return o.ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (o StandaloneclusterClusterPeerSessionSyncFilterOutput) ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StandaloneclusterClusterPeerSessionSyncFilter) *StandaloneclusterClusterPeerSessionSyncFilter {
		return &v
	}).(StandaloneclusterClusterPeerSessionSyncFilterPtrOutput)
}

// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custom services. The structure of `customService` block is documented below.
func (o StandaloneclusterClusterPeerSessionSyncFilterOutput) CustomServices() StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerSessionSyncFilter) []StandaloneclusterClusterPeerSessionSyncFilterCustomService {
		return v.CustomServices
	}).(StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput)
}

// Only sessions to this IPv4 address are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Dstaddr }).(pulumi.StringPtrOutput)
}

// Only sessions to this IPv6 address are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Dstaddr6 }).(pulumi.StringPtrOutput)
}

// Only sessions to this interface are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Dstintf }).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv4 address are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Srcaddr }).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv6 address are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Srcaddr6 }).(pulumi.StringPtrOutput)
}

// Only sessions from this interface are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Srcintf }).(pulumi.StringPtrOutput)
}

type StandaloneclusterClusterPeerSessionSyncFilterPtrOutput struct{ *pulumi.OutputState }

func (StandaloneclusterClusterPeerSessionSyncFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandaloneclusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (o StandaloneclusterClusterPeerSessionSyncFilterPtrOutput) ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutput() StandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return o
}

func (o StandaloneclusterClusterPeerSessionSyncFilterPtrOutput) ToStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return o
}

func (o StandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Elem() StandaloneclusterClusterPeerSessionSyncFilterOutput {
	return o.ApplyT(func(v *StandaloneclusterClusterPeerSessionSyncFilter) StandaloneclusterClusterPeerSessionSyncFilter {
		if v != nil {
			return *v
		}
		var ret StandaloneclusterClusterPeerSessionSyncFilter
		return ret
	}).(StandaloneclusterClusterPeerSessionSyncFilterOutput)
}

// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custom services. The structure of `customService` block is documented below.
func (o StandaloneclusterClusterPeerSessionSyncFilterPtrOutput) CustomServices() StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v *StandaloneclusterClusterPeerSessionSyncFilter) []StandaloneclusterClusterPeerSessionSyncFilterCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput)
}

// Only sessions to this IPv4 address are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr
	}).(pulumi.StringPtrOutput)
}

// Only sessions to this IPv6 address are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr6
	}).(pulumi.StringPtrOutput)
}

// Only sessions to this interface are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstintf
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv4 address are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv6 address are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr6
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this interface are synchronized.
func (o StandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcintf
	}).(pulumi.StringPtrOutput)
}

type StandaloneclusterClusterPeerSessionSyncFilterCustomService struct {
	// Custom service destination port range.
	DstPortRange *string `pulumi:"dstPortRange"`
	// Custom service ID.
	Id *int `pulumi:"id"`
	// Custom service source port range.
	SrcPortRange *string `pulumi:"srcPortRange"`
}

// StandaloneclusterClusterPeerSessionSyncFilterCustomServiceInput is an input type that accepts StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs and StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput values.
// You can construct a concrete instance of `StandaloneclusterClusterPeerSessionSyncFilterCustomServiceInput` via:
//
//	StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs{...}
type StandaloneclusterClusterPeerSessionSyncFilterCustomServiceInput interface {
	pulumi.Input

	ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput() StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput
	ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(context.Context) StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput
}

type StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs struct {
	// Custom service destination port range.
	DstPortRange pulumi.StringPtrInput `pulumi:"dstPortRange"`
	// Custom service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Custom service source port range.
	SrcPortRange pulumi.StringPtrInput `pulumi:"srcPortRange"`
}

func (StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandaloneclusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (i StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs) ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput() StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return i.ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(context.Background())
}

func (i StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs) ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput)
}

// StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayInput is an input type that accepts StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray and StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput values.
// You can construct a concrete instance of `StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayInput` via:
//
//	StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray{ StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs{...} }
type StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayInput interface {
	pulumi.Input

	ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput() StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput
	ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(context.Context) StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput
}

type StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray []StandaloneclusterClusterPeerSessionSyncFilterCustomServiceInput

func (StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandaloneclusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (i StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray) ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput() StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return i.ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(context.Background())
}

func (i StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray) ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput)
}

type StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput struct{ *pulumi.OutputState }

func (StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandaloneclusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (o StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput() StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return o
}

func (o StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return o
}

// Custom service destination port range.
func (o StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) DstPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerSessionSyncFilterCustomService) *string { return v.DstPortRange }).(pulumi.StringPtrOutput)
}

// Custom service ID.
func (o StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerSessionSyncFilterCustomService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Custom service source port range.
func (o StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) SrcPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerSessionSyncFilterCustomService) *string { return v.SrcPortRange }).(pulumi.StringPtrOutput)
}

type StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandaloneclusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (o StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput() StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) ToStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) Index(i pulumi.IntInput) StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StandaloneclusterClusterPeerSessionSyncFilterCustomService {
		return vs[0].([]StandaloneclusterClusterPeerSessionSyncFilterCustomService)[vs[1].(int)]
	}).(StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput)
}

type StandaloneclusterClusterPeerSyncvd struct {
	// VDOM name.
	Name *string `pulumi:"name"`
}

// StandaloneclusterClusterPeerSyncvdInput is an input type that accepts StandaloneclusterClusterPeerSyncvdArgs and StandaloneclusterClusterPeerSyncvdOutput values.
// You can construct a concrete instance of `StandaloneclusterClusterPeerSyncvdInput` via:
//
//	StandaloneclusterClusterPeerSyncvdArgs{...}
type StandaloneclusterClusterPeerSyncvdInput interface {
	pulumi.Input

	ToStandaloneclusterClusterPeerSyncvdOutput() StandaloneclusterClusterPeerSyncvdOutput
	ToStandaloneclusterClusterPeerSyncvdOutputWithContext(context.Context) StandaloneclusterClusterPeerSyncvdOutput
}

type StandaloneclusterClusterPeerSyncvdArgs struct {
	// VDOM name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StandaloneclusterClusterPeerSyncvdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandaloneclusterClusterPeerSyncvd)(nil)).Elem()
}

func (i StandaloneclusterClusterPeerSyncvdArgs) ToStandaloneclusterClusterPeerSyncvdOutput() StandaloneclusterClusterPeerSyncvdOutput {
	return i.ToStandaloneclusterClusterPeerSyncvdOutputWithContext(context.Background())
}

func (i StandaloneclusterClusterPeerSyncvdArgs) ToStandaloneclusterClusterPeerSyncvdOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSyncvdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterClusterPeerSyncvdOutput)
}

// StandaloneclusterClusterPeerSyncvdArrayInput is an input type that accepts StandaloneclusterClusterPeerSyncvdArray and StandaloneclusterClusterPeerSyncvdArrayOutput values.
// You can construct a concrete instance of `StandaloneclusterClusterPeerSyncvdArrayInput` via:
//
//	StandaloneclusterClusterPeerSyncvdArray{ StandaloneclusterClusterPeerSyncvdArgs{...} }
type StandaloneclusterClusterPeerSyncvdArrayInput interface {
	pulumi.Input

	ToStandaloneclusterClusterPeerSyncvdArrayOutput() StandaloneclusterClusterPeerSyncvdArrayOutput
	ToStandaloneclusterClusterPeerSyncvdArrayOutputWithContext(context.Context) StandaloneclusterClusterPeerSyncvdArrayOutput
}

type StandaloneclusterClusterPeerSyncvdArray []StandaloneclusterClusterPeerSyncvdInput

func (StandaloneclusterClusterPeerSyncvdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandaloneclusterClusterPeerSyncvd)(nil)).Elem()
}

func (i StandaloneclusterClusterPeerSyncvdArray) ToStandaloneclusterClusterPeerSyncvdArrayOutput() StandaloneclusterClusterPeerSyncvdArrayOutput {
	return i.ToStandaloneclusterClusterPeerSyncvdArrayOutputWithContext(context.Background())
}

func (i StandaloneclusterClusterPeerSyncvdArray) ToStandaloneclusterClusterPeerSyncvdArrayOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSyncvdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandaloneclusterClusterPeerSyncvdArrayOutput)
}

type StandaloneclusterClusterPeerSyncvdOutput struct{ *pulumi.OutputState }

func (StandaloneclusterClusterPeerSyncvdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandaloneclusterClusterPeerSyncvd)(nil)).Elem()
}

func (o StandaloneclusterClusterPeerSyncvdOutput) ToStandaloneclusterClusterPeerSyncvdOutput() StandaloneclusterClusterPeerSyncvdOutput {
	return o
}

func (o StandaloneclusterClusterPeerSyncvdOutput) ToStandaloneclusterClusterPeerSyncvdOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSyncvdOutput {
	return o
}

// VDOM name.
func (o StandaloneclusterClusterPeerSyncvdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandaloneclusterClusterPeerSyncvd) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StandaloneclusterClusterPeerSyncvdArrayOutput struct{ *pulumi.OutputState }

func (StandaloneclusterClusterPeerSyncvdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandaloneclusterClusterPeerSyncvd)(nil)).Elem()
}

func (o StandaloneclusterClusterPeerSyncvdArrayOutput) ToStandaloneclusterClusterPeerSyncvdArrayOutput() StandaloneclusterClusterPeerSyncvdArrayOutput {
	return o
}

func (o StandaloneclusterClusterPeerSyncvdArrayOutput) ToStandaloneclusterClusterPeerSyncvdArrayOutputWithContext(ctx context.Context) StandaloneclusterClusterPeerSyncvdArrayOutput {
	return o
}

func (o StandaloneclusterClusterPeerSyncvdArrayOutput) Index(i pulumi.IntInput) StandaloneclusterClusterPeerSyncvdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StandaloneclusterClusterPeerSyncvd {
		return vs[0].([]StandaloneclusterClusterPeerSyncvd)[vs[1].(int)]
	}).(StandaloneclusterClusterPeerSyncvdOutput)
}

type SwitchinterfaceMember struct {
	// Physical interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// SwitchinterfaceMemberInput is an input type that accepts SwitchinterfaceMemberArgs and SwitchinterfaceMemberOutput values.
// You can construct a concrete instance of `SwitchinterfaceMemberInput` via:
//
//	SwitchinterfaceMemberArgs{...}
type SwitchinterfaceMemberInput interface {
	pulumi.Input

	ToSwitchinterfaceMemberOutput() SwitchinterfaceMemberOutput
	ToSwitchinterfaceMemberOutputWithContext(context.Context) SwitchinterfaceMemberOutput
}

type SwitchinterfaceMemberArgs struct {
	// Physical interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SwitchinterfaceMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchinterfaceMember)(nil)).Elem()
}

func (i SwitchinterfaceMemberArgs) ToSwitchinterfaceMemberOutput() SwitchinterfaceMemberOutput {
	return i.ToSwitchinterfaceMemberOutputWithContext(context.Background())
}

func (i SwitchinterfaceMemberArgs) ToSwitchinterfaceMemberOutputWithContext(ctx context.Context) SwitchinterfaceMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchinterfaceMemberOutput)
}

// SwitchinterfaceMemberArrayInput is an input type that accepts SwitchinterfaceMemberArray and SwitchinterfaceMemberArrayOutput values.
// You can construct a concrete instance of `SwitchinterfaceMemberArrayInput` via:
//
//	SwitchinterfaceMemberArray{ SwitchinterfaceMemberArgs{...} }
type SwitchinterfaceMemberArrayInput interface {
	pulumi.Input

	ToSwitchinterfaceMemberArrayOutput() SwitchinterfaceMemberArrayOutput
	ToSwitchinterfaceMemberArrayOutputWithContext(context.Context) SwitchinterfaceMemberArrayOutput
}

type SwitchinterfaceMemberArray []SwitchinterfaceMemberInput

func (SwitchinterfaceMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchinterfaceMember)(nil)).Elem()
}

func (i SwitchinterfaceMemberArray) ToSwitchinterfaceMemberArrayOutput() SwitchinterfaceMemberArrayOutput {
	return i.ToSwitchinterfaceMemberArrayOutputWithContext(context.Background())
}

func (i SwitchinterfaceMemberArray) ToSwitchinterfaceMemberArrayOutputWithContext(ctx context.Context) SwitchinterfaceMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchinterfaceMemberArrayOutput)
}

type SwitchinterfaceMemberOutput struct{ *pulumi.OutputState }

func (SwitchinterfaceMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchinterfaceMember)(nil)).Elem()
}

func (o SwitchinterfaceMemberOutput) ToSwitchinterfaceMemberOutput() SwitchinterfaceMemberOutput {
	return o
}

func (o SwitchinterfaceMemberOutput) ToSwitchinterfaceMemberOutputWithContext(ctx context.Context) SwitchinterfaceMemberOutput {
	return o
}

// Physical interface name.
func (o SwitchinterfaceMemberOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchinterfaceMember) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SwitchinterfaceMemberArrayOutput struct{ *pulumi.OutputState }

func (SwitchinterfaceMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchinterfaceMember)(nil)).Elem()
}

func (o SwitchinterfaceMemberArrayOutput) ToSwitchinterfaceMemberArrayOutput() SwitchinterfaceMemberArrayOutput {
	return o
}

func (o SwitchinterfaceMemberArrayOutput) ToSwitchinterfaceMemberArrayOutputWithContext(ctx context.Context) SwitchinterfaceMemberArrayOutput {
	return o
}

func (o SwitchinterfaceMemberArrayOutput) Index(i pulumi.IntInput) SwitchinterfaceMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchinterfaceMember {
		return vs[0].([]SwitchinterfaceMember)[vs[1].(int)]
	}).(SwitchinterfaceMemberOutput)
}

type SwitchinterfaceSpanSourcePort struct {
	// Physical interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// SwitchinterfaceSpanSourcePortInput is an input type that accepts SwitchinterfaceSpanSourcePortArgs and SwitchinterfaceSpanSourcePortOutput values.
// You can construct a concrete instance of `SwitchinterfaceSpanSourcePortInput` via:
//
//	SwitchinterfaceSpanSourcePortArgs{...}
type SwitchinterfaceSpanSourcePortInput interface {
	pulumi.Input

	ToSwitchinterfaceSpanSourcePortOutput() SwitchinterfaceSpanSourcePortOutput
	ToSwitchinterfaceSpanSourcePortOutputWithContext(context.Context) SwitchinterfaceSpanSourcePortOutput
}

type SwitchinterfaceSpanSourcePortArgs struct {
	// Physical interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SwitchinterfaceSpanSourcePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchinterfaceSpanSourcePort)(nil)).Elem()
}

func (i SwitchinterfaceSpanSourcePortArgs) ToSwitchinterfaceSpanSourcePortOutput() SwitchinterfaceSpanSourcePortOutput {
	return i.ToSwitchinterfaceSpanSourcePortOutputWithContext(context.Background())
}

func (i SwitchinterfaceSpanSourcePortArgs) ToSwitchinterfaceSpanSourcePortOutputWithContext(ctx context.Context) SwitchinterfaceSpanSourcePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchinterfaceSpanSourcePortOutput)
}

// SwitchinterfaceSpanSourcePortArrayInput is an input type that accepts SwitchinterfaceSpanSourcePortArray and SwitchinterfaceSpanSourcePortArrayOutput values.
// You can construct a concrete instance of `SwitchinterfaceSpanSourcePortArrayInput` via:
//
//	SwitchinterfaceSpanSourcePortArray{ SwitchinterfaceSpanSourcePortArgs{...} }
type SwitchinterfaceSpanSourcePortArrayInput interface {
	pulumi.Input

	ToSwitchinterfaceSpanSourcePortArrayOutput() SwitchinterfaceSpanSourcePortArrayOutput
	ToSwitchinterfaceSpanSourcePortArrayOutputWithContext(context.Context) SwitchinterfaceSpanSourcePortArrayOutput
}

type SwitchinterfaceSpanSourcePortArray []SwitchinterfaceSpanSourcePortInput

func (SwitchinterfaceSpanSourcePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchinterfaceSpanSourcePort)(nil)).Elem()
}

func (i SwitchinterfaceSpanSourcePortArray) ToSwitchinterfaceSpanSourcePortArrayOutput() SwitchinterfaceSpanSourcePortArrayOutput {
	return i.ToSwitchinterfaceSpanSourcePortArrayOutputWithContext(context.Background())
}

func (i SwitchinterfaceSpanSourcePortArray) ToSwitchinterfaceSpanSourcePortArrayOutputWithContext(ctx context.Context) SwitchinterfaceSpanSourcePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchinterfaceSpanSourcePortArrayOutput)
}

type SwitchinterfaceSpanSourcePortOutput struct{ *pulumi.OutputState }

func (SwitchinterfaceSpanSourcePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchinterfaceSpanSourcePort)(nil)).Elem()
}

func (o SwitchinterfaceSpanSourcePortOutput) ToSwitchinterfaceSpanSourcePortOutput() SwitchinterfaceSpanSourcePortOutput {
	return o
}

func (o SwitchinterfaceSpanSourcePortOutput) ToSwitchinterfaceSpanSourcePortOutputWithContext(ctx context.Context) SwitchinterfaceSpanSourcePortOutput {
	return o
}

// Physical interface name.
func (o SwitchinterfaceSpanSourcePortOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchinterfaceSpanSourcePort) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SwitchinterfaceSpanSourcePortArrayOutput struct{ *pulumi.OutputState }

func (SwitchinterfaceSpanSourcePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchinterfaceSpanSourcePort)(nil)).Elem()
}

func (o SwitchinterfaceSpanSourcePortArrayOutput) ToSwitchinterfaceSpanSourcePortArrayOutput() SwitchinterfaceSpanSourcePortArrayOutput {
	return o
}

func (o SwitchinterfaceSpanSourcePortArrayOutput) ToSwitchinterfaceSpanSourcePortArrayOutputWithContext(ctx context.Context) SwitchinterfaceSpanSourcePortArrayOutput {
	return o
}

func (o SwitchinterfaceSpanSourcePortArrayOutput) Index(i pulumi.IntInput) SwitchinterfaceSpanSourcePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchinterfaceSpanSourcePort {
		return vs[0].([]SwitchinterfaceSpanSourcePort)[vs[1].(int)]
	}).(SwitchinterfaceSpanSourcePortOutput)
}

type VdomdnsServerHostname struct {
	// DNS server host name list separated by space (maximum 4 domains).
	Hostname *string `pulumi:"hostname"`
}

// VdomdnsServerHostnameInput is an input type that accepts VdomdnsServerHostnameArgs and VdomdnsServerHostnameOutput values.
// You can construct a concrete instance of `VdomdnsServerHostnameInput` via:
//
//	VdomdnsServerHostnameArgs{...}
type VdomdnsServerHostnameInput interface {
	pulumi.Input

	ToVdomdnsServerHostnameOutput() VdomdnsServerHostnameOutput
	ToVdomdnsServerHostnameOutputWithContext(context.Context) VdomdnsServerHostnameOutput
}

type VdomdnsServerHostnameArgs struct {
	// DNS server host name list separated by space (maximum 4 domains).
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
}

func (VdomdnsServerHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VdomdnsServerHostname)(nil)).Elem()
}

func (i VdomdnsServerHostnameArgs) ToVdomdnsServerHostnameOutput() VdomdnsServerHostnameOutput {
	return i.ToVdomdnsServerHostnameOutputWithContext(context.Background())
}

func (i VdomdnsServerHostnameArgs) ToVdomdnsServerHostnameOutputWithContext(ctx context.Context) VdomdnsServerHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomdnsServerHostnameOutput)
}

// VdomdnsServerHostnameArrayInput is an input type that accepts VdomdnsServerHostnameArray and VdomdnsServerHostnameArrayOutput values.
// You can construct a concrete instance of `VdomdnsServerHostnameArrayInput` via:
//
//	VdomdnsServerHostnameArray{ VdomdnsServerHostnameArgs{...} }
type VdomdnsServerHostnameArrayInput interface {
	pulumi.Input

	ToVdomdnsServerHostnameArrayOutput() VdomdnsServerHostnameArrayOutput
	ToVdomdnsServerHostnameArrayOutputWithContext(context.Context) VdomdnsServerHostnameArrayOutput
}

type VdomdnsServerHostnameArray []VdomdnsServerHostnameInput

func (VdomdnsServerHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VdomdnsServerHostname)(nil)).Elem()
}

func (i VdomdnsServerHostnameArray) ToVdomdnsServerHostnameArrayOutput() VdomdnsServerHostnameArrayOutput {
	return i.ToVdomdnsServerHostnameArrayOutputWithContext(context.Background())
}

func (i VdomdnsServerHostnameArray) ToVdomdnsServerHostnameArrayOutputWithContext(ctx context.Context) VdomdnsServerHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomdnsServerHostnameArrayOutput)
}

type VdomdnsServerHostnameOutput struct{ *pulumi.OutputState }

func (VdomdnsServerHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VdomdnsServerHostname)(nil)).Elem()
}

func (o VdomdnsServerHostnameOutput) ToVdomdnsServerHostnameOutput() VdomdnsServerHostnameOutput {
	return o
}

func (o VdomdnsServerHostnameOutput) ToVdomdnsServerHostnameOutputWithContext(ctx context.Context) VdomdnsServerHostnameOutput {
	return o
}

// DNS server host name list separated by space (maximum 4 domains).
func (o VdomdnsServerHostnameOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdomdnsServerHostname) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

type VdomdnsServerHostnameArrayOutput struct{ *pulumi.OutputState }

func (VdomdnsServerHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VdomdnsServerHostname)(nil)).Elem()
}

func (o VdomdnsServerHostnameArrayOutput) ToVdomdnsServerHostnameArrayOutput() VdomdnsServerHostnameArrayOutput {
	return o
}

func (o VdomdnsServerHostnameArrayOutput) ToVdomdnsServerHostnameArrayOutputWithContext(ctx context.Context) VdomdnsServerHostnameArrayOutput {
	return o
}

func (o VdomdnsServerHostnameArrayOutput) Index(i pulumi.IntInput) VdomdnsServerHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VdomdnsServerHostname {
		return vs[0].([]VdomdnsServerHostname)[vs[1].(int)]
	}).(VdomdnsServerHostnameOutput)
}

type VdomexceptionVdom struct {
	// VDOM name.
	Name *string `pulumi:"name"`
}

// VdomexceptionVdomInput is an input type that accepts VdomexceptionVdomArgs and VdomexceptionVdomOutput values.
// You can construct a concrete instance of `VdomexceptionVdomInput` via:
//
//	VdomexceptionVdomArgs{...}
type VdomexceptionVdomInput interface {
	pulumi.Input

	ToVdomexceptionVdomOutput() VdomexceptionVdomOutput
	ToVdomexceptionVdomOutputWithContext(context.Context) VdomexceptionVdomOutput
}

type VdomexceptionVdomArgs struct {
	// VDOM name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VdomexceptionVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VdomexceptionVdom)(nil)).Elem()
}

func (i VdomexceptionVdomArgs) ToVdomexceptionVdomOutput() VdomexceptionVdomOutput {
	return i.ToVdomexceptionVdomOutputWithContext(context.Background())
}

func (i VdomexceptionVdomArgs) ToVdomexceptionVdomOutputWithContext(ctx context.Context) VdomexceptionVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomexceptionVdomOutput)
}

// VdomexceptionVdomArrayInput is an input type that accepts VdomexceptionVdomArray and VdomexceptionVdomArrayOutput values.
// You can construct a concrete instance of `VdomexceptionVdomArrayInput` via:
//
//	VdomexceptionVdomArray{ VdomexceptionVdomArgs{...} }
type VdomexceptionVdomArrayInput interface {
	pulumi.Input

	ToVdomexceptionVdomArrayOutput() VdomexceptionVdomArrayOutput
	ToVdomexceptionVdomArrayOutputWithContext(context.Context) VdomexceptionVdomArrayOutput
}

type VdomexceptionVdomArray []VdomexceptionVdomInput

func (VdomexceptionVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VdomexceptionVdom)(nil)).Elem()
}

func (i VdomexceptionVdomArray) ToVdomexceptionVdomArrayOutput() VdomexceptionVdomArrayOutput {
	return i.ToVdomexceptionVdomArrayOutputWithContext(context.Background())
}

func (i VdomexceptionVdomArray) ToVdomexceptionVdomArrayOutputWithContext(ctx context.Context) VdomexceptionVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomexceptionVdomArrayOutput)
}

type VdomexceptionVdomOutput struct{ *pulumi.OutputState }

func (VdomexceptionVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VdomexceptionVdom)(nil)).Elem()
}

func (o VdomexceptionVdomOutput) ToVdomexceptionVdomOutput() VdomexceptionVdomOutput {
	return o
}

func (o VdomexceptionVdomOutput) ToVdomexceptionVdomOutputWithContext(ctx context.Context) VdomexceptionVdomOutput {
	return o
}

// VDOM name.
func (o VdomexceptionVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdomexceptionVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VdomexceptionVdomArrayOutput struct{ *pulumi.OutputState }

func (VdomexceptionVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VdomexceptionVdom)(nil)).Elem()
}

func (o VdomexceptionVdomArrayOutput) ToVdomexceptionVdomArrayOutput() VdomexceptionVdomArrayOutput {
	return o
}

func (o VdomexceptionVdomArrayOutput) ToVdomexceptionVdomArrayOutputWithContext(ctx context.Context) VdomexceptionVdomArrayOutput {
	return o
}

func (o VdomexceptionVdomArrayOutput) Index(i pulumi.IntInput) VdomexceptionVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VdomexceptionVdom {
		return vs[0].([]VdomexceptionVdom)[vs[1].(int)]
	}).(VdomexceptionVdomOutput)
}

type VdomnetflowCollector struct {
	// Collector IP.
	CollectorIp *string `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort *int `pulumi:"collectorPort"`
	// ID.
	Id *int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp *string `pulumi:"sourceIp"`
}

// VdomnetflowCollectorInput is an input type that accepts VdomnetflowCollectorArgs and VdomnetflowCollectorOutput values.
// You can construct a concrete instance of `VdomnetflowCollectorInput` via:
//
//	VdomnetflowCollectorArgs{...}
type VdomnetflowCollectorInput interface {
	pulumi.Input

	ToVdomnetflowCollectorOutput() VdomnetflowCollectorOutput
	ToVdomnetflowCollectorOutputWithContext(context.Context) VdomnetflowCollectorOutput
}

type VdomnetflowCollectorArgs struct {
	// Collector IP.
	CollectorIp pulumi.StringPtrInput `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort pulumi.IntPtrInput `pulumi:"collectorPort"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
}

func (VdomnetflowCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VdomnetflowCollector)(nil)).Elem()
}

func (i VdomnetflowCollectorArgs) ToVdomnetflowCollectorOutput() VdomnetflowCollectorOutput {
	return i.ToVdomnetflowCollectorOutputWithContext(context.Background())
}

func (i VdomnetflowCollectorArgs) ToVdomnetflowCollectorOutputWithContext(ctx context.Context) VdomnetflowCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomnetflowCollectorOutput)
}

// VdomnetflowCollectorArrayInput is an input type that accepts VdomnetflowCollectorArray and VdomnetflowCollectorArrayOutput values.
// You can construct a concrete instance of `VdomnetflowCollectorArrayInput` via:
//
//	VdomnetflowCollectorArray{ VdomnetflowCollectorArgs{...} }
type VdomnetflowCollectorArrayInput interface {
	pulumi.Input

	ToVdomnetflowCollectorArrayOutput() VdomnetflowCollectorArrayOutput
	ToVdomnetflowCollectorArrayOutputWithContext(context.Context) VdomnetflowCollectorArrayOutput
}

type VdomnetflowCollectorArray []VdomnetflowCollectorInput

func (VdomnetflowCollectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VdomnetflowCollector)(nil)).Elem()
}

func (i VdomnetflowCollectorArray) ToVdomnetflowCollectorArrayOutput() VdomnetflowCollectorArrayOutput {
	return i.ToVdomnetflowCollectorArrayOutputWithContext(context.Background())
}

func (i VdomnetflowCollectorArray) ToVdomnetflowCollectorArrayOutputWithContext(ctx context.Context) VdomnetflowCollectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomnetflowCollectorArrayOutput)
}

type VdomnetflowCollectorOutput struct{ *pulumi.OutputState }

func (VdomnetflowCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VdomnetflowCollector)(nil)).Elem()
}

func (o VdomnetflowCollectorOutput) ToVdomnetflowCollectorOutput() VdomnetflowCollectorOutput {
	return o
}

func (o VdomnetflowCollectorOutput) ToVdomnetflowCollectorOutputWithContext(ctx context.Context) VdomnetflowCollectorOutput {
	return o
}

// Collector IP.
func (o VdomnetflowCollectorOutput) CollectorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdomnetflowCollector) *string { return v.CollectorIp }).(pulumi.StringPtrOutput)
}

// NetFlow collector port number.
func (o VdomnetflowCollectorOutput) CollectorPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VdomnetflowCollector) *int { return v.CollectorPort }).(pulumi.IntPtrOutput)
}

// ID.
func (o VdomnetflowCollectorOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VdomnetflowCollector) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Specify outgoing interface to reach server.
func (o VdomnetflowCollectorOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdomnetflowCollector) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o VdomnetflowCollectorOutput) InterfaceSelectMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdomnetflowCollector) *string { return v.InterfaceSelectMethod }).(pulumi.StringPtrOutput)
}

// Source IP address for communication with the NetFlow agent.
func (o VdomnetflowCollectorOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdomnetflowCollector) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

type VdomnetflowCollectorArrayOutput struct{ *pulumi.OutputState }

func (VdomnetflowCollectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VdomnetflowCollector)(nil)).Elem()
}

func (o VdomnetflowCollectorArrayOutput) ToVdomnetflowCollectorArrayOutput() VdomnetflowCollectorArrayOutput {
	return o
}

func (o VdomnetflowCollectorArrayOutput) ToVdomnetflowCollectorArrayOutputWithContext(ctx context.Context) VdomnetflowCollectorArrayOutput {
	return o
}

func (o VdomnetflowCollectorArrayOutput) Index(i pulumi.IntInput) VdomnetflowCollectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VdomnetflowCollector {
		return vs[0].([]VdomnetflowCollector)[vs[1].(int)]
	}).(VdomnetflowCollectorOutput)
}

type VdomsflowCollector struct {
	// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
	CollectorIp *string `pulumi:"collectorIp"`
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort *int `pulumi:"collectorPort"`
	// ID.
	Id *int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for sFlow agent.
	SourceIp *string `pulumi:"sourceIp"`
}

// VdomsflowCollectorInput is an input type that accepts VdomsflowCollectorArgs and VdomsflowCollectorOutput values.
// You can construct a concrete instance of `VdomsflowCollectorInput` via:
//
//	VdomsflowCollectorArgs{...}
type VdomsflowCollectorInput interface {
	pulumi.Input

	ToVdomsflowCollectorOutput() VdomsflowCollectorOutput
	ToVdomsflowCollectorOutputWithContext(context.Context) VdomsflowCollectorOutput
}

type VdomsflowCollectorArgs struct {
	// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
	CollectorIp pulumi.StringPtrInput `pulumi:"collectorIp"`
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort pulumi.IntPtrInput `pulumi:"collectorPort"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput `pulumi:"interfaceSelectMethod"`
	// Source IP address for sFlow agent.
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
}

func (VdomsflowCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VdomsflowCollector)(nil)).Elem()
}

func (i VdomsflowCollectorArgs) ToVdomsflowCollectorOutput() VdomsflowCollectorOutput {
	return i.ToVdomsflowCollectorOutputWithContext(context.Background())
}

func (i VdomsflowCollectorArgs) ToVdomsflowCollectorOutputWithContext(ctx context.Context) VdomsflowCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomsflowCollectorOutput)
}

// VdomsflowCollectorArrayInput is an input type that accepts VdomsflowCollectorArray and VdomsflowCollectorArrayOutput values.
// You can construct a concrete instance of `VdomsflowCollectorArrayInput` via:
//
//	VdomsflowCollectorArray{ VdomsflowCollectorArgs{...} }
type VdomsflowCollectorArrayInput interface {
	pulumi.Input

	ToVdomsflowCollectorArrayOutput() VdomsflowCollectorArrayOutput
	ToVdomsflowCollectorArrayOutputWithContext(context.Context) VdomsflowCollectorArrayOutput
}

type VdomsflowCollectorArray []VdomsflowCollectorInput

func (VdomsflowCollectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VdomsflowCollector)(nil)).Elem()
}

func (i VdomsflowCollectorArray) ToVdomsflowCollectorArrayOutput() VdomsflowCollectorArrayOutput {
	return i.ToVdomsflowCollectorArrayOutputWithContext(context.Background())
}

func (i VdomsflowCollectorArray) ToVdomsflowCollectorArrayOutputWithContext(ctx context.Context) VdomsflowCollectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VdomsflowCollectorArrayOutput)
}

type VdomsflowCollectorOutput struct{ *pulumi.OutputState }

func (VdomsflowCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VdomsflowCollector)(nil)).Elem()
}

func (o VdomsflowCollectorOutput) ToVdomsflowCollectorOutput() VdomsflowCollectorOutput {
	return o
}

func (o VdomsflowCollectorOutput) ToVdomsflowCollectorOutputWithContext(ctx context.Context) VdomsflowCollectorOutput {
	return o
}

// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
func (o VdomsflowCollectorOutput) CollectorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdomsflowCollector) *string { return v.CollectorIp }).(pulumi.StringPtrOutput)
}

// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
func (o VdomsflowCollectorOutput) CollectorPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VdomsflowCollector) *int { return v.CollectorPort }).(pulumi.IntPtrOutput)
}

// ID.
func (o VdomsflowCollectorOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VdomsflowCollector) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Specify outgoing interface to reach server.
func (o VdomsflowCollectorOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdomsflowCollector) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o VdomsflowCollectorOutput) InterfaceSelectMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdomsflowCollector) *string { return v.InterfaceSelectMethod }).(pulumi.StringPtrOutput)
}

// Source IP address for sFlow agent.
func (o VdomsflowCollectorOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VdomsflowCollector) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

type VdomsflowCollectorArrayOutput struct{ *pulumi.OutputState }

func (VdomsflowCollectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VdomsflowCollector)(nil)).Elem()
}

func (o VdomsflowCollectorArrayOutput) ToVdomsflowCollectorArrayOutput() VdomsflowCollectorArrayOutput {
	return o
}

func (o VdomsflowCollectorArrayOutput) ToVdomsflowCollectorArrayOutputWithContext(ctx context.Context) VdomsflowCollectorArrayOutput {
	return o
}

func (o VdomsflowCollectorArrayOutput) Index(i pulumi.IntInput) VdomsflowCollectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VdomsflowCollector {
		return vs[0].([]VdomsflowCollector)[vs[1].(int)]
	}).(VdomsflowCollectorOutput)
}

type VirtualswitchPort struct {
	// Alias.
	Alias *string `pulumi:"alias"`
	// Physical interface name.
	Name *string `pulumi:"name"`
}

// VirtualswitchPortInput is an input type that accepts VirtualswitchPortArgs and VirtualswitchPortOutput values.
// You can construct a concrete instance of `VirtualswitchPortInput` via:
//
//	VirtualswitchPortArgs{...}
type VirtualswitchPortInput interface {
	pulumi.Input

	ToVirtualswitchPortOutput() VirtualswitchPortOutput
	ToVirtualswitchPortOutputWithContext(context.Context) VirtualswitchPortOutput
}

type VirtualswitchPortArgs struct {
	// Alias.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// Physical interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualswitchPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualswitchPort)(nil)).Elem()
}

func (i VirtualswitchPortArgs) ToVirtualswitchPortOutput() VirtualswitchPortOutput {
	return i.ToVirtualswitchPortOutputWithContext(context.Background())
}

func (i VirtualswitchPortArgs) ToVirtualswitchPortOutputWithContext(ctx context.Context) VirtualswitchPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualswitchPortOutput)
}

// VirtualswitchPortArrayInput is an input type that accepts VirtualswitchPortArray and VirtualswitchPortArrayOutput values.
// You can construct a concrete instance of `VirtualswitchPortArrayInput` via:
//
//	VirtualswitchPortArray{ VirtualswitchPortArgs{...} }
type VirtualswitchPortArrayInput interface {
	pulumi.Input

	ToVirtualswitchPortArrayOutput() VirtualswitchPortArrayOutput
	ToVirtualswitchPortArrayOutputWithContext(context.Context) VirtualswitchPortArrayOutput
}

type VirtualswitchPortArray []VirtualswitchPortInput

func (VirtualswitchPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualswitchPort)(nil)).Elem()
}

func (i VirtualswitchPortArray) ToVirtualswitchPortArrayOutput() VirtualswitchPortArrayOutput {
	return i.ToVirtualswitchPortArrayOutputWithContext(context.Background())
}

func (i VirtualswitchPortArray) ToVirtualswitchPortArrayOutputWithContext(ctx context.Context) VirtualswitchPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualswitchPortArrayOutput)
}

type VirtualswitchPortOutput struct{ *pulumi.OutputState }

func (VirtualswitchPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualswitchPort)(nil)).Elem()
}

func (o VirtualswitchPortOutput) ToVirtualswitchPortOutput() VirtualswitchPortOutput {
	return o
}

func (o VirtualswitchPortOutput) ToVirtualswitchPortOutputWithContext(ctx context.Context) VirtualswitchPortOutput {
	return o
}

// Alias.
func (o VirtualswitchPortOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualswitchPort) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Physical interface name.
func (o VirtualswitchPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualswitchPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualswitchPortArrayOutput struct{ *pulumi.OutputState }

func (VirtualswitchPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualswitchPort)(nil)).Elem()
}

func (o VirtualswitchPortArrayOutput) ToVirtualswitchPortArrayOutput() VirtualswitchPortArrayOutput {
	return o
}

func (o VirtualswitchPortArrayOutput) ToVirtualswitchPortArrayOutputWithContext(ctx context.Context) VirtualswitchPortArrayOutput {
	return o
}

func (o VirtualswitchPortArrayOutput) Index(i pulumi.IntInput) VirtualswitchPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualswitchPort {
		return vs[0].([]VirtualswitchPort)[vs[1].(int)]
	}).(VirtualswitchPortOutput)
}

type VirtualwanlinkFailAlertInterface struct {
	// Physical interface name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkFailAlertInterfaceInput is an input type that accepts VirtualwanlinkFailAlertInterfaceArgs and VirtualwanlinkFailAlertInterfaceOutput values.
// You can construct a concrete instance of `VirtualwanlinkFailAlertInterfaceInput` via:
//
//	VirtualwanlinkFailAlertInterfaceArgs{...}
type VirtualwanlinkFailAlertInterfaceInput interface {
	pulumi.Input

	ToVirtualwanlinkFailAlertInterfaceOutput() VirtualwanlinkFailAlertInterfaceOutput
	ToVirtualwanlinkFailAlertInterfaceOutputWithContext(context.Context) VirtualwanlinkFailAlertInterfaceOutput
}

type VirtualwanlinkFailAlertInterfaceArgs struct {
	// Physical interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkFailAlertInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (i VirtualwanlinkFailAlertInterfaceArgs) ToVirtualwanlinkFailAlertInterfaceOutput() VirtualwanlinkFailAlertInterfaceOutput {
	return i.ToVirtualwanlinkFailAlertInterfaceOutputWithContext(context.Background())
}

func (i VirtualwanlinkFailAlertInterfaceArgs) ToVirtualwanlinkFailAlertInterfaceOutputWithContext(ctx context.Context) VirtualwanlinkFailAlertInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkFailAlertInterfaceOutput)
}

// VirtualwanlinkFailAlertInterfaceArrayInput is an input type that accepts VirtualwanlinkFailAlertInterfaceArray and VirtualwanlinkFailAlertInterfaceArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkFailAlertInterfaceArrayInput` via:
//
//	VirtualwanlinkFailAlertInterfaceArray{ VirtualwanlinkFailAlertInterfaceArgs{...} }
type VirtualwanlinkFailAlertInterfaceArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkFailAlertInterfaceArrayOutput() VirtualwanlinkFailAlertInterfaceArrayOutput
	ToVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(context.Context) VirtualwanlinkFailAlertInterfaceArrayOutput
}

type VirtualwanlinkFailAlertInterfaceArray []VirtualwanlinkFailAlertInterfaceInput

func (VirtualwanlinkFailAlertInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (i VirtualwanlinkFailAlertInterfaceArray) ToVirtualwanlinkFailAlertInterfaceArrayOutput() VirtualwanlinkFailAlertInterfaceArrayOutput {
	return i.ToVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkFailAlertInterfaceArray) ToVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(ctx context.Context) VirtualwanlinkFailAlertInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkFailAlertInterfaceArrayOutput)
}

type VirtualwanlinkFailAlertInterfaceOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkFailAlertInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (o VirtualwanlinkFailAlertInterfaceOutput) ToVirtualwanlinkFailAlertInterfaceOutput() VirtualwanlinkFailAlertInterfaceOutput {
	return o
}

func (o VirtualwanlinkFailAlertInterfaceOutput) ToVirtualwanlinkFailAlertInterfaceOutputWithContext(ctx context.Context) VirtualwanlinkFailAlertInterfaceOutput {
	return o
}

// Physical interface name.
func (o VirtualwanlinkFailAlertInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkFailAlertInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkFailAlertInterfaceArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkFailAlertInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (o VirtualwanlinkFailAlertInterfaceArrayOutput) ToVirtualwanlinkFailAlertInterfaceArrayOutput() VirtualwanlinkFailAlertInterfaceArrayOutput {
	return o
}

func (o VirtualwanlinkFailAlertInterfaceArrayOutput) ToVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(ctx context.Context) VirtualwanlinkFailAlertInterfaceArrayOutput {
	return o
}

func (o VirtualwanlinkFailAlertInterfaceArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkFailAlertInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkFailAlertInterface {
		return vs[0].([]VirtualwanlinkFailAlertInterface)[vs[1].(int)]
	}).(VirtualwanlinkFailAlertInterfaceOutput)
}

type VirtualwanlinkHealthCheck struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Differentiated services code point (DSCP) in the IP header of the probe packet.
	Diffservcode *string `pulumi:"diffservcode"`
	// Fully qualified domain name to resolve for the DNS probe.
	DnsRequestDomain *string `pulumi:"dnsRequestDomain"`
	// Number of failures before server is considered lost (1 - 3600, default = 5).
	Failtime *int `pulumi:"failtime"`
	// HA election priority (1 - 50).
	HaPriority *int `pulumi:"haPriority"`
	// String in the http-agent field in the HTTP header.
	HttpAgent *string `pulumi:"httpAgent"`
	// URL used to communicate with the server if the protocol if the protocol is HTTP.
	HttpGet *string `pulumi:"httpGet"`
	// Response string expected from the server if the protocol is HTTP.
	HttpMatch *string `pulumi:"httpMatch"`
	// Status check interval, or the time between attempting to connect to the server (1 - 3600 sec, default = 5).
	Interval *int `pulumi:"interval"`
	// Member sequence number list. The structure of `members` block is documented below.
	Members []VirtualwanlinkHealthCheckMember `pulumi:"members"`
	// Status check or health check name.
	Name *string `pulumi:"name"`
	// Packet size of a twamp test session,
	PacketSize *int `pulumi:"packetSize"`
	// Twamp controller password in authentication mode
	Password *string `pulumi:"password"`
	// Port number used to communicate with the server over the selected protocol.
	Port *int `pulumi:"port"`
	// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
	ProbeCount *int `pulumi:"probeCount"`
	// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
	ProbePackets *string `pulumi:"probePackets"`
	// Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500).
	ProbeTimeout *int `pulumi:"probeTimeout"`
	// Protocol used to determine if the FortiGate can communicate with the server.
	Protocol *string `pulumi:"protocol"`
	// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
	Recoverytime *int `pulumi:"recoverytime"`
	// Twamp controller security mode. Valid values: `none`, `authentication`.
	SecurityMode *string `pulumi:"securityMode"`
	// IP address or FQDN name of the server.
	Server *string `pulumi:"server"`
	// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
	SlaFailLogPeriod *int `pulumi:"slaFailLogPeriod"`
	// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
	SlaPassLogPeriod *int `pulumi:"slaPassLogPeriod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas []VirtualwanlinkHealthCheckSla `pulumi:"slas"`
	// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
	SystemDns *string `pulumi:"systemDns"`
	// Alert threshold for jitter (ms, default = 0).
	ThresholdAlertJitter *int `pulumi:"thresholdAlertJitter"`
	// Alert threshold for latency (ms, default = 0).
	ThresholdAlertLatency *int `pulumi:"thresholdAlertLatency"`
	// Alert threshold for packet loss (percentage, default = 0).
	ThresholdAlertPacketloss *int `pulumi:"thresholdAlertPacketloss"`
	// Warning threshold for jitter (ms, default = 0).
	ThresholdWarningJitter *int `pulumi:"thresholdWarningJitter"`
	// Warning threshold for latency (ms, default = 0).
	ThresholdWarningLatency *int `pulumi:"thresholdWarningLatency"`
	// Warning threshold for packet loss (percentage, default = 0).
	ThresholdWarningPacketloss *int `pulumi:"thresholdWarningPacketloss"`
	// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
	UpdateCascadeInterface *string `pulumi:"updateCascadeInterface"`
	// Enable/disable updating the static route. Valid values: `enable`, `disable`.
	UpdateStaticRoute *string `pulumi:"updateStaticRoute"`
}

// VirtualwanlinkHealthCheckInput is an input type that accepts VirtualwanlinkHealthCheckArgs and VirtualwanlinkHealthCheckOutput values.
// You can construct a concrete instance of `VirtualwanlinkHealthCheckInput` via:
//
//	VirtualwanlinkHealthCheckArgs{...}
type VirtualwanlinkHealthCheckInput interface {
	pulumi.Input

	ToVirtualwanlinkHealthCheckOutput() VirtualwanlinkHealthCheckOutput
	ToVirtualwanlinkHealthCheckOutputWithContext(context.Context) VirtualwanlinkHealthCheckOutput
}

type VirtualwanlinkHealthCheckArgs struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Differentiated services code point (DSCP) in the IP header of the probe packet.
	Diffservcode pulumi.StringPtrInput `pulumi:"diffservcode"`
	// Fully qualified domain name to resolve for the DNS probe.
	DnsRequestDomain pulumi.StringPtrInput `pulumi:"dnsRequestDomain"`
	// Number of failures before server is considered lost (1 - 3600, default = 5).
	Failtime pulumi.IntPtrInput `pulumi:"failtime"`
	// HA election priority (1 - 50).
	HaPriority pulumi.IntPtrInput `pulumi:"haPriority"`
	// String in the http-agent field in the HTTP header.
	HttpAgent pulumi.StringPtrInput `pulumi:"httpAgent"`
	// URL used to communicate with the server if the protocol if the protocol is HTTP.
	HttpGet pulumi.StringPtrInput `pulumi:"httpGet"`
	// Response string expected from the server if the protocol is HTTP.
	HttpMatch pulumi.StringPtrInput `pulumi:"httpMatch"`
	// Status check interval, or the time between attempting to connect to the server (1 - 3600 sec, default = 5).
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Member sequence number list. The structure of `members` block is documented below.
	Members VirtualwanlinkHealthCheckMemberArrayInput `pulumi:"members"`
	// Status check or health check name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Packet size of a twamp test session,
	PacketSize pulumi.IntPtrInput `pulumi:"packetSize"`
	// Twamp controller password in authentication mode
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port number used to communicate with the server over the selected protocol.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
	ProbeCount pulumi.IntPtrInput `pulumi:"probeCount"`
	// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
	ProbePackets pulumi.StringPtrInput `pulumi:"probePackets"`
	// Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500).
	ProbeTimeout pulumi.IntPtrInput `pulumi:"probeTimeout"`
	// Protocol used to determine if the FortiGate can communicate with the server.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
	Recoverytime pulumi.IntPtrInput `pulumi:"recoverytime"`
	// Twamp controller security mode. Valid values: `none`, `authentication`.
	SecurityMode pulumi.StringPtrInput `pulumi:"securityMode"`
	// IP address or FQDN name of the server.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
	SlaFailLogPeriod pulumi.IntPtrInput `pulumi:"slaFailLogPeriod"`
	// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
	SlaPassLogPeriod pulumi.IntPtrInput `pulumi:"slaPassLogPeriod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas VirtualwanlinkHealthCheckSlaArrayInput `pulumi:"slas"`
	// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
	SystemDns pulumi.StringPtrInput `pulumi:"systemDns"`
	// Alert threshold for jitter (ms, default = 0).
	ThresholdAlertJitter pulumi.IntPtrInput `pulumi:"thresholdAlertJitter"`
	// Alert threshold for latency (ms, default = 0).
	ThresholdAlertLatency pulumi.IntPtrInput `pulumi:"thresholdAlertLatency"`
	// Alert threshold for packet loss (percentage, default = 0).
	ThresholdAlertPacketloss pulumi.IntPtrInput `pulumi:"thresholdAlertPacketloss"`
	// Warning threshold for jitter (ms, default = 0).
	ThresholdWarningJitter pulumi.IntPtrInput `pulumi:"thresholdWarningJitter"`
	// Warning threshold for latency (ms, default = 0).
	ThresholdWarningLatency pulumi.IntPtrInput `pulumi:"thresholdWarningLatency"`
	// Warning threshold for packet loss (percentage, default = 0).
	ThresholdWarningPacketloss pulumi.IntPtrInput `pulumi:"thresholdWarningPacketloss"`
	// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
	UpdateCascadeInterface pulumi.StringPtrInput `pulumi:"updateCascadeInterface"`
	// Enable/disable updating the static route. Valid values: `enable`, `disable`.
	UpdateStaticRoute pulumi.StringPtrInput `pulumi:"updateStaticRoute"`
}

func (VirtualwanlinkHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkHealthCheck)(nil)).Elem()
}

func (i VirtualwanlinkHealthCheckArgs) ToVirtualwanlinkHealthCheckOutput() VirtualwanlinkHealthCheckOutput {
	return i.ToVirtualwanlinkHealthCheckOutputWithContext(context.Background())
}

func (i VirtualwanlinkHealthCheckArgs) ToVirtualwanlinkHealthCheckOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkHealthCheckOutput)
}

// VirtualwanlinkHealthCheckArrayInput is an input type that accepts VirtualwanlinkHealthCheckArray and VirtualwanlinkHealthCheckArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkHealthCheckArrayInput` via:
//
//	VirtualwanlinkHealthCheckArray{ VirtualwanlinkHealthCheckArgs{...} }
type VirtualwanlinkHealthCheckArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkHealthCheckArrayOutput() VirtualwanlinkHealthCheckArrayOutput
	ToVirtualwanlinkHealthCheckArrayOutputWithContext(context.Context) VirtualwanlinkHealthCheckArrayOutput
}

type VirtualwanlinkHealthCheckArray []VirtualwanlinkHealthCheckInput

func (VirtualwanlinkHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkHealthCheck)(nil)).Elem()
}

func (i VirtualwanlinkHealthCheckArray) ToVirtualwanlinkHealthCheckArrayOutput() VirtualwanlinkHealthCheckArrayOutput {
	return i.ToVirtualwanlinkHealthCheckArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkHealthCheckArray) ToVirtualwanlinkHealthCheckArrayOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkHealthCheckArrayOutput)
}

type VirtualwanlinkHealthCheckOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkHealthCheck)(nil)).Elem()
}

func (o VirtualwanlinkHealthCheckOutput) ToVirtualwanlinkHealthCheckOutput() VirtualwanlinkHealthCheckOutput {
	return o
}

func (o VirtualwanlinkHealthCheckOutput) ToVirtualwanlinkHealthCheckOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckOutput {
	return o
}

// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
func (o VirtualwanlinkHealthCheckOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Differentiated services code point (DSCP) in the IP header of the probe packet.
func (o VirtualwanlinkHealthCheckOutput) Diffservcode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.Diffservcode }).(pulumi.StringPtrOutput)
}

// Fully qualified domain name to resolve for the DNS probe.
func (o VirtualwanlinkHealthCheckOutput) DnsRequestDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.DnsRequestDomain }).(pulumi.StringPtrOutput)
}

// Number of failures before server is considered lost (1 - 3600, default = 5).
func (o VirtualwanlinkHealthCheckOutput) Failtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.Failtime }).(pulumi.IntPtrOutput)
}

// HA election priority (1 - 50).
func (o VirtualwanlinkHealthCheckOutput) HaPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.HaPriority }).(pulumi.IntPtrOutput)
}

// String in the http-agent field in the HTTP header.
func (o VirtualwanlinkHealthCheckOutput) HttpAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.HttpAgent }).(pulumi.StringPtrOutput)
}

// URL used to communicate with the server if the protocol if the protocol is HTTP.
func (o VirtualwanlinkHealthCheckOutput) HttpGet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.HttpGet }).(pulumi.StringPtrOutput)
}

// Response string expected from the server if the protocol is HTTP.
func (o VirtualwanlinkHealthCheckOutput) HttpMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.HttpMatch }).(pulumi.StringPtrOutput)
}

// Status check interval, or the time between attempting to connect to the server (1 - 3600 sec, default = 5).
func (o VirtualwanlinkHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Member sequence number list. The structure of `members` block is documented below.
func (o VirtualwanlinkHealthCheckOutput) Members() VirtualwanlinkHealthCheckMemberArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) []VirtualwanlinkHealthCheckMember { return v.Members }).(VirtualwanlinkHealthCheckMemberArrayOutput)
}

// Status check or health check name.
func (o VirtualwanlinkHealthCheckOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Packet size of a twamp test session,
func (o VirtualwanlinkHealthCheckOutput) PacketSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.PacketSize }).(pulumi.IntPtrOutput)
}

// Twamp controller password in authentication mode
func (o VirtualwanlinkHealthCheckOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port number used to communicate with the server over the selected protocol.
func (o VirtualwanlinkHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
func (o VirtualwanlinkHealthCheckOutput) ProbeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.ProbeCount }).(pulumi.IntPtrOutput)
}

// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
func (o VirtualwanlinkHealthCheckOutput) ProbePackets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.ProbePackets }).(pulumi.StringPtrOutput)
}

// Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500).
func (o VirtualwanlinkHealthCheckOutput) ProbeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.ProbeTimeout }).(pulumi.IntPtrOutput)
}

// Protocol used to determine if the FortiGate can communicate with the server.
func (o VirtualwanlinkHealthCheckOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
func (o VirtualwanlinkHealthCheckOutput) Recoverytime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.Recoverytime }).(pulumi.IntPtrOutput)
}

// Twamp controller security mode. Valid values: `none`, `authentication`.
func (o VirtualwanlinkHealthCheckOutput) SecurityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.SecurityMode }).(pulumi.StringPtrOutput)
}

// IP address or FQDN name of the server.
func (o VirtualwanlinkHealthCheckOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
func (o VirtualwanlinkHealthCheckOutput) SlaFailLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.SlaFailLogPeriod }).(pulumi.IntPtrOutput)
}

// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
func (o VirtualwanlinkHealthCheckOutput) SlaPassLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.SlaPassLogPeriod }).(pulumi.IntPtrOutput)
}

// Service level agreement (SLA). The structure of `sla` block is documented below.
func (o VirtualwanlinkHealthCheckOutput) Slas() VirtualwanlinkHealthCheckSlaArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) []VirtualwanlinkHealthCheckSla { return v.Slas }).(VirtualwanlinkHealthCheckSlaArrayOutput)
}

// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
func (o VirtualwanlinkHealthCheckOutput) SystemDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.SystemDns }).(pulumi.StringPtrOutput)
}

// Alert threshold for jitter (ms, default = 0).
func (o VirtualwanlinkHealthCheckOutput) ThresholdAlertJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.ThresholdAlertJitter }).(pulumi.IntPtrOutput)
}

// Alert threshold for latency (ms, default = 0).
func (o VirtualwanlinkHealthCheckOutput) ThresholdAlertLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.ThresholdAlertLatency }).(pulumi.IntPtrOutput)
}

// Alert threshold for packet loss (percentage, default = 0).
func (o VirtualwanlinkHealthCheckOutput) ThresholdAlertPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.ThresholdAlertPacketloss }).(pulumi.IntPtrOutput)
}

// Warning threshold for jitter (ms, default = 0).
func (o VirtualwanlinkHealthCheckOutput) ThresholdWarningJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.ThresholdWarningJitter }).(pulumi.IntPtrOutput)
}

// Warning threshold for latency (ms, default = 0).
func (o VirtualwanlinkHealthCheckOutput) ThresholdWarningLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.ThresholdWarningLatency }).(pulumi.IntPtrOutput)
}

// Warning threshold for packet loss (percentage, default = 0).
func (o VirtualwanlinkHealthCheckOutput) ThresholdWarningPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *int { return v.ThresholdWarningPacketloss }).(pulumi.IntPtrOutput)
}

// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
func (o VirtualwanlinkHealthCheckOutput) UpdateCascadeInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.UpdateCascadeInterface }).(pulumi.StringPtrOutput)
}

// Enable/disable updating the static route. Valid values: `enable`, `disable`.
func (o VirtualwanlinkHealthCheckOutput) UpdateStaticRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheck) *string { return v.UpdateStaticRoute }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkHealthCheck)(nil)).Elem()
}

func (o VirtualwanlinkHealthCheckArrayOutput) ToVirtualwanlinkHealthCheckArrayOutput() VirtualwanlinkHealthCheckArrayOutput {
	return o
}

func (o VirtualwanlinkHealthCheckArrayOutput) ToVirtualwanlinkHealthCheckArrayOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckArrayOutput {
	return o
}

func (o VirtualwanlinkHealthCheckArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkHealthCheck {
		return vs[0].([]VirtualwanlinkHealthCheck)[vs[1].(int)]
	}).(VirtualwanlinkHealthCheckOutput)
}

type VirtualwanlinkHealthCheckMember struct {
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
}

// VirtualwanlinkHealthCheckMemberInput is an input type that accepts VirtualwanlinkHealthCheckMemberArgs and VirtualwanlinkHealthCheckMemberOutput values.
// You can construct a concrete instance of `VirtualwanlinkHealthCheckMemberInput` via:
//
//	VirtualwanlinkHealthCheckMemberArgs{...}
type VirtualwanlinkHealthCheckMemberInput interface {
	pulumi.Input

	ToVirtualwanlinkHealthCheckMemberOutput() VirtualwanlinkHealthCheckMemberOutput
	ToVirtualwanlinkHealthCheckMemberOutputWithContext(context.Context) VirtualwanlinkHealthCheckMemberOutput
}

type VirtualwanlinkHealthCheckMemberArgs struct {
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (VirtualwanlinkHealthCheckMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (i VirtualwanlinkHealthCheckMemberArgs) ToVirtualwanlinkHealthCheckMemberOutput() VirtualwanlinkHealthCheckMemberOutput {
	return i.ToVirtualwanlinkHealthCheckMemberOutputWithContext(context.Background())
}

func (i VirtualwanlinkHealthCheckMemberArgs) ToVirtualwanlinkHealthCheckMemberOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkHealthCheckMemberOutput)
}

// VirtualwanlinkHealthCheckMemberArrayInput is an input type that accepts VirtualwanlinkHealthCheckMemberArray and VirtualwanlinkHealthCheckMemberArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkHealthCheckMemberArrayInput` via:
//
//	VirtualwanlinkHealthCheckMemberArray{ VirtualwanlinkHealthCheckMemberArgs{...} }
type VirtualwanlinkHealthCheckMemberArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkHealthCheckMemberArrayOutput() VirtualwanlinkHealthCheckMemberArrayOutput
	ToVirtualwanlinkHealthCheckMemberArrayOutputWithContext(context.Context) VirtualwanlinkHealthCheckMemberArrayOutput
}

type VirtualwanlinkHealthCheckMemberArray []VirtualwanlinkHealthCheckMemberInput

func (VirtualwanlinkHealthCheckMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (i VirtualwanlinkHealthCheckMemberArray) ToVirtualwanlinkHealthCheckMemberArrayOutput() VirtualwanlinkHealthCheckMemberArrayOutput {
	return i.ToVirtualwanlinkHealthCheckMemberArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkHealthCheckMemberArray) ToVirtualwanlinkHealthCheckMemberArrayOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkHealthCheckMemberArrayOutput)
}

type VirtualwanlinkHealthCheckMemberOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkHealthCheckMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (o VirtualwanlinkHealthCheckMemberOutput) ToVirtualwanlinkHealthCheckMemberOutput() VirtualwanlinkHealthCheckMemberOutput {
	return o
}

func (o VirtualwanlinkHealthCheckMemberOutput) ToVirtualwanlinkHealthCheckMemberOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckMemberOutput {
	return o
}

// Member sequence number.
func (o VirtualwanlinkHealthCheckMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheckMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type VirtualwanlinkHealthCheckMemberArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkHealthCheckMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (o VirtualwanlinkHealthCheckMemberArrayOutput) ToVirtualwanlinkHealthCheckMemberArrayOutput() VirtualwanlinkHealthCheckMemberArrayOutput {
	return o
}

func (o VirtualwanlinkHealthCheckMemberArrayOutput) ToVirtualwanlinkHealthCheckMemberArrayOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckMemberArrayOutput {
	return o
}

func (o VirtualwanlinkHealthCheckMemberArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkHealthCheckMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkHealthCheckMember {
		return vs[0].([]VirtualwanlinkHealthCheckMember)[vs[1].(int)]
	}).(VirtualwanlinkHealthCheckMemberOutput)
}

type VirtualwanlinkHealthCheckSla struct {
	// SLA ID.
	Id *int `pulumi:"id"`
	// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	JitterThreshold *int `pulumi:"jitterThreshold"`
	// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	LatencyThreshold *int `pulumi:"latencyThreshold"`
	// Criteria on which to base link selection. Valid values: `latency`, `jitter`, `packet-loss`.
	LinkCostFactor *string `pulumi:"linkCostFactor"`
	// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
	PacketlossThreshold *int `pulumi:"packetlossThreshold"`
}

// VirtualwanlinkHealthCheckSlaInput is an input type that accepts VirtualwanlinkHealthCheckSlaArgs and VirtualwanlinkHealthCheckSlaOutput values.
// You can construct a concrete instance of `VirtualwanlinkHealthCheckSlaInput` via:
//
//	VirtualwanlinkHealthCheckSlaArgs{...}
type VirtualwanlinkHealthCheckSlaInput interface {
	pulumi.Input

	ToVirtualwanlinkHealthCheckSlaOutput() VirtualwanlinkHealthCheckSlaOutput
	ToVirtualwanlinkHealthCheckSlaOutputWithContext(context.Context) VirtualwanlinkHealthCheckSlaOutput
}

type VirtualwanlinkHealthCheckSlaArgs struct {
	// SLA ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	JitterThreshold pulumi.IntPtrInput `pulumi:"jitterThreshold"`
	// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	LatencyThreshold pulumi.IntPtrInput `pulumi:"latencyThreshold"`
	// Criteria on which to base link selection. Valid values: `latency`, `jitter`, `packet-loss`.
	LinkCostFactor pulumi.StringPtrInput `pulumi:"linkCostFactor"`
	// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
	PacketlossThreshold pulumi.IntPtrInput `pulumi:"packetlossThreshold"`
}

func (VirtualwanlinkHealthCheckSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (i VirtualwanlinkHealthCheckSlaArgs) ToVirtualwanlinkHealthCheckSlaOutput() VirtualwanlinkHealthCheckSlaOutput {
	return i.ToVirtualwanlinkHealthCheckSlaOutputWithContext(context.Background())
}

func (i VirtualwanlinkHealthCheckSlaArgs) ToVirtualwanlinkHealthCheckSlaOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkHealthCheckSlaOutput)
}

// VirtualwanlinkHealthCheckSlaArrayInput is an input type that accepts VirtualwanlinkHealthCheckSlaArray and VirtualwanlinkHealthCheckSlaArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkHealthCheckSlaArrayInput` via:
//
//	VirtualwanlinkHealthCheckSlaArray{ VirtualwanlinkHealthCheckSlaArgs{...} }
type VirtualwanlinkHealthCheckSlaArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkHealthCheckSlaArrayOutput() VirtualwanlinkHealthCheckSlaArrayOutput
	ToVirtualwanlinkHealthCheckSlaArrayOutputWithContext(context.Context) VirtualwanlinkHealthCheckSlaArrayOutput
}

type VirtualwanlinkHealthCheckSlaArray []VirtualwanlinkHealthCheckSlaInput

func (VirtualwanlinkHealthCheckSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (i VirtualwanlinkHealthCheckSlaArray) ToVirtualwanlinkHealthCheckSlaArrayOutput() VirtualwanlinkHealthCheckSlaArrayOutput {
	return i.ToVirtualwanlinkHealthCheckSlaArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkHealthCheckSlaArray) ToVirtualwanlinkHealthCheckSlaArrayOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkHealthCheckSlaArrayOutput)
}

type VirtualwanlinkHealthCheckSlaOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkHealthCheckSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (o VirtualwanlinkHealthCheckSlaOutput) ToVirtualwanlinkHealthCheckSlaOutput() VirtualwanlinkHealthCheckSlaOutput {
	return o
}

func (o VirtualwanlinkHealthCheckSlaOutput) ToVirtualwanlinkHealthCheckSlaOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckSlaOutput {
	return o
}

// SLA ID.
func (o VirtualwanlinkHealthCheckSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheckSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
func (o VirtualwanlinkHealthCheckSlaOutput) JitterThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheckSla) *int { return v.JitterThreshold }).(pulumi.IntPtrOutput)
}

// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
func (o VirtualwanlinkHealthCheckSlaOutput) LatencyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheckSla) *int { return v.LatencyThreshold }).(pulumi.IntPtrOutput)
}

// Criteria on which to base link selection. Valid values: `latency`, `jitter`, `packet-loss`.
func (o VirtualwanlinkHealthCheckSlaOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheckSla) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
func (o VirtualwanlinkHealthCheckSlaOutput) PacketlossThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkHealthCheckSla) *int { return v.PacketlossThreshold }).(pulumi.IntPtrOutput)
}

type VirtualwanlinkHealthCheckSlaArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkHealthCheckSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (o VirtualwanlinkHealthCheckSlaArrayOutput) ToVirtualwanlinkHealthCheckSlaArrayOutput() VirtualwanlinkHealthCheckSlaArrayOutput {
	return o
}

func (o VirtualwanlinkHealthCheckSlaArrayOutput) ToVirtualwanlinkHealthCheckSlaArrayOutputWithContext(ctx context.Context) VirtualwanlinkHealthCheckSlaArrayOutput {
	return o
}

func (o VirtualwanlinkHealthCheckSlaArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkHealthCheckSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkHealthCheckSla {
		return vs[0].([]VirtualwanlinkHealthCheckSla)[vs[1].(int)]
	}).(VirtualwanlinkHealthCheckSlaOutput)
}

type VirtualwanlinkMember struct {
	// Comments.
	Comment *string `pulumi:"comment"`
	// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
	Cost *int `pulumi:"cost"`
	// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
	Gateway *string `pulumi:"gateway"`
	// IPv6 gateway.
	Gateway6 *string `pulumi:"gateway6"`
	// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	IngressSpilloverThreshold *int `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// Priority of the interface (0 - 4294967295). Used for SD-WAN rules or priority rules.
	Priority *int `pulumi:"priority"`
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
	// Source IP address used in the health-check packet to the server.
	Source *string `pulumi:"source"`
	// Source IPv6 address used in the health-check packet to the server.
	Source6 *string `pulumi:"source6"`
	// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	SpilloverThreshold *int `pulumi:"spilloverThreshold"`
	// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Measured volume ratio (this value / sum of all values = percentage of link volume, 0 - 255).
	VolumeRatio *int `pulumi:"volumeRatio"`
	// Weight of this interface for weighted load balancing. (0 - 255) More traffic is directed to interfaces with higher weights.
	Weight *int `pulumi:"weight"`
}

// VirtualwanlinkMemberInput is an input type that accepts VirtualwanlinkMemberArgs and VirtualwanlinkMemberOutput values.
// You can construct a concrete instance of `VirtualwanlinkMemberInput` via:
//
//	VirtualwanlinkMemberArgs{...}
type VirtualwanlinkMemberInput interface {
	pulumi.Input

	ToVirtualwanlinkMemberOutput() VirtualwanlinkMemberOutput
	ToVirtualwanlinkMemberOutputWithContext(context.Context) VirtualwanlinkMemberOutput
}

type VirtualwanlinkMemberArgs struct {
	// Comments.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// IPv6 gateway.
	Gateway6 pulumi.StringPtrInput `pulumi:"gateway6"`
	// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	IngressSpilloverThreshold pulumi.IntPtrInput `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Priority of the interface (0 - 4294967295). Used for SD-WAN rules or priority rules.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
	// Source IP address used in the health-check packet to the server.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Source IPv6 address used in the health-check packet to the server.
	Source6 pulumi.StringPtrInput `pulumi:"source6"`
	// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	SpilloverThreshold pulumi.IntPtrInput `pulumi:"spilloverThreshold"`
	// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Measured volume ratio (this value / sum of all values = percentage of link volume, 0 - 255).
	VolumeRatio pulumi.IntPtrInput `pulumi:"volumeRatio"`
	// Weight of this interface for weighted load balancing. (0 - 255) More traffic is directed to interfaces with higher weights.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (VirtualwanlinkMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkMember)(nil)).Elem()
}

func (i VirtualwanlinkMemberArgs) ToVirtualwanlinkMemberOutput() VirtualwanlinkMemberOutput {
	return i.ToVirtualwanlinkMemberOutputWithContext(context.Background())
}

func (i VirtualwanlinkMemberArgs) ToVirtualwanlinkMemberOutputWithContext(ctx context.Context) VirtualwanlinkMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkMemberOutput)
}

// VirtualwanlinkMemberArrayInput is an input type that accepts VirtualwanlinkMemberArray and VirtualwanlinkMemberArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkMemberArrayInput` via:
//
//	VirtualwanlinkMemberArray{ VirtualwanlinkMemberArgs{...} }
type VirtualwanlinkMemberArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkMemberArrayOutput() VirtualwanlinkMemberArrayOutput
	ToVirtualwanlinkMemberArrayOutputWithContext(context.Context) VirtualwanlinkMemberArrayOutput
}

type VirtualwanlinkMemberArray []VirtualwanlinkMemberInput

func (VirtualwanlinkMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkMember)(nil)).Elem()
}

func (i VirtualwanlinkMemberArray) ToVirtualwanlinkMemberArrayOutput() VirtualwanlinkMemberArrayOutput {
	return i.ToVirtualwanlinkMemberArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkMemberArray) ToVirtualwanlinkMemberArrayOutputWithContext(ctx context.Context) VirtualwanlinkMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkMemberArrayOutput)
}

type VirtualwanlinkMemberOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkMember)(nil)).Elem()
}

func (o VirtualwanlinkMemberOutput) ToVirtualwanlinkMemberOutput() VirtualwanlinkMemberOutput {
	return o
}

func (o VirtualwanlinkMemberOutput) ToVirtualwanlinkMemberOutputWithContext(ctx context.Context) VirtualwanlinkMemberOutput {
	return o
}

// Comments.
func (o VirtualwanlinkMemberOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
func (o VirtualwanlinkMemberOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
func (o VirtualwanlinkMemberOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// IPv6 gateway.
func (o VirtualwanlinkMemberOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
func (o VirtualwanlinkMemberOutput) IngressSpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *int { return v.IngressSpilloverThreshold }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o VirtualwanlinkMemberOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Priority of the interface (0 - 4294967295). Used for SD-WAN rules or priority rules.
func (o VirtualwanlinkMemberOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Member sequence number.
func (o VirtualwanlinkMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

// Source IP address used in the health-check packet to the server.
func (o VirtualwanlinkMemberOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Source IPv6 address used in the health-check packet to the server.
func (o VirtualwanlinkMemberOutput) Source6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *string { return v.Source6 }).(pulumi.StringPtrOutput)
}

// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
func (o VirtualwanlinkMemberOutput) SpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *int { return v.SpilloverThreshold }).(pulumi.IntPtrOutput)
}

// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
func (o VirtualwanlinkMemberOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Measured volume ratio (this value / sum of all values = percentage of link volume, 0 - 255).
func (o VirtualwanlinkMemberOutput) VolumeRatio() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *int { return v.VolumeRatio }).(pulumi.IntPtrOutput)
}

// Weight of this interface for weighted load balancing. (0 - 255) More traffic is directed to interfaces with higher weights.
func (o VirtualwanlinkMemberOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkMember) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type VirtualwanlinkMemberArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkMember)(nil)).Elem()
}

func (o VirtualwanlinkMemberArrayOutput) ToVirtualwanlinkMemberArrayOutput() VirtualwanlinkMemberArrayOutput {
	return o
}

func (o VirtualwanlinkMemberArrayOutput) ToVirtualwanlinkMemberArrayOutputWithContext(ctx context.Context) VirtualwanlinkMemberArrayOutput {
	return o
}

func (o VirtualwanlinkMemberArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkMember {
		return vs[0].([]VirtualwanlinkMember)[vs[1].(int)]
	}).(VirtualwanlinkMemberOutput)
}

type VirtualwanlinkNeighbor struct {
	// SD-WAN health-check name.
	HealthCheck *string `pulumi:"healthCheck"`
	// IP address of neighbor.
	Ip *string `pulumi:"ip"`
	// Member sequence number.
	Member *int `pulumi:"member"`
	// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// SLA ID.
	SlaId *int `pulumi:"slaId"`
}

// VirtualwanlinkNeighborInput is an input type that accepts VirtualwanlinkNeighborArgs and VirtualwanlinkNeighborOutput values.
// You can construct a concrete instance of `VirtualwanlinkNeighborInput` via:
//
//	VirtualwanlinkNeighborArgs{...}
type VirtualwanlinkNeighborInput interface {
	pulumi.Input

	ToVirtualwanlinkNeighborOutput() VirtualwanlinkNeighborOutput
	ToVirtualwanlinkNeighborOutputWithContext(context.Context) VirtualwanlinkNeighborOutput
}

type VirtualwanlinkNeighborArgs struct {
	// SD-WAN health-check name.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// IP address of neighbor.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Member sequence number.
	Member pulumi.IntPtrInput `pulumi:"member"`
	// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// SLA ID.
	SlaId pulumi.IntPtrInput `pulumi:"slaId"`
}

func (VirtualwanlinkNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkNeighbor)(nil)).Elem()
}

func (i VirtualwanlinkNeighborArgs) ToVirtualwanlinkNeighborOutput() VirtualwanlinkNeighborOutput {
	return i.ToVirtualwanlinkNeighborOutputWithContext(context.Background())
}

func (i VirtualwanlinkNeighborArgs) ToVirtualwanlinkNeighborOutputWithContext(ctx context.Context) VirtualwanlinkNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkNeighborOutput)
}

// VirtualwanlinkNeighborArrayInput is an input type that accepts VirtualwanlinkNeighborArray and VirtualwanlinkNeighborArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkNeighborArrayInput` via:
//
//	VirtualwanlinkNeighborArray{ VirtualwanlinkNeighborArgs{...} }
type VirtualwanlinkNeighborArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkNeighborArrayOutput() VirtualwanlinkNeighborArrayOutput
	ToVirtualwanlinkNeighborArrayOutputWithContext(context.Context) VirtualwanlinkNeighborArrayOutput
}

type VirtualwanlinkNeighborArray []VirtualwanlinkNeighborInput

func (VirtualwanlinkNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkNeighbor)(nil)).Elem()
}

func (i VirtualwanlinkNeighborArray) ToVirtualwanlinkNeighborArrayOutput() VirtualwanlinkNeighborArrayOutput {
	return i.ToVirtualwanlinkNeighborArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkNeighborArray) ToVirtualwanlinkNeighborArrayOutputWithContext(ctx context.Context) VirtualwanlinkNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkNeighborArrayOutput)
}

type VirtualwanlinkNeighborOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkNeighbor)(nil)).Elem()
}

func (o VirtualwanlinkNeighborOutput) ToVirtualwanlinkNeighborOutput() VirtualwanlinkNeighborOutput {
	return o
}

func (o VirtualwanlinkNeighborOutput) ToVirtualwanlinkNeighborOutputWithContext(ctx context.Context) VirtualwanlinkNeighborOutput {
	return o
}

// SD-WAN health-check name.
func (o VirtualwanlinkNeighborOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkNeighbor) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// IP address of neighbor.
func (o VirtualwanlinkNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Member sequence number.
func (o VirtualwanlinkNeighborOutput) Member() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkNeighbor) *int { return v.Member }).(pulumi.IntPtrOutput)
}

// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
func (o VirtualwanlinkNeighborOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkNeighbor) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// SLA ID.
func (o VirtualwanlinkNeighborOutput) SlaId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkNeighbor) *int { return v.SlaId }).(pulumi.IntPtrOutput)
}

type VirtualwanlinkNeighborArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkNeighbor)(nil)).Elem()
}

func (o VirtualwanlinkNeighborArrayOutput) ToVirtualwanlinkNeighborArrayOutput() VirtualwanlinkNeighborArrayOutput {
	return o
}

func (o VirtualwanlinkNeighborArrayOutput) ToVirtualwanlinkNeighborArrayOutputWithContext(ctx context.Context) VirtualwanlinkNeighborArrayOutput {
	return o
}

func (o VirtualwanlinkNeighborArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkNeighbor {
		return vs[0].([]VirtualwanlinkNeighbor)[vs[1].(int)]
	}).(VirtualwanlinkNeighborOutput)
}

type VirtualwanlinkService struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
	BandwidthWeight *int `pulumi:"bandwidthWeight"`
	// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
	Default *string `pulumi:"default"`
	// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpForward *string `pulumi:"dscpForward"`
	// Forward traffic DSCP tag.
	DscpForwardTag *string `pulumi:"dscpForwardTag"`
	// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpReverse *string `pulumi:"dscpReverse"`
	// Reverse traffic DSCP tag.
	DscpReverseTag *string `pulumi:"dscpReverseTag"`
	// Destination address6 name. The structure of `dst6` block is documented below.
	Dst6s []VirtualwanlinkServiceDst6 `pulumi:"dst6s"`
	// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
	DstNegate *string `pulumi:"dstNegate"`
	// Destination address name. The structure of `dst` block is documented below.
	Dsts []VirtualwanlinkServiceDst `pulumi:"dsts"`
	// End destination port number.
	EndPort *int `pulumi:"endPort"`
	// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
	Gateway *string `pulumi:"gateway"`
	// User groups. The structure of `groups` block is documented below.
	Groups []VirtualwanlinkServiceGroup `pulumi:"groups"`
	// Health check.
	HealthCheck *string `pulumi:"healthCheck"`
	// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
	HoldDownTime *int `pulumi:"holdDownTime"`
	// Priority rule ID (1 - 4000).
	Id *int `pulumi:"id"`
	// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
	InputDeviceNegate *string `pulumi:"inputDeviceNegate"`
	// Source interface name. The structure of `inputDevice` block is documented below.
	InputDevices []VirtualwanlinkServiceInputDevice `pulumi:"inputDevices"`
	// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
	InternetService *string `pulumi:"internetService"`
	// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
	InternetServiceAppCtrlGroups []VirtualwanlinkServiceInternetServiceAppCtrlGroup `pulumi:"internetServiceAppCtrlGroups"`
	// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
	InternetServiceAppCtrls []VirtualwanlinkServiceInternetServiceAppCtrl `pulumi:"internetServiceAppCtrls"`
	// Control-based Internet Service group list. The structure of `internetServiceCtrlGroup` block is documented below.
	InternetServiceCtrlGroups []VirtualwanlinkServiceInternetServiceCtrlGroup `pulumi:"internetServiceCtrlGroups"`
	// Control-based Internet Service ID list. The structure of `internetServiceCtrl` block is documented below.
	InternetServiceCtrls []VirtualwanlinkServiceInternetServiceCtrl `pulumi:"internetServiceCtrls"`
	// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups []VirtualwanlinkServiceInternetServiceCustomGroup `pulumi:"internetServiceCustomGroups"`
	// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms []VirtualwanlinkServiceInternetServiceCustom `pulumi:"internetServiceCustoms"`
	// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups []VirtualwanlinkServiceInternetServiceGroup `pulumi:"internetServiceGroups"`
	// Internet service ID list. The structure of `internetServiceId` block is documented below.
	InternetServiceIds []VirtualwanlinkServiceInternetServiceId `pulumi:"internetServiceIds"`
	// Internet service name list. The structure of `internetServiceName` block is documented below.
	InternetServiceNames []VirtualwanlinkServiceInternetServiceName `pulumi:"internetServiceNames"`
	// Coefficient of jitter in the formula of custom-profile-1.
	JitterWeight *int `pulumi:"jitterWeight"`
	// Coefficient of latency in the formula of custom-profile-1.
	LatencyWeight *int `pulumi:"latencyWeight"`
	// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
	LinkCostFactor *string `pulumi:"linkCostFactor"`
	// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
	LinkCostThreshold *int `pulumi:"linkCostThreshold"`
	// Member sequence number.
	Member *int `pulumi:"member"`
	// Control how the priority rule sets the priority of interfaces in the SD-WAN. Valid values: `auto`, `manual`, `priority`, `sla`, `load-balance`.
	Mode *string `pulumi:"mode"`
	// Priority rule name.
	Name *string `pulumi:"name"`
	// Coefficient of packet-loss in the formula of custom-profile-1.
	PacketLossWeight *int `pulumi:"packetLossWeight"`
	// Member sequence number list. The structure of `priorityMembers` block is documented below.
	PriorityMembers []VirtualwanlinkServicePriorityMember `pulumi:"priorityMembers"`
	// Protocol number.
	Protocol *int `pulumi:"protocol"`
	// Quality grade.
	QualityLink *int `pulumi:"qualityLink"`
	// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// IPv4 route map route-tag.
	RouteTag *int `pulumi:"routeTag"`
	// Method to compare SLA value for sla and load balance mode.  Valid values: `order`, `number`.
	SlaCompareMethod *string `pulumi:"slaCompareMethod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas []VirtualwanlinkServiceSla `pulumi:"slas"`
	// Source address6 name. The structure of `src6` block is documented below.
	Src6s []VirtualwanlinkServiceSrc6 `pulumi:"src6s"`
	// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
	SrcNegate *string `pulumi:"srcNegate"`
	// Source address name. The structure of `src` block is documented below.
	Srcs []VirtualwanlinkServiceSrc `pulumi:"srcs"`
	// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
	StandaloneAction *string `pulumi:"standaloneAction"`
	// Start destination port number.
	StartPort *int `pulumi:"startPort"`
	// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Type of service bit pattern.
	Tos *string `pulumi:"tos"`
	// Type of service evaluated bits.
	TosMask *string `pulumi:"tosMask"`
	// User name. The structure of `users` block is documented below.
	Users []VirtualwanlinkServiceUser `pulumi:"users"`
}

// VirtualwanlinkServiceInput is an input type that accepts VirtualwanlinkServiceArgs and VirtualwanlinkServiceOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInput` via:
//
//	VirtualwanlinkServiceArgs{...}
type VirtualwanlinkServiceInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceOutput() VirtualwanlinkServiceOutput
	ToVirtualwanlinkServiceOutputWithContext(context.Context) VirtualwanlinkServiceOutput
}

type VirtualwanlinkServiceArgs struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
	BandwidthWeight pulumi.IntPtrInput `pulumi:"bandwidthWeight"`
	// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
	Default pulumi.StringPtrInput `pulumi:"default"`
	// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpForward pulumi.StringPtrInput `pulumi:"dscpForward"`
	// Forward traffic DSCP tag.
	DscpForwardTag pulumi.StringPtrInput `pulumi:"dscpForwardTag"`
	// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpReverse pulumi.StringPtrInput `pulumi:"dscpReverse"`
	// Reverse traffic DSCP tag.
	DscpReverseTag pulumi.StringPtrInput `pulumi:"dscpReverseTag"`
	// Destination address6 name. The structure of `dst6` block is documented below.
	Dst6s VirtualwanlinkServiceDst6ArrayInput `pulumi:"dst6s"`
	// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
	DstNegate pulumi.StringPtrInput `pulumi:"dstNegate"`
	// Destination address name. The structure of `dst` block is documented below.
	Dsts VirtualwanlinkServiceDstArrayInput `pulumi:"dsts"`
	// End destination port number.
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// User groups. The structure of `groups` block is documented below.
	Groups VirtualwanlinkServiceGroupArrayInput `pulumi:"groups"`
	// Health check.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
	HoldDownTime pulumi.IntPtrInput `pulumi:"holdDownTime"`
	// Priority rule ID (1 - 4000).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
	InputDeviceNegate pulumi.StringPtrInput `pulumi:"inputDeviceNegate"`
	// Source interface name. The structure of `inputDevice` block is documented below.
	InputDevices VirtualwanlinkServiceInputDeviceArrayInput `pulumi:"inputDevices"`
	// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
	InternetService pulumi.StringPtrInput `pulumi:"internetService"`
	// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
	InternetServiceAppCtrlGroups VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput `pulumi:"internetServiceAppCtrlGroups"`
	// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
	InternetServiceAppCtrls VirtualwanlinkServiceInternetServiceAppCtrlArrayInput `pulumi:"internetServiceAppCtrls"`
	// Control-based Internet Service group list. The structure of `internetServiceCtrlGroup` block is documented below.
	InternetServiceCtrlGroups VirtualwanlinkServiceInternetServiceCtrlGroupArrayInput `pulumi:"internetServiceCtrlGroups"`
	// Control-based Internet Service ID list. The structure of `internetServiceCtrl` block is documented below.
	InternetServiceCtrls VirtualwanlinkServiceInternetServiceCtrlArrayInput `pulumi:"internetServiceCtrls"`
	// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups VirtualwanlinkServiceInternetServiceCustomGroupArrayInput `pulumi:"internetServiceCustomGroups"`
	// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms VirtualwanlinkServiceInternetServiceCustomArrayInput `pulumi:"internetServiceCustoms"`
	// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups VirtualwanlinkServiceInternetServiceGroupArrayInput `pulumi:"internetServiceGroups"`
	// Internet service ID list. The structure of `internetServiceId` block is documented below.
	InternetServiceIds VirtualwanlinkServiceInternetServiceIdArrayInput `pulumi:"internetServiceIds"`
	// Internet service name list. The structure of `internetServiceName` block is documented below.
	InternetServiceNames VirtualwanlinkServiceInternetServiceNameArrayInput `pulumi:"internetServiceNames"`
	// Coefficient of jitter in the formula of custom-profile-1.
	JitterWeight pulumi.IntPtrInput `pulumi:"jitterWeight"`
	// Coefficient of latency in the formula of custom-profile-1.
	LatencyWeight pulumi.IntPtrInput `pulumi:"latencyWeight"`
	// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
	LinkCostFactor pulumi.StringPtrInput `pulumi:"linkCostFactor"`
	// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
	LinkCostThreshold pulumi.IntPtrInput `pulumi:"linkCostThreshold"`
	// Member sequence number.
	Member pulumi.IntPtrInput `pulumi:"member"`
	// Control how the priority rule sets the priority of interfaces in the SD-WAN. Valid values: `auto`, `manual`, `priority`, `sla`, `load-balance`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Priority rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Coefficient of packet-loss in the formula of custom-profile-1.
	PacketLossWeight pulumi.IntPtrInput `pulumi:"packetLossWeight"`
	// Member sequence number list. The structure of `priorityMembers` block is documented below.
	PriorityMembers VirtualwanlinkServicePriorityMemberArrayInput `pulumi:"priorityMembers"`
	// Protocol number.
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
	// Quality grade.
	QualityLink pulumi.IntPtrInput `pulumi:"qualityLink"`
	// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// IPv4 route map route-tag.
	RouteTag pulumi.IntPtrInput `pulumi:"routeTag"`
	// Method to compare SLA value for sla and load balance mode.  Valid values: `order`, `number`.
	SlaCompareMethod pulumi.StringPtrInput `pulumi:"slaCompareMethod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas VirtualwanlinkServiceSlaArrayInput `pulumi:"slas"`
	// Source address6 name. The structure of `src6` block is documented below.
	Src6s VirtualwanlinkServiceSrc6ArrayInput `pulumi:"src6s"`
	// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
	SrcNegate pulumi.StringPtrInput `pulumi:"srcNegate"`
	// Source address name. The structure of `src` block is documented below.
	Srcs VirtualwanlinkServiceSrcArrayInput `pulumi:"srcs"`
	// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
	StandaloneAction pulumi.StringPtrInput `pulumi:"standaloneAction"`
	// Start destination port number.
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
	// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Type of service bit pattern.
	Tos pulumi.StringPtrInput `pulumi:"tos"`
	// Type of service evaluated bits.
	TosMask pulumi.StringPtrInput `pulumi:"tosMask"`
	// User name. The structure of `users` block is documented below.
	Users VirtualwanlinkServiceUserArrayInput `pulumi:"users"`
}

func (VirtualwanlinkServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkService)(nil)).Elem()
}

func (i VirtualwanlinkServiceArgs) ToVirtualwanlinkServiceOutput() VirtualwanlinkServiceOutput {
	return i.ToVirtualwanlinkServiceOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceArgs) ToVirtualwanlinkServiceOutputWithContext(ctx context.Context) VirtualwanlinkServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceOutput)
}

// VirtualwanlinkServiceArrayInput is an input type that accepts VirtualwanlinkServiceArray and VirtualwanlinkServiceArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceArrayInput` via:
//
//	VirtualwanlinkServiceArray{ VirtualwanlinkServiceArgs{...} }
type VirtualwanlinkServiceArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceArrayOutput() VirtualwanlinkServiceArrayOutput
	ToVirtualwanlinkServiceArrayOutputWithContext(context.Context) VirtualwanlinkServiceArrayOutput
}

type VirtualwanlinkServiceArray []VirtualwanlinkServiceInput

func (VirtualwanlinkServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkService)(nil)).Elem()
}

func (i VirtualwanlinkServiceArray) ToVirtualwanlinkServiceArrayOutput() VirtualwanlinkServiceArrayOutput {
	return i.ToVirtualwanlinkServiceArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceArray) ToVirtualwanlinkServiceArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceArrayOutput)
}

type VirtualwanlinkServiceOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkService)(nil)).Elem()
}

func (o VirtualwanlinkServiceOutput) ToVirtualwanlinkServiceOutput() VirtualwanlinkServiceOutput {
	return o
}

func (o VirtualwanlinkServiceOutput) ToVirtualwanlinkServiceOutputWithContext(ctx context.Context) VirtualwanlinkServiceOutput {
	return o
}

// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
func (o VirtualwanlinkServiceOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
func (o VirtualwanlinkServiceOutput) BandwidthWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.BandwidthWeight }).(pulumi.IntPtrOutput)
}

// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
func (o VirtualwanlinkServiceOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.Default }).(pulumi.StringPtrOutput)
}

// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
func (o VirtualwanlinkServiceOutput) DscpForward() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.DscpForward }).(pulumi.StringPtrOutput)
}

// Forward traffic DSCP tag.
func (o VirtualwanlinkServiceOutput) DscpForwardTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.DscpForwardTag }).(pulumi.StringPtrOutput)
}

// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
func (o VirtualwanlinkServiceOutput) DscpReverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.DscpReverse }).(pulumi.StringPtrOutput)
}

// Reverse traffic DSCP tag.
func (o VirtualwanlinkServiceOutput) DscpReverseTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.DscpReverseTag }).(pulumi.StringPtrOutput)
}

// Destination address6 name. The structure of `dst6` block is documented below.
func (o VirtualwanlinkServiceOutput) Dst6s() VirtualwanlinkServiceDst6ArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceDst6 { return v.Dst6s }).(VirtualwanlinkServiceDst6ArrayOutput)
}

// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
func (o VirtualwanlinkServiceOutput) DstNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.DstNegate }).(pulumi.StringPtrOutput)
}

// Destination address name. The structure of `dst` block is documented below.
func (o VirtualwanlinkServiceOutput) Dsts() VirtualwanlinkServiceDstArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceDst { return v.Dsts }).(VirtualwanlinkServiceDstArrayOutput)
}

// End destination port number.
func (o VirtualwanlinkServiceOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
func (o VirtualwanlinkServiceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// User groups. The structure of `groups` block is documented below.
func (o VirtualwanlinkServiceOutput) Groups() VirtualwanlinkServiceGroupArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceGroup { return v.Groups }).(VirtualwanlinkServiceGroupArrayOutput)
}

// Health check.
func (o VirtualwanlinkServiceOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
func (o VirtualwanlinkServiceOutput) HoldDownTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.HoldDownTime }).(pulumi.IntPtrOutput)
}

// Priority rule ID (1 - 4000).
func (o VirtualwanlinkServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
func (o VirtualwanlinkServiceOutput) InputDeviceNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.InputDeviceNegate }).(pulumi.StringPtrOutput)
}

// Source interface name. The structure of `inputDevice` block is documented below.
func (o VirtualwanlinkServiceOutput) InputDevices() VirtualwanlinkServiceInputDeviceArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceInputDevice { return v.InputDevices }).(VirtualwanlinkServiceInputDeviceArrayOutput)
}

// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
func (o VirtualwanlinkServiceOutput) InternetService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.InternetService }).(pulumi.StringPtrOutput)
}

// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
func (o VirtualwanlinkServiceOutput) InternetServiceAppCtrlGroups() VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceInternetServiceAppCtrlGroup {
		return v.InternetServiceAppCtrlGroups
	}).(VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput)
}

// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
func (o VirtualwanlinkServiceOutput) InternetServiceAppCtrls() VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceInternetServiceAppCtrl {
		return v.InternetServiceAppCtrls
	}).(VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput)
}

// Control-based Internet Service group list. The structure of `internetServiceCtrlGroup` block is documented below.
func (o VirtualwanlinkServiceOutput) InternetServiceCtrlGroups() VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceInternetServiceCtrlGroup {
		return v.InternetServiceCtrlGroups
	}).(VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput)
}

// Control-based Internet Service ID list. The structure of `internetServiceCtrl` block is documented below.
func (o VirtualwanlinkServiceOutput) InternetServiceCtrls() VirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceInternetServiceCtrl {
		return v.InternetServiceCtrls
	}).(VirtualwanlinkServiceInternetServiceCtrlArrayOutput)
}

// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
func (o VirtualwanlinkServiceOutput) InternetServiceCustomGroups() VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceInternetServiceCustomGroup {
		return v.InternetServiceCustomGroups
	}).(VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput)
}

// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
func (o VirtualwanlinkServiceOutput) InternetServiceCustoms() VirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceInternetServiceCustom {
		return v.InternetServiceCustoms
	}).(VirtualwanlinkServiceInternetServiceCustomArrayOutput)
}

// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
func (o VirtualwanlinkServiceOutput) InternetServiceGroups() VirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceInternetServiceGroup {
		return v.InternetServiceGroups
	}).(VirtualwanlinkServiceInternetServiceGroupArrayOutput)
}

// Internet service ID list. The structure of `internetServiceId` block is documented below.
func (o VirtualwanlinkServiceOutput) InternetServiceIds() VirtualwanlinkServiceInternetServiceIdArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceInternetServiceId { return v.InternetServiceIds }).(VirtualwanlinkServiceInternetServiceIdArrayOutput)
}

// Internet service name list. The structure of `internetServiceName` block is documented below.
func (o VirtualwanlinkServiceOutput) InternetServiceNames() VirtualwanlinkServiceInternetServiceNameArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceInternetServiceName {
		return v.InternetServiceNames
	}).(VirtualwanlinkServiceInternetServiceNameArrayOutput)
}

// Coefficient of jitter in the formula of custom-profile-1.
func (o VirtualwanlinkServiceOutput) JitterWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.JitterWeight }).(pulumi.IntPtrOutput)
}

// Coefficient of latency in the formula of custom-profile-1.
func (o VirtualwanlinkServiceOutput) LatencyWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.LatencyWeight }).(pulumi.IntPtrOutput)
}

// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
func (o VirtualwanlinkServiceOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
func (o VirtualwanlinkServiceOutput) LinkCostThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.LinkCostThreshold }).(pulumi.IntPtrOutput)
}

// Member sequence number.
func (o VirtualwanlinkServiceOutput) Member() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.Member }).(pulumi.IntPtrOutput)
}

// Control how the priority rule sets the priority of interfaces in the SD-WAN. Valid values: `auto`, `manual`, `priority`, `sla`, `load-balance`.
func (o VirtualwanlinkServiceOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Priority rule name.
func (o VirtualwanlinkServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Coefficient of packet-loss in the formula of custom-profile-1.
func (o VirtualwanlinkServiceOutput) PacketLossWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.PacketLossWeight }).(pulumi.IntPtrOutput)
}

// Member sequence number list. The structure of `priorityMembers` block is documented below.
func (o VirtualwanlinkServiceOutput) PriorityMembers() VirtualwanlinkServicePriorityMemberArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServicePriorityMember { return v.PriorityMembers }).(VirtualwanlinkServicePriorityMemberArrayOutput)
}

// Protocol number.
func (o VirtualwanlinkServiceOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

// Quality grade.
func (o VirtualwanlinkServiceOutput) QualityLink() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.QualityLink }).(pulumi.IntPtrOutput)
}

// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
func (o VirtualwanlinkServiceOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// IPv4 route map route-tag.
func (o VirtualwanlinkServiceOutput) RouteTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.RouteTag }).(pulumi.IntPtrOutput)
}

// Method to compare SLA value for sla and load balance mode.  Valid values: `order`, `number`.
func (o VirtualwanlinkServiceOutput) SlaCompareMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.SlaCompareMethod }).(pulumi.StringPtrOutput)
}

// Service level agreement (SLA). The structure of `sla` block is documented below.
func (o VirtualwanlinkServiceOutput) Slas() VirtualwanlinkServiceSlaArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceSla { return v.Slas }).(VirtualwanlinkServiceSlaArrayOutput)
}

// Source address6 name. The structure of `src6` block is documented below.
func (o VirtualwanlinkServiceOutput) Src6s() VirtualwanlinkServiceSrc6ArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceSrc6 { return v.Src6s }).(VirtualwanlinkServiceSrc6ArrayOutput)
}

// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
func (o VirtualwanlinkServiceOutput) SrcNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.SrcNegate }).(pulumi.StringPtrOutput)
}

// Source address name. The structure of `src` block is documented below.
func (o VirtualwanlinkServiceOutput) Srcs() VirtualwanlinkServiceSrcArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceSrc { return v.Srcs }).(VirtualwanlinkServiceSrcArrayOutput)
}

// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
func (o VirtualwanlinkServiceOutput) StandaloneAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.StandaloneAction }).(pulumi.StringPtrOutput)
}

// Start destination port number.
func (o VirtualwanlinkServiceOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
func (o VirtualwanlinkServiceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Type of service bit pattern.
func (o VirtualwanlinkServiceOutput) Tos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.Tos }).(pulumi.StringPtrOutput)
}

// Type of service evaluated bits.
func (o VirtualwanlinkServiceOutput) TosMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkService) *string { return v.TosMask }).(pulumi.StringPtrOutput)
}

// User name. The structure of `users` block is documented below.
func (o VirtualwanlinkServiceOutput) Users() VirtualwanlinkServiceUserArrayOutput {
	return o.ApplyT(func(v VirtualwanlinkService) []VirtualwanlinkServiceUser { return v.Users }).(VirtualwanlinkServiceUserArrayOutput)
}

type VirtualwanlinkServiceArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkService)(nil)).Elem()
}

func (o VirtualwanlinkServiceArrayOutput) ToVirtualwanlinkServiceArrayOutput() VirtualwanlinkServiceArrayOutput {
	return o
}

func (o VirtualwanlinkServiceArrayOutput) ToVirtualwanlinkServiceArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceArrayOutput {
	return o
}

func (o VirtualwanlinkServiceArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkService {
		return vs[0].([]VirtualwanlinkService)[vs[1].(int)]
	}).(VirtualwanlinkServiceOutput)
}

type VirtualwanlinkServiceDst6 struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceDst6Input is an input type that accepts VirtualwanlinkServiceDst6Args and VirtualwanlinkServiceDst6Output values.
// You can construct a concrete instance of `VirtualwanlinkServiceDst6Input` via:
//
//	VirtualwanlinkServiceDst6Args{...}
type VirtualwanlinkServiceDst6Input interface {
	pulumi.Input

	ToVirtualwanlinkServiceDst6Output() VirtualwanlinkServiceDst6Output
	ToVirtualwanlinkServiceDst6OutputWithContext(context.Context) VirtualwanlinkServiceDst6Output
}

type VirtualwanlinkServiceDst6Args struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceDst6)(nil)).Elem()
}

func (i VirtualwanlinkServiceDst6Args) ToVirtualwanlinkServiceDst6Output() VirtualwanlinkServiceDst6Output {
	return i.ToVirtualwanlinkServiceDst6OutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceDst6Args) ToVirtualwanlinkServiceDst6OutputWithContext(ctx context.Context) VirtualwanlinkServiceDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceDst6Output)
}

// VirtualwanlinkServiceDst6ArrayInput is an input type that accepts VirtualwanlinkServiceDst6Array and VirtualwanlinkServiceDst6ArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceDst6ArrayInput` via:
//
//	VirtualwanlinkServiceDst6Array{ VirtualwanlinkServiceDst6Args{...} }
type VirtualwanlinkServiceDst6ArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceDst6ArrayOutput() VirtualwanlinkServiceDst6ArrayOutput
	ToVirtualwanlinkServiceDst6ArrayOutputWithContext(context.Context) VirtualwanlinkServiceDst6ArrayOutput
}

type VirtualwanlinkServiceDst6Array []VirtualwanlinkServiceDst6Input

func (VirtualwanlinkServiceDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceDst6)(nil)).Elem()
}

func (i VirtualwanlinkServiceDst6Array) ToVirtualwanlinkServiceDst6ArrayOutput() VirtualwanlinkServiceDst6ArrayOutput {
	return i.ToVirtualwanlinkServiceDst6ArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceDst6Array) ToVirtualwanlinkServiceDst6ArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceDst6ArrayOutput)
}

type VirtualwanlinkServiceDst6Output struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceDst6)(nil)).Elem()
}

func (o VirtualwanlinkServiceDst6Output) ToVirtualwanlinkServiceDst6Output() VirtualwanlinkServiceDst6Output {
	return o
}

func (o VirtualwanlinkServiceDst6Output) ToVirtualwanlinkServiceDst6OutputWithContext(ctx context.Context) VirtualwanlinkServiceDst6Output {
	return o
}

// Address or address group name.
func (o VirtualwanlinkServiceDst6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceDst6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceDst6ArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceDst6)(nil)).Elem()
}

func (o VirtualwanlinkServiceDst6ArrayOutput) ToVirtualwanlinkServiceDst6ArrayOutput() VirtualwanlinkServiceDst6ArrayOutput {
	return o
}

func (o VirtualwanlinkServiceDst6ArrayOutput) ToVirtualwanlinkServiceDst6ArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceDst6ArrayOutput {
	return o
}

func (o VirtualwanlinkServiceDst6ArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceDst6 {
		return vs[0].([]VirtualwanlinkServiceDst6)[vs[1].(int)]
	}).(VirtualwanlinkServiceDst6Output)
}

type VirtualwanlinkServiceDst struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceDstInput is an input type that accepts VirtualwanlinkServiceDstArgs and VirtualwanlinkServiceDstOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceDstInput` via:
//
//	VirtualwanlinkServiceDstArgs{...}
type VirtualwanlinkServiceDstInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceDstOutput() VirtualwanlinkServiceDstOutput
	ToVirtualwanlinkServiceDstOutputWithContext(context.Context) VirtualwanlinkServiceDstOutput
}

type VirtualwanlinkServiceDstArgs struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceDst)(nil)).Elem()
}

func (i VirtualwanlinkServiceDstArgs) ToVirtualwanlinkServiceDstOutput() VirtualwanlinkServiceDstOutput {
	return i.ToVirtualwanlinkServiceDstOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceDstArgs) ToVirtualwanlinkServiceDstOutputWithContext(ctx context.Context) VirtualwanlinkServiceDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceDstOutput)
}

// VirtualwanlinkServiceDstArrayInput is an input type that accepts VirtualwanlinkServiceDstArray and VirtualwanlinkServiceDstArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceDstArrayInput` via:
//
//	VirtualwanlinkServiceDstArray{ VirtualwanlinkServiceDstArgs{...} }
type VirtualwanlinkServiceDstArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceDstArrayOutput() VirtualwanlinkServiceDstArrayOutput
	ToVirtualwanlinkServiceDstArrayOutputWithContext(context.Context) VirtualwanlinkServiceDstArrayOutput
}

type VirtualwanlinkServiceDstArray []VirtualwanlinkServiceDstInput

func (VirtualwanlinkServiceDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceDst)(nil)).Elem()
}

func (i VirtualwanlinkServiceDstArray) ToVirtualwanlinkServiceDstArrayOutput() VirtualwanlinkServiceDstArrayOutput {
	return i.ToVirtualwanlinkServiceDstArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceDstArray) ToVirtualwanlinkServiceDstArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceDstArrayOutput)
}

type VirtualwanlinkServiceDstOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceDst)(nil)).Elem()
}

func (o VirtualwanlinkServiceDstOutput) ToVirtualwanlinkServiceDstOutput() VirtualwanlinkServiceDstOutput {
	return o
}

func (o VirtualwanlinkServiceDstOutput) ToVirtualwanlinkServiceDstOutputWithContext(ctx context.Context) VirtualwanlinkServiceDstOutput {
	return o
}

// Address or address group name.
func (o VirtualwanlinkServiceDstOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceDst) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceDstArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceDst)(nil)).Elem()
}

func (o VirtualwanlinkServiceDstArrayOutput) ToVirtualwanlinkServiceDstArrayOutput() VirtualwanlinkServiceDstArrayOutput {
	return o
}

func (o VirtualwanlinkServiceDstArrayOutput) ToVirtualwanlinkServiceDstArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceDstArrayOutput {
	return o
}

func (o VirtualwanlinkServiceDstArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceDst {
		return vs[0].([]VirtualwanlinkServiceDst)[vs[1].(int)]
	}).(VirtualwanlinkServiceDstOutput)
}

type VirtualwanlinkServiceGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceGroupInput is an input type that accepts VirtualwanlinkServiceGroupArgs and VirtualwanlinkServiceGroupOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceGroupInput` via:
//
//	VirtualwanlinkServiceGroupArgs{...}
type VirtualwanlinkServiceGroupInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceGroupOutput() VirtualwanlinkServiceGroupOutput
	ToVirtualwanlinkServiceGroupOutputWithContext(context.Context) VirtualwanlinkServiceGroupOutput
}

type VirtualwanlinkServiceGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceGroup)(nil)).Elem()
}

func (i VirtualwanlinkServiceGroupArgs) ToVirtualwanlinkServiceGroupOutput() VirtualwanlinkServiceGroupOutput {
	return i.ToVirtualwanlinkServiceGroupOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceGroupArgs) ToVirtualwanlinkServiceGroupOutputWithContext(ctx context.Context) VirtualwanlinkServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceGroupOutput)
}

// VirtualwanlinkServiceGroupArrayInput is an input type that accepts VirtualwanlinkServiceGroupArray and VirtualwanlinkServiceGroupArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceGroupArrayInput` via:
//
//	VirtualwanlinkServiceGroupArray{ VirtualwanlinkServiceGroupArgs{...} }
type VirtualwanlinkServiceGroupArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceGroupArrayOutput() VirtualwanlinkServiceGroupArrayOutput
	ToVirtualwanlinkServiceGroupArrayOutputWithContext(context.Context) VirtualwanlinkServiceGroupArrayOutput
}

type VirtualwanlinkServiceGroupArray []VirtualwanlinkServiceGroupInput

func (VirtualwanlinkServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceGroup)(nil)).Elem()
}

func (i VirtualwanlinkServiceGroupArray) ToVirtualwanlinkServiceGroupArrayOutput() VirtualwanlinkServiceGroupArrayOutput {
	return i.ToVirtualwanlinkServiceGroupArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceGroupArray) ToVirtualwanlinkServiceGroupArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceGroupArrayOutput)
}

type VirtualwanlinkServiceGroupOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceGroup)(nil)).Elem()
}

func (o VirtualwanlinkServiceGroupOutput) ToVirtualwanlinkServiceGroupOutput() VirtualwanlinkServiceGroupOutput {
	return o
}

func (o VirtualwanlinkServiceGroupOutput) ToVirtualwanlinkServiceGroupOutputWithContext(ctx context.Context) VirtualwanlinkServiceGroupOutput {
	return o
}

// Group name.
func (o VirtualwanlinkServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceGroup)(nil)).Elem()
}

func (o VirtualwanlinkServiceGroupArrayOutput) ToVirtualwanlinkServiceGroupArrayOutput() VirtualwanlinkServiceGroupArrayOutput {
	return o
}

func (o VirtualwanlinkServiceGroupArrayOutput) ToVirtualwanlinkServiceGroupArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceGroupArrayOutput {
	return o
}

func (o VirtualwanlinkServiceGroupArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceGroup {
		return vs[0].([]VirtualwanlinkServiceGroup)[vs[1].(int)]
	}).(VirtualwanlinkServiceGroupOutput)
}

type VirtualwanlinkServiceInputDevice struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceInputDeviceInput is an input type that accepts VirtualwanlinkServiceInputDeviceArgs and VirtualwanlinkServiceInputDeviceOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInputDeviceInput` via:
//
//	VirtualwanlinkServiceInputDeviceArgs{...}
type VirtualwanlinkServiceInputDeviceInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInputDeviceOutput() VirtualwanlinkServiceInputDeviceOutput
	ToVirtualwanlinkServiceInputDeviceOutputWithContext(context.Context) VirtualwanlinkServiceInputDeviceOutput
}

type VirtualwanlinkServiceInputDeviceArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (i VirtualwanlinkServiceInputDeviceArgs) ToVirtualwanlinkServiceInputDeviceOutput() VirtualwanlinkServiceInputDeviceOutput {
	return i.ToVirtualwanlinkServiceInputDeviceOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInputDeviceArgs) ToVirtualwanlinkServiceInputDeviceOutputWithContext(ctx context.Context) VirtualwanlinkServiceInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInputDeviceOutput)
}

// VirtualwanlinkServiceInputDeviceArrayInput is an input type that accepts VirtualwanlinkServiceInputDeviceArray and VirtualwanlinkServiceInputDeviceArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInputDeviceArrayInput` via:
//
//	VirtualwanlinkServiceInputDeviceArray{ VirtualwanlinkServiceInputDeviceArgs{...} }
type VirtualwanlinkServiceInputDeviceArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInputDeviceArrayOutput() VirtualwanlinkServiceInputDeviceArrayOutput
	ToVirtualwanlinkServiceInputDeviceArrayOutputWithContext(context.Context) VirtualwanlinkServiceInputDeviceArrayOutput
}

type VirtualwanlinkServiceInputDeviceArray []VirtualwanlinkServiceInputDeviceInput

func (VirtualwanlinkServiceInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (i VirtualwanlinkServiceInputDeviceArray) ToVirtualwanlinkServiceInputDeviceArrayOutput() VirtualwanlinkServiceInputDeviceArrayOutput {
	return i.ToVirtualwanlinkServiceInputDeviceArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInputDeviceArray) ToVirtualwanlinkServiceInputDeviceArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInputDeviceArrayOutput)
}

type VirtualwanlinkServiceInputDeviceOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (o VirtualwanlinkServiceInputDeviceOutput) ToVirtualwanlinkServiceInputDeviceOutput() VirtualwanlinkServiceInputDeviceOutput {
	return o
}

func (o VirtualwanlinkServiceInputDeviceOutput) ToVirtualwanlinkServiceInputDeviceOutputWithContext(ctx context.Context) VirtualwanlinkServiceInputDeviceOutput {
	return o
}

// Interface name.
func (o VirtualwanlinkServiceInputDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceInputDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (o VirtualwanlinkServiceInputDeviceArrayOutput) ToVirtualwanlinkServiceInputDeviceArrayOutput() VirtualwanlinkServiceInputDeviceArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInputDeviceArrayOutput) ToVirtualwanlinkServiceInputDeviceArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInputDeviceArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInputDeviceArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceInputDevice {
		return vs[0].([]VirtualwanlinkServiceInputDevice)[vs[1].(int)]
	}).(VirtualwanlinkServiceInputDeviceOutput)
}

type VirtualwanlinkServiceInternetServiceAppCtrl struct {
	// Application control based Internet Service ID.
	Id *int `pulumi:"id"`
}

// VirtualwanlinkServiceInternetServiceAppCtrlInput is an input type that accepts VirtualwanlinkServiceInternetServiceAppCtrlArgs and VirtualwanlinkServiceInternetServiceAppCtrlOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceAppCtrlInput` via:
//
//	VirtualwanlinkServiceInternetServiceAppCtrlArgs{...}
type VirtualwanlinkServiceInternetServiceAppCtrlInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceAppCtrlOutput() VirtualwanlinkServiceInternetServiceAppCtrlOutput
	ToVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceAppCtrlOutput
}

type VirtualwanlinkServiceInternetServiceAppCtrlArgs struct {
	// Application control based Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (VirtualwanlinkServiceInternetServiceAppCtrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceAppCtrlArgs) ToVirtualwanlinkServiceInternetServiceAppCtrlOutput() VirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return i.ToVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceAppCtrlArgs) ToVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceAppCtrlOutput)
}

// VirtualwanlinkServiceInternetServiceAppCtrlArrayInput is an input type that accepts VirtualwanlinkServiceInternetServiceAppCtrlArray and VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceAppCtrlArrayInput` via:
//
//	VirtualwanlinkServiceInternetServiceAppCtrlArray{ VirtualwanlinkServiceInternetServiceAppCtrlArgs{...} }
type VirtualwanlinkServiceInternetServiceAppCtrlArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput() VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput
	ToVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput
}

type VirtualwanlinkServiceInternetServiceAppCtrlArray []VirtualwanlinkServiceInternetServiceAppCtrlInput

func (VirtualwanlinkServiceInternetServiceAppCtrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceAppCtrlArray) ToVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput() VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return i.ToVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceAppCtrlArray) ToVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput)
}

type VirtualwanlinkServiceInternetServiceAppCtrlOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceAppCtrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceAppCtrlOutput) ToVirtualwanlinkServiceInternetServiceAppCtrlOutput() VirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceAppCtrlOutput) ToVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return o
}

// Application control based Internet Service ID.
func (o VirtualwanlinkServiceInternetServiceAppCtrlOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceInternetServiceAppCtrl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) ToVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput() VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) ToVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceInternetServiceAppCtrl {
		return vs[0].([]VirtualwanlinkServiceInternetServiceAppCtrl)[vs[1].(int)]
	}).(VirtualwanlinkServiceInternetServiceAppCtrlOutput)
}

type VirtualwanlinkServiceInternetServiceAppCtrlGroup struct {
	// Application control based Internet Service group name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceInternetServiceAppCtrlGroupInput is an input type that accepts VirtualwanlinkServiceInternetServiceAppCtrlGroupArgs and VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceAppCtrlGroupInput` via:
//
//	VirtualwanlinkServiceInternetServiceAppCtrlGroupArgs{...}
type VirtualwanlinkServiceInternetServiceAppCtrlGroupInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput() VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput
	ToVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput
}

type VirtualwanlinkServiceInternetServiceAppCtrlGroupArgs struct {
	// Application control based Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceInternetServiceAppCtrlGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceAppCtrlGroupArgs) ToVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput() VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return i.ToVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceAppCtrlGroupArgs) ToVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput)
}

// VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput is an input type that accepts VirtualwanlinkServiceInternetServiceAppCtrlGroupArray and VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput` via:
//
//	VirtualwanlinkServiceInternetServiceAppCtrlGroupArray{ VirtualwanlinkServiceInternetServiceAppCtrlGroupArgs{...} }
type VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput() VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput
	ToVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput
}

type VirtualwanlinkServiceInternetServiceAppCtrlGroupArray []VirtualwanlinkServiceInternetServiceAppCtrlGroupInput

func (VirtualwanlinkServiceInternetServiceAppCtrlGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceAppCtrlGroupArray) ToVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput() VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return i.ToVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceAppCtrlGroupArray) ToVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput)
}

type VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) ToVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput() VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) ToVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return o
}

// Application control based Internet Service group name.
func (o VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceInternetServiceAppCtrlGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) ToVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput() VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) ToVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceInternetServiceAppCtrlGroup {
		return vs[0].([]VirtualwanlinkServiceInternetServiceAppCtrlGroup)[vs[1].(int)]
	}).(VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput)
}

type VirtualwanlinkServiceInternetServiceCtrl struct {
	// Control-based Internet Service ID.
	Id *int `pulumi:"id"`
}

// VirtualwanlinkServiceInternetServiceCtrlInput is an input type that accepts VirtualwanlinkServiceInternetServiceCtrlArgs and VirtualwanlinkServiceInternetServiceCtrlOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceCtrlInput` via:
//
//	VirtualwanlinkServiceInternetServiceCtrlArgs{...}
type VirtualwanlinkServiceInternetServiceCtrlInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceCtrlOutput() VirtualwanlinkServiceInternetServiceCtrlOutput
	ToVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceCtrlOutput
}

type VirtualwanlinkServiceInternetServiceCtrlArgs struct {
	// Control-based Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (VirtualwanlinkServiceInternetServiceCtrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceCtrlArgs) ToVirtualwanlinkServiceInternetServiceCtrlOutput() VirtualwanlinkServiceInternetServiceCtrlOutput {
	return i.ToVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceCtrlArgs) ToVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCtrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceCtrlOutput)
}

// VirtualwanlinkServiceInternetServiceCtrlArrayInput is an input type that accepts VirtualwanlinkServiceInternetServiceCtrlArray and VirtualwanlinkServiceInternetServiceCtrlArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceCtrlArrayInput` via:
//
//	VirtualwanlinkServiceInternetServiceCtrlArray{ VirtualwanlinkServiceInternetServiceCtrlArgs{...} }
type VirtualwanlinkServiceInternetServiceCtrlArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceCtrlArrayOutput() VirtualwanlinkServiceInternetServiceCtrlArrayOutput
	ToVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceCtrlArrayOutput
}

type VirtualwanlinkServiceInternetServiceCtrlArray []VirtualwanlinkServiceInternetServiceCtrlInput

func (VirtualwanlinkServiceInternetServiceCtrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceCtrlArray) ToVirtualwanlinkServiceInternetServiceCtrlArrayOutput() VirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return i.ToVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceCtrlArray) ToVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceCtrlArrayOutput)
}

type VirtualwanlinkServiceInternetServiceCtrlOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceCtrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceCtrlOutput) ToVirtualwanlinkServiceInternetServiceCtrlOutput() VirtualwanlinkServiceInternetServiceCtrlOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCtrlOutput) ToVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCtrlOutput {
	return o
}

// Control-based Internet Service ID.
func (o VirtualwanlinkServiceInternetServiceCtrlOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceInternetServiceCtrl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type VirtualwanlinkServiceInternetServiceCtrlArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceCtrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceCtrlArrayOutput) ToVirtualwanlinkServiceInternetServiceCtrlArrayOutput() VirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCtrlArrayOutput) ToVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCtrlArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceInternetServiceCtrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceInternetServiceCtrl {
		return vs[0].([]VirtualwanlinkServiceInternetServiceCtrl)[vs[1].(int)]
	}).(VirtualwanlinkServiceInternetServiceCtrlOutput)
}

type VirtualwanlinkServiceInternetServiceCtrlGroup struct {
	// Control-based Internet Service group name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceInternetServiceCtrlGroupInput is an input type that accepts VirtualwanlinkServiceInternetServiceCtrlGroupArgs and VirtualwanlinkServiceInternetServiceCtrlGroupOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceCtrlGroupInput` via:
//
//	VirtualwanlinkServiceInternetServiceCtrlGroupArgs{...}
type VirtualwanlinkServiceInternetServiceCtrlGroupInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceCtrlGroupOutput() VirtualwanlinkServiceInternetServiceCtrlGroupOutput
	ToVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceCtrlGroupOutput
}

type VirtualwanlinkServiceInternetServiceCtrlGroupArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceInternetServiceCtrlGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceCtrlGroupArgs) ToVirtualwanlinkServiceInternetServiceCtrlGroupOutput() VirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return i.ToVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceCtrlGroupArgs) ToVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceCtrlGroupOutput)
}

// VirtualwanlinkServiceInternetServiceCtrlGroupArrayInput is an input type that accepts VirtualwanlinkServiceInternetServiceCtrlGroupArray and VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceCtrlGroupArrayInput` via:
//
//	VirtualwanlinkServiceInternetServiceCtrlGroupArray{ VirtualwanlinkServiceInternetServiceCtrlGroupArgs{...} }
type VirtualwanlinkServiceInternetServiceCtrlGroupArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput() VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput
	ToVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput
}

type VirtualwanlinkServiceInternetServiceCtrlGroupArray []VirtualwanlinkServiceInternetServiceCtrlGroupInput

func (VirtualwanlinkServiceInternetServiceCtrlGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceCtrlGroupArray) ToVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput() VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return i.ToVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceCtrlGroupArray) ToVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput)
}

type VirtualwanlinkServiceInternetServiceCtrlGroupOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceCtrlGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceCtrlGroupOutput) ToVirtualwanlinkServiceInternetServiceCtrlGroupOutput() VirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCtrlGroupOutput) ToVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return o
}

// Control-based Internet Service group name.
func (o VirtualwanlinkServiceInternetServiceCtrlGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceInternetServiceCtrlGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) ToVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput() VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) ToVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceInternetServiceCtrlGroup {
		return vs[0].([]VirtualwanlinkServiceInternetServiceCtrlGroup)[vs[1].(int)]
	}).(VirtualwanlinkServiceInternetServiceCtrlGroupOutput)
}

type VirtualwanlinkServiceInternetServiceCustom struct {
	// Custom Internet service name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceInternetServiceCustomInput is an input type that accepts VirtualwanlinkServiceInternetServiceCustomArgs and VirtualwanlinkServiceInternetServiceCustomOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceCustomInput` via:
//
//	VirtualwanlinkServiceInternetServiceCustomArgs{...}
type VirtualwanlinkServiceInternetServiceCustomInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceCustomOutput() VirtualwanlinkServiceInternetServiceCustomOutput
	ToVirtualwanlinkServiceInternetServiceCustomOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceCustomOutput
}

type VirtualwanlinkServiceInternetServiceCustomArgs struct {
	// Custom Internet service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceCustomArgs) ToVirtualwanlinkServiceInternetServiceCustomOutput() VirtualwanlinkServiceInternetServiceCustomOutput {
	return i.ToVirtualwanlinkServiceInternetServiceCustomOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceCustomArgs) ToVirtualwanlinkServiceInternetServiceCustomOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceCustomOutput)
}

// VirtualwanlinkServiceInternetServiceCustomArrayInput is an input type that accepts VirtualwanlinkServiceInternetServiceCustomArray and VirtualwanlinkServiceInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceCustomArrayInput` via:
//
//	VirtualwanlinkServiceInternetServiceCustomArray{ VirtualwanlinkServiceInternetServiceCustomArgs{...} }
type VirtualwanlinkServiceInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceCustomArrayOutput() VirtualwanlinkServiceInternetServiceCustomArrayOutput
	ToVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceCustomArrayOutput
}

type VirtualwanlinkServiceInternetServiceCustomArray []VirtualwanlinkServiceInternetServiceCustomInput

func (VirtualwanlinkServiceInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceCustomArray) ToVirtualwanlinkServiceInternetServiceCustomArrayOutput() VirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return i.ToVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceCustomArray) ToVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceCustomArrayOutput)
}

type VirtualwanlinkServiceInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceCustomOutput) ToVirtualwanlinkServiceInternetServiceCustomOutput() VirtualwanlinkServiceInternetServiceCustomOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCustomOutput) ToVirtualwanlinkServiceInternetServiceCustomOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCustomOutput {
	return o
}

// Custom Internet service name.
func (o VirtualwanlinkServiceInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceCustomArrayOutput) ToVirtualwanlinkServiceInternetServiceCustomArrayOutput() VirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCustomArrayOutput) ToVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceInternetServiceCustom {
		return vs[0].([]VirtualwanlinkServiceInternetServiceCustom)[vs[1].(int)]
	}).(VirtualwanlinkServiceInternetServiceCustomOutput)
}

type VirtualwanlinkServiceInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceInternetServiceCustomGroupInput is an input type that accepts VirtualwanlinkServiceInternetServiceCustomGroupArgs and VirtualwanlinkServiceInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceCustomGroupInput` via:
//
//	VirtualwanlinkServiceInternetServiceCustomGroupArgs{...}
type VirtualwanlinkServiceInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceCustomGroupOutput() VirtualwanlinkServiceInternetServiceCustomGroupOutput
	ToVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceCustomGroupOutput
}

type VirtualwanlinkServiceInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceCustomGroupArgs) ToVirtualwanlinkServiceInternetServiceCustomGroupOutput() VirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return i.ToVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceCustomGroupArgs) ToVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceCustomGroupOutput)
}

// VirtualwanlinkServiceInternetServiceCustomGroupArrayInput is an input type that accepts VirtualwanlinkServiceInternetServiceCustomGroupArray and VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceCustomGroupArrayInput` via:
//
//	VirtualwanlinkServiceInternetServiceCustomGroupArray{ VirtualwanlinkServiceInternetServiceCustomGroupArgs{...} }
type VirtualwanlinkServiceInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput() VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput
	ToVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput
}

type VirtualwanlinkServiceInternetServiceCustomGroupArray []VirtualwanlinkServiceInternetServiceCustomGroupInput

func (VirtualwanlinkServiceInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceCustomGroupArray) ToVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput() VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return i.ToVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceCustomGroupArray) ToVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput)
}

type VirtualwanlinkServiceInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceCustomGroupOutput) ToVirtualwanlinkServiceInternetServiceCustomGroupOutput() VirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCustomGroupOutput) ToVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o VirtualwanlinkServiceInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) ToVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput() VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) ToVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceInternetServiceCustomGroup {
		return vs[0].([]VirtualwanlinkServiceInternetServiceCustomGroup)[vs[1].(int)]
	}).(VirtualwanlinkServiceInternetServiceCustomGroupOutput)
}

type VirtualwanlinkServiceInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceInternetServiceGroupInput is an input type that accepts VirtualwanlinkServiceInternetServiceGroupArgs and VirtualwanlinkServiceInternetServiceGroupOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceGroupInput` via:
//
//	VirtualwanlinkServiceInternetServiceGroupArgs{...}
type VirtualwanlinkServiceInternetServiceGroupInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceGroupOutput() VirtualwanlinkServiceInternetServiceGroupOutput
	ToVirtualwanlinkServiceInternetServiceGroupOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceGroupOutput
}

type VirtualwanlinkServiceInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceGroupArgs) ToVirtualwanlinkServiceInternetServiceGroupOutput() VirtualwanlinkServiceInternetServiceGroupOutput {
	return i.ToVirtualwanlinkServiceInternetServiceGroupOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceGroupArgs) ToVirtualwanlinkServiceInternetServiceGroupOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceGroupOutput)
}

// VirtualwanlinkServiceInternetServiceGroupArrayInput is an input type that accepts VirtualwanlinkServiceInternetServiceGroupArray and VirtualwanlinkServiceInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceGroupArrayInput` via:
//
//	VirtualwanlinkServiceInternetServiceGroupArray{ VirtualwanlinkServiceInternetServiceGroupArgs{...} }
type VirtualwanlinkServiceInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceGroupArrayOutput() VirtualwanlinkServiceInternetServiceGroupArrayOutput
	ToVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceGroupArrayOutput
}

type VirtualwanlinkServiceInternetServiceGroupArray []VirtualwanlinkServiceInternetServiceGroupInput

func (VirtualwanlinkServiceInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceGroupArray) ToVirtualwanlinkServiceInternetServiceGroupArrayOutput() VirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return i.ToVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceGroupArray) ToVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceGroupArrayOutput)
}

type VirtualwanlinkServiceInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceGroupOutput) ToVirtualwanlinkServiceInternetServiceGroupOutput() VirtualwanlinkServiceInternetServiceGroupOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceGroupOutput) ToVirtualwanlinkServiceInternetServiceGroupOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o VirtualwanlinkServiceInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceGroupArrayOutput) ToVirtualwanlinkServiceInternetServiceGroupArrayOutput() VirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceGroupArrayOutput) ToVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceInternetServiceGroup {
		return vs[0].([]VirtualwanlinkServiceInternetServiceGroup)[vs[1].(int)]
	}).(VirtualwanlinkServiceInternetServiceGroupOutput)
}

type VirtualwanlinkServiceInternetServiceId struct {
	// Internet service ID.
	Id *int `pulumi:"id"`
}

// VirtualwanlinkServiceInternetServiceIdInput is an input type that accepts VirtualwanlinkServiceInternetServiceIdArgs and VirtualwanlinkServiceInternetServiceIdOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceIdInput` via:
//
//	VirtualwanlinkServiceInternetServiceIdArgs{...}
type VirtualwanlinkServiceInternetServiceIdInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceIdOutput() VirtualwanlinkServiceInternetServiceIdOutput
	ToVirtualwanlinkServiceInternetServiceIdOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceIdOutput
}

type VirtualwanlinkServiceInternetServiceIdArgs struct {
	// Internet service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (VirtualwanlinkServiceInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceIdArgs) ToVirtualwanlinkServiceInternetServiceIdOutput() VirtualwanlinkServiceInternetServiceIdOutput {
	return i.ToVirtualwanlinkServiceInternetServiceIdOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceIdArgs) ToVirtualwanlinkServiceInternetServiceIdOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceIdOutput)
}

// VirtualwanlinkServiceInternetServiceIdArrayInput is an input type that accepts VirtualwanlinkServiceInternetServiceIdArray and VirtualwanlinkServiceInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceIdArrayInput` via:
//
//	VirtualwanlinkServiceInternetServiceIdArray{ VirtualwanlinkServiceInternetServiceIdArgs{...} }
type VirtualwanlinkServiceInternetServiceIdArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceIdArrayOutput() VirtualwanlinkServiceInternetServiceIdArrayOutput
	ToVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceIdArrayOutput
}

type VirtualwanlinkServiceInternetServiceIdArray []VirtualwanlinkServiceInternetServiceIdInput

func (VirtualwanlinkServiceInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceIdArray) ToVirtualwanlinkServiceInternetServiceIdArrayOutput() VirtualwanlinkServiceInternetServiceIdArrayOutput {
	return i.ToVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceIdArray) ToVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceIdArrayOutput)
}

type VirtualwanlinkServiceInternetServiceIdOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceIdOutput) ToVirtualwanlinkServiceInternetServiceIdOutput() VirtualwanlinkServiceInternetServiceIdOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceIdOutput) ToVirtualwanlinkServiceInternetServiceIdOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceIdOutput {
	return o
}

// Internet service ID.
func (o VirtualwanlinkServiceInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type VirtualwanlinkServiceInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceIdArrayOutput) ToVirtualwanlinkServiceInternetServiceIdArrayOutput() VirtualwanlinkServiceInternetServiceIdArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceIdArrayOutput) ToVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceIdArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceIdArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceInternetServiceId {
		return vs[0].([]VirtualwanlinkServiceInternetServiceId)[vs[1].(int)]
	}).(VirtualwanlinkServiceInternetServiceIdOutput)
}

type VirtualwanlinkServiceInternetServiceName struct {
	// Internet service name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceInternetServiceNameInput is an input type that accepts VirtualwanlinkServiceInternetServiceNameArgs and VirtualwanlinkServiceInternetServiceNameOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceNameInput` via:
//
//	VirtualwanlinkServiceInternetServiceNameArgs{...}
type VirtualwanlinkServiceInternetServiceNameInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceNameOutput() VirtualwanlinkServiceInternetServiceNameOutput
	ToVirtualwanlinkServiceInternetServiceNameOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceNameOutput
}

type VirtualwanlinkServiceInternetServiceNameArgs struct {
	// Internet service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceNameArgs) ToVirtualwanlinkServiceInternetServiceNameOutput() VirtualwanlinkServiceInternetServiceNameOutput {
	return i.ToVirtualwanlinkServiceInternetServiceNameOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceNameArgs) ToVirtualwanlinkServiceInternetServiceNameOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceNameOutput)
}

// VirtualwanlinkServiceInternetServiceNameArrayInput is an input type that accepts VirtualwanlinkServiceInternetServiceNameArray and VirtualwanlinkServiceInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceInternetServiceNameArrayInput` via:
//
//	VirtualwanlinkServiceInternetServiceNameArray{ VirtualwanlinkServiceInternetServiceNameArgs{...} }
type VirtualwanlinkServiceInternetServiceNameArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceInternetServiceNameArrayOutput() VirtualwanlinkServiceInternetServiceNameArrayOutput
	ToVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(context.Context) VirtualwanlinkServiceInternetServiceNameArrayOutput
}

type VirtualwanlinkServiceInternetServiceNameArray []VirtualwanlinkServiceInternetServiceNameInput

func (VirtualwanlinkServiceInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (i VirtualwanlinkServiceInternetServiceNameArray) ToVirtualwanlinkServiceInternetServiceNameArrayOutput() VirtualwanlinkServiceInternetServiceNameArrayOutput {
	return i.ToVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceInternetServiceNameArray) ToVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceInternetServiceNameArrayOutput)
}

type VirtualwanlinkServiceInternetServiceNameOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceNameOutput) ToVirtualwanlinkServiceInternetServiceNameOutput() VirtualwanlinkServiceInternetServiceNameOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceNameOutput) ToVirtualwanlinkServiceInternetServiceNameOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceNameOutput {
	return o
}

// Internet service name.
func (o VirtualwanlinkServiceInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (o VirtualwanlinkServiceInternetServiceNameArrayOutput) ToVirtualwanlinkServiceInternetServiceNameArrayOutput() VirtualwanlinkServiceInternetServiceNameArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceNameArrayOutput) ToVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceInternetServiceNameArrayOutput {
	return o
}

func (o VirtualwanlinkServiceInternetServiceNameArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceInternetServiceName {
		return vs[0].([]VirtualwanlinkServiceInternetServiceName)[vs[1].(int)]
	}).(VirtualwanlinkServiceInternetServiceNameOutput)
}

type VirtualwanlinkServicePriorityMember struct {
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
}

// VirtualwanlinkServicePriorityMemberInput is an input type that accepts VirtualwanlinkServicePriorityMemberArgs and VirtualwanlinkServicePriorityMemberOutput values.
// You can construct a concrete instance of `VirtualwanlinkServicePriorityMemberInput` via:
//
//	VirtualwanlinkServicePriorityMemberArgs{...}
type VirtualwanlinkServicePriorityMemberInput interface {
	pulumi.Input

	ToVirtualwanlinkServicePriorityMemberOutput() VirtualwanlinkServicePriorityMemberOutput
	ToVirtualwanlinkServicePriorityMemberOutputWithContext(context.Context) VirtualwanlinkServicePriorityMemberOutput
}

type VirtualwanlinkServicePriorityMemberArgs struct {
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (VirtualwanlinkServicePriorityMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (i VirtualwanlinkServicePriorityMemberArgs) ToVirtualwanlinkServicePriorityMemberOutput() VirtualwanlinkServicePriorityMemberOutput {
	return i.ToVirtualwanlinkServicePriorityMemberOutputWithContext(context.Background())
}

func (i VirtualwanlinkServicePriorityMemberArgs) ToVirtualwanlinkServicePriorityMemberOutputWithContext(ctx context.Context) VirtualwanlinkServicePriorityMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServicePriorityMemberOutput)
}

// VirtualwanlinkServicePriorityMemberArrayInput is an input type that accepts VirtualwanlinkServicePriorityMemberArray and VirtualwanlinkServicePriorityMemberArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServicePriorityMemberArrayInput` via:
//
//	VirtualwanlinkServicePriorityMemberArray{ VirtualwanlinkServicePriorityMemberArgs{...} }
type VirtualwanlinkServicePriorityMemberArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServicePriorityMemberArrayOutput() VirtualwanlinkServicePriorityMemberArrayOutput
	ToVirtualwanlinkServicePriorityMemberArrayOutputWithContext(context.Context) VirtualwanlinkServicePriorityMemberArrayOutput
}

type VirtualwanlinkServicePriorityMemberArray []VirtualwanlinkServicePriorityMemberInput

func (VirtualwanlinkServicePriorityMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (i VirtualwanlinkServicePriorityMemberArray) ToVirtualwanlinkServicePriorityMemberArrayOutput() VirtualwanlinkServicePriorityMemberArrayOutput {
	return i.ToVirtualwanlinkServicePriorityMemberArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServicePriorityMemberArray) ToVirtualwanlinkServicePriorityMemberArrayOutputWithContext(ctx context.Context) VirtualwanlinkServicePriorityMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServicePriorityMemberArrayOutput)
}

type VirtualwanlinkServicePriorityMemberOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServicePriorityMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (o VirtualwanlinkServicePriorityMemberOutput) ToVirtualwanlinkServicePriorityMemberOutput() VirtualwanlinkServicePriorityMemberOutput {
	return o
}

func (o VirtualwanlinkServicePriorityMemberOutput) ToVirtualwanlinkServicePriorityMemberOutputWithContext(ctx context.Context) VirtualwanlinkServicePriorityMemberOutput {
	return o
}

// Member sequence number.
func (o VirtualwanlinkServicePriorityMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServicePriorityMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type VirtualwanlinkServicePriorityMemberArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServicePriorityMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (o VirtualwanlinkServicePriorityMemberArrayOutput) ToVirtualwanlinkServicePriorityMemberArrayOutput() VirtualwanlinkServicePriorityMemberArrayOutput {
	return o
}

func (o VirtualwanlinkServicePriorityMemberArrayOutput) ToVirtualwanlinkServicePriorityMemberArrayOutputWithContext(ctx context.Context) VirtualwanlinkServicePriorityMemberArrayOutput {
	return o
}

func (o VirtualwanlinkServicePriorityMemberArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServicePriorityMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServicePriorityMember {
		return vs[0].([]VirtualwanlinkServicePriorityMember)[vs[1].(int)]
	}).(VirtualwanlinkServicePriorityMemberOutput)
}

type VirtualwanlinkServiceSla struct {
	// Virtual WAN Link health-check.
	HealthCheck *string `pulumi:"healthCheck"`
	// SLA ID.
	Id *int `pulumi:"id"`
}

// VirtualwanlinkServiceSlaInput is an input type that accepts VirtualwanlinkServiceSlaArgs and VirtualwanlinkServiceSlaOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceSlaInput` via:
//
//	VirtualwanlinkServiceSlaArgs{...}
type VirtualwanlinkServiceSlaInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceSlaOutput() VirtualwanlinkServiceSlaOutput
	ToVirtualwanlinkServiceSlaOutputWithContext(context.Context) VirtualwanlinkServiceSlaOutput
}

type VirtualwanlinkServiceSlaArgs struct {
	// Virtual WAN Link health-check.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// SLA ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (VirtualwanlinkServiceSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceSla)(nil)).Elem()
}

func (i VirtualwanlinkServiceSlaArgs) ToVirtualwanlinkServiceSlaOutput() VirtualwanlinkServiceSlaOutput {
	return i.ToVirtualwanlinkServiceSlaOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceSlaArgs) ToVirtualwanlinkServiceSlaOutputWithContext(ctx context.Context) VirtualwanlinkServiceSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceSlaOutput)
}

// VirtualwanlinkServiceSlaArrayInput is an input type that accepts VirtualwanlinkServiceSlaArray and VirtualwanlinkServiceSlaArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceSlaArrayInput` via:
//
//	VirtualwanlinkServiceSlaArray{ VirtualwanlinkServiceSlaArgs{...} }
type VirtualwanlinkServiceSlaArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceSlaArrayOutput() VirtualwanlinkServiceSlaArrayOutput
	ToVirtualwanlinkServiceSlaArrayOutputWithContext(context.Context) VirtualwanlinkServiceSlaArrayOutput
}

type VirtualwanlinkServiceSlaArray []VirtualwanlinkServiceSlaInput

func (VirtualwanlinkServiceSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceSla)(nil)).Elem()
}

func (i VirtualwanlinkServiceSlaArray) ToVirtualwanlinkServiceSlaArrayOutput() VirtualwanlinkServiceSlaArrayOutput {
	return i.ToVirtualwanlinkServiceSlaArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceSlaArray) ToVirtualwanlinkServiceSlaArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceSlaArrayOutput)
}

type VirtualwanlinkServiceSlaOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceSla)(nil)).Elem()
}

func (o VirtualwanlinkServiceSlaOutput) ToVirtualwanlinkServiceSlaOutput() VirtualwanlinkServiceSlaOutput {
	return o
}

func (o VirtualwanlinkServiceSlaOutput) ToVirtualwanlinkServiceSlaOutputWithContext(ctx context.Context) VirtualwanlinkServiceSlaOutput {
	return o
}

// Virtual WAN Link health-check.
func (o VirtualwanlinkServiceSlaOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceSla) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// SLA ID.
func (o VirtualwanlinkServiceSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type VirtualwanlinkServiceSlaArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceSla)(nil)).Elem()
}

func (o VirtualwanlinkServiceSlaArrayOutput) ToVirtualwanlinkServiceSlaArrayOutput() VirtualwanlinkServiceSlaArrayOutput {
	return o
}

func (o VirtualwanlinkServiceSlaArrayOutput) ToVirtualwanlinkServiceSlaArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceSlaArrayOutput {
	return o
}

func (o VirtualwanlinkServiceSlaArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceSla {
		return vs[0].([]VirtualwanlinkServiceSla)[vs[1].(int)]
	}).(VirtualwanlinkServiceSlaOutput)
}

type VirtualwanlinkServiceSrc6 struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceSrc6Input is an input type that accepts VirtualwanlinkServiceSrc6Args and VirtualwanlinkServiceSrc6Output values.
// You can construct a concrete instance of `VirtualwanlinkServiceSrc6Input` via:
//
//	VirtualwanlinkServiceSrc6Args{...}
type VirtualwanlinkServiceSrc6Input interface {
	pulumi.Input

	ToVirtualwanlinkServiceSrc6Output() VirtualwanlinkServiceSrc6Output
	ToVirtualwanlinkServiceSrc6OutputWithContext(context.Context) VirtualwanlinkServiceSrc6Output
}

type VirtualwanlinkServiceSrc6Args struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceSrc6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (i VirtualwanlinkServiceSrc6Args) ToVirtualwanlinkServiceSrc6Output() VirtualwanlinkServiceSrc6Output {
	return i.ToVirtualwanlinkServiceSrc6OutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceSrc6Args) ToVirtualwanlinkServiceSrc6OutputWithContext(ctx context.Context) VirtualwanlinkServiceSrc6Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceSrc6Output)
}

// VirtualwanlinkServiceSrc6ArrayInput is an input type that accepts VirtualwanlinkServiceSrc6Array and VirtualwanlinkServiceSrc6ArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceSrc6ArrayInput` via:
//
//	VirtualwanlinkServiceSrc6Array{ VirtualwanlinkServiceSrc6Args{...} }
type VirtualwanlinkServiceSrc6ArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceSrc6ArrayOutput() VirtualwanlinkServiceSrc6ArrayOutput
	ToVirtualwanlinkServiceSrc6ArrayOutputWithContext(context.Context) VirtualwanlinkServiceSrc6ArrayOutput
}

type VirtualwanlinkServiceSrc6Array []VirtualwanlinkServiceSrc6Input

func (VirtualwanlinkServiceSrc6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (i VirtualwanlinkServiceSrc6Array) ToVirtualwanlinkServiceSrc6ArrayOutput() VirtualwanlinkServiceSrc6ArrayOutput {
	return i.ToVirtualwanlinkServiceSrc6ArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceSrc6Array) ToVirtualwanlinkServiceSrc6ArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceSrc6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceSrc6ArrayOutput)
}

type VirtualwanlinkServiceSrc6Output struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceSrc6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (o VirtualwanlinkServiceSrc6Output) ToVirtualwanlinkServiceSrc6Output() VirtualwanlinkServiceSrc6Output {
	return o
}

func (o VirtualwanlinkServiceSrc6Output) ToVirtualwanlinkServiceSrc6OutputWithContext(ctx context.Context) VirtualwanlinkServiceSrc6Output {
	return o
}

// Address or address group name.
func (o VirtualwanlinkServiceSrc6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceSrc6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceSrc6ArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceSrc6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (o VirtualwanlinkServiceSrc6ArrayOutput) ToVirtualwanlinkServiceSrc6ArrayOutput() VirtualwanlinkServiceSrc6ArrayOutput {
	return o
}

func (o VirtualwanlinkServiceSrc6ArrayOutput) ToVirtualwanlinkServiceSrc6ArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceSrc6ArrayOutput {
	return o
}

func (o VirtualwanlinkServiceSrc6ArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceSrc6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceSrc6 {
		return vs[0].([]VirtualwanlinkServiceSrc6)[vs[1].(int)]
	}).(VirtualwanlinkServiceSrc6Output)
}

type VirtualwanlinkServiceSrc struct {
	// Address6 or address6 group name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceSrcInput is an input type that accepts VirtualwanlinkServiceSrcArgs and VirtualwanlinkServiceSrcOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceSrcInput` via:
//
//	VirtualwanlinkServiceSrcArgs{...}
type VirtualwanlinkServiceSrcInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceSrcOutput() VirtualwanlinkServiceSrcOutput
	ToVirtualwanlinkServiceSrcOutputWithContext(context.Context) VirtualwanlinkServiceSrcOutput
}

type VirtualwanlinkServiceSrcArgs struct {
	// Address6 or address6 group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceSrcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceSrc)(nil)).Elem()
}

func (i VirtualwanlinkServiceSrcArgs) ToVirtualwanlinkServiceSrcOutput() VirtualwanlinkServiceSrcOutput {
	return i.ToVirtualwanlinkServiceSrcOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceSrcArgs) ToVirtualwanlinkServiceSrcOutputWithContext(ctx context.Context) VirtualwanlinkServiceSrcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceSrcOutput)
}

// VirtualwanlinkServiceSrcArrayInput is an input type that accepts VirtualwanlinkServiceSrcArray and VirtualwanlinkServiceSrcArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceSrcArrayInput` via:
//
//	VirtualwanlinkServiceSrcArray{ VirtualwanlinkServiceSrcArgs{...} }
type VirtualwanlinkServiceSrcArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceSrcArrayOutput() VirtualwanlinkServiceSrcArrayOutput
	ToVirtualwanlinkServiceSrcArrayOutputWithContext(context.Context) VirtualwanlinkServiceSrcArrayOutput
}

type VirtualwanlinkServiceSrcArray []VirtualwanlinkServiceSrcInput

func (VirtualwanlinkServiceSrcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceSrc)(nil)).Elem()
}

func (i VirtualwanlinkServiceSrcArray) ToVirtualwanlinkServiceSrcArrayOutput() VirtualwanlinkServiceSrcArrayOutput {
	return i.ToVirtualwanlinkServiceSrcArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceSrcArray) ToVirtualwanlinkServiceSrcArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceSrcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceSrcArrayOutput)
}

type VirtualwanlinkServiceSrcOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceSrcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceSrc)(nil)).Elem()
}

func (o VirtualwanlinkServiceSrcOutput) ToVirtualwanlinkServiceSrcOutput() VirtualwanlinkServiceSrcOutput {
	return o
}

func (o VirtualwanlinkServiceSrcOutput) ToVirtualwanlinkServiceSrcOutputWithContext(ctx context.Context) VirtualwanlinkServiceSrcOutput {
	return o
}

// Address6 or address6 group name.
func (o VirtualwanlinkServiceSrcOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceSrc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceSrcArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceSrcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceSrc)(nil)).Elem()
}

func (o VirtualwanlinkServiceSrcArrayOutput) ToVirtualwanlinkServiceSrcArrayOutput() VirtualwanlinkServiceSrcArrayOutput {
	return o
}

func (o VirtualwanlinkServiceSrcArrayOutput) ToVirtualwanlinkServiceSrcArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceSrcArrayOutput {
	return o
}

func (o VirtualwanlinkServiceSrcArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceSrcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceSrc {
		return vs[0].([]VirtualwanlinkServiceSrc)[vs[1].(int)]
	}).(VirtualwanlinkServiceSrcOutput)
}

type VirtualwanlinkServiceUser struct {
	// User name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkServiceUserInput is an input type that accepts VirtualwanlinkServiceUserArgs and VirtualwanlinkServiceUserOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceUserInput` via:
//
//	VirtualwanlinkServiceUserArgs{...}
type VirtualwanlinkServiceUserInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceUserOutput() VirtualwanlinkServiceUserOutput
	ToVirtualwanlinkServiceUserOutputWithContext(context.Context) VirtualwanlinkServiceUserOutput
}

type VirtualwanlinkServiceUserArgs struct {
	// User name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkServiceUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceUser)(nil)).Elem()
}

func (i VirtualwanlinkServiceUserArgs) ToVirtualwanlinkServiceUserOutput() VirtualwanlinkServiceUserOutput {
	return i.ToVirtualwanlinkServiceUserOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceUserArgs) ToVirtualwanlinkServiceUserOutputWithContext(ctx context.Context) VirtualwanlinkServiceUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceUserOutput)
}

// VirtualwanlinkServiceUserArrayInput is an input type that accepts VirtualwanlinkServiceUserArray and VirtualwanlinkServiceUserArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkServiceUserArrayInput` via:
//
//	VirtualwanlinkServiceUserArray{ VirtualwanlinkServiceUserArgs{...} }
type VirtualwanlinkServiceUserArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkServiceUserArrayOutput() VirtualwanlinkServiceUserArrayOutput
	ToVirtualwanlinkServiceUserArrayOutputWithContext(context.Context) VirtualwanlinkServiceUserArrayOutput
}

type VirtualwanlinkServiceUserArray []VirtualwanlinkServiceUserInput

func (VirtualwanlinkServiceUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceUser)(nil)).Elem()
}

func (i VirtualwanlinkServiceUserArray) ToVirtualwanlinkServiceUserArrayOutput() VirtualwanlinkServiceUserArrayOutput {
	return i.ToVirtualwanlinkServiceUserArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkServiceUserArray) ToVirtualwanlinkServiceUserArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkServiceUserArrayOutput)
}

type VirtualwanlinkServiceUserOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkServiceUser)(nil)).Elem()
}

func (o VirtualwanlinkServiceUserOutput) ToVirtualwanlinkServiceUserOutput() VirtualwanlinkServiceUserOutput {
	return o
}

func (o VirtualwanlinkServiceUserOutput) ToVirtualwanlinkServiceUserOutputWithContext(ctx context.Context) VirtualwanlinkServiceUserOutput {
	return o
}

// User name.
func (o VirtualwanlinkServiceUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkServiceUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkServiceUserArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkServiceUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkServiceUser)(nil)).Elem()
}

func (o VirtualwanlinkServiceUserArrayOutput) ToVirtualwanlinkServiceUserArrayOutput() VirtualwanlinkServiceUserArrayOutput {
	return o
}

func (o VirtualwanlinkServiceUserArrayOutput) ToVirtualwanlinkServiceUserArrayOutputWithContext(ctx context.Context) VirtualwanlinkServiceUserArrayOutput {
	return o
}

func (o VirtualwanlinkServiceUserArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkServiceUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkServiceUser {
		return vs[0].([]VirtualwanlinkServiceUser)[vs[1].(int)]
	}).(VirtualwanlinkServiceUserOutput)
}

type VirtualwanlinkZone struct {
	// Zone name.
	Name *string `pulumi:"name"`
}

// VirtualwanlinkZoneInput is an input type that accepts VirtualwanlinkZoneArgs and VirtualwanlinkZoneOutput values.
// You can construct a concrete instance of `VirtualwanlinkZoneInput` via:
//
//	VirtualwanlinkZoneArgs{...}
type VirtualwanlinkZoneInput interface {
	pulumi.Input

	ToVirtualwanlinkZoneOutput() VirtualwanlinkZoneOutput
	ToVirtualwanlinkZoneOutputWithContext(context.Context) VirtualwanlinkZoneOutput
}

type VirtualwanlinkZoneArgs struct {
	// Zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualwanlinkZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkZone)(nil)).Elem()
}

func (i VirtualwanlinkZoneArgs) ToVirtualwanlinkZoneOutput() VirtualwanlinkZoneOutput {
	return i.ToVirtualwanlinkZoneOutputWithContext(context.Background())
}

func (i VirtualwanlinkZoneArgs) ToVirtualwanlinkZoneOutputWithContext(ctx context.Context) VirtualwanlinkZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkZoneOutput)
}

// VirtualwanlinkZoneArrayInput is an input type that accepts VirtualwanlinkZoneArray and VirtualwanlinkZoneArrayOutput values.
// You can construct a concrete instance of `VirtualwanlinkZoneArrayInput` via:
//
//	VirtualwanlinkZoneArray{ VirtualwanlinkZoneArgs{...} }
type VirtualwanlinkZoneArrayInput interface {
	pulumi.Input

	ToVirtualwanlinkZoneArrayOutput() VirtualwanlinkZoneArrayOutput
	ToVirtualwanlinkZoneArrayOutputWithContext(context.Context) VirtualwanlinkZoneArrayOutput
}

type VirtualwanlinkZoneArray []VirtualwanlinkZoneInput

func (VirtualwanlinkZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkZone)(nil)).Elem()
}

func (i VirtualwanlinkZoneArray) ToVirtualwanlinkZoneArrayOutput() VirtualwanlinkZoneArrayOutput {
	return i.ToVirtualwanlinkZoneArrayOutputWithContext(context.Background())
}

func (i VirtualwanlinkZoneArray) ToVirtualwanlinkZoneArrayOutputWithContext(ctx context.Context) VirtualwanlinkZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwanlinkZoneArrayOutput)
}

type VirtualwanlinkZoneOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwanlinkZone)(nil)).Elem()
}

func (o VirtualwanlinkZoneOutput) ToVirtualwanlinkZoneOutput() VirtualwanlinkZoneOutput {
	return o
}

func (o VirtualwanlinkZoneOutput) ToVirtualwanlinkZoneOutputWithContext(ctx context.Context) VirtualwanlinkZoneOutput {
	return o
}

// Zone name.
func (o VirtualwanlinkZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwanlinkZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualwanlinkZoneArrayOutput struct{ *pulumi.OutputState }

func (VirtualwanlinkZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwanlinkZone)(nil)).Elem()
}

func (o VirtualwanlinkZoneArrayOutput) ToVirtualwanlinkZoneArrayOutput() VirtualwanlinkZoneArrayOutput {
	return o
}

func (o VirtualwanlinkZoneArrayOutput) ToVirtualwanlinkZoneArrayOutputWithContext(ctx context.Context) VirtualwanlinkZoneArrayOutput {
	return o
}

func (o VirtualwanlinkZoneArrayOutput) Index(i pulumi.IntInput) VirtualwanlinkZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwanlinkZone {
		return vs[0].([]VirtualwanlinkZone)[vs[1].(int)]
	}).(VirtualwanlinkZoneOutput)
}

type VirtualwirepairMember struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// VirtualwirepairMemberInput is an input type that accepts VirtualwirepairMemberArgs and VirtualwirepairMemberOutput values.
// You can construct a concrete instance of `VirtualwirepairMemberInput` via:
//
//	VirtualwirepairMemberArgs{...}
type VirtualwirepairMemberInput interface {
	pulumi.Input

	ToVirtualwirepairMemberOutput() VirtualwirepairMemberOutput
	ToVirtualwirepairMemberOutputWithContext(context.Context) VirtualwirepairMemberOutput
}

type VirtualwirepairMemberArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (VirtualwirepairMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwirepairMember)(nil)).Elem()
}

func (i VirtualwirepairMemberArgs) ToVirtualwirepairMemberOutput() VirtualwirepairMemberOutput {
	return i.ToVirtualwirepairMemberOutputWithContext(context.Background())
}

func (i VirtualwirepairMemberArgs) ToVirtualwirepairMemberOutputWithContext(ctx context.Context) VirtualwirepairMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwirepairMemberOutput)
}

// VirtualwirepairMemberArrayInput is an input type that accepts VirtualwirepairMemberArray and VirtualwirepairMemberArrayOutput values.
// You can construct a concrete instance of `VirtualwirepairMemberArrayInput` via:
//
//	VirtualwirepairMemberArray{ VirtualwirepairMemberArgs{...} }
type VirtualwirepairMemberArrayInput interface {
	pulumi.Input

	ToVirtualwirepairMemberArrayOutput() VirtualwirepairMemberArrayOutput
	ToVirtualwirepairMemberArrayOutputWithContext(context.Context) VirtualwirepairMemberArrayOutput
}

type VirtualwirepairMemberArray []VirtualwirepairMemberInput

func (VirtualwirepairMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwirepairMember)(nil)).Elem()
}

func (i VirtualwirepairMemberArray) ToVirtualwirepairMemberArrayOutput() VirtualwirepairMemberArrayOutput {
	return i.ToVirtualwirepairMemberArrayOutputWithContext(context.Background())
}

func (i VirtualwirepairMemberArray) ToVirtualwirepairMemberArrayOutputWithContext(ctx context.Context) VirtualwirepairMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualwirepairMemberArrayOutput)
}

type VirtualwirepairMemberOutput struct{ *pulumi.OutputState }

func (VirtualwirepairMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualwirepairMember)(nil)).Elem()
}

func (o VirtualwirepairMemberOutput) ToVirtualwirepairMemberOutput() VirtualwirepairMemberOutput {
	return o
}

func (o VirtualwirepairMemberOutput) ToVirtualwirepairMemberOutputWithContext(ctx context.Context) VirtualwirepairMemberOutput {
	return o
}

// Interface name.
func (o VirtualwirepairMemberOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualwirepairMember) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type VirtualwirepairMemberArrayOutput struct{ *pulumi.OutputState }

func (VirtualwirepairMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualwirepairMember)(nil)).Elem()
}

func (o VirtualwirepairMemberArrayOutput) ToVirtualwirepairMemberArrayOutput() VirtualwirepairMemberArrayOutput {
	return o
}

func (o VirtualwirepairMemberArrayOutput) ToVirtualwirepairMemberArrayOutputWithContext(ctx context.Context) VirtualwirepairMemberArrayOutput {
	return o
}

func (o VirtualwirepairMemberArrayOutput) Index(i pulumi.IntInput) VirtualwirepairMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualwirepairMember {
		return vs[0].([]VirtualwirepairMember)[vs[1].(int)]
	}).(VirtualwirepairMemberOutput)
}

type VxlanRemoteIp6 struct {
	// IPv6 address.
	Ip6 *string `pulumi:"ip6"`
}

// VxlanRemoteIp6Input is an input type that accepts VxlanRemoteIp6Args and VxlanRemoteIp6Output values.
// You can construct a concrete instance of `VxlanRemoteIp6Input` via:
//
//	VxlanRemoteIp6Args{...}
type VxlanRemoteIp6Input interface {
	pulumi.Input

	ToVxlanRemoteIp6Output() VxlanRemoteIp6Output
	ToVxlanRemoteIp6OutputWithContext(context.Context) VxlanRemoteIp6Output
}

type VxlanRemoteIp6Args struct {
	// IPv6 address.
	Ip6 pulumi.StringPtrInput `pulumi:"ip6"`
}

func (VxlanRemoteIp6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VxlanRemoteIp6)(nil)).Elem()
}

func (i VxlanRemoteIp6Args) ToVxlanRemoteIp6Output() VxlanRemoteIp6Output {
	return i.ToVxlanRemoteIp6OutputWithContext(context.Background())
}

func (i VxlanRemoteIp6Args) ToVxlanRemoteIp6OutputWithContext(ctx context.Context) VxlanRemoteIp6Output {
	return pulumi.ToOutputWithContext(ctx, i).(VxlanRemoteIp6Output)
}

// VxlanRemoteIp6ArrayInput is an input type that accepts VxlanRemoteIp6Array and VxlanRemoteIp6ArrayOutput values.
// You can construct a concrete instance of `VxlanRemoteIp6ArrayInput` via:
//
//	VxlanRemoteIp6Array{ VxlanRemoteIp6Args{...} }
type VxlanRemoteIp6ArrayInput interface {
	pulumi.Input

	ToVxlanRemoteIp6ArrayOutput() VxlanRemoteIp6ArrayOutput
	ToVxlanRemoteIp6ArrayOutputWithContext(context.Context) VxlanRemoteIp6ArrayOutput
}

type VxlanRemoteIp6Array []VxlanRemoteIp6Input

func (VxlanRemoteIp6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VxlanRemoteIp6)(nil)).Elem()
}

func (i VxlanRemoteIp6Array) ToVxlanRemoteIp6ArrayOutput() VxlanRemoteIp6ArrayOutput {
	return i.ToVxlanRemoteIp6ArrayOutputWithContext(context.Background())
}

func (i VxlanRemoteIp6Array) ToVxlanRemoteIp6ArrayOutputWithContext(ctx context.Context) VxlanRemoteIp6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VxlanRemoteIp6ArrayOutput)
}

type VxlanRemoteIp6Output struct{ *pulumi.OutputState }

func (VxlanRemoteIp6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VxlanRemoteIp6)(nil)).Elem()
}

func (o VxlanRemoteIp6Output) ToVxlanRemoteIp6Output() VxlanRemoteIp6Output {
	return o
}

func (o VxlanRemoteIp6Output) ToVxlanRemoteIp6OutputWithContext(ctx context.Context) VxlanRemoteIp6Output {
	return o
}

// IPv6 address.
func (o VxlanRemoteIp6Output) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VxlanRemoteIp6) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

type VxlanRemoteIp6ArrayOutput struct{ *pulumi.OutputState }

func (VxlanRemoteIp6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VxlanRemoteIp6)(nil)).Elem()
}

func (o VxlanRemoteIp6ArrayOutput) ToVxlanRemoteIp6ArrayOutput() VxlanRemoteIp6ArrayOutput {
	return o
}

func (o VxlanRemoteIp6ArrayOutput) ToVxlanRemoteIp6ArrayOutputWithContext(ctx context.Context) VxlanRemoteIp6ArrayOutput {
	return o
}

func (o VxlanRemoteIp6ArrayOutput) Index(i pulumi.IntInput) VxlanRemoteIp6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VxlanRemoteIp6 {
		return vs[0].([]VxlanRemoteIp6)[vs[1].(int)]
	}).(VxlanRemoteIp6Output)
}

type VxlanRemoteIp struct {
	// IPv4 address.
	//
	// The `remoteIp6` block supports:
	Ip *string `pulumi:"ip"`
}

// VxlanRemoteIpInput is an input type that accepts VxlanRemoteIpArgs and VxlanRemoteIpOutput values.
// You can construct a concrete instance of `VxlanRemoteIpInput` via:
//
//	VxlanRemoteIpArgs{...}
type VxlanRemoteIpInput interface {
	pulumi.Input

	ToVxlanRemoteIpOutput() VxlanRemoteIpOutput
	ToVxlanRemoteIpOutputWithContext(context.Context) VxlanRemoteIpOutput
}

type VxlanRemoteIpArgs struct {
	// IPv4 address.
	//
	// The `remoteIp6` block supports:
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (VxlanRemoteIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VxlanRemoteIp)(nil)).Elem()
}

func (i VxlanRemoteIpArgs) ToVxlanRemoteIpOutput() VxlanRemoteIpOutput {
	return i.ToVxlanRemoteIpOutputWithContext(context.Background())
}

func (i VxlanRemoteIpArgs) ToVxlanRemoteIpOutputWithContext(ctx context.Context) VxlanRemoteIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VxlanRemoteIpOutput)
}

// VxlanRemoteIpArrayInput is an input type that accepts VxlanRemoteIpArray and VxlanRemoteIpArrayOutput values.
// You can construct a concrete instance of `VxlanRemoteIpArrayInput` via:
//
//	VxlanRemoteIpArray{ VxlanRemoteIpArgs{...} }
type VxlanRemoteIpArrayInput interface {
	pulumi.Input

	ToVxlanRemoteIpArrayOutput() VxlanRemoteIpArrayOutput
	ToVxlanRemoteIpArrayOutputWithContext(context.Context) VxlanRemoteIpArrayOutput
}

type VxlanRemoteIpArray []VxlanRemoteIpInput

func (VxlanRemoteIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VxlanRemoteIp)(nil)).Elem()
}

func (i VxlanRemoteIpArray) ToVxlanRemoteIpArrayOutput() VxlanRemoteIpArrayOutput {
	return i.ToVxlanRemoteIpArrayOutputWithContext(context.Background())
}

func (i VxlanRemoteIpArray) ToVxlanRemoteIpArrayOutputWithContext(ctx context.Context) VxlanRemoteIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VxlanRemoteIpArrayOutput)
}

type VxlanRemoteIpOutput struct{ *pulumi.OutputState }

func (VxlanRemoteIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VxlanRemoteIp)(nil)).Elem()
}

func (o VxlanRemoteIpOutput) ToVxlanRemoteIpOutput() VxlanRemoteIpOutput {
	return o
}

func (o VxlanRemoteIpOutput) ToVxlanRemoteIpOutputWithContext(ctx context.Context) VxlanRemoteIpOutput {
	return o
}

// IPv4 address.
//
// The `remoteIp6` block supports:
func (o VxlanRemoteIpOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VxlanRemoteIp) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type VxlanRemoteIpArrayOutput struct{ *pulumi.OutputState }

func (VxlanRemoteIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VxlanRemoteIp)(nil)).Elem()
}

func (o VxlanRemoteIpArrayOutput) ToVxlanRemoteIpArrayOutput() VxlanRemoteIpArrayOutput {
	return o
}

func (o VxlanRemoteIpArrayOutput) ToVxlanRemoteIpArrayOutputWithContext(ctx context.Context) VxlanRemoteIpArrayOutput {
	return o
}

func (o VxlanRemoteIpArrayOutput) Index(i pulumi.IntInput) VxlanRemoteIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VxlanRemoteIp {
		return vs[0].([]VxlanRemoteIp)[vs[1].(int)]
	}).(VxlanRemoteIpOutput)
}

type ZoneInterface struct {
	// Select interfaces to add to the zone.
	InterfaceName *string `pulumi:"interfaceName"`
}

// ZoneInterfaceInput is an input type that accepts ZoneInterfaceArgs and ZoneInterfaceOutput values.
// You can construct a concrete instance of `ZoneInterfaceInput` via:
//
//	ZoneInterfaceArgs{...}
type ZoneInterfaceInput interface {
	pulumi.Input

	ToZoneInterfaceOutput() ZoneInterfaceOutput
	ToZoneInterfaceOutputWithContext(context.Context) ZoneInterfaceOutput
}

type ZoneInterfaceArgs struct {
	// Select interfaces to add to the zone.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (ZoneInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneInterface)(nil)).Elem()
}

func (i ZoneInterfaceArgs) ToZoneInterfaceOutput() ZoneInterfaceOutput {
	return i.ToZoneInterfaceOutputWithContext(context.Background())
}

func (i ZoneInterfaceArgs) ToZoneInterfaceOutputWithContext(ctx context.Context) ZoneInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneInterfaceOutput)
}

// ZoneInterfaceArrayInput is an input type that accepts ZoneInterfaceArray and ZoneInterfaceArrayOutput values.
// You can construct a concrete instance of `ZoneInterfaceArrayInput` via:
//
//	ZoneInterfaceArray{ ZoneInterfaceArgs{...} }
type ZoneInterfaceArrayInput interface {
	pulumi.Input

	ToZoneInterfaceArrayOutput() ZoneInterfaceArrayOutput
	ToZoneInterfaceArrayOutputWithContext(context.Context) ZoneInterfaceArrayOutput
}

type ZoneInterfaceArray []ZoneInterfaceInput

func (ZoneInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneInterface)(nil)).Elem()
}

func (i ZoneInterfaceArray) ToZoneInterfaceArrayOutput() ZoneInterfaceArrayOutput {
	return i.ToZoneInterfaceArrayOutputWithContext(context.Background())
}

func (i ZoneInterfaceArray) ToZoneInterfaceArrayOutputWithContext(ctx context.Context) ZoneInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneInterfaceArrayOutput)
}

type ZoneInterfaceOutput struct{ *pulumi.OutputState }

func (ZoneInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneInterface)(nil)).Elem()
}

func (o ZoneInterfaceOutput) ToZoneInterfaceOutput() ZoneInterfaceOutput {
	return o
}

func (o ZoneInterfaceOutput) ToZoneInterfaceOutputWithContext(ctx context.Context) ZoneInterfaceOutput {
	return o
}

// Select interfaces to add to the zone.
func (o ZoneInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type ZoneInterfaceArrayOutput struct{ *pulumi.OutputState }

func (ZoneInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneInterface)(nil)).Elem()
}

func (o ZoneInterfaceArrayOutput) ToZoneInterfaceArrayOutput() ZoneInterfaceArrayOutput {
	return o
}

func (o ZoneInterfaceArrayOutput) ToZoneInterfaceArrayOutputWithContext(ctx context.Context) ZoneInterfaceArrayOutput {
	return o
}

func (o ZoneInterfaceArrayOutput) Index(i pulumi.IntInput) ZoneInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneInterface {
		return vs[0].([]ZoneInterface)[vs[1].(int)]
	}).(ZoneInterfaceOutput)
}

type ZoneTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []ZoneTaggingTag `pulumi:"tags"`
}

// ZoneTaggingInput is an input type that accepts ZoneTaggingArgs and ZoneTaggingOutput values.
// You can construct a concrete instance of `ZoneTaggingInput` via:
//
//	ZoneTaggingArgs{...}
type ZoneTaggingInput interface {
	pulumi.Input

	ToZoneTaggingOutput() ZoneTaggingOutput
	ToZoneTaggingOutputWithContext(context.Context) ZoneTaggingOutput
}

type ZoneTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags ZoneTaggingTagArrayInput `pulumi:"tags"`
}

func (ZoneTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneTagging)(nil)).Elem()
}

func (i ZoneTaggingArgs) ToZoneTaggingOutput() ZoneTaggingOutput {
	return i.ToZoneTaggingOutputWithContext(context.Background())
}

func (i ZoneTaggingArgs) ToZoneTaggingOutputWithContext(ctx context.Context) ZoneTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneTaggingOutput)
}

// ZoneTaggingArrayInput is an input type that accepts ZoneTaggingArray and ZoneTaggingArrayOutput values.
// You can construct a concrete instance of `ZoneTaggingArrayInput` via:
//
//	ZoneTaggingArray{ ZoneTaggingArgs{...} }
type ZoneTaggingArrayInput interface {
	pulumi.Input

	ToZoneTaggingArrayOutput() ZoneTaggingArrayOutput
	ToZoneTaggingArrayOutputWithContext(context.Context) ZoneTaggingArrayOutput
}

type ZoneTaggingArray []ZoneTaggingInput

func (ZoneTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneTagging)(nil)).Elem()
}

func (i ZoneTaggingArray) ToZoneTaggingArrayOutput() ZoneTaggingArrayOutput {
	return i.ToZoneTaggingArrayOutputWithContext(context.Background())
}

func (i ZoneTaggingArray) ToZoneTaggingArrayOutputWithContext(ctx context.Context) ZoneTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneTaggingArrayOutput)
}

type ZoneTaggingOutput struct{ *pulumi.OutputState }

func (ZoneTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneTagging)(nil)).Elem()
}

func (o ZoneTaggingOutput) ToZoneTaggingOutput() ZoneTaggingOutput {
	return o
}

func (o ZoneTaggingOutput) ToZoneTaggingOutputWithContext(ctx context.Context) ZoneTaggingOutput {
	return o
}

// Tag category.
func (o ZoneTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o ZoneTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o ZoneTaggingOutput) Tags() ZoneTaggingTagArrayOutput {
	return o.ApplyT(func(v ZoneTagging) []ZoneTaggingTag { return v.Tags }).(ZoneTaggingTagArrayOutput)
}

type ZoneTaggingArrayOutput struct{ *pulumi.OutputState }

func (ZoneTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneTagging)(nil)).Elem()
}

func (o ZoneTaggingArrayOutput) ToZoneTaggingArrayOutput() ZoneTaggingArrayOutput {
	return o
}

func (o ZoneTaggingArrayOutput) ToZoneTaggingArrayOutputWithContext(ctx context.Context) ZoneTaggingArrayOutput {
	return o
}

func (o ZoneTaggingArrayOutput) Index(i pulumi.IntInput) ZoneTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneTagging {
		return vs[0].([]ZoneTagging)[vs[1].(int)]
	}).(ZoneTaggingOutput)
}

type ZoneTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// ZoneTaggingTagInput is an input type that accepts ZoneTaggingTagArgs and ZoneTaggingTagOutput values.
// You can construct a concrete instance of `ZoneTaggingTagInput` via:
//
//	ZoneTaggingTagArgs{...}
type ZoneTaggingTagInput interface {
	pulumi.Input

	ToZoneTaggingTagOutput() ZoneTaggingTagOutput
	ToZoneTaggingTagOutputWithContext(context.Context) ZoneTaggingTagOutput
}

type ZoneTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ZoneTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneTaggingTag)(nil)).Elem()
}

func (i ZoneTaggingTagArgs) ToZoneTaggingTagOutput() ZoneTaggingTagOutput {
	return i.ToZoneTaggingTagOutputWithContext(context.Background())
}

func (i ZoneTaggingTagArgs) ToZoneTaggingTagOutputWithContext(ctx context.Context) ZoneTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneTaggingTagOutput)
}

// ZoneTaggingTagArrayInput is an input type that accepts ZoneTaggingTagArray and ZoneTaggingTagArrayOutput values.
// You can construct a concrete instance of `ZoneTaggingTagArrayInput` via:
//
//	ZoneTaggingTagArray{ ZoneTaggingTagArgs{...} }
type ZoneTaggingTagArrayInput interface {
	pulumi.Input

	ToZoneTaggingTagArrayOutput() ZoneTaggingTagArrayOutput
	ToZoneTaggingTagArrayOutputWithContext(context.Context) ZoneTaggingTagArrayOutput
}

type ZoneTaggingTagArray []ZoneTaggingTagInput

func (ZoneTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneTaggingTag)(nil)).Elem()
}

func (i ZoneTaggingTagArray) ToZoneTaggingTagArrayOutput() ZoneTaggingTagArrayOutput {
	return i.ToZoneTaggingTagArrayOutputWithContext(context.Background())
}

func (i ZoneTaggingTagArray) ToZoneTaggingTagArrayOutputWithContext(ctx context.Context) ZoneTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneTaggingTagArrayOutput)
}

type ZoneTaggingTagOutput struct{ *pulumi.OutputState }

func (ZoneTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneTaggingTag)(nil)).Elem()
}

func (o ZoneTaggingTagOutput) ToZoneTaggingTagOutput() ZoneTaggingTagOutput {
	return o
}

func (o ZoneTaggingTagOutput) ToZoneTaggingTagOutputWithContext(ctx context.Context) ZoneTaggingTagOutput {
	return o
}

// Tag name.
func (o ZoneTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ZoneTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (ZoneTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneTaggingTag)(nil)).Elem()
}

func (o ZoneTaggingTagArrayOutput) ToZoneTaggingTagArrayOutput() ZoneTaggingTagArrayOutput {
	return o
}

func (o ZoneTaggingTagArrayOutput) ToZoneTaggingTagArrayOutputWithContext(ctx context.Context) ZoneTaggingTagArrayOutput {
	return o
}

func (o ZoneTaggingTagArrayOutput) Index(i pulumi.IntInput) ZoneTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneTaggingTag {
		return vs[0].([]ZoneTaggingTag)[vs[1].(int)]
	}).(ZoneTaggingTagOutput)
}

type GetAccprofileFwgrpPermission struct {
	// Address Configuration.
	Address string `pulumi:"address"`
	// Other Firewall Configuration.
	Others string `pulumi:"others"`
	// Policy Configuration.
	Policy string `pulumi:"policy"`
	// Schedule Configuration.
	Schedule string `pulumi:"schedule"`
	// Service Configuration.
	Service string `pulumi:"service"`
}

// GetAccprofileFwgrpPermissionInput is an input type that accepts GetAccprofileFwgrpPermissionArgs and GetAccprofileFwgrpPermissionOutput values.
// You can construct a concrete instance of `GetAccprofileFwgrpPermissionInput` via:
//
//	GetAccprofileFwgrpPermissionArgs{...}
type GetAccprofileFwgrpPermissionInput interface {
	pulumi.Input

	ToGetAccprofileFwgrpPermissionOutput() GetAccprofileFwgrpPermissionOutput
	ToGetAccprofileFwgrpPermissionOutputWithContext(context.Context) GetAccprofileFwgrpPermissionOutput
}

type GetAccprofileFwgrpPermissionArgs struct {
	// Address Configuration.
	Address pulumi.StringInput `pulumi:"address"`
	// Other Firewall Configuration.
	Others pulumi.StringInput `pulumi:"others"`
	// Policy Configuration.
	Policy pulumi.StringInput `pulumi:"policy"`
	// Schedule Configuration.
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// Service Configuration.
	Service pulumi.StringInput `pulumi:"service"`
}

func (GetAccprofileFwgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccprofileFwgrpPermission)(nil)).Elem()
}

func (i GetAccprofileFwgrpPermissionArgs) ToGetAccprofileFwgrpPermissionOutput() GetAccprofileFwgrpPermissionOutput {
	return i.ToGetAccprofileFwgrpPermissionOutputWithContext(context.Background())
}

func (i GetAccprofileFwgrpPermissionArgs) ToGetAccprofileFwgrpPermissionOutputWithContext(ctx context.Context) GetAccprofileFwgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccprofileFwgrpPermissionOutput)
}

// GetAccprofileFwgrpPermissionArrayInput is an input type that accepts GetAccprofileFwgrpPermissionArray and GetAccprofileFwgrpPermissionArrayOutput values.
// You can construct a concrete instance of `GetAccprofileFwgrpPermissionArrayInput` via:
//
//	GetAccprofileFwgrpPermissionArray{ GetAccprofileFwgrpPermissionArgs{...} }
type GetAccprofileFwgrpPermissionArrayInput interface {
	pulumi.Input

	ToGetAccprofileFwgrpPermissionArrayOutput() GetAccprofileFwgrpPermissionArrayOutput
	ToGetAccprofileFwgrpPermissionArrayOutputWithContext(context.Context) GetAccprofileFwgrpPermissionArrayOutput
}

type GetAccprofileFwgrpPermissionArray []GetAccprofileFwgrpPermissionInput

func (GetAccprofileFwgrpPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccprofileFwgrpPermission)(nil)).Elem()
}

func (i GetAccprofileFwgrpPermissionArray) ToGetAccprofileFwgrpPermissionArrayOutput() GetAccprofileFwgrpPermissionArrayOutput {
	return i.ToGetAccprofileFwgrpPermissionArrayOutputWithContext(context.Background())
}

func (i GetAccprofileFwgrpPermissionArray) ToGetAccprofileFwgrpPermissionArrayOutputWithContext(ctx context.Context) GetAccprofileFwgrpPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccprofileFwgrpPermissionArrayOutput)
}

type GetAccprofileFwgrpPermissionOutput struct{ *pulumi.OutputState }

func (GetAccprofileFwgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccprofileFwgrpPermission)(nil)).Elem()
}

func (o GetAccprofileFwgrpPermissionOutput) ToGetAccprofileFwgrpPermissionOutput() GetAccprofileFwgrpPermissionOutput {
	return o
}

func (o GetAccprofileFwgrpPermissionOutput) ToGetAccprofileFwgrpPermissionOutputWithContext(ctx context.Context) GetAccprofileFwgrpPermissionOutput {
	return o
}

// Address Configuration.
func (o GetAccprofileFwgrpPermissionOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileFwgrpPermission) string { return v.Address }).(pulumi.StringOutput)
}

// Other Firewall Configuration.
func (o GetAccprofileFwgrpPermissionOutput) Others() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileFwgrpPermission) string { return v.Others }).(pulumi.StringOutput)
}

// Policy Configuration.
func (o GetAccprofileFwgrpPermissionOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileFwgrpPermission) string { return v.Policy }).(pulumi.StringOutput)
}

// Schedule Configuration.
func (o GetAccprofileFwgrpPermissionOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileFwgrpPermission) string { return v.Schedule }).(pulumi.StringOutput)
}

// Service Configuration.
func (o GetAccprofileFwgrpPermissionOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileFwgrpPermission) string { return v.Service }).(pulumi.StringOutput)
}

type GetAccprofileFwgrpPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetAccprofileFwgrpPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccprofileFwgrpPermission)(nil)).Elem()
}

func (o GetAccprofileFwgrpPermissionArrayOutput) ToGetAccprofileFwgrpPermissionArrayOutput() GetAccprofileFwgrpPermissionArrayOutput {
	return o
}

func (o GetAccprofileFwgrpPermissionArrayOutput) ToGetAccprofileFwgrpPermissionArrayOutputWithContext(ctx context.Context) GetAccprofileFwgrpPermissionArrayOutput {
	return o
}

func (o GetAccprofileFwgrpPermissionArrayOutput) Index(i pulumi.IntInput) GetAccprofileFwgrpPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccprofileFwgrpPermission {
		return vs[0].([]GetAccprofileFwgrpPermission)[vs[1].(int)]
	}).(GetAccprofileFwgrpPermissionOutput)
}

type GetAccprofileLoggrpPermission struct {
	// Log & Report configuration.
	Config string `pulumi:"config"`
	// Log & Report Data Access.
	DataAccess string `pulumi:"dataAccess"`
	// Log & Report Report Access.
	ReportAccess string `pulumi:"reportAccess"`
	// Log & Report Threat Weight.
	ThreatWeight string `pulumi:"threatWeight"`
}

// GetAccprofileLoggrpPermissionInput is an input type that accepts GetAccprofileLoggrpPermissionArgs and GetAccprofileLoggrpPermissionOutput values.
// You can construct a concrete instance of `GetAccprofileLoggrpPermissionInput` via:
//
//	GetAccprofileLoggrpPermissionArgs{...}
type GetAccprofileLoggrpPermissionInput interface {
	pulumi.Input

	ToGetAccprofileLoggrpPermissionOutput() GetAccprofileLoggrpPermissionOutput
	ToGetAccprofileLoggrpPermissionOutputWithContext(context.Context) GetAccprofileLoggrpPermissionOutput
}

type GetAccprofileLoggrpPermissionArgs struct {
	// Log & Report configuration.
	Config pulumi.StringInput `pulumi:"config"`
	// Log & Report Data Access.
	DataAccess pulumi.StringInput `pulumi:"dataAccess"`
	// Log & Report Report Access.
	ReportAccess pulumi.StringInput `pulumi:"reportAccess"`
	// Log & Report Threat Weight.
	ThreatWeight pulumi.StringInput `pulumi:"threatWeight"`
}

func (GetAccprofileLoggrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccprofileLoggrpPermission)(nil)).Elem()
}

func (i GetAccprofileLoggrpPermissionArgs) ToGetAccprofileLoggrpPermissionOutput() GetAccprofileLoggrpPermissionOutput {
	return i.ToGetAccprofileLoggrpPermissionOutputWithContext(context.Background())
}

func (i GetAccprofileLoggrpPermissionArgs) ToGetAccprofileLoggrpPermissionOutputWithContext(ctx context.Context) GetAccprofileLoggrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccprofileLoggrpPermissionOutput)
}

// GetAccprofileLoggrpPermissionArrayInput is an input type that accepts GetAccprofileLoggrpPermissionArray and GetAccprofileLoggrpPermissionArrayOutput values.
// You can construct a concrete instance of `GetAccprofileLoggrpPermissionArrayInput` via:
//
//	GetAccprofileLoggrpPermissionArray{ GetAccprofileLoggrpPermissionArgs{...} }
type GetAccprofileLoggrpPermissionArrayInput interface {
	pulumi.Input

	ToGetAccprofileLoggrpPermissionArrayOutput() GetAccprofileLoggrpPermissionArrayOutput
	ToGetAccprofileLoggrpPermissionArrayOutputWithContext(context.Context) GetAccprofileLoggrpPermissionArrayOutput
}

type GetAccprofileLoggrpPermissionArray []GetAccprofileLoggrpPermissionInput

func (GetAccprofileLoggrpPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccprofileLoggrpPermission)(nil)).Elem()
}

func (i GetAccprofileLoggrpPermissionArray) ToGetAccprofileLoggrpPermissionArrayOutput() GetAccprofileLoggrpPermissionArrayOutput {
	return i.ToGetAccprofileLoggrpPermissionArrayOutputWithContext(context.Background())
}

func (i GetAccprofileLoggrpPermissionArray) ToGetAccprofileLoggrpPermissionArrayOutputWithContext(ctx context.Context) GetAccprofileLoggrpPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccprofileLoggrpPermissionArrayOutput)
}

type GetAccprofileLoggrpPermissionOutput struct{ *pulumi.OutputState }

func (GetAccprofileLoggrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccprofileLoggrpPermission)(nil)).Elem()
}

func (o GetAccprofileLoggrpPermissionOutput) ToGetAccprofileLoggrpPermissionOutput() GetAccprofileLoggrpPermissionOutput {
	return o
}

func (o GetAccprofileLoggrpPermissionOutput) ToGetAccprofileLoggrpPermissionOutputWithContext(ctx context.Context) GetAccprofileLoggrpPermissionOutput {
	return o
}

// Log & Report configuration.
func (o GetAccprofileLoggrpPermissionOutput) Config() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileLoggrpPermission) string { return v.Config }).(pulumi.StringOutput)
}

// Log & Report Data Access.
func (o GetAccprofileLoggrpPermissionOutput) DataAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileLoggrpPermission) string { return v.DataAccess }).(pulumi.StringOutput)
}

// Log & Report Report Access.
func (o GetAccprofileLoggrpPermissionOutput) ReportAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileLoggrpPermission) string { return v.ReportAccess }).(pulumi.StringOutput)
}

// Log & Report Threat Weight.
func (o GetAccprofileLoggrpPermissionOutput) ThreatWeight() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileLoggrpPermission) string { return v.ThreatWeight }).(pulumi.StringOutput)
}

type GetAccprofileLoggrpPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetAccprofileLoggrpPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccprofileLoggrpPermission)(nil)).Elem()
}

func (o GetAccprofileLoggrpPermissionArrayOutput) ToGetAccprofileLoggrpPermissionArrayOutput() GetAccprofileLoggrpPermissionArrayOutput {
	return o
}

func (o GetAccprofileLoggrpPermissionArrayOutput) ToGetAccprofileLoggrpPermissionArrayOutputWithContext(ctx context.Context) GetAccprofileLoggrpPermissionArrayOutput {
	return o
}

func (o GetAccprofileLoggrpPermissionArrayOutput) Index(i pulumi.IntInput) GetAccprofileLoggrpPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccprofileLoggrpPermission {
		return vs[0].([]GetAccprofileLoggrpPermission)[vs[1].(int)]
	}).(GetAccprofileLoggrpPermissionOutput)
}

type GetAccprofileNetgrpPermission struct {
	// System Configuration.
	Cfg string `pulumi:"cfg"`
	// Packet Capture Configuration.
	PacketCapture string `pulumi:"packetCapture"`
	// Router Configuration.
	RouteCfg string `pulumi:"routeCfg"`
}

// GetAccprofileNetgrpPermissionInput is an input type that accepts GetAccprofileNetgrpPermissionArgs and GetAccprofileNetgrpPermissionOutput values.
// You can construct a concrete instance of `GetAccprofileNetgrpPermissionInput` via:
//
//	GetAccprofileNetgrpPermissionArgs{...}
type GetAccprofileNetgrpPermissionInput interface {
	pulumi.Input

	ToGetAccprofileNetgrpPermissionOutput() GetAccprofileNetgrpPermissionOutput
	ToGetAccprofileNetgrpPermissionOutputWithContext(context.Context) GetAccprofileNetgrpPermissionOutput
}

type GetAccprofileNetgrpPermissionArgs struct {
	// System Configuration.
	Cfg pulumi.StringInput `pulumi:"cfg"`
	// Packet Capture Configuration.
	PacketCapture pulumi.StringInput `pulumi:"packetCapture"`
	// Router Configuration.
	RouteCfg pulumi.StringInput `pulumi:"routeCfg"`
}

func (GetAccprofileNetgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccprofileNetgrpPermission)(nil)).Elem()
}

func (i GetAccprofileNetgrpPermissionArgs) ToGetAccprofileNetgrpPermissionOutput() GetAccprofileNetgrpPermissionOutput {
	return i.ToGetAccprofileNetgrpPermissionOutputWithContext(context.Background())
}

func (i GetAccprofileNetgrpPermissionArgs) ToGetAccprofileNetgrpPermissionOutputWithContext(ctx context.Context) GetAccprofileNetgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccprofileNetgrpPermissionOutput)
}

// GetAccprofileNetgrpPermissionArrayInput is an input type that accepts GetAccprofileNetgrpPermissionArray and GetAccprofileNetgrpPermissionArrayOutput values.
// You can construct a concrete instance of `GetAccprofileNetgrpPermissionArrayInput` via:
//
//	GetAccprofileNetgrpPermissionArray{ GetAccprofileNetgrpPermissionArgs{...} }
type GetAccprofileNetgrpPermissionArrayInput interface {
	pulumi.Input

	ToGetAccprofileNetgrpPermissionArrayOutput() GetAccprofileNetgrpPermissionArrayOutput
	ToGetAccprofileNetgrpPermissionArrayOutputWithContext(context.Context) GetAccprofileNetgrpPermissionArrayOutput
}

type GetAccprofileNetgrpPermissionArray []GetAccprofileNetgrpPermissionInput

func (GetAccprofileNetgrpPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccprofileNetgrpPermission)(nil)).Elem()
}

func (i GetAccprofileNetgrpPermissionArray) ToGetAccprofileNetgrpPermissionArrayOutput() GetAccprofileNetgrpPermissionArrayOutput {
	return i.ToGetAccprofileNetgrpPermissionArrayOutputWithContext(context.Background())
}

func (i GetAccprofileNetgrpPermissionArray) ToGetAccprofileNetgrpPermissionArrayOutputWithContext(ctx context.Context) GetAccprofileNetgrpPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccprofileNetgrpPermissionArrayOutput)
}

type GetAccprofileNetgrpPermissionOutput struct{ *pulumi.OutputState }

func (GetAccprofileNetgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccprofileNetgrpPermission)(nil)).Elem()
}

func (o GetAccprofileNetgrpPermissionOutput) ToGetAccprofileNetgrpPermissionOutput() GetAccprofileNetgrpPermissionOutput {
	return o
}

func (o GetAccprofileNetgrpPermissionOutput) ToGetAccprofileNetgrpPermissionOutputWithContext(ctx context.Context) GetAccprofileNetgrpPermissionOutput {
	return o
}

// System Configuration.
func (o GetAccprofileNetgrpPermissionOutput) Cfg() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileNetgrpPermission) string { return v.Cfg }).(pulumi.StringOutput)
}

// Packet Capture Configuration.
func (o GetAccprofileNetgrpPermissionOutput) PacketCapture() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileNetgrpPermission) string { return v.PacketCapture }).(pulumi.StringOutput)
}

// Router Configuration.
func (o GetAccprofileNetgrpPermissionOutput) RouteCfg() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileNetgrpPermission) string { return v.RouteCfg }).(pulumi.StringOutput)
}

type GetAccprofileNetgrpPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetAccprofileNetgrpPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccprofileNetgrpPermission)(nil)).Elem()
}

func (o GetAccprofileNetgrpPermissionArrayOutput) ToGetAccprofileNetgrpPermissionArrayOutput() GetAccprofileNetgrpPermissionArrayOutput {
	return o
}

func (o GetAccprofileNetgrpPermissionArrayOutput) ToGetAccprofileNetgrpPermissionArrayOutputWithContext(ctx context.Context) GetAccprofileNetgrpPermissionArrayOutput {
	return o
}

func (o GetAccprofileNetgrpPermissionArrayOutput) Index(i pulumi.IntInput) GetAccprofileNetgrpPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccprofileNetgrpPermission {
		return vs[0].([]GetAccprofileNetgrpPermission)[vs[1].(int)]
	}).(GetAccprofileNetgrpPermissionOutput)
}

type GetAccprofileSysgrpPermission struct {
	// Administrator Users.
	Admin string `pulumi:"admin"`
	// System Configuration.
	Cfg string `pulumi:"cfg"`
	// Maintenance.
	Mnt string `pulumi:"mnt"`
	// FortiGuard Updates.
	Upd string `pulumi:"upd"`
}

// GetAccprofileSysgrpPermissionInput is an input type that accepts GetAccprofileSysgrpPermissionArgs and GetAccprofileSysgrpPermissionOutput values.
// You can construct a concrete instance of `GetAccprofileSysgrpPermissionInput` via:
//
//	GetAccprofileSysgrpPermissionArgs{...}
type GetAccprofileSysgrpPermissionInput interface {
	pulumi.Input

	ToGetAccprofileSysgrpPermissionOutput() GetAccprofileSysgrpPermissionOutput
	ToGetAccprofileSysgrpPermissionOutputWithContext(context.Context) GetAccprofileSysgrpPermissionOutput
}

type GetAccprofileSysgrpPermissionArgs struct {
	// Administrator Users.
	Admin pulumi.StringInput `pulumi:"admin"`
	// System Configuration.
	Cfg pulumi.StringInput `pulumi:"cfg"`
	// Maintenance.
	Mnt pulumi.StringInput `pulumi:"mnt"`
	// FortiGuard Updates.
	Upd pulumi.StringInput `pulumi:"upd"`
}

func (GetAccprofileSysgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccprofileSysgrpPermission)(nil)).Elem()
}

func (i GetAccprofileSysgrpPermissionArgs) ToGetAccprofileSysgrpPermissionOutput() GetAccprofileSysgrpPermissionOutput {
	return i.ToGetAccprofileSysgrpPermissionOutputWithContext(context.Background())
}

func (i GetAccprofileSysgrpPermissionArgs) ToGetAccprofileSysgrpPermissionOutputWithContext(ctx context.Context) GetAccprofileSysgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccprofileSysgrpPermissionOutput)
}

// GetAccprofileSysgrpPermissionArrayInput is an input type that accepts GetAccprofileSysgrpPermissionArray and GetAccprofileSysgrpPermissionArrayOutput values.
// You can construct a concrete instance of `GetAccprofileSysgrpPermissionArrayInput` via:
//
//	GetAccprofileSysgrpPermissionArray{ GetAccprofileSysgrpPermissionArgs{...} }
type GetAccprofileSysgrpPermissionArrayInput interface {
	pulumi.Input

	ToGetAccprofileSysgrpPermissionArrayOutput() GetAccprofileSysgrpPermissionArrayOutput
	ToGetAccprofileSysgrpPermissionArrayOutputWithContext(context.Context) GetAccprofileSysgrpPermissionArrayOutput
}

type GetAccprofileSysgrpPermissionArray []GetAccprofileSysgrpPermissionInput

func (GetAccprofileSysgrpPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccprofileSysgrpPermission)(nil)).Elem()
}

func (i GetAccprofileSysgrpPermissionArray) ToGetAccprofileSysgrpPermissionArrayOutput() GetAccprofileSysgrpPermissionArrayOutput {
	return i.ToGetAccprofileSysgrpPermissionArrayOutputWithContext(context.Background())
}

func (i GetAccprofileSysgrpPermissionArray) ToGetAccprofileSysgrpPermissionArrayOutputWithContext(ctx context.Context) GetAccprofileSysgrpPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccprofileSysgrpPermissionArrayOutput)
}

type GetAccprofileSysgrpPermissionOutput struct{ *pulumi.OutputState }

func (GetAccprofileSysgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccprofileSysgrpPermission)(nil)).Elem()
}

func (o GetAccprofileSysgrpPermissionOutput) ToGetAccprofileSysgrpPermissionOutput() GetAccprofileSysgrpPermissionOutput {
	return o
}

func (o GetAccprofileSysgrpPermissionOutput) ToGetAccprofileSysgrpPermissionOutputWithContext(ctx context.Context) GetAccprofileSysgrpPermissionOutput {
	return o
}

// Administrator Users.
func (o GetAccprofileSysgrpPermissionOutput) Admin() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileSysgrpPermission) string { return v.Admin }).(pulumi.StringOutput)
}

// System Configuration.
func (o GetAccprofileSysgrpPermissionOutput) Cfg() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileSysgrpPermission) string { return v.Cfg }).(pulumi.StringOutput)
}

// Maintenance.
func (o GetAccprofileSysgrpPermissionOutput) Mnt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileSysgrpPermission) string { return v.Mnt }).(pulumi.StringOutput)
}

// FortiGuard Updates.
func (o GetAccprofileSysgrpPermissionOutput) Upd() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileSysgrpPermission) string { return v.Upd }).(pulumi.StringOutput)
}

type GetAccprofileSysgrpPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetAccprofileSysgrpPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccprofileSysgrpPermission)(nil)).Elem()
}

func (o GetAccprofileSysgrpPermissionArrayOutput) ToGetAccprofileSysgrpPermissionArrayOutput() GetAccprofileSysgrpPermissionArrayOutput {
	return o
}

func (o GetAccprofileSysgrpPermissionArrayOutput) ToGetAccprofileSysgrpPermissionArrayOutputWithContext(ctx context.Context) GetAccprofileSysgrpPermissionArrayOutput {
	return o
}

func (o GetAccprofileSysgrpPermissionArrayOutput) Index(i pulumi.IntInput) GetAccprofileSysgrpPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccprofileSysgrpPermission {
		return vs[0].([]GetAccprofileSysgrpPermission)[vs[1].(int)]
	}).(GetAccprofileSysgrpPermissionOutput)
}

type GetAccprofileUtmgrpPermission struct {
	// Antivirus profiles and settings.
	Antivirus string `pulumi:"antivirus"`
	// Application Control profiles and settings.
	ApplicationControl string `pulumi:"applicationControl"`
	// Inline CASB filter profile and settings
	Casb string `pulumi:"casb"`
	// DLP profiles and settings.
	DataLeakPrevention string `pulumi:"dataLeakPrevention"`
	// DLP profiles and settings.
	DataLossPrevention string `pulumi:"dataLossPrevention"`
	// DNS Filter profiles and settings.
	Dnsfilter string `pulumi:"dnsfilter"`
	// AntiSpam filter and settings.
	Emailfilter string `pulumi:"emailfilter"`
	// FortiClient Profiles.
	EndpointControl string `pulumi:"endpointControl"`
	// File-filter profiles and settings.
	FileFilter string `pulumi:"fileFilter"`
	// ICAP profiles and settings.
	Icap string `pulumi:"icap"`
	// IPS profiles and settings.
	Ips string `pulumi:"ips"`
	// AntiSpam filter and settings.
	Spamfilter string `pulumi:"spamfilter"`
	// Video filter profiles and settings.
	Videofilter string `pulumi:"videofilter"`
	// Virtual patch profiles and settings.
	VirtualPatch string `pulumi:"virtualPatch"`
	// VoIP profiles and settings.
	Voip string `pulumi:"voip"`
	// Web Application Firewall profiles and settings.
	Waf string `pulumi:"waf"`
	// Web Filter profiles and settings.
	Webfilter string `pulumi:"webfilter"`
}

// GetAccprofileUtmgrpPermissionInput is an input type that accepts GetAccprofileUtmgrpPermissionArgs and GetAccprofileUtmgrpPermissionOutput values.
// You can construct a concrete instance of `GetAccprofileUtmgrpPermissionInput` via:
//
//	GetAccprofileUtmgrpPermissionArgs{...}
type GetAccprofileUtmgrpPermissionInput interface {
	pulumi.Input

	ToGetAccprofileUtmgrpPermissionOutput() GetAccprofileUtmgrpPermissionOutput
	ToGetAccprofileUtmgrpPermissionOutputWithContext(context.Context) GetAccprofileUtmgrpPermissionOutput
}

type GetAccprofileUtmgrpPermissionArgs struct {
	// Antivirus profiles and settings.
	Antivirus pulumi.StringInput `pulumi:"antivirus"`
	// Application Control profiles and settings.
	ApplicationControl pulumi.StringInput `pulumi:"applicationControl"`
	// Inline CASB filter profile and settings
	Casb pulumi.StringInput `pulumi:"casb"`
	// DLP profiles and settings.
	DataLeakPrevention pulumi.StringInput `pulumi:"dataLeakPrevention"`
	// DLP profiles and settings.
	DataLossPrevention pulumi.StringInput `pulumi:"dataLossPrevention"`
	// DNS Filter profiles and settings.
	Dnsfilter pulumi.StringInput `pulumi:"dnsfilter"`
	// AntiSpam filter and settings.
	Emailfilter pulumi.StringInput `pulumi:"emailfilter"`
	// FortiClient Profiles.
	EndpointControl pulumi.StringInput `pulumi:"endpointControl"`
	// File-filter profiles and settings.
	FileFilter pulumi.StringInput `pulumi:"fileFilter"`
	// ICAP profiles and settings.
	Icap pulumi.StringInput `pulumi:"icap"`
	// IPS profiles and settings.
	Ips pulumi.StringInput `pulumi:"ips"`
	// AntiSpam filter and settings.
	Spamfilter pulumi.StringInput `pulumi:"spamfilter"`
	// Video filter profiles and settings.
	Videofilter pulumi.StringInput `pulumi:"videofilter"`
	// Virtual patch profiles and settings.
	VirtualPatch pulumi.StringInput `pulumi:"virtualPatch"`
	// VoIP profiles and settings.
	Voip pulumi.StringInput `pulumi:"voip"`
	// Web Application Firewall profiles and settings.
	Waf pulumi.StringInput `pulumi:"waf"`
	// Web Filter profiles and settings.
	Webfilter pulumi.StringInput `pulumi:"webfilter"`
}

func (GetAccprofileUtmgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccprofileUtmgrpPermission)(nil)).Elem()
}

func (i GetAccprofileUtmgrpPermissionArgs) ToGetAccprofileUtmgrpPermissionOutput() GetAccprofileUtmgrpPermissionOutput {
	return i.ToGetAccprofileUtmgrpPermissionOutputWithContext(context.Background())
}

func (i GetAccprofileUtmgrpPermissionArgs) ToGetAccprofileUtmgrpPermissionOutputWithContext(ctx context.Context) GetAccprofileUtmgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccprofileUtmgrpPermissionOutput)
}

// GetAccprofileUtmgrpPermissionArrayInput is an input type that accepts GetAccprofileUtmgrpPermissionArray and GetAccprofileUtmgrpPermissionArrayOutput values.
// You can construct a concrete instance of `GetAccprofileUtmgrpPermissionArrayInput` via:
//
//	GetAccprofileUtmgrpPermissionArray{ GetAccprofileUtmgrpPermissionArgs{...} }
type GetAccprofileUtmgrpPermissionArrayInput interface {
	pulumi.Input

	ToGetAccprofileUtmgrpPermissionArrayOutput() GetAccprofileUtmgrpPermissionArrayOutput
	ToGetAccprofileUtmgrpPermissionArrayOutputWithContext(context.Context) GetAccprofileUtmgrpPermissionArrayOutput
}

type GetAccprofileUtmgrpPermissionArray []GetAccprofileUtmgrpPermissionInput

func (GetAccprofileUtmgrpPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccprofileUtmgrpPermission)(nil)).Elem()
}

func (i GetAccprofileUtmgrpPermissionArray) ToGetAccprofileUtmgrpPermissionArrayOutput() GetAccprofileUtmgrpPermissionArrayOutput {
	return i.ToGetAccprofileUtmgrpPermissionArrayOutputWithContext(context.Background())
}

func (i GetAccprofileUtmgrpPermissionArray) ToGetAccprofileUtmgrpPermissionArrayOutputWithContext(ctx context.Context) GetAccprofileUtmgrpPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccprofileUtmgrpPermissionArrayOutput)
}

type GetAccprofileUtmgrpPermissionOutput struct{ *pulumi.OutputState }

func (GetAccprofileUtmgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccprofileUtmgrpPermission)(nil)).Elem()
}

func (o GetAccprofileUtmgrpPermissionOutput) ToGetAccprofileUtmgrpPermissionOutput() GetAccprofileUtmgrpPermissionOutput {
	return o
}

func (o GetAccprofileUtmgrpPermissionOutput) ToGetAccprofileUtmgrpPermissionOutputWithContext(ctx context.Context) GetAccprofileUtmgrpPermissionOutput {
	return o
}

// Antivirus profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) Antivirus() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.Antivirus }).(pulumi.StringOutput)
}

// Application Control profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) ApplicationControl() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.ApplicationControl }).(pulumi.StringOutput)
}

// Inline CASB filter profile and settings
func (o GetAccprofileUtmgrpPermissionOutput) Casb() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.Casb }).(pulumi.StringOutput)
}

// DLP profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) DataLeakPrevention() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.DataLeakPrevention }).(pulumi.StringOutput)
}

// DLP profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) DataLossPrevention() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.DataLossPrevention }).(pulumi.StringOutput)
}

// DNS Filter profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) Dnsfilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.Dnsfilter }).(pulumi.StringOutput)
}

// AntiSpam filter and settings.
func (o GetAccprofileUtmgrpPermissionOutput) Emailfilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.Emailfilter }).(pulumi.StringOutput)
}

// FortiClient Profiles.
func (o GetAccprofileUtmgrpPermissionOutput) EndpointControl() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.EndpointControl }).(pulumi.StringOutput)
}

// File-filter profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) FileFilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.FileFilter }).(pulumi.StringOutput)
}

// ICAP profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) Icap() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.Icap }).(pulumi.StringOutput)
}

// IPS profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) Ips() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.Ips }).(pulumi.StringOutput)
}

// AntiSpam filter and settings.
func (o GetAccprofileUtmgrpPermissionOutput) Spamfilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.Spamfilter }).(pulumi.StringOutput)
}

// Video filter profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) Videofilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.Videofilter }).(pulumi.StringOutput)
}

// Virtual patch profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) VirtualPatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.VirtualPatch }).(pulumi.StringOutput)
}

// VoIP profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) Voip() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.Voip }).(pulumi.StringOutput)
}

// Web Application Firewall profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) Waf() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.Waf }).(pulumi.StringOutput)
}

// Web Filter profiles and settings.
func (o GetAccprofileUtmgrpPermissionOutput) Webfilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccprofileUtmgrpPermission) string { return v.Webfilter }).(pulumi.StringOutput)
}

type GetAccprofileUtmgrpPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetAccprofileUtmgrpPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccprofileUtmgrpPermission)(nil)).Elem()
}

func (o GetAccprofileUtmgrpPermissionArrayOutput) ToGetAccprofileUtmgrpPermissionArrayOutput() GetAccprofileUtmgrpPermissionArrayOutput {
	return o
}

func (o GetAccprofileUtmgrpPermissionArrayOutput) ToGetAccprofileUtmgrpPermissionArrayOutputWithContext(ctx context.Context) GetAccprofileUtmgrpPermissionArrayOutput {
	return o
}

func (o GetAccprofileUtmgrpPermissionArrayOutput) Index(i pulumi.IntInput) GetAccprofileUtmgrpPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccprofileUtmgrpPermission {
		return vs[0].([]GetAccprofileUtmgrpPermission)[vs[1].(int)]
	}).(GetAccprofileUtmgrpPermissionOutput)
}

type GetAdminGuestUsergroup struct {
	// Specify the name of the desired system admin.
	Name string `pulumi:"name"`
}

// GetAdminGuestUsergroupInput is an input type that accepts GetAdminGuestUsergroupArgs and GetAdminGuestUsergroupOutput values.
// You can construct a concrete instance of `GetAdminGuestUsergroupInput` via:
//
//	GetAdminGuestUsergroupArgs{...}
type GetAdminGuestUsergroupInput interface {
	pulumi.Input

	ToGetAdminGuestUsergroupOutput() GetAdminGuestUsergroupOutput
	ToGetAdminGuestUsergroupOutputWithContext(context.Context) GetAdminGuestUsergroupOutput
}

type GetAdminGuestUsergroupArgs struct {
	// Specify the name of the desired system admin.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAdminGuestUsergroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuestUsergroup)(nil)).Elem()
}

func (i GetAdminGuestUsergroupArgs) ToGetAdminGuestUsergroupOutput() GetAdminGuestUsergroupOutput {
	return i.ToGetAdminGuestUsergroupOutputWithContext(context.Background())
}

func (i GetAdminGuestUsergroupArgs) ToGetAdminGuestUsergroupOutputWithContext(ctx context.Context) GetAdminGuestUsergroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuestUsergroupOutput)
}

// GetAdminGuestUsergroupArrayInput is an input type that accepts GetAdminGuestUsergroupArray and GetAdminGuestUsergroupArrayOutput values.
// You can construct a concrete instance of `GetAdminGuestUsergroupArrayInput` via:
//
//	GetAdminGuestUsergroupArray{ GetAdminGuestUsergroupArgs{...} }
type GetAdminGuestUsergroupArrayInput interface {
	pulumi.Input

	ToGetAdminGuestUsergroupArrayOutput() GetAdminGuestUsergroupArrayOutput
	ToGetAdminGuestUsergroupArrayOutputWithContext(context.Context) GetAdminGuestUsergroupArrayOutput
}

type GetAdminGuestUsergroupArray []GetAdminGuestUsergroupInput

func (GetAdminGuestUsergroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuestUsergroup)(nil)).Elem()
}

func (i GetAdminGuestUsergroupArray) ToGetAdminGuestUsergroupArrayOutput() GetAdminGuestUsergroupArrayOutput {
	return i.ToGetAdminGuestUsergroupArrayOutputWithContext(context.Background())
}

func (i GetAdminGuestUsergroupArray) ToGetAdminGuestUsergroupArrayOutputWithContext(ctx context.Context) GetAdminGuestUsergroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuestUsergroupArrayOutput)
}

type GetAdminGuestUsergroupOutput struct{ *pulumi.OutputState }

func (GetAdminGuestUsergroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuestUsergroup)(nil)).Elem()
}

func (o GetAdminGuestUsergroupOutput) ToGetAdminGuestUsergroupOutput() GetAdminGuestUsergroupOutput {
	return o
}

func (o GetAdminGuestUsergroupOutput) ToGetAdminGuestUsergroupOutputWithContext(ctx context.Context) GetAdminGuestUsergroupOutput {
	return o
}

// Specify the name of the desired system admin.
func (o GetAdminGuestUsergroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuestUsergroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetAdminGuestUsergroupArrayOutput struct{ *pulumi.OutputState }

func (GetAdminGuestUsergroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuestUsergroup)(nil)).Elem()
}

func (o GetAdminGuestUsergroupArrayOutput) ToGetAdminGuestUsergroupArrayOutput() GetAdminGuestUsergroupArrayOutput {
	return o
}

func (o GetAdminGuestUsergroupArrayOutput) ToGetAdminGuestUsergroupArrayOutputWithContext(ctx context.Context) GetAdminGuestUsergroupArrayOutput {
	return o
}

func (o GetAdminGuestUsergroupArrayOutput) Index(i pulumi.IntInput) GetAdminGuestUsergroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminGuestUsergroup {
		return vs[0].([]GetAdminGuestUsergroup)[vs[1].(int)]
	}).(GetAdminGuestUsergroupOutput)
}

type GetAdminGuiDashboard struct {
	// Number of columns.
	Columns int `pulumi:"columns"`
	// Select menu ID.
	Id int `pulumi:"id"`
	// Layout type.
	LayoutType string `pulumi:"layoutType"`
	// Specify the name of the desired system admin.
	Name string `pulumi:"name"`
	// Dashboard scope.
	Scope string `pulumi:"scope"`
	// Dashboard widgets. The structure of `widget` block is documented below.
	Widgets []GetAdminGuiDashboardWidget `pulumi:"widgets"`
}

// GetAdminGuiDashboardInput is an input type that accepts GetAdminGuiDashboardArgs and GetAdminGuiDashboardOutput values.
// You can construct a concrete instance of `GetAdminGuiDashboardInput` via:
//
//	GetAdminGuiDashboardArgs{...}
type GetAdminGuiDashboardInput interface {
	pulumi.Input

	ToGetAdminGuiDashboardOutput() GetAdminGuiDashboardOutput
	ToGetAdminGuiDashboardOutputWithContext(context.Context) GetAdminGuiDashboardOutput
}

type GetAdminGuiDashboardArgs struct {
	// Number of columns.
	Columns pulumi.IntInput `pulumi:"columns"`
	// Select menu ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Layout type.
	LayoutType pulumi.StringInput `pulumi:"layoutType"`
	// Specify the name of the desired system admin.
	Name pulumi.StringInput `pulumi:"name"`
	// Dashboard scope.
	Scope pulumi.StringInput `pulumi:"scope"`
	// Dashboard widgets. The structure of `widget` block is documented below.
	Widgets GetAdminGuiDashboardWidgetArrayInput `pulumi:"widgets"`
}

func (GetAdminGuiDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiDashboard)(nil)).Elem()
}

func (i GetAdminGuiDashboardArgs) ToGetAdminGuiDashboardOutput() GetAdminGuiDashboardOutput {
	return i.ToGetAdminGuiDashboardOutputWithContext(context.Background())
}

func (i GetAdminGuiDashboardArgs) ToGetAdminGuiDashboardOutputWithContext(ctx context.Context) GetAdminGuiDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiDashboardOutput)
}

// GetAdminGuiDashboardArrayInput is an input type that accepts GetAdminGuiDashboardArray and GetAdminGuiDashboardArrayOutput values.
// You can construct a concrete instance of `GetAdminGuiDashboardArrayInput` via:
//
//	GetAdminGuiDashboardArray{ GetAdminGuiDashboardArgs{...} }
type GetAdminGuiDashboardArrayInput interface {
	pulumi.Input

	ToGetAdminGuiDashboardArrayOutput() GetAdminGuiDashboardArrayOutput
	ToGetAdminGuiDashboardArrayOutputWithContext(context.Context) GetAdminGuiDashboardArrayOutput
}

type GetAdminGuiDashboardArray []GetAdminGuiDashboardInput

func (GetAdminGuiDashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiDashboard)(nil)).Elem()
}

func (i GetAdminGuiDashboardArray) ToGetAdminGuiDashboardArrayOutput() GetAdminGuiDashboardArrayOutput {
	return i.ToGetAdminGuiDashboardArrayOutputWithContext(context.Background())
}

func (i GetAdminGuiDashboardArray) ToGetAdminGuiDashboardArrayOutputWithContext(ctx context.Context) GetAdminGuiDashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiDashboardArrayOutput)
}

type GetAdminGuiDashboardOutput struct{ *pulumi.OutputState }

func (GetAdminGuiDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiDashboard)(nil)).Elem()
}

func (o GetAdminGuiDashboardOutput) ToGetAdminGuiDashboardOutput() GetAdminGuiDashboardOutput {
	return o
}

func (o GetAdminGuiDashboardOutput) ToGetAdminGuiDashboardOutputWithContext(ctx context.Context) GetAdminGuiDashboardOutput {
	return o
}

// Number of columns.
func (o GetAdminGuiDashboardOutput) Columns() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminGuiDashboard) int { return v.Columns }).(pulumi.IntOutput)
}

// Select menu ID.
func (o GetAdminGuiDashboardOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminGuiDashboard) int { return v.Id }).(pulumi.IntOutput)
}

// Layout type.
func (o GetAdminGuiDashboardOutput) LayoutType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboard) string { return v.LayoutType }).(pulumi.StringOutput)
}

// Specify the name of the desired system admin.
func (o GetAdminGuiDashboardOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboard) string { return v.Name }).(pulumi.StringOutput)
}

// Dashboard scope.
func (o GetAdminGuiDashboardOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboard) string { return v.Scope }).(pulumi.StringOutput)
}

// Dashboard widgets. The structure of `widget` block is documented below.
func (o GetAdminGuiDashboardOutput) Widgets() GetAdminGuiDashboardWidgetArrayOutput {
	return o.ApplyT(func(v GetAdminGuiDashboard) []GetAdminGuiDashboardWidget { return v.Widgets }).(GetAdminGuiDashboardWidgetArrayOutput)
}

type GetAdminGuiDashboardArrayOutput struct{ *pulumi.OutputState }

func (GetAdminGuiDashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiDashboard)(nil)).Elem()
}

func (o GetAdminGuiDashboardArrayOutput) ToGetAdminGuiDashboardArrayOutput() GetAdminGuiDashboardArrayOutput {
	return o
}

func (o GetAdminGuiDashboardArrayOutput) ToGetAdminGuiDashboardArrayOutputWithContext(ctx context.Context) GetAdminGuiDashboardArrayOutput {
	return o
}

func (o GetAdminGuiDashboardArrayOutput) Index(i pulumi.IntInput) GetAdminGuiDashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminGuiDashboard {
		return vs[0].([]GetAdminGuiDashboard)[vs[1].(int)]
	}).(GetAdminGuiDashboardOutput)
}

type GetAdminGuiDashboardWidget struct {
	// Fabric device to monitor.
	FabricDevice string `pulumi:"fabricDevice"`
	// FortiView filters. The structure of `filters` block is documented below.
	Filters []GetAdminGuiDashboardWidgetFilter `pulumi:"filters"`
	// Height.
	Height int `pulumi:"height"`
	// Select menu ID.
	Id int `pulumi:"id"`
	// Security Audit Rating industry.
	Industry string `pulumi:"industry"`
	// Interface to monitor.
	Interface string `pulumi:"interface"`
	// Security Audit Rating region.
	Region string `pulumi:"region"`
	// Field to aggregate the data by.
	ReportBy string `pulumi:"reportBy"`
	// Field to sort the data by.
	SortBy string `pulumi:"sortBy"`
	// Timeframe period of reported data.
	Timeframe string `pulumi:"timeframe"`
	// Widget title.
	Title string `pulumi:"title"`
	// Widget type.
	Type string `pulumi:"type"`
	// Visualization to use.
	Visualization string `pulumi:"visualization"`
	// Width.
	Width int `pulumi:"width"`
	// X position.
	XPos int `pulumi:"xPos"`
	// Y position.
	YPos int `pulumi:"yPos"`
}

// GetAdminGuiDashboardWidgetInput is an input type that accepts GetAdminGuiDashboardWidgetArgs and GetAdminGuiDashboardWidgetOutput values.
// You can construct a concrete instance of `GetAdminGuiDashboardWidgetInput` via:
//
//	GetAdminGuiDashboardWidgetArgs{...}
type GetAdminGuiDashboardWidgetInput interface {
	pulumi.Input

	ToGetAdminGuiDashboardWidgetOutput() GetAdminGuiDashboardWidgetOutput
	ToGetAdminGuiDashboardWidgetOutputWithContext(context.Context) GetAdminGuiDashboardWidgetOutput
}

type GetAdminGuiDashboardWidgetArgs struct {
	// Fabric device to monitor.
	FabricDevice pulumi.StringInput `pulumi:"fabricDevice"`
	// FortiView filters. The structure of `filters` block is documented below.
	Filters GetAdminGuiDashboardWidgetFilterArrayInput `pulumi:"filters"`
	// Height.
	Height pulumi.IntInput `pulumi:"height"`
	// Select menu ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Security Audit Rating industry.
	Industry pulumi.StringInput `pulumi:"industry"`
	// Interface to monitor.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Security Audit Rating region.
	Region pulumi.StringInput `pulumi:"region"`
	// Field to aggregate the data by.
	ReportBy pulumi.StringInput `pulumi:"reportBy"`
	// Field to sort the data by.
	SortBy pulumi.StringInput `pulumi:"sortBy"`
	// Timeframe period of reported data.
	Timeframe pulumi.StringInput `pulumi:"timeframe"`
	// Widget title.
	Title pulumi.StringInput `pulumi:"title"`
	// Widget type.
	Type pulumi.StringInput `pulumi:"type"`
	// Visualization to use.
	Visualization pulumi.StringInput `pulumi:"visualization"`
	// Width.
	Width pulumi.IntInput `pulumi:"width"`
	// X position.
	XPos pulumi.IntInput `pulumi:"xPos"`
	// Y position.
	YPos pulumi.IntInput `pulumi:"yPos"`
}

func (GetAdminGuiDashboardWidgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiDashboardWidget)(nil)).Elem()
}

func (i GetAdminGuiDashboardWidgetArgs) ToGetAdminGuiDashboardWidgetOutput() GetAdminGuiDashboardWidgetOutput {
	return i.ToGetAdminGuiDashboardWidgetOutputWithContext(context.Background())
}

func (i GetAdminGuiDashboardWidgetArgs) ToGetAdminGuiDashboardWidgetOutputWithContext(ctx context.Context) GetAdminGuiDashboardWidgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiDashboardWidgetOutput)
}

// GetAdminGuiDashboardWidgetArrayInput is an input type that accepts GetAdminGuiDashboardWidgetArray and GetAdminGuiDashboardWidgetArrayOutput values.
// You can construct a concrete instance of `GetAdminGuiDashboardWidgetArrayInput` via:
//
//	GetAdminGuiDashboardWidgetArray{ GetAdminGuiDashboardWidgetArgs{...} }
type GetAdminGuiDashboardWidgetArrayInput interface {
	pulumi.Input

	ToGetAdminGuiDashboardWidgetArrayOutput() GetAdminGuiDashboardWidgetArrayOutput
	ToGetAdminGuiDashboardWidgetArrayOutputWithContext(context.Context) GetAdminGuiDashboardWidgetArrayOutput
}

type GetAdminGuiDashboardWidgetArray []GetAdminGuiDashboardWidgetInput

func (GetAdminGuiDashboardWidgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiDashboardWidget)(nil)).Elem()
}

func (i GetAdminGuiDashboardWidgetArray) ToGetAdminGuiDashboardWidgetArrayOutput() GetAdminGuiDashboardWidgetArrayOutput {
	return i.ToGetAdminGuiDashboardWidgetArrayOutputWithContext(context.Background())
}

func (i GetAdminGuiDashboardWidgetArray) ToGetAdminGuiDashboardWidgetArrayOutputWithContext(ctx context.Context) GetAdminGuiDashboardWidgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiDashboardWidgetArrayOutput)
}

type GetAdminGuiDashboardWidgetOutput struct{ *pulumi.OutputState }

func (GetAdminGuiDashboardWidgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiDashboardWidget)(nil)).Elem()
}

func (o GetAdminGuiDashboardWidgetOutput) ToGetAdminGuiDashboardWidgetOutput() GetAdminGuiDashboardWidgetOutput {
	return o
}

func (o GetAdminGuiDashboardWidgetOutput) ToGetAdminGuiDashboardWidgetOutputWithContext(ctx context.Context) GetAdminGuiDashboardWidgetOutput {
	return o
}

// Fabric device to monitor.
func (o GetAdminGuiDashboardWidgetOutput) FabricDevice() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) string { return v.FabricDevice }).(pulumi.StringOutput)
}

// FortiView filters. The structure of `filters` block is documented below.
func (o GetAdminGuiDashboardWidgetOutput) Filters() GetAdminGuiDashboardWidgetFilterArrayOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) []GetAdminGuiDashboardWidgetFilter { return v.Filters }).(GetAdminGuiDashboardWidgetFilterArrayOutput)
}

// Height.
func (o GetAdminGuiDashboardWidgetOutput) Height() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) int { return v.Height }).(pulumi.IntOutput)
}

// Select menu ID.
func (o GetAdminGuiDashboardWidgetOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) int { return v.Id }).(pulumi.IntOutput)
}

// Security Audit Rating industry.
func (o GetAdminGuiDashboardWidgetOutput) Industry() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) string { return v.Industry }).(pulumi.StringOutput)
}

// Interface to monitor.
func (o GetAdminGuiDashboardWidgetOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) string { return v.Interface }).(pulumi.StringOutput)
}

// Security Audit Rating region.
func (o GetAdminGuiDashboardWidgetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) string { return v.Region }).(pulumi.StringOutput)
}

// Field to aggregate the data by.
func (o GetAdminGuiDashboardWidgetOutput) ReportBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) string { return v.ReportBy }).(pulumi.StringOutput)
}

// Field to sort the data by.
func (o GetAdminGuiDashboardWidgetOutput) SortBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) string { return v.SortBy }).(pulumi.StringOutput)
}

// Timeframe period of reported data.
func (o GetAdminGuiDashboardWidgetOutput) Timeframe() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) string { return v.Timeframe }).(pulumi.StringOutput)
}

// Widget title.
func (o GetAdminGuiDashboardWidgetOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) string { return v.Title }).(pulumi.StringOutput)
}

// Widget type.
func (o GetAdminGuiDashboardWidgetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) string { return v.Type }).(pulumi.StringOutput)
}

// Visualization to use.
func (o GetAdminGuiDashboardWidgetOutput) Visualization() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) string { return v.Visualization }).(pulumi.StringOutput)
}

// Width.
func (o GetAdminGuiDashboardWidgetOutput) Width() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) int { return v.Width }).(pulumi.IntOutput)
}

// X position.
func (o GetAdminGuiDashboardWidgetOutput) XPos() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) int { return v.XPos }).(pulumi.IntOutput)
}

// Y position.
func (o GetAdminGuiDashboardWidgetOutput) YPos() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidget) int { return v.YPos }).(pulumi.IntOutput)
}

type GetAdminGuiDashboardWidgetArrayOutput struct{ *pulumi.OutputState }

func (GetAdminGuiDashboardWidgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiDashboardWidget)(nil)).Elem()
}

func (o GetAdminGuiDashboardWidgetArrayOutput) ToGetAdminGuiDashboardWidgetArrayOutput() GetAdminGuiDashboardWidgetArrayOutput {
	return o
}

func (o GetAdminGuiDashboardWidgetArrayOutput) ToGetAdminGuiDashboardWidgetArrayOutputWithContext(ctx context.Context) GetAdminGuiDashboardWidgetArrayOutput {
	return o
}

func (o GetAdminGuiDashboardWidgetArrayOutput) Index(i pulumi.IntInput) GetAdminGuiDashboardWidgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminGuiDashboardWidget {
		return vs[0].([]GetAdminGuiDashboardWidget)[vs[1].(int)]
	}).(GetAdminGuiDashboardWidgetOutput)
}

type GetAdminGuiDashboardWidgetFilter struct {
	// Select menu ID.
	Id int `pulumi:"id"`
	// Filter key.
	Key string `pulumi:"key"`
	// Filter value.
	Value string `pulumi:"value"`
}

// GetAdminGuiDashboardWidgetFilterInput is an input type that accepts GetAdminGuiDashboardWidgetFilterArgs and GetAdminGuiDashboardWidgetFilterOutput values.
// You can construct a concrete instance of `GetAdminGuiDashboardWidgetFilterInput` via:
//
//	GetAdminGuiDashboardWidgetFilterArgs{...}
type GetAdminGuiDashboardWidgetFilterInput interface {
	pulumi.Input

	ToGetAdminGuiDashboardWidgetFilterOutput() GetAdminGuiDashboardWidgetFilterOutput
	ToGetAdminGuiDashboardWidgetFilterOutputWithContext(context.Context) GetAdminGuiDashboardWidgetFilterOutput
}

type GetAdminGuiDashboardWidgetFilterArgs struct {
	// Select menu ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Filter key.
	Key pulumi.StringInput `pulumi:"key"`
	// Filter value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAdminGuiDashboardWidgetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (i GetAdminGuiDashboardWidgetFilterArgs) ToGetAdminGuiDashboardWidgetFilterOutput() GetAdminGuiDashboardWidgetFilterOutput {
	return i.ToGetAdminGuiDashboardWidgetFilterOutputWithContext(context.Background())
}

func (i GetAdminGuiDashboardWidgetFilterArgs) ToGetAdminGuiDashboardWidgetFilterOutputWithContext(ctx context.Context) GetAdminGuiDashboardWidgetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiDashboardWidgetFilterOutput)
}

// GetAdminGuiDashboardWidgetFilterArrayInput is an input type that accepts GetAdminGuiDashboardWidgetFilterArray and GetAdminGuiDashboardWidgetFilterArrayOutput values.
// You can construct a concrete instance of `GetAdminGuiDashboardWidgetFilterArrayInput` via:
//
//	GetAdminGuiDashboardWidgetFilterArray{ GetAdminGuiDashboardWidgetFilterArgs{...} }
type GetAdminGuiDashboardWidgetFilterArrayInput interface {
	pulumi.Input

	ToGetAdminGuiDashboardWidgetFilterArrayOutput() GetAdminGuiDashboardWidgetFilterArrayOutput
	ToGetAdminGuiDashboardWidgetFilterArrayOutputWithContext(context.Context) GetAdminGuiDashboardWidgetFilterArrayOutput
}

type GetAdminGuiDashboardWidgetFilterArray []GetAdminGuiDashboardWidgetFilterInput

func (GetAdminGuiDashboardWidgetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (i GetAdminGuiDashboardWidgetFilterArray) ToGetAdminGuiDashboardWidgetFilterArrayOutput() GetAdminGuiDashboardWidgetFilterArrayOutput {
	return i.ToGetAdminGuiDashboardWidgetFilterArrayOutputWithContext(context.Background())
}

func (i GetAdminGuiDashboardWidgetFilterArray) ToGetAdminGuiDashboardWidgetFilterArrayOutputWithContext(ctx context.Context) GetAdminGuiDashboardWidgetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiDashboardWidgetFilterArrayOutput)
}

type GetAdminGuiDashboardWidgetFilterOutput struct{ *pulumi.OutputState }

func (GetAdminGuiDashboardWidgetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (o GetAdminGuiDashboardWidgetFilterOutput) ToGetAdminGuiDashboardWidgetFilterOutput() GetAdminGuiDashboardWidgetFilterOutput {
	return o
}

func (o GetAdminGuiDashboardWidgetFilterOutput) ToGetAdminGuiDashboardWidgetFilterOutputWithContext(ctx context.Context) GetAdminGuiDashboardWidgetFilterOutput {
	return o
}

// Select menu ID.
func (o GetAdminGuiDashboardWidgetFilterOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidgetFilter) int { return v.Id }).(pulumi.IntOutput)
}

// Filter key.
func (o GetAdminGuiDashboardWidgetFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidgetFilter) string { return v.Key }).(pulumi.StringOutput)
}

// Filter value.
func (o GetAdminGuiDashboardWidgetFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiDashboardWidgetFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetAdminGuiDashboardWidgetFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAdminGuiDashboardWidgetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (o GetAdminGuiDashboardWidgetFilterArrayOutput) ToGetAdminGuiDashboardWidgetFilterArrayOutput() GetAdminGuiDashboardWidgetFilterArrayOutput {
	return o
}

func (o GetAdminGuiDashboardWidgetFilterArrayOutput) ToGetAdminGuiDashboardWidgetFilterArrayOutputWithContext(ctx context.Context) GetAdminGuiDashboardWidgetFilterArrayOutput {
	return o
}

func (o GetAdminGuiDashboardWidgetFilterArrayOutput) Index(i pulumi.IntInput) GetAdminGuiDashboardWidgetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminGuiDashboardWidgetFilter {
		return vs[0].([]GetAdminGuiDashboardWidgetFilter)[vs[1].(int)]
	}).(GetAdminGuiDashboardWidgetFilterOutput)
}

type GetAdminGuiGlobalMenuFavorite struct {
	// Select menu ID.
	Id string `pulumi:"id"`
}

// GetAdminGuiGlobalMenuFavoriteInput is an input type that accepts GetAdminGuiGlobalMenuFavoriteArgs and GetAdminGuiGlobalMenuFavoriteOutput values.
// You can construct a concrete instance of `GetAdminGuiGlobalMenuFavoriteInput` via:
//
//	GetAdminGuiGlobalMenuFavoriteArgs{...}
type GetAdminGuiGlobalMenuFavoriteInput interface {
	pulumi.Input

	ToGetAdminGuiGlobalMenuFavoriteOutput() GetAdminGuiGlobalMenuFavoriteOutput
	ToGetAdminGuiGlobalMenuFavoriteOutputWithContext(context.Context) GetAdminGuiGlobalMenuFavoriteOutput
}

type GetAdminGuiGlobalMenuFavoriteArgs struct {
	// Select menu ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAdminGuiGlobalMenuFavoriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (i GetAdminGuiGlobalMenuFavoriteArgs) ToGetAdminGuiGlobalMenuFavoriteOutput() GetAdminGuiGlobalMenuFavoriteOutput {
	return i.ToGetAdminGuiGlobalMenuFavoriteOutputWithContext(context.Background())
}

func (i GetAdminGuiGlobalMenuFavoriteArgs) ToGetAdminGuiGlobalMenuFavoriteOutputWithContext(ctx context.Context) GetAdminGuiGlobalMenuFavoriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiGlobalMenuFavoriteOutput)
}

// GetAdminGuiGlobalMenuFavoriteArrayInput is an input type that accepts GetAdminGuiGlobalMenuFavoriteArray and GetAdminGuiGlobalMenuFavoriteArrayOutput values.
// You can construct a concrete instance of `GetAdminGuiGlobalMenuFavoriteArrayInput` via:
//
//	GetAdminGuiGlobalMenuFavoriteArray{ GetAdminGuiGlobalMenuFavoriteArgs{...} }
type GetAdminGuiGlobalMenuFavoriteArrayInput interface {
	pulumi.Input

	ToGetAdminGuiGlobalMenuFavoriteArrayOutput() GetAdminGuiGlobalMenuFavoriteArrayOutput
	ToGetAdminGuiGlobalMenuFavoriteArrayOutputWithContext(context.Context) GetAdminGuiGlobalMenuFavoriteArrayOutput
}

type GetAdminGuiGlobalMenuFavoriteArray []GetAdminGuiGlobalMenuFavoriteInput

func (GetAdminGuiGlobalMenuFavoriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (i GetAdminGuiGlobalMenuFavoriteArray) ToGetAdminGuiGlobalMenuFavoriteArrayOutput() GetAdminGuiGlobalMenuFavoriteArrayOutput {
	return i.ToGetAdminGuiGlobalMenuFavoriteArrayOutputWithContext(context.Background())
}

func (i GetAdminGuiGlobalMenuFavoriteArray) ToGetAdminGuiGlobalMenuFavoriteArrayOutputWithContext(ctx context.Context) GetAdminGuiGlobalMenuFavoriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiGlobalMenuFavoriteArrayOutput)
}

type GetAdminGuiGlobalMenuFavoriteOutput struct{ *pulumi.OutputState }

func (GetAdminGuiGlobalMenuFavoriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (o GetAdminGuiGlobalMenuFavoriteOutput) ToGetAdminGuiGlobalMenuFavoriteOutput() GetAdminGuiGlobalMenuFavoriteOutput {
	return o
}

func (o GetAdminGuiGlobalMenuFavoriteOutput) ToGetAdminGuiGlobalMenuFavoriteOutputWithContext(ctx context.Context) GetAdminGuiGlobalMenuFavoriteOutput {
	return o
}

// Select menu ID.
func (o GetAdminGuiGlobalMenuFavoriteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiGlobalMenuFavorite) string { return v.Id }).(pulumi.StringOutput)
}

type GetAdminGuiGlobalMenuFavoriteArrayOutput struct{ *pulumi.OutputState }

func (GetAdminGuiGlobalMenuFavoriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (o GetAdminGuiGlobalMenuFavoriteArrayOutput) ToGetAdminGuiGlobalMenuFavoriteArrayOutput() GetAdminGuiGlobalMenuFavoriteArrayOutput {
	return o
}

func (o GetAdminGuiGlobalMenuFavoriteArrayOutput) ToGetAdminGuiGlobalMenuFavoriteArrayOutputWithContext(ctx context.Context) GetAdminGuiGlobalMenuFavoriteArrayOutput {
	return o
}

func (o GetAdminGuiGlobalMenuFavoriteArrayOutput) Index(i pulumi.IntInput) GetAdminGuiGlobalMenuFavoriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminGuiGlobalMenuFavorite {
		return vs[0].([]GetAdminGuiGlobalMenuFavorite)[vs[1].(int)]
	}).(GetAdminGuiGlobalMenuFavoriteOutput)
}

type GetAdminGuiNewFeatureAcknowledge struct {
	// Select menu ID.
	Id string `pulumi:"id"`
}

// GetAdminGuiNewFeatureAcknowledgeInput is an input type that accepts GetAdminGuiNewFeatureAcknowledgeArgs and GetAdminGuiNewFeatureAcknowledgeOutput values.
// You can construct a concrete instance of `GetAdminGuiNewFeatureAcknowledgeInput` via:
//
//	GetAdminGuiNewFeatureAcknowledgeArgs{...}
type GetAdminGuiNewFeatureAcknowledgeInput interface {
	pulumi.Input

	ToGetAdminGuiNewFeatureAcknowledgeOutput() GetAdminGuiNewFeatureAcknowledgeOutput
	ToGetAdminGuiNewFeatureAcknowledgeOutputWithContext(context.Context) GetAdminGuiNewFeatureAcknowledgeOutput
}

type GetAdminGuiNewFeatureAcknowledgeArgs struct {
	// Select menu ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAdminGuiNewFeatureAcknowledgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (i GetAdminGuiNewFeatureAcknowledgeArgs) ToGetAdminGuiNewFeatureAcknowledgeOutput() GetAdminGuiNewFeatureAcknowledgeOutput {
	return i.ToGetAdminGuiNewFeatureAcknowledgeOutputWithContext(context.Background())
}

func (i GetAdminGuiNewFeatureAcknowledgeArgs) ToGetAdminGuiNewFeatureAcknowledgeOutputWithContext(ctx context.Context) GetAdminGuiNewFeatureAcknowledgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiNewFeatureAcknowledgeOutput)
}

// GetAdminGuiNewFeatureAcknowledgeArrayInput is an input type that accepts GetAdminGuiNewFeatureAcknowledgeArray and GetAdminGuiNewFeatureAcknowledgeArrayOutput values.
// You can construct a concrete instance of `GetAdminGuiNewFeatureAcknowledgeArrayInput` via:
//
//	GetAdminGuiNewFeatureAcknowledgeArray{ GetAdminGuiNewFeatureAcknowledgeArgs{...} }
type GetAdminGuiNewFeatureAcknowledgeArrayInput interface {
	pulumi.Input

	ToGetAdminGuiNewFeatureAcknowledgeArrayOutput() GetAdminGuiNewFeatureAcknowledgeArrayOutput
	ToGetAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(context.Context) GetAdminGuiNewFeatureAcknowledgeArrayOutput
}

type GetAdminGuiNewFeatureAcknowledgeArray []GetAdminGuiNewFeatureAcknowledgeInput

func (GetAdminGuiNewFeatureAcknowledgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (i GetAdminGuiNewFeatureAcknowledgeArray) ToGetAdminGuiNewFeatureAcknowledgeArrayOutput() GetAdminGuiNewFeatureAcknowledgeArrayOutput {
	return i.ToGetAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(context.Background())
}

func (i GetAdminGuiNewFeatureAcknowledgeArray) ToGetAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(ctx context.Context) GetAdminGuiNewFeatureAcknowledgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiNewFeatureAcknowledgeArrayOutput)
}

type GetAdminGuiNewFeatureAcknowledgeOutput struct{ *pulumi.OutputState }

func (GetAdminGuiNewFeatureAcknowledgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (o GetAdminGuiNewFeatureAcknowledgeOutput) ToGetAdminGuiNewFeatureAcknowledgeOutput() GetAdminGuiNewFeatureAcknowledgeOutput {
	return o
}

func (o GetAdminGuiNewFeatureAcknowledgeOutput) ToGetAdminGuiNewFeatureAcknowledgeOutputWithContext(ctx context.Context) GetAdminGuiNewFeatureAcknowledgeOutput {
	return o
}

// Select menu ID.
func (o GetAdminGuiNewFeatureAcknowledgeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiNewFeatureAcknowledge) string { return v.Id }).(pulumi.StringOutput)
}

type GetAdminGuiNewFeatureAcknowledgeArrayOutput struct{ *pulumi.OutputState }

func (GetAdminGuiNewFeatureAcknowledgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (o GetAdminGuiNewFeatureAcknowledgeArrayOutput) ToGetAdminGuiNewFeatureAcknowledgeArrayOutput() GetAdminGuiNewFeatureAcknowledgeArrayOutput {
	return o
}

func (o GetAdminGuiNewFeatureAcknowledgeArrayOutput) ToGetAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(ctx context.Context) GetAdminGuiNewFeatureAcknowledgeArrayOutput {
	return o
}

func (o GetAdminGuiNewFeatureAcknowledgeArrayOutput) Index(i pulumi.IntInput) GetAdminGuiNewFeatureAcknowledgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminGuiNewFeatureAcknowledge {
		return vs[0].([]GetAdminGuiNewFeatureAcknowledge)[vs[1].(int)]
	}).(GetAdminGuiNewFeatureAcknowledgeOutput)
}

type GetAdminGuiVdomMenuFavorite struct {
	// Select menu ID.
	Id string `pulumi:"id"`
}

// GetAdminGuiVdomMenuFavoriteInput is an input type that accepts GetAdminGuiVdomMenuFavoriteArgs and GetAdminGuiVdomMenuFavoriteOutput values.
// You can construct a concrete instance of `GetAdminGuiVdomMenuFavoriteInput` via:
//
//	GetAdminGuiVdomMenuFavoriteArgs{...}
type GetAdminGuiVdomMenuFavoriteInput interface {
	pulumi.Input

	ToGetAdminGuiVdomMenuFavoriteOutput() GetAdminGuiVdomMenuFavoriteOutput
	ToGetAdminGuiVdomMenuFavoriteOutputWithContext(context.Context) GetAdminGuiVdomMenuFavoriteOutput
}

type GetAdminGuiVdomMenuFavoriteArgs struct {
	// Select menu ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAdminGuiVdomMenuFavoriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (i GetAdminGuiVdomMenuFavoriteArgs) ToGetAdminGuiVdomMenuFavoriteOutput() GetAdminGuiVdomMenuFavoriteOutput {
	return i.ToGetAdminGuiVdomMenuFavoriteOutputWithContext(context.Background())
}

func (i GetAdminGuiVdomMenuFavoriteArgs) ToGetAdminGuiVdomMenuFavoriteOutputWithContext(ctx context.Context) GetAdminGuiVdomMenuFavoriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiVdomMenuFavoriteOutput)
}

// GetAdminGuiVdomMenuFavoriteArrayInput is an input type that accepts GetAdminGuiVdomMenuFavoriteArray and GetAdminGuiVdomMenuFavoriteArrayOutput values.
// You can construct a concrete instance of `GetAdminGuiVdomMenuFavoriteArrayInput` via:
//
//	GetAdminGuiVdomMenuFavoriteArray{ GetAdminGuiVdomMenuFavoriteArgs{...} }
type GetAdminGuiVdomMenuFavoriteArrayInput interface {
	pulumi.Input

	ToGetAdminGuiVdomMenuFavoriteArrayOutput() GetAdminGuiVdomMenuFavoriteArrayOutput
	ToGetAdminGuiVdomMenuFavoriteArrayOutputWithContext(context.Context) GetAdminGuiVdomMenuFavoriteArrayOutput
}

type GetAdminGuiVdomMenuFavoriteArray []GetAdminGuiVdomMenuFavoriteInput

func (GetAdminGuiVdomMenuFavoriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (i GetAdminGuiVdomMenuFavoriteArray) ToGetAdminGuiVdomMenuFavoriteArrayOutput() GetAdminGuiVdomMenuFavoriteArrayOutput {
	return i.ToGetAdminGuiVdomMenuFavoriteArrayOutputWithContext(context.Background())
}

func (i GetAdminGuiVdomMenuFavoriteArray) ToGetAdminGuiVdomMenuFavoriteArrayOutputWithContext(ctx context.Context) GetAdminGuiVdomMenuFavoriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminGuiVdomMenuFavoriteArrayOutput)
}

type GetAdminGuiVdomMenuFavoriteOutput struct{ *pulumi.OutputState }

func (GetAdminGuiVdomMenuFavoriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (o GetAdminGuiVdomMenuFavoriteOutput) ToGetAdminGuiVdomMenuFavoriteOutput() GetAdminGuiVdomMenuFavoriteOutput {
	return o
}

func (o GetAdminGuiVdomMenuFavoriteOutput) ToGetAdminGuiVdomMenuFavoriteOutputWithContext(ctx context.Context) GetAdminGuiVdomMenuFavoriteOutput {
	return o
}

// Select menu ID.
func (o GetAdminGuiVdomMenuFavoriteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminGuiVdomMenuFavorite) string { return v.Id }).(pulumi.StringOutput)
}

type GetAdminGuiVdomMenuFavoriteArrayOutput struct{ *pulumi.OutputState }

func (GetAdminGuiVdomMenuFavoriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (o GetAdminGuiVdomMenuFavoriteArrayOutput) ToGetAdminGuiVdomMenuFavoriteArrayOutput() GetAdminGuiVdomMenuFavoriteArrayOutput {
	return o
}

func (o GetAdminGuiVdomMenuFavoriteArrayOutput) ToGetAdminGuiVdomMenuFavoriteArrayOutputWithContext(ctx context.Context) GetAdminGuiVdomMenuFavoriteArrayOutput {
	return o
}

func (o GetAdminGuiVdomMenuFavoriteArrayOutput) Index(i pulumi.IntInput) GetAdminGuiVdomMenuFavoriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminGuiVdomMenuFavorite {
		return vs[0].([]GetAdminGuiVdomMenuFavorite)[vs[1].(int)]
	}).(GetAdminGuiVdomMenuFavoriteOutput)
}

type GetAdminLoginTime struct {
	// Last failed login time.
	LastFailedLogin string `pulumi:"lastFailedLogin"`
	// Last successful login time.
	LastLogin string `pulumi:"lastLogin"`
	// User name.
	UsrName string `pulumi:"usrName"`
}

// GetAdminLoginTimeInput is an input type that accepts GetAdminLoginTimeArgs and GetAdminLoginTimeOutput values.
// You can construct a concrete instance of `GetAdminLoginTimeInput` via:
//
//	GetAdminLoginTimeArgs{...}
type GetAdminLoginTimeInput interface {
	pulumi.Input

	ToGetAdminLoginTimeOutput() GetAdminLoginTimeOutput
	ToGetAdminLoginTimeOutputWithContext(context.Context) GetAdminLoginTimeOutput
}

type GetAdminLoginTimeArgs struct {
	// Last failed login time.
	LastFailedLogin pulumi.StringInput `pulumi:"lastFailedLogin"`
	// Last successful login time.
	LastLogin pulumi.StringInput `pulumi:"lastLogin"`
	// User name.
	UsrName pulumi.StringInput `pulumi:"usrName"`
}

func (GetAdminLoginTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminLoginTime)(nil)).Elem()
}

func (i GetAdminLoginTimeArgs) ToGetAdminLoginTimeOutput() GetAdminLoginTimeOutput {
	return i.ToGetAdminLoginTimeOutputWithContext(context.Background())
}

func (i GetAdminLoginTimeArgs) ToGetAdminLoginTimeOutputWithContext(ctx context.Context) GetAdminLoginTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminLoginTimeOutput)
}

// GetAdminLoginTimeArrayInput is an input type that accepts GetAdminLoginTimeArray and GetAdminLoginTimeArrayOutput values.
// You can construct a concrete instance of `GetAdminLoginTimeArrayInput` via:
//
//	GetAdminLoginTimeArray{ GetAdminLoginTimeArgs{...} }
type GetAdminLoginTimeArrayInput interface {
	pulumi.Input

	ToGetAdminLoginTimeArrayOutput() GetAdminLoginTimeArrayOutput
	ToGetAdminLoginTimeArrayOutputWithContext(context.Context) GetAdminLoginTimeArrayOutput
}

type GetAdminLoginTimeArray []GetAdminLoginTimeInput

func (GetAdminLoginTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminLoginTime)(nil)).Elem()
}

func (i GetAdminLoginTimeArray) ToGetAdminLoginTimeArrayOutput() GetAdminLoginTimeArrayOutput {
	return i.ToGetAdminLoginTimeArrayOutputWithContext(context.Background())
}

func (i GetAdminLoginTimeArray) ToGetAdminLoginTimeArrayOutputWithContext(ctx context.Context) GetAdminLoginTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminLoginTimeArrayOutput)
}

type GetAdminLoginTimeOutput struct{ *pulumi.OutputState }

func (GetAdminLoginTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminLoginTime)(nil)).Elem()
}

func (o GetAdminLoginTimeOutput) ToGetAdminLoginTimeOutput() GetAdminLoginTimeOutput {
	return o
}

func (o GetAdminLoginTimeOutput) ToGetAdminLoginTimeOutputWithContext(ctx context.Context) GetAdminLoginTimeOutput {
	return o
}

// Last failed login time.
func (o GetAdminLoginTimeOutput) LastFailedLogin() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminLoginTime) string { return v.LastFailedLogin }).(pulumi.StringOutput)
}

// Last successful login time.
func (o GetAdminLoginTimeOutput) LastLogin() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminLoginTime) string { return v.LastLogin }).(pulumi.StringOutput)
}

// User name.
func (o GetAdminLoginTimeOutput) UsrName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminLoginTime) string { return v.UsrName }).(pulumi.StringOutput)
}

type GetAdminLoginTimeArrayOutput struct{ *pulumi.OutputState }

func (GetAdminLoginTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminLoginTime)(nil)).Elem()
}

func (o GetAdminLoginTimeArrayOutput) ToGetAdminLoginTimeArrayOutput() GetAdminLoginTimeArrayOutput {
	return o
}

func (o GetAdminLoginTimeArrayOutput) ToGetAdminLoginTimeArrayOutputWithContext(ctx context.Context) GetAdminLoginTimeArrayOutput {
	return o
}

func (o GetAdminLoginTimeArrayOutput) Index(i pulumi.IntInput) GetAdminLoginTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminLoginTime {
		return vs[0].([]GetAdminLoginTime)[vs[1].(int)]
	}).(GetAdminLoginTimeOutput)
}

type GetAdminVdom struct {
	// Specify the name of the desired system admin.
	Name string `pulumi:"name"`
}

// GetAdminVdomInput is an input type that accepts GetAdminVdomArgs and GetAdminVdomOutput values.
// You can construct a concrete instance of `GetAdminVdomInput` via:
//
//	GetAdminVdomArgs{...}
type GetAdminVdomInput interface {
	pulumi.Input

	ToGetAdminVdomOutput() GetAdminVdomOutput
	ToGetAdminVdomOutputWithContext(context.Context) GetAdminVdomOutput
}

type GetAdminVdomArgs struct {
	// Specify the name of the desired system admin.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAdminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminVdom)(nil)).Elem()
}

func (i GetAdminVdomArgs) ToGetAdminVdomOutput() GetAdminVdomOutput {
	return i.ToGetAdminVdomOutputWithContext(context.Background())
}

func (i GetAdminVdomArgs) ToGetAdminVdomOutputWithContext(ctx context.Context) GetAdminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminVdomOutput)
}

// GetAdminVdomArrayInput is an input type that accepts GetAdminVdomArray and GetAdminVdomArrayOutput values.
// You can construct a concrete instance of `GetAdminVdomArrayInput` via:
//
//	GetAdminVdomArray{ GetAdminVdomArgs{...} }
type GetAdminVdomArrayInput interface {
	pulumi.Input

	ToGetAdminVdomArrayOutput() GetAdminVdomArrayOutput
	ToGetAdminVdomArrayOutputWithContext(context.Context) GetAdminVdomArrayOutput
}

type GetAdminVdomArray []GetAdminVdomInput

func (GetAdminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminVdom)(nil)).Elem()
}

func (i GetAdminVdomArray) ToGetAdminVdomArrayOutput() GetAdminVdomArrayOutput {
	return i.ToGetAdminVdomArrayOutputWithContext(context.Background())
}

func (i GetAdminVdomArray) ToGetAdminVdomArrayOutputWithContext(ctx context.Context) GetAdminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminVdomArrayOutput)
}

type GetAdminVdomOutput struct{ *pulumi.OutputState }

func (GetAdminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminVdom)(nil)).Elem()
}

func (o GetAdminVdomOutput) ToGetAdminVdomOutput() GetAdminVdomOutput {
	return o
}

func (o GetAdminVdomOutput) ToGetAdminVdomOutputWithContext(ctx context.Context) GetAdminVdomOutput {
	return o
}

// Specify the name of the desired system admin.
func (o GetAdminVdomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminVdom) string { return v.Name }).(pulumi.StringOutput)
}

type GetAdminVdomArrayOutput struct{ *pulumi.OutputState }

func (GetAdminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminVdom)(nil)).Elem()
}

func (o GetAdminVdomArrayOutput) ToGetAdminVdomArrayOutput() GetAdminVdomArrayOutput {
	return o
}

func (o GetAdminVdomArrayOutput) ToGetAdminVdomArrayOutputWithContext(ctx context.Context) GetAdminVdomArrayOutput {
	return o
}

func (o GetAdminVdomArrayOutput) Index(i pulumi.IntInput) GetAdminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminVdom {
		return vs[0].([]GetAdminVdom)[vs[1].(int)]
	}).(GetAdminVdomOutput)
}

type GetApiuserTrusthost struct {
	// Table ID.
	Id int `pulumi:"id"`
	// IPv4 trusted host address.
	Ipv4Trusthost string `pulumi:"ipv4Trusthost"`
	// IPv6 trusted host address.
	Ipv6Trusthost string `pulumi:"ipv6Trusthost"`
	// Trusthost type.
	Type string `pulumi:"type"`
}

// GetApiuserTrusthostInput is an input type that accepts GetApiuserTrusthostArgs and GetApiuserTrusthostOutput values.
// You can construct a concrete instance of `GetApiuserTrusthostInput` via:
//
//	GetApiuserTrusthostArgs{...}
type GetApiuserTrusthostInput interface {
	pulumi.Input

	ToGetApiuserTrusthostOutput() GetApiuserTrusthostOutput
	ToGetApiuserTrusthostOutputWithContext(context.Context) GetApiuserTrusthostOutput
}

type GetApiuserTrusthostArgs struct {
	// Table ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv4 trusted host address.
	Ipv4Trusthost pulumi.StringInput `pulumi:"ipv4Trusthost"`
	// IPv6 trusted host address.
	Ipv6Trusthost pulumi.StringInput `pulumi:"ipv6Trusthost"`
	// Trusthost type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetApiuserTrusthostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiuserTrusthost)(nil)).Elem()
}

func (i GetApiuserTrusthostArgs) ToGetApiuserTrusthostOutput() GetApiuserTrusthostOutput {
	return i.ToGetApiuserTrusthostOutputWithContext(context.Background())
}

func (i GetApiuserTrusthostArgs) ToGetApiuserTrusthostOutputWithContext(ctx context.Context) GetApiuserTrusthostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiuserTrusthostOutput)
}

// GetApiuserTrusthostArrayInput is an input type that accepts GetApiuserTrusthostArray and GetApiuserTrusthostArrayOutput values.
// You can construct a concrete instance of `GetApiuserTrusthostArrayInput` via:
//
//	GetApiuserTrusthostArray{ GetApiuserTrusthostArgs{...} }
type GetApiuserTrusthostArrayInput interface {
	pulumi.Input

	ToGetApiuserTrusthostArrayOutput() GetApiuserTrusthostArrayOutput
	ToGetApiuserTrusthostArrayOutputWithContext(context.Context) GetApiuserTrusthostArrayOutput
}

type GetApiuserTrusthostArray []GetApiuserTrusthostInput

func (GetApiuserTrusthostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiuserTrusthost)(nil)).Elem()
}

func (i GetApiuserTrusthostArray) ToGetApiuserTrusthostArrayOutput() GetApiuserTrusthostArrayOutput {
	return i.ToGetApiuserTrusthostArrayOutputWithContext(context.Background())
}

func (i GetApiuserTrusthostArray) ToGetApiuserTrusthostArrayOutputWithContext(ctx context.Context) GetApiuserTrusthostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiuserTrusthostArrayOutput)
}

type GetApiuserTrusthostOutput struct{ *pulumi.OutputState }

func (GetApiuserTrusthostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiuserTrusthost)(nil)).Elem()
}

func (o GetApiuserTrusthostOutput) ToGetApiuserTrusthostOutput() GetApiuserTrusthostOutput {
	return o
}

func (o GetApiuserTrusthostOutput) ToGetApiuserTrusthostOutputWithContext(ctx context.Context) GetApiuserTrusthostOutput {
	return o
}

// Table ID.
func (o GetApiuserTrusthostOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetApiuserTrusthost) int { return v.Id }).(pulumi.IntOutput)
}

// IPv4 trusted host address.
func (o GetApiuserTrusthostOutput) Ipv4Trusthost() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiuserTrusthost) string { return v.Ipv4Trusthost }).(pulumi.StringOutput)
}

// IPv6 trusted host address.
func (o GetApiuserTrusthostOutput) Ipv6Trusthost() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiuserTrusthost) string { return v.Ipv6Trusthost }).(pulumi.StringOutput)
}

// Trusthost type.
func (o GetApiuserTrusthostOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiuserTrusthost) string { return v.Type }).(pulumi.StringOutput)
}

type GetApiuserTrusthostArrayOutput struct{ *pulumi.OutputState }

func (GetApiuserTrusthostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiuserTrusthost)(nil)).Elem()
}

func (o GetApiuserTrusthostArrayOutput) ToGetApiuserTrusthostArrayOutput() GetApiuserTrusthostArrayOutput {
	return o
}

func (o GetApiuserTrusthostArrayOutput) ToGetApiuserTrusthostArrayOutputWithContext(ctx context.Context) GetApiuserTrusthostArrayOutput {
	return o
}

func (o GetApiuserTrusthostArrayOutput) Index(i pulumi.IntInput) GetApiuserTrusthostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiuserTrusthost {
		return vs[0].([]GetApiuserTrusthost)[vs[1].(int)]
	}).(GetApiuserTrusthostOutput)
}

type GetApiuserVdom struct {
	// Specify the name of the desired system apiuser.
	Name string `pulumi:"name"`
}

// GetApiuserVdomInput is an input type that accepts GetApiuserVdomArgs and GetApiuserVdomOutput values.
// You can construct a concrete instance of `GetApiuserVdomInput` via:
//
//	GetApiuserVdomArgs{...}
type GetApiuserVdomInput interface {
	pulumi.Input

	ToGetApiuserVdomOutput() GetApiuserVdomOutput
	ToGetApiuserVdomOutputWithContext(context.Context) GetApiuserVdomOutput
}

type GetApiuserVdomArgs struct {
	// Specify the name of the desired system apiuser.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApiuserVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiuserVdom)(nil)).Elem()
}

func (i GetApiuserVdomArgs) ToGetApiuserVdomOutput() GetApiuserVdomOutput {
	return i.ToGetApiuserVdomOutputWithContext(context.Background())
}

func (i GetApiuserVdomArgs) ToGetApiuserVdomOutputWithContext(ctx context.Context) GetApiuserVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiuserVdomOutput)
}

// GetApiuserVdomArrayInput is an input type that accepts GetApiuserVdomArray and GetApiuserVdomArrayOutput values.
// You can construct a concrete instance of `GetApiuserVdomArrayInput` via:
//
//	GetApiuserVdomArray{ GetApiuserVdomArgs{...} }
type GetApiuserVdomArrayInput interface {
	pulumi.Input

	ToGetApiuserVdomArrayOutput() GetApiuserVdomArrayOutput
	ToGetApiuserVdomArrayOutputWithContext(context.Context) GetApiuserVdomArrayOutput
}

type GetApiuserVdomArray []GetApiuserVdomInput

func (GetApiuserVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiuserVdom)(nil)).Elem()
}

func (i GetApiuserVdomArray) ToGetApiuserVdomArrayOutput() GetApiuserVdomArrayOutput {
	return i.ToGetApiuserVdomArrayOutputWithContext(context.Background())
}

func (i GetApiuserVdomArray) ToGetApiuserVdomArrayOutputWithContext(ctx context.Context) GetApiuserVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiuserVdomArrayOutput)
}

type GetApiuserVdomOutput struct{ *pulumi.OutputState }

func (GetApiuserVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiuserVdom)(nil)).Elem()
}

func (o GetApiuserVdomOutput) ToGetApiuserVdomOutput() GetApiuserVdomOutput {
	return o
}

func (o GetApiuserVdomOutput) ToGetApiuserVdomOutputWithContext(ctx context.Context) GetApiuserVdomOutput {
	return o
}

// Specify the name of the desired system apiuser.
func (o GetApiuserVdomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiuserVdom) string { return v.Name }).(pulumi.StringOutput)
}

type GetApiuserVdomArrayOutput struct{ *pulumi.OutputState }

func (GetApiuserVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiuserVdom)(nil)).Elem()
}

func (o GetApiuserVdomArrayOutput) ToGetApiuserVdomArrayOutput() GetApiuserVdomArrayOutput {
	return o
}

func (o GetApiuserVdomArrayOutput) ToGetApiuserVdomArrayOutputWithContext(ctx context.Context) GetApiuserVdomArrayOutput {
	return o
}

func (o GetApiuserVdomArrayOutput) Index(i pulumi.IntInput) GetApiuserVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiuserVdom {
		return vs[0].([]GetApiuserVdom)[vs[1].(int)]
	}).(GetApiuserVdomOutput)
}

type GetAutomationactionEmailTo struct {
	// Specify the name of the desired system automationaction.
	Name string `pulumi:"name"`
}

// GetAutomationactionEmailToInput is an input type that accepts GetAutomationactionEmailToArgs and GetAutomationactionEmailToOutput values.
// You can construct a concrete instance of `GetAutomationactionEmailToInput` via:
//
//	GetAutomationactionEmailToArgs{...}
type GetAutomationactionEmailToInput interface {
	pulumi.Input

	ToGetAutomationactionEmailToOutput() GetAutomationactionEmailToOutput
	ToGetAutomationactionEmailToOutputWithContext(context.Context) GetAutomationactionEmailToOutput
}

type GetAutomationactionEmailToArgs struct {
	// Specify the name of the desired system automationaction.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAutomationactionEmailToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationactionEmailTo)(nil)).Elem()
}

func (i GetAutomationactionEmailToArgs) ToGetAutomationactionEmailToOutput() GetAutomationactionEmailToOutput {
	return i.ToGetAutomationactionEmailToOutputWithContext(context.Background())
}

func (i GetAutomationactionEmailToArgs) ToGetAutomationactionEmailToOutputWithContext(ctx context.Context) GetAutomationactionEmailToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationactionEmailToOutput)
}

// GetAutomationactionEmailToArrayInput is an input type that accepts GetAutomationactionEmailToArray and GetAutomationactionEmailToArrayOutput values.
// You can construct a concrete instance of `GetAutomationactionEmailToArrayInput` via:
//
//	GetAutomationactionEmailToArray{ GetAutomationactionEmailToArgs{...} }
type GetAutomationactionEmailToArrayInput interface {
	pulumi.Input

	ToGetAutomationactionEmailToArrayOutput() GetAutomationactionEmailToArrayOutput
	ToGetAutomationactionEmailToArrayOutputWithContext(context.Context) GetAutomationactionEmailToArrayOutput
}

type GetAutomationactionEmailToArray []GetAutomationactionEmailToInput

func (GetAutomationactionEmailToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationactionEmailTo)(nil)).Elem()
}

func (i GetAutomationactionEmailToArray) ToGetAutomationactionEmailToArrayOutput() GetAutomationactionEmailToArrayOutput {
	return i.ToGetAutomationactionEmailToArrayOutputWithContext(context.Background())
}

func (i GetAutomationactionEmailToArray) ToGetAutomationactionEmailToArrayOutputWithContext(ctx context.Context) GetAutomationactionEmailToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationactionEmailToArrayOutput)
}

type GetAutomationactionEmailToOutput struct{ *pulumi.OutputState }

func (GetAutomationactionEmailToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationactionEmailTo)(nil)).Elem()
}

func (o GetAutomationactionEmailToOutput) ToGetAutomationactionEmailToOutput() GetAutomationactionEmailToOutput {
	return o
}

func (o GetAutomationactionEmailToOutput) ToGetAutomationactionEmailToOutputWithContext(ctx context.Context) GetAutomationactionEmailToOutput {
	return o
}

// Specify the name of the desired system automationaction.
func (o GetAutomationactionEmailToOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutomationactionEmailTo) string { return v.Name }).(pulumi.StringOutput)
}

type GetAutomationactionEmailToArrayOutput struct{ *pulumi.OutputState }

func (GetAutomationactionEmailToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationactionEmailTo)(nil)).Elem()
}

func (o GetAutomationactionEmailToArrayOutput) ToGetAutomationactionEmailToArrayOutput() GetAutomationactionEmailToArrayOutput {
	return o
}

func (o GetAutomationactionEmailToArrayOutput) ToGetAutomationactionEmailToArrayOutputWithContext(ctx context.Context) GetAutomationactionEmailToArrayOutput {
	return o
}

func (o GetAutomationactionEmailToArrayOutput) Index(i pulumi.IntInput) GetAutomationactionEmailToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutomationactionEmailTo {
		return vs[0].([]GetAutomationactionEmailTo)[vs[1].(int)]
	}).(GetAutomationactionEmailToOutput)
}

type GetAutomationactionHeader struct {
	// Request header.
	Header string `pulumi:"header"`
}

// GetAutomationactionHeaderInput is an input type that accepts GetAutomationactionHeaderArgs and GetAutomationactionHeaderOutput values.
// You can construct a concrete instance of `GetAutomationactionHeaderInput` via:
//
//	GetAutomationactionHeaderArgs{...}
type GetAutomationactionHeaderInput interface {
	pulumi.Input

	ToGetAutomationactionHeaderOutput() GetAutomationactionHeaderOutput
	ToGetAutomationactionHeaderOutputWithContext(context.Context) GetAutomationactionHeaderOutput
}

type GetAutomationactionHeaderArgs struct {
	// Request header.
	Header pulumi.StringInput `pulumi:"header"`
}

func (GetAutomationactionHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationactionHeader)(nil)).Elem()
}

func (i GetAutomationactionHeaderArgs) ToGetAutomationactionHeaderOutput() GetAutomationactionHeaderOutput {
	return i.ToGetAutomationactionHeaderOutputWithContext(context.Background())
}

func (i GetAutomationactionHeaderArgs) ToGetAutomationactionHeaderOutputWithContext(ctx context.Context) GetAutomationactionHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationactionHeaderOutput)
}

// GetAutomationactionHeaderArrayInput is an input type that accepts GetAutomationactionHeaderArray and GetAutomationactionHeaderArrayOutput values.
// You can construct a concrete instance of `GetAutomationactionHeaderArrayInput` via:
//
//	GetAutomationactionHeaderArray{ GetAutomationactionHeaderArgs{...} }
type GetAutomationactionHeaderArrayInput interface {
	pulumi.Input

	ToGetAutomationactionHeaderArrayOutput() GetAutomationactionHeaderArrayOutput
	ToGetAutomationactionHeaderArrayOutputWithContext(context.Context) GetAutomationactionHeaderArrayOutput
}

type GetAutomationactionHeaderArray []GetAutomationactionHeaderInput

func (GetAutomationactionHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationactionHeader)(nil)).Elem()
}

func (i GetAutomationactionHeaderArray) ToGetAutomationactionHeaderArrayOutput() GetAutomationactionHeaderArrayOutput {
	return i.ToGetAutomationactionHeaderArrayOutputWithContext(context.Background())
}

func (i GetAutomationactionHeaderArray) ToGetAutomationactionHeaderArrayOutputWithContext(ctx context.Context) GetAutomationactionHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationactionHeaderArrayOutput)
}

type GetAutomationactionHeaderOutput struct{ *pulumi.OutputState }

func (GetAutomationactionHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationactionHeader)(nil)).Elem()
}

func (o GetAutomationactionHeaderOutput) ToGetAutomationactionHeaderOutput() GetAutomationactionHeaderOutput {
	return o
}

func (o GetAutomationactionHeaderOutput) ToGetAutomationactionHeaderOutputWithContext(ctx context.Context) GetAutomationactionHeaderOutput {
	return o
}

// Request header.
func (o GetAutomationactionHeaderOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutomationactionHeader) string { return v.Header }).(pulumi.StringOutput)
}

type GetAutomationactionHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetAutomationactionHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationactionHeader)(nil)).Elem()
}

func (o GetAutomationactionHeaderArrayOutput) ToGetAutomationactionHeaderArrayOutput() GetAutomationactionHeaderArrayOutput {
	return o
}

func (o GetAutomationactionHeaderArrayOutput) ToGetAutomationactionHeaderArrayOutputWithContext(ctx context.Context) GetAutomationactionHeaderArrayOutput {
	return o
}

func (o GetAutomationactionHeaderArrayOutput) Index(i pulumi.IntInput) GetAutomationactionHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutomationactionHeader {
		return vs[0].([]GetAutomationactionHeader)[vs[1].(int)]
	}).(GetAutomationactionHeaderOutput)
}

type GetAutomationactionHttpHeader struct {
	// Entry ID.
	Id int `pulumi:"id"`
	// Request header key.
	Key string `pulumi:"key"`
	// Request header value.
	Value string `pulumi:"value"`
}

// GetAutomationactionHttpHeaderInput is an input type that accepts GetAutomationactionHttpHeaderArgs and GetAutomationactionHttpHeaderOutput values.
// You can construct a concrete instance of `GetAutomationactionHttpHeaderInput` via:
//
//	GetAutomationactionHttpHeaderArgs{...}
type GetAutomationactionHttpHeaderInput interface {
	pulumi.Input

	ToGetAutomationactionHttpHeaderOutput() GetAutomationactionHttpHeaderOutput
	ToGetAutomationactionHttpHeaderOutputWithContext(context.Context) GetAutomationactionHttpHeaderOutput
}

type GetAutomationactionHttpHeaderArgs struct {
	// Entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Request header key.
	Key pulumi.StringInput `pulumi:"key"`
	// Request header value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAutomationactionHttpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationactionHttpHeader)(nil)).Elem()
}

func (i GetAutomationactionHttpHeaderArgs) ToGetAutomationactionHttpHeaderOutput() GetAutomationactionHttpHeaderOutput {
	return i.ToGetAutomationactionHttpHeaderOutputWithContext(context.Background())
}

func (i GetAutomationactionHttpHeaderArgs) ToGetAutomationactionHttpHeaderOutputWithContext(ctx context.Context) GetAutomationactionHttpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationactionHttpHeaderOutput)
}

// GetAutomationactionHttpHeaderArrayInput is an input type that accepts GetAutomationactionHttpHeaderArray and GetAutomationactionHttpHeaderArrayOutput values.
// You can construct a concrete instance of `GetAutomationactionHttpHeaderArrayInput` via:
//
//	GetAutomationactionHttpHeaderArray{ GetAutomationactionHttpHeaderArgs{...} }
type GetAutomationactionHttpHeaderArrayInput interface {
	pulumi.Input

	ToGetAutomationactionHttpHeaderArrayOutput() GetAutomationactionHttpHeaderArrayOutput
	ToGetAutomationactionHttpHeaderArrayOutputWithContext(context.Context) GetAutomationactionHttpHeaderArrayOutput
}

type GetAutomationactionHttpHeaderArray []GetAutomationactionHttpHeaderInput

func (GetAutomationactionHttpHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationactionHttpHeader)(nil)).Elem()
}

func (i GetAutomationactionHttpHeaderArray) ToGetAutomationactionHttpHeaderArrayOutput() GetAutomationactionHttpHeaderArrayOutput {
	return i.ToGetAutomationactionHttpHeaderArrayOutputWithContext(context.Background())
}

func (i GetAutomationactionHttpHeaderArray) ToGetAutomationactionHttpHeaderArrayOutputWithContext(ctx context.Context) GetAutomationactionHttpHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationactionHttpHeaderArrayOutput)
}

type GetAutomationactionHttpHeaderOutput struct{ *pulumi.OutputState }

func (GetAutomationactionHttpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationactionHttpHeader)(nil)).Elem()
}

func (o GetAutomationactionHttpHeaderOutput) ToGetAutomationactionHttpHeaderOutput() GetAutomationactionHttpHeaderOutput {
	return o
}

func (o GetAutomationactionHttpHeaderOutput) ToGetAutomationactionHttpHeaderOutputWithContext(ctx context.Context) GetAutomationactionHttpHeaderOutput {
	return o
}

// Entry ID.
func (o GetAutomationactionHttpHeaderOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutomationactionHttpHeader) int { return v.Id }).(pulumi.IntOutput)
}

// Request header key.
func (o GetAutomationactionHttpHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutomationactionHttpHeader) string { return v.Key }).(pulumi.StringOutput)
}

// Request header value.
func (o GetAutomationactionHttpHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutomationactionHttpHeader) string { return v.Value }).(pulumi.StringOutput)
}

type GetAutomationactionHttpHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetAutomationactionHttpHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationactionHttpHeader)(nil)).Elem()
}

func (o GetAutomationactionHttpHeaderArrayOutput) ToGetAutomationactionHttpHeaderArrayOutput() GetAutomationactionHttpHeaderArrayOutput {
	return o
}

func (o GetAutomationactionHttpHeaderArrayOutput) ToGetAutomationactionHttpHeaderArrayOutputWithContext(ctx context.Context) GetAutomationactionHttpHeaderArrayOutput {
	return o
}

func (o GetAutomationactionHttpHeaderArrayOutput) Index(i pulumi.IntInput) GetAutomationactionHttpHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutomationactionHttpHeader {
		return vs[0].([]GetAutomationactionHttpHeader)[vs[1].(int)]
	}).(GetAutomationactionHttpHeaderOutput)
}

type GetAutomationactionSdnConnector struct {
	// Specify the name of the desired system automationaction.
	Name string `pulumi:"name"`
}

// GetAutomationactionSdnConnectorInput is an input type that accepts GetAutomationactionSdnConnectorArgs and GetAutomationactionSdnConnectorOutput values.
// You can construct a concrete instance of `GetAutomationactionSdnConnectorInput` via:
//
//	GetAutomationactionSdnConnectorArgs{...}
type GetAutomationactionSdnConnectorInput interface {
	pulumi.Input

	ToGetAutomationactionSdnConnectorOutput() GetAutomationactionSdnConnectorOutput
	ToGetAutomationactionSdnConnectorOutputWithContext(context.Context) GetAutomationactionSdnConnectorOutput
}

type GetAutomationactionSdnConnectorArgs struct {
	// Specify the name of the desired system automationaction.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAutomationactionSdnConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationactionSdnConnector)(nil)).Elem()
}

func (i GetAutomationactionSdnConnectorArgs) ToGetAutomationactionSdnConnectorOutput() GetAutomationactionSdnConnectorOutput {
	return i.ToGetAutomationactionSdnConnectorOutputWithContext(context.Background())
}

func (i GetAutomationactionSdnConnectorArgs) ToGetAutomationactionSdnConnectorOutputWithContext(ctx context.Context) GetAutomationactionSdnConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationactionSdnConnectorOutput)
}

// GetAutomationactionSdnConnectorArrayInput is an input type that accepts GetAutomationactionSdnConnectorArray and GetAutomationactionSdnConnectorArrayOutput values.
// You can construct a concrete instance of `GetAutomationactionSdnConnectorArrayInput` via:
//
//	GetAutomationactionSdnConnectorArray{ GetAutomationactionSdnConnectorArgs{...} }
type GetAutomationactionSdnConnectorArrayInput interface {
	pulumi.Input

	ToGetAutomationactionSdnConnectorArrayOutput() GetAutomationactionSdnConnectorArrayOutput
	ToGetAutomationactionSdnConnectorArrayOutputWithContext(context.Context) GetAutomationactionSdnConnectorArrayOutput
}

type GetAutomationactionSdnConnectorArray []GetAutomationactionSdnConnectorInput

func (GetAutomationactionSdnConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationactionSdnConnector)(nil)).Elem()
}

func (i GetAutomationactionSdnConnectorArray) ToGetAutomationactionSdnConnectorArrayOutput() GetAutomationactionSdnConnectorArrayOutput {
	return i.ToGetAutomationactionSdnConnectorArrayOutputWithContext(context.Background())
}

func (i GetAutomationactionSdnConnectorArray) ToGetAutomationactionSdnConnectorArrayOutputWithContext(ctx context.Context) GetAutomationactionSdnConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationactionSdnConnectorArrayOutput)
}

type GetAutomationactionSdnConnectorOutput struct{ *pulumi.OutputState }

func (GetAutomationactionSdnConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationactionSdnConnector)(nil)).Elem()
}

func (o GetAutomationactionSdnConnectorOutput) ToGetAutomationactionSdnConnectorOutput() GetAutomationactionSdnConnectorOutput {
	return o
}

func (o GetAutomationactionSdnConnectorOutput) ToGetAutomationactionSdnConnectorOutputWithContext(ctx context.Context) GetAutomationactionSdnConnectorOutput {
	return o
}

// Specify the name of the desired system automationaction.
func (o GetAutomationactionSdnConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutomationactionSdnConnector) string { return v.Name }).(pulumi.StringOutput)
}

type GetAutomationactionSdnConnectorArrayOutput struct{ *pulumi.OutputState }

func (GetAutomationactionSdnConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationactionSdnConnector)(nil)).Elem()
}

func (o GetAutomationactionSdnConnectorArrayOutput) ToGetAutomationactionSdnConnectorArrayOutput() GetAutomationactionSdnConnectorArrayOutput {
	return o
}

func (o GetAutomationactionSdnConnectorArrayOutput) ToGetAutomationactionSdnConnectorArrayOutputWithContext(ctx context.Context) GetAutomationactionSdnConnectorArrayOutput {
	return o
}

func (o GetAutomationactionSdnConnectorArrayOutput) Index(i pulumi.IntInput) GetAutomationactionSdnConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutomationactionSdnConnector {
		return vs[0].([]GetAutomationactionSdnConnector)[vs[1].(int)]
	}).(GetAutomationactionSdnConnectorOutput)
}

type GetAutomationdestinationDestination struct {
	// Specify the name of the desired system automationdestination.
	Name string `pulumi:"name"`
}

// GetAutomationdestinationDestinationInput is an input type that accepts GetAutomationdestinationDestinationArgs and GetAutomationdestinationDestinationOutput values.
// You can construct a concrete instance of `GetAutomationdestinationDestinationInput` via:
//
//	GetAutomationdestinationDestinationArgs{...}
type GetAutomationdestinationDestinationInput interface {
	pulumi.Input

	ToGetAutomationdestinationDestinationOutput() GetAutomationdestinationDestinationOutput
	ToGetAutomationdestinationDestinationOutputWithContext(context.Context) GetAutomationdestinationDestinationOutput
}

type GetAutomationdestinationDestinationArgs struct {
	// Specify the name of the desired system automationdestination.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAutomationdestinationDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationdestinationDestination)(nil)).Elem()
}

func (i GetAutomationdestinationDestinationArgs) ToGetAutomationdestinationDestinationOutput() GetAutomationdestinationDestinationOutput {
	return i.ToGetAutomationdestinationDestinationOutputWithContext(context.Background())
}

func (i GetAutomationdestinationDestinationArgs) ToGetAutomationdestinationDestinationOutputWithContext(ctx context.Context) GetAutomationdestinationDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationdestinationDestinationOutput)
}

// GetAutomationdestinationDestinationArrayInput is an input type that accepts GetAutomationdestinationDestinationArray and GetAutomationdestinationDestinationArrayOutput values.
// You can construct a concrete instance of `GetAutomationdestinationDestinationArrayInput` via:
//
//	GetAutomationdestinationDestinationArray{ GetAutomationdestinationDestinationArgs{...} }
type GetAutomationdestinationDestinationArrayInput interface {
	pulumi.Input

	ToGetAutomationdestinationDestinationArrayOutput() GetAutomationdestinationDestinationArrayOutput
	ToGetAutomationdestinationDestinationArrayOutputWithContext(context.Context) GetAutomationdestinationDestinationArrayOutput
}

type GetAutomationdestinationDestinationArray []GetAutomationdestinationDestinationInput

func (GetAutomationdestinationDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationdestinationDestination)(nil)).Elem()
}

func (i GetAutomationdestinationDestinationArray) ToGetAutomationdestinationDestinationArrayOutput() GetAutomationdestinationDestinationArrayOutput {
	return i.ToGetAutomationdestinationDestinationArrayOutputWithContext(context.Background())
}

func (i GetAutomationdestinationDestinationArray) ToGetAutomationdestinationDestinationArrayOutputWithContext(ctx context.Context) GetAutomationdestinationDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationdestinationDestinationArrayOutput)
}

type GetAutomationdestinationDestinationOutput struct{ *pulumi.OutputState }

func (GetAutomationdestinationDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationdestinationDestination)(nil)).Elem()
}

func (o GetAutomationdestinationDestinationOutput) ToGetAutomationdestinationDestinationOutput() GetAutomationdestinationDestinationOutput {
	return o
}

func (o GetAutomationdestinationDestinationOutput) ToGetAutomationdestinationDestinationOutputWithContext(ctx context.Context) GetAutomationdestinationDestinationOutput {
	return o
}

// Specify the name of the desired system automationdestination.
func (o GetAutomationdestinationDestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutomationdestinationDestination) string { return v.Name }).(pulumi.StringOutput)
}

type GetAutomationdestinationDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetAutomationdestinationDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationdestinationDestination)(nil)).Elem()
}

func (o GetAutomationdestinationDestinationArrayOutput) ToGetAutomationdestinationDestinationArrayOutput() GetAutomationdestinationDestinationArrayOutput {
	return o
}

func (o GetAutomationdestinationDestinationArrayOutput) ToGetAutomationdestinationDestinationArrayOutputWithContext(ctx context.Context) GetAutomationdestinationDestinationArrayOutput {
	return o
}

func (o GetAutomationdestinationDestinationArrayOutput) Index(i pulumi.IntInput) GetAutomationdestinationDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutomationdestinationDestination {
		return vs[0].([]GetAutomationdestinationDestination)[vs[1].(int)]
	}).(GetAutomationdestinationDestinationOutput)
}

type GetAutomationtriggerField struct {
	// Entry ID.
	Id int `pulumi:"id"`
	// Specify the name of the desired system automationtrigger.
	Name string `pulumi:"name"`
	// Value.
	Value string `pulumi:"value"`
}

// GetAutomationtriggerFieldInput is an input type that accepts GetAutomationtriggerFieldArgs and GetAutomationtriggerFieldOutput values.
// You can construct a concrete instance of `GetAutomationtriggerFieldInput` via:
//
//	GetAutomationtriggerFieldArgs{...}
type GetAutomationtriggerFieldInput interface {
	pulumi.Input

	ToGetAutomationtriggerFieldOutput() GetAutomationtriggerFieldOutput
	ToGetAutomationtriggerFieldOutputWithContext(context.Context) GetAutomationtriggerFieldOutput
}

type GetAutomationtriggerFieldArgs struct {
	// Entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Specify the name of the desired system automationtrigger.
	Name pulumi.StringInput `pulumi:"name"`
	// Value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAutomationtriggerFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationtriggerField)(nil)).Elem()
}

func (i GetAutomationtriggerFieldArgs) ToGetAutomationtriggerFieldOutput() GetAutomationtriggerFieldOutput {
	return i.ToGetAutomationtriggerFieldOutputWithContext(context.Background())
}

func (i GetAutomationtriggerFieldArgs) ToGetAutomationtriggerFieldOutputWithContext(ctx context.Context) GetAutomationtriggerFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationtriggerFieldOutput)
}

// GetAutomationtriggerFieldArrayInput is an input type that accepts GetAutomationtriggerFieldArray and GetAutomationtriggerFieldArrayOutput values.
// You can construct a concrete instance of `GetAutomationtriggerFieldArrayInput` via:
//
//	GetAutomationtriggerFieldArray{ GetAutomationtriggerFieldArgs{...} }
type GetAutomationtriggerFieldArrayInput interface {
	pulumi.Input

	ToGetAutomationtriggerFieldArrayOutput() GetAutomationtriggerFieldArrayOutput
	ToGetAutomationtriggerFieldArrayOutputWithContext(context.Context) GetAutomationtriggerFieldArrayOutput
}

type GetAutomationtriggerFieldArray []GetAutomationtriggerFieldInput

func (GetAutomationtriggerFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationtriggerField)(nil)).Elem()
}

func (i GetAutomationtriggerFieldArray) ToGetAutomationtriggerFieldArrayOutput() GetAutomationtriggerFieldArrayOutput {
	return i.ToGetAutomationtriggerFieldArrayOutputWithContext(context.Background())
}

func (i GetAutomationtriggerFieldArray) ToGetAutomationtriggerFieldArrayOutputWithContext(ctx context.Context) GetAutomationtriggerFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationtriggerFieldArrayOutput)
}

type GetAutomationtriggerFieldOutput struct{ *pulumi.OutputState }

func (GetAutomationtriggerFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationtriggerField)(nil)).Elem()
}

func (o GetAutomationtriggerFieldOutput) ToGetAutomationtriggerFieldOutput() GetAutomationtriggerFieldOutput {
	return o
}

func (o GetAutomationtriggerFieldOutput) ToGetAutomationtriggerFieldOutputWithContext(ctx context.Context) GetAutomationtriggerFieldOutput {
	return o
}

// Entry ID.
func (o GetAutomationtriggerFieldOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutomationtriggerField) int { return v.Id }).(pulumi.IntOutput)
}

// Specify the name of the desired system automationtrigger.
func (o GetAutomationtriggerFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutomationtriggerField) string { return v.Name }).(pulumi.StringOutput)
}

// Value.
func (o GetAutomationtriggerFieldOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutomationtriggerField) string { return v.Value }).(pulumi.StringOutput)
}

type GetAutomationtriggerFieldArrayOutput struct{ *pulumi.OutputState }

func (GetAutomationtriggerFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationtriggerField)(nil)).Elem()
}

func (o GetAutomationtriggerFieldArrayOutput) ToGetAutomationtriggerFieldArrayOutput() GetAutomationtriggerFieldArrayOutput {
	return o
}

func (o GetAutomationtriggerFieldArrayOutput) ToGetAutomationtriggerFieldArrayOutputWithContext(ctx context.Context) GetAutomationtriggerFieldArrayOutput {
	return o
}

func (o GetAutomationtriggerFieldArrayOutput) Index(i pulumi.IntInput) GetAutomationtriggerFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutomationtriggerField {
		return vs[0].([]GetAutomationtriggerField)[vs[1].(int)]
	}).(GetAutomationtriggerFieldOutput)
}

type GetAutomationtriggerLogidBlock struct {
	// Entry ID.
	Id int `pulumi:"id"`
}

// GetAutomationtriggerLogidBlockInput is an input type that accepts GetAutomationtriggerLogidBlockArgs and GetAutomationtriggerLogidBlockOutput values.
// You can construct a concrete instance of `GetAutomationtriggerLogidBlockInput` via:
//
//	GetAutomationtriggerLogidBlockArgs{...}
type GetAutomationtriggerLogidBlockInput interface {
	pulumi.Input

	ToGetAutomationtriggerLogidBlockOutput() GetAutomationtriggerLogidBlockOutput
	ToGetAutomationtriggerLogidBlockOutputWithContext(context.Context) GetAutomationtriggerLogidBlockOutput
}

type GetAutomationtriggerLogidBlockArgs struct {
	// Entry ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetAutomationtriggerLogidBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationtriggerLogidBlock)(nil)).Elem()
}

func (i GetAutomationtriggerLogidBlockArgs) ToGetAutomationtriggerLogidBlockOutput() GetAutomationtriggerLogidBlockOutput {
	return i.ToGetAutomationtriggerLogidBlockOutputWithContext(context.Background())
}

func (i GetAutomationtriggerLogidBlockArgs) ToGetAutomationtriggerLogidBlockOutputWithContext(ctx context.Context) GetAutomationtriggerLogidBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationtriggerLogidBlockOutput)
}

// GetAutomationtriggerLogidBlockArrayInput is an input type that accepts GetAutomationtriggerLogidBlockArray and GetAutomationtriggerLogidBlockArrayOutput values.
// You can construct a concrete instance of `GetAutomationtriggerLogidBlockArrayInput` via:
//
//	GetAutomationtriggerLogidBlockArray{ GetAutomationtriggerLogidBlockArgs{...} }
type GetAutomationtriggerLogidBlockArrayInput interface {
	pulumi.Input

	ToGetAutomationtriggerLogidBlockArrayOutput() GetAutomationtriggerLogidBlockArrayOutput
	ToGetAutomationtriggerLogidBlockArrayOutputWithContext(context.Context) GetAutomationtriggerLogidBlockArrayOutput
}

type GetAutomationtriggerLogidBlockArray []GetAutomationtriggerLogidBlockInput

func (GetAutomationtriggerLogidBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationtriggerLogidBlock)(nil)).Elem()
}

func (i GetAutomationtriggerLogidBlockArray) ToGetAutomationtriggerLogidBlockArrayOutput() GetAutomationtriggerLogidBlockArrayOutput {
	return i.ToGetAutomationtriggerLogidBlockArrayOutputWithContext(context.Background())
}

func (i GetAutomationtriggerLogidBlockArray) ToGetAutomationtriggerLogidBlockArrayOutputWithContext(ctx context.Context) GetAutomationtriggerLogidBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationtriggerLogidBlockArrayOutput)
}

type GetAutomationtriggerLogidBlockOutput struct{ *pulumi.OutputState }

func (GetAutomationtriggerLogidBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationtriggerLogidBlock)(nil)).Elem()
}

func (o GetAutomationtriggerLogidBlockOutput) ToGetAutomationtriggerLogidBlockOutput() GetAutomationtriggerLogidBlockOutput {
	return o
}

func (o GetAutomationtriggerLogidBlockOutput) ToGetAutomationtriggerLogidBlockOutputWithContext(ctx context.Context) GetAutomationtriggerLogidBlockOutput {
	return o
}

// Entry ID.
func (o GetAutomationtriggerLogidBlockOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutomationtriggerLogidBlock) int { return v.Id }).(pulumi.IntOutput)
}

type GetAutomationtriggerLogidBlockArrayOutput struct{ *pulumi.OutputState }

func (GetAutomationtriggerLogidBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationtriggerLogidBlock)(nil)).Elem()
}

func (o GetAutomationtriggerLogidBlockArrayOutput) ToGetAutomationtriggerLogidBlockArrayOutput() GetAutomationtriggerLogidBlockArrayOutput {
	return o
}

func (o GetAutomationtriggerLogidBlockArrayOutput) ToGetAutomationtriggerLogidBlockArrayOutputWithContext(ctx context.Context) GetAutomationtriggerLogidBlockArrayOutput {
	return o
}

func (o GetAutomationtriggerLogidBlockArrayOutput) Index(i pulumi.IntInput) GetAutomationtriggerLogidBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutomationtriggerLogidBlock {
		return vs[0].([]GetAutomationtriggerLogidBlock)[vs[1].(int)]
	}).(GetAutomationtriggerLogidBlockOutput)
}

type GetAutomationtriggerVdom struct {
	// Specify the name of the desired system automationtrigger.
	Name string `pulumi:"name"`
}

// GetAutomationtriggerVdomInput is an input type that accepts GetAutomationtriggerVdomArgs and GetAutomationtriggerVdomOutput values.
// You can construct a concrete instance of `GetAutomationtriggerVdomInput` via:
//
//	GetAutomationtriggerVdomArgs{...}
type GetAutomationtriggerVdomInput interface {
	pulumi.Input

	ToGetAutomationtriggerVdomOutput() GetAutomationtriggerVdomOutput
	ToGetAutomationtriggerVdomOutputWithContext(context.Context) GetAutomationtriggerVdomOutput
}

type GetAutomationtriggerVdomArgs struct {
	// Specify the name of the desired system automationtrigger.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAutomationtriggerVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationtriggerVdom)(nil)).Elem()
}

func (i GetAutomationtriggerVdomArgs) ToGetAutomationtriggerVdomOutput() GetAutomationtriggerVdomOutput {
	return i.ToGetAutomationtriggerVdomOutputWithContext(context.Background())
}

func (i GetAutomationtriggerVdomArgs) ToGetAutomationtriggerVdomOutputWithContext(ctx context.Context) GetAutomationtriggerVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationtriggerVdomOutput)
}

// GetAutomationtriggerVdomArrayInput is an input type that accepts GetAutomationtriggerVdomArray and GetAutomationtriggerVdomArrayOutput values.
// You can construct a concrete instance of `GetAutomationtriggerVdomArrayInput` via:
//
//	GetAutomationtriggerVdomArray{ GetAutomationtriggerVdomArgs{...} }
type GetAutomationtriggerVdomArrayInput interface {
	pulumi.Input

	ToGetAutomationtriggerVdomArrayOutput() GetAutomationtriggerVdomArrayOutput
	ToGetAutomationtriggerVdomArrayOutputWithContext(context.Context) GetAutomationtriggerVdomArrayOutput
}

type GetAutomationtriggerVdomArray []GetAutomationtriggerVdomInput

func (GetAutomationtriggerVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationtriggerVdom)(nil)).Elem()
}

func (i GetAutomationtriggerVdomArray) ToGetAutomationtriggerVdomArrayOutput() GetAutomationtriggerVdomArrayOutput {
	return i.ToGetAutomationtriggerVdomArrayOutputWithContext(context.Background())
}

func (i GetAutomationtriggerVdomArray) ToGetAutomationtriggerVdomArrayOutputWithContext(ctx context.Context) GetAutomationtriggerVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutomationtriggerVdomArrayOutput)
}

type GetAutomationtriggerVdomOutput struct{ *pulumi.OutputState }

func (GetAutomationtriggerVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutomationtriggerVdom)(nil)).Elem()
}

func (o GetAutomationtriggerVdomOutput) ToGetAutomationtriggerVdomOutput() GetAutomationtriggerVdomOutput {
	return o
}

func (o GetAutomationtriggerVdomOutput) ToGetAutomationtriggerVdomOutputWithContext(ctx context.Context) GetAutomationtriggerVdomOutput {
	return o
}

// Specify the name of the desired system automationtrigger.
func (o GetAutomationtriggerVdomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutomationtriggerVdom) string { return v.Name }).(pulumi.StringOutput)
}

type GetAutomationtriggerVdomArrayOutput struct{ *pulumi.OutputState }

func (GetAutomationtriggerVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutomationtriggerVdom)(nil)).Elem()
}

func (o GetAutomationtriggerVdomArrayOutput) ToGetAutomationtriggerVdomArrayOutput() GetAutomationtriggerVdomArrayOutput {
	return o
}

func (o GetAutomationtriggerVdomArrayOutput) ToGetAutomationtriggerVdomArrayOutputWithContext(ctx context.Context) GetAutomationtriggerVdomArrayOutput {
	return o
}

func (o GetAutomationtriggerVdomArrayOutput) Index(i pulumi.IntInput) GetAutomationtriggerVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutomationtriggerVdom {
		return vs[0].([]GetAutomationtriggerVdom)[vs[1].(int)]
	}).(GetAutomationtriggerVdomOutput)
}

type GetCentralmanagementServerList struct {
	// Indicate whether the FortiGate communicates with the override server using an IPv4 address, an IPv6 address or a FQDN.
	AddrType string `pulumi:"addrType"`
	// FQDN address of override server.
	Fqdn string `pulumi:"fqdn"`
	// ID.
	Id int `pulumi:"id"`
	// IPv4 address of override server.
	ServerAddress string `pulumi:"serverAddress"`
	// IPv6 address of override server.
	ServerAddress6 string `pulumi:"serverAddress6"`
	// FortiGuard service type.
	ServerType string `pulumi:"serverType"`
}

// GetCentralmanagementServerListInput is an input type that accepts GetCentralmanagementServerListArgs and GetCentralmanagementServerListOutput values.
// You can construct a concrete instance of `GetCentralmanagementServerListInput` via:
//
//	GetCentralmanagementServerListArgs{...}
type GetCentralmanagementServerListInput interface {
	pulumi.Input

	ToGetCentralmanagementServerListOutput() GetCentralmanagementServerListOutput
	ToGetCentralmanagementServerListOutputWithContext(context.Context) GetCentralmanagementServerListOutput
}

type GetCentralmanagementServerListArgs struct {
	// Indicate whether the FortiGate communicates with the override server using an IPv4 address, an IPv6 address or a FQDN.
	AddrType pulumi.StringInput `pulumi:"addrType"`
	// FQDN address of override server.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv4 address of override server.
	ServerAddress pulumi.StringInput `pulumi:"serverAddress"`
	// IPv6 address of override server.
	ServerAddress6 pulumi.StringInput `pulumi:"serverAddress6"`
	// FortiGuard service type.
	ServerType pulumi.StringInput `pulumi:"serverType"`
}

func (GetCentralmanagementServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralmanagementServerList)(nil)).Elem()
}

func (i GetCentralmanagementServerListArgs) ToGetCentralmanagementServerListOutput() GetCentralmanagementServerListOutput {
	return i.ToGetCentralmanagementServerListOutputWithContext(context.Background())
}

func (i GetCentralmanagementServerListArgs) ToGetCentralmanagementServerListOutputWithContext(ctx context.Context) GetCentralmanagementServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralmanagementServerListOutput)
}

// GetCentralmanagementServerListArrayInput is an input type that accepts GetCentralmanagementServerListArray and GetCentralmanagementServerListArrayOutput values.
// You can construct a concrete instance of `GetCentralmanagementServerListArrayInput` via:
//
//	GetCentralmanagementServerListArray{ GetCentralmanagementServerListArgs{...} }
type GetCentralmanagementServerListArrayInput interface {
	pulumi.Input

	ToGetCentralmanagementServerListArrayOutput() GetCentralmanagementServerListArrayOutput
	ToGetCentralmanagementServerListArrayOutputWithContext(context.Context) GetCentralmanagementServerListArrayOutput
}

type GetCentralmanagementServerListArray []GetCentralmanagementServerListInput

func (GetCentralmanagementServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralmanagementServerList)(nil)).Elem()
}

func (i GetCentralmanagementServerListArray) ToGetCentralmanagementServerListArrayOutput() GetCentralmanagementServerListArrayOutput {
	return i.ToGetCentralmanagementServerListArrayOutputWithContext(context.Background())
}

func (i GetCentralmanagementServerListArray) ToGetCentralmanagementServerListArrayOutputWithContext(ctx context.Context) GetCentralmanagementServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralmanagementServerListArrayOutput)
}

type GetCentralmanagementServerListOutput struct{ *pulumi.OutputState }

func (GetCentralmanagementServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralmanagementServerList)(nil)).Elem()
}

func (o GetCentralmanagementServerListOutput) ToGetCentralmanagementServerListOutput() GetCentralmanagementServerListOutput {
	return o
}

func (o GetCentralmanagementServerListOutput) ToGetCentralmanagementServerListOutputWithContext(ctx context.Context) GetCentralmanagementServerListOutput {
	return o
}

// Indicate whether the FortiGate communicates with the override server using an IPv4 address, an IPv6 address or a FQDN.
func (o GetCentralmanagementServerListOutput) AddrType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralmanagementServerList) string { return v.AddrType }).(pulumi.StringOutput)
}

// FQDN address of override server.
func (o GetCentralmanagementServerListOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralmanagementServerList) string { return v.Fqdn }).(pulumi.StringOutput)
}

// ID.
func (o GetCentralmanagementServerListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetCentralmanagementServerList) int { return v.Id }).(pulumi.IntOutput)
}

// IPv4 address of override server.
func (o GetCentralmanagementServerListOutput) ServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralmanagementServerList) string { return v.ServerAddress }).(pulumi.StringOutput)
}

// IPv6 address of override server.
func (o GetCentralmanagementServerListOutput) ServerAddress6() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralmanagementServerList) string { return v.ServerAddress6 }).(pulumi.StringOutput)
}

// FortiGuard service type.
func (o GetCentralmanagementServerListOutput) ServerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralmanagementServerList) string { return v.ServerType }).(pulumi.StringOutput)
}

type GetCentralmanagementServerListArrayOutput struct{ *pulumi.OutputState }

func (GetCentralmanagementServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralmanagementServerList)(nil)).Elem()
}

func (o GetCentralmanagementServerListArrayOutput) ToGetCentralmanagementServerListArrayOutput() GetCentralmanagementServerListArrayOutput {
	return o
}

func (o GetCentralmanagementServerListArrayOutput) ToGetCentralmanagementServerListArrayOutputWithContext(ctx context.Context) GetCentralmanagementServerListArrayOutput {
	return o
}

func (o GetCentralmanagementServerListArrayOutput) Index(i pulumi.IntInput) GetCentralmanagementServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralmanagementServerList {
		return vs[0].([]GetCentralmanagementServerList)[vs[1].(int)]
	}).(GetCentralmanagementServerListOutput)
}

type GetClustersyncDownIntfsBeforeSessSync struct {
	// Interface name.
	Name string `pulumi:"name"`
}

// GetClustersyncDownIntfsBeforeSessSyncInput is an input type that accepts GetClustersyncDownIntfsBeforeSessSyncArgs and GetClustersyncDownIntfsBeforeSessSyncOutput values.
// You can construct a concrete instance of `GetClustersyncDownIntfsBeforeSessSyncInput` via:
//
//	GetClustersyncDownIntfsBeforeSessSyncArgs{...}
type GetClustersyncDownIntfsBeforeSessSyncInput interface {
	pulumi.Input

	ToGetClustersyncDownIntfsBeforeSessSyncOutput() GetClustersyncDownIntfsBeforeSessSyncOutput
	ToGetClustersyncDownIntfsBeforeSessSyncOutputWithContext(context.Context) GetClustersyncDownIntfsBeforeSessSyncOutput
}

type GetClustersyncDownIntfsBeforeSessSyncArgs struct {
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetClustersyncDownIntfsBeforeSessSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i GetClustersyncDownIntfsBeforeSessSyncArgs) ToGetClustersyncDownIntfsBeforeSessSyncOutput() GetClustersyncDownIntfsBeforeSessSyncOutput {
	return i.ToGetClustersyncDownIntfsBeforeSessSyncOutputWithContext(context.Background())
}

func (i GetClustersyncDownIntfsBeforeSessSyncArgs) ToGetClustersyncDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) GetClustersyncDownIntfsBeforeSessSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersyncDownIntfsBeforeSessSyncOutput)
}

// GetClustersyncDownIntfsBeforeSessSyncArrayInput is an input type that accepts GetClustersyncDownIntfsBeforeSessSyncArray and GetClustersyncDownIntfsBeforeSessSyncArrayOutput values.
// You can construct a concrete instance of `GetClustersyncDownIntfsBeforeSessSyncArrayInput` via:
//
//	GetClustersyncDownIntfsBeforeSessSyncArray{ GetClustersyncDownIntfsBeforeSessSyncArgs{...} }
type GetClustersyncDownIntfsBeforeSessSyncArrayInput interface {
	pulumi.Input

	ToGetClustersyncDownIntfsBeforeSessSyncArrayOutput() GetClustersyncDownIntfsBeforeSessSyncArrayOutput
	ToGetClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(context.Context) GetClustersyncDownIntfsBeforeSessSyncArrayOutput
}

type GetClustersyncDownIntfsBeforeSessSyncArray []GetClustersyncDownIntfsBeforeSessSyncInput

func (GetClustersyncDownIntfsBeforeSessSyncArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i GetClustersyncDownIntfsBeforeSessSyncArray) ToGetClustersyncDownIntfsBeforeSessSyncArrayOutput() GetClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return i.ToGetClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(context.Background())
}

func (i GetClustersyncDownIntfsBeforeSessSyncArray) ToGetClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) GetClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersyncDownIntfsBeforeSessSyncArrayOutput)
}

type GetClustersyncDownIntfsBeforeSessSyncOutput struct{ *pulumi.OutputState }

func (GetClustersyncDownIntfsBeforeSessSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o GetClustersyncDownIntfsBeforeSessSyncOutput) ToGetClustersyncDownIntfsBeforeSessSyncOutput() GetClustersyncDownIntfsBeforeSessSyncOutput {
	return o
}

func (o GetClustersyncDownIntfsBeforeSessSyncOutput) ToGetClustersyncDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) GetClustersyncDownIntfsBeforeSessSyncOutput {
	return o
}

// Interface name.
func (o GetClustersyncDownIntfsBeforeSessSyncOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersyncDownIntfsBeforeSessSync) string { return v.Name }).(pulumi.StringOutput)
}

type GetClustersyncDownIntfsBeforeSessSyncArrayOutput struct{ *pulumi.OutputState }

func (GetClustersyncDownIntfsBeforeSessSyncArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o GetClustersyncDownIntfsBeforeSessSyncArrayOutput) ToGetClustersyncDownIntfsBeforeSessSyncArrayOutput() GetClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o GetClustersyncDownIntfsBeforeSessSyncArrayOutput) ToGetClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) GetClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o GetClustersyncDownIntfsBeforeSessSyncArrayOutput) Index(i pulumi.IntInput) GetClustersyncDownIntfsBeforeSessSyncOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersyncDownIntfsBeforeSessSync {
		return vs[0].([]GetClustersyncDownIntfsBeforeSessSync)[vs[1].(int)]
	}).(GetClustersyncDownIntfsBeforeSessSyncOutput)
}

type GetClustersyncSessionSyncFilter struct {
	// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custome services. The structure of `customService` block is documented below.
	CustomServices []GetClustersyncSessionSyncFilterCustomService `pulumi:"customServices"`
	// Only sessions to this IPv4 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr string `pulumi:"dstaddr"`
	// Only sessions to this IPv6 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr6 string `pulumi:"dstaddr6"`
	// Only sessions to this interface are synchronized. You can only enter one interface name. To synchronize sessions to multiple destination interfaces, add multiple filters.
	Dstintf string `pulumi:"dstintf"`
	// Only sessions from this IPv4 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr string `pulumi:"srcaddr"`
	// Only sessions from this IPv6 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr6 string `pulumi:"srcaddr6"`
	// Only sessions from this interface are synchronized. You can only enter one interface name. To synchronize sessions for multiple source interfaces, add multiple filters.
	Srcintf string `pulumi:"srcintf"`
}

// GetClustersyncSessionSyncFilterInput is an input type that accepts GetClustersyncSessionSyncFilterArgs and GetClustersyncSessionSyncFilterOutput values.
// You can construct a concrete instance of `GetClustersyncSessionSyncFilterInput` via:
//
//	GetClustersyncSessionSyncFilterArgs{...}
type GetClustersyncSessionSyncFilterInput interface {
	pulumi.Input

	ToGetClustersyncSessionSyncFilterOutput() GetClustersyncSessionSyncFilterOutput
	ToGetClustersyncSessionSyncFilterOutputWithContext(context.Context) GetClustersyncSessionSyncFilterOutput
}

type GetClustersyncSessionSyncFilterArgs struct {
	// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custome services. The structure of `customService` block is documented below.
	CustomServices GetClustersyncSessionSyncFilterCustomServiceArrayInput `pulumi:"customServices"`
	// Only sessions to this IPv4 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr pulumi.StringInput `pulumi:"dstaddr"`
	// Only sessions to this IPv6 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr6 pulumi.StringInput `pulumi:"dstaddr6"`
	// Only sessions to this interface are synchronized. You can only enter one interface name. To synchronize sessions to multiple destination interfaces, add multiple filters.
	Dstintf pulumi.StringInput `pulumi:"dstintf"`
	// Only sessions from this IPv4 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr pulumi.StringInput `pulumi:"srcaddr"`
	// Only sessions from this IPv6 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr6 pulumi.StringInput `pulumi:"srcaddr6"`
	// Only sessions from this interface are synchronized. You can only enter one interface name. To synchronize sessions for multiple source interfaces, add multiple filters.
	Srcintf pulumi.StringInput `pulumi:"srcintf"`
}

func (GetClustersyncSessionSyncFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersyncSessionSyncFilter)(nil)).Elem()
}

func (i GetClustersyncSessionSyncFilterArgs) ToGetClustersyncSessionSyncFilterOutput() GetClustersyncSessionSyncFilterOutput {
	return i.ToGetClustersyncSessionSyncFilterOutputWithContext(context.Background())
}

func (i GetClustersyncSessionSyncFilterArgs) ToGetClustersyncSessionSyncFilterOutputWithContext(ctx context.Context) GetClustersyncSessionSyncFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersyncSessionSyncFilterOutput)
}

// GetClustersyncSessionSyncFilterArrayInput is an input type that accepts GetClustersyncSessionSyncFilterArray and GetClustersyncSessionSyncFilterArrayOutput values.
// You can construct a concrete instance of `GetClustersyncSessionSyncFilterArrayInput` via:
//
//	GetClustersyncSessionSyncFilterArray{ GetClustersyncSessionSyncFilterArgs{...} }
type GetClustersyncSessionSyncFilterArrayInput interface {
	pulumi.Input

	ToGetClustersyncSessionSyncFilterArrayOutput() GetClustersyncSessionSyncFilterArrayOutput
	ToGetClustersyncSessionSyncFilterArrayOutputWithContext(context.Context) GetClustersyncSessionSyncFilterArrayOutput
}

type GetClustersyncSessionSyncFilterArray []GetClustersyncSessionSyncFilterInput

func (GetClustersyncSessionSyncFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersyncSessionSyncFilter)(nil)).Elem()
}

func (i GetClustersyncSessionSyncFilterArray) ToGetClustersyncSessionSyncFilterArrayOutput() GetClustersyncSessionSyncFilterArrayOutput {
	return i.ToGetClustersyncSessionSyncFilterArrayOutputWithContext(context.Background())
}

func (i GetClustersyncSessionSyncFilterArray) ToGetClustersyncSessionSyncFilterArrayOutputWithContext(ctx context.Context) GetClustersyncSessionSyncFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersyncSessionSyncFilterArrayOutput)
}

type GetClustersyncSessionSyncFilterOutput struct{ *pulumi.OutputState }

func (GetClustersyncSessionSyncFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersyncSessionSyncFilter)(nil)).Elem()
}

func (o GetClustersyncSessionSyncFilterOutput) ToGetClustersyncSessionSyncFilterOutput() GetClustersyncSessionSyncFilterOutput {
	return o
}

func (o GetClustersyncSessionSyncFilterOutput) ToGetClustersyncSessionSyncFilterOutputWithContext(ctx context.Context) GetClustersyncSessionSyncFilterOutput {
	return o
}

// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custome services. The structure of `customService` block is documented below.
func (o GetClustersyncSessionSyncFilterOutput) CustomServices() GetClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v GetClustersyncSessionSyncFilter) []GetClustersyncSessionSyncFilterCustomService {
		return v.CustomServices
	}).(GetClustersyncSessionSyncFilterCustomServiceArrayOutput)
}

// Only sessions to this IPv4 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
func (o GetClustersyncSessionSyncFilterOutput) Dstaddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersyncSessionSyncFilter) string { return v.Dstaddr }).(pulumi.StringOutput)
}

// Only sessions to this IPv6 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
func (o GetClustersyncSessionSyncFilterOutput) Dstaddr6() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersyncSessionSyncFilter) string { return v.Dstaddr6 }).(pulumi.StringOutput)
}

// Only sessions to this interface are synchronized. You can only enter one interface name. To synchronize sessions to multiple destination interfaces, add multiple filters.
func (o GetClustersyncSessionSyncFilterOutput) Dstintf() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersyncSessionSyncFilter) string { return v.Dstintf }).(pulumi.StringOutput)
}

// Only sessions from this IPv4 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
func (o GetClustersyncSessionSyncFilterOutput) Srcaddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersyncSessionSyncFilter) string { return v.Srcaddr }).(pulumi.StringOutput)
}

// Only sessions from this IPv6 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
func (o GetClustersyncSessionSyncFilterOutput) Srcaddr6() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersyncSessionSyncFilter) string { return v.Srcaddr6 }).(pulumi.StringOutput)
}

// Only sessions from this interface are synchronized. You can only enter one interface name. To synchronize sessions for multiple source interfaces, add multiple filters.
func (o GetClustersyncSessionSyncFilterOutput) Srcintf() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersyncSessionSyncFilter) string { return v.Srcintf }).(pulumi.StringOutput)
}

type GetClustersyncSessionSyncFilterArrayOutput struct{ *pulumi.OutputState }

func (GetClustersyncSessionSyncFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersyncSessionSyncFilter)(nil)).Elem()
}

func (o GetClustersyncSessionSyncFilterArrayOutput) ToGetClustersyncSessionSyncFilterArrayOutput() GetClustersyncSessionSyncFilterArrayOutput {
	return o
}

func (o GetClustersyncSessionSyncFilterArrayOutput) ToGetClustersyncSessionSyncFilterArrayOutputWithContext(ctx context.Context) GetClustersyncSessionSyncFilterArrayOutput {
	return o
}

func (o GetClustersyncSessionSyncFilterArrayOutput) Index(i pulumi.IntInput) GetClustersyncSessionSyncFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersyncSessionSyncFilter {
		return vs[0].([]GetClustersyncSessionSyncFilter)[vs[1].(int)]
	}).(GetClustersyncSessionSyncFilterOutput)
}

type GetClustersyncSessionSyncFilterCustomService struct {
	// Custom service destination port range.
	DstPortRange string `pulumi:"dstPortRange"`
	// Custom service ID.
	Id int `pulumi:"id"`
	// Custom service source port range.
	SrcPortRange string `pulumi:"srcPortRange"`
}

// GetClustersyncSessionSyncFilterCustomServiceInput is an input type that accepts GetClustersyncSessionSyncFilterCustomServiceArgs and GetClustersyncSessionSyncFilterCustomServiceOutput values.
// You can construct a concrete instance of `GetClustersyncSessionSyncFilterCustomServiceInput` via:
//
//	GetClustersyncSessionSyncFilterCustomServiceArgs{...}
type GetClustersyncSessionSyncFilterCustomServiceInput interface {
	pulumi.Input

	ToGetClustersyncSessionSyncFilterCustomServiceOutput() GetClustersyncSessionSyncFilterCustomServiceOutput
	ToGetClustersyncSessionSyncFilterCustomServiceOutputWithContext(context.Context) GetClustersyncSessionSyncFilterCustomServiceOutput
}

type GetClustersyncSessionSyncFilterCustomServiceArgs struct {
	// Custom service destination port range.
	DstPortRange pulumi.StringInput `pulumi:"dstPortRange"`
	// Custom service ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Custom service source port range.
	SrcPortRange pulumi.StringInput `pulumi:"srcPortRange"`
}

func (GetClustersyncSessionSyncFilterCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (i GetClustersyncSessionSyncFilterCustomServiceArgs) ToGetClustersyncSessionSyncFilterCustomServiceOutput() GetClustersyncSessionSyncFilterCustomServiceOutput {
	return i.ToGetClustersyncSessionSyncFilterCustomServiceOutputWithContext(context.Background())
}

func (i GetClustersyncSessionSyncFilterCustomServiceArgs) ToGetClustersyncSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) GetClustersyncSessionSyncFilterCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersyncSessionSyncFilterCustomServiceOutput)
}

// GetClustersyncSessionSyncFilterCustomServiceArrayInput is an input type that accepts GetClustersyncSessionSyncFilterCustomServiceArray and GetClustersyncSessionSyncFilterCustomServiceArrayOutput values.
// You can construct a concrete instance of `GetClustersyncSessionSyncFilterCustomServiceArrayInput` via:
//
//	GetClustersyncSessionSyncFilterCustomServiceArray{ GetClustersyncSessionSyncFilterCustomServiceArgs{...} }
type GetClustersyncSessionSyncFilterCustomServiceArrayInput interface {
	pulumi.Input

	ToGetClustersyncSessionSyncFilterCustomServiceArrayOutput() GetClustersyncSessionSyncFilterCustomServiceArrayOutput
	ToGetClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(context.Context) GetClustersyncSessionSyncFilterCustomServiceArrayOutput
}

type GetClustersyncSessionSyncFilterCustomServiceArray []GetClustersyncSessionSyncFilterCustomServiceInput

func (GetClustersyncSessionSyncFilterCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (i GetClustersyncSessionSyncFilterCustomServiceArray) ToGetClustersyncSessionSyncFilterCustomServiceArrayOutput() GetClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return i.ToGetClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(context.Background())
}

func (i GetClustersyncSessionSyncFilterCustomServiceArray) ToGetClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) GetClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersyncSessionSyncFilterCustomServiceArrayOutput)
}

type GetClustersyncSessionSyncFilterCustomServiceOutput struct{ *pulumi.OutputState }

func (GetClustersyncSessionSyncFilterCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (o GetClustersyncSessionSyncFilterCustomServiceOutput) ToGetClustersyncSessionSyncFilterCustomServiceOutput() GetClustersyncSessionSyncFilterCustomServiceOutput {
	return o
}

func (o GetClustersyncSessionSyncFilterCustomServiceOutput) ToGetClustersyncSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) GetClustersyncSessionSyncFilterCustomServiceOutput {
	return o
}

// Custom service destination port range.
func (o GetClustersyncSessionSyncFilterCustomServiceOutput) DstPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersyncSessionSyncFilterCustomService) string { return v.DstPortRange }).(pulumi.StringOutput)
}

// Custom service ID.
func (o GetClustersyncSessionSyncFilterCustomServiceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersyncSessionSyncFilterCustomService) int { return v.Id }).(pulumi.IntOutput)
}

// Custom service source port range.
func (o GetClustersyncSessionSyncFilterCustomServiceOutput) SrcPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersyncSessionSyncFilterCustomService) string { return v.SrcPortRange }).(pulumi.StringOutput)
}

type GetClustersyncSessionSyncFilterCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (GetClustersyncSessionSyncFilterCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (o GetClustersyncSessionSyncFilterCustomServiceArrayOutput) ToGetClustersyncSessionSyncFilterCustomServiceArrayOutput() GetClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o GetClustersyncSessionSyncFilterCustomServiceArrayOutput) ToGetClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) GetClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o GetClustersyncSessionSyncFilterCustomServiceArrayOutput) Index(i pulumi.IntInput) GetClustersyncSessionSyncFilterCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersyncSessionSyncFilterCustomService {
		return vs[0].([]GetClustersyncSessionSyncFilterCustomService)[vs[1].(int)]
	}).(GetClustersyncSessionSyncFilterCustomServiceOutput)
}

type GetClustersyncSyncvd struct {
	// Interface name.
	Name string `pulumi:"name"`
}

// GetClustersyncSyncvdInput is an input type that accepts GetClustersyncSyncvdArgs and GetClustersyncSyncvdOutput values.
// You can construct a concrete instance of `GetClustersyncSyncvdInput` via:
//
//	GetClustersyncSyncvdArgs{...}
type GetClustersyncSyncvdInput interface {
	pulumi.Input

	ToGetClustersyncSyncvdOutput() GetClustersyncSyncvdOutput
	ToGetClustersyncSyncvdOutputWithContext(context.Context) GetClustersyncSyncvdOutput
}

type GetClustersyncSyncvdArgs struct {
	// Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetClustersyncSyncvdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersyncSyncvd)(nil)).Elem()
}

func (i GetClustersyncSyncvdArgs) ToGetClustersyncSyncvdOutput() GetClustersyncSyncvdOutput {
	return i.ToGetClustersyncSyncvdOutputWithContext(context.Background())
}

func (i GetClustersyncSyncvdArgs) ToGetClustersyncSyncvdOutputWithContext(ctx context.Context) GetClustersyncSyncvdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersyncSyncvdOutput)
}

// GetClustersyncSyncvdArrayInput is an input type that accepts GetClustersyncSyncvdArray and GetClustersyncSyncvdArrayOutput values.
// You can construct a concrete instance of `GetClustersyncSyncvdArrayInput` via:
//
//	GetClustersyncSyncvdArray{ GetClustersyncSyncvdArgs{...} }
type GetClustersyncSyncvdArrayInput interface {
	pulumi.Input

	ToGetClustersyncSyncvdArrayOutput() GetClustersyncSyncvdArrayOutput
	ToGetClustersyncSyncvdArrayOutputWithContext(context.Context) GetClustersyncSyncvdArrayOutput
}

type GetClustersyncSyncvdArray []GetClustersyncSyncvdInput

func (GetClustersyncSyncvdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersyncSyncvd)(nil)).Elem()
}

func (i GetClustersyncSyncvdArray) ToGetClustersyncSyncvdArrayOutput() GetClustersyncSyncvdArrayOutput {
	return i.ToGetClustersyncSyncvdArrayOutputWithContext(context.Background())
}

func (i GetClustersyncSyncvdArray) ToGetClustersyncSyncvdArrayOutputWithContext(ctx context.Context) GetClustersyncSyncvdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersyncSyncvdArrayOutput)
}

type GetClustersyncSyncvdOutput struct{ *pulumi.OutputState }

func (GetClustersyncSyncvdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersyncSyncvd)(nil)).Elem()
}

func (o GetClustersyncSyncvdOutput) ToGetClustersyncSyncvdOutput() GetClustersyncSyncvdOutput {
	return o
}

func (o GetClustersyncSyncvdOutput) ToGetClustersyncSyncvdOutputWithContext(ctx context.Context) GetClustersyncSyncvdOutput {
	return o
}

// Interface name.
func (o GetClustersyncSyncvdOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersyncSyncvd) string { return v.Name }).(pulumi.StringOutput)
}

type GetClustersyncSyncvdArrayOutput struct{ *pulumi.OutputState }

func (GetClustersyncSyncvdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersyncSyncvd)(nil)).Elem()
}

func (o GetClustersyncSyncvdArrayOutput) ToGetClustersyncSyncvdArrayOutput() GetClustersyncSyncvdArrayOutput {
	return o
}

func (o GetClustersyncSyncvdArrayOutput) ToGetClustersyncSyncvdArrayOutputWithContext(ctx context.Context) GetClustersyncSyncvdArrayOutput {
	return o
}

func (o GetClustersyncSyncvdArrayOutput) Index(i pulumi.IntInput) GetClustersyncSyncvdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersyncSyncvd {
		return vs[0].([]GetClustersyncSyncvd)[vs[1].(int)]
	}).(GetClustersyncSyncvdOutput)
}

type GetCsfFabricConnector struct {
	// Override access profile.
	Accprofile string `pulumi:"accprofile"`
	// Enable/disable downstream device write access to configuration.
	ConfigurationWriteAccess string `pulumi:"configurationWriteAccess"`
	// Serial.
	Serial string `pulumi:"serial"`
	// Virtual domains that the connector has access to. If none are set, the connector will only have access to the VDOM that it joins the Security Fabric through. The structure of `vdom` block is documented below.
	Vdoms []GetCsfFabricConnectorVdom `pulumi:"vdoms"`
}

// GetCsfFabricConnectorInput is an input type that accepts GetCsfFabricConnectorArgs and GetCsfFabricConnectorOutput values.
// You can construct a concrete instance of `GetCsfFabricConnectorInput` via:
//
//	GetCsfFabricConnectorArgs{...}
type GetCsfFabricConnectorInput interface {
	pulumi.Input

	ToGetCsfFabricConnectorOutput() GetCsfFabricConnectorOutput
	ToGetCsfFabricConnectorOutputWithContext(context.Context) GetCsfFabricConnectorOutput
}

type GetCsfFabricConnectorArgs struct {
	// Override access profile.
	Accprofile pulumi.StringInput `pulumi:"accprofile"`
	// Enable/disable downstream device write access to configuration.
	ConfigurationWriteAccess pulumi.StringInput `pulumi:"configurationWriteAccess"`
	// Serial.
	Serial pulumi.StringInput `pulumi:"serial"`
	// Virtual domains that the connector has access to. If none are set, the connector will only have access to the VDOM that it joins the Security Fabric through. The structure of `vdom` block is documented below.
	Vdoms GetCsfFabricConnectorVdomArrayInput `pulumi:"vdoms"`
}

func (GetCsfFabricConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsfFabricConnector)(nil)).Elem()
}

func (i GetCsfFabricConnectorArgs) ToGetCsfFabricConnectorOutput() GetCsfFabricConnectorOutput {
	return i.ToGetCsfFabricConnectorOutputWithContext(context.Background())
}

func (i GetCsfFabricConnectorArgs) ToGetCsfFabricConnectorOutputWithContext(ctx context.Context) GetCsfFabricConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsfFabricConnectorOutput)
}

// GetCsfFabricConnectorArrayInput is an input type that accepts GetCsfFabricConnectorArray and GetCsfFabricConnectorArrayOutput values.
// You can construct a concrete instance of `GetCsfFabricConnectorArrayInput` via:
//
//	GetCsfFabricConnectorArray{ GetCsfFabricConnectorArgs{...} }
type GetCsfFabricConnectorArrayInput interface {
	pulumi.Input

	ToGetCsfFabricConnectorArrayOutput() GetCsfFabricConnectorArrayOutput
	ToGetCsfFabricConnectorArrayOutputWithContext(context.Context) GetCsfFabricConnectorArrayOutput
}

type GetCsfFabricConnectorArray []GetCsfFabricConnectorInput

func (GetCsfFabricConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsfFabricConnector)(nil)).Elem()
}

func (i GetCsfFabricConnectorArray) ToGetCsfFabricConnectorArrayOutput() GetCsfFabricConnectorArrayOutput {
	return i.ToGetCsfFabricConnectorArrayOutputWithContext(context.Background())
}

func (i GetCsfFabricConnectorArray) ToGetCsfFabricConnectorArrayOutputWithContext(ctx context.Context) GetCsfFabricConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsfFabricConnectorArrayOutput)
}

type GetCsfFabricConnectorOutput struct{ *pulumi.OutputState }

func (GetCsfFabricConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsfFabricConnector)(nil)).Elem()
}

func (o GetCsfFabricConnectorOutput) ToGetCsfFabricConnectorOutput() GetCsfFabricConnectorOutput {
	return o
}

func (o GetCsfFabricConnectorOutput) ToGetCsfFabricConnectorOutputWithContext(ctx context.Context) GetCsfFabricConnectorOutput {
	return o
}

// Override access profile.
func (o GetCsfFabricConnectorOutput) Accprofile() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfFabricConnector) string { return v.Accprofile }).(pulumi.StringOutput)
}

// Enable/disable downstream device write access to configuration.
func (o GetCsfFabricConnectorOutput) ConfigurationWriteAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfFabricConnector) string { return v.ConfigurationWriteAccess }).(pulumi.StringOutput)
}

// Serial.
func (o GetCsfFabricConnectorOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfFabricConnector) string { return v.Serial }).(pulumi.StringOutput)
}

// Virtual domains that the connector has access to. If none are set, the connector will only have access to the VDOM that it joins the Security Fabric through. The structure of `vdom` block is documented below.
func (o GetCsfFabricConnectorOutput) Vdoms() GetCsfFabricConnectorVdomArrayOutput {
	return o.ApplyT(func(v GetCsfFabricConnector) []GetCsfFabricConnectorVdom { return v.Vdoms }).(GetCsfFabricConnectorVdomArrayOutput)
}

type GetCsfFabricConnectorArrayOutput struct{ *pulumi.OutputState }

func (GetCsfFabricConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsfFabricConnector)(nil)).Elem()
}

func (o GetCsfFabricConnectorArrayOutput) ToGetCsfFabricConnectorArrayOutput() GetCsfFabricConnectorArrayOutput {
	return o
}

func (o GetCsfFabricConnectorArrayOutput) ToGetCsfFabricConnectorArrayOutputWithContext(ctx context.Context) GetCsfFabricConnectorArrayOutput {
	return o
}

func (o GetCsfFabricConnectorArrayOutput) Index(i pulumi.IntInput) GetCsfFabricConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCsfFabricConnector {
		return vs[0].([]GetCsfFabricConnector)[vs[1].(int)]
	}).(GetCsfFabricConnectorOutput)
}

type GetCsfFabricConnectorVdom struct {
	// Device name.
	Name string `pulumi:"name"`
}

// GetCsfFabricConnectorVdomInput is an input type that accepts GetCsfFabricConnectorVdomArgs and GetCsfFabricConnectorVdomOutput values.
// You can construct a concrete instance of `GetCsfFabricConnectorVdomInput` via:
//
//	GetCsfFabricConnectorVdomArgs{...}
type GetCsfFabricConnectorVdomInput interface {
	pulumi.Input

	ToGetCsfFabricConnectorVdomOutput() GetCsfFabricConnectorVdomOutput
	ToGetCsfFabricConnectorVdomOutputWithContext(context.Context) GetCsfFabricConnectorVdomOutput
}

type GetCsfFabricConnectorVdomArgs struct {
	// Device name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCsfFabricConnectorVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsfFabricConnectorVdom)(nil)).Elem()
}

func (i GetCsfFabricConnectorVdomArgs) ToGetCsfFabricConnectorVdomOutput() GetCsfFabricConnectorVdomOutput {
	return i.ToGetCsfFabricConnectorVdomOutputWithContext(context.Background())
}

func (i GetCsfFabricConnectorVdomArgs) ToGetCsfFabricConnectorVdomOutputWithContext(ctx context.Context) GetCsfFabricConnectorVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsfFabricConnectorVdomOutput)
}

// GetCsfFabricConnectorVdomArrayInput is an input type that accepts GetCsfFabricConnectorVdomArray and GetCsfFabricConnectorVdomArrayOutput values.
// You can construct a concrete instance of `GetCsfFabricConnectorVdomArrayInput` via:
//
//	GetCsfFabricConnectorVdomArray{ GetCsfFabricConnectorVdomArgs{...} }
type GetCsfFabricConnectorVdomArrayInput interface {
	pulumi.Input

	ToGetCsfFabricConnectorVdomArrayOutput() GetCsfFabricConnectorVdomArrayOutput
	ToGetCsfFabricConnectorVdomArrayOutputWithContext(context.Context) GetCsfFabricConnectorVdomArrayOutput
}

type GetCsfFabricConnectorVdomArray []GetCsfFabricConnectorVdomInput

func (GetCsfFabricConnectorVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsfFabricConnectorVdom)(nil)).Elem()
}

func (i GetCsfFabricConnectorVdomArray) ToGetCsfFabricConnectorVdomArrayOutput() GetCsfFabricConnectorVdomArrayOutput {
	return i.ToGetCsfFabricConnectorVdomArrayOutputWithContext(context.Background())
}

func (i GetCsfFabricConnectorVdomArray) ToGetCsfFabricConnectorVdomArrayOutputWithContext(ctx context.Context) GetCsfFabricConnectorVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsfFabricConnectorVdomArrayOutput)
}

type GetCsfFabricConnectorVdomOutput struct{ *pulumi.OutputState }

func (GetCsfFabricConnectorVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsfFabricConnectorVdom)(nil)).Elem()
}

func (o GetCsfFabricConnectorVdomOutput) ToGetCsfFabricConnectorVdomOutput() GetCsfFabricConnectorVdomOutput {
	return o
}

func (o GetCsfFabricConnectorVdomOutput) ToGetCsfFabricConnectorVdomOutputWithContext(ctx context.Context) GetCsfFabricConnectorVdomOutput {
	return o
}

// Device name.
func (o GetCsfFabricConnectorVdomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfFabricConnectorVdom) string { return v.Name }).(pulumi.StringOutput)
}

type GetCsfFabricConnectorVdomArrayOutput struct{ *pulumi.OutputState }

func (GetCsfFabricConnectorVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsfFabricConnectorVdom)(nil)).Elem()
}

func (o GetCsfFabricConnectorVdomArrayOutput) ToGetCsfFabricConnectorVdomArrayOutput() GetCsfFabricConnectorVdomArrayOutput {
	return o
}

func (o GetCsfFabricConnectorVdomArrayOutput) ToGetCsfFabricConnectorVdomArrayOutputWithContext(ctx context.Context) GetCsfFabricConnectorVdomArrayOutput {
	return o
}

func (o GetCsfFabricConnectorVdomArrayOutput) Index(i pulumi.IntInput) GetCsfFabricConnectorVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCsfFabricConnectorVdom {
		return vs[0].([]GetCsfFabricConnectorVdom)[vs[1].(int)]
	}).(GetCsfFabricConnectorVdomOutput)
}

type GetCsfFabricDevice struct {
	// Device access token.
	AccessToken string `pulumi:"accessToken"`
	// Device IP.
	DeviceIp string `pulumi:"deviceIp"`
	// Device type.
	DeviceType string `pulumi:"deviceType"`
	// HTTPS port for fabric device.
	HttpsPort int `pulumi:"httpsPort"`
	// Device login name.
	Login string `pulumi:"login"`
	// Device name.
	Name string `pulumi:"name"`
	// Device login password.
	Password string `pulumi:"password"`
}

// GetCsfFabricDeviceInput is an input type that accepts GetCsfFabricDeviceArgs and GetCsfFabricDeviceOutput values.
// You can construct a concrete instance of `GetCsfFabricDeviceInput` via:
//
//	GetCsfFabricDeviceArgs{...}
type GetCsfFabricDeviceInput interface {
	pulumi.Input

	ToGetCsfFabricDeviceOutput() GetCsfFabricDeviceOutput
	ToGetCsfFabricDeviceOutputWithContext(context.Context) GetCsfFabricDeviceOutput
}

type GetCsfFabricDeviceArgs struct {
	// Device access token.
	AccessToken pulumi.StringInput `pulumi:"accessToken"`
	// Device IP.
	DeviceIp pulumi.StringInput `pulumi:"deviceIp"`
	// Device type.
	DeviceType pulumi.StringInput `pulumi:"deviceType"`
	// HTTPS port for fabric device.
	HttpsPort pulumi.IntInput `pulumi:"httpsPort"`
	// Device login name.
	Login pulumi.StringInput `pulumi:"login"`
	// Device name.
	Name pulumi.StringInput `pulumi:"name"`
	// Device login password.
	Password pulumi.StringInput `pulumi:"password"`
}

func (GetCsfFabricDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsfFabricDevice)(nil)).Elem()
}

func (i GetCsfFabricDeviceArgs) ToGetCsfFabricDeviceOutput() GetCsfFabricDeviceOutput {
	return i.ToGetCsfFabricDeviceOutputWithContext(context.Background())
}

func (i GetCsfFabricDeviceArgs) ToGetCsfFabricDeviceOutputWithContext(ctx context.Context) GetCsfFabricDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsfFabricDeviceOutput)
}

// GetCsfFabricDeviceArrayInput is an input type that accepts GetCsfFabricDeviceArray and GetCsfFabricDeviceArrayOutput values.
// You can construct a concrete instance of `GetCsfFabricDeviceArrayInput` via:
//
//	GetCsfFabricDeviceArray{ GetCsfFabricDeviceArgs{...} }
type GetCsfFabricDeviceArrayInput interface {
	pulumi.Input

	ToGetCsfFabricDeviceArrayOutput() GetCsfFabricDeviceArrayOutput
	ToGetCsfFabricDeviceArrayOutputWithContext(context.Context) GetCsfFabricDeviceArrayOutput
}

type GetCsfFabricDeviceArray []GetCsfFabricDeviceInput

func (GetCsfFabricDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsfFabricDevice)(nil)).Elem()
}

func (i GetCsfFabricDeviceArray) ToGetCsfFabricDeviceArrayOutput() GetCsfFabricDeviceArrayOutput {
	return i.ToGetCsfFabricDeviceArrayOutputWithContext(context.Background())
}

func (i GetCsfFabricDeviceArray) ToGetCsfFabricDeviceArrayOutputWithContext(ctx context.Context) GetCsfFabricDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsfFabricDeviceArrayOutput)
}

type GetCsfFabricDeviceOutput struct{ *pulumi.OutputState }

func (GetCsfFabricDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsfFabricDevice)(nil)).Elem()
}

func (o GetCsfFabricDeviceOutput) ToGetCsfFabricDeviceOutput() GetCsfFabricDeviceOutput {
	return o
}

func (o GetCsfFabricDeviceOutput) ToGetCsfFabricDeviceOutputWithContext(ctx context.Context) GetCsfFabricDeviceOutput {
	return o
}

// Device access token.
func (o GetCsfFabricDeviceOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfFabricDevice) string { return v.AccessToken }).(pulumi.StringOutput)
}

// Device IP.
func (o GetCsfFabricDeviceOutput) DeviceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfFabricDevice) string { return v.DeviceIp }).(pulumi.StringOutput)
}

// Device type.
func (o GetCsfFabricDeviceOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfFabricDevice) string { return v.DeviceType }).(pulumi.StringOutput)
}

// HTTPS port for fabric device.
func (o GetCsfFabricDeviceOutput) HttpsPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetCsfFabricDevice) int { return v.HttpsPort }).(pulumi.IntOutput)
}

// Device login name.
func (o GetCsfFabricDeviceOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfFabricDevice) string { return v.Login }).(pulumi.StringOutput)
}

// Device name.
func (o GetCsfFabricDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfFabricDevice) string { return v.Name }).(pulumi.StringOutput)
}

// Device login password.
func (o GetCsfFabricDeviceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfFabricDevice) string { return v.Password }).(pulumi.StringOutput)
}

type GetCsfFabricDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetCsfFabricDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsfFabricDevice)(nil)).Elem()
}

func (o GetCsfFabricDeviceArrayOutput) ToGetCsfFabricDeviceArrayOutput() GetCsfFabricDeviceArrayOutput {
	return o
}

func (o GetCsfFabricDeviceArrayOutput) ToGetCsfFabricDeviceArrayOutputWithContext(ctx context.Context) GetCsfFabricDeviceArrayOutput {
	return o
}

func (o GetCsfFabricDeviceArrayOutput) Index(i pulumi.IntInput) GetCsfFabricDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCsfFabricDevice {
		return vs[0].([]GetCsfFabricDevice)[vs[1].(int)]
	}).(GetCsfFabricDeviceOutput)
}

type GetCsfTrustedList struct {
	// Security fabric authorization action.
	Action string `pulumi:"action"`
	// Authorization type.
	AuthorizationType string `pulumi:"authorizationType"`
	// Certificate.
	Certificate string `pulumi:"certificate"`
	// Trust authorizations by this node's administrator.
	DownstreamAuthorization string `pulumi:"downstreamAuthorization"`
	// HA members.
	HaMembers string `pulumi:"haMembers"`
	// Index of the downstream in tree.
	Index int `pulumi:"index"`
	// Device name.
	Name string `pulumi:"name"`
	// Serial.
	Serial string `pulumi:"serial"`
}

// GetCsfTrustedListInput is an input type that accepts GetCsfTrustedListArgs and GetCsfTrustedListOutput values.
// You can construct a concrete instance of `GetCsfTrustedListInput` via:
//
//	GetCsfTrustedListArgs{...}
type GetCsfTrustedListInput interface {
	pulumi.Input

	ToGetCsfTrustedListOutput() GetCsfTrustedListOutput
	ToGetCsfTrustedListOutputWithContext(context.Context) GetCsfTrustedListOutput
}

type GetCsfTrustedListArgs struct {
	// Security fabric authorization action.
	Action pulumi.StringInput `pulumi:"action"`
	// Authorization type.
	AuthorizationType pulumi.StringInput `pulumi:"authorizationType"`
	// Certificate.
	Certificate pulumi.StringInput `pulumi:"certificate"`
	// Trust authorizations by this node's administrator.
	DownstreamAuthorization pulumi.StringInput `pulumi:"downstreamAuthorization"`
	// HA members.
	HaMembers pulumi.StringInput `pulumi:"haMembers"`
	// Index of the downstream in tree.
	Index pulumi.IntInput `pulumi:"index"`
	// Device name.
	Name pulumi.StringInput `pulumi:"name"`
	// Serial.
	Serial pulumi.StringInput `pulumi:"serial"`
}

func (GetCsfTrustedListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsfTrustedList)(nil)).Elem()
}

func (i GetCsfTrustedListArgs) ToGetCsfTrustedListOutput() GetCsfTrustedListOutput {
	return i.ToGetCsfTrustedListOutputWithContext(context.Background())
}

func (i GetCsfTrustedListArgs) ToGetCsfTrustedListOutputWithContext(ctx context.Context) GetCsfTrustedListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsfTrustedListOutput)
}

// GetCsfTrustedListArrayInput is an input type that accepts GetCsfTrustedListArray and GetCsfTrustedListArrayOutput values.
// You can construct a concrete instance of `GetCsfTrustedListArrayInput` via:
//
//	GetCsfTrustedListArray{ GetCsfTrustedListArgs{...} }
type GetCsfTrustedListArrayInput interface {
	pulumi.Input

	ToGetCsfTrustedListArrayOutput() GetCsfTrustedListArrayOutput
	ToGetCsfTrustedListArrayOutputWithContext(context.Context) GetCsfTrustedListArrayOutput
}

type GetCsfTrustedListArray []GetCsfTrustedListInput

func (GetCsfTrustedListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsfTrustedList)(nil)).Elem()
}

func (i GetCsfTrustedListArray) ToGetCsfTrustedListArrayOutput() GetCsfTrustedListArrayOutput {
	return i.ToGetCsfTrustedListArrayOutputWithContext(context.Background())
}

func (i GetCsfTrustedListArray) ToGetCsfTrustedListArrayOutputWithContext(ctx context.Context) GetCsfTrustedListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsfTrustedListArrayOutput)
}

type GetCsfTrustedListOutput struct{ *pulumi.OutputState }

func (GetCsfTrustedListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsfTrustedList)(nil)).Elem()
}

func (o GetCsfTrustedListOutput) ToGetCsfTrustedListOutput() GetCsfTrustedListOutput {
	return o
}

func (o GetCsfTrustedListOutput) ToGetCsfTrustedListOutputWithContext(ctx context.Context) GetCsfTrustedListOutput {
	return o
}

// Security fabric authorization action.
func (o GetCsfTrustedListOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfTrustedList) string { return v.Action }).(pulumi.StringOutput)
}

// Authorization type.
func (o GetCsfTrustedListOutput) AuthorizationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfTrustedList) string { return v.AuthorizationType }).(pulumi.StringOutput)
}

// Certificate.
func (o GetCsfTrustedListOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfTrustedList) string { return v.Certificate }).(pulumi.StringOutput)
}

// Trust authorizations by this node's administrator.
func (o GetCsfTrustedListOutput) DownstreamAuthorization() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfTrustedList) string { return v.DownstreamAuthorization }).(pulumi.StringOutput)
}

// HA members.
func (o GetCsfTrustedListOutput) HaMembers() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfTrustedList) string { return v.HaMembers }).(pulumi.StringOutput)
}

// Index of the downstream in tree.
func (o GetCsfTrustedListOutput) Index() pulumi.IntOutput {
	return o.ApplyT(func(v GetCsfTrustedList) int { return v.Index }).(pulumi.IntOutput)
}

// Device name.
func (o GetCsfTrustedListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfTrustedList) string { return v.Name }).(pulumi.StringOutput)
}

// Serial.
func (o GetCsfTrustedListOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsfTrustedList) string { return v.Serial }).(pulumi.StringOutput)
}

type GetCsfTrustedListArrayOutput struct{ *pulumi.OutputState }

func (GetCsfTrustedListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsfTrustedList)(nil)).Elem()
}

func (o GetCsfTrustedListArrayOutput) ToGetCsfTrustedListArrayOutput() GetCsfTrustedListArrayOutput {
	return o
}

func (o GetCsfTrustedListArrayOutput) ToGetCsfTrustedListArrayOutputWithContext(ctx context.Context) GetCsfTrustedListArrayOutput {
	return o
}

func (o GetCsfTrustedListArrayOutput) Index(i pulumi.IntInput) GetCsfTrustedListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCsfTrustedList {
		return vs[0].([]GetCsfTrustedList)[vs[1].(int)]
	}).(GetCsfTrustedListOutput)
}

type GetDdnsDdnsServerAddr struct {
	// IP address or FQDN of the server.
	Addr string `pulumi:"addr"`
}

// GetDdnsDdnsServerAddrInput is an input type that accepts GetDdnsDdnsServerAddrArgs and GetDdnsDdnsServerAddrOutput values.
// You can construct a concrete instance of `GetDdnsDdnsServerAddrInput` via:
//
//	GetDdnsDdnsServerAddrArgs{...}
type GetDdnsDdnsServerAddrInput interface {
	pulumi.Input

	ToGetDdnsDdnsServerAddrOutput() GetDdnsDdnsServerAddrOutput
	ToGetDdnsDdnsServerAddrOutputWithContext(context.Context) GetDdnsDdnsServerAddrOutput
}

type GetDdnsDdnsServerAddrArgs struct {
	// IP address or FQDN of the server.
	Addr pulumi.StringInput `pulumi:"addr"`
}

func (GetDdnsDdnsServerAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdnsDdnsServerAddr)(nil)).Elem()
}

func (i GetDdnsDdnsServerAddrArgs) ToGetDdnsDdnsServerAddrOutput() GetDdnsDdnsServerAddrOutput {
	return i.ToGetDdnsDdnsServerAddrOutputWithContext(context.Background())
}

func (i GetDdnsDdnsServerAddrArgs) ToGetDdnsDdnsServerAddrOutputWithContext(ctx context.Context) GetDdnsDdnsServerAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdnsDdnsServerAddrOutput)
}

// GetDdnsDdnsServerAddrArrayInput is an input type that accepts GetDdnsDdnsServerAddrArray and GetDdnsDdnsServerAddrArrayOutput values.
// You can construct a concrete instance of `GetDdnsDdnsServerAddrArrayInput` via:
//
//	GetDdnsDdnsServerAddrArray{ GetDdnsDdnsServerAddrArgs{...} }
type GetDdnsDdnsServerAddrArrayInput interface {
	pulumi.Input

	ToGetDdnsDdnsServerAddrArrayOutput() GetDdnsDdnsServerAddrArrayOutput
	ToGetDdnsDdnsServerAddrArrayOutputWithContext(context.Context) GetDdnsDdnsServerAddrArrayOutput
}

type GetDdnsDdnsServerAddrArray []GetDdnsDdnsServerAddrInput

func (GetDdnsDdnsServerAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdnsDdnsServerAddr)(nil)).Elem()
}

func (i GetDdnsDdnsServerAddrArray) ToGetDdnsDdnsServerAddrArrayOutput() GetDdnsDdnsServerAddrArrayOutput {
	return i.ToGetDdnsDdnsServerAddrArrayOutputWithContext(context.Background())
}

func (i GetDdnsDdnsServerAddrArray) ToGetDdnsDdnsServerAddrArrayOutputWithContext(ctx context.Context) GetDdnsDdnsServerAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdnsDdnsServerAddrArrayOutput)
}

type GetDdnsDdnsServerAddrOutput struct{ *pulumi.OutputState }

func (GetDdnsDdnsServerAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdnsDdnsServerAddr)(nil)).Elem()
}

func (o GetDdnsDdnsServerAddrOutput) ToGetDdnsDdnsServerAddrOutput() GetDdnsDdnsServerAddrOutput {
	return o
}

func (o GetDdnsDdnsServerAddrOutput) ToGetDdnsDdnsServerAddrOutputWithContext(ctx context.Context) GetDdnsDdnsServerAddrOutput {
	return o
}

// IP address or FQDN of the server.
func (o GetDdnsDdnsServerAddrOutput) Addr() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdnsDdnsServerAddr) string { return v.Addr }).(pulumi.StringOutput)
}

type GetDdnsDdnsServerAddrArrayOutput struct{ *pulumi.OutputState }

func (GetDdnsDdnsServerAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdnsDdnsServerAddr)(nil)).Elem()
}

func (o GetDdnsDdnsServerAddrArrayOutput) ToGetDdnsDdnsServerAddrArrayOutput() GetDdnsDdnsServerAddrArrayOutput {
	return o
}

func (o GetDdnsDdnsServerAddrArrayOutput) ToGetDdnsDdnsServerAddrArrayOutputWithContext(ctx context.Context) GetDdnsDdnsServerAddrArrayOutput {
	return o
}

func (o GetDdnsDdnsServerAddrArrayOutput) Index(i pulumi.IntInput) GetDdnsDdnsServerAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDdnsDdnsServerAddr {
		return vs[0].([]GetDdnsDdnsServerAddr)[vs[1].(int)]
	}).(GetDdnsDdnsServerAddrOutput)
}

type GetDdnsMonitorInterface struct {
	// Interface name.
	InterfaceName string `pulumi:"interfaceName"`
}

// GetDdnsMonitorInterfaceInput is an input type that accepts GetDdnsMonitorInterfaceArgs and GetDdnsMonitorInterfaceOutput values.
// You can construct a concrete instance of `GetDdnsMonitorInterfaceInput` via:
//
//	GetDdnsMonitorInterfaceArgs{...}
type GetDdnsMonitorInterfaceInput interface {
	pulumi.Input

	ToGetDdnsMonitorInterfaceOutput() GetDdnsMonitorInterfaceOutput
	ToGetDdnsMonitorInterfaceOutputWithContext(context.Context) GetDdnsMonitorInterfaceOutput
}

type GetDdnsMonitorInterfaceArgs struct {
	// Interface name.
	InterfaceName pulumi.StringInput `pulumi:"interfaceName"`
}

func (GetDdnsMonitorInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdnsMonitorInterface)(nil)).Elem()
}

func (i GetDdnsMonitorInterfaceArgs) ToGetDdnsMonitorInterfaceOutput() GetDdnsMonitorInterfaceOutput {
	return i.ToGetDdnsMonitorInterfaceOutputWithContext(context.Background())
}

func (i GetDdnsMonitorInterfaceArgs) ToGetDdnsMonitorInterfaceOutputWithContext(ctx context.Context) GetDdnsMonitorInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdnsMonitorInterfaceOutput)
}

// GetDdnsMonitorInterfaceArrayInput is an input type that accepts GetDdnsMonitorInterfaceArray and GetDdnsMonitorInterfaceArrayOutput values.
// You can construct a concrete instance of `GetDdnsMonitorInterfaceArrayInput` via:
//
//	GetDdnsMonitorInterfaceArray{ GetDdnsMonitorInterfaceArgs{...} }
type GetDdnsMonitorInterfaceArrayInput interface {
	pulumi.Input

	ToGetDdnsMonitorInterfaceArrayOutput() GetDdnsMonitorInterfaceArrayOutput
	ToGetDdnsMonitorInterfaceArrayOutputWithContext(context.Context) GetDdnsMonitorInterfaceArrayOutput
}

type GetDdnsMonitorInterfaceArray []GetDdnsMonitorInterfaceInput

func (GetDdnsMonitorInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdnsMonitorInterface)(nil)).Elem()
}

func (i GetDdnsMonitorInterfaceArray) ToGetDdnsMonitorInterfaceArrayOutput() GetDdnsMonitorInterfaceArrayOutput {
	return i.ToGetDdnsMonitorInterfaceArrayOutputWithContext(context.Background())
}

func (i GetDdnsMonitorInterfaceArray) ToGetDdnsMonitorInterfaceArrayOutputWithContext(ctx context.Context) GetDdnsMonitorInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdnsMonitorInterfaceArrayOutput)
}

type GetDdnsMonitorInterfaceOutput struct{ *pulumi.OutputState }

func (GetDdnsMonitorInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdnsMonitorInterface)(nil)).Elem()
}

func (o GetDdnsMonitorInterfaceOutput) ToGetDdnsMonitorInterfaceOutput() GetDdnsMonitorInterfaceOutput {
	return o
}

func (o GetDdnsMonitorInterfaceOutput) ToGetDdnsMonitorInterfaceOutputWithContext(ctx context.Context) GetDdnsMonitorInterfaceOutput {
	return o
}

// Interface name.
func (o GetDdnsMonitorInterfaceOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdnsMonitorInterface) string { return v.InterfaceName }).(pulumi.StringOutput)
}

type GetDdnsMonitorInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetDdnsMonitorInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdnsMonitorInterface)(nil)).Elem()
}

func (o GetDdnsMonitorInterfaceArrayOutput) ToGetDdnsMonitorInterfaceArrayOutput() GetDdnsMonitorInterfaceArrayOutput {
	return o
}

func (o GetDdnsMonitorInterfaceArrayOutput) ToGetDdnsMonitorInterfaceArrayOutputWithContext(ctx context.Context) GetDdnsMonitorInterfaceArrayOutput {
	return o
}

func (o GetDdnsMonitorInterfaceArrayOutput) Index(i pulumi.IntInput) GetDdnsMonitorInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDdnsMonitorInterface {
		return vs[0].([]GetDdnsMonitorInterface)[vs[1].(int)]
	}).(GetDdnsMonitorInterfaceOutput)
}

type GetDnsDomain struct {
	// DNS search domain list separated by space (maximum 8 domains)
	Domain string `pulumi:"domain"`
}

// GetDnsDomainInput is an input type that accepts GetDnsDomainArgs and GetDnsDomainOutput values.
// You can construct a concrete instance of `GetDnsDomainInput` via:
//
//	GetDnsDomainArgs{...}
type GetDnsDomainInput interface {
	pulumi.Input

	ToGetDnsDomainOutput() GetDnsDomainOutput
	ToGetDnsDomainOutputWithContext(context.Context) GetDnsDomainOutput
}

type GetDnsDomainArgs struct {
	// DNS search domain list separated by space (maximum 8 domains)
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (GetDnsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsDomain)(nil)).Elem()
}

func (i GetDnsDomainArgs) ToGetDnsDomainOutput() GetDnsDomainOutput {
	return i.ToGetDnsDomainOutputWithContext(context.Background())
}

func (i GetDnsDomainArgs) ToGetDnsDomainOutputWithContext(ctx context.Context) GetDnsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDnsDomainOutput)
}

// GetDnsDomainArrayInput is an input type that accepts GetDnsDomainArray and GetDnsDomainArrayOutput values.
// You can construct a concrete instance of `GetDnsDomainArrayInput` via:
//
//	GetDnsDomainArray{ GetDnsDomainArgs{...} }
type GetDnsDomainArrayInput interface {
	pulumi.Input

	ToGetDnsDomainArrayOutput() GetDnsDomainArrayOutput
	ToGetDnsDomainArrayOutputWithContext(context.Context) GetDnsDomainArrayOutput
}

type GetDnsDomainArray []GetDnsDomainInput

func (GetDnsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDnsDomain)(nil)).Elem()
}

func (i GetDnsDomainArray) ToGetDnsDomainArrayOutput() GetDnsDomainArrayOutput {
	return i.ToGetDnsDomainArrayOutputWithContext(context.Background())
}

func (i GetDnsDomainArray) ToGetDnsDomainArrayOutputWithContext(ctx context.Context) GetDnsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDnsDomainArrayOutput)
}

type GetDnsDomainOutput struct{ *pulumi.OutputState }

func (GetDnsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsDomain)(nil)).Elem()
}

func (o GetDnsDomainOutput) ToGetDnsDomainOutput() GetDnsDomainOutput {
	return o
}

func (o GetDnsDomainOutput) ToGetDnsDomainOutputWithContext(ctx context.Context) GetDnsDomainOutput {
	return o
}

// DNS search domain list separated by space (maximum 8 domains)
func (o GetDnsDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsDomain) string { return v.Domain }).(pulumi.StringOutput)
}

type GetDnsDomainArrayOutput struct{ *pulumi.OutputState }

func (GetDnsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDnsDomain)(nil)).Elem()
}

func (o GetDnsDomainArrayOutput) ToGetDnsDomainArrayOutput() GetDnsDomainArrayOutput {
	return o
}

func (o GetDnsDomainArrayOutput) ToGetDnsDomainArrayOutputWithContext(ctx context.Context) GetDnsDomainArrayOutput {
	return o
}

func (o GetDnsDomainArrayOutput) Index(i pulumi.IntInput) GetDnsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDnsDomain {
		return vs[0].([]GetDnsDomain)[vs[1].(int)]
	}).(GetDnsDomainOutput)
}

type GetDnsServerHostname struct {
	// DNS server host name list separated by space (maximum 4 domains).
	Hostname string `pulumi:"hostname"`
}

// GetDnsServerHostnameInput is an input type that accepts GetDnsServerHostnameArgs and GetDnsServerHostnameOutput values.
// You can construct a concrete instance of `GetDnsServerHostnameInput` via:
//
//	GetDnsServerHostnameArgs{...}
type GetDnsServerHostnameInput interface {
	pulumi.Input

	ToGetDnsServerHostnameOutput() GetDnsServerHostnameOutput
	ToGetDnsServerHostnameOutputWithContext(context.Context) GetDnsServerHostnameOutput
}

type GetDnsServerHostnameArgs struct {
	// DNS server host name list separated by space (maximum 4 domains).
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (GetDnsServerHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsServerHostname)(nil)).Elem()
}

func (i GetDnsServerHostnameArgs) ToGetDnsServerHostnameOutput() GetDnsServerHostnameOutput {
	return i.ToGetDnsServerHostnameOutputWithContext(context.Background())
}

func (i GetDnsServerHostnameArgs) ToGetDnsServerHostnameOutputWithContext(ctx context.Context) GetDnsServerHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDnsServerHostnameOutput)
}

// GetDnsServerHostnameArrayInput is an input type that accepts GetDnsServerHostnameArray and GetDnsServerHostnameArrayOutput values.
// You can construct a concrete instance of `GetDnsServerHostnameArrayInput` via:
//
//	GetDnsServerHostnameArray{ GetDnsServerHostnameArgs{...} }
type GetDnsServerHostnameArrayInput interface {
	pulumi.Input

	ToGetDnsServerHostnameArrayOutput() GetDnsServerHostnameArrayOutput
	ToGetDnsServerHostnameArrayOutputWithContext(context.Context) GetDnsServerHostnameArrayOutput
}

type GetDnsServerHostnameArray []GetDnsServerHostnameInput

func (GetDnsServerHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDnsServerHostname)(nil)).Elem()
}

func (i GetDnsServerHostnameArray) ToGetDnsServerHostnameArrayOutput() GetDnsServerHostnameArrayOutput {
	return i.ToGetDnsServerHostnameArrayOutputWithContext(context.Background())
}

func (i GetDnsServerHostnameArray) ToGetDnsServerHostnameArrayOutputWithContext(ctx context.Context) GetDnsServerHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDnsServerHostnameArrayOutput)
}

type GetDnsServerHostnameOutput struct{ *pulumi.OutputState }

func (GetDnsServerHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsServerHostname)(nil)).Elem()
}

func (o GetDnsServerHostnameOutput) ToGetDnsServerHostnameOutput() GetDnsServerHostnameOutput {
	return o
}

func (o GetDnsServerHostnameOutput) ToGetDnsServerHostnameOutputWithContext(ctx context.Context) GetDnsServerHostnameOutput {
	return o
}

// DNS server host name list separated by space (maximum 4 domains).
func (o GetDnsServerHostnameOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsServerHostname) string { return v.Hostname }).(pulumi.StringOutput)
}

type GetDnsServerHostnameArrayOutput struct{ *pulumi.OutputState }

func (GetDnsServerHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDnsServerHostname)(nil)).Elem()
}

func (o GetDnsServerHostnameArrayOutput) ToGetDnsServerHostnameArrayOutput() GetDnsServerHostnameArrayOutput {
	return o
}

func (o GetDnsServerHostnameArrayOutput) ToGetDnsServerHostnameArrayOutputWithContext(ctx context.Context) GetDnsServerHostnameArrayOutput {
	return o
}

func (o GetDnsServerHostnameArrayOutput) Index(i pulumi.IntInput) GetDnsServerHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDnsServerHostname {
		return vs[0].([]GetDnsServerHostname)[vs[1].(int)]
	}).(GetDnsServerHostnameOutput)
}

type GetDnsdatabaseDnsEntry struct {
	// Canonical name of the host.
	CanonicalName string `pulumi:"canonicalName"`
	// Name of the host.
	Hostname string `pulumi:"hostname"`
	// DNS entry ID.
	Id int `pulumi:"id"`
	// IPv4 address of the host.
	Ip string `pulumi:"ip"`
	// IPv6 address of the host.
	Ipv6 string `pulumi:"ipv6"`
	// DNS entry preference, 0 is the highest preference (0 - 65535, default = 10)
	Preference int `pulumi:"preference"`
	// Enable/disable resource record status.
	Status string `pulumi:"status"`
	// Time-to-live for this entry (0 to 2147483647 sec, default = 0).
	Ttl int `pulumi:"ttl"`
	// Resource record type.
	Type string `pulumi:"type"`
}

// GetDnsdatabaseDnsEntryInput is an input type that accepts GetDnsdatabaseDnsEntryArgs and GetDnsdatabaseDnsEntryOutput values.
// You can construct a concrete instance of `GetDnsdatabaseDnsEntryInput` via:
//
//	GetDnsdatabaseDnsEntryArgs{...}
type GetDnsdatabaseDnsEntryInput interface {
	pulumi.Input

	ToGetDnsdatabaseDnsEntryOutput() GetDnsdatabaseDnsEntryOutput
	ToGetDnsdatabaseDnsEntryOutputWithContext(context.Context) GetDnsdatabaseDnsEntryOutput
}

type GetDnsdatabaseDnsEntryArgs struct {
	// Canonical name of the host.
	CanonicalName pulumi.StringInput `pulumi:"canonicalName"`
	// Name of the host.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// DNS entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv4 address of the host.
	Ip pulumi.StringInput `pulumi:"ip"`
	// IPv6 address of the host.
	Ipv6 pulumi.StringInput `pulumi:"ipv6"`
	// DNS entry preference, 0 is the highest preference (0 - 65535, default = 10)
	Preference pulumi.IntInput `pulumi:"preference"`
	// Enable/disable resource record status.
	Status pulumi.StringInput `pulumi:"status"`
	// Time-to-live for this entry (0 to 2147483647 sec, default = 0).
	Ttl pulumi.IntInput `pulumi:"ttl"`
	// Resource record type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDnsdatabaseDnsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsdatabaseDnsEntry)(nil)).Elem()
}

func (i GetDnsdatabaseDnsEntryArgs) ToGetDnsdatabaseDnsEntryOutput() GetDnsdatabaseDnsEntryOutput {
	return i.ToGetDnsdatabaseDnsEntryOutputWithContext(context.Background())
}

func (i GetDnsdatabaseDnsEntryArgs) ToGetDnsdatabaseDnsEntryOutputWithContext(ctx context.Context) GetDnsdatabaseDnsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDnsdatabaseDnsEntryOutput)
}

// GetDnsdatabaseDnsEntryArrayInput is an input type that accepts GetDnsdatabaseDnsEntryArray and GetDnsdatabaseDnsEntryArrayOutput values.
// You can construct a concrete instance of `GetDnsdatabaseDnsEntryArrayInput` via:
//
//	GetDnsdatabaseDnsEntryArray{ GetDnsdatabaseDnsEntryArgs{...} }
type GetDnsdatabaseDnsEntryArrayInput interface {
	pulumi.Input

	ToGetDnsdatabaseDnsEntryArrayOutput() GetDnsdatabaseDnsEntryArrayOutput
	ToGetDnsdatabaseDnsEntryArrayOutputWithContext(context.Context) GetDnsdatabaseDnsEntryArrayOutput
}

type GetDnsdatabaseDnsEntryArray []GetDnsdatabaseDnsEntryInput

func (GetDnsdatabaseDnsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDnsdatabaseDnsEntry)(nil)).Elem()
}

func (i GetDnsdatabaseDnsEntryArray) ToGetDnsdatabaseDnsEntryArrayOutput() GetDnsdatabaseDnsEntryArrayOutput {
	return i.ToGetDnsdatabaseDnsEntryArrayOutputWithContext(context.Background())
}

func (i GetDnsdatabaseDnsEntryArray) ToGetDnsdatabaseDnsEntryArrayOutputWithContext(ctx context.Context) GetDnsdatabaseDnsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDnsdatabaseDnsEntryArrayOutput)
}

type GetDnsdatabaseDnsEntryOutput struct{ *pulumi.OutputState }

func (GetDnsdatabaseDnsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsdatabaseDnsEntry)(nil)).Elem()
}

func (o GetDnsdatabaseDnsEntryOutput) ToGetDnsdatabaseDnsEntryOutput() GetDnsdatabaseDnsEntryOutput {
	return o
}

func (o GetDnsdatabaseDnsEntryOutput) ToGetDnsdatabaseDnsEntryOutputWithContext(ctx context.Context) GetDnsdatabaseDnsEntryOutput {
	return o
}

// Canonical name of the host.
func (o GetDnsdatabaseDnsEntryOutput) CanonicalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsdatabaseDnsEntry) string { return v.CanonicalName }).(pulumi.StringOutput)
}

// Name of the host.
func (o GetDnsdatabaseDnsEntryOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsdatabaseDnsEntry) string { return v.Hostname }).(pulumi.StringOutput)
}

// DNS entry ID.
func (o GetDnsdatabaseDnsEntryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDnsdatabaseDnsEntry) int { return v.Id }).(pulumi.IntOutput)
}

// IPv4 address of the host.
func (o GetDnsdatabaseDnsEntryOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsdatabaseDnsEntry) string { return v.Ip }).(pulumi.StringOutput)
}

// IPv6 address of the host.
func (o GetDnsdatabaseDnsEntryOutput) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsdatabaseDnsEntry) string { return v.Ipv6 }).(pulumi.StringOutput)
}

// DNS entry preference, 0 is the highest preference (0 - 65535, default = 10)
func (o GetDnsdatabaseDnsEntryOutput) Preference() pulumi.IntOutput {
	return o.ApplyT(func(v GetDnsdatabaseDnsEntry) int { return v.Preference }).(pulumi.IntOutput)
}

// Enable/disable resource record status.
func (o GetDnsdatabaseDnsEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsdatabaseDnsEntry) string { return v.Status }).(pulumi.StringOutput)
}

// Time-to-live for this entry (0 to 2147483647 sec, default = 0).
func (o GetDnsdatabaseDnsEntryOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetDnsdatabaseDnsEntry) int { return v.Ttl }).(pulumi.IntOutput)
}

// Resource record type.
func (o GetDnsdatabaseDnsEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsdatabaseDnsEntry) string { return v.Type }).(pulumi.StringOutput)
}

type GetDnsdatabaseDnsEntryArrayOutput struct{ *pulumi.OutputState }

func (GetDnsdatabaseDnsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDnsdatabaseDnsEntry)(nil)).Elem()
}

func (o GetDnsdatabaseDnsEntryArrayOutput) ToGetDnsdatabaseDnsEntryArrayOutput() GetDnsdatabaseDnsEntryArrayOutput {
	return o
}

func (o GetDnsdatabaseDnsEntryArrayOutput) ToGetDnsdatabaseDnsEntryArrayOutputWithContext(ctx context.Context) GetDnsdatabaseDnsEntryArrayOutput {
	return o
}

func (o GetDnsdatabaseDnsEntryArrayOutput) Index(i pulumi.IntInput) GetDnsdatabaseDnsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDnsdatabaseDnsEntry {
		return vs[0].([]GetDnsdatabaseDnsEntry)[vs[1].(int)]
	}).(GetDnsdatabaseDnsEntryOutput)
}

type GetGlobalInternetServiceDownloadList struct {
	// Internet Service ID.
	Id int `pulumi:"id"`
}

// GetGlobalInternetServiceDownloadListInput is an input type that accepts GetGlobalInternetServiceDownloadListArgs and GetGlobalInternetServiceDownloadListOutput values.
// You can construct a concrete instance of `GetGlobalInternetServiceDownloadListInput` via:
//
//	GetGlobalInternetServiceDownloadListArgs{...}
type GetGlobalInternetServiceDownloadListInput interface {
	pulumi.Input

	ToGetGlobalInternetServiceDownloadListOutput() GetGlobalInternetServiceDownloadListOutput
	ToGetGlobalInternetServiceDownloadListOutputWithContext(context.Context) GetGlobalInternetServiceDownloadListOutput
}

type GetGlobalInternetServiceDownloadListArgs struct {
	// Internet Service ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetGlobalInternetServiceDownloadListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalInternetServiceDownloadList)(nil)).Elem()
}

func (i GetGlobalInternetServiceDownloadListArgs) ToGetGlobalInternetServiceDownloadListOutput() GetGlobalInternetServiceDownloadListOutput {
	return i.ToGetGlobalInternetServiceDownloadListOutputWithContext(context.Background())
}

func (i GetGlobalInternetServiceDownloadListArgs) ToGetGlobalInternetServiceDownloadListOutputWithContext(ctx context.Context) GetGlobalInternetServiceDownloadListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalInternetServiceDownloadListOutput)
}

// GetGlobalInternetServiceDownloadListArrayInput is an input type that accepts GetGlobalInternetServiceDownloadListArray and GetGlobalInternetServiceDownloadListArrayOutput values.
// You can construct a concrete instance of `GetGlobalInternetServiceDownloadListArrayInput` via:
//
//	GetGlobalInternetServiceDownloadListArray{ GetGlobalInternetServiceDownloadListArgs{...} }
type GetGlobalInternetServiceDownloadListArrayInput interface {
	pulumi.Input

	ToGetGlobalInternetServiceDownloadListArrayOutput() GetGlobalInternetServiceDownloadListArrayOutput
	ToGetGlobalInternetServiceDownloadListArrayOutputWithContext(context.Context) GetGlobalInternetServiceDownloadListArrayOutput
}

type GetGlobalInternetServiceDownloadListArray []GetGlobalInternetServiceDownloadListInput

func (GetGlobalInternetServiceDownloadListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalInternetServiceDownloadList)(nil)).Elem()
}

func (i GetGlobalInternetServiceDownloadListArray) ToGetGlobalInternetServiceDownloadListArrayOutput() GetGlobalInternetServiceDownloadListArrayOutput {
	return i.ToGetGlobalInternetServiceDownloadListArrayOutputWithContext(context.Background())
}

func (i GetGlobalInternetServiceDownloadListArray) ToGetGlobalInternetServiceDownloadListArrayOutputWithContext(ctx context.Context) GetGlobalInternetServiceDownloadListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalInternetServiceDownloadListArrayOutput)
}

type GetGlobalInternetServiceDownloadListOutput struct{ *pulumi.OutputState }

func (GetGlobalInternetServiceDownloadListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalInternetServiceDownloadList)(nil)).Elem()
}

func (o GetGlobalInternetServiceDownloadListOutput) ToGetGlobalInternetServiceDownloadListOutput() GetGlobalInternetServiceDownloadListOutput {
	return o
}

func (o GetGlobalInternetServiceDownloadListOutput) ToGetGlobalInternetServiceDownloadListOutputWithContext(ctx context.Context) GetGlobalInternetServiceDownloadListOutput {
	return o
}

// Internet Service ID.
func (o GetGlobalInternetServiceDownloadListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetGlobalInternetServiceDownloadList) int { return v.Id }).(pulumi.IntOutput)
}

type GetGlobalInternetServiceDownloadListArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalInternetServiceDownloadListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalInternetServiceDownloadList)(nil)).Elem()
}

func (o GetGlobalInternetServiceDownloadListArrayOutput) ToGetGlobalInternetServiceDownloadListArrayOutput() GetGlobalInternetServiceDownloadListArrayOutput {
	return o
}

func (o GetGlobalInternetServiceDownloadListArrayOutput) ToGetGlobalInternetServiceDownloadListArrayOutputWithContext(ctx context.Context) GetGlobalInternetServiceDownloadListArrayOutput {
	return o
}

func (o GetGlobalInternetServiceDownloadListArrayOutput) Index(i pulumi.IntInput) GetGlobalInternetServiceDownloadListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalInternetServiceDownloadList {
		return vs[0].([]GetGlobalInternetServiceDownloadList)[vs[1].(int)]
	}).(GetGlobalInternetServiceDownloadListOutput)
}

type GetHaHaMgmtInterface struct {
	// Default route destination for reserved HA management interface.
	Dst string `pulumi:"dst"`
	// Default route gateway for reserved HA management interface.
	Gateway string `pulumi:"gateway"`
	// Default IPv6 gateway for reserved HA management interface.
	Gateway6 string `pulumi:"gateway6"`
	// Table ID.
	Id int `pulumi:"id"`
	// Interface to reserve for HA management.
	Interface string `pulumi:"interface"`
}

// GetHaHaMgmtInterfaceInput is an input type that accepts GetHaHaMgmtInterfaceArgs and GetHaHaMgmtInterfaceOutput values.
// You can construct a concrete instance of `GetHaHaMgmtInterfaceInput` via:
//
//	GetHaHaMgmtInterfaceArgs{...}
type GetHaHaMgmtInterfaceInput interface {
	pulumi.Input

	ToGetHaHaMgmtInterfaceOutput() GetHaHaMgmtInterfaceOutput
	ToGetHaHaMgmtInterfaceOutputWithContext(context.Context) GetHaHaMgmtInterfaceOutput
}

type GetHaHaMgmtInterfaceArgs struct {
	// Default route destination for reserved HA management interface.
	Dst pulumi.StringInput `pulumi:"dst"`
	// Default route gateway for reserved HA management interface.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Default IPv6 gateway for reserved HA management interface.
	Gateway6 pulumi.StringInput `pulumi:"gateway6"`
	// Table ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Interface to reserve for HA management.
	Interface pulumi.StringInput `pulumi:"interface"`
}

func (GetHaHaMgmtInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaHaMgmtInterface)(nil)).Elem()
}

func (i GetHaHaMgmtInterfaceArgs) ToGetHaHaMgmtInterfaceOutput() GetHaHaMgmtInterfaceOutput {
	return i.ToGetHaHaMgmtInterfaceOutputWithContext(context.Background())
}

func (i GetHaHaMgmtInterfaceArgs) ToGetHaHaMgmtInterfaceOutputWithContext(ctx context.Context) GetHaHaMgmtInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaHaMgmtInterfaceOutput)
}

// GetHaHaMgmtInterfaceArrayInput is an input type that accepts GetHaHaMgmtInterfaceArray and GetHaHaMgmtInterfaceArrayOutput values.
// You can construct a concrete instance of `GetHaHaMgmtInterfaceArrayInput` via:
//
//	GetHaHaMgmtInterfaceArray{ GetHaHaMgmtInterfaceArgs{...} }
type GetHaHaMgmtInterfaceArrayInput interface {
	pulumi.Input

	ToGetHaHaMgmtInterfaceArrayOutput() GetHaHaMgmtInterfaceArrayOutput
	ToGetHaHaMgmtInterfaceArrayOutputWithContext(context.Context) GetHaHaMgmtInterfaceArrayOutput
}

type GetHaHaMgmtInterfaceArray []GetHaHaMgmtInterfaceInput

func (GetHaHaMgmtInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaHaMgmtInterface)(nil)).Elem()
}

func (i GetHaHaMgmtInterfaceArray) ToGetHaHaMgmtInterfaceArrayOutput() GetHaHaMgmtInterfaceArrayOutput {
	return i.ToGetHaHaMgmtInterfaceArrayOutputWithContext(context.Background())
}

func (i GetHaHaMgmtInterfaceArray) ToGetHaHaMgmtInterfaceArrayOutputWithContext(ctx context.Context) GetHaHaMgmtInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaHaMgmtInterfaceArrayOutput)
}

type GetHaHaMgmtInterfaceOutput struct{ *pulumi.OutputState }

func (GetHaHaMgmtInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaHaMgmtInterface)(nil)).Elem()
}

func (o GetHaHaMgmtInterfaceOutput) ToGetHaHaMgmtInterfaceOutput() GetHaHaMgmtInterfaceOutput {
	return o
}

func (o GetHaHaMgmtInterfaceOutput) ToGetHaHaMgmtInterfaceOutputWithContext(ctx context.Context) GetHaHaMgmtInterfaceOutput {
	return o
}

// Default route destination for reserved HA management interface.
func (o GetHaHaMgmtInterfaceOutput) Dst() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaHaMgmtInterface) string { return v.Dst }).(pulumi.StringOutput)
}

// Default route gateway for reserved HA management interface.
func (o GetHaHaMgmtInterfaceOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaHaMgmtInterface) string { return v.Gateway }).(pulumi.StringOutput)
}

// Default IPv6 gateway for reserved HA management interface.
func (o GetHaHaMgmtInterfaceOutput) Gateway6() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaHaMgmtInterface) string { return v.Gateway6 }).(pulumi.StringOutput)
}

// Table ID.
func (o GetHaHaMgmtInterfaceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetHaHaMgmtInterface) int { return v.Id }).(pulumi.IntOutput)
}

// Interface to reserve for HA management.
func (o GetHaHaMgmtInterfaceOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaHaMgmtInterface) string { return v.Interface }).(pulumi.StringOutput)
}

type GetHaHaMgmtInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetHaHaMgmtInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaHaMgmtInterface)(nil)).Elem()
}

func (o GetHaHaMgmtInterfaceArrayOutput) ToGetHaHaMgmtInterfaceArrayOutput() GetHaHaMgmtInterfaceArrayOutput {
	return o
}

func (o GetHaHaMgmtInterfaceArrayOutput) ToGetHaHaMgmtInterfaceArrayOutputWithContext(ctx context.Context) GetHaHaMgmtInterfaceArrayOutput {
	return o
}

func (o GetHaHaMgmtInterfaceArrayOutput) Index(i pulumi.IntInput) GetHaHaMgmtInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHaHaMgmtInterface {
		return vs[0].([]GetHaHaMgmtInterface)[vs[1].(int)]
	}).(GetHaHaMgmtInterfaceOutput)
}

type GetHaSecondaryVcluster struct {
	// Interfaces to check for port monitoring (or link failure).
	Monitor string `pulumi:"monitor"`
	// Enable and increase the priority of the unit that should always be primary (master).
	Override string `pulumi:"override"`
	// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
	OverrideWaitTime int `pulumi:"overrideWaitTime"`
	// Remote IP monitoring failover threshold (0 - 50).
	PingserverFailoverThreshold int `pulumi:"pingserverFailoverThreshold"`
	// Interfaces to check for remote IP monitoring.
	PingserverMonitorInterface string `pulumi:"pingserverMonitorInterface"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover.
	PingserverSecondaryForceReset string `pulumi:"pingserverSecondaryForceReset"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover.
	PingserverSlaveForceReset string `pulumi:"pingserverSlaveForceReset"`
	// Increase the priority to select the primary unit (0 - 255).
	Priority int `pulumi:"priority"`
	// Cluster ID.
	VclusterId int `pulumi:"vclusterId"`
	// VDOMs in virtual cluster 2.
	Vdom string `pulumi:"vdom"`
}

// GetHaSecondaryVclusterInput is an input type that accepts GetHaSecondaryVclusterArgs and GetHaSecondaryVclusterOutput values.
// You can construct a concrete instance of `GetHaSecondaryVclusterInput` via:
//
//	GetHaSecondaryVclusterArgs{...}
type GetHaSecondaryVclusterInput interface {
	pulumi.Input

	ToGetHaSecondaryVclusterOutput() GetHaSecondaryVclusterOutput
	ToGetHaSecondaryVclusterOutputWithContext(context.Context) GetHaSecondaryVclusterOutput
}

type GetHaSecondaryVclusterArgs struct {
	// Interfaces to check for port monitoring (or link failure).
	Monitor pulumi.StringInput `pulumi:"monitor"`
	// Enable and increase the priority of the unit that should always be primary (master).
	Override pulumi.StringInput `pulumi:"override"`
	// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
	OverrideWaitTime pulumi.IntInput `pulumi:"overrideWaitTime"`
	// Remote IP monitoring failover threshold (0 - 50).
	PingserverFailoverThreshold pulumi.IntInput `pulumi:"pingserverFailoverThreshold"`
	// Interfaces to check for remote IP monitoring.
	PingserverMonitorInterface pulumi.StringInput `pulumi:"pingserverMonitorInterface"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover.
	PingserverSecondaryForceReset pulumi.StringInput `pulumi:"pingserverSecondaryForceReset"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover.
	PingserverSlaveForceReset pulumi.StringInput `pulumi:"pingserverSlaveForceReset"`
	// Increase the priority to select the primary unit (0 - 255).
	Priority pulumi.IntInput `pulumi:"priority"`
	// Cluster ID.
	VclusterId pulumi.IntInput `pulumi:"vclusterId"`
	// VDOMs in virtual cluster 2.
	Vdom pulumi.StringInput `pulumi:"vdom"`
}

func (GetHaSecondaryVclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaSecondaryVcluster)(nil)).Elem()
}

func (i GetHaSecondaryVclusterArgs) ToGetHaSecondaryVclusterOutput() GetHaSecondaryVclusterOutput {
	return i.ToGetHaSecondaryVclusterOutputWithContext(context.Background())
}

func (i GetHaSecondaryVclusterArgs) ToGetHaSecondaryVclusterOutputWithContext(ctx context.Context) GetHaSecondaryVclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaSecondaryVclusterOutput)
}

// GetHaSecondaryVclusterArrayInput is an input type that accepts GetHaSecondaryVclusterArray and GetHaSecondaryVclusterArrayOutput values.
// You can construct a concrete instance of `GetHaSecondaryVclusterArrayInput` via:
//
//	GetHaSecondaryVclusterArray{ GetHaSecondaryVclusterArgs{...} }
type GetHaSecondaryVclusterArrayInput interface {
	pulumi.Input

	ToGetHaSecondaryVclusterArrayOutput() GetHaSecondaryVclusterArrayOutput
	ToGetHaSecondaryVclusterArrayOutputWithContext(context.Context) GetHaSecondaryVclusterArrayOutput
}

type GetHaSecondaryVclusterArray []GetHaSecondaryVclusterInput

func (GetHaSecondaryVclusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaSecondaryVcluster)(nil)).Elem()
}

func (i GetHaSecondaryVclusterArray) ToGetHaSecondaryVclusterArrayOutput() GetHaSecondaryVclusterArrayOutput {
	return i.ToGetHaSecondaryVclusterArrayOutputWithContext(context.Background())
}

func (i GetHaSecondaryVclusterArray) ToGetHaSecondaryVclusterArrayOutputWithContext(ctx context.Context) GetHaSecondaryVclusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaSecondaryVclusterArrayOutput)
}

type GetHaSecondaryVclusterOutput struct{ *pulumi.OutputState }

func (GetHaSecondaryVclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaSecondaryVcluster)(nil)).Elem()
}

func (o GetHaSecondaryVclusterOutput) ToGetHaSecondaryVclusterOutput() GetHaSecondaryVclusterOutput {
	return o
}

func (o GetHaSecondaryVclusterOutput) ToGetHaSecondaryVclusterOutputWithContext(ctx context.Context) GetHaSecondaryVclusterOutput {
	return o
}

// Interfaces to check for port monitoring (or link failure).
func (o GetHaSecondaryVclusterOutput) Monitor() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaSecondaryVcluster) string { return v.Monitor }).(pulumi.StringOutput)
}

// Enable and increase the priority of the unit that should always be primary (master).
func (o GetHaSecondaryVclusterOutput) Override() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaSecondaryVcluster) string { return v.Override }).(pulumi.StringOutput)
}

// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
func (o GetHaSecondaryVclusterOutput) OverrideWaitTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetHaSecondaryVcluster) int { return v.OverrideWaitTime }).(pulumi.IntOutput)
}

// Remote IP monitoring failover threshold (0 - 50).
func (o GetHaSecondaryVclusterOutput) PingserverFailoverThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetHaSecondaryVcluster) int { return v.PingserverFailoverThreshold }).(pulumi.IntOutput)
}

// Interfaces to check for remote IP monitoring.
func (o GetHaSecondaryVclusterOutput) PingserverMonitorInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaSecondaryVcluster) string { return v.PingserverMonitorInterface }).(pulumi.StringOutput)
}

// Enable to force the cluster to negotiate after a remote IP monitoring failover.
func (o GetHaSecondaryVclusterOutput) PingserverSecondaryForceReset() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaSecondaryVcluster) string { return v.PingserverSecondaryForceReset }).(pulumi.StringOutput)
}

// Enable to force the cluster to negotiate after a remote IP monitoring failover.
func (o GetHaSecondaryVclusterOutput) PingserverSlaveForceReset() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaSecondaryVcluster) string { return v.PingserverSlaveForceReset }).(pulumi.StringOutput)
}

// Increase the priority to select the primary unit (0 - 255).
func (o GetHaSecondaryVclusterOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetHaSecondaryVcluster) int { return v.Priority }).(pulumi.IntOutput)
}

// Cluster ID.
func (o GetHaSecondaryVclusterOutput) VclusterId() pulumi.IntOutput {
	return o.ApplyT(func(v GetHaSecondaryVcluster) int { return v.VclusterId }).(pulumi.IntOutput)
}

// VDOMs in virtual cluster 2.
func (o GetHaSecondaryVclusterOutput) Vdom() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaSecondaryVcluster) string { return v.Vdom }).(pulumi.StringOutput)
}

type GetHaSecondaryVclusterArrayOutput struct{ *pulumi.OutputState }

func (GetHaSecondaryVclusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaSecondaryVcluster)(nil)).Elem()
}

func (o GetHaSecondaryVclusterArrayOutput) ToGetHaSecondaryVclusterArrayOutput() GetHaSecondaryVclusterArrayOutput {
	return o
}

func (o GetHaSecondaryVclusterArrayOutput) ToGetHaSecondaryVclusterArrayOutputWithContext(ctx context.Context) GetHaSecondaryVclusterArrayOutput {
	return o
}

func (o GetHaSecondaryVclusterArrayOutput) Index(i pulumi.IntInput) GetHaSecondaryVclusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHaSecondaryVcluster {
		return vs[0].([]GetHaSecondaryVcluster)[vs[1].(int)]
	}).(GetHaSecondaryVclusterOutput)
}

type GetHaUnicastPeer struct {
	// Table ID.
	Id int `pulumi:"id"`
	// Unicast peer IP.
	PeerIp string `pulumi:"peerIp"`
}

// GetHaUnicastPeerInput is an input type that accepts GetHaUnicastPeerArgs and GetHaUnicastPeerOutput values.
// You can construct a concrete instance of `GetHaUnicastPeerInput` via:
//
//	GetHaUnicastPeerArgs{...}
type GetHaUnicastPeerInput interface {
	pulumi.Input

	ToGetHaUnicastPeerOutput() GetHaUnicastPeerOutput
	ToGetHaUnicastPeerOutputWithContext(context.Context) GetHaUnicastPeerOutput
}

type GetHaUnicastPeerArgs struct {
	// Table ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Unicast peer IP.
	PeerIp pulumi.StringInput `pulumi:"peerIp"`
}

func (GetHaUnicastPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaUnicastPeer)(nil)).Elem()
}

func (i GetHaUnicastPeerArgs) ToGetHaUnicastPeerOutput() GetHaUnicastPeerOutput {
	return i.ToGetHaUnicastPeerOutputWithContext(context.Background())
}

func (i GetHaUnicastPeerArgs) ToGetHaUnicastPeerOutputWithContext(ctx context.Context) GetHaUnicastPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaUnicastPeerOutput)
}

// GetHaUnicastPeerArrayInput is an input type that accepts GetHaUnicastPeerArray and GetHaUnicastPeerArrayOutput values.
// You can construct a concrete instance of `GetHaUnicastPeerArrayInput` via:
//
//	GetHaUnicastPeerArray{ GetHaUnicastPeerArgs{...} }
type GetHaUnicastPeerArrayInput interface {
	pulumi.Input

	ToGetHaUnicastPeerArrayOutput() GetHaUnicastPeerArrayOutput
	ToGetHaUnicastPeerArrayOutputWithContext(context.Context) GetHaUnicastPeerArrayOutput
}

type GetHaUnicastPeerArray []GetHaUnicastPeerInput

func (GetHaUnicastPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaUnicastPeer)(nil)).Elem()
}

func (i GetHaUnicastPeerArray) ToGetHaUnicastPeerArrayOutput() GetHaUnicastPeerArrayOutput {
	return i.ToGetHaUnicastPeerArrayOutputWithContext(context.Background())
}

func (i GetHaUnicastPeerArray) ToGetHaUnicastPeerArrayOutputWithContext(ctx context.Context) GetHaUnicastPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaUnicastPeerArrayOutput)
}

type GetHaUnicastPeerOutput struct{ *pulumi.OutputState }

func (GetHaUnicastPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaUnicastPeer)(nil)).Elem()
}

func (o GetHaUnicastPeerOutput) ToGetHaUnicastPeerOutput() GetHaUnicastPeerOutput {
	return o
}

func (o GetHaUnicastPeerOutput) ToGetHaUnicastPeerOutputWithContext(ctx context.Context) GetHaUnicastPeerOutput {
	return o
}

// Table ID.
func (o GetHaUnicastPeerOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetHaUnicastPeer) int { return v.Id }).(pulumi.IntOutput)
}

// Unicast peer IP.
func (o GetHaUnicastPeerOutput) PeerIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaUnicastPeer) string { return v.PeerIp }).(pulumi.StringOutput)
}

type GetHaUnicastPeerArrayOutput struct{ *pulumi.OutputState }

func (GetHaUnicastPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaUnicastPeer)(nil)).Elem()
}

func (o GetHaUnicastPeerArrayOutput) ToGetHaUnicastPeerArrayOutput() GetHaUnicastPeerArrayOutput {
	return o
}

func (o GetHaUnicastPeerArrayOutput) ToGetHaUnicastPeerArrayOutputWithContext(ctx context.Context) GetHaUnicastPeerArrayOutput {
	return o
}

func (o GetHaUnicastPeerArrayOutput) Index(i pulumi.IntInput) GetHaUnicastPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHaUnicastPeer {
		return vs[0].([]GetHaUnicastPeer)[vs[1].(int)]
	}).(GetHaUnicastPeerOutput)
}

type GetHaVcluster struct {
	// Interfaces to check for port monitoring (or link failure).
	Monitor string `pulumi:"monitor"`
	// Enable and increase the priority of the unit that should always be primary (master).
	Override string `pulumi:"override"`
	// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
	OverrideWaitTime int `pulumi:"overrideWaitTime"`
	// Remote IP monitoring failover threshold (0 - 50).
	PingserverFailoverThreshold int `pulumi:"pingserverFailoverThreshold"`
	// Time to wait in minutes before renegotiating after a remote IP monitoring failover.
	PingserverFlipTimeout int `pulumi:"pingserverFlipTimeout"`
	// Interfaces to check for remote IP monitoring.
	PingserverMonitorInterface string `pulumi:"pingserverMonitorInterface"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover.
	PingserverSecondaryForceReset string `pulumi:"pingserverSecondaryForceReset"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover.
	PingserverSlaveForceReset string `pulumi:"pingserverSlaveForceReset"`
	// Increase the priority to select the primary unit (0 - 255).
	Priority int `pulumi:"priority"`
	// Cluster ID.
	VclusterId int `pulumi:"vclusterId"`
	// VDOMs in virtual cluster 2.
	Vdoms []GetHaVclusterVdom `pulumi:"vdoms"`
}

// GetHaVclusterInput is an input type that accepts GetHaVclusterArgs and GetHaVclusterOutput values.
// You can construct a concrete instance of `GetHaVclusterInput` via:
//
//	GetHaVclusterArgs{...}
type GetHaVclusterInput interface {
	pulumi.Input

	ToGetHaVclusterOutput() GetHaVclusterOutput
	ToGetHaVclusterOutputWithContext(context.Context) GetHaVclusterOutput
}

type GetHaVclusterArgs struct {
	// Interfaces to check for port monitoring (or link failure).
	Monitor pulumi.StringInput `pulumi:"monitor"`
	// Enable and increase the priority of the unit that should always be primary (master).
	Override pulumi.StringInput `pulumi:"override"`
	// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
	OverrideWaitTime pulumi.IntInput `pulumi:"overrideWaitTime"`
	// Remote IP monitoring failover threshold (0 - 50).
	PingserverFailoverThreshold pulumi.IntInput `pulumi:"pingserverFailoverThreshold"`
	// Time to wait in minutes before renegotiating after a remote IP monitoring failover.
	PingserverFlipTimeout pulumi.IntInput `pulumi:"pingserverFlipTimeout"`
	// Interfaces to check for remote IP monitoring.
	PingserverMonitorInterface pulumi.StringInput `pulumi:"pingserverMonitorInterface"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover.
	PingserverSecondaryForceReset pulumi.StringInput `pulumi:"pingserverSecondaryForceReset"`
	// Enable to force the cluster to negotiate after a remote IP monitoring failover.
	PingserverSlaveForceReset pulumi.StringInput `pulumi:"pingserverSlaveForceReset"`
	// Increase the priority to select the primary unit (0 - 255).
	Priority pulumi.IntInput `pulumi:"priority"`
	// Cluster ID.
	VclusterId pulumi.IntInput `pulumi:"vclusterId"`
	// VDOMs in virtual cluster 2.
	Vdoms GetHaVclusterVdomArrayInput `pulumi:"vdoms"`
}

func (GetHaVclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaVcluster)(nil)).Elem()
}

func (i GetHaVclusterArgs) ToGetHaVclusterOutput() GetHaVclusterOutput {
	return i.ToGetHaVclusterOutputWithContext(context.Background())
}

func (i GetHaVclusterArgs) ToGetHaVclusterOutputWithContext(ctx context.Context) GetHaVclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaVclusterOutput)
}

// GetHaVclusterArrayInput is an input type that accepts GetHaVclusterArray and GetHaVclusterArrayOutput values.
// You can construct a concrete instance of `GetHaVclusterArrayInput` via:
//
//	GetHaVclusterArray{ GetHaVclusterArgs{...} }
type GetHaVclusterArrayInput interface {
	pulumi.Input

	ToGetHaVclusterArrayOutput() GetHaVclusterArrayOutput
	ToGetHaVclusterArrayOutputWithContext(context.Context) GetHaVclusterArrayOutput
}

type GetHaVclusterArray []GetHaVclusterInput

func (GetHaVclusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaVcluster)(nil)).Elem()
}

func (i GetHaVclusterArray) ToGetHaVclusterArrayOutput() GetHaVclusterArrayOutput {
	return i.ToGetHaVclusterArrayOutputWithContext(context.Background())
}

func (i GetHaVclusterArray) ToGetHaVclusterArrayOutputWithContext(ctx context.Context) GetHaVclusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaVclusterArrayOutput)
}

type GetHaVclusterOutput struct{ *pulumi.OutputState }

func (GetHaVclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaVcluster)(nil)).Elem()
}

func (o GetHaVclusterOutput) ToGetHaVclusterOutput() GetHaVclusterOutput {
	return o
}

func (o GetHaVclusterOutput) ToGetHaVclusterOutputWithContext(ctx context.Context) GetHaVclusterOutput {
	return o
}

// Interfaces to check for port monitoring (or link failure).
func (o GetHaVclusterOutput) Monitor() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVcluster) string { return v.Monitor }).(pulumi.StringOutput)
}

// Enable and increase the priority of the unit that should always be primary (master).
func (o GetHaVclusterOutput) Override() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVcluster) string { return v.Override }).(pulumi.StringOutput)
}

// Delay negotiating if override is enabled (0 - 3600 sec). Reduces how often the cluster negotiates.
func (o GetHaVclusterOutput) OverrideWaitTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetHaVcluster) int { return v.OverrideWaitTime }).(pulumi.IntOutput)
}

// Remote IP monitoring failover threshold (0 - 50).
func (o GetHaVclusterOutput) PingserverFailoverThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetHaVcluster) int { return v.PingserverFailoverThreshold }).(pulumi.IntOutput)
}

// Time to wait in minutes before renegotiating after a remote IP monitoring failover.
func (o GetHaVclusterOutput) PingserverFlipTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetHaVcluster) int { return v.PingserverFlipTimeout }).(pulumi.IntOutput)
}

// Interfaces to check for remote IP monitoring.
func (o GetHaVclusterOutput) PingserverMonitorInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVcluster) string { return v.PingserverMonitorInterface }).(pulumi.StringOutput)
}

// Enable to force the cluster to negotiate after a remote IP monitoring failover.
func (o GetHaVclusterOutput) PingserverSecondaryForceReset() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVcluster) string { return v.PingserverSecondaryForceReset }).(pulumi.StringOutput)
}

// Enable to force the cluster to negotiate after a remote IP monitoring failover.
func (o GetHaVclusterOutput) PingserverSlaveForceReset() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVcluster) string { return v.PingserverSlaveForceReset }).(pulumi.StringOutput)
}

// Increase the priority to select the primary unit (0 - 255).
func (o GetHaVclusterOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetHaVcluster) int { return v.Priority }).(pulumi.IntOutput)
}

// Cluster ID.
func (o GetHaVclusterOutput) VclusterId() pulumi.IntOutput {
	return o.ApplyT(func(v GetHaVcluster) int { return v.VclusterId }).(pulumi.IntOutput)
}

// VDOMs in virtual cluster 2.
func (o GetHaVclusterOutput) Vdoms() GetHaVclusterVdomArrayOutput {
	return o.ApplyT(func(v GetHaVcluster) []GetHaVclusterVdom { return v.Vdoms }).(GetHaVclusterVdomArrayOutput)
}

type GetHaVclusterArrayOutput struct{ *pulumi.OutputState }

func (GetHaVclusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaVcluster)(nil)).Elem()
}

func (o GetHaVclusterArrayOutput) ToGetHaVclusterArrayOutput() GetHaVclusterArrayOutput {
	return o
}

func (o GetHaVclusterArrayOutput) ToGetHaVclusterArrayOutputWithContext(ctx context.Context) GetHaVclusterArrayOutput {
	return o
}

func (o GetHaVclusterArrayOutput) Index(i pulumi.IntInput) GetHaVclusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHaVcluster {
		return vs[0].([]GetHaVcluster)[vs[1].(int)]
	}).(GetHaVclusterOutput)
}

type GetHaVclusterVdom struct {
	// Virtual domain name.
	Name string `pulumi:"name"`
}

// GetHaVclusterVdomInput is an input type that accepts GetHaVclusterVdomArgs and GetHaVclusterVdomOutput values.
// You can construct a concrete instance of `GetHaVclusterVdomInput` via:
//
//	GetHaVclusterVdomArgs{...}
type GetHaVclusterVdomInput interface {
	pulumi.Input

	ToGetHaVclusterVdomOutput() GetHaVclusterVdomOutput
	ToGetHaVclusterVdomOutputWithContext(context.Context) GetHaVclusterVdomOutput
}

type GetHaVclusterVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetHaVclusterVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaVclusterVdom)(nil)).Elem()
}

func (i GetHaVclusterVdomArgs) ToGetHaVclusterVdomOutput() GetHaVclusterVdomOutput {
	return i.ToGetHaVclusterVdomOutputWithContext(context.Background())
}

func (i GetHaVclusterVdomArgs) ToGetHaVclusterVdomOutputWithContext(ctx context.Context) GetHaVclusterVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaVclusterVdomOutput)
}

// GetHaVclusterVdomArrayInput is an input type that accepts GetHaVclusterVdomArray and GetHaVclusterVdomArrayOutput values.
// You can construct a concrete instance of `GetHaVclusterVdomArrayInput` via:
//
//	GetHaVclusterVdomArray{ GetHaVclusterVdomArgs{...} }
type GetHaVclusterVdomArrayInput interface {
	pulumi.Input

	ToGetHaVclusterVdomArrayOutput() GetHaVclusterVdomArrayOutput
	ToGetHaVclusterVdomArrayOutputWithContext(context.Context) GetHaVclusterVdomArrayOutput
}

type GetHaVclusterVdomArray []GetHaVclusterVdomInput

func (GetHaVclusterVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaVclusterVdom)(nil)).Elem()
}

func (i GetHaVclusterVdomArray) ToGetHaVclusterVdomArrayOutput() GetHaVclusterVdomArrayOutput {
	return i.ToGetHaVclusterVdomArrayOutputWithContext(context.Background())
}

func (i GetHaVclusterVdomArray) ToGetHaVclusterVdomArrayOutputWithContext(ctx context.Context) GetHaVclusterVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaVclusterVdomArrayOutput)
}

type GetHaVclusterVdomOutput struct{ *pulumi.OutputState }

func (GetHaVclusterVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaVclusterVdom)(nil)).Elem()
}

func (o GetHaVclusterVdomOutput) ToGetHaVclusterVdomOutput() GetHaVclusterVdomOutput {
	return o
}

func (o GetHaVclusterVdomOutput) ToGetHaVclusterVdomOutputWithContext(ctx context.Context) GetHaVclusterVdomOutput {
	return o
}

// Virtual domain name.
func (o GetHaVclusterVdomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVclusterVdom) string { return v.Name }).(pulumi.StringOutput)
}

type GetHaVclusterVdomArrayOutput struct{ *pulumi.OutputState }

func (GetHaVclusterVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaVclusterVdom)(nil)).Elem()
}

func (o GetHaVclusterVdomArrayOutput) ToGetHaVclusterVdomArrayOutput() GetHaVclusterVdomArrayOutput {
	return o
}

func (o GetHaVclusterVdomArrayOutput) ToGetHaVclusterVdomArrayOutputWithContext(ctx context.Context) GetHaVclusterVdomArrayOutput {
	return o
}

func (o GetHaVclusterVdomArrayOutput) Index(i pulumi.IntInput) GetHaVclusterVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHaVclusterVdom {
		return vs[0].([]GetHaVclusterVdom)[vs[1].(int)]
	}).(GetHaVclusterVdomOutput)
}

type GetInterfaceClientOption struct {
	// DHCP client option code.
	Code int `pulumi:"code"`
	// ID.
	Id int `pulumi:"id"`
	// Secondary IP address of the interface.
	Ip string `pulumi:"ip"`
	// DHCP client option type.
	Type string `pulumi:"type"`
	// DHCP client option value.
	Value string `pulumi:"value"`
}

// GetInterfaceClientOptionInput is an input type that accepts GetInterfaceClientOptionArgs and GetInterfaceClientOptionOutput values.
// You can construct a concrete instance of `GetInterfaceClientOptionInput` via:
//
//	GetInterfaceClientOptionArgs{...}
type GetInterfaceClientOptionInput interface {
	pulumi.Input

	ToGetInterfaceClientOptionOutput() GetInterfaceClientOptionOutput
	ToGetInterfaceClientOptionOutputWithContext(context.Context) GetInterfaceClientOptionOutput
}

type GetInterfaceClientOptionArgs struct {
	// DHCP client option code.
	Code pulumi.IntInput `pulumi:"code"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Secondary IP address of the interface.
	Ip pulumi.StringInput `pulumi:"ip"`
	// DHCP client option type.
	Type pulumi.StringInput `pulumi:"type"`
	// DHCP client option value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInterfaceClientOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceClientOption)(nil)).Elem()
}

func (i GetInterfaceClientOptionArgs) ToGetInterfaceClientOptionOutput() GetInterfaceClientOptionOutput {
	return i.ToGetInterfaceClientOptionOutputWithContext(context.Background())
}

func (i GetInterfaceClientOptionArgs) ToGetInterfaceClientOptionOutputWithContext(ctx context.Context) GetInterfaceClientOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceClientOptionOutput)
}

// GetInterfaceClientOptionArrayInput is an input type that accepts GetInterfaceClientOptionArray and GetInterfaceClientOptionArrayOutput values.
// You can construct a concrete instance of `GetInterfaceClientOptionArrayInput` via:
//
//	GetInterfaceClientOptionArray{ GetInterfaceClientOptionArgs{...} }
type GetInterfaceClientOptionArrayInput interface {
	pulumi.Input

	ToGetInterfaceClientOptionArrayOutput() GetInterfaceClientOptionArrayOutput
	ToGetInterfaceClientOptionArrayOutputWithContext(context.Context) GetInterfaceClientOptionArrayOutput
}

type GetInterfaceClientOptionArray []GetInterfaceClientOptionInput

func (GetInterfaceClientOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceClientOption)(nil)).Elem()
}

func (i GetInterfaceClientOptionArray) ToGetInterfaceClientOptionArrayOutput() GetInterfaceClientOptionArrayOutput {
	return i.ToGetInterfaceClientOptionArrayOutputWithContext(context.Background())
}

func (i GetInterfaceClientOptionArray) ToGetInterfaceClientOptionArrayOutputWithContext(ctx context.Context) GetInterfaceClientOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceClientOptionArrayOutput)
}

type GetInterfaceClientOptionOutput struct{ *pulumi.OutputState }

func (GetInterfaceClientOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceClientOption)(nil)).Elem()
}

func (o GetInterfaceClientOptionOutput) ToGetInterfaceClientOptionOutput() GetInterfaceClientOptionOutput {
	return o
}

func (o GetInterfaceClientOptionOutput) ToGetInterfaceClientOptionOutputWithContext(ctx context.Context) GetInterfaceClientOptionOutput {
	return o
}

// DHCP client option code.
func (o GetInterfaceClientOptionOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceClientOption) int { return v.Code }).(pulumi.IntOutput)
}

// ID.
func (o GetInterfaceClientOptionOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceClientOption) int { return v.Id }).(pulumi.IntOutput)
}

// Secondary IP address of the interface.
func (o GetInterfaceClientOptionOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceClientOption) string { return v.Ip }).(pulumi.StringOutput)
}

// DHCP client option type.
func (o GetInterfaceClientOptionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceClientOption) string { return v.Type }).(pulumi.StringOutput)
}

// DHCP client option value.
func (o GetInterfaceClientOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceClientOption) string { return v.Value }).(pulumi.StringOutput)
}

type GetInterfaceClientOptionArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceClientOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceClientOption)(nil)).Elem()
}

func (o GetInterfaceClientOptionArrayOutput) ToGetInterfaceClientOptionArrayOutput() GetInterfaceClientOptionArrayOutput {
	return o
}

func (o GetInterfaceClientOptionArrayOutput) ToGetInterfaceClientOptionArrayOutputWithContext(ctx context.Context) GetInterfaceClientOptionArrayOutput {
	return o
}

func (o GetInterfaceClientOptionArrayOutput) Index(i pulumi.IntInput) GetInterfaceClientOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceClientOption {
		return vs[0].([]GetInterfaceClientOption)[vs[1].(int)]
	}).(GetInterfaceClientOptionOutput)
}

type GetInterfaceDhcpSnoopingServerList struct {
	// Specify the name of the desired system interface.
	Name string `pulumi:"name"`
	// IP address for DHCP server.
	ServerIp string `pulumi:"serverIp"`
}

// GetInterfaceDhcpSnoopingServerListInput is an input type that accepts GetInterfaceDhcpSnoopingServerListArgs and GetInterfaceDhcpSnoopingServerListOutput values.
// You can construct a concrete instance of `GetInterfaceDhcpSnoopingServerListInput` via:
//
//	GetInterfaceDhcpSnoopingServerListArgs{...}
type GetInterfaceDhcpSnoopingServerListInput interface {
	pulumi.Input

	ToGetInterfaceDhcpSnoopingServerListOutput() GetInterfaceDhcpSnoopingServerListOutput
	ToGetInterfaceDhcpSnoopingServerListOutputWithContext(context.Context) GetInterfaceDhcpSnoopingServerListOutput
}

type GetInterfaceDhcpSnoopingServerListArgs struct {
	// Specify the name of the desired system interface.
	Name pulumi.StringInput `pulumi:"name"`
	// IP address for DHCP server.
	ServerIp pulumi.StringInput `pulumi:"serverIp"`
}

func (GetInterfaceDhcpSnoopingServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (i GetInterfaceDhcpSnoopingServerListArgs) ToGetInterfaceDhcpSnoopingServerListOutput() GetInterfaceDhcpSnoopingServerListOutput {
	return i.ToGetInterfaceDhcpSnoopingServerListOutputWithContext(context.Background())
}

func (i GetInterfaceDhcpSnoopingServerListArgs) ToGetInterfaceDhcpSnoopingServerListOutputWithContext(ctx context.Context) GetInterfaceDhcpSnoopingServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceDhcpSnoopingServerListOutput)
}

// GetInterfaceDhcpSnoopingServerListArrayInput is an input type that accepts GetInterfaceDhcpSnoopingServerListArray and GetInterfaceDhcpSnoopingServerListArrayOutput values.
// You can construct a concrete instance of `GetInterfaceDhcpSnoopingServerListArrayInput` via:
//
//	GetInterfaceDhcpSnoopingServerListArray{ GetInterfaceDhcpSnoopingServerListArgs{...} }
type GetInterfaceDhcpSnoopingServerListArrayInput interface {
	pulumi.Input

	ToGetInterfaceDhcpSnoopingServerListArrayOutput() GetInterfaceDhcpSnoopingServerListArrayOutput
	ToGetInterfaceDhcpSnoopingServerListArrayOutputWithContext(context.Context) GetInterfaceDhcpSnoopingServerListArrayOutput
}

type GetInterfaceDhcpSnoopingServerListArray []GetInterfaceDhcpSnoopingServerListInput

func (GetInterfaceDhcpSnoopingServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (i GetInterfaceDhcpSnoopingServerListArray) ToGetInterfaceDhcpSnoopingServerListArrayOutput() GetInterfaceDhcpSnoopingServerListArrayOutput {
	return i.ToGetInterfaceDhcpSnoopingServerListArrayOutputWithContext(context.Background())
}

func (i GetInterfaceDhcpSnoopingServerListArray) ToGetInterfaceDhcpSnoopingServerListArrayOutputWithContext(ctx context.Context) GetInterfaceDhcpSnoopingServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceDhcpSnoopingServerListArrayOutput)
}

type GetInterfaceDhcpSnoopingServerListOutput struct{ *pulumi.OutputState }

func (GetInterfaceDhcpSnoopingServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (o GetInterfaceDhcpSnoopingServerListOutput) ToGetInterfaceDhcpSnoopingServerListOutput() GetInterfaceDhcpSnoopingServerListOutput {
	return o
}

func (o GetInterfaceDhcpSnoopingServerListOutput) ToGetInterfaceDhcpSnoopingServerListOutputWithContext(ctx context.Context) GetInterfaceDhcpSnoopingServerListOutput {
	return o
}

// Specify the name of the desired system interface.
func (o GetInterfaceDhcpSnoopingServerListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceDhcpSnoopingServerList) string { return v.Name }).(pulumi.StringOutput)
}

// IP address for DHCP server.
func (o GetInterfaceDhcpSnoopingServerListOutput) ServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceDhcpSnoopingServerList) string { return v.ServerIp }).(pulumi.StringOutput)
}

type GetInterfaceDhcpSnoopingServerListArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceDhcpSnoopingServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (o GetInterfaceDhcpSnoopingServerListArrayOutput) ToGetInterfaceDhcpSnoopingServerListArrayOutput() GetInterfaceDhcpSnoopingServerListArrayOutput {
	return o
}

func (o GetInterfaceDhcpSnoopingServerListArrayOutput) ToGetInterfaceDhcpSnoopingServerListArrayOutputWithContext(ctx context.Context) GetInterfaceDhcpSnoopingServerListArrayOutput {
	return o
}

func (o GetInterfaceDhcpSnoopingServerListArrayOutput) Index(i pulumi.IntInput) GetInterfaceDhcpSnoopingServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceDhcpSnoopingServerList {
		return vs[0].([]GetInterfaceDhcpSnoopingServerList)[vs[1].(int)]
	}).(GetInterfaceDhcpSnoopingServerListOutput)
}

type GetInterfaceFailAlertInterface struct {
	// Specify the name of the desired system interface.
	Name string `pulumi:"name"`
}

// GetInterfaceFailAlertInterfaceInput is an input type that accepts GetInterfaceFailAlertInterfaceArgs and GetInterfaceFailAlertInterfaceOutput values.
// You can construct a concrete instance of `GetInterfaceFailAlertInterfaceInput` via:
//
//	GetInterfaceFailAlertInterfaceArgs{...}
type GetInterfaceFailAlertInterfaceInput interface {
	pulumi.Input

	ToGetInterfaceFailAlertInterfaceOutput() GetInterfaceFailAlertInterfaceOutput
	ToGetInterfaceFailAlertInterfaceOutputWithContext(context.Context) GetInterfaceFailAlertInterfaceOutput
}

type GetInterfaceFailAlertInterfaceArgs struct {
	// Specify the name of the desired system interface.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInterfaceFailAlertInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceFailAlertInterface)(nil)).Elem()
}

func (i GetInterfaceFailAlertInterfaceArgs) ToGetInterfaceFailAlertInterfaceOutput() GetInterfaceFailAlertInterfaceOutput {
	return i.ToGetInterfaceFailAlertInterfaceOutputWithContext(context.Background())
}

func (i GetInterfaceFailAlertInterfaceArgs) ToGetInterfaceFailAlertInterfaceOutputWithContext(ctx context.Context) GetInterfaceFailAlertInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceFailAlertInterfaceOutput)
}

// GetInterfaceFailAlertInterfaceArrayInput is an input type that accepts GetInterfaceFailAlertInterfaceArray and GetInterfaceFailAlertInterfaceArrayOutput values.
// You can construct a concrete instance of `GetInterfaceFailAlertInterfaceArrayInput` via:
//
//	GetInterfaceFailAlertInterfaceArray{ GetInterfaceFailAlertInterfaceArgs{...} }
type GetInterfaceFailAlertInterfaceArrayInput interface {
	pulumi.Input

	ToGetInterfaceFailAlertInterfaceArrayOutput() GetInterfaceFailAlertInterfaceArrayOutput
	ToGetInterfaceFailAlertInterfaceArrayOutputWithContext(context.Context) GetInterfaceFailAlertInterfaceArrayOutput
}

type GetInterfaceFailAlertInterfaceArray []GetInterfaceFailAlertInterfaceInput

func (GetInterfaceFailAlertInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceFailAlertInterface)(nil)).Elem()
}

func (i GetInterfaceFailAlertInterfaceArray) ToGetInterfaceFailAlertInterfaceArrayOutput() GetInterfaceFailAlertInterfaceArrayOutput {
	return i.ToGetInterfaceFailAlertInterfaceArrayOutputWithContext(context.Background())
}

func (i GetInterfaceFailAlertInterfaceArray) ToGetInterfaceFailAlertInterfaceArrayOutputWithContext(ctx context.Context) GetInterfaceFailAlertInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceFailAlertInterfaceArrayOutput)
}

type GetInterfaceFailAlertInterfaceOutput struct{ *pulumi.OutputState }

func (GetInterfaceFailAlertInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceFailAlertInterface)(nil)).Elem()
}

func (o GetInterfaceFailAlertInterfaceOutput) ToGetInterfaceFailAlertInterfaceOutput() GetInterfaceFailAlertInterfaceOutput {
	return o
}

func (o GetInterfaceFailAlertInterfaceOutput) ToGetInterfaceFailAlertInterfaceOutputWithContext(ctx context.Context) GetInterfaceFailAlertInterfaceOutput {
	return o
}

// Specify the name of the desired system interface.
func (o GetInterfaceFailAlertInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceFailAlertInterface) string { return v.Name }).(pulumi.StringOutput)
}

type GetInterfaceFailAlertInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceFailAlertInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceFailAlertInterface)(nil)).Elem()
}

func (o GetInterfaceFailAlertInterfaceArrayOutput) ToGetInterfaceFailAlertInterfaceArrayOutput() GetInterfaceFailAlertInterfaceArrayOutput {
	return o
}

func (o GetInterfaceFailAlertInterfaceArrayOutput) ToGetInterfaceFailAlertInterfaceArrayOutputWithContext(ctx context.Context) GetInterfaceFailAlertInterfaceArrayOutput {
	return o
}

func (o GetInterfaceFailAlertInterfaceArrayOutput) Index(i pulumi.IntInput) GetInterfaceFailAlertInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceFailAlertInterface {
		return vs[0].([]GetInterfaceFailAlertInterface)[vs[1].(int)]
	}).(GetInterfaceFailAlertInterfaceOutput)
}

type GetInterfaceIpv6 struct {
	// Enable/disable address auto config.
	Autoconf string `pulumi:"autoconf"`
	// CLI IPv6 connection status.
	CliConn6Status int `pulumi:"cliConn6Status"`
	// DHCPv6 client options.
	Dhcp6ClientOptions string `pulumi:"dhcp6ClientOptions"`
	// DHCPv6 IA-PD list The structure of `dhcp6IapdList` block is documented below.
	Dhcp6IapdLists []GetInterfaceIpv6Dhcp6IapdList `pulumi:"dhcp6IapdLists"`
	// Enable/disable DHCPv6 information request.
	Dhcp6InformationRequest string `pulumi:"dhcp6InformationRequest"`
	// Enable/disable DHCPv6 prefix delegation.
	Dhcp6PrefixDelegation string `pulumi:"dhcp6PrefixDelegation"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	Dhcp6PrefixHint string `pulumi:"dhcp6PrefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	Dhcp6PrefixHintPlt int `pulumi:"dhcp6PrefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	Dhcp6PrefixHintVlt int `pulumi:"dhcp6PrefixHintVlt"`
	// DHCP6 relay interface ID.
	Dhcp6RelayInterfaceId string `pulumi:"dhcp6RelayInterfaceId"`
	// DHCPv6 relay IP address.
	Dhcp6RelayIp string `pulumi:"dhcp6RelayIp"`
	// Enable/disable DHCPv6 relay.
	Dhcp6RelayService string `pulumi:"dhcp6RelayService"`
	// Enable/disable use of address on this interface as the source address of the relay message.
	Dhcp6RelaySourceInterface string `pulumi:"dhcp6RelaySourceInterface"`
	// IPv6 address used by the DHCP6 relay as its source IP.
	Dhcp6RelaySourceIp string `pulumi:"dhcp6RelaySourceIp"`
	// DHCPv6 relay type.
	Dhcp6RelayType string `pulumi:"dhcp6RelayType"`
	// Enable/disable sending of ICMPv6 redirects.
	Icmp6SendRedirect string `pulumi:"icmp6SendRedirect"`
	// IPv6 interface identifier.
	InterfaceIdentifier string `pulumi:"interfaceIdentifier"`
	// Primary IPv6 address prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Address string `pulumi:"ip6Address"`
	// Allow management access to the interface.
	Ip6Allowaccess string `pulumi:"ip6Allowaccess"`
	// Default life (sec).
	Ip6DefaultLife int `pulumi:"ip6DefaultLife"`
	// IAID of obtained delegated-prefix from the upstream interface.
	Ip6DelegatedPrefixIaid int `pulumi:"ip6DelegatedPrefixIaid"`
	// Advertised IPv6 delegated prefix list. The structure of `ip6DelegatedPrefixList` block is documented below.
	Ip6DelegatedPrefixLists []GetInterfaceIpv6Ip6DelegatedPrefixList `pulumi:"ip6DelegatedPrefixLists"`
	// Enable/disable using the DNS server acquired by DHCP.
	Ip6DnsServerOverride string `pulumi:"ip6DnsServerOverride"`
	// Extra IPv6 address prefixes of interface. The structure of `ip6ExtraAddr` block is documented below.
	Ip6ExtraAddrs []GetInterfaceIpv6Ip6ExtraAddr `pulumi:"ip6ExtraAddrs"`
	// Hop limit (0 means unspecified).
	Ip6HopLimit int `pulumi:"ip6HopLimit"`
	// IPv6 link MTU.
	Ip6LinkMtu int `pulumi:"ip6LinkMtu"`
	// Enable/disable the managed flag.
	Ip6ManageFlag string `pulumi:"ip6ManageFlag"`
	// IPv6 maximum interval (4 to 1800 sec).
	Ip6MaxInterval int `pulumi:"ip6MaxInterval"`
	// IPv6 minimum interval (3 to 1350 sec).
	Ip6MinInterval int `pulumi:"ip6MinInterval"`
	// Addressing mode (static, DHCP, delegated).
	Ip6Mode string `pulumi:"ip6Mode"`
	// Enable/disable the other IPv6 flag.
	Ip6OtherFlag string `pulumi:"ip6OtherFlag"`
	// Advertised prefix list. The structure of `ip6PrefixList` block is documented below.
	Ip6PrefixLists []GetInterfaceIpv6Ip6PrefixList `pulumi:"ip6PrefixLists"`
	// Assigning a prefix from DHCP or RA.
	Ip6PrefixMode string `pulumi:"ip6PrefixMode"`
	// IPv6 reachable time (milliseconds; 0 means unspecified).
	Ip6ReachableTime int `pulumi:"ip6ReachableTime"`
	// IPv6 retransmit time (milliseconds; 0 means unspecified).
	Ip6RetransTime int `pulumi:"ip6RetransTime"`
	// Enable/disable sending advertisements about the interface.
	Ip6SendAdv string `pulumi:"ip6SendAdv"`
	// Subnet to routing prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Subnet string `pulumi:"ip6Subnet"`
	// Interface name providing delegated information.
	Ip6UpstreamInterface string `pulumi:"ip6UpstreamInterface"`
	// Neighbor discovery certificate.
	NdCert string `pulumi:"ndCert"`
	// Neighbor discovery CGA modifier.
	NdCgaModifier string `pulumi:"ndCgaModifier"`
	// Neighbor discovery mode.
	NdMode string `pulumi:"ndMode"`
	// Neighbor discovery security level (0 - 7; 0 = least secure, default = 0).
	NdSecurityLevel int `pulumi:"ndSecurityLevel"`
	// Neighbor discovery timestamp delta value (1 - 3600 sec; default = 300).
	NdTimestampDelta int `pulumi:"ndTimestampDelta"`
	// Neighbor discovery timestamp fuzz factor (1 - 60 sec; default = 1).
	NdTimestampFuzz int `pulumi:"ndTimestampFuzz"`
	// Enable/disable sending link MTU in RA packet.
	RaSendMtu string `pulumi:"raSendMtu"`
	// Enable/disable unique auto config address.
	UniqueAutoconfAddr string `pulumi:"uniqueAutoconfAddr"`
	// Link-local IPv6 address of virtual router.
	Vrip6LinkLocal string `pulumi:"vrip6LinkLocal"`
	// IPv6 VRRP configuration. The structure of `vrrp6` block is documented below.
	Vrrp6s []GetInterfaceIpv6Vrrp6 `pulumi:"vrrp6s"`
	// Enable/disable virtual MAC for VRRP.
	VrrpVirtualMac6 string `pulumi:"vrrpVirtualMac6"`
}

// GetInterfaceIpv6Input is an input type that accepts GetInterfaceIpv6Args and GetInterfaceIpv6Output values.
// You can construct a concrete instance of `GetInterfaceIpv6Input` via:
//
//	GetInterfaceIpv6Args{...}
type GetInterfaceIpv6Input interface {
	pulumi.Input

	ToGetInterfaceIpv6Output() GetInterfaceIpv6Output
	ToGetInterfaceIpv6OutputWithContext(context.Context) GetInterfaceIpv6Output
}

type GetInterfaceIpv6Args struct {
	// Enable/disable address auto config.
	Autoconf pulumi.StringInput `pulumi:"autoconf"`
	// CLI IPv6 connection status.
	CliConn6Status pulumi.IntInput `pulumi:"cliConn6Status"`
	// DHCPv6 client options.
	Dhcp6ClientOptions pulumi.StringInput `pulumi:"dhcp6ClientOptions"`
	// DHCPv6 IA-PD list The structure of `dhcp6IapdList` block is documented below.
	Dhcp6IapdLists GetInterfaceIpv6Dhcp6IapdListArrayInput `pulumi:"dhcp6IapdLists"`
	// Enable/disable DHCPv6 information request.
	Dhcp6InformationRequest pulumi.StringInput `pulumi:"dhcp6InformationRequest"`
	// Enable/disable DHCPv6 prefix delegation.
	Dhcp6PrefixDelegation pulumi.StringInput `pulumi:"dhcp6PrefixDelegation"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	Dhcp6PrefixHint pulumi.StringInput `pulumi:"dhcp6PrefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	Dhcp6PrefixHintPlt pulumi.IntInput `pulumi:"dhcp6PrefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	Dhcp6PrefixHintVlt pulumi.IntInput `pulumi:"dhcp6PrefixHintVlt"`
	// DHCP6 relay interface ID.
	Dhcp6RelayInterfaceId pulumi.StringInput `pulumi:"dhcp6RelayInterfaceId"`
	// DHCPv6 relay IP address.
	Dhcp6RelayIp pulumi.StringInput `pulumi:"dhcp6RelayIp"`
	// Enable/disable DHCPv6 relay.
	Dhcp6RelayService pulumi.StringInput `pulumi:"dhcp6RelayService"`
	// Enable/disable use of address on this interface as the source address of the relay message.
	Dhcp6RelaySourceInterface pulumi.StringInput `pulumi:"dhcp6RelaySourceInterface"`
	// IPv6 address used by the DHCP6 relay as its source IP.
	Dhcp6RelaySourceIp pulumi.StringInput `pulumi:"dhcp6RelaySourceIp"`
	// DHCPv6 relay type.
	Dhcp6RelayType pulumi.StringInput `pulumi:"dhcp6RelayType"`
	// Enable/disable sending of ICMPv6 redirects.
	Icmp6SendRedirect pulumi.StringInput `pulumi:"icmp6SendRedirect"`
	// IPv6 interface identifier.
	InterfaceIdentifier pulumi.StringInput `pulumi:"interfaceIdentifier"`
	// Primary IPv6 address prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Address pulumi.StringInput `pulumi:"ip6Address"`
	// Allow management access to the interface.
	Ip6Allowaccess pulumi.StringInput `pulumi:"ip6Allowaccess"`
	// Default life (sec).
	Ip6DefaultLife pulumi.IntInput `pulumi:"ip6DefaultLife"`
	// IAID of obtained delegated-prefix from the upstream interface.
	Ip6DelegatedPrefixIaid pulumi.IntInput `pulumi:"ip6DelegatedPrefixIaid"`
	// Advertised IPv6 delegated prefix list. The structure of `ip6DelegatedPrefixList` block is documented below.
	Ip6DelegatedPrefixLists GetInterfaceIpv6Ip6DelegatedPrefixListArrayInput `pulumi:"ip6DelegatedPrefixLists"`
	// Enable/disable using the DNS server acquired by DHCP.
	Ip6DnsServerOverride pulumi.StringInput `pulumi:"ip6DnsServerOverride"`
	// Extra IPv6 address prefixes of interface. The structure of `ip6ExtraAddr` block is documented below.
	Ip6ExtraAddrs GetInterfaceIpv6Ip6ExtraAddrArrayInput `pulumi:"ip6ExtraAddrs"`
	// Hop limit (0 means unspecified).
	Ip6HopLimit pulumi.IntInput `pulumi:"ip6HopLimit"`
	// IPv6 link MTU.
	Ip6LinkMtu pulumi.IntInput `pulumi:"ip6LinkMtu"`
	// Enable/disable the managed flag.
	Ip6ManageFlag pulumi.StringInput `pulumi:"ip6ManageFlag"`
	// IPv6 maximum interval (4 to 1800 sec).
	Ip6MaxInterval pulumi.IntInput `pulumi:"ip6MaxInterval"`
	// IPv6 minimum interval (3 to 1350 sec).
	Ip6MinInterval pulumi.IntInput `pulumi:"ip6MinInterval"`
	// Addressing mode (static, DHCP, delegated).
	Ip6Mode pulumi.StringInput `pulumi:"ip6Mode"`
	// Enable/disable the other IPv6 flag.
	Ip6OtherFlag pulumi.StringInput `pulumi:"ip6OtherFlag"`
	// Advertised prefix list. The structure of `ip6PrefixList` block is documented below.
	Ip6PrefixLists GetInterfaceIpv6Ip6PrefixListArrayInput `pulumi:"ip6PrefixLists"`
	// Assigning a prefix from DHCP or RA.
	Ip6PrefixMode pulumi.StringInput `pulumi:"ip6PrefixMode"`
	// IPv6 reachable time (milliseconds; 0 means unspecified).
	Ip6ReachableTime pulumi.IntInput `pulumi:"ip6ReachableTime"`
	// IPv6 retransmit time (milliseconds; 0 means unspecified).
	Ip6RetransTime pulumi.IntInput `pulumi:"ip6RetransTime"`
	// Enable/disable sending advertisements about the interface.
	Ip6SendAdv pulumi.StringInput `pulumi:"ip6SendAdv"`
	// Subnet to routing prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Subnet pulumi.StringInput `pulumi:"ip6Subnet"`
	// Interface name providing delegated information.
	Ip6UpstreamInterface pulumi.StringInput `pulumi:"ip6UpstreamInterface"`
	// Neighbor discovery certificate.
	NdCert pulumi.StringInput `pulumi:"ndCert"`
	// Neighbor discovery CGA modifier.
	NdCgaModifier pulumi.StringInput `pulumi:"ndCgaModifier"`
	// Neighbor discovery mode.
	NdMode pulumi.StringInput `pulumi:"ndMode"`
	// Neighbor discovery security level (0 - 7; 0 = least secure, default = 0).
	NdSecurityLevel pulumi.IntInput `pulumi:"ndSecurityLevel"`
	// Neighbor discovery timestamp delta value (1 - 3600 sec; default = 300).
	NdTimestampDelta pulumi.IntInput `pulumi:"ndTimestampDelta"`
	// Neighbor discovery timestamp fuzz factor (1 - 60 sec; default = 1).
	NdTimestampFuzz pulumi.IntInput `pulumi:"ndTimestampFuzz"`
	// Enable/disable sending link MTU in RA packet.
	RaSendMtu pulumi.StringInput `pulumi:"raSendMtu"`
	// Enable/disable unique auto config address.
	UniqueAutoconfAddr pulumi.StringInput `pulumi:"uniqueAutoconfAddr"`
	// Link-local IPv6 address of virtual router.
	Vrip6LinkLocal pulumi.StringInput `pulumi:"vrip6LinkLocal"`
	// IPv6 VRRP configuration. The structure of `vrrp6` block is documented below.
	Vrrp6s GetInterfaceIpv6Vrrp6ArrayInput `pulumi:"vrrp6s"`
	// Enable/disable virtual MAC for VRRP.
	VrrpVirtualMac6 pulumi.StringInput `pulumi:"vrrpVirtualMac6"`
}

func (GetInterfaceIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6)(nil)).Elem()
}

func (i GetInterfaceIpv6Args) ToGetInterfaceIpv6Output() GetInterfaceIpv6Output {
	return i.ToGetInterfaceIpv6OutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Args) ToGetInterfaceIpv6OutputWithContext(ctx context.Context) GetInterfaceIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Output)
}

// GetInterfaceIpv6ArrayInput is an input type that accepts GetInterfaceIpv6Array and GetInterfaceIpv6ArrayOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6ArrayInput` via:
//
//	GetInterfaceIpv6Array{ GetInterfaceIpv6Args{...} }
type GetInterfaceIpv6ArrayInput interface {
	pulumi.Input

	ToGetInterfaceIpv6ArrayOutput() GetInterfaceIpv6ArrayOutput
	ToGetInterfaceIpv6ArrayOutputWithContext(context.Context) GetInterfaceIpv6ArrayOutput
}

type GetInterfaceIpv6Array []GetInterfaceIpv6Input

func (GetInterfaceIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6)(nil)).Elem()
}

func (i GetInterfaceIpv6Array) ToGetInterfaceIpv6ArrayOutput() GetInterfaceIpv6ArrayOutput {
	return i.ToGetInterfaceIpv6ArrayOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Array) ToGetInterfaceIpv6ArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6ArrayOutput)
}

type GetInterfaceIpv6Output struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6)(nil)).Elem()
}

func (o GetInterfaceIpv6Output) ToGetInterfaceIpv6Output() GetInterfaceIpv6Output {
	return o
}

func (o GetInterfaceIpv6Output) ToGetInterfaceIpv6OutputWithContext(ctx context.Context) GetInterfaceIpv6Output {
	return o
}

// Enable/disable address auto config.
func (o GetInterfaceIpv6Output) Autoconf() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Autoconf }).(pulumi.StringOutput)
}

// CLI IPv6 connection status.
func (o GetInterfaceIpv6Output) CliConn6Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.CliConn6Status }).(pulumi.IntOutput)
}

// DHCPv6 client options.
func (o GetInterfaceIpv6Output) Dhcp6ClientOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Dhcp6ClientOptions }).(pulumi.StringOutput)
}

// DHCPv6 IA-PD list The structure of `dhcp6IapdList` block is documented below.
func (o GetInterfaceIpv6Output) Dhcp6IapdLists() GetInterfaceIpv6Dhcp6IapdListArrayOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) []GetInterfaceIpv6Dhcp6IapdList { return v.Dhcp6IapdLists }).(GetInterfaceIpv6Dhcp6IapdListArrayOutput)
}

// Enable/disable DHCPv6 information request.
func (o GetInterfaceIpv6Output) Dhcp6InformationRequest() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Dhcp6InformationRequest }).(pulumi.StringOutput)
}

// Enable/disable DHCPv6 prefix delegation.
func (o GetInterfaceIpv6Output) Dhcp6PrefixDelegation() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Dhcp6PrefixDelegation }).(pulumi.StringOutput)
}

// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
func (o GetInterfaceIpv6Output) Dhcp6PrefixHint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Dhcp6PrefixHint }).(pulumi.StringOutput)
}

// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
func (o GetInterfaceIpv6Output) Dhcp6PrefixHintPlt() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.Dhcp6PrefixHintPlt }).(pulumi.IntOutput)
}

// DHCPv6 prefix hint valid life time (sec).
func (o GetInterfaceIpv6Output) Dhcp6PrefixHintVlt() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.Dhcp6PrefixHintVlt }).(pulumi.IntOutput)
}

// DHCP6 relay interface ID.
func (o GetInterfaceIpv6Output) Dhcp6RelayInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Dhcp6RelayInterfaceId }).(pulumi.StringOutput)
}

// DHCPv6 relay IP address.
func (o GetInterfaceIpv6Output) Dhcp6RelayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Dhcp6RelayIp }).(pulumi.StringOutput)
}

// Enable/disable DHCPv6 relay.
func (o GetInterfaceIpv6Output) Dhcp6RelayService() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Dhcp6RelayService }).(pulumi.StringOutput)
}

// Enable/disable use of address on this interface as the source address of the relay message.
func (o GetInterfaceIpv6Output) Dhcp6RelaySourceInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Dhcp6RelaySourceInterface }).(pulumi.StringOutput)
}

// IPv6 address used by the DHCP6 relay as its source IP.
func (o GetInterfaceIpv6Output) Dhcp6RelaySourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Dhcp6RelaySourceIp }).(pulumi.StringOutput)
}

// DHCPv6 relay type.
func (o GetInterfaceIpv6Output) Dhcp6RelayType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Dhcp6RelayType }).(pulumi.StringOutput)
}

// Enable/disable sending of ICMPv6 redirects.
func (o GetInterfaceIpv6Output) Icmp6SendRedirect() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Icmp6SendRedirect }).(pulumi.StringOutput)
}

// IPv6 interface identifier.
func (o GetInterfaceIpv6Output) InterfaceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.InterfaceIdentifier }).(pulumi.StringOutput)
}

// Primary IPv6 address prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
func (o GetInterfaceIpv6Output) Ip6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Ip6Address }).(pulumi.StringOutput)
}

// Allow management access to the interface.
func (o GetInterfaceIpv6Output) Ip6Allowaccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Ip6Allowaccess }).(pulumi.StringOutput)
}

// Default life (sec).
func (o GetInterfaceIpv6Output) Ip6DefaultLife() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.Ip6DefaultLife }).(pulumi.IntOutput)
}

// IAID of obtained delegated-prefix from the upstream interface.
func (o GetInterfaceIpv6Output) Ip6DelegatedPrefixIaid() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.Ip6DelegatedPrefixIaid }).(pulumi.IntOutput)
}

// Advertised IPv6 delegated prefix list. The structure of `ip6DelegatedPrefixList` block is documented below.
func (o GetInterfaceIpv6Output) Ip6DelegatedPrefixLists() GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) []GetInterfaceIpv6Ip6DelegatedPrefixList { return v.Ip6DelegatedPrefixLists }).(GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput)
}

// Enable/disable using the DNS server acquired by DHCP.
func (o GetInterfaceIpv6Output) Ip6DnsServerOverride() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Ip6DnsServerOverride }).(pulumi.StringOutput)
}

// Extra IPv6 address prefixes of interface. The structure of `ip6ExtraAddr` block is documented below.
func (o GetInterfaceIpv6Output) Ip6ExtraAddrs() GetInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) []GetInterfaceIpv6Ip6ExtraAddr { return v.Ip6ExtraAddrs }).(GetInterfaceIpv6Ip6ExtraAddrArrayOutput)
}

// Hop limit (0 means unspecified).
func (o GetInterfaceIpv6Output) Ip6HopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.Ip6HopLimit }).(pulumi.IntOutput)
}

// IPv6 link MTU.
func (o GetInterfaceIpv6Output) Ip6LinkMtu() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.Ip6LinkMtu }).(pulumi.IntOutput)
}

// Enable/disable the managed flag.
func (o GetInterfaceIpv6Output) Ip6ManageFlag() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Ip6ManageFlag }).(pulumi.StringOutput)
}

// IPv6 maximum interval (4 to 1800 sec).
func (o GetInterfaceIpv6Output) Ip6MaxInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.Ip6MaxInterval }).(pulumi.IntOutput)
}

// IPv6 minimum interval (3 to 1350 sec).
func (o GetInterfaceIpv6Output) Ip6MinInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.Ip6MinInterval }).(pulumi.IntOutput)
}

// Addressing mode (static, DHCP, delegated).
func (o GetInterfaceIpv6Output) Ip6Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Ip6Mode }).(pulumi.StringOutput)
}

// Enable/disable the other IPv6 flag.
func (o GetInterfaceIpv6Output) Ip6OtherFlag() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Ip6OtherFlag }).(pulumi.StringOutput)
}

// Advertised prefix list. The structure of `ip6PrefixList` block is documented below.
func (o GetInterfaceIpv6Output) Ip6PrefixLists() GetInterfaceIpv6Ip6PrefixListArrayOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) []GetInterfaceIpv6Ip6PrefixList { return v.Ip6PrefixLists }).(GetInterfaceIpv6Ip6PrefixListArrayOutput)
}

// Assigning a prefix from DHCP or RA.
func (o GetInterfaceIpv6Output) Ip6PrefixMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Ip6PrefixMode }).(pulumi.StringOutput)
}

// IPv6 reachable time (milliseconds; 0 means unspecified).
func (o GetInterfaceIpv6Output) Ip6ReachableTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.Ip6ReachableTime }).(pulumi.IntOutput)
}

// IPv6 retransmit time (milliseconds; 0 means unspecified).
func (o GetInterfaceIpv6Output) Ip6RetransTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.Ip6RetransTime }).(pulumi.IntOutput)
}

// Enable/disable sending advertisements about the interface.
func (o GetInterfaceIpv6Output) Ip6SendAdv() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Ip6SendAdv }).(pulumi.StringOutput)
}

// Subnet to routing prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
func (o GetInterfaceIpv6Output) Ip6Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Ip6Subnet }).(pulumi.StringOutput)
}

// Interface name providing delegated information.
func (o GetInterfaceIpv6Output) Ip6UpstreamInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Ip6UpstreamInterface }).(pulumi.StringOutput)
}

// Neighbor discovery certificate.
func (o GetInterfaceIpv6Output) NdCert() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.NdCert }).(pulumi.StringOutput)
}

// Neighbor discovery CGA modifier.
func (o GetInterfaceIpv6Output) NdCgaModifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.NdCgaModifier }).(pulumi.StringOutput)
}

// Neighbor discovery mode.
func (o GetInterfaceIpv6Output) NdMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.NdMode }).(pulumi.StringOutput)
}

// Neighbor discovery security level (0 - 7; 0 = least secure, default = 0).
func (o GetInterfaceIpv6Output) NdSecurityLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.NdSecurityLevel }).(pulumi.IntOutput)
}

// Neighbor discovery timestamp delta value (1 - 3600 sec; default = 300).
func (o GetInterfaceIpv6Output) NdTimestampDelta() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.NdTimestampDelta }).(pulumi.IntOutput)
}

// Neighbor discovery timestamp fuzz factor (1 - 60 sec; default = 1).
func (o GetInterfaceIpv6Output) NdTimestampFuzz() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) int { return v.NdTimestampFuzz }).(pulumi.IntOutput)
}

// Enable/disable sending link MTU in RA packet.
func (o GetInterfaceIpv6Output) RaSendMtu() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.RaSendMtu }).(pulumi.StringOutput)
}

// Enable/disable unique auto config address.
func (o GetInterfaceIpv6Output) UniqueAutoconfAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.UniqueAutoconfAddr }).(pulumi.StringOutput)
}

// Link-local IPv6 address of virtual router.
func (o GetInterfaceIpv6Output) Vrip6LinkLocal() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.Vrip6LinkLocal }).(pulumi.StringOutput)
}

// IPv6 VRRP configuration. The structure of `vrrp6` block is documented below.
func (o GetInterfaceIpv6Output) Vrrp6s() GetInterfaceIpv6Vrrp6ArrayOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) []GetInterfaceIpv6Vrrp6 { return v.Vrrp6s }).(GetInterfaceIpv6Vrrp6ArrayOutput)
}

// Enable/disable virtual MAC for VRRP.
func (o GetInterfaceIpv6Output) VrrpVirtualMac6() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6) string { return v.VrrpVirtualMac6 }).(pulumi.StringOutput)
}

type GetInterfaceIpv6ArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6)(nil)).Elem()
}

func (o GetInterfaceIpv6ArrayOutput) ToGetInterfaceIpv6ArrayOutput() GetInterfaceIpv6ArrayOutput {
	return o
}

func (o GetInterfaceIpv6ArrayOutput) ToGetInterfaceIpv6ArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6ArrayOutput {
	return o
}

func (o GetInterfaceIpv6ArrayOutput) Index(i pulumi.IntInput) GetInterfaceIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceIpv6 {
		return vs[0].([]GetInterfaceIpv6)[vs[1].(int)]
	}).(GetInterfaceIpv6Output)
}

type GetInterfaceIpv6Dhcp6IapdList struct {
	// Identity association identifier.
	Iaid int `pulumi:"iaid"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	PrefixHint string `pulumi:"prefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	PrefixHintPlt int `pulumi:"prefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	PrefixHintVlt int `pulumi:"prefixHintVlt"`
}

// GetInterfaceIpv6Dhcp6IapdListInput is an input type that accepts GetInterfaceIpv6Dhcp6IapdListArgs and GetInterfaceIpv6Dhcp6IapdListOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6Dhcp6IapdListInput` via:
//
//	GetInterfaceIpv6Dhcp6IapdListArgs{...}
type GetInterfaceIpv6Dhcp6IapdListInput interface {
	pulumi.Input

	ToGetInterfaceIpv6Dhcp6IapdListOutput() GetInterfaceIpv6Dhcp6IapdListOutput
	ToGetInterfaceIpv6Dhcp6IapdListOutputWithContext(context.Context) GetInterfaceIpv6Dhcp6IapdListOutput
}

type GetInterfaceIpv6Dhcp6IapdListArgs struct {
	// Identity association identifier.
	Iaid pulumi.IntInput `pulumi:"iaid"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	PrefixHint pulumi.StringInput `pulumi:"prefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	PrefixHintPlt pulumi.IntInput `pulumi:"prefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	PrefixHintVlt pulumi.IntInput `pulumi:"prefixHintVlt"`
}

func (GetInterfaceIpv6Dhcp6IapdListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (i GetInterfaceIpv6Dhcp6IapdListArgs) ToGetInterfaceIpv6Dhcp6IapdListOutput() GetInterfaceIpv6Dhcp6IapdListOutput {
	return i.ToGetInterfaceIpv6Dhcp6IapdListOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Dhcp6IapdListArgs) ToGetInterfaceIpv6Dhcp6IapdListOutputWithContext(ctx context.Context) GetInterfaceIpv6Dhcp6IapdListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Dhcp6IapdListOutput)
}

// GetInterfaceIpv6Dhcp6IapdListArrayInput is an input type that accepts GetInterfaceIpv6Dhcp6IapdListArray and GetInterfaceIpv6Dhcp6IapdListArrayOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6Dhcp6IapdListArrayInput` via:
//
//	GetInterfaceIpv6Dhcp6IapdListArray{ GetInterfaceIpv6Dhcp6IapdListArgs{...} }
type GetInterfaceIpv6Dhcp6IapdListArrayInput interface {
	pulumi.Input

	ToGetInterfaceIpv6Dhcp6IapdListArrayOutput() GetInterfaceIpv6Dhcp6IapdListArrayOutput
	ToGetInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(context.Context) GetInterfaceIpv6Dhcp6IapdListArrayOutput
}

type GetInterfaceIpv6Dhcp6IapdListArray []GetInterfaceIpv6Dhcp6IapdListInput

func (GetInterfaceIpv6Dhcp6IapdListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (i GetInterfaceIpv6Dhcp6IapdListArray) ToGetInterfaceIpv6Dhcp6IapdListArrayOutput() GetInterfaceIpv6Dhcp6IapdListArrayOutput {
	return i.ToGetInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Dhcp6IapdListArray) ToGetInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Dhcp6IapdListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Dhcp6IapdListArrayOutput)
}

type GetInterfaceIpv6Dhcp6IapdListOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Dhcp6IapdListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (o GetInterfaceIpv6Dhcp6IapdListOutput) ToGetInterfaceIpv6Dhcp6IapdListOutput() GetInterfaceIpv6Dhcp6IapdListOutput {
	return o
}

func (o GetInterfaceIpv6Dhcp6IapdListOutput) ToGetInterfaceIpv6Dhcp6IapdListOutputWithContext(ctx context.Context) GetInterfaceIpv6Dhcp6IapdListOutput {
	return o
}

// Identity association identifier.
func (o GetInterfaceIpv6Dhcp6IapdListOutput) Iaid() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Dhcp6IapdList) int { return v.Iaid }).(pulumi.IntOutput)
}

// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
func (o GetInterfaceIpv6Dhcp6IapdListOutput) PrefixHint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Dhcp6IapdList) string { return v.PrefixHint }).(pulumi.StringOutput)
}

// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
func (o GetInterfaceIpv6Dhcp6IapdListOutput) PrefixHintPlt() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Dhcp6IapdList) int { return v.PrefixHintPlt }).(pulumi.IntOutput)
}

// DHCPv6 prefix hint valid life time (sec).
func (o GetInterfaceIpv6Dhcp6IapdListOutput) PrefixHintVlt() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Dhcp6IapdList) int { return v.PrefixHintVlt }).(pulumi.IntOutput)
}

type GetInterfaceIpv6Dhcp6IapdListArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Dhcp6IapdListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (o GetInterfaceIpv6Dhcp6IapdListArrayOutput) ToGetInterfaceIpv6Dhcp6IapdListArrayOutput() GetInterfaceIpv6Dhcp6IapdListArrayOutput {
	return o
}

func (o GetInterfaceIpv6Dhcp6IapdListArrayOutput) ToGetInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Dhcp6IapdListArrayOutput {
	return o
}

func (o GetInterfaceIpv6Dhcp6IapdListArrayOutput) Index(i pulumi.IntInput) GetInterfaceIpv6Dhcp6IapdListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceIpv6Dhcp6IapdList {
		return vs[0].([]GetInterfaceIpv6Dhcp6IapdList)[vs[1].(int)]
	}).(GetInterfaceIpv6Dhcp6IapdListOutput)
}

type GetInterfaceIpv6Ip6DelegatedPrefixList struct {
	// Enable/disable the autonomous flag.
	AutonomousFlag string `pulumi:"autonomousFlag"`
	// IAID of obtained delegated-prefix from the upstream interface.
	DelegatedPrefixIaid int `pulumi:"delegatedPrefixIaid"`
	// Enable/disable the onlink flag.
	OnlinkFlag string `pulumi:"onlinkFlag"`
	// Prefix ID.
	PrefixId int `pulumi:"prefixId"`
	// Recursive DNS server option.
	Rdnss string `pulumi:"rdnss"`
	// Recursive DNS service option.
	RdnssService string `pulumi:"rdnssService"`
	// Add subnet ID to routing prefix.
	Subnet string `pulumi:"subnet"`
	// Name of the interface that provides delegated information.
	UpstreamInterface string `pulumi:"upstreamInterface"`
}

// GetInterfaceIpv6Ip6DelegatedPrefixListInput is an input type that accepts GetInterfaceIpv6Ip6DelegatedPrefixListArgs and GetInterfaceIpv6Ip6DelegatedPrefixListOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6Ip6DelegatedPrefixListInput` via:
//
//	GetInterfaceIpv6Ip6DelegatedPrefixListArgs{...}
type GetInterfaceIpv6Ip6DelegatedPrefixListInput interface {
	pulumi.Input

	ToGetInterfaceIpv6Ip6DelegatedPrefixListOutput() GetInterfaceIpv6Ip6DelegatedPrefixListOutput
	ToGetInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(context.Context) GetInterfaceIpv6Ip6DelegatedPrefixListOutput
}

type GetInterfaceIpv6Ip6DelegatedPrefixListArgs struct {
	// Enable/disable the autonomous flag.
	AutonomousFlag pulumi.StringInput `pulumi:"autonomousFlag"`
	// IAID of obtained delegated-prefix from the upstream interface.
	DelegatedPrefixIaid pulumi.IntInput `pulumi:"delegatedPrefixIaid"`
	// Enable/disable the onlink flag.
	OnlinkFlag pulumi.StringInput `pulumi:"onlinkFlag"`
	// Prefix ID.
	PrefixId pulumi.IntInput `pulumi:"prefixId"`
	// Recursive DNS server option.
	Rdnss pulumi.StringInput `pulumi:"rdnss"`
	// Recursive DNS service option.
	RdnssService pulumi.StringInput `pulumi:"rdnssService"`
	// Add subnet ID to routing prefix.
	Subnet pulumi.StringInput `pulumi:"subnet"`
	// Name of the interface that provides delegated information.
	UpstreamInterface pulumi.StringInput `pulumi:"upstreamInterface"`
}

func (GetInterfaceIpv6Ip6DelegatedPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (i GetInterfaceIpv6Ip6DelegatedPrefixListArgs) ToGetInterfaceIpv6Ip6DelegatedPrefixListOutput() GetInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return i.ToGetInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Ip6DelegatedPrefixListArgs) ToGetInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Ip6DelegatedPrefixListOutput)
}

// GetInterfaceIpv6Ip6DelegatedPrefixListArrayInput is an input type that accepts GetInterfaceIpv6Ip6DelegatedPrefixListArray and GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6Ip6DelegatedPrefixListArrayInput` via:
//
//	GetInterfaceIpv6Ip6DelegatedPrefixListArray{ GetInterfaceIpv6Ip6DelegatedPrefixListArgs{...} }
type GetInterfaceIpv6Ip6DelegatedPrefixListArrayInput interface {
	pulumi.Input

	ToGetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput
	ToGetInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(context.Context) GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput
}

type GetInterfaceIpv6Ip6DelegatedPrefixListArray []GetInterfaceIpv6Ip6DelegatedPrefixListInput

func (GetInterfaceIpv6Ip6DelegatedPrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (i GetInterfaceIpv6Ip6DelegatedPrefixListArray) ToGetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return i.ToGetInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Ip6DelegatedPrefixListArray) ToGetInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput)
}

type GetInterfaceIpv6Ip6DelegatedPrefixListOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Ip6DelegatedPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (o GetInterfaceIpv6Ip6DelegatedPrefixListOutput) ToGetInterfaceIpv6Ip6DelegatedPrefixListOutput() GetInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return o
}

func (o GetInterfaceIpv6Ip6DelegatedPrefixListOutput) ToGetInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return o
}

// Enable/disable the autonomous flag.
func (o GetInterfaceIpv6Ip6DelegatedPrefixListOutput) AutonomousFlag() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6DelegatedPrefixList) string { return v.AutonomousFlag }).(pulumi.StringOutput)
}

// IAID of obtained delegated-prefix from the upstream interface.
func (o GetInterfaceIpv6Ip6DelegatedPrefixListOutput) DelegatedPrefixIaid() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6DelegatedPrefixList) int { return v.DelegatedPrefixIaid }).(pulumi.IntOutput)
}

// Enable/disable the onlink flag.
func (o GetInterfaceIpv6Ip6DelegatedPrefixListOutput) OnlinkFlag() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6DelegatedPrefixList) string { return v.OnlinkFlag }).(pulumi.StringOutput)
}

// Prefix ID.
func (o GetInterfaceIpv6Ip6DelegatedPrefixListOutput) PrefixId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6DelegatedPrefixList) int { return v.PrefixId }).(pulumi.IntOutput)
}

// Recursive DNS server option.
func (o GetInterfaceIpv6Ip6DelegatedPrefixListOutput) Rdnss() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6DelegatedPrefixList) string { return v.Rdnss }).(pulumi.StringOutput)
}

// Recursive DNS service option.
func (o GetInterfaceIpv6Ip6DelegatedPrefixListOutput) RdnssService() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6DelegatedPrefixList) string { return v.RdnssService }).(pulumi.StringOutput)
}

// Add subnet ID to routing prefix.
func (o GetInterfaceIpv6Ip6DelegatedPrefixListOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6DelegatedPrefixList) string { return v.Subnet }).(pulumi.StringOutput)
}

// Name of the interface that provides delegated information.
func (o GetInterfaceIpv6Ip6DelegatedPrefixListOutput) UpstreamInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6DelegatedPrefixList) string { return v.UpstreamInterface }).(pulumi.StringOutput)
}

type GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (o GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ToGetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o
}

func (o GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ToGetInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o
}

func (o GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) Index(i pulumi.IntInput) GetInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceIpv6Ip6DelegatedPrefixList {
		return vs[0].([]GetInterfaceIpv6Ip6DelegatedPrefixList)[vs[1].(int)]
	}).(GetInterfaceIpv6Ip6DelegatedPrefixListOutput)
}

type GetInterfaceIpv6Ip6ExtraAddr struct {
	// IPv6 prefix.
	Prefix string `pulumi:"prefix"`
}

// GetInterfaceIpv6Ip6ExtraAddrInput is an input type that accepts GetInterfaceIpv6Ip6ExtraAddrArgs and GetInterfaceIpv6Ip6ExtraAddrOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6Ip6ExtraAddrInput` via:
//
//	GetInterfaceIpv6Ip6ExtraAddrArgs{...}
type GetInterfaceIpv6Ip6ExtraAddrInput interface {
	pulumi.Input

	ToGetInterfaceIpv6Ip6ExtraAddrOutput() GetInterfaceIpv6Ip6ExtraAddrOutput
	ToGetInterfaceIpv6Ip6ExtraAddrOutputWithContext(context.Context) GetInterfaceIpv6Ip6ExtraAddrOutput
}

type GetInterfaceIpv6Ip6ExtraAddrArgs struct {
	// IPv6 prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetInterfaceIpv6Ip6ExtraAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (i GetInterfaceIpv6Ip6ExtraAddrArgs) ToGetInterfaceIpv6Ip6ExtraAddrOutput() GetInterfaceIpv6Ip6ExtraAddrOutput {
	return i.ToGetInterfaceIpv6Ip6ExtraAddrOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Ip6ExtraAddrArgs) ToGetInterfaceIpv6Ip6ExtraAddrOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6ExtraAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Ip6ExtraAddrOutput)
}

// GetInterfaceIpv6Ip6ExtraAddrArrayInput is an input type that accepts GetInterfaceIpv6Ip6ExtraAddrArray and GetInterfaceIpv6Ip6ExtraAddrArrayOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6Ip6ExtraAddrArrayInput` via:
//
//	GetInterfaceIpv6Ip6ExtraAddrArray{ GetInterfaceIpv6Ip6ExtraAddrArgs{...} }
type GetInterfaceIpv6Ip6ExtraAddrArrayInput interface {
	pulumi.Input

	ToGetInterfaceIpv6Ip6ExtraAddrArrayOutput() GetInterfaceIpv6Ip6ExtraAddrArrayOutput
	ToGetInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(context.Context) GetInterfaceIpv6Ip6ExtraAddrArrayOutput
}

type GetInterfaceIpv6Ip6ExtraAddrArray []GetInterfaceIpv6Ip6ExtraAddrInput

func (GetInterfaceIpv6Ip6ExtraAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (i GetInterfaceIpv6Ip6ExtraAddrArray) ToGetInterfaceIpv6Ip6ExtraAddrArrayOutput() GetInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return i.ToGetInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Ip6ExtraAddrArray) ToGetInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Ip6ExtraAddrArrayOutput)
}

type GetInterfaceIpv6Ip6ExtraAddrOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Ip6ExtraAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (o GetInterfaceIpv6Ip6ExtraAddrOutput) ToGetInterfaceIpv6Ip6ExtraAddrOutput() GetInterfaceIpv6Ip6ExtraAddrOutput {
	return o
}

func (o GetInterfaceIpv6Ip6ExtraAddrOutput) ToGetInterfaceIpv6Ip6ExtraAddrOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6ExtraAddrOutput {
	return o
}

// IPv6 prefix.
func (o GetInterfaceIpv6Ip6ExtraAddrOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6ExtraAddr) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetInterfaceIpv6Ip6ExtraAddrArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Ip6ExtraAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (o GetInterfaceIpv6Ip6ExtraAddrArrayOutput) ToGetInterfaceIpv6Ip6ExtraAddrArrayOutput() GetInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o
}

func (o GetInterfaceIpv6Ip6ExtraAddrArrayOutput) ToGetInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o
}

func (o GetInterfaceIpv6Ip6ExtraAddrArrayOutput) Index(i pulumi.IntInput) GetInterfaceIpv6Ip6ExtraAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceIpv6Ip6ExtraAddr {
		return vs[0].([]GetInterfaceIpv6Ip6ExtraAddr)[vs[1].(int)]
	}).(GetInterfaceIpv6Ip6ExtraAddrOutput)
}

type GetInterfaceIpv6Ip6PrefixList struct {
	// Enable/disable the autonomous flag.
	AutonomousFlag string `pulumi:"autonomousFlag"`
	// DNS search list option. The structure of `dnssl` block is documented below.
	Dnssls []GetInterfaceIpv6Ip6PrefixListDnssl `pulumi:"dnssls"`
	// Enable/disable the onlink flag.
	OnlinkFlag string `pulumi:"onlinkFlag"`
	// Preferred life time (sec).
	PreferredLifeTime int `pulumi:"preferredLifeTime"`
	// IPv6 prefix.
	Prefix string `pulumi:"prefix"`
	// Recursive DNS server option.
	Rdnss string `pulumi:"rdnss"`
	// Valid life time (sec).
	ValidLifeTime int `pulumi:"validLifeTime"`
}

// GetInterfaceIpv6Ip6PrefixListInput is an input type that accepts GetInterfaceIpv6Ip6PrefixListArgs and GetInterfaceIpv6Ip6PrefixListOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6Ip6PrefixListInput` via:
//
//	GetInterfaceIpv6Ip6PrefixListArgs{...}
type GetInterfaceIpv6Ip6PrefixListInput interface {
	pulumi.Input

	ToGetInterfaceIpv6Ip6PrefixListOutput() GetInterfaceIpv6Ip6PrefixListOutput
	ToGetInterfaceIpv6Ip6PrefixListOutputWithContext(context.Context) GetInterfaceIpv6Ip6PrefixListOutput
}

type GetInterfaceIpv6Ip6PrefixListArgs struct {
	// Enable/disable the autonomous flag.
	AutonomousFlag pulumi.StringInput `pulumi:"autonomousFlag"`
	// DNS search list option. The structure of `dnssl` block is documented below.
	Dnssls GetInterfaceIpv6Ip6PrefixListDnsslArrayInput `pulumi:"dnssls"`
	// Enable/disable the onlink flag.
	OnlinkFlag pulumi.StringInput `pulumi:"onlinkFlag"`
	// Preferred life time (sec).
	PreferredLifeTime pulumi.IntInput `pulumi:"preferredLifeTime"`
	// IPv6 prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Recursive DNS server option.
	Rdnss pulumi.StringInput `pulumi:"rdnss"`
	// Valid life time (sec).
	ValidLifeTime pulumi.IntInput `pulumi:"validLifeTime"`
}

func (GetInterfaceIpv6Ip6PrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (i GetInterfaceIpv6Ip6PrefixListArgs) ToGetInterfaceIpv6Ip6PrefixListOutput() GetInterfaceIpv6Ip6PrefixListOutput {
	return i.ToGetInterfaceIpv6Ip6PrefixListOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Ip6PrefixListArgs) ToGetInterfaceIpv6Ip6PrefixListOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6PrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Ip6PrefixListOutput)
}

// GetInterfaceIpv6Ip6PrefixListArrayInput is an input type that accepts GetInterfaceIpv6Ip6PrefixListArray and GetInterfaceIpv6Ip6PrefixListArrayOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6Ip6PrefixListArrayInput` via:
//
//	GetInterfaceIpv6Ip6PrefixListArray{ GetInterfaceIpv6Ip6PrefixListArgs{...} }
type GetInterfaceIpv6Ip6PrefixListArrayInput interface {
	pulumi.Input

	ToGetInterfaceIpv6Ip6PrefixListArrayOutput() GetInterfaceIpv6Ip6PrefixListArrayOutput
	ToGetInterfaceIpv6Ip6PrefixListArrayOutputWithContext(context.Context) GetInterfaceIpv6Ip6PrefixListArrayOutput
}

type GetInterfaceIpv6Ip6PrefixListArray []GetInterfaceIpv6Ip6PrefixListInput

func (GetInterfaceIpv6Ip6PrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (i GetInterfaceIpv6Ip6PrefixListArray) ToGetInterfaceIpv6Ip6PrefixListArrayOutput() GetInterfaceIpv6Ip6PrefixListArrayOutput {
	return i.ToGetInterfaceIpv6Ip6PrefixListArrayOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Ip6PrefixListArray) ToGetInterfaceIpv6Ip6PrefixListArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6PrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Ip6PrefixListArrayOutput)
}

type GetInterfaceIpv6Ip6PrefixListOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Ip6PrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (o GetInterfaceIpv6Ip6PrefixListOutput) ToGetInterfaceIpv6Ip6PrefixListOutput() GetInterfaceIpv6Ip6PrefixListOutput {
	return o
}

func (o GetInterfaceIpv6Ip6PrefixListOutput) ToGetInterfaceIpv6Ip6PrefixListOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6PrefixListOutput {
	return o
}

// Enable/disable the autonomous flag.
func (o GetInterfaceIpv6Ip6PrefixListOutput) AutonomousFlag() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6PrefixList) string { return v.AutonomousFlag }).(pulumi.StringOutput)
}

// DNS search list option. The structure of `dnssl` block is documented below.
func (o GetInterfaceIpv6Ip6PrefixListOutput) Dnssls() GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6PrefixList) []GetInterfaceIpv6Ip6PrefixListDnssl { return v.Dnssls }).(GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput)
}

// Enable/disable the onlink flag.
func (o GetInterfaceIpv6Ip6PrefixListOutput) OnlinkFlag() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6PrefixList) string { return v.OnlinkFlag }).(pulumi.StringOutput)
}

// Preferred life time (sec).
func (o GetInterfaceIpv6Ip6PrefixListOutput) PreferredLifeTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6PrefixList) int { return v.PreferredLifeTime }).(pulumi.IntOutput)
}

// IPv6 prefix.
func (o GetInterfaceIpv6Ip6PrefixListOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6PrefixList) string { return v.Prefix }).(pulumi.StringOutput)
}

// Recursive DNS server option.
func (o GetInterfaceIpv6Ip6PrefixListOutput) Rdnss() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6PrefixList) string { return v.Rdnss }).(pulumi.StringOutput)
}

// Valid life time (sec).
func (o GetInterfaceIpv6Ip6PrefixListOutput) ValidLifeTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6PrefixList) int { return v.ValidLifeTime }).(pulumi.IntOutput)
}

type GetInterfaceIpv6Ip6PrefixListArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Ip6PrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (o GetInterfaceIpv6Ip6PrefixListArrayOutput) ToGetInterfaceIpv6Ip6PrefixListArrayOutput() GetInterfaceIpv6Ip6PrefixListArrayOutput {
	return o
}

func (o GetInterfaceIpv6Ip6PrefixListArrayOutput) ToGetInterfaceIpv6Ip6PrefixListArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6PrefixListArrayOutput {
	return o
}

func (o GetInterfaceIpv6Ip6PrefixListArrayOutput) Index(i pulumi.IntInput) GetInterfaceIpv6Ip6PrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceIpv6Ip6PrefixList {
		return vs[0].([]GetInterfaceIpv6Ip6PrefixList)[vs[1].(int)]
	}).(GetInterfaceIpv6Ip6PrefixListOutput)
}

type GetInterfaceIpv6Ip6PrefixListDnssl struct {
	// Domain name.
	Domain string `pulumi:"domain"`
}

// GetInterfaceIpv6Ip6PrefixListDnsslInput is an input type that accepts GetInterfaceIpv6Ip6PrefixListDnsslArgs and GetInterfaceIpv6Ip6PrefixListDnsslOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6Ip6PrefixListDnsslInput` via:
//
//	GetInterfaceIpv6Ip6PrefixListDnsslArgs{...}
type GetInterfaceIpv6Ip6PrefixListDnsslInput interface {
	pulumi.Input

	ToGetInterfaceIpv6Ip6PrefixListDnsslOutput() GetInterfaceIpv6Ip6PrefixListDnsslOutput
	ToGetInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(context.Context) GetInterfaceIpv6Ip6PrefixListDnsslOutput
}

type GetInterfaceIpv6Ip6PrefixListDnsslArgs struct {
	// Domain name.
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (GetInterfaceIpv6Ip6PrefixListDnsslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (i GetInterfaceIpv6Ip6PrefixListDnsslArgs) ToGetInterfaceIpv6Ip6PrefixListDnsslOutput() GetInterfaceIpv6Ip6PrefixListDnsslOutput {
	return i.ToGetInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Ip6PrefixListDnsslArgs) ToGetInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6PrefixListDnsslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Ip6PrefixListDnsslOutput)
}

// GetInterfaceIpv6Ip6PrefixListDnsslArrayInput is an input type that accepts GetInterfaceIpv6Ip6PrefixListDnsslArray and GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6Ip6PrefixListDnsslArrayInput` via:
//
//	GetInterfaceIpv6Ip6PrefixListDnsslArray{ GetInterfaceIpv6Ip6PrefixListDnsslArgs{...} }
type GetInterfaceIpv6Ip6PrefixListDnsslArrayInput interface {
	pulumi.Input

	ToGetInterfaceIpv6Ip6PrefixListDnsslArrayOutput() GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput
	ToGetInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(context.Context) GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput
}

type GetInterfaceIpv6Ip6PrefixListDnsslArray []GetInterfaceIpv6Ip6PrefixListDnsslInput

func (GetInterfaceIpv6Ip6PrefixListDnsslArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (i GetInterfaceIpv6Ip6PrefixListDnsslArray) ToGetInterfaceIpv6Ip6PrefixListDnsslArrayOutput() GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return i.ToGetInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Ip6PrefixListDnsslArray) ToGetInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput)
}

type GetInterfaceIpv6Ip6PrefixListDnsslOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Ip6PrefixListDnsslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (o GetInterfaceIpv6Ip6PrefixListDnsslOutput) ToGetInterfaceIpv6Ip6PrefixListDnsslOutput() GetInterfaceIpv6Ip6PrefixListDnsslOutput {
	return o
}

func (o GetInterfaceIpv6Ip6PrefixListDnsslOutput) ToGetInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6PrefixListDnsslOutput {
	return o
}

// Domain name.
func (o GetInterfaceIpv6Ip6PrefixListDnsslOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Ip6PrefixListDnssl) string { return v.Domain }).(pulumi.StringOutput)
}

type GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (o GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput) ToGetInterfaceIpv6Ip6PrefixListDnsslArrayOutput() GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o
}

func (o GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput) ToGetInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o
}

func (o GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput) Index(i pulumi.IntInput) GetInterfaceIpv6Ip6PrefixListDnsslOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceIpv6Ip6PrefixListDnssl {
		return vs[0].([]GetInterfaceIpv6Ip6PrefixListDnssl)[vs[1].(int)]
	}).(GetInterfaceIpv6Ip6PrefixListDnsslOutput)
}

type GetInterfaceIpv6Vrrp6 struct {
	// Enable/disable accept mode.
	AcceptMode string `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval int `pulumi:"advInterval"`
	// Enable/disable ignoring of default route when checking destination.
	IgnoreDefaultRoute string `pulumi:"ignoreDefaultRoute"`
	// Enable/disable preempt mode.
	Preempt string `pulumi:"preempt"`
	// Priority of the virtual router (1 - 255).
	Priority int `pulumi:"priority"`
	// Startup time (1 - 255 seconds).
	StartTime int `pulumi:"startTime"`
	// Enable/disable VRRP.
	Status string `pulumi:"status"`
	// Monitor the route to this destination.
	Vrdst6 string `pulumi:"vrdst6"`
	// VRRP group ID (1 - 65535).
	Vrgrp int `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid int `pulumi:"vrid"`
	// IPv6 address of the virtual router.
	Vrip6 string `pulumi:"vrip6"`
}

// GetInterfaceIpv6Vrrp6Input is an input type that accepts GetInterfaceIpv6Vrrp6Args and GetInterfaceIpv6Vrrp6Output values.
// You can construct a concrete instance of `GetInterfaceIpv6Vrrp6Input` via:
//
//	GetInterfaceIpv6Vrrp6Args{...}
type GetInterfaceIpv6Vrrp6Input interface {
	pulumi.Input

	ToGetInterfaceIpv6Vrrp6Output() GetInterfaceIpv6Vrrp6Output
	ToGetInterfaceIpv6Vrrp6OutputWithContext(context.Context) GetInterfaceIpv6Vrrp6Output
}

type GetInterfaceIpv6Vrrp6Args struct {
	// Enable/disable accept mode.
	AcceptMode pulumi.StringInput `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval pulumi.IntInput `pulumi:"advInterval"`
	// Enable/disable ignoring of default route when checking destination.
	IgnoreDefaultRoute pulumi.StringInput `pulumi:"ignoreDefaultRoute"`
	// Enable/disable preempt mode.
	Preempt pulumi.StringInput `pulumi:"preempt"`
	// Priority of the virtual router (1 - 255).
	Priority pulumi.IntInput `pulumi:"priority"`
	// Startup time (1 - 255 seconds).
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// Enable/disable VRRP.
	Status pulumi.StringInput `pulumi:"status"`
	// Monitor the route to this destination.
	Vrdst6 pulumi.StringInput `pulumi:"vrdst6"`
	// VRRP group ID (1 - 65535).
	Vrgrp pulumi.IntInput `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid pulumi.IntInput `pulumi:"vrid"`
	// IPv6 address of the virtual router.
	Vrip6 pulumi.StringInput `pulumi:"vrip6"`
}

func (GetInterfaceIpv6Vrrp6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (i GetInterfaceIpv6Vrrp6Args) ToGetInterfaceIpv6Vrrp6Output() GetInterfaceIpv6Vrrp6Output {
	return i.ToGetInterfaceIpv6Vrrp6OutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Vrrp6Args) ToGetInterfaceIpv6Vrrp6OutputWithContext(ctx context.Context) GetInterfaceIpv6Vrrp6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Vrrp6Output)
}

// GetInterfaceIpv6Vrrp6ArrayInput is an input type that accepts GetInterfaceIpv6Vrrp6Array and GetInterfaceIpv6Vrrp6ArrayOutput values.
// You can construct a concrete instance of `GetInterfaceIpv6Vrrp6ArrayInput` via:
//
//	GetInterfaceIpv6Vrrp6Array{ GetInterfaceIpv6Vrrp6Args{...} }
type GetInterfaceIpv6Vrrp6ArrayInput interface {
	pulumi.Input

	ToGetInterfaceIpv6Vrrp6ArrayOutput() GetInterfaceIpv6Vrrp6ArrayOutput
	ToGetInterfaceIpv6Vrrp6ArrayOutputWithContext(context.Context) GetInterfaceIpv6Vrrp6ArrayOutput
}

type GetInterfaceIpv6Vrrp6Array []GetInterfaceIpv6Vrrp6Input

func (GetInterfaceIpv6Vrrp6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (i GetInterfaceIpv6Vrrp6Array) ToGetInterfaceIpv6Vrrp6ArrayOutput() GetInterfaceIpv6Vrrp6ArrayOutput {
	return i.ToGetInterfaceIpv6Vrrp6ArrayOutputWithContext(context.Background())
}

func (i GetInterfaceIpv6Vrrp6Array) ToGetInterfaceIpv6Vrrp6ArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Vrrp6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceIpv6Vrrp6ArrayOutput)
}

type GetInterfaceIpv6Vrrp6Output struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Vrrp6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (o GetInterfaceIpv6Vrrp6Output) ToGetInterfaceIpv6Vrrp6Output() GetInterfaceIpv6Vrrp6Output {
	return o
}

func (o GetInterfaceIpv6Vrrp6Output) ToGetInterfaceIpv6Vrrp6OutputWithContext(ctx context.Context) GetInterfaceIpv6Vrrp6Output {
	return o
}

// Enable/disable accept mode.
func (o GetInterfaceIpv6Vrrp6Output) AcceptMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Vrrp6) string { return v.AcceptMode }).(pulumi.StringOutput)
}

// Advertisement interval (1 - 255 seconds).
func (o GetInterfaceIpv6Vrrp6Output) AdvInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Vrrp6) int { return v.AdvInterval }).(pulumi.IntOutput)
}

// Enable/disable ignoring of default route when checking destination.
func (o GetInterfaceIpv6Vrrp6Output) IgnoreDefaultRoute() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Vrrp6) string { return v.IgnoreDefaultRoute }).(pulumi.StringOutput)
}

// Enable/disable preempt mode.
func (o GetInterfaceIpv6Vrrp6Output) Preempt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Vrrp6) string { return v.Preempt }).(pulumi.StringOutput)
}

// Priority of the virtual router (1 - 255).
func (o GetInterfaceIpv6Vrrp6Output) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Vrrp6) int { return v.Priority }).(pulumi.IntOutput)
}

// Startup time (1 - 255 seconds).
func (o GetInterfaceIpv6Vrrp6Output) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Vrrp6) int { return v.StartTime }).(pulumi.IntOutput)
}

// Enable/disable VRRP.
func (o GetInterfaceIpv6Vrrp6Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Vrrp6) string { return v.Status }).(pulumi.StringOutput)
}

// Monitor the route to this destination.
func (o GetInterfaceIpv6Vrrp6Output) Vrdst6() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Vrrp6) string { return v.Vrdst6 }).(pulumi.StringOutput)
}

// VRRP group ID (1 - 65535).
func (o GetInterfaceIpv6Vrrp6Output) Vrgrp() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Vrrp6) int { return v.Vrgrp }).(pulumi.IntOutput)
}

// Virtual router identifier (1 - 255).
func (o GetInterfaceIpv6Vrrp6Output) Vrid() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Vrrp6) int { return v.Vrid }).(pulumi.IntOutput)
}

// IPv6 address of the virtual router.
func (o GetInterfaceIpv6Vrrp6Output) Vrip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceIpv6Vrrp6) string { return v.Vrip6 }).(pulumi.StringOutput)
}

type GetInterfaceIpv6Vrrp6ArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceIpv6Vrrp6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (o GetInterfaceIpv6Vrrp6ArrayOutput) ToGetInterfaceIpv6Vrrp6ArrayOutput() GetInterfaceIpv6Vrrp6ArrayOutput {
	return o
}

func (o GetInterfaceIpv6Vrrp6ArrayOutput) ToGetInterfaceIpv6Vrrp6ArrayOutputWithContext(ctx context.Context) GetInterfaceIpv6Vrrp6ArrayOutput {
	return o
}

func (o GetInterfaceIpv6Vrrp6ArrayOutput) Index(i pulumi.IntInput) GetInterfaceIpv6Vrrp6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceIpv6Vrrp6 {
		return vs[0].([]GetInterfaceIpv6Vrrp6)[vs[1].(int)]
	}).(GetInterfaceIpv6Vrrp6Output)
}

type GetInterfaceManagedDevice struct {
	// Specify the name of the desired system interface.
	Name string `pulumi:"name"`
}

// GetInterfaceManagedDeviceInput is an input type that accepts GetInterfaceManagedDeviceArgs and GetInterfaceManagedDeviceOutput values.
// You can construct a concrete instance of `GetInterfaceManagedDeviceInput` via:
//
//	GetInterfaceManagedDeviceArgs{...}
type GetInterfaceManagedDeviceInput interface {
	pulumi.Input

	ToGetInterfaceManagedDeviceOutput() GetInterfaceManagedDeviceOutput
	ToGetInterfaceManagedDeviceOutputWithContext(context.Context) GetInterfaceManagedDeviceOutput
}

type GetInterfaceManagedDeviceArgs struct {
	// Specify the name of the desired system interface.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInterfaceManagedDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceManagedDevice)(nil)).Elem()
}

func (i GetInterfaceManagedDeviceArgs) ToGetInterfaceManagedDeviceOutput() GetInterfaceManagedDeviceOutput {
	return i.ToGetInterfaceManagedDeviceOutputWithContext(context.Background())
}

func (i GetInterfaceManagedDeviceArgs) ToGetInterfaceManagedDeviceOutputWithContext(ctx context.Context) GetInterfaceManagedDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceManagedDeviceOutput)
}

// GetInterfaceManagedDeviceArrayInput is an input type that accepts GetInterfaceManagedDeviceArray and GetInterfaceManagedDeviceArrayOutput values.
// You can construct a concrete instance of `GetInterfaceManagedDeviceArrayInput` via:
//
//	GetInterfaceManagedDeviceArray{ GetInterfaceManagedDeviceArgs{...} }
type GetInterfaceManagedDeviceArrayInput interface {
	pulumi.Input

	ToGetInterfaceManagedDeviceArrayOutput() GetInterfaceManagedDeviceArrayOutput
	ToGetInterfaceManagedDeviceArrayOutputWithContext(context.Context) GetInterfaceManagedDeviceArrayOutput
}

type GetInterfaceManagedDeviceArray []GetInterfaceManagedDeviceInput

func (GetInterfaceManagedDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceManagedDevice)(nil)).Elem()
}

func (i GetInterfaceManagedDeviceArray) ToGetInterfaceManagedDeviceArrayOutput() GetInterfaceManagedDeviceArrayOutput {
	return i.ToGetInterfaceManagedDeviceArrayOutputWithContext(context.Background())
}

func (i GetInterfaceManagedDeviceArray) ToGetInterfaceManagedDeviceArrayOutputWithContext(ctx context.Context) GetInterfaceManagedDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceManagedDeviceArrayOutput)
}

type GetInterfaceManagedDeviceOutput struct{ *pulumi.OutputState }

func (GetInterfaceManagedDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceManagedDevice)(nil)).Elem()
}

func (o GetInterfaceManagedDeviceOutput) ToGetInterfaceManagedDeviceOutput() GetInterfaceManagedDeviceOutput {
	return o
}

func (o GetInterfaceManagedDeviceOutput) ToGetInterfaceManagedDeviceOutputWithContext(ctx context.Context) GetInterfaceManagedDeviceOutput {
	return o
}

// Specify the name of the desired system interface.
func (o GetInterfaceManagedDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceManagedDevice) string { return v.Name }).(pulumi.StringOutput)
}

type GetInterfaceManagedDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceManagedDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceManagedDevice)(nil)).Elem()
}

func (o GetInterfaceManagedDeviceArrayOutput) ToGetInterfaceManagedDeviceArrayOutput() GetInterfaceManagedDeviceArrayOutput {
	return o
}

func (o GetInterfaceManagedDeviceArrayOutput) ToGetInterfaceManagedDeviceArrayOutputWithContext(ctx context.Context) GetInterfaceManagedDeviceArrayOutput {
	return o
}

func (o GetInterfaceManagedDeviceArrayOutput) Index(i pulumi.IntInput) GetInterfaceManagedDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceManagedDevice {
		return vs[0].([]GetInterfaceManagedDevice)[vs[1].(int)]
	}).(GetInterfaceManagedDeviceOutput)
}

type GetInterfaceMember struct {
	// Physical interface name.
	InterfaceName string `pulumi:"interfaceName"`
}

// GetInterfaceMemberInput is an input type that accepts GetInterfaceMemberArgs and GetInterfaceMemberOutput values.
// You can construct a concrete instance of `GetInterfaceMemberInput` via:
//
//	GetInterfaceMemberArgs{...}
type GetInterfaceMemberInput interface {
	pulumi.Input

	ToGetInterfaceMemberOutput() GetInterfaceMemberOutput
	ToGetInterfaceMemberOutputWithContext(context.Context) GetInterfaceMemberOutput
}

type GetInterfaceMemberArgs struct {
	// Physical interface name.
	InterfaceName pulumi.StringInput `pulumi:"interfaceName"`
}

func (GetInterfaceMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceMember)(nil)).Elem()
}

func (i GetInterfaceMemberArgs) ToGetInterfaceMemberOutput() GetInterfaceMemberOutput {
	return i.ToGetInterfaceMemberOutputWithContext(context.Background())
}

func (i GetInterfaceMemberArgs) ToGetInterfaceMemberOutputWithContext(ctx context.Context) GetInterfaceMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceMemberOutput)
}

// GetInterfaceMemberArrayInput is an input type that accepts GetInterfaceMemberArray and GetInterfaceMemberArrayOutput values.
// You can construct a concrete instance of `GetInterfaceMemberArrayInput` via:
//
//	GetInterfaceMemberArray{ GetInterfaceMemberArgs{...} }
type GetInterfaceMemberArrayInput interface {
	pulumi.Input

	ToGetInterfaceMemberArrayOutput() GetInterfaceMemberArrayOutput
	ToGetInterfaceMemberArrayOutputWithContext(context.Context) GetInterfaceMemberArrayOutput
}

type GetInterfaceMemberArray []GetInterfaceMemberInput

func (GetInterfaceMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceMember)(nil)).Elem()
}

func (i GetInterfaceMemberArray) ToGetInterfaceMemberArrayOutput() GetInterfaceMemberArrayOutput {
	return i.ToGetInterfaceMemberArrayOutputWithContext(context.Background())
}

func (i GetInterfaceMemberArray) ToGetInterfaceMemberArrayOutputWithContext(ctx context.Context) GetInterfaceMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceMemberArrayOutput)
}

type GetInterfaceMemberOutput struct{ *pulumi.OutputState }

func (GetInterfaceMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceMember)(nil)).Elem()
}

func (o GetInterfaceMemberOutput) ToGetInterfaceMemberOutput() GetInterfaceMemberOutput {
	return o
}

func (o GetInterfaceMemberOutput) ToGetInterfaceMemberOutputWithContext(ctx context.Context) GetInterfaceMemberOutput {
	return o
}

// Physical interface name.
func (o GetInterfaceMemberOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceMember) string { return v.InterfaceName }).(pulumi.StringOutput)
}

type GetInterfaceMemberArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceMember)(nil)).Elem()
}

func (o GetInterfaceMemberArrayOutput) ToGetInterfaceMemberArrayOutput() GetInterfaceMemberArrayOutput {
	return o
}

func (o GetInterfaceMemberArrayOutput) ToGetInterfaceMemberArrayOutputWithContext(ctx context.Context) GetInterfaceMemberArrayOutput {
	return o
}

func (o GetInterfaceMemberArrayOutput) Index(i pulumi.IntInput) GetInterfaceMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceMember {
		return vs[0].([]GetInterfaceMember)[vs[1].(int)]
	}).(GetInterfaceMemberOutput)
}

type GetInterfaceSecondaryip struct {
	// Management access settings for the secondary IP address.
	Allowaccess string `pulumi:"allowaccess"`
	// Protocols used to detect the server.
	Detectprotocol string `pulumi:"detectprotocol"`
	// Gateway's ping server for this IP.
	Detectserver string `pulumi:"detectserver"`
	// Enable/disable detect gateway alive for first.
	Gwdetect string `pulumi:"gwdetect"`
	// HA election priority for the PING server.
	HaPriority int `pulumi:"haPriority"`
	// ID.
	Id int `pulumi:"id"`
	// Secondary IP address of the interface.
	Ip string `pulumi:"ip"`
	// PING server status.
	PingServStatus int `pulumi:"pingServStatus"`
	// DHCP relay IP address.
	SecipRelayIp string `pulumi:"secipRelayIp"`
}

// GetInterfaceSecondaryipInput is an input type that accepts GetInterfaceSecondaryipArgs and GetInterfaceSecondaryipOutput values.
// You can construct a concrete instance of `GetInterfaceSecondaryipInput` via:
//
//	GetInterfaceSecondaryipArgs{...}
type GetInterfaceSecondaryipInput interface {
	pulumi.Input

	ToGetInterfaceSecondaryipOutput() GetInterfaceSecondaryipOutput
	ToGetInterfaceSecondaryipOutputWithContext(context.Context) GetInterfaceSecondaryipOutput
}

type GetInterfaceSecondaryipArgs struct {
	// Management access settings for the secondary IP address.
	Allowaccess pulumi.StringInput `pulumi:"allowaccess"`
	// Protocols used to detect the server.
	Detectprotocol pulumi.StringInput `pulumi:"detectprotocol"`
	// Gateway's ping server for this IP.
	Detectserver pulumi.StringInput `pulumi:"detectserver"`
	// Enable/disable detect gateway alive for first.
	Gwdetect pulumi.StringInput `pulumi:"gwdetect"`
	// HA election priority for the PING server.
	HaPriority pulumi.IntInput `pulumi:"haPriority"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Secondary IP address of the interface.
	Ip pulumi.StringInput `pulumi:"ip"`
	// PING server status.
	PingServStatus pulumi.IntInput `pulumi:"pingServStatus"`
	// DHCP relay IP address.
	SecipRelayIp pulumi.StringInput `pulumi:"secipRelayIp"`
}

func (GetInterfaceSecondaryipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceSecondaryip)(nil)).Elem()
}

func (i GetInterfaceSecondaryipArgs) ToGetInterfaceSecondaryipOutput() GetInterfaceSecondaryipOutput {
	return i.ToGetInterfaceSecondaryipOutputWithContext(context.Background())
}

func (i GetInterfaceSecondaryipArgs) ToGetInterfaceSecondaryipOutputWithContext(ctx context.Context) GetInterfaceSecondaryipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceSecondaryipOutput)
}

// GetInterfaceSecondaryipArrayInput is an input type that accepts GetInterfaceSecondaryipArray and GetInterfaceSecondaryipArrayOutput values.
// You can construct a concrete instance of `GetInterfaceSecondaryipArrayInput` via:
//
//	GetInterfaceSecondaryipArray{ GetInterfaceSecondaryipArgs{...} }
type GetInterfaceSecondaryipArrayInput interface {
	pulumi.Input

	ToGetInterfaceSecondaryipArrayOutput() GetInterfaceSecondaryipArrayOutput
	ToGetInterfaceSecondaryipArrayOutputWithContext(context.Context) GetInterfaceSecondaryipArrayOutput
}

type GetInterfaceSecondaryipArray []GetInterfaceSecondaryipInput

func (GetInterfaceSecondaryipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceSecondaryip)(nil)).Elem()
}

func (i GetInterfaceSecondaryipArray) ToGetInterfaceSecondaryipArrayOutput() GetInterfaceSecondaryipArrayOutput {
	return i.ToGetInterfaceSecondaryipArrayOutputWithContext(context.Background())
}

func (i GetInterfaceSecondaryipArray) ToGetInterfaceSecondaryipArrayOutputWithContext(ctx context.Context) GetInterfaceSecondaryipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceSecondaryipArrayOutput)
}

type GetInterfaceSecondaryipOutput struct{ *pulumi.OutputState }

func (GetInterfaceSecondaryipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceSecondaryip)(nil)).Elem()
}

func (o GetInterfaceSecondaryipOutput) ToGetInterfaceSecondaryipOutput() GetInterfaceSecondaryipOutput {
	return o
}

func (o GetInterfaceSecondaryipOutput) ToGetInterfaceSecondaryipOutputWithContext(ctx context.Context) GetInterfaceSecondaryipOutput {
	return o
}

// Management access settings for the secondary IP address.
func (o GetInterfaceSecondaryipOutput) Allowaccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceSecondaryip) string { return v.Allowaccess }).(pulumi.StringOutput)
}

// Protocols used to detect the server.
func (o GetInterfaceSecondaryipOutput) Detectprotocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceSecondaryip) string { return v.Detectprotocol }).(pulumi.StringOutput)
}

// Gateway's ping server for this IP.
func (o GetInterfaceSecondaryipOutput) Detectserver() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceSecondaryip) string { return v.Detectserver }).(pulumi.StringOutput)
}

// Enable/disable detect gateway alive for first.
func (o GetInterfaceSecondaryipOutput) Gwdetect() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceSecondaryip) string { return v.Gwdetect }).(pulumi.StringOutput)
}

// HA election priority for the PING server.
func (o GetInterfaceSecondaryipOutput) HaPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceSecondaryip) int { return v.HaPriority }).(pulumi.IntOutput)
}

// ID.
func (o GetInterfaceSecondaryipOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceSecondaryip) int { return v.Id }).(pulumi.IntOutput)
}

// Secondary IP address of the interface.
func (o GetInterfaceSecondaryipOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceSecondaryip) string { return v.Ip }).(pulumi.StringOutput)
}

// PING server status.
func (o GetInterfaceSecondaryipOutput) PingServStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceSecondaryip) int { return v.PingServStatus }).(pulumi.IntOutput)
}

// DHCP relay IP address.
func (o GetInterfaceSecondaryipOutput) SecipRelayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceSecondaryip) string { return v.SecipRelayIp }).(pulumi.StringOutput)
}

type GetInterfaceSecondaryipArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceSecondaryipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceSecondaryip)(nil)).Elem()
}

func (o GetInterfaceSecondaryipArrayOutput) ToGetInterfaceSecondaryipArrayOutput() GetInterfaceSecondaryipArrayOutput {
	return o
}

func (o GetInterfaceSecondaryipArrayOutput) ToGetInterfaceSecondaryipArrayOutputWithContext(ctx context.Context) GetInterfaceSecondaryipArrayOutput {
	return o
}

func (o GetInterfaceSecondaryipArrayOutput) Index(i pulumi.IntInput) GetInterfaceSecondaryipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceSecondaryip {
		return vs[0].([]GetInterfaceSecondaryip)[vs[1].(int)]
	}).(GetInterfaceSecondaryipOutput)
}

type GetInterfaceSecurityGroup struct {
	// Specify the name of the desired system interface.
	Name string `pulumi:"name"`
}

// GetInterfaceSecurityGroupInput is an input type that accepts GetInterfaceSecurityGroupArgs and GetInterfaceSecurityGroupOutput values.
// You can construct a concrete instance of `GetInterfaceSecurityGroupInput` via:
//
//	GetInterfaceSecurityGroupArgs{...}
type GetInterfaceSecurityGroupInput interface {
	pulumi.Input

	ToGetInterfaceSecurityGroupOutput() GetInterfaceSecurityGroupOutput
	ToGetInterfaceSecurityGroupOutputWithContext(context.Context) GetInterfaceSecurityGroupOutput
}

type GetInterfaceSecurityGroupArgs struct {
	// Specify the name of the desired system interface.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInterfaceSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceSecurityGroup)(nil)).Elem()
}

func (i GetInterfaceSecurityGroupArgs) ToGetInterfaceSecurityGroupOutput() GetInterfaceSecurityGroupOutput {
	return i.ToGetInterfaceSecurityGroupOutputWithContext(context.Background())
}

func (i GetInterfaceSecurityGroupArgs) ToGetInterfaceSecurityGroupOutputWithContext(ctx context.Context) GetInterfaceSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceSecurityGroupOutput)
}

// GetInterfaceSecurityGroupArrayInput is an input type that accepts GetInterfaceSecurityGroupArray and GetInterfaceSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetInterfaceSecurityGroupArrayInput` via:
//
//	GetInterfaceSecurityGroupArray{ GetInterfaceSecurityGroupArgs{...} }
type GetInterfaceSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetInterfaceSecurityGroupArrayOutput() GetInterfaceSecurityGroupArrayOutput
	ToGetInterfaceSecurityGroupArrayOutputWithContext(context.Context) GetInterfaceSecurityGroupArrayOutput
}

type GetInterfaceSecurityGroupArray []GetInterfaceSecurityGroupInput

func (GetInterfaceSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceSecurityGroup)(nil)).Elem()
}

func (i GetInterfaceSecurityGroupArray) ToGetInterfaceSecurityGroupArrayOutput() GetInterfaceSecurityGroupArrayOutput {
	return i.ToGetInterfaceSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetInterfaceSecurityGroupArray) ToGetInterfaceSecurityGroupArrayOutputWithContext(ctx context.Context) GetInterfaceSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceSecurityGroupArrayOutput)
}

type GetInterfaceSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetInterfaceSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceSecurityGroup)(nil)).Elem()
}

func (o GetInterfaceSecurityGroupOutput) ToGetInterfaceSecurityGroupOutput() GetInterfaceSecurityGroupOutput {
	return o
}

func (o GetInterfaceSecurityGroupOutput) ToGetInterfaceSecurityGroupOutputWithContext(ctx context.Context) GetInterfaceSecurityGroupOutput {
	return o
}

// Specify the name of the desired system interface.
func (o GetInterfaceSecurityGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceSecurityGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetInterfaceSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceSecurityGroup)(nil)).Elem()
}

func (o GetInterfaceSecurityGroupArrayOutput) ToGetInterfaceSecurityGroupArrayOutput() GetInterfaceSecurityGroupArrayOutput {
	return o
}

func (o GetInterfaceSecurityGroupArrayOutput) ToGetInterfaceSecurityGroupArrayOutputWithContext(ctx context.Context) GetInterfaceSecurityGroupArrayOutput {
	return o
}

func (o GetInterfaceSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetInterfaceSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceSecurityGroup {
		return vs[0].([]GetInterfaceSecurityGroup)[vs[1].(int)]
	}).(GetInterfaceSecurityGroupOutput)
}

type GetInterfaceTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired system interface.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetInterfaceTaggingTag `pulumi:"tags"`
}

// GetInterfaceTaggingInput is an input type that accepts GetInterfaceTaggingArgs and GetInterfaceTaggingOutput values.
// You can construct a concrete instance of `GetInterfaceTaggingInput` via:
//
//	GetInterfaceTaggingArgs{...}
type GetInterfaceTaggingInput interface {
	pulumi.Input

	ToGetInterfaceTaggingOutput() GetInterfaceTaggingOutput
	ToGetInterfaceTaggingOutputWithContext(context.Context) GetInterfaceTaggingOutput
}

type GetInterfaceTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired system interface.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetInterfaceTaggingTagArrayInput `pulumi:"tags"`
}

func (GetInterfaceTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceTagging)(nil)).Elem()
}

func (i GetInterfaceTaggingArgs) ToGetInterfaceTaggingOutput() GetInterfaceTaggingOutput {
	return i.ToGetInterfaceTaggingOutputWithContext(context.Background())
}

func (i GetInterfaceTaggingArgs) ToGetInterfaceTaggingOutputWithContext(ctx context.Context) GetInterfaceTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceTaggingOutput)
}

// GetInterfaceTaggingArrayInput is an input type that accepts GetInterfaceTaggingArray and GetInterfaceTaggingArrayOutput values.
// You can construct a concrete instance of `GetInterfaceTaggingArrayInput` via:
//
//	GetInterfaceTaggingArray{ GetInterfaceTaggingArgs{...} }
type GetInterfaceTaggingArrayInput interface {
	pulumi.Input

	ToGetInterfaceTaggingArrayOutput() GetInterfaceTaggingArrayOutput
	ToGetInterfaceTaggingArrayOutputWithContext(context.Context) GetInterfaceTaggingArrayOutput
}

type GetInterfaceTaggingArray []GetInterfaceTaggingInput

func (GetInterfaceTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceTagging)(nil)).Elem()
}

func (i GetInterfaceTaggingArray) ToGetInterfaceTaggingArrayOutput() GetInterfaceTaggingArrayOutput {
	return i.ToGetInterfaceTaggingArrayOutputWithContext(context.Background())
}

func (i GetInterfaceTaggingArray) ToGetInterfaceTaggingArrayOutputWithContext(ctx context.Context) GetInterfaceTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceTaggingArrayOutput)
}

type GetInterfaceTaggingOutput struct{ *pulumi.OutputState }

func (GetInterfaceTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceTagging)(nil)).Elem()
}

func (o GetInterfaceTaggingOutput) ToGetInterfaceTaggingOutput() GetInterfaceTaggingOutput {
	return o
}

func (o GetInterfaceTaggingOutput) ToGetInterfaceTaggingOutputWithContext(ctx context.Context) GetInterfaceTaggingOutput {
	return o
}

// Tag category.
func (o GetInterfaceTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired system interface.
func (o GetInterfaceTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetInterfaceTaggingOutput) Tags() GetInterfaceTaggingTagArrayOutput {
	return o.ApplyT(func(v GetInterfaceTagging) []GetInterfaceTaggingTag { return v.Tags }).(GetInterfaceTaggingTagArrayOutput)
}

type GetInterfaceTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceTagging)(nil)).Elem()
}

func (o GetInterfaceTaggingArrayOutput) ToGetInterfaceTaggingArrayOutput() GetInterfaceTaggingArrayOutput {
	return o
}

func (o GetInterfaceTaggingArrayOutput) ToGetInterfaceTaggingArrayOutputWithContext(ctx context.Context) GetInterfaceTaggingArrayOutput {
	return o
}

func (o GetInterfaceTaggingArrayOutput) Index(i pulumi.IntInput) GetInterfaceTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceTagging {
		return vs[0].([]GetInterfaceTagging)[vs[1].(int)]
	}).(GetInterfaceTaggingOutput)
}

type GetInterfaceTaggingTag struct {
	// Specify the name of the desired system interface.
	Name string `pulumi:"name"`
}

// GetInterfaceTaggingTagInput is an input type that accepts GetInterfaceTaggingTagArgs and GetInterfaceTaggingTagOutput values.
// You can construct a concrete instance of `GetInterfaceTaggingTagInput` via:
//
//	GetInterfaceTaggingTagArgs{...}
type GetInterfaceTaggingTagInput interface {
	pulumi.Input

	ToGetInterfaceTaggingTagOutput() GetInterfaceTaggingTagOutput
	ToGetInterfaceTaggingTagOutputWithContext(context.Context) GetInterfaceTaggingTagOutput
}

type GetInterfaceTaggingTagArgs struct {
	// Specify the name of the desired system interface.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInterfaceTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceTaggingTag)(nil)).Elem()
}

func (i GetInterfaceTaggingTagArgs) ToGetInterfaceTaggingTagOutput() GetInterfaceTaggingTagOutput {
	return i.ToGetInterfaceTaggingTagOutputWithContext(context.Background())
}

func (i GetInterfaceTaggingTagArgs) ToGetInterfaceTaggingTagOutputWithContext(ctx context.Context) GetInterfaceTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceTaggingTagOutput)
}

// GetInterfaceTaggingTagArrayInput is an input type that accepts GetInterfaceTaggingTagArray and GetInterfaceTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetInterfaceTaggingTagArrayInput` via:
//
//	GetInterfaceTaggingTagArray{ GetInterfaceTaggingTagArgs{...} }
type GetInterfaceTaggingTagArrayInput interface {
	pulumi.Input

	ToGetInterfaceTaggingTagArrayOutput() GetInterfaceTaggingTagArrayOutput
	ToGetInterfaceTaggingTagArrayOutputWithContext(context.Context) GetInterfaceTaggingTagArrayOutput
}

type GetInterfaceTaggingTagArray []GetInterfaceTaggingTagInput

func (GetInterfaceTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceTaggingTag)(nil)).Elem()
}

func (i GetInterfaceTaggingTagArray) ToGetInterfaceTaggingTagArrayOutput() GetInterfaceTaggingTagArrayOutput {
	return i.ToGetInterfaceTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetInterfaceTaggingTagArray) ToGetInterfaceTaggingTagArrayOutputWithContext(ctx context.Context) GetInterfaceTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceTaggingTagArrayOutput)
}

type GetInterfaceTaggingTagOutput struct{ *pulumi.OutputState }

func (GetInterfaceTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceTaggingTag)(nil)).Elem()
}

func (o GetInterfaceTaggingTagOutput) ToGetInterfaceTaggingTagOutput() GetInterfaceTaggingTagOutput {
	return o
}

func (o GetInterfaceTaggingTagOutput) ToGetInterfaceTaggingTagOutputWithContext(ctx context.Context) GetInterfaceTaggingTagOutput {
	return o
}

// Specify the name of the desired system interface.
func (o GetInterfaceTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetInterfaceTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceTaggingTag)(nil)).Elem()
}

func (o GetInterfaceTaggingTagArrayOutput) ToGetInterfaceTaggingTagArrayOutput() GetInterfaceTaggingTagArrayOutput {
	return o
}

func (o GetInterfaceTaggingTagArrayOutput) ToGetInterfaceTaggingTagArrayOutputWithContext(ctx context.Context) GetInterfaceTaggingTagArrayOutput {
	return o
}

func (o GetInterfaceTaggingTagArrayOutput) Index(i pulumi.IntInput) GetInterfaceTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceTaggingTag {
		return vs[0].([]GetInterfaceTaggingTag)[vs[1].(int)]
	}).(GetInterfaceTaggingTagOutput)
}

type GetInterfaceVrrp struct {
	// Enable/disable accept mode.
	AcceptMode string `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval int `pulumi:"advInterval"`
	// Enable/disable ignoring of default route when checking destination.
	IgnoreDefaultRoute string `pulumi:"ignoreDefaultRoute"`
	// Enable/disable preempt mode.
	Preempt string `pulumi:"preempt"`
	// Priority of the virtual router (1 - 255).
	Priority int `pulumi:"priority"`
	// VRRP Proxy ARP configuration. The structure of `proxyArp` block is documented below.
	ProxyArps []GetInterfaceVrrpProxyArp `pulumi:"proxyArps"`
	// Startup time (1 - 255 seconds).
	StartTime int `pulumi:"startTime"`
	// Enable/disable VRRP.
	Status string `pulumi:"status"`
	// VRRP version.
	Version string `pulumi:"version"`
	// Monitor the route to this destination.
	Vrdst string `pulumi:"vrdst"`
	// Priority of the virtual router when the virtual router destination becomes unreachable (0 - 254).
	VrdstPriority int `pulumi:"vrdstPriority"`
	// VRRP group ID (1 - 65535).
	Vrgrp int `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid int `pulumi:"vrid"`
	// IP address of the virtual router.
	Vrip string `pulumi:"vrip"`
}

// GetInterfaceVrrpInput is an input type that accepts GetInterfaceVrrpArgs and GetInterfaceVrrpOutput values.
// You can construct a concrete instance of `GetInterfaceVrrpInput` via:
//
//	GetInterfaceVrrpArgs{...}
type GetInterfaceVrrpInput interface {
	pulumi.Input

	ToGetInterfaceVrrpOutput() GetInterfaceVrrpOutput
	ToGetInterfaceVrrpOutputWithContext(context.Context) GetInterfaceVrrpOutput
}

type GetInterfaceVrrpArgs struct {
	// Enable/disable accept mode.
	AcceptMode pulumi.StringInput `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval pulumi.IntInput `pulumi:"advInterval"`
	// Enable/disable ignoring of default route when checking destination.
	IgnoreDefaultRoute pulumi.StringInput `pulumi:"ignoreDefaultRoute"`
	// Enable/disable preempt mode.
	Preempt pulumi.StringInput `pulumi:"preempt"`
	// Priority of the virtual router (1 - 255).
	Priority pulumi.IntInput `pulumi:"priority"`
	// VRRP Proxy ARP configuration. The structure of `proxyArp` block is documented below.
	ProxyArps GetInterfaceVrrpProxyArpArrayInput `pulumi:"proxyArps"`
	// Startup time (1 - 255 seconds).
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// Enable/disable VRRP.
	Status pulumi.StringInput `pulumi:"status"`
	// VRRP version.
	Version pulumi.StringInput `pulumi:"version"`
	// Monitor the route to this destination.
	Vrdst pulumi.StringInput `pulumi:"vrdst"`
	// Priority of the virtual router when the virtual router destination becomes unreachable (0 - 254).
	VrdstPriority pulumi.IntInput `pulumi:"vrdstPriority"`
	// VRRP group ID (1 - 65535).
	Vrgrp pulumi.IntInput `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid pulumi.IntInput `pulumi:"vrid"`
	// IP address of the virtual router.
	Vrip pulumi.StringInput `pulumi:"vrip"`
}

func (GetInterfaceVrrpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceVrrp)(nil)).Elem()
}

func (i GetInterfaceVrrpArgs) ToGetInterfaceVrrpOutput() GetInterfaceVrrpOutput {
	return i.ToGetInterfaceVrrpOutputWithContext(context.Background())
}

func (i GetInterfaceVrrpArgs) ToGetInterfaceVrrpOutputWithContext(ctx context.Context) GetInterfaceVrrpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceVrrpOutput)
}

// GetInterfaceVrrpArrayInput is an input type that accepts GetInterfaceVrrpArray and GetInterfaceVrrpArrayOutput values.
// You can construct a concrete instance of `GetInterfaceVrrpArrayInput` via:
//
//	GetInterfaceVrrpArray{ GetInterfaceVrrpArgs{...} }
type GetInterfaceVrrpArrayInput interface {
	pulumi.Input

	ToGetInterfaceVrrpArrayOutput() GetInterfaceVrrpArrayOutput
	ToGetInterfaceVrrpArrayOutputWithContext(context.Context) GetInterfaceVrrpArrayOutput
}

type GetInterfaceVrrpArray []GetInterfaceVrrpInput

func (GetInterfaceVrrpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceVrrp)(nil)).Elem()
}

func (i GetInterfaceVrrpArray) ToGetInterfaceVrrpArrayOutput() GetInterfaceVrrpArrayOutput {
	return i.ToGetInterfaceVrrpArrayOutputWithContext(context.Background())
}

func (i GetInterfaceVrrpArray) ToGetInterfaceVrrpArrayOutputWithContext(ctx context.Context) GetInterfaceVrrpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceVrrpArrayOutput)
}

type GetInterfaceVrrpOutput struct{ *pulumi.OutputState }

func (GetInterfaceVrrpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceVrrp)(nil)).Elem()
}

func (o GetInterfaceVrrpOutput) ToGetInterfaceVrrpOutput() GetInterfaceVrrpOutput {
	return o
}

func (o GetInterfaceVrrpOutput) ToGetInterfaceVrrpOutputWithContext(ctx context.Context) GetInterfaceVrrpOutput {
	return o
}

// Enable/disable accept mode.
func (o GetInterfaceVrrpOutput) AcceptMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) string { return v.AcceptMode }).(pulumi.StringOutput)
}

// Advertisement interval (1 - 255 seconds).
func (o GetInterfaceVrrpOutput) AdvInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) int { return v.AdvInterval }).(pulumi.IntOutput)
}

// Enable/disable ignoring of default route when checking destination.
func (o GetInterfaceVrrpOutput) IgnoreDefaultRoute() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) string { return v.IgnoreDefaultRoute }).(pulumi.StringOutput)
}

// Enable/disable preempt mode.
func (o GetInterfaceVrrpOutput) Preempt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) string { return v.Preempt }).(pulumi.StringOutput)
}

// Priority of the virtual router (1 - 255).
func (o GetInterfaceVrrpOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) int { return v.Priority }).(pulumi.IntOutput)
}

// VRRP Proxy ARP configuration. The structure of `proxyArp` block is documented below.
func (o GetInterfaceVrrpOutput) ProxyArps() GetInterfaceVrrpProxyArpArrayOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) []GetInterfaceVrrpProxyArp { return v.ProxyArps }).(GetInterfaceVrrpProxyArpArrayOutput)
}

// Startup time (1 - 255 seconds).
func (o GetInterfaceVrrpOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) int { return v.StartTime }).(pulumi.IntOutput)
}

// Enable/disable VRRP.
func (o GetInterfaceVrrpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) string { return v.Status }).(pulumi.StringOutput)
}

// VRRP version.
func (o GetInterfaceVrrpOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) string { return v.Version }).(pulumi.StringOutput)
}

// Monitor the route to this destination.
func (o GetInterfaceVrrpOutput) Vrdst() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) string { return v.Vrdst }).(pulumi.StringOutput)
}

// Priority of the virtual router when the virtual router destination becomes unreachable (0 - 254).
func (o GetInterfaceVrrpOutput) VrdstPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) int { return v.VrdstPriority }).(pulumi.IntOutput)
}

// VRRP group ID (1 - 65535).
func (o GetInterfaceVrrpOutput) Vrgrp() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) int { return v.Vrgrp }).(pulumi.IntOutput)
}

// Virtual router identifier (1 - 255).
func (o GetInterfaceVrrpOutput) Vrid() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) int { return v.Vrid }).(pulumi.IntOutput)
}

// IP address of the virtual router.
func (o GetInterfaceVrrpOutput) Vrip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceVrrp) string { return v.Vrip }).(pulumi.StringOutput)
}

type GetInterfaceVrrpArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceVrrpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceVrrp)(nil)).Elem()
}

func (o GetInterfaceVrrpArrayOutput) ToGetInterfaceVrrpArrayOutput() GetInterfaceVrrpArrayOutput {
	return o
}

func (o GetInterfaceVrrpArrayOutput) ToGetInterfaceVrrpArrayOutputWithContext(ctx context.Context) GetInterfaceVrrpArrayOutput {
	return o
}

func (o GetInterfaceVrrpArrayOutput) Index(i pulumi.IntInput) GetInterfaceVrrpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceVrrp {
		return vs[0].([]GetInterfaceVrrp)[vs[1].(int)]
	}).(GetInterfaceVrrpOutput)
}

type GetInterfaceVrrpProxyArp struct {
	// ID.
	Id int `pulumi:"id"`
	// Secondary IP address of the interface.
	Ip string `pulumi:"ip"`
}

// GetInterfaceVrrpProxyArpInput is an input type that accepts GetInterfaceVrrpProxyArpArgs and GetInterfaceVrrpProxyArpOutput values.
// You can construct a concrete instance of `GetInterfaceVrrpProxyArpInput` via:
//
//	GetInterfaceVrrpProxyArpArgs{...}
type GetInterfaceVrrpProxyArpInput interface {
	pulumi.Input

	ToGetInterfaceVrrpProxyArpOutput() GetInterfaceVrrpProxyArpOutput
	ToGetInterfaceVrrpProxyArpOutputWithContext(context.Context) GetInterfaceVrrpProxyArpOutput
}

type GetInterfaceVrrpProxyArpArgs struct {
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Secondary IP address of the interface.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetInterfaceVrrpProxyArpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceVrrpProxyArp)(nil)).Elem()
}

func (i GetInterfaceVrrpProxyArpArgs) ToGetInterfaceVrrpProxyArpOutput() GetInterfaceVrrpProxyArpOutput {
	return i.ToGetInterfaceVrrpProxyArpOutputWithContext(context.Background())
}

func (i GetInterfaceVrrpProxyArpArgs) ToGetInterfaceVrrpProxyArpOutputWithContext(ctx context.Context) GetInterfaceVrrpProxyArpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceVrrpProxyArpOutput)
}

// GetInterfaceVrrpProxyArpArrayInput is an input type that accepts GetInterfaceVrrpProxyArpArray and GetInterfaceVrrpProxyArpArrayOutput values.
// You can construct a concrete instance of `GetInterfaceVrrpProxyArpArrayInput` via:
//
//	GetInterfaceVrrpProxyArpArray{ GetInterfaceVrrpProxyArpArgs{...} }
type GetInterfaceVrrpProxyArpArrayInput interface {
	pulumi.Input

	ToGetInterfaceVrrpProxyArpArrayOutput() GetInterfaceVrrpProxyArpArrayOutput
	ToGetInterfaceVrrpProxyArpArrayOutputWithContext(context.Context) GetInterfaceVrrpProxyArpArrayOutput
}

type GetInterfaceVrrpProxyArpArray []GetInterfaceVrrpProxyArpInput

func (GetInterfaceVrrpProxyArpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceVrrpProxyArp)(nil)).Elem()
}

func (i GetInterfaceVrrpProxyArpArray) ToGetInterfaceVrrpProxyArpArrayOutput() GetInterfaceVrrpProxyArpArrayOutput {
	return i.ToGetInterfaceVrrpProxyArpArrayOutputWithContext(context.Background())
}

func (i GetInterfaceVrrpProxyArpArray) ToGetInterfaceVrrpProxyArpArrayOutputWithContext(ctx context.Context) GetInterfaceVrrpProxyArpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfaceVrrpProxyArpArrayOutput)
}

type GetInterfaceVrrpProxyArpOutput struct{ *pulumi.OutputState }

func (GetInterfaceVrrpProxyArpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfaceVrrpProxyArp)(nil)).Elem()
}

func (o GetInterfaceVrrpProxyArpOutput) ToGetInterfaceVrrpProxyArpOutput() GetInterfaceVrrpProxyArpOutput {
	return o
}

func (o GetInterfaceVrrpProxyArpOutput) ToGetInterfaceVrrpProxyArpOutputWithContext(ctx context.Context) GetInterfaceVrrpProxyArpOutput {
	return o
}

// ID.
func (o GetInterfaceVrrpProxyArpOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfaceVrrpProxyArp) int { return v.Id }).(pulumi.IntOutput)
}

// Secondary IP address of the interface.
func (o GetInterfaceVrrpProxyArpOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfaceVrrpProxyArp) string { return v.Ip }).(pulumi.StringOutput)
}

type GetInterfaceVrrpProxyArpArrayOutput struct{ *pulumi.OutputState }

func (GetInterfaceVrrpProxyArpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfaceVrrpProxyArp)(nil)).Elem()
}

func (o GetInterfaceVrrpProxyArpArrayOutput) ToGetInterfaceVrrpProxyArpArrayOutput() GetInterfaceVrrpProxyArpArrayOutput {
	return o
}

func (o GetInterfaceVrrpProxyArpArrayOutput) ToGetInterfaceVrrpProxyArpArrayOutputWithContext(ctx context.Context) GetInterfaceVrrpProxyArpArrayOutput {
	return o
}

func (o GetInterfaceVrrpProxyArpArrayOutput) Index(i pulumi.IntInput) GetInterfaceVrrpProxyArpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfaceVrrpProxyArp {
		return vs[0].([]GetInterfaceVrrpProxyArp)[vs[1].(int)]
	}).(GetInterfaceVrrpProxyArpOutput)
}

type GetLinkmonitorRoute struct {
	// IP and netmask (x.x.x.x/y).
	Subnet string `pulumi:"subnet"`
}

// GetLinkmonitorRouteInput is an input type that accepts GetLinkmonitorRouteArgs and GetLinkmonitorRouteOutput values.
// You can construct a concrete instance of `GetLinkmonitorRouteInput` via:
//
//	GetLinkmonitorRouteArgs{...}
type GetLinkmonitorRouteInput interface {
	pulumi.Input

	ToGetLinkmonitorRouteOutput() GetLinkmonitorRouteOutput
	ToGetLinkmonitorRouteOutputWithContext(context.Context) GetLinkmonitorRouteOutput
}

type GetLinkmonitorRouteArgs struct {
	// IP and netmask (x.x.x.x/y).
	Subnet pulumi.StringInput `pulumi:"subnet"`
}

func (GetLinkmonitorRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinkmonitorRoute)(nil)).Elem()
}

func (i GetLinkmonitorRouteArgs) ToGetLinkmonitorRouteOutput() GetLinkmonitorRouteOutput {
	return i.ToGetLinkmonitorRouteOutputWithContext(context.Background())
}

func (i GetLinkmonitorRouteArgs) ToGetLinkmonitorRouteOutputWithContext(ctx context.Context) GetLinkmonitorRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinkmonitorRouteOutput)
}

// GetLinkmonitorRouteArrayInput is an input type that accepts GetLinkmonitorRouteArray and GetLinkmonitorRouteArrayOutput values.
// You can construct a concrete instance of `GetLinkmonitorRouteArrayInput` via:
//
//	GetLinkmonitorRouteArray{ GetLinkmonitorRouteArgs{...} }
type GetLinkmonitorRouteArrayInput interface {
	pulumi.Input

	ToGetLinkmonitorRouteArrayOutput() GetLinkmonitorRouteArrayOutput
	ToGetLinkmonitorRouteArrayOutputWithContext(context.Context) GetLinkmonitorRouteArrayOutput
}

type GetLinkmonitorRouteArray []GetLinkmonitorRouteInput

func (GetLinkmonitorRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinkmonitorRoute)(nil)).Elem()
}

func (i GetLinkmonitorRouteArray) ToGetLinkmonitorRouteArrayOutput() GetLinkmonitorRouteArrayOutput {
	return i.ToGetLinkmonitorRouteArrayOutputWithContext(context.Background())
}

func (i GetLinkmonitorRouteArray) ToGetLinkmonitorRouteArrayOutputWithContext(ctx context.Context) GetLinkmonitorRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinkmonitorRouteArrayOutput)
}

type GetLinkmonitorRouteOutput struct{ *pulumi.OutputState }

func (GetLinkmonitorRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinkmonitorRoute)(nil)).Elem()
}

func (o GetLinkmonitorRouteOutput) ToGetLinkmonitorRouteOutput() GetLinkmonitorRouteOutput {
	return o
}

func (o GetLinkmonitorRouteOutput) ToGetLinkmonitorRouteOutputWithContext(ctx context.Context) GetLinkmonitorRouteOutput {
	return o
}

// IP and netmask (x.x.x.x/y).
func (o GetLinkmonitorRouteOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinkmonitorRoute) string { return v.Subnet }).(pulumi.StringOutput)
}

type GetLinkmonitorRouteArrayOutput struct{ *pulumi.OutputState }

func (GetLinkmonitorRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinkmonitorRoute)(nil)).Elem()
}

func (o GetLinkmonitorRouteArrayOutput) ToGetLinkmonitorRouteArrayOutput() GetLinkmonitorRouteArrayOutput {
	return o
}

func (o GetLinkmonitorRouteArrayOutput) ToGetLinkmonitorRouteArrayOutputWithContext(ctx context.Context) GetLinkmonitorRouteArrayOutput {
	return o
}

func (o GetLinkmonitorRouteArrayOutput) Index(i pulumi.IntInput) GetLinkmonitorRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLinkmonitorRoute {
		return vs[0].([]GetLinkmonitorRoute)[vs[1].(int)]
	}).(GetLinkmonitorRouteOutput)
}

type GetLinkmonitorServer struct {
	// Server address.
	Address string `pulumi:"address"`
}

// GetLinkmonitorServerInput is an input type that accepts GetLinkmonitorServerArgs and GetLinkmonitorServerOutput values.
// You can construct a concrete instance of `GetLinkmonitorServerInput` via:
//
//	GetLinkmonitorServerArgs{...}
type GetLinkmonitorServerInput interface {
	pulumi.Input

	ToGetLinkmonitorServerOutput() GetLinkmonitorServerOutput
	ToGetLinkmonitorServerOutputWithContext(context.Context) GetLinkmonitorServerOutput
}

type GetLinkmonitorServerArgs struct {
	// Server address.
	Address pulumi.StringInput `pulumi:"address"`
}

func (GetLinkmonitorServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinkmonitorServer)(nil)).Elem()
}

func (i GetLinkmonitorServerArgs) ToGetLinkmonitorServerOutput() GetLinkmonitorServerOutput {
	return i.ToGetLinkmonitorServerOutputWithContext(context.Background())
}

func (i GetLinkmonitorServerArgs) ToGetLinkmonitorServerOutputWithContext(ctx context.Context) GetLinkmonitorServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinkmonitorServerOutput)
}

// GetLinkmonitorServerArrayInput is an input type that accepts GetLinkmonitorServerArray and GetLinkmonitorServerArrayOutput values.
// You can construct a concrete instance of `GetLinkmonitorServerArrayInput` via:
//
//	GetLinkmonitorServerArray{ GetLinkmonitorServerArgs{...} }
type GetLinkmonitorServerArrayInput interface {
	pulumi.Input

	ToGetLinkmonitorServerArrayOutput() GetLinkmonitorServerArrayOutput
	ToGetLinkmonitorServerArrayOutputWithContext(context.Context) GetLinkmonitorServerArrayOutput
}

type GetLinkmonitorServerArray []GetLinkmonitorServerInput

func (GetLinkmonitorServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinkmonitorServer)(nil)).Elem()
}

func (i GetLinkmonitorServerArray) ToGetLinkmonitorServerArrayOutput() GetLinkmonitorServerArrayOutput {
	return i.ToGetLinkmonitorServerArrayOutputWithContext(context.Background())
}

func (i GetLinkmonitorServerArray) ToGetLinkmonitorServerArrayOutputWithContext(ctx context.Context) GetLinkmonitorServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinkmonitorServerArrayOutput)
}

type GetLinkmonitorServerOutput struct{ *pulumi.OutputState }

func (GetLinkmonitorServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinkmonitorServer)(nil)).Elem()
}

func (o GetLinkmonitorServerOutput) ToGetLinkmonitorServerOutput() GetLinkmonitorServerOutput {
	return o
}

func (o GetLinkmonitorServerOutput) ToGetLinkmonitorServerOutputWithContext(ctx context.Context) GetLinkmonitorServerOutput {
	return o
}

// Server address.
func (o GetLinkmonitorServerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinkmonitorServer) string { return v.Address }).(pulumi.StringOutput)
}

type GetLinkmonitorServerArrayOutput struct{ *pulumi.OutputState }

func (GetLinkmonitorServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinkmonitorServer)(nil)).Elem()
}

func (o GetLinkmonitorServerArrayOutput) ToGetLinkmonitorServerArrayOutput() GetLinkmonitorServerArrayOutput {
	return o
}

func (o GetLinkmonitorServerArrayOutput) ToGetLinkmonitorServerArrayOutputWithContext(ctx context.Context) GetLinkmonitorServerArrayOutput {
	return o
}

func (o GetLinkmonitorServerArrayOutput) Index(i pulumi.IntInput) GetLinkmonitorServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLinkmonitorServer {
		return vs[0].([]GetLinkmonitorServer)[vs[1].(int)]
	}).(GetLinkmonitorServerOutput)
}

type GetLinkmonitorServerList struct {
	// IP address of the server to be monitored.
	Dst string `pulumi:"dst"`
	// Server ID.
	Id int `pulumi:"id"`
	// Port number of the traffic to be used to monitor the server.
	Port int `pulumi:"port"`
	// Protocols used to monitor the server.
	Protocol string `pulumi:"protocol"`
	// Weight of the monitor to this dst (0 - 255).
	Weight int `pulumi:"weight"`
}

// GetLinkmonitorServerListInput is an input type that accepts GetLinkmonitorServerListArgs and GetLinkmonitorServerListOutput values.
// You can construct a concrete instance of `GetLinkmonitorServerListInput` via:
//
//	GetLinkmonitorServerListArgs{...}
type GetLinkmonitorServerListInput interface {
	pulumi.Input

	ToGetLinkmonitorServerListOutput() GetLinkmonitorServerListOutput
	ToGetLinkmonitorServerListOutputWithContext(context.Context) GetLinkmonitorServerListOutput
}

type GetLinkmonitorServerListArgs struct {
	// IP address of the server to be monitored.
	Dst pulumi.StringInput `pulumi:"dst"`
	// Server ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Port number of the traffic to be used to monitor the server.
	Port pulumi.IntInput `pulumi:"port"`
	// Protocols used to monitor the server.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Weight of the monitor to this dst (0 - 255).
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetLinkmonitorServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinkmonitorServerList)(nil)).Elem()
}

func (i GetLinkmonitorServerListArgs) ToGetLinkmonitorServerListOutput() GetLinkmonitorServerListOutput {
	return i.ToGetLinkmonitorServerListOutputWithContext(context.Background())
}

func (i GetLinkmonitorServerListArgs) ToGetLinkmonitorServerListOutputWithContext(ctx context.Context) GetLinkmonitorServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinkmonitorServerListOutput)
}

// GetLinkmonitorServerListArrayInput is an input type that accepts GetLinkmonitorServerListArray and GetLinkmonitorServerListArrayOutput values.
// You can construct a concrete instance of `GetLinkmonitorServerListArrayInput` via:
//
//	GetLinkmonitorServerListArray{ GetLinkmonitorServerListArgs{...} }
type GetLinkmonitorServerListArrayInput interface {
	pulumi.Input

	ToGetLinkmonitorServerListArrayOutput() GetLinkmonitorServerListArrayOutput
	ToGetLinkmonitorServerListArrayOutputWithContext(context.Context) GetLinkmonitorServerListArrayOutput
}

type GetLinkmonitorServerListArray []GetLinkmonitorServerListInput

func (GetLinkmonitorServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinkmonitorServerList)(nil)).Elem()
}

func (i GetLinkmonitorServerListArray) ToGetLinkmonitorServerListArrayOutput() GetLinkmonitorServerListArrayOutput {
	return i.ToGetLinkmonitorServerListArrayOutputWithContext(context.Background())
}

func (i GetLinkmonitorServerListArray) ToGetLinkmonitorServerListArrayOutputWithContext(ctx context.Context) GetLinkmonitorServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinkmonitorServerListArrayOutput)
}

type GetLinkmonitorServerListOutput struct{ *pulumi.OutputState }

func (GetLinkmonitorServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinkmonitorServerList)(nil)).Elem()
}

func (o GetLinkmonitorServerListOutput) ToGetLinkmonitorServerListOutput() GetLinkmonitorServerListOutput {
	return o
}

func (o GetLinkmonitorServerListOutput) ToGetLinkmonitorServerListOutputWithContext(ctx context.Context) GetLinkmonitorServerListOutput {
	return o
}

// IP address of the server to be monitored.
func (o GetLinkmonitorServerListOutput) Dst() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinkmonitorServerList) string { return v.Dst }).(pulumi.StringOutput)
}

// Server ID.
func (o GetLinkmonitorServerListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetLinkmonitorServerList) int { return v.Id }).(pulumi.IntOutput)
}

// Port number of the traffic to be used to monitor the server.
func (o GetLinkmonitorServerListOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetLinkmonitorServerList) int { return v.Port }).(pulumi.IntOutput)
}

// Protocols used to monitor the server.
func (o GetLinkmonitorServerListOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLinkmonitorServerList) string { return v.Protocol }).(pulumi.StringOutput)
}

// Weight of the monitor to this dst (0 - 255).
func (o GetLinkmonitorServerListOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetLinkmonitorServerList) int { return v.Weight }).(pulumi.IntOutput)
}

type GetLinkmonitorServerListArrayOutput struct{ *pulumi.OutputState }

func (GetLinkmonitorServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinkmonitorServerList)(nil)).Elem()
}

func (o GetLinkmonitorServerListArrayOutput) ToGetLinkmonitorServerListArrayOutput() GetLinkmonitorServerListArrayOutput {
	return o
}

func (o GetLinkmonitorServerListArrayOutput) ToGetLinkmonitorServerListArrayOutputWithContext(ctx context.Context) GetLinkmonitorServerListArrayOutput {
	return o
}

func (o GetLinkmonitorServerListArrayOutput) Index(i pulumi.IntInput) GetLinkmonitorServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLinkmonitorServerList {
		return vs[0].([]GetLinkmonitorServerList)[vs[1].(int)]
	}).(GetLinkmonitorServerListOutput)
}

type GetMobiletunnelNetwork struct {
	// Network entry ID.
	Id int `pulumi:"id"`
	// Select the associated interface name from available options.
	Interface string `pulumi:"interface"`
	// Class IP and Netmask with correction (Format:xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx or xxx.xxx.xxx.xxx/x).
	Prefix string `pulumi:"prefix"`
}

// GetMobiletunnelNetworkInput is an input type that accepts GetMobiletunnelNetworkArgs and GetMobiletunnelNetworkOutput values.
// You can construct a concrete instance of `GetMobiletunnelNetworkInput` via:
//
//	GetMobiletunnelNetworkArgs{...}
type GetMobiletunnelNetworkInput interface {
	pulumi.Input

	ToGetMobiletunnelNetworkOutput() GetMobiletunnelNetworkOutput
	ToGetMobiletunnelNetworkOutputWithContext(context.Context) GetMobiletunnelNetworkOutput
}

type GetMobiletunnelNetworkArgs struct {
	// Network entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Select the associated interface name from available options.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Class IP and Netmask with correction (Format:xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx or xxx.xxx.xxx.xxx/x).
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetMobiletunnelNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMobiletunnelNetwork)(nil)).Elem()
}

func (i GetMobiletunnelNetworkArgs) ToGetMobiletunnelNetworkOutput() GetMobiletunnelNetworkOutput {
	return i.ToGetMobiletunnelNetworkOutputWithContext(context.Background())
}

func (i GetMobiletunnelNetworkArgs) ToGetMobiletunnelNetworkOutputWithContext(ctx context.Context) GetMobiletunnelNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMobiletunnelNetworkOutput)
}

// GetMobiletunnelNetworkArrayInput is an input type that accepts GetMobiletunnelNetworkArray and GetMobiletunnelNetworkArrayOutput values.
// You can construct a concrete instance of `GetMobiletunnelNetworkArrayInput` via:
//
//	GetMobiletunnelNetworkArray{ GetMobiletunnelNetworkArgs{...} }
type GetMobiletunnelNetworkArrayInput interface {
	pulumi.Input

	ToGetMobiletunnelNetworkArrayOutput() GetMobiletunnelNetworkArrayOutput
	ToGetMobiletunnelNetworkArrayOutputWithContext(context.Context) GetMobiletunnelNetworkArrayOutput
}

type GetMobiletunnelNetworkArray []GetMobiletunnelNetworkInput

func (GetMobiletunnelNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMobiletunnelNetwork)(nil)).Elem()
}

func (i GetMobiletunnelNetworkArray) ToGetMobiletunnelNetworkArrayOutput() GetMobiletunnelNetworkArrayOutput {
	return i.ToGetMobiletunnelNetworkArrayOutputWithContext(context.Background())
}

func (i GetMobiletunnelNetworkArray) ToGetMobiletunnelNetworkArrayOutputWithContext(ctx context.Context) GetMobiletunnelNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMobiletunnelNetworkArrayOutput)
}

type GetMobiletunnelNetworkOutput struct{ *pulumi.OutputState }

func (GetMobiletunnelNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMobiletunnelNetwork)(nil)).Elem()
}

func (o GetMobiletunnelNetworkOutput) ToGetMobiletunnelNetworkOutput() GetMobiletunnelNetworkOutput {
	return o
}

func (o GetMobiletunnelNetworkOutput) ToGetMobiletunnelNetworkOutputWithContext(ctx context.Context) GetMobiletunnelNetworkOutput {
	return o
}

// Network entry ID.
func (o GetMobiletunnelNetworkOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetMobiletunnelNetwork) int { return v.Id }).(pulumi.IntOutput)
}

// Select the associated interface name from available options.
func (o GetMobiletunnelNetworkOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetMobiletunnelNetwork) string { return v.Interface }).(pulumi.StringOutput)
}

// Class IP and Netmask with correction (Format:xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx or xxx.xxx.xxx.xxx/x).
func (o GetMobiletunnelNetworkOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetMobiletunnelNetwork) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetMobiletunnelNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetMobiletunnelNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMobiletunnelNetwork)(nil)).Elem()
}

func (o GetMobiletunnelNetworkArrayOutput) ToGetMobiletunnelNetworkArrayOutput() GetMobiletunnelNetworkArrayOutput {
	return o
}

func (o GetMobiletunnelNetworkArrayOutput) ToGetMobiletunnelNetworkArrayOutputWithContext(ctx context.Context) GetMobiletunnelNetworkArrayOutput {
	return o
}

func (o GetMobiletunnelNetworkArrayOutput) Index(i pulumi.IntInput) GetMobiletunnelNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMobiletunnelNetwork {
		return vs[0].([]GetMobiletunnelNetwork)[vs[1].(int)]
	}).(GetMobiletunnelNetworkOutput)
}

type GetNat64SecondaryPrefix struct {
	// NAT64 prefix name.
	Name string `pulumi:"name"`
	// NAT64 prefix.
	Nat64Prefix string `pulumi:"nat64Prefix"`
}

// GetNat64SecondaryPrefixInput is an input type that accepts GetNat64SecondaryPrefixArgs and GetNat64SecondaryPrefixOutput values.
// You can construct a concrete instance of `GetNat64SecondaryPrefixInput` via:
//
//	GetNat64SecondaryPrefixArgs{...}
type GetNat64SecondaryPrefixInput interface {
	pulumi.Input

	ToGetNat64SecondaryPrefixOutput() GetNat64SecondaryPrefixOutput
	ToGetNat64SecondaryPrefixOutputWithContext(context.Context) GetNat64SecondaryPrefixOutput
}

type GetNat64SecondaryPrefixArgs struct {
	// NAT64 prefix name.
	Name pulumi.StringInput `pulumi:"name"`
	// NAT64 prefix.
	Nat64Prefix pulumi.StringInput `pulumi:"nat64Prefix"`
}

func (GetNat64SecondaryPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNat64SecondaryPrefix)(nil)).Elem()
}

func (i GetNat64SecondaryPrefixArgs) ToGetNat64SecondaryPrefixOutput() GetNat64SecondaryPrefixOutput {
	return i.ToGetNat64SecondaryPrefixOutputWithContext(context.Background())
}

func (i GetNat64SecondaryPrefixArgs) ToGetNat64SecondaryPrefixOutputWithContext(ctx context.Context) GetNat64SecondaryPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNat64SecondaryPrefixOutput)
}

// GetNat64SecondaryPrefixArrayInput is an input type that accepts GetNat64SecondaryPrefixArray and GetNat64SecondaryPrefixArrayOutput values.
// You can construct a concrete instance of `GetNat64SecondaryPrefixArrayInput` via:
//
//	GetNat64SecondaryPrefixArray{ GetNat64SecondaryPrefixArgs{...} }
type GetNat64SecondaryPrefixArrayInput interface {
	pulumi.Input

	ToGetNat64SecondaryPrefixArrayOutput() GetNat64SecondaryPrefixArrayOutput
	ToGetNat64SecondaryPrefixArrayOutputWithContext(context.Context) GetNat64SecondaryPrefixArrayOutput
}

type GetNat64SecondaryPrefixArray []GetNat64SecondaryPrefixInput

func (GetNat64SecondaryPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNat64SecondaryPrefix)(nil)).Elem()
}

func (i GetNat64SecondaryPrefixArray) ToGetNat64SecondaryPrefixArrayOutput() GetNat64SecondaryPrefixArrayOutput {
	return i.ToGetNat64SecondaryPrefixArrayOutputWithContext(context.Background())
}

func (i GetNat64SecondaryPrefixArray) ToGetNat64SecondaryPrefixArrayOutputWithContext(ctx context.Context) GetNat64SecondaryPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNat64SecondaryPrefixArrayOutput)
}

type GetNat64SecondaryPrefixOutput struct{ *pulumi.OutputState }

func (GetNat64SecondaryPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNat64SecondaryPrefix)(nil)).Elem()
}

func (o GetNat64SecondaryPrefixOutput) ToGetNat64SecondaryPrefixOutput() GetNat64SecondaryPrefixOutput {
	return o
}

func (o GetNat64SecondaryPrefixOutput) ToGetNat64SecondaryPrefixOutputWithContext(ctx context.Context) GetNat64SecondaryPrefixOutput {
	return o
}

// NAT64 prefix name.
func (o GetNat64SecondaryPrefixOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNat64SecondaryPrefix) string { return v.Name }).(pulumi.StringOutput)
}

// NAT64 prefix.
func (o GetNat64SecondaryPrefixOutput) Nat64Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetNat64SecondaryPrefix) string { return v.Nat64Prefix }).(pulumi.StringOutput)
}

type GetNat64SecondaryPrefixArrayOutput struct{ *pulumi.OutputState }

func (GetNat64SecondaryPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNat64SecondaryPrefix)(nil)).Elem()
}

func (o GetNat64SecondaryPrefixArrayOutput) ToGetNat64SecondaryPrefixArrayOutput() GetNat64SecondaryPrefixArrayOutput {
	return o
}

func (o GetNat64SecondaryPrefixArrayOutput) ToGetNat64SecondaryPrefixArrayOutputWithContext(ctx context.Context) GetNat64SecondaryPrefixArrayOutput {
	return o
}

func (o GetNat64SecondaryPrefixArrayOutput) Index(i pulumi.IntInput) GetNat64SecondaryPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNat64SecondaryPrefix {
		return vs[0].([]GetNat64SecondaryPrefix)[vs[1].(int)]
	}).(GetNat64SecondaryPrefixOutput)
}

type GetNdproxyMember struct {
	// Interface name.
	InterfaceName string `pulumi:"interfaceName"`
}

// GetNdproxyMemberInput is an input type that accepts GetNdproxyMemberArgs and GetNdproxyMemberOutput values.
// You can construct a concrete instance of `GetNdproxyMemberInput` via:
//
//	GetNdproxyMemberArgs{...}
type GetNdproxyMemberInput interface {
	pulumi.Input

	ToGetNdproxyMemberOutput() GetNdproxyMemberOutput
	ToGetNdproxyMemberOutputWithContext(context.Context) GetNdproxyMemberOutput
}

type GetNdproxyMemberArgs struct {
	// Interface name.
	InterfaceName pulumi.StringInput `pulumi:"interfaceName"`
}

func (GetNdproxyMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNdproxyMember)(nil)).Elem()
}

func (i GetNdproxyMemberArgs) ToGetNdproxyMemberOutput() GetNdproxyMemberOutput {
	return i.ToGetNdproxyMemberOutputWithContext(context.Background())
}

func (i GetNdproxyMemberArgs) ToGetNdproxyMemberOutputWithContext(ctx context.Context) GetNdproxyMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNdproxyMemberOutput)
}

// GetNdproxyMemberArrayInput is an input type that accepts GetNdproxyMemberArray and GetNdproxyMemberArrayOutput values.
// You can construct a concrete instance of `GetNdproxyMemberArrayInput` via:
//
//	GetNdproxyMemberArray{ GetNdproxyMemberArgs{...} }
type GetNdproxyMemberArrayInput interface {
	pulumi.Input

	ToGetNdproxyMemberArrayOutput() GetNdproxyMemberArrayOutput
	ToGetNdproxyMemberArrayOutputWithContext(context.Context) GetNdproxyMemberArrayOutput
}

type GetNdproxyMemberArray []GetNdproxyMemberInput

func (GetNdproxyMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNdproxyMember)(nil)).Elem()
}

func (i GetNdproxyMemberArray) ToGetNdproxyMemberArrayOutput() GetNdproxyMemberArrayOutput {
	return i.ToGetNdproxyMemberArrayOutputWithContext(context.Background())
}

func (i GetNdproxyMemberArray) ToGetNdproxyMemberArrayOutputWithContext(ctx context.Context) GetNdproxyMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNdproxyMemberArrayOutput)
}

type GetNdproxyMemberOutput struct{ *pulumi.OutputState }

func (GetNdproxyMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNdproxyMember)(nil)).Elem()
}

func (o GetNdproxyMemberOutput) ToGetNdproxyMemberOutput() GetNdproxyMemberOutput {
	return o
}

func (o GetNdproxyMemberOutput) ToGetNdproxyMemberOutputWithContext(ctx context.Context) GetNdproxyMemberOutput {
	return o
}

// Interface name.
func (o GetNdproxyMemberOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNdproxyMember) string { return v.InterfaceName }).(pulumi.StringOutput)
}

type GetNdproxyMemberArrayOutput struct{ *pulumi.OutputState }

func (GetNdproxyMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNdproxyMember)(nil)).Elem()
}

func (o GetNdproxyMemberArrayOutput) ToGetNdproxyMemberArrayOutput() GetNdproxyMemberArrayOutput {
	return o
}

func (o GetNdproxyMemberArrayOutput) ToGetNdproxyMemberArrayOutputWithContext(ctx context.Context) GetNdproxyMemberArrayOutput {
	return o
}

func (o GetNdproxyMemberArrayOutput) Index(i pulumi.IntInput) GetNdproxyMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNdproxyMember {
		return vs[0].([]GetNdproxyMember)[vs[1].(int)]
	}).(GetNdproxyMemberOutput)
}

type GetNetflowCollector struct {
	// Collector IP.
	CollectorIp string `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort int `pulumi:"collectorPort"`
	// ID.
	Id int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp string `pulumi:"sourceIp"`
}

// GetNetflowCollectorInput is an input type that accepts GetNetflowCollectorArgs and GetNetflowCollectorOutput values.
// You can construct a concrete instance of `GetNetflowCollectorInput` via:
//
//	GetNetflowCollectorArgs{...}
type GetNetflowCollectorInput interface {
	pulumi.Input

	ToGetNetflowCollectorOutput() GetNetflowCollectorOutput
	ToGetNetflowCollectorOutputWithContext(context.Context) GetNetflowCollectorOutput
}

type GetNetflowCollectorArgs struct {
	// Collector IP.
	CollectorIp pulumi.StringInput `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort pulumi.IntInput `pulumi:"collectorPort"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod pulumi.StringInput `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp pulumi.StringInput `pulumi:"sourceIp"`
}

func (GetNetflowCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetflowCollector)(nil)).Elem()
}

func (i GetNetflowCollectorArgs) ToGetNetflowCollectorOutput() GetNetflowCollectorOutput {
	return i.ToGetNetflowCollectorOutputWithContext(context.Background())
}

func (i GetNetflowCollectorArgs) ToGetNetflowCollectorOutputWithContext(ctx context.Context) GetNetflowCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetflowCollectorOutput)
}

// GetNetflowCollectorArrayInput is an input type that accepts GetNetflowCollectorArray and GetNetflowCollectorArrayOutput values.
// You can construct a concrete instance of `GetNetflowCollectorArrayInput` via:
//
//	GetNetflowCollectorArray{ GetNetflowCollectorArgs{...} }
type GetNetflowCollectorArrayInput interface {
	pulumi.Input

	ToGetNetflowCollectorArrayOutput() GetNetflowCollectorArrayOutput
	ToGetNetflowCollectorArrayOutputWithContext(context.Context) GetNetflowCollectorArrayOutput
}

type GetNetflowCollectorArray []GetNetflowCollectorInput

func (GetNetflowCollectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetflowCollector)(nil)).Elem()
}

func (i GetNetflowCollectorArray) ToGetNetflowCollectorArrayOutput() GetNetflowCollectorArrayOutput {
	return i.ToGetNetflowCollectorArrayOutputWithContext(context.Background())
}

func (i GetNetflowCollectorArray) ToGetNetflowCollectorArrayOutputWithContext(ctx context.Context) GetNetflowCollectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetflowCollectorArrayOutput)
}

type GetNetflowCollectorOutput struct{ *pulumi.OutputState }

func (GetNetflowCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetflowCollector)(nil)).Elem()
}

func (o GetNetflowCollectorOutput) ToGetNetflowCollectorOutput() GetNetflowCollectorOutput {
	return o
}

func (o GetNetflowCollectorOutput) ToGetNetflowCollectorOutputWithContext(ctx context.Context) GetNetflowCollectorOutput {
	return o
}

// Collector IP.
func (o GetNetflowCollectorOutput) CollectorIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetflowCollector) string { return v.CollectorIp }).(pulumi.StringOutput)
}

// NetFlow collector port number.
func (o GetNetflowCollectorOutput) CollectorPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetflowCollector) int { return v.CollectorPort }).(pulumi.IntOutput)
}

// ID.
func (o GetNetflowCollectorOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetflowCollector) int { return v.Id }).(pulumi.IntOutput)
}

// Specify outgoing interface to reach server.
func (o GetNetflowCollectorOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetflowCollector) string { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server.
func (o GetNetflowCollectorOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetflowCollector) string { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Source IP address for communication with the NetFlow agent.
func (o GetNetflowCollectorOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetflowCollector) string { return v.SourceIp }).(pulumi.StringOutput)
}

type GetNetflowCollectorArrayOutput struct{ *pulumi.OutputState }

func (GetNetflowCollectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetflowCollector)(nil)).Elem()
}

func (o GetNetflowCollectorArrayOutput) ToGetNetflowCollectorArrayOutput() GetNetflowCollectorArrayOutput {
	return o
}

func (o GetNetflowCollectorArrayOutput) ToGetNetflowCollectorArrayOutputWithContext(ctx context.Context) GetNetflowCollectorArrayOutput {
	return o
}

func (o GetNetflowCollectorArrayOutput) Index(i pulumi.IntInput) GetNetflowCollectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetflowCollector {
		return vs[0].([]GetNetflowCollector)[vs[1].(int)]
	}).(GetNetflowCollectorOutput)
}

type GetNtpInterface struct {
	// Interface name.
	InterfaceName string `pulumi:"interfaceName"`
}

// GetNtpInterfaceInput is an input type that accepts GetNtpInterfaceArgs and GetNtpInterfaceOutput values.
// You can construct a concrete instance of `GetNtpInterfaceInput` via:
//
//	GetNtpInterfaceArgs{...}
type GetNtpInterfaceInput interface {
	pulumi.Input

	ToGetNtpInterfaceOutput() GetNtpInterfaceOutput
	ToGetNtpInterfaceOutputWithContext(context.Context) GetNtpInterfaceOutput
}

type GetNtpInterfaceArgs struct {
	// Interface name.
	InterfaceName pulumi.StringInput `pulumi:"interfaceName"`
}

func (GetNtpInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNtpInterface)(nil)).Elem()
}

func (i GetNtpInterfaceArgs) ToGetNtpInterfaceOutput() GetNtpInterfaceOutput {
	return i.ToGetNtpInterfaceOutputWithContext(context.Background())
}

func (i GetNtpInterfaceArgs) ToGetNtpInterfaceOutputWithContext(ctx context.Context) GetNtpInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNtpInterfaceOutput)
}

// GetNtpInterfaceArrayInput is an input type that accepts GetNtpInterfaceArray and GetNtpInterfaceArrayOutput values.
// You can construct a concrete instance of `GetNtpInterfaceArrayInput` via:
//
//	GetNtpInterfaceArray{ GetNtpInterfaceArgs{...} }
type GetNtpInterfaceArrayInput interface {
	pulumi.Input

	ToGetNtpInterfaceArrayOutput() GetNtpInterfaceArrayOutput
	ToGetNtpInterfaceArrayOutputWithContext(context.Context) GetNtpInterfaceArrayOutput
}

type GetNtpInterfaceArray []GetNtpInterfaceInput

func (GetNtpInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNtpInterface)(nil)).Elem()
}

func (i GetNtpInterfaceArray) ToGetNtpInterfaceArrayOutput() GetNtpInterfaceArrayOutput {
	return i.ToGetNtpInterfaceArrayOutputWithContext(context.Background())
}

func (i GetNtpInterfaceArray) ToGetNtpInterfaceArrayOutputWithContext(ctx context.Context) GetNtpInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNtpInterfaceArrayOutput)
}

type GetNtpInterfaceOutput struct{ *pulumi.OutputState }

func (GetNtpInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNtpInterface)(nil)).Elem()
}

func (o GetNtpInterfaceOutput) ToGetNtpInterfaceOutput() GetNtpInterfaceOutput {
	return o
}

func (o GetNtpInterfaceOutput) ToGetNtpInterfaceOutputWithContext(ctx context.Context) GetNtpInterfaceOutput {
	return o
}

// Interface name.
func (o GetNtpInterfaceOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNtpInterface) string { return v.InterfaceName }).(pulumi.StringOutput)
}

type GetNtpInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetNtpInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNtpInterface)(nil)).Elem()
}

func (o GetNtpInterfaceArrayOutput) ToGetNtpInterfaceArrayOutput() GetNtpInterfaceArrayOutput {
	return o
}

func (o GetNtpInterfaceArrayOutput) ToGetNtpInterfaceArrayOutputWithContext(ctx context.Context) GetNtpInterfaceArrayOutput {
	return o
}

func (o GetNtpInterfaceArrayOutput) Index(i pulumi.IntInput) GetNtpInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNtpInterface {
		return vs[0].([]GetNtpInterface)[vs[1].(int)]
	}).(GetNtpInterfaceOutput)
}

type GetNtpNtpserver struct {
	// Enable/disable MD5/SHA1 authentication.
	Authentication string `pulumi:"authentication"`
	// NTP server ID.
	Id int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod string `pulumi:"interfaceSelectMethod"`
	// Choose to connect to IPv4 or/and IPv6 NTP server.
	IpType string `pulumi:"ipType"`
	// Key for MD5/SHA1 authentication.
	Key string `pulumi:"key"`
	// Key ID for authentication.
	KeyId int `pulumi:"keyId"`
	// Enable to use NTPv3 instead of NTPv4.
	Ntpv3 string `pulumi:"ntpv3"`
	// IP address or hostname of the NTP Server.
	Server string `pulumi:"server"`
}

// GetNtpNtpserverInput is an input type that accepts GetNtpNtpserverArgs and GetNtpNtpserverOutput values.
// You can construct a concrete instance of `GetNtpNtpserverInput` via:
//
//	GetNtpNtpserverArgs{...}
type GetNtpNtpserverInput interface {
	pulumi.Input

	ToGetNtpNtpserverOutput() GetNtpNtpserverOutput
	ToGetNtpNtpserverOutputWithContext(context.Context) GetNtpNtpserverOutput
}

type GetNtpNtpserverArgs struct {
	// Enable/disable MD5/SHA1 authentication.
	Authentication pulumi.StringInput `pulumi:"authentication"`
	// NTP server ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod pulumi.StringInput `pulumi:"interfaceSelectMethod"`
	// Choose to connect to IPv4 or/and IPv6 NTP server.
	IpType pulumi.StringInput `pulumi:"ipType"`
	// Key for MD5/SHA1 authentication.
	Key pulumi.StringInput `pulumi:"key"`
	// Key ID for authentication.
	KeyId pulumi.IntInput `pulumi:"keyId"`
	// Enable to use NTPv3 instead of NTPv4.
	Ntpv3 pulumi.StringInput `pulumi:"ntpv3"`
	// IP address or hostname of the NTP Server.
	Server pulumi.StringInput `pulumi:"server"`
}

func (GetNtpNtpserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNtpNtpserver)(nil)).Elem()
}

func (i GetNtpNtpserverArgs) ToGetNtpNtpserverOutput() GetNtpNtpserverOutput {
	return i.ToGetNtpNtpserverOutputWithContext(context.Background())
}

func (i GetNtpNtpserverArgs) ToGetNtpNtpserverOutputWithContext(ctx context.Context) GetNtpNtpserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNtpNtpserverOutput)
}

// GetNtpNtpserverArrayInput is an input type that accepts GetNtpNtpserverArray and GetNtpNtpserverArrayOutput values.
// You can construct a concrete instance of `GetNtpNtpserverArrayInput` via:
//
//	GetNtpNtpserverArray{ GetNtpNtpserverArgs{...} }
type GetNtpNtpserverArrayInput interface {
	pulumi.Input

	ToGetNtpNtpserverArrayOutput() GetNtpNtpserverArrayOutput
	ToGetNtpNtpserverArrayOutputWithContext(context.Context) GetNtpNtpserverArrayOutput
}

type GetNtpNtpserverArray []GetNtpNtpserverInput

func (GetNtpNtpserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNtpNtpserver)(nil)).Elem()
}

func (i GetNtpNtpserverArray) ToGetNtpNtpserverArrayOutput() GetNtpNtpserverArrayOutput {
	return i.ToGetNtpNtpserverArrayOutputWithContext(context.Background())
}

func (i GetNtpNtpserverArray) ToGetNtpNtpserverArrayOutputWithContext(ctx context.Context) GetNtpNtpserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNtpNtpserverArrayOutput)
}

type GetNtpNtpserverOutput struct{ *pulumi.OutputState }

func (GetNtpNtpserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNtpNtpserver)(nil)).Elem()
}

func (o GetNtpNtpserverOutput) ToGetNtpNtpserverOutput() GetNtpNtpserverOutput {
	return o
}

func (o GetNtpNtpserverOutput) ToGetNtpNtpserverOutputWithContext(ctx context.Context) GetNtpNtpserverOutput {
	return o
}

// Enable/disable MD5/SHA1 authentication.
func (o GetNtpNtpserverOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v GetNtpNtpserver) string { return v.Authentication }).(pulumi.StringOutput)
}

// NTP server ID.
func (o GetNtpNtpserverOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetNtpNtpserver) int { return v.Id }).(pulumi.IntOutput)
}

// Specify outgoing interface to reach server.
func (o GetNtpNtpserverOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetNtpNtpserver) string { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server.
func (o GetNtpNtpserverOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetNtpNtpserver) string { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Choose to connect to IPv4 or/and IPv6 NTP server.
func (o GetNtpNtpserverOutput) IpType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNtpNtpserver) string { return v.IpType }).(pulumi.StringOutput)
}

// Key for MD5/SHA1 authentication.
func (o GetNtpNtpserverOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNtpNtpserver) string { return v.Key }).(pulumi.StringOutput)
}

// Key ID for authentication.
func (o GetNtpNtpserverOutput) KeyId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNtpNtpserver) int { return v.KeyId }).(pulumi.IntOutput)
}

// Enable to use NTPv3 instead of NTPv4.
func (o GetNtpNtpserverOutput) Ntpv3() pulumi.StringOutput {
	return o.ApplyT(func(v GetNtpNtpserver) string { return v.Ntpv3 }).(pulumi.StringOutput)
}

// IP address or hostname of the NTP Server.
func (o GetNtpNtpserverOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GetNtpNtpserver) string { return v.Server }).(pulumi.StringOutput)
}

type GetNtpNtpserverArrayOutput struct{ *pulumi.OutputState }

func (GetNtpNtpserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNtpNtpserver)(nil)).Elem()
}

func (o GetNtpNtpserverArrayOutput) ToGetNtpNtpserverArrayOutput() GetNtpNtpserverArrayOutput {
	return o
}

func (o GetNtpNtpserverArrayOutput) ToGetNtpNtpserverArrayOutputWithContext(ctx context.Context) GetNtpNtpserverArrayOutput {
	return o
}

func (o GetNtpNtpserverArrayOutput) Index(i pulumi.IntInput) GetNtpNtpserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNtpNtpserver {
		return vs[0].([]GetNtpNtpserver)[vs[1].(int)]
	}).(GetNtpNtpserverOutput)
}

type GetObjecttaggingTag struct {
	// Tag name.
	Name string `pulumi:"name"`
}

// GetObjecttaggingTagInput is an input type that accepts GetObjecttaggingTagArgs and GetObjecttaggingTagOutput values.
// You can construct a concrete instance of `GetObjecttaggingTagInput` via:
//
//	GetObjecttaggingTagArgs{...}
type GetObjecttaggingTagInput interface {
	pulumi.Input

	ToGetObjecttaggingTagOutput() GetObjecttaggingTagOutput
	ToGetObjecttaggingTagOutputWithContext(context.Context) GetObjecttaggingTagOutput
}

type GetObjecttaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetObjecttaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjecttaggingTag)(nil)).Elem()
}

func (i GetObjecttaggingTagArgs) ToGetObjecttaggingTagOutput() GetObjecttaggingTagOutput {
	return i.ToGetObjecttaggingTagOutputWithContext(context.Background())
}

func (i GetObjecttaggingTagArgs) ToGetObjecttaggingTagOutputWithContext(ctx context.Context) GetObjecttaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjecttaggingTagOutput)
}

// GetObjecttaggingTagArrayInput is an input type that accepts GetObjecttaggingTagArray and GetObjecttaggingTagArrayOutput values.
// You can construct a concrete instance of `GetObjecttaggingTagArrayInput` via:
//
//	GetObjecttaggingTagArray{ GetObjecttaggingTagArgs{...} }
type GetObjecttaggingTagArrayInput interface {
	pulumi.Input

	ToGetObjecttaggingTagArrayOutput() GetObjecttaggingTagArrayOutput
	ToGetObjecttaggingTagArrayOutputWithContext(context.Context) GetObjecttaggingTagArrayOutput
}

type GetObjecttaggingTagArray []GetObjecttaggingTagInput

func (GetObjecttaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjecttaggingTag)(nil)).Elem()
}

func (i GetObjecttaggingTagArray) ToGetObjecttaggingTagArrayOutput() GetObjecttaggingTagArrayOutput {
	return i.ToGetObjecttaggingTagArrayOutputWithContext(context.Background())
}

func (i GetObjecttaggingTagArray) ToGetObjecttaggingTagArrayOutputWithContext(ctx context.Context) GetObjecttaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjecttaggingTagArrayOutput)
}

type GetObjecttaggingTagOutput struct{ *pulumi.OutputState }

func (GetObjecttaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjecttaggingTag)(nil)).Elem()
}

func (o GetObjecttaggingTagOutput) ToGetObjecttaggingTagOutput() GetObjecttaggingTagOutput {
	return o
}

func (o GetObjecttaggingTagOutput) ToGetObjecttaggingTagOutputWithContext(ctx context.Context) GetObjecttaggingTagOutput {
	return o
}

// Tag name.
func (o GetObjecttaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjecttaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetObjecttaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetObjecttaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjecttaggingTag)(nil)).Elem()
}

func (o GetObjecttaggingTagArrayOutput) ToGetObjecttaggingTagArrayOutput() GetObjecttaggingTagArrayOutput {
	return o
}

func (o GetObjecttaggingTagArrayOutput) ToGetObjecttaggingTagArrayOutputWithContext(ctx context.Context) GetObjecttaggingTagArrayOutput {
	return o
}

func (o GetObjecttaggingTagArrayOutput) Index(i pulumi.IntInput) GetObjecttaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetObjecttaggingTag {
		return vs[0].([]GetObjecttaggingTag)[vs[1].(int)]
	}).(GetObjecttaggingTagOutput)
}

type GetReplacemsggroupAdmin struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupAdminInput is an input type that accepts GetReplacemsggroupAdminArgs and GetReplacemsggroupAdminOutput values.
// You can construct a concrete instance of `GetReplacemsggroupAdminInput` via:
//
//	GetReplacemsggroupAdminArgs{...}
type GetReplacemsggroupAdminInput interface {
	pulumi.Input

	ToGetReplacemsggroupAdminOutput() GetReplacemsggroupAdminOutput
	ToGetReplacemsggroupAdminOutputWithContext(context.Context) GetReplacemsggroupAdminOutput
}

type GetReplacemsggroupAdminArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupAdminArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupAdmin)(nil)).Elem()
}

func (i GetReplacemsggroupAdminArgs) ToGetReplacemsggroupAdminOutput() GetReplacemsggroupAdminOutput {
	return i.ToGetReplacemsggroupAdminOutputWithContext(context.Background())
}

func (i GetReplacemsggroupAdminArgs) ToGetReplacemsggroupAdminOutputWithContext(ctx context.Context) GetReplacemsggroupAdminOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupAdminOutput)
}

// GetReplacemsggroupAdminArrayInput is an input type that accepts GetReplacemsggroupAdminArray and GetReplacemsggroupAdminArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupAdminArrayInput` via:
//
//	GetReplacemsggroupAdminArray{ GetReplacemsggroupAdminArgs{...} }
type GetReplacemsggroupAdminArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupAdminArrayOutput() GetReplacemsggroupAdminArrayOutput
	ToGetReplacemsggroupAdminArrayOutputWithContext(context.Context) GetReplacemsggroupAdminArrayOutput
}

type GetReplacemsggroupAdminArray []GetReplacemsggroupAdminInput

func (GetReplacemsggroupAdminArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupAdmin)(nil)).Elem()
}

func (i GetReplacemsggroupAdminArray) ToGetReplacemsggroupAdminArrayOutput() GetReplacemsggroupAdminArrayOutput {
	return i.ToGetReplacemsggroupAdminArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupAdminArray) ToGetReplacemsggroupAdminArrayOutputWithContext(ctx context.Context) GetReplacemsggroupAdminArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupAdminArrayOutput)
}

type GetReplacemsggroupAdminOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupAdminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupAdmin)(nil)).Elem()
}

func (o GetReplacemsggroupAdminOutput) ToGetReplacemsggroupAdminOutput() GetReplacemsggroupAdminOutput {
	return o
}

func (o GetReplacemsggroupAdminOutput) ToGetReplacemsggroupAdminOutputWithContext(ctx context.Context) GetReplacemsggroupAdminOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupAdminOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAdmin) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupAdminOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAdmin) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupAdminOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAdmin) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupAdminOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAdmin) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupAdminArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupAdminArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupAdmin)(nil)).Elem()
}

func (o GetReplacemsggroupAdminArrayOutput) ToGetReplacemsggroupAdminArrayOutput() GetReplacemsggroupAdminArrayOutput {
	return o
}

func (o GetReplacemsggroupAdminArrayOutput) ToGetReplacemsggroupAdminArrayOutputWithContext(ctx context.Context) GetReplacemsggroupAdminArrayOutput {
	return o
}

func (o GetReplacemsggroupAdminArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupAdminOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupAdmin {
		return vs[0].([]GetReplacemsggroupAdmin)[vs[1].(int)]
	}).(GetReplacemsggroupAdminOutput)
}

type GetReplacemsggroupAlertmail struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupAlertmailInput is an input type that accepts GetReplacemsggroupAlertmailArgs and GetReplacemsggroupAlertmailOutput values.
// You can construct a concrete instance of `GetReplacemsggroupAlertmailInput` via:
//
//	GetReplacemsggroupAlertmailArgs{...}
type GetReplacemsggroupAlertmailInput interface {
	pulumi.Input

	ToGetReplacemsggroupAlertmailOutput() GetReplacemsggroupAlertmailOutput
	ToGetReplacemsggroupAlertmailOutputWithContext(context.Context) GetReplacemsggroupAlertmailOutput
}

type GetReplacemsggroupAlertmailArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupAlertmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupAlertmail)(nil)).Elem()
}

func (i GetReplacemsggroupAlertmailArgs) ToGetReplacemsggroupAlertmailOutput() GetReplacemsggroupAlertmailOutput {
	return i.ToGetReplacemsggroupAlertmailOutputWithContext(context.Background())
}

func (i GetReplacemsggroupAlertmailArgs) ToGetReplacemsggroupAlertmailOutputWithContext(ctx context.Context) GetReplacemsggroupAlertmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupAlertmailOutput)
}

// GetReplacemsggroupAlertmailArrayInput is an input type that accepts GetReplacemsggroupAlertmailArray and GetReplacemsggroupAlertmailArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupAlertmailArrayInput` via:
//
//	GetReplacemsggroupAlertmailArray{ GetReplacemsggroupAlertmailArgs{...} }
type GetReplacemsggroupAlertmailArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupAlertmailArrayOutput() GetReplacemsggroupAlertmailArrayOutput
	ToGetReplacemsggroupAlertmailArrayOutputWithContext(context.Context) GetReplacemsggroupAlertmailArrayOutput
}

type GetReplacemsggroupAlertmailArray []GetReplacemsggroupAlertmailInput

func (GetReplacemsggroupAlertmailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupAlertmail)(nil)).Elem()
}

func (i GetReplacemsggroupAlertmailArray) ToGetReplacemsggroupAlertmailArrayOutput() GetReplacemsggroupAlertmailArrayOutput {
	return i.ToGetReplacemsggroupAlertmailArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupAlertmailArray) ToGetReplacemsggroupAlertmailArrayOutputWithContext(ctx context.Context) GetReplacemsggroupAlertmailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupAlertmailArrayOutput)
}

type GetReplacemsggroupAlertmailOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupAlertmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupAlertmail)(nil)).Elem()
}

func (o GetReplacemsggroupAlertmailOutput) ToGetReplacemsggroupAlertmailOutput() GetReplacemsggroupAlertmailOutput {
	return o
}

func (o GetReplacemsggroupAlertmailOutput) ToGetReplacemsggroupAlertmailOutputWithContext(ctx context.Context) GetReplacemsggroupAlertmailOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupAlertmailOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAlertmail) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupAlertmailOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAlertmail) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupAlertmailOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAlertmail) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupAlertmailOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAlertmail) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupAlertmailArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupAlertmailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupAlertmail)(nil)).Elem()
}

func (o GetReplacemsggroupAlertmailArrayOutput) ToGetReplacemsggroupAlertmailArrayOutput() GetReplacemsggroupAlertmailArrayOutput {
	return o
}

func (o GetReplacemsggroupAlertmailArrayOutput) ToGetReplacemsggroupAlertmailArrayOutputWithContext(ctx context.Context) GetReplacemsggroupAlertmailArrayOutput {
	return o
}

func (o GetReplacemsggroupAlertmailArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupAlertmailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupAlertmail {
		return vs[0].([]GetReplacemsggroupAlertmail)[vs[1].(int)]
	}).(GetReplacemsggroupAlertmailOutput)
}

type GetReplacemsggroupAuth struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupAuthInput is an input type that accepts GetReplacemsggroupAuthArgs and GetReplacemsggroupAuthOutput values.
// You can construct a concrete instance of `GetReplacemsggroupAuthInput` via:
//
//	GetReplacemsggroupAuthArgs{...}
type GetReplacemsggroupAuthInput interface {
	pulumi.Input

	ToGetReplacemsggroupAuthOutput() GetReplacemsggroupAuthOutput
	ToGetReplacemsggroupAuthOutputWithContext(context.Context) GetReplacemsggroupAuthOutput
}

type GetReplacemsggroupAuthArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupAuth)(nil)).Elem()
}

func (i GetReplacemsggroupAuthArgs) ToGetReplacemsggroupAuthOutput() GetReplacemsggroupAuthOutput {
	return i.ToGetReplacemsggroupAuthOutputWithContext(context.Background())
}

func (i GetReplacemsggroupAuthArgs) ToGetReplacemsggroupAuthOutputWithContext(ctx context.Context) GetReplacemsggroupAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupAuthOutput)
}

// GetReplacemsggroupAuthArrayInput is an input type that accepts GetReplacemsggroupAuthArray and GetReplacemsggroupAuthArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupAuthArrayInput` via:
//
//	GetReplacemsggroupAuthArray{ GetReplacemsggroupAuthArgs{...} }
type GetReplacemsggroupAuthArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupAuthArrayOutput() GetReplacemsggroupAuthArrayOutput
	ToGetReplacemsggroupAuthArrayOutputWithContext(context.Context) GetReplacemsggroupAuthArrayOutput
}

type GetReplacemsggroupAuthArray []GetReplacemsggroupAuthInput

func (GetReplacemsggroupAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupAuth)(nil)).Elem()
}

func (i GetReplacemsggroupAuthArray) ToGetReplacemsggroupAuthArrayOutput() GetReplacemsggroupAuthArrayOutput {
	return i.ToGetReplacemsggroupAuthArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupAuthArray) ToGetReplacemsggroupAuthArrayOutputWithContext(ctx context.Context) GetReplacemsggroupAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupAuthArrayOutput)
}

type GetReplacemsggroupAuthOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupAuth)(nil)).Elem()
}

func (o GetReplacemsggroupAuthOutput) ToGetReplacemsggroupAuthOutput() GetReplacemsggroupAuthOutput {
	return o
}

func (o GetReplacemsggroupAuthOutput) ToGetReplacemsggroupAuthOutputWithContext(ctx context.Context) GetReplacemsggroupAuthOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupAuthOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAuth) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupAuthOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAuth) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupAuthOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAuth) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupAuthOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAuth) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupAuthArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupAuth)(nil)).Elem()
}

func (o GetReplacemsggroupAuthArrayOutput) ToGetReplacemsggroupAuthArrayOutput() GetReplacemsggroupAuthArrayOutput {
	return o
}

func (o GetReplacemsggroupAuthArrayOutput) ToGetReplacemsggroupAuthArrayOutputWithContext(ctx context.Context) GetReplacemsggroupAuthArrayOutput {
	return o
}

func (o GetReplacemsggroupAuthArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupAuth {
		return vs[0].([]GetReplacemsggroupAuth)[vs[1].(int)]
	}).(GetReplacemsggroupAuthOutput)
}

type GetReplacemsggroupAutomation struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupAutomationInput is an input type that accepts GetReplacemsggroupAutomationArgs and GetReplacemsggroupAutomationOutput values.
// You can construct a concrete instance of `GetReplacemsggroupAutomationInput` via:
//
//	GetReplacemsggroupAutomationArgs{...}
type GetReplacemsggroupAutomationInput interface {
	pulumi.Input

	ToGetReplacemsggroupAutomationOutput() GetReplacemsggroupAutomationOutput
	ToGetReplacemsggroupAutomationOutputWithContext(context.Context) GetReplacemsggroupAutomationOutput
}

type GetReplacemsggroupAutomationArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupAutomation)(nil)).Elem()
}

func (i GetReplacemsggroupAutomationArgs) ToGetReplacemsggroupAutomationOutput() GetReplacemsggroupAutomationOutput {
	return i.ToGetReplacemsggroupAutomationOutputWithContext(context.Background())
}

func (i GetReplacemsggroupAutomationArgs) ToGetReplacemsggroupAutomationOutputWithContext(ctx context.Context) GetReplacemsggroupAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupAutomationOutput)
}

// GetReplacemsggroupAutomationArrayInput is an input type that accepts GetReplacemsggroupAutomationArray and GetReplacemsggroupAutomationArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupAutomationArrayInput` via:
//
//	GetReplacemsggroupAutomationArray{ GetReplacemsggroupAutomationArgs{...} }
type GetReplacemsggroupAutomationArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupAutomationArrayOutput() GetReplacemsggroupAutomationArrayOutput
	ToGetReplacemsggroupAutomationArrayOutputWithContext(context.Context) GetReplacemsggroupAutomationArrayOutput
}

type GetReplacemsggroupAutomationArray []GetReplacemsggroupAutomationInput

func (GetReplacemsggroupAutomationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupAutomation)(nil)).Elem()
}

func (i GetReplacemsggroupAutomationArray) ToGetReplacemsggroupAutomationArrayOutput() GetReplacemsggroupAutomationArrayOutput {
	return i.ToGetReplacemsggroupAutomationArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupAutomationArray) ToGetReplacemsggroupAutomationArrayOutputWithContext(ctx context.Context) GetReplacemsggroupAutomationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupAutomationArrayOutput)
}

type GetReplacemsggroupAutomationOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupAutomation)(nil)).Elem()
}

func (o GetReplacemsggroupAutomationOutput) ToGetReplacemsggroupAutomationOutput() GetReplacemsggroupAutomationOutput {
	return o
}

func (o GetReplacemsggroupAutomationOutput) ToGetReplacemsggroupAutomationOutputWithContext(ctx context.Context) GetReplacemsggroupAutomationOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupAutomationOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAutomation) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupAutomationOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAutomation) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupAutomationOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAutomation) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupAutomationOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupAutomation) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupAutomationArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupAutomationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupAutomation)(nil)).Elem()
}

func (o GetReplacemsggroupAutomationArrayOutput) ToGetReplacemsggroupAutomationArrayOutput() GetReplacemsggroupAutomationArrayOutput {
	return o
}

func (o GetReplacemsggroupAutomationArrayOutput) ToGetReplacemsggroupAutomationArrayOutputWithContext(ctx context.Context) GetReplacemsggroupAutomationArrayOutput {
	return o
}

func (o GetReplacemsggroupAutomationArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupAutomationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupAutomation {
		return vs[0].([]GetReplacemsggroupAutomation)[vs[1].(int)]
	}).(GetReplacemsggroupAutomationOutput)
}

type GetReplacemsggroupCustomMessage struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupCustomMessageInput is an input type that accepts GetReplacemsggroupCustomMessageArgs and GetReplacemsggroupCustomMessageOutput values.
// You can construct a concrete instance of `GetReplacemsggroupCustomMessageInput` via:
//
//	GetReplacemsggroupCustomMessageArgs{...}
type GetReplacemsggroupCustomMessageInput interface {
	pulumi.Input

	ToGetReplacemsggroupCustomMessageOutput() GetReplacemsggroupCustomMessageOutput
	ToGetReplacemsggroupCustomMessageOutputWithContext(context.Context) GetReplacemsggroupCustomMessageOutput
}

type GetReplacemsggroupCustomMessageArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupCustomMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupCustomMessage)(nil)).Elem()
}

func (i GetReplacemsggroupCustomMessageArgs) ToGetReplacemsggroupCustomMessageOutput() GetReplacemsggroupCustomMessageOutput {
	return i.ToGetReplacemsggroupCustomMessageOutputWithContext(context.Background())
}

func (i GetReplacemsggroupCustomMessageArgs) ToGetReplacemsggroupCustomMessageOutputWithContext(ctx context.Context) GetReplacemsggroupCustomMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupCustomMessageOutput)
}

// GetReplacemsggroupCustomMessageArrayInput is an input type that accepts GetReplacemsggroupCustomMessageArray and GetReplacemsggroupCustomMessageArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupCustomMessageArrayInput` via:
//
//	GetReplacemsggroupCustomMessageArray{ GetReplacemsggroupCustomMessageArgs{...} }
type GetReplacemsggroupCustomMessageArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupCustomMessageArrayOutput() GetReplacemsggroupCustomMessageArrayOutput
	ToGetReplacemsggroupCustomMessageArrayOutputWithContext(context.Context) GetReplacemsggroupCustomMessageArrayOutput
}

type GetReplacemsggroupCustomMessageArray []GetReplacemsggroupCustomMessageInput

func (GetReplacemsggroupCustomMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupCustomMessage)(nil)).Elem()
}

func (i GetReplacemsggroupCustomMessageArray) ToGetReplacemsggroupCustomMessageArrayOutput() GetReplacemsggroupCustomMessageArrayOutput {
	return i.ToGetReplacemsggroupCustomMessageArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupCustomMessageArray) ToGetReplacemsggroupCustomMessageArrayOutputWithContext(ctx context.Context) GetReplacemsggroupCustomMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupCustomMessageArrayOutput)
}

type GetReplacemsggroupCustomMessageOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupCustomMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupCustomMessage)(nil)).Elem()
}

func (o GetReplacemsggroupCustomMessageOutput) ToGetReplacemsggroupCustomMessageOutput() GetReplacemsggroupCustomMessageOutput {
	return o
}

func (o GetReplacemsggroupCustomMessageOutput) ToGetReplacemsggroupCustomMessageOutputWithContext(ctx context.Context) GetReplacemsggroupCustomMessageOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupCustomMessageOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupCustomMessage) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupCustomMessageOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupCustomMessage) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupCustomMessageOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupCustomMessage) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupCustomMessageOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupCustomMessage) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupCustomMessageArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupCustomMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupCustomMessage)(nil)).Elem()
}

func (o GetReplacemsggroupCustomMessageArrayOutput) ToGetReplacemsggroupCustomMessageArrayOutput() GetReplacemsggroupCustomMessageArrayOutput {
	return o
}

func (o GetReplacemsggroupCustomMessageArrayOutput) ToGetReplacemsggroupCustomMessageArrayOutputWithContext(ctx context.Context) GetReplacemsggroupCustomMessageArrayOutput {
	return o
}

func (o GetReplacemsggroupCustomMessageArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupCustomMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupCustomMessage {
		return vs[0].([]GetReplacemsggroupCustomMessage)[vs[1].(int)]
	}).(GetReplacemsggroupCustomMessageOutput)
}

type GetReplacemsggroupDeviceDetectionPortal struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupDeviceDetectionPortalInput is an input type that accepts GetReplacemsggroupDeviceDetectionPortalArgs and GetReplacemsggroupDeviceDetectionPortalOutput values.
// You can construct a concrete instance of `GetReplacemsggroupDeviceDetectionPortalInput` via:
//
//	GetReplacemsggroupDeviceDetectionPortalArgs{...}
type GetReplacemsggroupDeviceDetectionPortalInput interface {
	pulumi.Input

	ToGetReplacemsggroupDeviceDetectionPortalOutput() GetReplacemsggroupDeviceDetectionPortalOutput
	ToGetReplacemsggroupDeviceDetectionPortalOutputWithContext(context.Context) GetReplacemsggroupDeviceDetectionPortalOutput
}

type GetReplacemsggroupDeviceDetectionPortalArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupDeviceDetectionPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (i GetReplacemsggroupDeviceDetectionPortalArgs) ToGetReplacemsggroupDeviceDetectionPortalOutput() GetReplacemsggroupDeviceDetectionPortalOutput {
	return i.ToGetReplacemsggroupDeviceDetectionPortalOutputWithContext(context.Background())
}

func (i GetReplacemsggroupDeviceDetectionPortalArgs) ToGetReplacemsggroupDeviceDetectionPortalOutputWithContext(ctx context.Context) GetReplacemsggroupDeviceDetectionPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupDeviceDetectionPortalOutput)
}

// GetReplacemsggroupDeviceDetectionPortalArrayInput is an input type that accepts GetReplacemsggroupDeviceDetectionPortalArray and GetReplacemsggroupDeviceDetectionPortalArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupDeviceDetectionPortalArrayInput` via:
//
//	GetReplacemsggroupDeviceDetectionPortalArray{ GetReplacemsggroupDeviceDetectionPortalArgs{...} }
type GetReplacemsggroupDeviceDetectionPortalArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupDeviceDetectionPortalArrayOutput() GetReplacemsggroupDeviceDetectionPortalArrayOutput
	ToGetReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(context.Context) GetReplacemsggroupDeviceDetectionPortalArrayOutput
}

type GetReplacemsggroupDeviceDetectionPortalArray []GetReplacemsggroupDeviceDetectionPortalInput

func (GetReplacemsggroupDeviceDetectionPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (i GetReplacemsggroupDeviceDetectionPortalArray) ToGetReplacemsggroupDeviceDetectionPortalArrayOutput() GetReplacemsggroupDeviceDetectionPortalArrayOutput {
	return i.ToGetReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupDeviceDetectionPortalArray) ToGetReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(ctx context.Context) GetReplacemsggroupDeviceDetectionPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupDeviceDetectionPortalArrayOutput)
}

type GetReplacemsggroupDeviceDetectionPortalOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupDeviceDetectionPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (o GetReplacemsggroupDeviceDetectionPortalOutput) ToGetReplacemsggroupDeviceDetectionPortalOutput() GetReplacemsggroupDeviceDetectionPortalOutput {
	return o
}

func (o GetReplacemsggroupDeviceDetectionPortalOutput) ToGetReplacemsggroupDeviceDetectionPortalOutputWithContext(ctx context.Context) GetReplacemsggroupDeviceDetectionPortalOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupDeviceDetectionPortalOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupDeviceDetectionPortal) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupDeviceDetectionPortalOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupDeviceDetectionPortal) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupDeviceDetectionPortalOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupDeviceDetectionPortal) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupDeviceDetectionPortalOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupDeviceDetectionPortal) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupDeviceDetectionPortalArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupDeviceDetectionPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (o GetReplacemsggroupDeviceDetectionPortalArrayOutput) ToGetReplacemsggroupDeviceDetectionPortalArrayOutput() GetReplacemsggroupDeviceDetectionPortalArrayOutput {
	return o
}

func (o GetReplacemsggroupDeviceDetectionPortalArrayOutput) ToGetReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(ctx context.Context) GetReplacemsggroupDeviceDetectionPortalArrayOutput {
	return o
}

func (o GetReplacemsggroupDeviceDetectionPortalArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupDeviceDetectionPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupDeviceDetectionPortal {
		return vs[0].([]GetReplacemsggroupDeviceDetectionPortal)[vs[1].(int)]
	}).(GetReplacemsggroupDeviceDetectionPortalOutput)
}

type GetReplacemsggroupEc struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupEcInput is an input type that accepts GetReplacemsggroupEcArgs and GetReplacemsggroupEcOutput values.
// You can construct a concrete instance of `GetReplacemsggroupEcInput` via:
//
//	GetReplacemsggroupEcArgs{...}
type GetReplacemsggroupEcInput interface {
	pulumi.Input

	ToGetReplacemsggroupEcOutput() GetReplacemsggroupEcOutput
	ToGetReplacemsggroupEcOutputWithContext(context.Context) GetReplacemsggroupEcOutput
}

type GetReplacemsggroupEcArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupEcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupEc)(nil)).Elem()
}

func (i GetReplacemsggroupEcArgs) ToGetReplacemsggroupEcOutput() GetReplacemsggroupEcOutput {
	return i.ToGetReplacemsggroupEcOutputWithContext(context.Background())
}

func (i GetReplacemsggroupEcArgs) ToGetReplacemsggroupEcOutputWithContext(ctx context.Context) GetReplacemsggroupEcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupEcOutput)
}

// GetReplacemsggroupEcArrayInput is an input type that accepts GetReplacemsggroupEcArray and GetReplacemsggroupEcArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupEcArrayInput` via:
//
//	GetReplacemsggroupEcArray{ GetReplacemsggroupEcArgs{...} }
type GetReplacemsggroupEcArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupEcArrayOutput() GetReplacemsggroupEcArrayOutput
	ToGetReplacemsggroupEcArrayOutputWithContext(context.Context) GetReplacemsggroupEcArrayOutput
}

type GetReplacemsggroupEcArray []GetReplacemsggroupEcInput

func (GetReplacemsggroupEcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupEc)(nil)).Elem()
}

func (i GetReplacemsggroupEcArray) ToGetReplacemsggroupEcArrayOutput() GetReplacemsggroupEcArrayOutput {
	return i.ToGetReplacemsggroupEcArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupEcArray) ToGetReplacemsggroupEcArrayOutputWithContext(ctx context.Context) GetReplacemsggroupEcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupEcArrayOutput)
}

type GetReplacemsggroupEcOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupEcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupEc)(nil)).Elem()
}

func (o GetReplacemsggroupEcOutput) ToGetReplacemsggroupEcOutput() GetReplacemsggroupEcOutput {
	return o
}

func (o GetReplacemsggroupEcOutput) ToGetReplacemsggroupEcOutputWithContext(ctx context.Context) GetReplacemsggroupEcOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupEcOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupEc) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupEcOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupEc) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupEcOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupEc) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupEcOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupEc) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupEcArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupEcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupEc)(nil)).Elem()
}

func (o GetReplacemsggroupEcArrayOutput) ToGetReplacemsggroupEcArrayOutput() GetReplacemsggroupEcArrayOutput {
	return o
}

func (o GetReplacemsggroupEcArrayOutput) ToGetReplacemsggroupEcArrayOutputWithContext(ctx context.Context) GetReplacemsggroupEcArrayOutput {
	return o
}

func (o GetReplacemsggroupEcArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupEcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupEc {
		return vs[0].([]GetReplacemsggroupEc)[vs[1].(int)]
	}).(GetReplacemsggroupEcOutput)
}

type GetReplacemsggroupFortiguardWf struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupFortiguardWfInput is an input type that accepts GetReplacemsggroupFortiguardWfArgs and GetReplacemsggroupFortiguardWfOutput values.
// You can construct a concrete instance of `GetReplacemsggroupFortiguardWfInput` via:
//
//	GetReplacemsggroupFortiguardWfArgs{...}
type GetReplacemsggroupFortiguardWfInput interface {
	pulumi.Input

	ToGetReplacemsggroupFortiguardWfOutput() GetReplacemsggroupFortiguardWfOutput
	ToGetReplacemsggroupFortiguardWfOutputWithContext(context.Context) GetReplacemsggroupFortiguardWfOutput
}

type GetReplacemsggroupFortiguardWfArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupFortiguardWfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (i GetReplacemsggroupFortiguardWfArgs) ToGetReplacemsggroupFortiguardWfOutput() GetReplacemsggroupFortiguardWfOutput {
	return i.ToGetReplacemsggroupFortiguardWfOutputWithContext(context.Background())
}

func (i GetReplacemsggroupFortiguardWfArgs) ToGetReplacemsggroupFortiguardWfOutputWithContext(ctx context.Context) GetReplacemsggroupFortiguardWfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupFortiguardWfOutput)
}

// GetReplacemsggroupFortiguardWfArrayInput is an input type that accepts GetReplacemsggroupFortiguardWfArray and GetReplacemsggroupFortiguardWfArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupFortiguardWfArrayInput` via:
//
//	GetReplacemsggroupFortiguardWfArray{ GetReplacemsggroupFortiguardWfArgs{...} }
type GetReplacemsggroupFortiguardWfArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupFortiguardWfArrayOutput() GetReplacemsggroupFortiguardWfArrayOutput
	ToGetReplacemsggroupFortiguardWfArrayOutputWithContext(context.Context) GetReplacemsggroupFortiguardWfArrayOutput
}

type GetReplacemsggroupFortiguardWfArray []GetReplacemsggroupFortiguardWfInput

func (GetReplacemsggroupFortiguardWfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (i GetReplacemsggroupFortiguardWfArray) ToGetReplacemsggroupFortiguardWfArrayOutput() GetReplacemsggroupFortiguardWfArrayOutput {
	return i.ToGetReplacemsggroupFortiguardWfArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupFortiguardWfArray) ToGetReplacemsggroupFortiguardWfArrayOutputWithContext(ctx context.Context) GetReplacemsggroupFortiguardWfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupFortiguardWfArrayOutput)
}

type GetReplacemsggroupFortiguardWfOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupFortiguardWfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (o GetReplacemsggroupFortiguardWfOutput) ToGetReplacemsggroupFortiguardWfOutput() GetReplacemsggroupFortiguardWfOutput {
	return o
}

func (o GetReplacemsggroupFortiguardWfOutput) ToGetReplacemsggroupFortiguardWfOutputWithContext(ctx context.Context) GetReplacemsggroupFortiguardWfOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupFortiguardWfOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupFortiguardWf) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupFortiguardWfOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupFortiguardWf) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupFortiguardWfOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupFortiguardWf) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupFortiguardWfOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupFortiguardWf) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupFortiguardWfArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupFortiguardWfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (o GetReplacemsggroupFortiguardWfArrayOutput) ToGetReplacemsggroupFortiguardWfArrayOutput() GetReplacemsggroupFortiguardWfArrayOutput {
	return o
}

func (o GetReplacemsggroupFortiguardWfArrayOutput) ToGetReplacemsggroupFortiguardWfArrayOutputWithContext(ctx context.Context) GetReplacemsggroupFortiguardWfArrayOutput {
	return o
}

func (o GetReplacemsggroupFortiguardWfArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupFortiguardWfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupFortiguardWf {
		return vs[0].([]GetReplacemsggroupFortiguardWf)[vs[1].(int)]
	}).(GetReplacemsggroupFortiguardWfOutput)
}

type GetReplacemsggroupFtp struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupFtpInput is an input type that accepts GetReplacemsggroupFtpArgs and GetReplacemsggroupFtpOutput values.
// You can construct a concrete instance of `GetReplacemsggroupFtpInput` via:
//
//	GetReplacemsggroupFtpArgs{...}
type GetReplacemsggroupFtpInput interface {
	pulumi.Input

	ToGetReplacemsggroupFtpOutput() GetReplacemsggroupFtpOutput
	ToGetReplacemsggroupFtpOutputWithContext(context.Context) GetReplacemsggroupFtpOutput
}

type GetReplacemsggroupFtpArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupFtp)(nil)).Elem()
}

func (i GetReplacemsggroupFtpArgs) ToGetReplacemsggroupFtpOutput() GetReplacemsggroupFtpOutput {
	return i.ToGetReplacemsggroupFtpOutputWithContext(context.Background())
}

func (i GetReplacemsggroupFtpArgs) ToGetReplacemsggroupFtpOutputWithContext(ctx context.Context) GetReplacemsggroupFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupFtpOutput)
}

// GetReplacemsggroupFtpArrayInput is an input type that accepts GetReplacemsggroupFtpArray and GetReplacemsggroupFtpArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupFtpArrayInput` via:
//
//	GetReplacemsggroupFtpArray{ GetReplacemsggroupFtpArgs{...} }
type GetReplacemsggroupFtpArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupFtpArrayOutput() GetReplacemsggroupFtpArrayOutput
	ToGetReplacemsggroupFtpArrayOutputWithContext(context.Context) GetReplacemsggroupFtpArrayOutput
}

type GetReplacemsggroupFtpArray []GetReplacemsggroupFtpInput

func (GetReplacemsggroupFtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupFtp)(nil)).Elem()
}

func (i GetReplacemsggroupFtpArray) ToGetReplacemsggroupFtpArrayOutput() GetReplacemsggroupFtpArrayOutput {
	return i.ToGetReplacemsggroupFtpArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupFtpArray) ToGetReplacemsggroupFtpArrayOutputWithContext(ctx context.Context) GetReplacemsggroupFtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupFtpArrayOutput)
}

type GetReplacemsggroupFtpOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupFtp)(nil)).Elem()
}

func (o GetReplacemsggroupFtpOutput) ToGetReplacemsggroupFtpOutput() GetReplacemsggroupFtpOutput {
	return o
}

func (o GetReplacemsggroupFtpOutput) ToGetReplacemsggroupFtpOutputWithContext(ctx context.Context) GetReplacemsggroupFtpOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupFtpOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupFtp) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupFtpOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupFtp) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupFtpOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupFtp) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupFtpOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupFtp) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupFtpArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupFtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupFtp)(nil)).Elem()
}

func (o GetReplacemsggroupFtpArrayOutput) ToGetReplacemsggroupFtpArrayOutput() GetReplacemsggroupFtpArrayOutput {
	return o
}

func (o GetReplacemsggroupFtpArrayOutput) ToGetReplacemsggroupFtpArrayOutputWithContext(ctx context.Context) GetReplacemsggroupFtpArrayOutput {
	return o
}

func (o GetReplacemsggroupFtpArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupFtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupFtp {
		return vs[0].([]GetReplacemsggroupFtp)[vs[1].(int)]
	}).(GetReplacemsggroupFtpOutput)
}

type GetReplacemsggroupHttp struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupHttpInput is an input type that accepts GetReplacemsggroupHttpArgs and GetReplacemsggroupHttpOutput values.
// You can construct a concrete instance of `GetReplacemsggroupHttpInput` via:
//
//	GetReplacemsggroupHttpArgs{...}
type GetReplacemsggroupHttpInput interface {
	pulumi.Input

	ToGetReplacemsggroupHttpOutput() GetReplacemsggroupHttpOutput
	ToGetReplacemsggroupHttpOutputWithContext(context.Context) GetReplacemsggroupHttpOutput
}

type GetReplacemsggroupHttpArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupHttp)(nil)).Elem()
}

func (i GetReplacemsggroupHttpArgs) ToGetReplacemsggroupHttpOutput() GetReplacemsggroupHttpOutput {
	return i.ToGetReplacemsggroupHttpOutputWithContext(context.Background())
}

func (i GetReplacemsggroupHttpArgs) ToGetReplacemsggroupHttpOutputWithContext(ctx context.Context) GetReplacemsggroupHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupHttpOutput)
}

// GetReplacemsggroupHttpArrayInput is an input type that accepts GetReplacemsggroupHttpArray and GetReplacemsggroupHttpArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupHttpArrayInput` via:
//
//	GetReplacemsggroupHttpArray{ GetReplacemsggroupHttpArgs{...} }
type GetReplacemsggroupHttpArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupHttpArrayOutput() GetReplacemsggroupHttpArrayOutput
	ToGetReplacemsggroupHttpArrayOutputWithContext(context.Context) GetReplacemsggroupHttpArrayOutput
}

type GetReplacemsggroupHttpArray []GetReplacemsggroupHttpInput

func (GetReplacemsggroupHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupHttp)(nil)).Elem()
}

func (i GetReplacemsggroupHttpArray) ToGetReplacemsggroupHttpArrayOutput() GetReplacemsggroupHttpArrayOutput {
	return i.ToGetReplacemsggroupHttpArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupHttpArray) ToGetReplacemsggroupHttpArrayOutputWithContext(ctx context.Context) GetReplacemsggroupHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupHttpArrayOutput)
}

type GetReplacemsggroupHttpOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupHttp)(nil)).Elem()
}

func (o GetReplacemsggroupHttpOutput) ToGetReplacemsggroupHttpOutput() GetReplacemsggroupHttpOutput {
	return o
}

func (o GetReplacemsggroupHttpOutput) ToGetReplacemsggroupHttpOutputWithContext(ctx context.Context) GetReplacemsggroupHttpOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupHttpOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupHttp) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupHttpOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupHttp) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupHttpOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupHttp) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupHttpOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupHttp) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupHttpArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupHttp)(nil)).Elem()
}

func (o GetReplacemsggroupHttpArrayOutput) ToGetReplacemsggroupHttpArrayOutput() GetReplacemsggroupHttpArrayOutput {
	return o
}

func (o GetReplacemsggroupHttpArrayOutput) ToGetReplacemsggroupHttpArrayOutputWithContext(ctx context.Context) GetReplacemsggroupHttpArrayOutput {
	return o
}

func (o GetReplacemsggroupHttpArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupHttp {
		return vs[0].([]GetReplacemsggroupHttp)[vs[1].(int)]
	}).(GetReplacemsggroupHttpOutput)
}

type GetReplacemsggroupIcap struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupIcapInput is an input type that accepts GetReplacemsggroupIcapArgs and GetReplacemsggroupIcapOutput values.
// You can construct a concrete instance of `GetReplacemsggroupIcapInput` via:
//
//	GetReplacemsggroupIcapArgs{...}
type GetReplacemsggroupIcapInput interface {
	pulumi.Input

	ToGetReplacemsggroupIcapOutput() GetReplacemsggroupIcapOutput
	ToGetReplacemsggroupIcapOutputWithContext(context.Context) GetReplacemsggroupIcapOutput
}

type GetReplacemsggroupIcapArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupIcapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupIcap)(nil)).Elem()
}

func (i GetReplacemsggroupIcapArgs) ToGetReplacemsggroupIcapOutput() GetReplacemsggroupIcapOutput {
	return i.ToGetReplacemsggroupIcapOutputWithContext(context.Background())
}

func (i GetReplacemsggroupIcapArgs) ToGetReplacemsggroupIcapOutputWithContext(ctx context.Context) GetReplacemsggroupIcapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupIcapOutput)
}

// GetReplacemsggroupIcapArrayInput is an input type that accepts GetReplacemsggroupIcapArray and GetReplacemsggroupIcapArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupIcapArrayInput` via:
//
//	GetReplacemsggroupIcapArray{ GetReplacemsggroupIcapArgs{...} }
type GetReplacemsggroupIcapArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupIcapArrayOutput() GetReplacemsggroupIcapArrayOutput
	ToGetReplacemsggroupIcapArrayOutputWithContext(context.Context) GetReplacemsggroupIcapArrayOutput
}

type GetReplacemsggroupIcapArray []GetReplacemsggroupIcapInput

func (GetReplacemsggroupIcapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupIcap)(nil)).Elem()
}

func (i GetReplacemsggroupIcapArray) ToGetReplacemsggroupIcapArrayOutput() GetReplacemsggroupIcapArrayOutput {
	return i.ToGetReplacemsggroupIcapArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupIcapArray) ToGetReplacemsggroupIcapArrayOutputWithContext(ctx context.Context) GetReplacemsggroupIcapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupIcapArrayOutput)
}

type GetReplacemsggroupIcapOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupIcapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupIcap)(nil)).Elem()
}

func (o GetReplacemsggroupIcapOutput) ToGetReplacemsggroupIcapOutput() GetReplacemsggroupIcapOutput {
	return o
}

func (o GetReplacemsggroupIcapOutput) ToGetReplacemsggroupIcapOutputWithContext(ctx context.Context) GetReplacemsggroupIcapOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupIcapOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupIcap) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupIcapOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupIcap) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupIcapOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupIcap) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupIcapOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupIcap) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupIcapArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupIcapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupIcap)(nil)).Elem()
}

func (o GetReplacemsggroupIcapArrayOutput) ToGetReplacemsggroupIcapArrayOutput() GetReplacemsggroupIcapArrayOutput {
	return o
}

func (o GetReplacemsggroupIcapArrayOutput) ToGetReplacemsggroupIcapArrayOutputWithContext(ctx context.Context) GetReplacemsggroupIcapArrayOutput {
	return o
}

func (o GetReplacemsggroupIcapArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupIcapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupIcap {
		return vs[0].([]GetReplacemsggroupIcap)[vs[1].(int)]
	}).(GetReplacemsggroupIcapOutput)
}

type GetReplacemsggroupMail struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupMailInput is an input type that accepts GetReplacemsggroupMailArgs and GetReplacemsggroupMailOutput values.
// You can construct a concrete instance of `GetReplacemsggroupMailInput` via:
//
//	GetReplacemsggroupMailArgs{...}
type GetReplacemsggroupMailInput interface {
	pulumi.Input

	ToGetReplacemsggroupMailOutput() GetReplacemsggroupMailOutput
	ToGetReplacemsggroupMailOutputWithContext(context.Context) GetReplacemsggroupMailOutput
}

type GetReplacemsggroupMailArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupMailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupMail)(nil)).Elem()
}

func (i GetReplacemsggroupMailArgs) ToGetReplacemsggroupMailOutput() GetReplacemsggroupMailOutput {
	return i.ToGetReplacemsggroupMailOutputWithContext(context.Background())
}

func (i GetReplacemsggroupMailArgs) ToGetReplacemsggroupMailOutputWithContext(ctx context.Context) GetReplacemsggroupMailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupMailOutput)
}

// GetReplacemsggroupMailArrayInput is an input type that accepts GetReplacemsggroupMailArray and GetReplacemsggroupMailArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupMailArrayInput` via:
//
//	GetReplacemsggroupMailArray{ GetReplacemsggroupMailArgs{...} }
type GetReplacemsggroupMailArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupMailArrayOutput() GetReplacemsggroupMailArrayOutput
	ToGetReplacemsggroupMailArrayOutputWithContext(context.Context) GetReplacemsggroupMailArrayOutput
}

type GetReplacemsggroupMailArray []GetReplacemsggroupMailInput

func (GetReplacemsggroupMailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupMail)(nil)).Elem()
}

func (i GetReplacemsggroupMailArray) ToGetReplacemsggroupMailArrayOutput() GetReplacemsggroupMailArrayOutput {
	return i.ToGetReplacemsggroupMailArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupMailArray) ToGetReplacemsggroupMailArrayOutputWithContext(ctx context.Context) GetReplacemsggroupMailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupMailArrayOutput)
}

type GetReplacemsggroupMailOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupMailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupMail)(nil)).Elem()
}

func (o GetReplacemsggroupMailOutput) ToGetReplacemsggroupMailOutput() GetReplacemsggroupMailOutput {
	return o
}

func (o GetReplacemsggroupMailOutput) ToGetReplacemsggroupMailOutputWithContext(ctx context.Context) GetReplacemsggroupMailOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupMailOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupMail) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupMailOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupMail) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupMailOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupMail) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupMailOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupMail) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupMailArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupMailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupMail)(nil)).Elem()
}

func (o GetReplacemsggroupMailArrayOutput) ToGetReplacemsggroupMailArrayOutput() GetReplacemsggroupMailArrayOutput {
	return o
}

func (o GetReplacemsggroupMailArrayOutput) ToGetReplacemsggroupMailArrayOutputWithContext(ctx context.Context) GetReplacemsggroupMailArrayOutput {
	return o
}

func (o GetReplacemsggroupMailArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupMailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupMail {
		return vs[0].([]GetReplacemsggroupMail)[vs[1].(int)]
	}).(GetReplacemsggroupMailOutput)
}

type GetReplacemsggroupNacQuar struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupNacQuarInput is an input type that accepts GetReplacemsggroupNacQuarArgs and GetReplacemsggroupNacQuarOutput values.
// You can construct a concrete instance of `GetReplacemsggroupNacQuarInput` via:
//
//	GetReplacemsggroupNacQuarArgs{...}
type GetReplacemsggroupNacQuarInput interface {
	pulumi.Input

	ToGetReplacemsggroupNacQuarOutput() GetReplacemsggroupNacQuarOutput
	ToGetReplacemsggroupNacQuarOutputWithContext(context.Context) GetReplacemsggroupNacQuarOutput
}

type GetReplacemsggroupNacQuarArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupNacQuarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupNacQuar)(nil)).Elem()
}

func (i GetReplacemsggroupNacQuarArgs) ToGetReplacemsggroupNacQuarOutput() GetReplacemsggroupNacQuarOutput {
	return i.ToGetReplacemsggroupNacQuarOutputWithContext(context.Background())
}

func (i GetReplacemsggroupNacQuarArgs) ToGetReplacemsggroupNacQuarOutputWithContext(ctx context.Context) GetReplacemsggroupNacQuarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupNacQuarOutput)
}

// GetReplacemsggroupNacQuarArrayInput is an input type that accepts GetReplacemsggroupNacQuarArray and GetReplacemsggroupNacQuarArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupNacQuarArrayInput` via:
//
//	GetReplacemsggroupNacQuarArray{ GetReplacemsggroupNacQuarArgs{...} }
type GetReplacemsggroupNacQuarArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupNacQuarArrayOutput() GetReplacemsggroupNacQuarArrayOutput
	ToGetReplacemsggroupNacQuarArrayOutputWithContext(context.Context) GetReplacemsggroupNacQuarArrayOutput
}

type GetReplacemsggroupNacQuarArray []GetReplacemsggroupNacQuarInput

func (GetReplacemsggroupNacQuarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupNacQuar)(nil)).Elem()
}

func (i GetReplacemsggroupNacQuarArray) ToGetReplacemsggroupNacQuarArrayOutput() GetReplacemsggroupNacQuarArrayOutput {
	return i.ToGetReplacemsggroupNacQuarArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupNacQuarArray) ToGetReplacemsggroupNacQuarArrayOutputWithContext(ctx context.Context) GetReplacemsggroupNacQuarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupNacQuarArrayOutput)
}

type GetReplacemsggroupNacQuarOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupNacQuarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupNacQuar)(nil)).Elem()
}

func (o GetReplacemsggroupNacQuarOutput) ToGetReplacemsggroupNacQuarOutput() GetReplacemsggroupNacQuarOutput {
	return o
}

func (o GetReplacemsggroupNacQuarOutput) ToGetReplacemsggroupNacQuarOutputWithContext(ctx context.Context) GetReplacemsggroupNacQuarOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupNacQuarOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupNacQuar) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupNacQuarOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupNacQuar) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupNacQuarOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupNacQuar) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupNacQuarOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupNacQuar) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupNacQuarArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupNacQuarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupNacQuar)(nil)).Elem()
}

func (o GetReplacemsggroupNacQuarArrayOutput) ToGetReplacemsggroupNacQuarArrayOutput() GetReplacemsggroupNacQuarArrayOutput {
	return o
}

func (o GetReplacemsggroupNacQuarArrayOutput) ToGetReplacemsggroupNacQuarArrayOutputWithContext(ctx context.Context) GetReplacemsggroupNacQuarArrayOutput {
	return o
}

func (o GetReplacemsggroupNacQuarArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupNacQuarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupNacQuar {
		return vs[0].([]GetReplacemsggroupNacQuar)[vs[1].(int)]
	}).(GetReplacemsggroupNacQuarOutput)
}

type GetReplacemsggroupNntp struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupNntpInput is an input type that accepts GetReplacemsggroupNntpArgs and GetReplacemsggroupNntpOutput values.
// You can construct a concrete instance of `GetReplacemsggroupNntpInput` via:
//
//	GetReplacemsggroupNntpArgs{...}
type GetReplacemsggroupNntpInput interface {
	pulumi.Input

	ToGetReplacemsggroupNntpOutput() GetReplacemsggroupNntpOutput
	ToGetReplacemsggroupNntpOutputWithContext(context.Context) GetReplacemsggroupNntpOutput
}

type GetReplacemsggroupNntpArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupNntpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupNntp)(nil)).Elem()
}

func (i GetReplacemsggroupNntpArgs) ToGetReplacemsggroupNntpOutput() GetReplacemsggroupNntpOutput {
	return i.ToGetReplacemsggroupNntpOutputWithContext(context.Background())
}

func (i GetReplacemsggroupNntpArgs) ToGetReplacemsggroupNntpOutputWithContext(ctx context.Context) GetReplacemsggroupNntpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupNntpOutput)
}

// GetReplacemsggroupNntpArrayInput is an input type that accepts GetReplacemsggroupNntpArray and GetReplacemsggroupNntpArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupNntpArrayInput` via:
//
//	GetReplacemsggroupNntpArray{ GetReplacemsggroupNntpArgs{...} }
type GetReplacemsggroupNntpArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupNntpArrayOutput() GetReplacemsggroupNntpArrayOutput
	ToGetReplacemsggroupNntpArrayOutputWithContext(context.Context) GetReplacemsggroupNntpArrayOutput
}

type GetReplacemsggroupNntpArray []GetReplacemsggroupNntpInput

func (GetReplacemsggroupNntpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupNntp)(nil)).Elem()
}

func (i GetReplacemsggroupNntpArray) ToGetReplacemsggroupNntpArrayOutput() GetReplacemsggroupNntpArrayOutput {
	return i.ToGetReplacemsggroupNntpArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupNntpArray) ToGetReplacemsggroupNntpArrayOutputWithContext(ctx context.Context) GetReplacemsggroupNntpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupNntpArrayOutput)
}

type GetReplacemsggroupNntpOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupNntpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupNntp)(nil)).Elem()
}

func (o GetReplacemsggroupNntpOutput) ToGetReplacemsggroupNntpOutput() GetReplacemsggroupNntpOutput {
	return o
}

func (o GetReplacemsggroupNntpOutput) ToGetReplacemsggroupNntpOutputWithContext(ctx context.Context) GetReplacemsggroupNntpOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupNntpOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupNntp) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupNntpOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupNntp) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupNntpOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupNntp) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupNntpOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupNntp) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupNntpArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupNntpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupNntp)(nil)).Elem()
}

func (o GetReplacemsggroupNntpArrayOutput) ToGetReplacemsggroupNntpArrayOutput() GetReplacemsggroupNntpArrayOutput {
	return o
}

func (o GetReplacemsggroupNntpArrayOutput) ToGetReplacemsggroupNntpArrayOutputWithContext(ctx context.Context) GetReplacemsggroupNntpArrayOutput {
	return o
}

func (o GetReplacemsggroupNntpArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupNntpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupNntp {
		return vs[0].([]GetReplacemsggroupNntp)[vs[1].(int)]
	}).(GetReplacemsggroupNntpOutput)
}

type GetReplacemsggroupSpam struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupSpamInput is an input type that accepts GetReplacemsggroupSpamArgs and GetReplacemsggroupSpamOutput values.
// You can construct a concrete instance of `GetReplacemsggroupSpamInput` via:
//
//	GetReplacemsggroupSpamArgs{...}
type GetReplacemsggroupSpamInput interface {
	pulumi.Input

	ToGetReplacemsggroupSpamOutput() GetReplacemsggroupSpamOutput
	ToGetReplacemsggroupSpamOutputWithContext(context.Context) GetReplacemsggroupSpamOutput
}

type GetReplacemsggroupSpamArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupSpamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupSpam)(nil)).Elem()
}

func (i GetReplacemsggroupSpamArgs) ToGetReplacemsggroupSpamOutput() GetReplacemsggroupSpamOutput {
	return i.ToGetReplacemsggroupSpamOutputWithContext(context.Background())
}

func (i GetReplacemsggroupSpamArgs) ToGetReplacemsggroupSpamOutputWithContext(ctx context.Context) GetReplacemsggroupSpamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupSpamOutput)
}

// GetReplacemsggroupSpamArrayInput is an input type that accepts GetReplacemsggroupSpamArray and GetReplacemsggroupSpamArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupSpamArrayInput` via:
//
//	GetReplacemsggroupSpamArray{ GetReplacemsggroupSpamArgs{...} }
type GetReplacemsggroupSpamArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupSpamArrayOutput() GetReplacemsggroupSpamArrayOutput
	ToGetReplacemsggroupSpamArrayOutputWithContext(context.Context) GetReplacemsggroupSpamArrayOutput
}

type GetReplacemsggroupSpamArray []GetReplacemsggroupSpamInput

func (GetReplacemsggroupSpamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupSpam)(nil)).Elem()
}

func (i GetReplacemsggroupSpamArray) ToGetReplacemsggroupSpamArrayOutput() GetReplacemsggroupSpamArrayOutput {
	return i.ToGetReplacemsggroupSpamArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupSpamArray) ToGetReplacemsggroupSpamArrayOutputWithContext(ctx context.Context) GetReplacemsggroupSpamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupSpamArrayOutput)
}

type GetReplacemsggroupSpamOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupSpamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupSpam)(nil)).Elem()
}

func (o GetReplacemsggroupSpamOutput) ToGetReplacemsggroupSpamOutput() GetReplacemsggroupSpamOutput {
	return o
}

func (o GetReplacemsggroupSpamOutput) ToGetReplacemsggroupSpamOutputWithContext(ctx context.Context) GetReplacemsggroupSpamOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupSpamOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupSpam) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupSpamOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupSpam) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupSpamOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupSpam) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupSpamOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupSpam) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupSpamArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupSpamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupSpam)(nil)).Elem()
}

func (o GetReplacemsggroupSpamArrayOutput) ToGetReplacemsggroupSpamArrayOutput() GetReplacemsggroupSpamArrayOutput {
	return o
}

func (o GetReplacemsggroupSpamArrayOutput) ToGetReplacemsggroupSpamArrayOutputWithContext(ctx context.Context) GetReplacemsggroupSpamArrayOutput {
	return o
}

func (o GetReplacemsggroupSpamArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupSpamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupSpam {
		return vs[0].([]GetReplacemsggroupSpam)[vs[1].(int)]
	}).(GetReplacemsggroupSpamOutput)
}

type GetReplacemsggroupSslvpn struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupSslvpnInput is an input type that accepts GetReplacemsggroupSslvpnArgs and GetReplacemsggroupSslvpnOutput values.
// You can construct a concrete instance of `GetReplacemsggroupSslvpnInput` via:
//
//	GetReplacemsggroupSslvpnArgs{...}
type GetReplacemsggroupSslvpnInput interface {
	pulumi.Input

	ToGetReplacemsggroupSslvpnOutput() GetReplacemsggroupSslvpnOutput
	ToGetReplacemsggroupSslvpnOutputWithContext(context.Context) GetReplacemsggroupSslvpnOutput
}

type GetReplacemsggroupSslvpnArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupSslvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupSslvpn)(nil)).Elem()
}

func (i GetReplacemsggroupSslvpnArgs) ToGetReplacemsggroupSslvpnOutput() GetReplacemsggroupSslvpnOutput {
	return i.ToGetReplacemsggroupSslvpnOutputWithContext(context.Background())
}

func (i GetReplacemsggroupSslvpnArgs) ToGetReplacemsggroupSslvpnOutputWithContext(ctx context.Context) GetReplacemsggroupSslvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupSslvpnOutput)
}

// GetReplacemsggroupSslvpnArrayInput is an input type that accepts GetReplacemsggroupSslvpnArray and GetReplacemsggroupSslvpnArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupSslvpnArrayInput` via:
//
//	GetReplacemsggroupSslvpnArray{ GetReplacemsggroupSslvpnArgs{...} }
type GetReplacemsggroupSslvpnArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupSslvpnArrayOutput() GetReplacemsggroupSslvpnArrayOutput
	ToGetReplacemsggroupSslvpnArrayOutputWithContext(context.Context) GetReplacemsggroupSslvpnArrayOutput
}

type GetReplacemsggroupSslvpnArray []GetReplacemsggroupSslvpnInput

func (GetReplacemsggroupSslvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupSslvpn)(nil)).Elem()
}

func (i GetReplacemsggroupSslvpnArray) ToGetReplacemsggroupSslvpnArrayOutput() GetReplacemsggroupSslvpnArrayOutput {
	return i.ToGetReplacemsggroupSslvpnArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupSslvpnArray) ToGetReplacemsggroupSslvpnArrayOutputWithContext(ctx context.Context) GetReplacemsggroupSslvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupSslvpnArrayOutput)
}

type GetReplacemsggroupSslvpnOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupSslvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupSslvpn)(nil)).Elem()
}

func (o GetReplacemsggroupSslvpnOutput) ToGetReplacemsggroupSslvpnOutput() GetReplacemsggroupSslvpnOutput {
	return o
}

func (o GetReplacemsggroupSslvpnOutput) ToGetReplacemsggroupSslvpnOutputWithContext(ctx context.Context) GetReplacemsggroupSslvpnOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupSslvpnOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupSslvpn) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupSslvpnOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupSslvpn) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupSslvpnOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupSslvpn) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupSslvpnOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupSslvpn) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupSslvpnArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupSslvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupSslvpn)(nil)).Elem()
}

func (o GetReplacemsggroupSslvpnArrayOutput) ToGetReplacemsggroupSslvpnArrayOutput() GetReplacemsggroupSslvpnArrayOutput {
	return o
}

func (o GetReplacemsggroupSslvpnArrayOutput) ToGetReplacemsggroupSslvpnArrayOutputWithContext(ctx context.Context) GetReplacemsggroupSslvpnArrayOutput {
	return o
}

func (o GetReplacemsggroupSslvpnArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupSslvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupSslvpn {
		return vs[0].([]GetReplacemsggroupSslvpn)[vs[1].(int)]
	}).(GetReplacemsggroupSslvpnOutput)
}

type GetReplacemsggroupTrafficQuota struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupTrafficQuotaInput is an input type that accepts GetReplacemsggroupTrafficQuotaArgs and GetReplacemsggroupTrafficQuotaOutput values.
// You can construct a concrete instance of `GetReplacemsggroupTrafficQuotaInput` via:
//
//	GetReplacemsggroupTrafficQuotaArgs{...}
type GetReplacemsggroupTrafficQuotaInput interface {
	pulumi.Input

	ToGetReplacemsggroupTrafficQuotaOutput() GetReplacemsggroupTrafficQuotaOutput
	ToGetReplacemsggroupTrafficQuotaOutputWithContext(context.Context) GetReplacemsggroupTrafficQuotaOutput
}

type GetReplacemsggroupTrafficQuotaArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupTrafficQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (i GetReplacemsggroupTrafficQuotaArgs) ToGetReplacemsggroupTrafficQuotaOutput() GetReplacemsggroupTrafficQuotaOutput {
	return i.ToGetReplacemsggroupTrafficQuotaOutputWithContext(context.Background())
}

func (i GetReplacemsggroupTrafficQuotaArgs) ToGetReplacemsggroupTrafficQuotaOutputWithContext(ctx context.Context) GetReplacemsggroupTrafficQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupTrafficQuotaOutput)
}

// GetReplacemsggroupTrafficQuotaArrayInput is an input type that accepts GetReplacemsggroupTrafficQuotaArray and GetReplacemsggroupTrafficQuotaArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupTrafficQuotaArrayInput` via:
//
//	GetReplacemsggroupTrafficQuotaArray{ GetReplacemsggroupTrafficQuotaArgs{...} }
type GetReplacemsggroupTrafficQuotaArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupTrafficQuotaArrayOutput() GetReplacemsggroupTrafficQuotaArrayOutput
	ToGetReplacemsggroupTrafficQuotaArrayOutputWithContext(context.Context) GetReplacemsggroupTrafficQuotaArrayOutput
}

type GetReplacemsggroupTrafficQuotaArray []GetReplacemsggroupTrafficQuotaInput

func (GetReplacemsggroupTrafficQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (i GetReplacemsggroupTrafficQuotaArray) ToGetReplacemsggroupTrafficQuotaArrayOutput() GetReplacemsggroupTrafficQuotaArrayOutput {
	return i.ToGetReplacemsggroupTrafficQuotaArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupTrafficQuotaArray) ToGetReplacemsggroupTrafficQuotaArrayOutputWithContext(ctx context.Context) GetReplacemsggroupTrafficQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupTrafficQuotaArrayOutput)
}

type GetReplacemsggroupTrafficQuotaOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupTrafficQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (o GetReplacemsggroupTrafficQuotaOutput) ToGetReplacemsggroupTrafficQuotaOutput() GetReplacemsggroupTrafficQuotaOutput {
	return o
}

func (o GetReplacemsggroupTrafficQuotaOutput) ToGetReplacemsggroupTrafficQuotaOutputWithContext(ctx context.Context) GetReplacemsggroupTrafficQuotaOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupTrafficQuotaOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupTrafficQuota) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupTrafficQuotaOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupTrafficQuota) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupTrafficQuotaOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupTrafficQuota) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupTrafficQuotaOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupTrafficQuota) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupTrafficQuotaArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupTrafficQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (o GetReplacemsggroupTrafficQuotaArrayOutput) ToGetReplacemsggroupTrafficQuotaArrayOutput() GetReplacemsggroupTrafficQuotaArrayOutput {
	return o
}

func (o GetReplacemsggroupTrafficQuotaArrayOutput) ToGetReplacemsggroupTrafficQuotaArrayOutputWithContext(ctx context.Context) GetReplacemsggroupTrafficQuotaArrayOutput {
	return o
}

func (o GetReplacemsggroupTrafficQuotaArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupTrafficQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupTrafficQuota {
		return vs[0].([]GetReplacemsggroupTrafficQuota)[vs[1].(int)]
	}).(GetReplacemsggroupTrafficQuotaOutput)
}

type GetReplacemsggroupUtm struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupUtmInput is an input type that accepts GetReplacemsggroupUtmArgs and GetReplacemsggroupUtmOutput values.
// You can construct a concrete instance of `GetReplacemsggroupUtmInput` via:
//
//	GetReplacemsggroupUtmArgs{...}
type GetReplacemsggroupUtmInput interface {
	pulumi.Input

	ToGetReplacemsggroupUtmOutput() GetReplacemsggroupUtmOutput
	ToGetReplacemsggroupUtmOutputWithContext(context.Context) GetReplacemsggroupUtmOutput
}

type GetReplacemsggroupUtmArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupUtmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupUtm)(nil)).Elem()
}

func (i GetReplacemsggroupUtmArgs) ToGetReplacemsggroupUtmOutput() GetReplacemsggroupUtmOutput {
	return i.ToGetReplacemsggroupUtmOutputWithContext(context.Background())
}

func (i GetReplacemsggroupUtmArgs) ToGetReplacemsggroupUtmOutputWithContext(ctx context.Context) GetReplacemsggroupUtmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupUtmOutput)
}

// GetReplacemsggroupUtmArrayInput is an input type that accepts GetReplacemsggroupUtmArray and GetReplacemsggroupUtmArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupUtmArrayInput` via:
//
//	GetReplacemsggroupUtmArray{ GetReplacemsggroupUtmArgs{...} }
type GetReplacemsggroupUtmArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupUtmArrayOutput() GetReplacemsggroupUtmArrayOutput
	ToGetReplacemsggroupUtmArrayOutputWithContext(context.Context) GetReplacemsggroupUtmArrayOutput
}

type GetReplacemsggroupUtmArray []GetReplacemsggroupUtmInput

func (GetReplacemsggroupUtmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupUtm)(nil)).Elem()
}

func (i GetReplacemsggroupUtmArray) ToGetReplacemsggroupUtmArrayOutput() GetReplacemsggroupUtmArrayOutput {
	return i.ToGetReplacemsggroupUtmArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupUtmArray) ToGetReplacemsggroupUtmArrayOutputWithContext(ctx context.Context) GetReplacemsggroupUtmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupUtmArrayOutput)
}

type GetReplacemsggroupUtmOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupUtmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupUtm)(nil)).Elem()
}

func (o GetReplacemsggroupUtmOutput) ToGetReplacemsggroupUtmOutput() GetReplacemsggroupUtmOutput {
	return o
}

func (o GetReplacemsggroupUtmOutput) ToGetReplacemsggroupUtmOutputWithContext(ctx context.Context) GetReplacemsggroupUtmOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupUtmOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupUtm) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupUtmOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupUtm) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupUtmOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupUtm) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupUtmOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupUtm) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupUtmArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupUtmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupUtm)(nil)).Elem()
}

func (o GetReplacemsggroupUtmArrayOutput) ToGetReplacemsggroupUtmArrayOutput() GetReplacemsggroupUtmArrayOutput {
	return o
}

func (o GetReplacemsggroupUtmArrayOutput) ToGetReplacemsggroupUtmArrayOutputWithContext(ctx context.Context) GetReplacemsggroupUtmArrayOutput {
	return o
}

func (o GetReplacemsggroupUtmArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupUtmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupUtm {
		return vs[0].([]GetReplacemsggroupUtm)[vs[1].(int)]
	}).(GetReplacemsggroupUtmOutput)
}

type GetReplacemsggroupWebproxy struct {
	// Message string.
	Buffer string `pulumi:"buffer"`
	// Format flag.
	Format string `pulumi:"format"`
	// Header flag.
	Header string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
}

// GetReplacemsggroupWebproxyInput is an input type that accepts GetReplacemsggroupWebproxyArgs and GetReplacemsggroupWebproxyOutput values.
// You can construct a concrete instance of `GetReplacemsggroupWebproxyInput` via:
//
//	GetReplacemsggroupWebproxyArgs{...}
type GetReplacemsggroupWebproxyInput interface {
	pulumi.Input

	ToGetReplacemsggroupWebproxyOutput() GetReplacemsggroupWebproxyOutput
	ToGetReplacemsggroupWebproxyOutputWithContext(context.Context) GetReplacemsggroupWebproxyOutput
}

type GetReplacemsggroupWebproxyArgs struct {
	// Message string.
	Buffer pulumi.StringInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringInput `pulumi:"format"`
	// Header flag.
	Header pulumi.StringInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringInput `pulumi:"msgType"`
}

func (GetReplacemsggroupWebproxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupWebproxy)(nil)).Elem()
}

func (i GetReplacemsggroupWebproxyArgs) ToGetReplacemsggroupWebproxyOutput() GetReplacemsggroupWebproxyOutput {
	return i.ToGetReplacemsggroupWebproxyOutputWithContext(context.Background())
}

func (i GetReplacemsggroupWebproxyArgs) ToGetReplacemsggroupWebproxyOutputWithContext(ctx context.Context) GetReplacemsggroupWebproxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupWebproxyOutput)
}

// GetReplacemsggroupWebproxyArrayInput is an input type that accepts GetReplacemsggroupWebproxyArray and GetReplacemsggroupWebproxyArrayOutput values.
// You can construct a concrete instance of `GetReplacemsggroupWebproxyArrayInput` via:
//
//	GetReplacemsggroupWebproxyArray{ GetReplacemsggroupWebproxyArgs{...} }
type GetReplacemsggroupWebproxyArrayInput interface {
	pulumi.Input

	ToGetReplacemsggroupWebproxyArrayOutput() GetReplacemsggroupWebproxyArrayOutput
	ToGetReplacemsggroupWebproxyArrayOutputWithContext(context.Context) GetReplacemsggroupWebproxyArrayOutput
}

type GetReplacemsggroupWebproxyArray []GetReplacemsggroupWebproxyInput

func (GetReplacemsggroupWebproxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupWebproxy)(nil)).Elem()
}

func (i GetReplacemsggroupWebproxyArray) ToGetReplacemsggroupWebproxyArrayOutput() GetReplacemsggroupWebproxyArrayOutput {
	return i.ToGetReplacemsggroupWebproxyArrayOutputWithContext(context.Background())
}

func (i GetReplacemsggroupWebproxyArray) ToGetReplacemsggroupWebproxyArrayOutputWithContext(ctx context.Context) GetReplacemsggroupWebproxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplacemsggroupWebproxyArrayOutput)
}

type GetReplacemsggroupWebproxyOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupWebproxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplacemsggroupWebproxy)(nil)).Elem()
}

func (o GetReplacemsggroupWebproxyOutput) ToGetReplacemsggroupWebproxyOutput() GetReplacemsggroupWebproxyOutput {
	return o
}

func (o GetReplacemsggroupWebproxyOutput) ToGetReplacemsggroupWebproxyOutputWithContext(ctx context.Context) GetReplacemsggroupWebproxyOutput {
	return o
}

// Message string.
func (o GetReplacemsggroupWebproxyOutput) Buffer() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupWebproxy) string { return v.Buffer }).(pulumi.StringOutput)
}

// Format flag.
func (o GetReplacemsggroupWebproxyOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupWebproxy) string { return v.Format }).(pulumi.StringOutput)
}

// Header flag.
func (o GetReplacemsggroupWebproxyOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupWebproxy) string { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o GetReplacemsggroupWebproxyOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplacemsggroupWebproxy) string { return v.MsgType }).(pulumi.StringOutput)
}

type GetReplacemsggroupWebproxyArrayOutput struct{ *pulumi.OutputState }

func (GetReplacemsggroupWebproxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplacemsggroupWebproxy)(nil)).Elem()
}

func (o GetReplacemsggroupWebproxyArrayOutput) ToGetReplacemsggroupWebproxyArrayOutput() GetReplacemsggroupWebproxyArrayOutput {
	return o
}

func (o GetReplacemsggroupWebproxyArrayOutput) ToGetReplacemsggroupWebproxyArrayOutputWithContext(ctx context.Context) GetReplacemsggroupWebproxyArrayOutput {
	return o
}

func (o GetReplacemsggroupWebproxyArrayOutput) Index(i pulumi.IntInput) GetReplacemsggroupWebproxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplacemsggroupWebproxy {
		return vs[0].([]GetReplacemsggroupWebproxy)[vs[1].(int)]
	}).(GetReplacemsggroupWebproxyOutput)
}

type GetSdnconnectorCompartmentList struct {
	// OCI compartment ID.
	CompartmentId string `pulumi:"compartmentId"`
}

// GetSdnconnectorCompartmentListInput is an input type that accepts GetSdnconnectorCompartmentListArgs and GetSdnconnectorCompartmentListOutput values.
// You can construct a concrete instance of `GetSdnconnectorCompartmentListInput` via:
//
//	GetSdnconnectorCompartmentListArgs{...}
type GetSdnconnectorCompartmentListInput interface {
	pulumi.Input

	ToGetSdnconnectorCompartmentListOutput() GetSdnconnectorCompartmentListOutput
	ToGetSdnconnectorCompartmentListOutputWithContext(context.Context) GetSdnconnectorCompartmentListOutput
}

type GetSdnconnectorCompartmentListArgs struct {
	// OCI compartment ID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
}

func (GetSdnconnectorCompartmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorCompartmentList)(nil)).Elem()
}

func (i GetSdnconnectorCompartmentListArgs) ToGetSdnconnectorCompartmentListOutput() GetSdnconnectorCompartmentListOutput {
	return i.ToGetSdnconnectorCompartmentListOutputWithContext(context.Background())
}

func (i GetSdnconnectorCompartmentListArgs) ToGetSdnconnectorCompartmentListOutputWithContext(ctx context.Context) GetSdnconnectorCompartmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorCompartmentListOutput)
}

// GetSdnconnectorCompartmentListArrayInput is an input type that accepts GetSdnconnectorCompartmentListArray and GetSdnconnectorCompartmentListArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorCompartmentListArrayInput` via:
//
//	GetSdnconnectorCompartmentListArray{ GetSdnconnectorCompartmentListArgs{...} }
type GetSdnconnectorCompartmentListArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorCompartmentListArrayOutput() GetSdnconnectorCompartmentListArrayOutput
	ToGetSdnconnectorCompartmentListArrayOutputWithContext(context.Context) GetSdnconnectorCompartmentListArrayOutput
}

type GetSdnconnectorCompartmentListArray []GetSdnconnectorCompartmentListInput

func (GetSdnconnectorCompartmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorCompartmentList)(nil)).Elem()
}

func (i GetSdnconnectorCompartmentListArray) ToGetSdnconnectorCompartmentListArrayOutput() GetSdnconnectorCompartmentListArrayOutput {
	return i.ToGetSdnconnectorCompartmentListArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorCompartmentListArray) ToGetSdnconnectorCompartmentListArrayOutputWithContext(ctx context.Context) GetSdnconnectorCompartmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorCompartmentListArrayOutput)
}

type GetSdnconnectorCompartmentListOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorCompartmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorCompartmentList)(nil)).Elem()
}

func (o GetSdnconnectorCompartmentListOutput) ToGetSdnconnectorCompartmentListOutput() GetSdnconnectorCompartmentListOutput {
	return o
}

func (o GetSdnconnectorCompartmentListOutput) ToGetSdnconnectorCompartmentListOutputWithContext(ctx context.Context) GetSdnconnectorCompartmentListOutput {
	return o
}

// OCI compartment ID.
func (o GetSdnconnectorCompartmentListOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorCompartmentList) string { return v.CompartmentId }).(pulumi.StringOutput)
}

type GetSdnconnectorCompartmentListArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorCompartmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorCompartmentList)(nil)).Elem()
}

func (o GetSdnconnectorCompartmentListArrayOutput) ToGetSdnconnectorCompartmentListArrayOutput() GetSdnconnectorCompartmentListArrayOutput {
	return o
}

func (o GetSdnconnectorCompartmentListArrayOutput) ToGetSdnconnectorCompartmentListArrayOutputWithContext(ctx context.Context) GetSdnconnectorCompartmentListArrayOutput {
	return o
}

func (o GetSdnconnectorCompartmentListArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorCompartmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorCompartmentList {
		return vs[0].([]GetSdnconnectorCompartmentList)[vs[1].(int)]
	}).(GetSdnconnectorCompartmentListOutput)
}

type GetSdnconnectorExternalAccountList struct {
	// AWS external ID.
	ExternalId string `pulumi:"externalId"`
	// AWS region name list. The structure of `regionList` block is documented below.
	RegionLists []GetSdnconnectorExternalAccountListRegionList `pulumi:"regionLists"`
	// AWS role ARN to assume.
	RoleArn string `pulumi:"roleArn"`
}

// GetSdnconnectorExternalAccountListInput is an input type that accepts GetSdnconnectorExternalAccountListArgs and GetSdnconnectorExternalAccountListOutput values.
// You can construct a concrete instance of `GetSdnconnectorExternalAccountListInput` via:
//
//	GetSdnconnectorExternalAccountListArgs{...}
type GetSdnconnectorExternalAccountListInput interface {
	pulumi.Input

	ToGetSdnconnectorExternalAccountListOutput() GetSdnconnectorExternalAccountListOutput
	ToGetSdnconnectorExternalAccountListOutputWithContext(context.Context) GetSdnconnectorExternalAccountListOutput
}

type GetSdnconnectorExternalAccountListArgs struct {
	// AWS external ID.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// AWS region name list. The structure of `regionList` block is documented below.
	RegionLists GetSdnconnectorExternalAccountListRegionListArrayInput `pulumi:"regionLists"`
	// AWS role ARN to assume.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (GetSdnconnectorExternalAccountListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorExternalAccountList)(nil)).Elem()
}

func (i GetSdnconnectorExternalAccountListArgs) ToGetSdnconnectorExternalAccountListOutput() GetSdnconnectorExternalAccountListOutput {
	return i.ToGetSdnconnectorExternalAccountListOutputWithContext(context.Background())
}

func (i GetSdnconnectorExternalAccountListArgs) ToGetSdnconnectorExternalAccountListOutputWithContext(ctx context.Context) GetSdnconnectorExternalAccountListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorExternalAccountListOutput)
}

// GetSdnconnectorExternalAccountListArrayInput is an input type that accepts GetSdnconnectorExternalAccountListArray and GetSdnconnectorExternalAccountListArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorExternalAccountListArrayInput` via:
//
//	GetSdnconnectorExternalAccountListArray{ GetSdnconnectorExternalAccountListArgs{...} }
type GetSdnconnectorExternalAccountListArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorExternalAccountListArrayOutput() GetSdnconnectorExternalAccountListArrayOutput
	ToGetSdnconnectorExternalAccountListArrayOutputWithContext(context.Context) GetSdnconnectorExternalAccountListArrayOutput
}

type GetSdnconnectorExternalAccountListArray []GetSdnconnectorExternalAccountListInput

func (GetSdnconnectorExternalAccountListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorExternalAccountList)(nil)).Elem()
}

func (i GetSdnconnectorExternalAccountListArray) ToGetSdnconnectorExternalAccountListArrayOutput() GetSdnconnectorExternalAccountListArrayOutput {
	return i.ToGetSdnconnectorExternalAccountListArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorExternalAccountListArray) ToGetSdnconnectorExternalAccountListArrayOutputWithContext(ctx context.Context) GetSdnconnectorExternalAccountListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorExternalAccountListArrayOutput)
}

type GetSdnconnectorExternalAccountListOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorExternalAccountListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorExternalAccountList)(nil)).Elem()
}

func (o GetSdnconnectorExternalAccountListOutput) ToGetSdnconnectorExternalAccountListOutput() GetSdnconnectorExternalAccountListOutput {
	return o
}

func (o GetSdnconnectorExternalAccountListOutput) ToGetSdnconnectorExternalAccountListOutputWithContext(ctx context.Context) GetSdnconnectorExternalAccountListOutput {
	return o
}

// AWS external ID.
func (o GetSdnconnectorExternalAccountListOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorExternalAccountList) string { return v.ExternalId }).(pulumi.StringOutput)
}

// AWS region name list. The structure of `regionList` block is documented below.
func (o GetSdnconnectorExternalAccountListOutput) RegionLists() GetSdnconnectorExternalAccountListRegionListArrayOutput {
	return o.ApplyT(func(v GetSdnconnectorExternalAccountList) []GetSdnconnectorExternalAccountListRegionList {
		return v.RegionLists
	}).(GetSdnconnectorExternalAccountListRegionListArrayOutput)
}

// AWS role ARN to assume.
func (o GetSdnconnectorExternalAccountListOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorExternalAccountList) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetSdnconnectorExternalAccountListArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorExternalAccountListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorExternalAccountList)(nil)).Elem()
}

func (o GetSdnconnectorExternalAccountListArrayOutput) ToGetSdnconnectorExternalAccountListArrayOutput() GetSdnconnectorExternalAccountListArrayOutput {
	return o
}

func (o GetSdnconnectorExternalAccountListArrayOutput) ToGetSdnconnectorExternalAccountListArrayOutputWithContext(ctx context.Context) GetSdnconnectorExternalAccountListArrayOutput {
	return o
}

func (o GetSdnconnectorExternalAccountListArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorExternalAccountListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorExternalAccountList {
		return vs[0].([]GetSdnconnectorExternalAccountList)[vs[1].(int)]
	}).(GetSdnconnectorExternalAccountListOutput)
}

type GetSdnconnectorExternalAccountListRegionList struct {
	// OCI region.
	Region string `pulumi:"region"`
}

// GetSdnconnectorExternalAccountListRegionListInput is an input type that accepts GetSdnconnectorExternalAccountListRegionListArgs and GetSdnconnectorExternalAccountListRegionListOutput values.
// You can construct a concrete instance of `GetSdnconnectorExternalAccountListRegionListInput` via:
//
//	GetSdnconnectorExternalAccountListRegionListArgs{...}
type GetSdnconnectorExternalAccountListRegionListInput interface {
	pulumi.Input

	ToGetSdnconnectorExternalAccountListRegionListOutput() GetSdnconnectorExternalAccountListRegionListOutput
	ToGetSdnconnectorExternalAccountListRegionListOutputWithContext(context.Context) GetSdnconnectorExternalAccountListRegionListOutput
}

type GetSdnconnectorExternalAccountListRegionListArgs struct {
	// OCI region.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetSdnconnectorExternalAccountListRegionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (i GetSdnconnectorExternalAccountListRegionListArgs) ToGetSdnconnectorExternalAccountListRegionListOutput() GetSdnconnectorExternalAccountListRegionListOutput {
	return i.ToGetSdnconnectorExternalAccountListRegionListOutputWithContext(context.Background())
}

func (i GetSdnconnectorExternalAccountListRegionListArgs) ToGetSdnconnectorExternalAccountListRegionListOutputWithContext(ctx context.Context) GetSdnconnectorExternalAccountListRegionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorExternalAccountListRegionListOutput)
}

// GetSdnconnectorExternalAccountListRegionListArrayInput is an input type that accepts GetSdnconnectorExternalAccountListRegionListArray and GetSdnconnectorExternalAccountListRegionListArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorExternalAccountListRegionListArrayInput` via:
//
//	GetSdnconnectorExternalAccountListRegionListArray{ GetSdnconnectorExternalAccountListRegionListArgs{...} }
type GetSdnconnectorExternalAccountListRegionListArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorExternalAccountListRegionListArrayOutput() GetSdnconnectorExternalAccountListRegionListArrayOutput
	ToGetSdnconnectorExternalAccountListRegionListArrayOutputWithContext(context.Context) GetSdnconnectorExternalAccountListRegionListArrayOutput
}

type GetSdnconnectorExternalAccountListRegionListArray []GetSdnconnectorExternalAccountListRegionListInput

func (GetSdnconnectorExternalAccountListRegionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (i GetSdnconnectorExternalAccountListRegionListArray) ToGetSdnconnectorExternalAccountListRegionListArrayOutput() GetSdnconnectorExternalAccountListRegionListArrayOutput {
	return i.ToGetSdnconnectorExternalAccountListRegionListArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorExternalAccountListRegionListArray) ToGetSdnconnectorExternalAccountListRegionListArrayOutputWithContext(ctx context.Context) GetSdnconnectorExternalAccountListRegionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorExternalAccountListRegionListArrayOutput)
}

type GetSdnconnectorExternalAccountListRegionListOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorExternalAccountListRegionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (o GetSdnconnectorExternalAccountListRegionListOutput) ToGetSdnconnectorExternalAccountListRegionListOutput() GetSdnconnectorExternalAccountListRegionListOutput {
	return o
}

func (o GetSdnconnectorExternalAccountListRegionListOutput) ToGetSdnconnectorExternalAccountListRegionListOutputWithContext(ctx context.Context) GetSdnconnectorExternalAccountListRegionListOutput {
	return o
}

// OCI region.
func (o GetSdnconnectorExternalAccountListRegionListOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorExternalAccountListRegionList) string { return v.Region }).(pulumi.StringOutput)
}

type GetSdnconnectorExternalAccountListRegionListArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorExternalAccountListRegionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (o GetSdnconnectorExternalAccountListRegionListArrayOutput) ToGetSdnconnectorExternalAccountListRegionListArrayOutput() GetSdnconnectorExternalAccountListRegionListArrayOutput {
	return o
}

func (o GetSdnconnectorExternalAccountListRegionListArrayOutput) ToGetSdnconnectorExternalAccountListRegionListArrayOutputWithContext(ctx context.Context) GetSdnconnectorExternalAccountListRegionListArrayOutput {
	return o
}

func (o GetSdnconnectorExternalAccountListRegionListArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorExternalAccountListRegionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorExternalAccountListRegionList {
		return vs[0].([]GetSdnconnectorExternalAccountListRegionList)[vs[1].(int)]
	}).(GetSdnconnectorExternalAccountListRegionListOutput)
}

type GetSdnconnectorExternalIp struct {
	// Specify the name of the desired system sdnconnector.
	Name string `pulumi:"name"`
}

// GetSdnconnectorExternalIpInput is an input type that accepts GetSdnconnectorExternalIpArgs and GetSdnconnectorExternalIpOutput values.
// You can construct a concrete instance of `GetSdnconnectorExternalIpInput` via:
//
//	GetSdnconnectorExternalIpArgs{...}
type GetSdnconnectorExternalIpInput interface {
	pulumi.Input

	ToGetSdnconnectorExternalIpOutput() GetSdnconnectorExternalIpOutput
	ToGetSdnconnectorExternalIpOutputWithContext(context.Context) GetSdnconnectorExternalIpOutput
}

type GetSdnconnectorExternalIpArgs struct {
	// Specify the name of the desired system sdnconnector.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSdnconnectorExternalIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorExternalIp)(nil)).Elem()
}

func (i GetSdnconnectorExternalIpArgs) ToGetSdnconnectorExternalIpOutput() GetSdnconnectorExternalIpOutput {
	return i.ToGetSdnconnectorExternalIpOutputWithContext(context.Background())
}

func (i GetSdnconnectorExternalIpArgs) ToGetSdnconnectorExternalIpOutputWithContext(ctx context.Context) GetSdnconnectorExternalIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorExternalIpOutput)
}

// GetSdnconnectorExternalIpArrayInput is an input type that accepts GetSdnconnectorExternalIpArray and GetSdnconnectorExternalIpArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorExternalIpArrayInput` via:
//
//	GetSdnconnectorExternalIpArray{ GetSdnconnectorExternalIpArgs{...} }
type GetSdnconnectorExternalIpArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorExternalIpArrayOutput() GetSdnconnectorExternalIpArrayOutput
	ToGetSdnconnectorExternalIpArrayOutputWithContext(context.Context) GetSdnconnectorExternalIpArrayOutput
}

type GetSdnconnectorExternalIpArray []GetSdnconnectorExternalIpInput

func (GetSdnconnectorExternalIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorExternalIp)(nil)).Elem()
}

func (i GetSdnconnectorExternalIpArray) ToGetSdnconnectorExternalIpArrayOutput() GetSdnconnectorExternalIpArrayOutput {
	return i.ToGetSdnconnectorExternalIpArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorExternalIpArray) ToGetSdnconnectorExternalIpArrayOutputWithContext(ctx context.Context) GetSdnconnectorExternalIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorExternalIpArrayOutput)
}

type GetSdnconnectorExternalIpOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorExternalIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorExternalIp)(nil)).Elem()
}

func (o GetSdnconnectorExternalIpOutput) ToGetSdnconnectorExternalIpOutput() GetSdnconnectorExternalIpOutput {
	return o
}

func (o GetSdnconnectorExternalIpOutput) ToGetSdnconnectorExternalIpOutputWithContext(ctx context.Context) GetSdnconnectorExternalIpOutput {
	return o
}

// Specify the name of the desired system sdnconnector.
func (o GetSdnconnectorExternalIpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorExternalIp) string { return v.Name }).(pulumi.StringOutput)
}

type GetSdnconnectorExternalIpArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorExternalIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorExternalIp)(nil)).Elem()
}

func (o GetSdnconnectorExternalIpArrayOutput) ToGetSdnconnectorExternalIpArrayOutput() GetSdnconnectorExternalIpArrayOutput {
	return o
}

func (o GetSdnconnectorExternalIpArrayOutput) ToGetSdnconnectorExternalIpArrayOutputWithContext(ctx context.Context) GetSdnconnectorExternalIpArrayOutput {
	return o
}

func (o GetSdnconnectorExternalIpArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorExternalIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorExternalIp {
		return vs[0].([]GetSdnconnectorExternalIp)[vs[1].(int)]
	}).(GetSdnconnectorExternalIpOutput)
}

type GetSdnconnectorForwardingRule struct {
	// Forwarding rule name.
	RuleName string `pulumi:"ruleName"`
	// Target instance name.
	Target string `pulumi:"target"`
}

// GetSdnconnectorForwardingRuleInput is an input type that accepts GetSdnconnectorForwardingRuleArgs and GetSdnconnectorForwardingRuleOutput values.
// You can construct a concrete instance of `GetSdnconnectorForwardingRuleInput` via:
//
//	GetSdnconnectorForwardingRuleArgs{...}
type GetSdnconnectorForwardingRuleInput interface {
	pulumi.Input

	ToGetSdnconnectorForwardingRuleOutput() GetSdnconnectorForwardingRuleOutput
	ToGetSdnconnectorForwardingRuleOutputWithContext(context.Context) GetSdnconnectorForwardingRuleOutput
}

type GetSdnconnectorForwardingRuleArgs struct {
	// Forwarding rule name.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
	// Target instance name.
	Target pulumi.StringInput `pulumi:"target"`
}

func (GetSdnconnectorForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorForwardingRule)(nil)).Elem()
}

func (i GetSdnconnectorForwardingRuleArgs) ToGetSdnconnectorForwardingRuleOutput() GetSdnconnectorForwardingRuleOutput {
	return i.ToGetSdnconnectorForwardingRuleOutputWithContext(context.Background())
}

func (i GetSdnconnectorForwardingRuleArgs) ToGetSdnconnectorForwardingRuleOutputWithContext(ctx context.Context) GetSdnconnectorForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorForwardingRuleOutput)
}

// GetSdnconnectorForwardingRuleArrayInput is an input type that accepts GetSdnconnectorForwardingRuleArray and GetSdnconnectorForwardingRuleArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorForwardingRuleArrayInput` via:
//
//	GetSdnconnectorForwardingRuleArray{ GetSdnconnectorForwardingRuleArgs{...} }
type GetSdnconnectorForwardingRuleArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorForwardingRuleArrayOutput() GetSdnconnectorForwardingRuleArrayOutput
	ToGetSdnconnectorForwardingRuleArrayOutputWithContext(context.Context) GetSdnconnectorForwardingRuleArrayOutput
}

type GetSdnconnectorForwardingRuleArray []GetSdnconnectorForwardingRuleInput

func (GetSdnconnectorForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorForwardingRule)(nil)).Elem()
}

func (i GetSdnconnectorForwardingRuleArray) ToGetSdnconnectorForwardingRuleArrayOutput() GetSdnconnectorForwardingRuleArrayOutput {
	return i.ToGetSdnconnectorForwardingRuleArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorForwardingRuleArray) ToGetSdnconnectorForwardingRuleArrayOutputWithContext(ctx context.Context) GetSdnconnectorForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorForwardingRuleArrayOutput)
}

type GetSdnconnectorForwardingRuleOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorForwardingRule)(nil)).Elem()
}

func (o GetSdnconnectorForwardingRuleOutput) ToGetSdnconnectorForwardingRuleOutput() GetSdnconnectorForwardingRuleOutput {
	return o
}

func (o GetSdnconnectorForwardingRuleOutput) ToGetSdnconnectorForwardingRuleOutputWithContext(ctx context.Context) GetSdnconnectorForwardingRuleOutput {
	return o
}

// Forwarding rule name.
func (o GetSdnconnectorForwardingRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorForwardingRule) string { return v.RuleName }).(pulumi.StringOutput)
}

// Target instance name.
func (o GetSdnconnectorForwardingRuleOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorForwardingRule) string { return v.Target }).(pulumi.StringOutput)
}

type GetSdnconnectorForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorForwardingRule)(nil)).Elem()
}

func (o GetSdnconnectorForwardingRuleArrayOutput) ToGetSdnconnectorForwardingRuleArrayOutput() GetSdnconnectorForwardingRuleArrayOutput {
	return o
}

func (o GetSdnconnectorForwardingRuleArrayOutput) ToGetSdnconnectorForwardingRuleArrayOutputWithContext(ctx context.Context) GetSdnconnectorForwardingRuleArrayOutput {
	return o
}

func (o GetSdnconnectorForwardingRuleArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorForwardingRule {
		return vs[0].([]GetSdnconnectorForwardingRule)[vs[1].(int)]
	}).(GetSdnconnectorForwardingRuleOutput)
}

type GetSdnconnectorGcpProjectList struct {
	// Configure GCP zone list. The structure of `gcpZoneList` block is documented below.
	GcpZoneLists []GetSdnconnectorGcpProjectListGcpZoneList `pulumi:"gcpZoneLists"`
	// GCP project ID.
	Id string `pulumi:"id"`
}

// GetSdnconnectorGcpProjectListInput is an input type that accepts GetSdnconnectorGcpProjectListArgs and GetSdnconnectorGcpProjectListOutput values.
// You can construct a concrete instance of `GetSdnconnectorGcpProjectListInput` via:
//
//	GetSdnconnectorGcpProjectListArgs{...}
type GetSdnconnectorGcpProjectListInput interface {
	pulumi.Input

	ToGetSdnconnectorGcpProjectListOutput() GetSdnconnectorGcpProjectListOutput
	ToGetSdnconnectorGcpProjectListOutputWithContext(context.Context) GetSdnconnectorGcpProjectListOutput
}

type GetSdnconnectorGcpProjectListArgs struct {
	// Configure GCP zone list. The structure of `gcpZoneList` block is documented below.
	GcpZoneLists GetSdnconnectorGcpProjectListGcpZoneListArrayInput `pulumi:"gcpZoneLists"`
	// GCP project ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSdnconnectorGcpProjectListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorGcpProjectList)(nil)).Elem()
}

func (i GetSdnconnectorGcpProjectListArgs) ToGetSdnconnectorGcpProjectListOutput() GetSdnconnectorGcpProjectListOutput {
	return i.ToGetSdnconnectorGcpProjectListOutputWithContext(context.Background())
}

func (i GetSdnconnectorGcpProjectListArgs) ToGetSdnconnectorGcpProjectListOutputWithContext(ctx context.Context) GetSdnconnectorGcpProjectListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorGcpProjectListOutput)
}

// GetSdnconnectorGcpProjectListArrayInput is an input type that accepts GetSdnconnectorGcpProjectListArray and GetSdnconnectorGcpProjectListArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorGcpProjectListArrayInput` via:
//
//	GetSdnconnectorGcpProjectListArray{ GetSdnconnectorGcpProjectListArgs{...} }
type GetSdnconnectorGcpProjectListArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorGcpProjectListArrayOutput() GetSdnconnectorGcpProjectListArrayOutput
	ToGetSdnconnectorGcpProjectListArrayOutputWithContext(context.Context) GetSdnconnectorGcpProjectListArrayOutput
}

type GetSdnconnectorGcpProjectListArray []GetSdnconnectorGcpProjectListInput

func (GetSdnconnectorGcpProjectListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorGcpProjectList)(nil)).Elem()
}

func (i GetSdnconnectorGcpProjectListArray) ToGetSdnconnectorGcpProjectListArrayOutput() GetSdnconnectorGcpProjectListArrayOutput {
	return i.ToGetSdnconnectorGcpProjectListArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorGcpProjectListArray) ToGetSdnconnectorGcpProjectListArrayOutputWithContext(ctx context.Context) GetSdnconnectorGcpProjectListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorGcpProjectListArrayOutput)
}

type GetSdnconnectorGcpProjectListOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorGcpProjectListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorGcpProjectList)(nil)).Elem()
}

func (o GetSdnconnectorGcpProjectListOutput) ToGetSdnconnectorGcpProjectListOutput() GetSdnconnectorGcpProjectListOutput {
	return o
}

func (o GetSdnconnectorGcpProjectListOutput) ToGetSdnconnectorGcpProjectListOutputWithContext(ctx context.Context) GetSdnconnectorGcpProjectListOutput {
	return o
}

// Configure GCP zone list. The structure of `gcpZoneList` block is documented below.
func (o GetSdnconnectorGcpProjectListOutput) GcpZoneLists() GetSdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return o.ApplyT(func(v GetSdnconnectorGcpProjectList) []GetSdnconnectorGcpProjectListGcpZoneList {
		return v.GcpZoneLists
	}).(GetSdnconnectorGcpProjectListGcpZoneListArrayOutput)
}

// GCP project ID.
func (o GetSdnconnectorGcpProjectListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorGcpProjectList) string { return v.Id }).(pulumi.StringOutput)
}

type GetSdnconnectorGcpProjectListArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorGcpProjectListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorGcpProjectList)(nil)).Elem()
}

func (o GetSdnconnectorGcpProjectListArrayOutput) ToGetSdnconnectorGcpProjectListArrayOutput() GetSdnconnectorGcpProjectListArrayOutput {
	return o
}

func (o GetSdnconnectorGcpProjectListArrayOutput) ToGetSdnconnectorGcpProjectListArrayOutputWithContext(ctx context.Context) GetSdnconnectorGcpProjectListArrayOutput {
	return o
}

func (o GetSdnconnectorGcpProjectListArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorGcpProjectListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorGcpProjectList {
		return vs[0].([]GetSdnconnectorGcpProjectList)[vs[1].(int)]
	}).(GetSdnconnectorGcpProjectListOutput)
}

type GetSdnconnectorGcpProjectListGcpZoneList struct {
	// Specify the name of the desired system sdnconnector.
	Name string `pulumi:"name"`
}

// GetSdnconnectorGcpProjectListGcpZoneListInput is an input type that accepts GetSdnconnectorGcpProjectListGcpZoneListArgs and GetSdnconnectorGcpProjectListGcpZoneListOutput values.
// You can construct a concrete instance of `GetSdnconnectorGcpProjectListGcpZoneListInput` via:
//
//	GetSdnconnectorGcpProjectListGcpZoneListArgs{...}
type GetSdnconnectorGcpProjectListGcpZoneListInput interface {
	pulumi.Input

	ToGetSdnconnectorGcpProjectListGcpZoneListOutput() GetSdnconnectorGcpProjectListGcpZoneListOutput
	ToGetSdnconnectorGcpProjectListGcpZoneListOutputWithContext(context.Context) GetSdnconnectorGcpProjectListGcpZoneListOutput
}

type GetSdnconnectorGcpProjectListGcpZoneListArgs struct {
	// Specify the name of the desired system sdnconnector.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSdnconnectorGcpProjectListGcpZoneListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (i GetSdnconnectorGcpProjectListGcpZoneListArgs) ToGetSdnconnectorGcpProjectListGcpZoneListOutput() GetSdnconnectorGcpProjectListGcpZoneListOutput {
	return i.ToGetSdnconnectorGcpProjectListGcpZoneListOutputWithContext(context.Background())
}

func (i GetSdnconnectorGcpProjectListGcpZoneListArgs) ToGetSdnconnectorGcpProjectListGcpZoneListOutputWithContext(ctx context.Context) GetSdnconnectorGcpProjectListGcpZoneListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorGcpProjectListGcpZoneListOutput)
}

// GetSdnconnectorGcpProjectListGcpZoneListArrayInput is an input type that accepts GetSdnconnectorGcpProjectListGcpZoneListArray and GetSdnconnectorGcpProjectListGcpZoneListArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorGcpProjectListGcpZoneListArrayInput` via:
//
//	GetSdnconnectorGcpProjectListGcpZoneListArray{ GetSdnconnectorGcpProjectListGcpZoneListArgs{...} }
type GetSdnconnectorGcpProjectListGcpZoneListArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorGcpProjectListGcpZoneListArrayOutput() GetSdnconnectorGcpProjectListGcpZoneListArrayOutput
	ToGetSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(context.Context) GetSdnconnectorGcpProjectListGcpZoneListArrayOutput
}

type GetSdnconnectorGcpProjectListGcpZoneListArray []GetSdnconnectorGcpProjectListGcpZoneListInput

func (GetSdnconnectorGcpProjectListGcpZoneListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (i GetSdnconnectorGcpProjectListGcpZoneListArray) ToGetSdnconnectorGcpProjectListGcpZoneListArrayOutput() GetSdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return i.ToGetSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorGcpProjectListGcpZoneListArray) ToGetSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(ctx context.Context) GetSdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorGcpProjectListGcpZoneListArrayOutput)
}

type GetSdnconnectorGcpProjectListGcpZoneListOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorGcpProjectListGcpZoneListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (o GetSdnconnectorGcpProjectListGcpZoneListOutput) ToGetSdnconnectorGcpProjectListGcpZoneListOutput() GetSdnconnectorGcpProjectListGcpZoneListOutput {
	return o
}

func (o GetSdnconnectorGcpProjectListGcpZoneListOutput) ToGetSdnconnectorGcpProjectListGcpZoneListOutputWithContext(ctx context.Context) GetSdnconnectorGcpProjectListGcpZoneListOutput {
	return o
}

// Specify the name of the desired system sdnconnector.
func (o GetSdnconnectorGcpProjectListGcpZoneListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorGcpProjectListGcpZoneList) string { return v.Name }).(pulumi.StringOutput)
}

type GetSdnconnectorGcpProjectListGcpZoneListArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorGcpProjectListGcpZoneListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (o GetSdnconnectorGcpProjectListGcpZoneListArrayOutput) ToGetSdnconnectorGcpProjectListGcpZoneListArrayOutput() GetSdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return o
}

func (o GetSdnconnectorGcpProjectListGcpZoneListArrayOutput) ToGetSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(ctx context.Context) GetSdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return o
}

func (o GetSdnconnectorGcpProjectListGcpZoneListArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorGcpProjectListGcpZoneListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorGcpProjectListGcpZoneList {
		return vs[0].([]GetSdnconnectorGcpProjectListGcpZoneList)[vs[1].(int)]
	}).(GetSdnconnectorGcpProjectListGcpZoneListOutput)
}

type GetSdnconnectorNic struct {
	// Configure IP configuration. The structure of `ip` block is documented below.
	Ips []GetSdnconnectorNicIp `pulumi:"ips"`
	// Specify the name of the desired system sdnconnector.
	Name string `pulumi:"name"`
}

// GetSdnconnectorNicInput is an input type that accepts GetSdnconnectorNicArgs and GetSdnconnectorNicOutput values.
// You can construct a concrete instance of `GetSdnconnectorNicInput` via:
//
//	GetSdnconnectorNicArgs{...}
type GetSdnconnectorNicInput interface {
	pulumi.Input

	ToGetSdnconnectorNicOutput() GetSdnconnectorNicOutput
	ToGetSdnconnectorNicOutputWithContext(context.Context) GetSdnconnectorNicOutput
}

type GetSdnconnectorNicArgs struct {
	// Configure IP configuration. The structure of `ip` block is documented below.
	Ips GetSdnconnectorNicIpArrayInput `pulumi:"ips"`
	// Specify the name of the desired system sdnconnector.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSdnconnectorNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorNic)(nil)).Elem()
}

func (i GetSdnconnectorNicArgs) ToGetSdnconnectorNicOutput() GetSdnconnectorNicOutput {
	return i.ToGetSdnconnectorNicOutputWithContext(context.Background())
}

func (i GetSdnconnectorNicArgs) ToGetSdnconnectorNicOutputWithContext(ctx context.Context) GetSdnconnectorNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorNicOutput)
}

// GetSdnconnectorNicArrayInput is an input type that accepts GetSdnconnectorNicArray and GetSdnconnectorNicArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorNicArrayInput` via:
//
//	GetSdnconnectorNicArray{ GetSdnconnectorNicArgs{...} }
type GetSdnconnectorNicArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorNicArrayOutput() GetSdnconnectorNicArrayOutput
	ToGetSdnconnectorNicArrayOutputWithContext(context.Context) GetSdnconnectorNicArrayOutput
}

type GetSdnconnectorNicArray []GetSdnconnectorNicInput

func (GetSdnconnectorNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorNic)(nil)).Elem()
}

func (i GetSdnconnectorNicArray) ToGetSdnconnectorNicArrayOutput() GetSdnconnectorNicArrayOutput {
	return i.ToGetSdnconnectorNicArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorNicArray) ToGetSdnconnectorNicArrayOutputWithContext(ctx context.Context) GetSdnconnectorNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorNicArrayOutput)
}

type GetSdnconnectorNicOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorNic)(nil)).Elem()
}

func (o GetSdnconnectorNicOutput) ToGetSdnconnectorNicOutput() GetSdnconnectorNicOutput {
	return o
}

func (o GetSdnconnectorNicOutput) ToGetSdnconnectorNicOutputWithContext(ctx context.Context) GetSdnconnectorNicOutput {
	return o
}

// Configure IP configuration. The structure of `ip` block is documented below.
func (o GetSdnconnectorNicOutput) Ips() GetSdnconnectorNicIpArrayOutput {
	return o.ApplyT(func(v GetSdnconnectorNic) []GetSdnconnectorNicIp { return v.Ips }).(GetSdnconnectorNicIpArrayOutput)
}

// Specify the name of the desired system sdnconnector.
func (o GetSdnconnectorNicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorNic) string { return v.Name }).(pulumi.StringOutput)
}

type GetSdnconnectorNicArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorNic)(nil)).Elem()
}

func (o GetSdnconnectorNicArrayOutput) ToGetSdnconnectorNicArrayOutput() GetSdnconnectorNicArrayOutput {
	return o
}

func (o GetSdnconnectorNicArrayOutput) ToGetSdnconnectorNicArrayOutputWithContext(ctx context.Context) GetSdnconnectorNicArrayOutput {
	return o
}

func (o GetSdnconnectorNicArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorNic {
		return vs[0].([]GetSdnconnectorNic)[vs[1].(int)]
	}).(GetSdnconnectorNicOutput)
}

type GetSdnconnectorNicIp struct {
	// Specify the name of the desired system sdnconnector.
	Name string `pulumi:"name"`
	// Public IP name.
	PublicIp string `pulumi:"publicIp"`
	// Resource group of Azure route table.
	ResourceGroup string `pulumi:"resourceGroup"`
}

// GetSdnconnectorNicIpInput is an input type that accepts GetSdnconnectorNicIpArgs and GetSdnconnectorNicIpOutput values.
// You can construct a concrete instance of `GetSdnconnectorNicIpInput` via:
//
//	GetSdnconnectorNicIpArgs{...}
type GetSdnconnectorNicIpInput interface {
	pulumi.Input

	ToGetSdnconnectorNicIpOutput() GetSdnconnectorNicIpOutput
	ToGetSdnconnectorNicIpOutputWithContext(context.Context) GetSdnconnectorNicIpOutput
}

type GetSdnconnectorNicIpArgs struct {
	// Specify the name of the desired system sdnconnector.
	Name pulumi.StringInput `pulumi:"name"`
	// Public IP name.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// Resource group of Azure route table.
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
}

func (GetSdnconnectorNicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorNicIp)(nil)).Elem()
}

func (i GetSdnconnectorNicIpArgs) ToGetSdnconnectorNicIpOutput() GetSdnconnectorNicIpOutput {
	return i.ToGetSdnconnectorNicIpOutputWithContext(context.Background())
}

func (i GetSdnconnectorNicIpArgs) ToGetSdnconnectorNicIpOutputWithContext(ctx context.Context) GetSdnconnectorNicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorNicIpOutput)
}

// GetSdnconnectorNicIpArrayInput is an input type that accepts GetSdnconnectorNicIpArray and GetSdnconnectorNicIpArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorNicIpArrayInput` via:
//
//	GetSdnconnectorNicIpArray{ GetSdnconnectorNicIpArgs{...} }
type GetSdnconnectorNicIpArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorNicIpArrayOutput() GetSdnconnectorNicIpArrayOutput
	ToGetSdnconnectorNicIpArrayOutputWithContext(context.Context) GetSdnconnectorNicIpArrayOutput
}

type GetSdnconnectorNicIpArray []GetSdnconnectorNicIpInput

func (GetSdnconnectorNicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorNicIp)(nil)).Elem()
}

func (i GetSdnconnectorNicIpArray) ToGetSdnconnectorNicIpArrayOutput() GetSdnconnectorNicIpArrayOutput {
	return i.ToGetSdnconnectorNicIpArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorNicIpArray) ToGetSdnconnectorNicIpArrayOutputWithContext(ctx context.Context) GetSdnconnectorNicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorNicIpArrayOutput)
}

type GetSdnconnectorNicIpOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorNicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorNicIp)(nil)).Elem()
}

func (o GetSdnconnectorNicIpOutput) ToGetSdnconnectorNicIpOutput() GetSdnconnectorNicIpOutput {
	return o
}

func (o GetSdnconnectorNicIpOutput) ToGetSdnconnectorNicIpOutputWithContext(ctx context.Context) GetSdnconnectorNicIpOutput {
	return o
}

// Specify the name of the desired system sdnconnector.
func (o GetSdnconnectorNicIpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorNicIp) string { return v.Name }).(pulumi.StringOutput)
}

// Public IP name.
func (o GetSdnconnectorNicIpOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorNicIp) string { return v.PublicIp }).(pulumi.StringOutput)
}

// Resource group of Azure route table.
func (o GetSdnconnectorNicIpOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorNicIp) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

type GetSdnconnectorNicIpArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorNicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorNicIp)(nil)).Elem()
}

func (o GetSdnconnectorNicIpArrayOutput) ToGetSdnconnectorNicIpArrayOutput() GetSdnconnectorNicIpArrayOutput {
	return o
}

func (o GetSdnconnectorNicIpArrayOutput) ToGetSdnconnectorNicIpArrayOutputWithContext(ctx context.Context) GetSdnconnectorNicIpArrayOutput {
	return o
}

func (o GetSdnconnectorNicIpArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorNicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorNicIp {
		return vs[0].([]GetSdnconnectorNicIp)[vs[1].(int)]
	}).(GetSdnconnectorNicIpOutput)
}

type GetSdnconnectorOciRegionList struct {
	// OCI region.
	Region string `pulumi:"region"`
}

// GetSdnconnectorOciRegionListInput is an input type that accepts GetSdnconnectorOciRegionListArgs and GetSdnconnectorOciRegionListOutput values.
// You can construct a concrete instance of `GetSdnconnectorOciRegionListInput` via:
//
//	GetSdnconnectorOciRegionListArgs{...}
type GetSdnconnectorOciRegionListInput interface {
	pulumi.Input

	ToGetSdnconnectorOciRegionListOutput() GetSdnconnectorOciRegionListOutput
	ToGetSdnconnectorOciRegionListOutputWithContext(context.Context) GetSdnconnectorOciRegionListOutput
}

type GetSdnconnectorOciRegionListArgs struct {
	// OCI region.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetSdnconnectorOciRegionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorOciRegionList)(nil)).Elem()
}

func (i GetSdnconnectorOciRegionListArgs) ToGetSdnconnectorOciRegionListOutput() GetSdnconnectorOciRegionListOutput {
	return i.ToGetSdnconnectorOciRegionListOutputWithContext(context.Background())
}

func (i GetSdnconnectorOciRegionListArgs) ToGetSdnconnectorOciRegionListOutputWithContext(ctx context.Context) GetSdnconnectorOciRegionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorOciRegionListOutput)
}

// GetSdnconnectorOciRegionListArrayInput is an input type that accepts GetSdnconnectorOciRegionListArray and GetSdnconnectorOciRegionListArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorOciRegionListArrayInput` via:
//
//	GetSdnconnectorOciRegionListArray{ GetSdnconnectorOciRegionListArgs{...} }
type GetSdnconnectorOciRegionListArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorOciRegionListArrayOutput() GetSdnconnectorOciRegionListArrayOutput
	ToGetSdnconnectorOciRegionListArrayOutputWithContext(context.Context) GetSdnconnectorOciRegionListArrayOutput
}

type GetSdnconnectorOciRegionListArray []GetSdnconnectorOciRegionListInput

func (GetSdnconnectorOciRegionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorOciRegionList)(nil)).Elem()
}

func (i GetSdnconnectorOciRegionListArray) ToGetSdnconnectorOciRegionListArrayOutput() GetSdnconnectorOciRegionListArrayOutput {
	return i.ToGetSdnconnectorOciRegionListArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorOciRegionListArray) ToGetSdnconnectorOciRegionListArrayOutputWithContext(ctx context.Context) GetSdnconnectorOciRegionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorOciRegionListArrayOutput)
}

type GetSdnconnectorOciRegionListOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorOciRegionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorOciRegionList)(nil)).Elem()
}

func (o GetSdnconnectorOciRegionListOutput) ToGetSdnconnectorOciRegionListOutput() GetSdnconnectorOciRegionListOutput {
	return o
}

func (o GetSdnconnectorOciRegionListOutput) ToGetSdnconnectorOciRegionListOutputWithContext(ctx context.Context) GetSdnconnectorOciRegionListOutput {
	return o
}

// OCI region.
func (o GetSdnconnectorOciRegionListOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorOciRegionList) string { return v.Region }).(pulumi.StringOutput)
}

type GetSdnconnectorOciRegionListArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorOciRegionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorOciRegionList)(nil)).Elem()
}

func (o GetSdnconnectorOciRegionListArrayOutput) ToGetSdnconnectorOciRegionListArrayOutput() GetSdnconnectorOciRegionListArrayOutput {
	return o
}

func (o GetSdnconnectorOciRegionListArrayOutput) ToGetSdnconnectorOciRegionListArrayOutputWithContext(ctx context.Context) GetSdnconnectorOciRegionListArrayOutput {
	return o
}

func (o GetSdnconnectorOciRegionListArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorOciRegionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorOciRegionList {
		return vs[0].([]GetSdnconnectorOciRegionList)[vs[1].(int)]
	}).(GetSdnconnectorOciRegionListOutput)
}

type GetSdnconnectorRoute struct {
	// Specify the name of the desired system sdnconnector.
	Name string `pulumi:"name"`
}

// GetSdnconnectorRouteInput is an input type that accepts GetSdnconnectorRouteArgs and GetSdnconnectorRouteOutput values.
// You can construct a concrete instance of `GetSdnconnectorRouteInput` via:
//
//	GetSdnconnectorRouteArgs{...}
type GetSdnconnectorRouteInput interface {
	pulumi.Input

	ToGetSdnconnectorRouteOutput() GetSdnconnectorRouteOutput
	ToGetSdnconnectorRouteOutputWithContext(context.Context) GetSdnconnectorRouteOutput
}

type GetSdnconnectorRouteArgs struct {
	// Specify the name of the desired system sdnconnector.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSdnconnectorRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorRoute)(nil)).Elem()
}

func (i GetSdnconnectorRouteArgs) ToGetSdnconnectorRouteOutput() GetSdnconnectorRouteOutput {
	return i.ToGetSdnconnectorRouteOutputWithContext(context.Background())
}

func (i GetSdnconnectorRouteArgs) ToGetSdnconnectorRouteOutputWithContext(ctx context.Context) GetSdnconnectorRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorRouteOutput)
}

// GetSdnconnectorRouteArrayInput is an input type that accepts GetSdnconnectorRouteArray and GetSdnconnectorRouteArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorRouteArrayInput` via:
//
//	GetSdnconnectorRouteArray{ GetSdnconnectorRouteArgs{...} }
type GetSdnconnectorRouteArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorRouteArrayOutput() GetSdnconnectorRouteArrayOutput
	ToGetSdnconnectorRouteArrayOutputWithContext(context.Context) GetSdnconnectorRouteArrayOutput
}

type GetSdnconnectorRouteArray []GetSdnconnectorRouteInput

func (GetSdnconnectorRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorRoute)(nil)).Elem()
}

func (i GetSdnconnectorRouteArray) ToGetSdnconnectorRouteArrayOutput() GetSdnconnectorRouteArrayOutput {
	return i.ToGetSdnconnectorRouteArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorRouteArray) ToGetSdnconnectorRouteArrayOutputWithContext(ctx context.Context) GetSdnconnectorRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorRouteArrayOutput)
}

type GetSdnconnectorRouteOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorRoute)(nil)).Elem()
}

func (o GetSdnconnectorRouteOutput) ToGetSdnconnectorRouteOutput() GetSdnconnectorRouteOutput {
	return o
}

func (o GetSdnconnectorRouteOutput) ToGetSdnconnectorRouteOutputWithContext(ctx context.Context) GetSdnconnectorRouteOutput {
	return o
}

// Specify the name of the desired system sdnconnector.
func (o GetSdnconnectorRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorRoute) string { return v.Name }).(pulumi.StringOutput)
}

type GetSdnconnectorRouteArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorRoute)(nil)).Elem()
}

func (o GetSdnconnectorRouteArrayOutput) ToGetSdnconnectorRouteArrayOutput() GetSdnconnectorRouteArrayOutput {
	return o
}

func (o GetSdnconnectorRouteArrayOutput) ToGetSdnconnectorRouteArrayOutputWithContext(ctx context.Context) GetSdnconnectorRouteArrayOutput {
	return o
}

func (o GetSdnconnectorRouteArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorRoute {
		return vs[0].([]GetSdnconnectorRoute)[vs[1].(int)]
	}).(GetSdnconnectorRouteOutput)
}

type GetSdnconnectorRouteTable struct {
	// Specify the name of the desired system sdnconnector.
	Name string `pulumi:"name"`
	// Resource group of Azure route table.
	ResourceGroup string `pulumi:"resourceGroup"`
	// Configure Azure route. The structure of `route` block is documented below.
	Routes []GetSdnconnectorRouteTableRoute `pulumi:"routes"`
	// Subscription ID of Azure route table.
	SubscriptionId string `pulumi:"subscriptionId"`
}

// GetSdnconnectorRouteTableInput is an input type that accepts GetSdnconnectorRouteTableArgs and GetSdnconnectorRouteTableOutput values.
// You can construct a concrete instance of `GetSdnconnectorRouteTableInput` via:
//
//	GetSdnconnectorRouteTableArgs{...}
type GetSdnconnectorRouteTableInput interface {
	pulumi.Input

	ToGetSdnconnectorRouteTableOutput() GetSdnconnectorRouteTableOutput
	ToGetSdnconnectorRouteTableOutputWithContext(context.Context) GetSdnconnectorRouteTableOutput
}

type GetSdnconnectorRouteTableArgs struct {
	// Specify the name of the desired system sdnconnector.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource group of Azure route table.
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// Configure Azure route. The structure of `route` block is documented below.
	Routes GetSdnconnectorRouteTableRouteArrayInput `pulumi:"routes"`
	// Subscription ID of Azure route table.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (GetSdnconnectorRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorRouteTable)(nil)).Elem()
}

func (i GetSdnconnectorRouteTableArgs) ToGetSdnconnectorRouteTableOutput() GetSdnconnectorRouteTableOutput {
	return i.ToGetSdnconnectorRouteTableOutputWithContext(context.Background())
}

func (i GetSdnconnectorRouteTableArgs) ToGetSdnconnectorRouteTableOutputWithContext(ctx context.Context) GetSdnconnectorRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorRouteTableOutput)
}

// GetSdnconnectorRouteTableArrayInput is an input type that accepts GetSdnconnectorRouteTableArray and GetSdnconnectorRouteTableArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorRouteTableArrayInput` via:
//
//	GetSdnconnectorRouteTableArray{ GetSdnconnectorRouteTableArgs{...} }
type GetSdnconnectorRouteTableArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorRouteTableArrayOutput() GetSdnconnectorRouteTableArrayOutput
	ToGetSdnconnectorRouteTableArrayOutputWithContext(context.Context) GetSdnconnectorRouteTableArrayOutput
}

type GetSdnconnectorRouteTableArray []GetSdnconnectorRouteTableInput

func (GetSdnconnectorRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorRouteTable)(nil)).Elem()
}

func (i GetSdnconnectorRouteTableArray) ToGetSdnconnectorRouteTableArrayOutput() GetSdnconnectorRouteTableArrayOutput {
	return i.ToGetSdnconnectorRouteTableArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorRouteTableArray) ToGetSdnconnectorRouteTableArrayOutputWithContext(ctx context.Context) GetSdnconnectorRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorRouteTableArrayOutput)
}

type GetSdnconnectorRouteTableOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorRouteTable)(nil)).Elem()
}

func (o GetSdnconnectorRouteTableOutput) ToGetSdnconnectorRouteTableOutput() GetSdnconnectorRouteTableOutput {
	return o
}

func (o GetSdnconnectorRouteTableOutput) ToGetSdnconnectorRouteTableOutputWithContext(ctx context.Context) GetSdnconnectorRouteTableOutput {
	return o
}

// Specify the name of the desired system sdnconnector.
func (o GetSdnconnectorRouteTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorRouteTable) string { return v.Name }).(pulumi.StringOutput)
}

// Resource group of Azure route table.
func (o GetSdnconnectorRouteTableOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorRouteTable) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Configure Azure route. The structure of `route` block is documented below.
func (o GetSdnconnectorRouteTableOutput) Routes() GetSdnconnectorRouteTableRouteArrayOutput {
	return o.ApplyT(func(v GetSdnconnectorRouteTable) []GetSdnconnectorRouteTableRoute { return v.Routes }).(GetSdnconnectorRouteTableRouteArrayOutput)
}

// Subscription ID of Azure route table.
func (o GetSdnconnectorRouteTableOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorRouteTable) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

type GetSdnconnectorRouteTableArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorRouteTable)(nil)).Elem()
}

func (o GetSdnconnectorRouteTableArrayOutput) ToGetSdnconnectorRouteTableArrayOutput() GetSdnconnectorRouteTableArrayOutput {
	return o
}

func (o GetSdnconnectorRouteTableArrayOutput) ToGetSdnconnectorRouteTableArrayOutputWithContext(ctx context.Context) GetSdnconnectorRouteTableArrayOutput {
	return o
}

func (o GetSdnconnectorRouteTableArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorRouteTable {
		return vs[0].([]GetSdnconnectorRouteTable)[vs[1].(int)]
	}).(GetSdnconnectorRouteTableOutput)
}

type GetSdnconnectorRouteTableRoute struct {
	// Specify the name of the desired system sdnconnector.
	Name string `pulumi:"name"`
	// Next hop address.
	NextHop string `pulumi:"nextHop"`
}

// GetSdnconnectorRouteTableRouteInput is an input type that accepts GetSdnconnectorRouteTableRouteArgs and GetSdnconnectorRouteTableRouteOutput values.
// You can construct a concrete instance of `GetSdnconnectorRouteTableRouteInput` via:
//
//	GetSdnconnectorRouteTableRouteArgs{...}
type GetSdnconnectorRouteTableRouteInput interface {
	pulumi.Input

	ToGetSdnconnectorRouteTableRouteOutput() GetSdnconnectorRouteTableRouteOutput
	ToGetSdnconnectorRouteTableRouteOutputWithContext(context.Context) GetSdnconnectorRouteTableRouteOutput
}

type GetSdnconnectorRouteTableRouteArgs struct {
	// Specify the name of the desired system sdnconnector.
	Name pulumi.StringInput `pulumi:"name"`
	// Next hop address.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
}

func (GetSdnconnectorRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorRouteTableRoute)(nil)).Elem()
}

func (i GetSdnconnectorRouteTableRouteArgs) ToGetSdnconnectorRouteTableRouteOutput() GetSdnconnectorRouteTableRouteOutput {
	return i.ToGetSdnconnectorRouteTableRouteOutputWithContext(context.Background())
}

func (i GetSdnconnectorRouteTableRouteArgs) ToGetSdnconnectorRouteTableRouteOutputWithContext(ctx context.Context) GetSdnconnectorRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorRouteTableRouteOutput)
}

// GetSdnconnectorRouteTableRouteArrayInput is an input type that accepts GetSdnconnectorRouteTableRouteArray and GetSdnconnectorRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorRouteTableRouteArrayInput` via:
//
//	GetSdnconnectorRouteTableRouteArray{ GetSdnconnectorRouteTableRouteArgs{...} }
type GetSdnconnectorRouteTableRouteArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorRouteTableRouteArrayOutput() GetSdnconnectorRouteTableRouteArrayOutput
	ToGetSdnconnectorRouteTableRouteArrayOutputWithContext(context.Context) GetSdnconnectorRouteTableRouteArrayOutput
}

type GetSdnconnectorRouteTableRouteArray []GetSdnconnectorRouteTableRouteInput

func (GetSdnconnectorRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorRouteTableRoute)(nil)).Elem()
}

func (i GetSdnconnectorRouteTableRouteArray) ToGetSdnconnectorRouteTableRouteArrayOutput() GetSdnconnectorRouteTableRouteArrayOutput {
	return i.ToGetSdnconnectorRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorRouteTableRouteArray) ToGetSdnconnectorRouteTableRouteArrayOutputWithContext(ctx context.Context) GetSdnconnectorRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorRouteTableRouteArrayOutput)
}

type GetSdnconnectorRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorRouteTableRoute)(nil)).Elem()
}

func (o GetSdnconnectorRouteTableRouteOutput) ToGetSdnconnectorRouteTableRouteOutput() GetSdnconnectorRouteTableRouteOutput {
	return o
}

func (o GetSdnconnectorRouteTableRouteOutput) ToGetSdnconnectorRouteTableRouteOutputWithContext(ctx context.Context) GetSdnconnectorRouteTableRouteOutput {
	return o
}

// Specify the name of the desired system sdnconnector.
func (o GetSdnconnectorRouteTableRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorRouteTableRoute) string { return v.Name }).(pulumi.StringOutput)
}

// Next hop address.
func (o GetSdnconnectorRouteTableRouteOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorRouteTableRoute) string { return v.NextHop }).(pulumi.StringOutput)
}

type GetSdnconnectorRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorRouteTableRoute)(nil)).Elem()
}

func (o GetSdnconnectorRouteTableRouteArrayOutput) ToGetSdnconnectorRouteTableRouteArrayOutput() GetSdnconnectorRouteTableRouteArrayOutput {
	return o
}

func (o GetSdnconnectorRouteTableRouteArrayOutput) ToGetSdnconnectorRouteTableRouteArrayOutputWithContext(ctx context.Context) GetSdnconnectorRouteTableRouteArrayOutput {
	return o
}

func (o GetSdnconnectorRouteTableRouteArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorRouteTableRoute {
		return vs[0].([]GetSdnconnectorRouteTableRoute)[vs[1].(int)]
	}).(GetSdnconnectorRouteTableRouteOutput)
}

type GetSdnconnectorServerList struct {
	// Configure IP configuration. The structure of `ip` block is documented below.
	Ip string `pulumi:"ip"`
}

// GetSdnconnectorServerListInput is an input type that accepts GetSdnconnectorServerListArgs and GetSdnconnectorServerListOutput values.
// You can construct a concrete instance of `GetSdnconnectorServerListInput` via:
//
//	GetSdnconnectorServerListArgs{...}
type GetSdnconnectorServerListInput interface {
	pulumi.Input

	ToGetSdnconnectorServerListOutput() GetSdnconnectorServerListOutput
	ToGetSdnconnectorServerListOutputWithContext(context.Context) GetSdnconnectorServerListOutput
}

type GetSdnconnectorServerListArgs struct {
	// Configure IP configuration. The structure of `ip` block is documented below.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetSdnconnectorServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorServerList)(nil)).Elem()
}

func (i GetSdnconnectorServerListArgs) ToGetSdnconnectorServerListOutput() GetSdnconnectorServerListOutput {
	return i.ToGetSdnconnectorServerListOutputWithContext(context.Background())
}

func (i GetSdnconnectorServerListArgs) ToGetSdnconnectorServerListOutputWithContext(ctx context.Context) GetSdnconnectorServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorServerListOutput)
}

// GetSdnconnectorServerListArrayInput is an input type that accepts GetSdnconnectorServerListArray and GetSdnconnectorServerListArrayOutput values.
// You can construct a concrete instance of `GetSdnconnectorServerListArrayInput` via:
//
//	GetSdnconnectorServerListArray{ GetSdnconnectorServerListArgs{...} }
type GetSdnconnectorServerListArrayInput interface {
	pulumi.Input

	ToGetSdnconnectorServerListArrayOutput() GetSdnconnectorServerListArrayOutput
	ToGetSdnconnectorServerListArrayOutputWithContext(context.Context) GetSdnconnectorServerListArrayOutput
}

type GetSdnconnectorServerListArray []GetSdnconnectorServerListInput

func (GetSdnconnectorServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorServerList)(nil)).Elem()
}

func (i GetSdnconnectorServerListArray) ToGetSdnconnectorServerListArrayOutput() GetSdnconnectorServerListArrayOutput {
	return i.ToGetSdnconnectorServerListArrayOutputWithContext(context.Background())
}

func (i GetSdnconnectorServerListArray) ToGetSdnconnectorServerListArrayOutputWithContext(ctx context.Context) GetSdnconnectorServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSdnconnectorServerListArrayOutput)
}

type GetSdnconnectorServerListOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdnconnectorServerList)(nil)).Elem()
}

func (o GetSdnconnectorServerListOutput) ToGetSdnconnectorServerListOutput() GetSdnconnectorServerListOutput {
	return o
}

func (o GetSdnconnectorServerListOutput) ToGetSdnconnectorServerListOutputWithContext(ctx context.Context) GetSdnconnectorServerListOutput {
	return o
}

// Configure IP configuration. The structure of `ip` block is documented below.
func (o GetSdnconnectorServerListOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdnconnectorServerList) string { return v.Ip }).(pulumi.StringOutput)
}

type GetSdnconnectorServerListArrayOutput struct{ *pulumi.OutputState }

func (GetSdnconnectorServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSdnconnectorServerList)(nil)).Elem()
}

func (o GetSdnconnectorServerListArrayOutput) ToGetSdnconnectorServerListArrayOutput() GetSdnconnectorServerListArrayOutput {
	return o
}

func (o GetSdnconnectorServerListArrayOutput) ToGetSdnconnectorServerListArrayOutputWithContext(ctx context.Context) GetSdnconnectorServerListArrayOutput {
	return o
}

func (o GetSdnconnectorServerListArrayOutput) Index(i pulumi.IntInput) GetSdnconnectorServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSdnconnectorServerList {
		return vs[0].([]GetSdnconnectorServerList)[vs[1].(int)]
	}).(GetSdnconnectorServerListOutput)
}

type GetSessionttlPort struct {
	// End port number.
	EndPort int `pulumi:"endPort"`
	// Table entry ID.
	Id int `pulumi:"id"`
	// Protocol (0 - 255).
	Protocol int `pulumi:"protocol"`
	// Refresh direction: Both, outgoing, incoming
	RefreshDirection string `pulumi:"refreshDirection"`
	// Start port number.
	StartPort int `pulumi:"startPort"`
	// Session timeout (TTL).
	Timeout string `pulumi:"timeout"`
}

// GetSessionttlPortInput is an input type that accepts GetSessionttlPortArgs and GetSessionttlPortOutput values.
// You can construct a concrete instance of `GetSessionttlPortInput` via:
//
//	GetSessionttlPortArgs{...}
type GetSessionttlPortInput interface {
	pulumi.Input

	ToGetSessionttlPortOutput() GetSessionttlPortOutput
	ToGetSessionttlPortOutputWithContext(context.Context) GetSessionttlPortOutput
}

type GetSessionttlPortArgs struct {
	// End port number.
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Table entry ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Protocol (0 - 255).
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// Refresh direction: Both, outgoing, incoming
	RefreshDirection pulumi.StringInput `pulumi:"refreshDirection"`
	// Start port number.
	StartPort pulumi.IntInput `pulumi:"startPort"`
	// Session timeout (TTL).
	Timeout pulumi.StringInput `pulumi:"timeout"`
}

func (GetSessionttlPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionttlPort)(nil)).Elem()
}

func (i GetSessionttlPortArgs) ToGetSessionttlPortOutput() GetSessionttlPortOutput {
	return i.ToGetSessionttlPortOutputWithContext(context.Background())
}

func (i GetSessionttlPortArgs) ToGetSessionttlPortOutputWithContext(ctx context.Context) GetSessionttlPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionttlPortOutput)
}

// GetSessionttlPortArrayInput is an input type that accepts GetSessionttlPortArray and GetSessionttlPortArrayOutput values.
// You can construct a concrete instance of `GetSessionttlPortArrayInput` via:
//
//	GetSessionttlPortArray{ GetSessionttlPortArgs{...} }
type GetSessionttlPortArrayInput interface {
	pulumi.Input

	ToGetSessionttlPortArrayOutput() GetSessionttlPortArrayOutput
	ToGetSessionttlPortArrayOutputWithContext(context.Context) GetSessionttlPortArrayOutput
}

type GetSessionttlPortArray []GetSessionttlPortInput

func (GetSessionttlPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionttlPort)(nil)).Elem()
}

func (i GetSessionttlPortArray) ToGetSessionttlPortArrayOutput() GetSessionttlPortArrayOutput {
	return i.ToGetSessionttlPortArrayOutputWithContext(context.Background())
}

func (i GetSessionttlPortArray) ToGetSessionttlPortArrayOutputWithContext(ctx context.Context) GetSessionttlPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionttlPortArrayOutput)
}

type GetSessionttlPortOutput struct{ *pulumi.OutputState }

func (GetSessionttlPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionttlPort)(nil)).Elem()
}

func (o GetSessionttlPortOutput) ToGetSessionttlPortOutput() GetSessionttlPortOutput {
	return o
}

func (o GetSessionttlPortOutput) ToGetSessionttlPortOutputWithContext(ctx context.Context) GetSessionttlPortOutput {
	return o
}

// End port number.
func (o GetSessionttlPortOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSessionttlPort) int { return v.EndPort }).(pulumi.IntOutput)
}

// Table entry ID.
func (o GetSessionttlPortOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetSessionttlPort) int { return v.Id }).(pulumi.IntOutput)
}

// Protocol (0 - 255).
func (o GetSessionttlPortOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetSessionttlPort) int { return v.Protocol }).(pulumi.IntOutput)
}

// Refresh direction: Both, outgoing, incoming
func (o GetSessionttlPortOutput) RefreshDirection() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionttlPort) string { return v.RefreshDirection }).(pulumi.StringOutput)
}

// Start port number.
func (o GetSessionttlPortOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSessionttlPort) int { return v.StartPort }).(pulumi.IntOutput)
}

// Session timeout (TTL).
func (o GetSessionttlPortOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionttlPort) string { return v.Timeout }).(pulumi.StringOutput)
}

type GetSessionttlPortArrayOutput struct{ *pulumi.OutputState }

func (GetSessionttlPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionttlPort)(nil)).Elem()
}

func (o GetSessionttlPortArrayOutput) ToGetSessionttlPortArrayOutput() GetSessionttlPortArrayOutput {
	return o
}

func (o GetSessionttlPortArrayOutput) ToGetSessionttlPortArrayOutputWithContext(ctx context.Context) GetSessionttlPortArrayOutput {
	return o
}

func (o GetSessionttlPortArrayOutput) Index(i pulumi.IntInput) GetSessionttlPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSessionttlPort {
		return vs[0].([]GetSessionttlPort)[vs[1].(int)]
	}).(GetSessionttlPortOutput)
}

type GetSflowCollector struct {
	// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
	CollectorIp string `pulumi:"collectorIp"`
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort int `pulumi:"collectorPort"`
	// ID.
	Id int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod string `pulumi:"interfaceSelectMethod"`
	// Source IP address for sFlow agent.
	SourceIp string `pulumi:"sourceIp"`
}

// GetSflowCollectorInput is an input type that accepts GetSflowCollectorArgs and GetSflowCollectorOutput values.
// You can construct a concrete instance of `GetSflowCollectorInput` via:
//
//	GetSflowCollectorArgs{...}
type GetSflowCollectorInput interface {
	pulumi.Input

	ToGetSflowCollectorOutput() GetSflowCollectorOutput
	ToGetSflowCollectorOutputWithContext(context.Context) GetSflowCollectorOutput
}

type GetSflowCollectorArgs struct {
	// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
	CollectorIp pulumi.StringInput `pulumi:"collectorIp"`
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort pulumi.IntInput `pulumi:"collectorPort"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod pulumi.StringInput `pulumi:"interfaceSelectMethod"`
	// Source IP address for sFlow agent.
	SourceIp pulumi.StringInput `pulumi:"sourceIp"`
}

func (GetSflowCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSflowCollector)(nil)).Elem()
}

func (i GetSflowCollectorArgs) ToGetSflowCollectorOutput() GetSflowCollectorOutput {
	return i.ToGetSflowCollectorOutputWithContext(context.Background())
}

func (i GetSflowCollectorArgs) ToGetSflowCollectorOutputWithContext(ctx context.Context) GetSflowCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSflowCollectorOutput)
}

// GetSflowCollectorArrayInput is an input type that accepts GetSflowCollectorArray and GetSflowCollectorArrayOutput values.
// You can construct a concrete instance of `GetSflowCollectorArrayInput` via:
//
//	GetSflowCollectorArray{ GetSflowCollectorArgs{...} }
type GetSflowCollectorArrayInput interface {
	pulumi.Input

	ToGetSflowCollectorArrayOutput() GetSflowCollectorArrayOutput
	ToGetSflowCollectorArrayOutputWithContext(context.Context) GetSflowCollectorArrayOutput
}

type GetSflowCollectorArray []GetSflowCollectorInput

func (GetSflowCollectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSflowCollector)(nil)).Elem()
}

func (i GetSflowCollectorArray) ToGetSflowCollectorArrayOutput() GetSflowCollectorArrayOutput {
	return i.ToGetSflowCollectorArrayOutputWithContext(context.Background())
}

func (i GetSflowCollectorArray) ToGetSflowCollectorArrayOutputWithContext(ctx context.Context) GetSflowCollectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSflowCollectorArrayOutput)
}

type GetSflowCollectorOutput struct{ *pulumi.OutputState }

func (GetSflowCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSflowCollector)(nil)).Elem()
}

func (o GetSflowCollectorOutput) ToGetSflowCollectorOutput() GetSflowCollectorOutput {
	return o
}

func (o GetSflowCollectorOutput) ToGetSflowCollectorOutputWithContext(ctx context.Context) GetSflowCollectorOutput {
	return o
}

// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
func (o GetSflowCollectorOutput) CollectorIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSflowCollector) string { return v.CollectorIp }).(pulumi.StringOutput)
}

// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
func (o GetSflowCollectorOutput) CollectorPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSflowCollector) int { return v.CollectorPort }).(pulumi.IntOutput)
}

// ID.
func (o GetSflowCollectorOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetSflowCollector) int { return v.Id }).(pulumi.IntOutput)
}

// Specify outgoing interface to reach server.
func (o GetSflowCollectorOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetSflowCollector) string { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server.
func (o GetSflowCollectorOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSflowCollector) string { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Source IP address for sFlow agent.
func (o GetSflowCollectorOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSflowCollector) string { return v.SourceIp }).(pulumi.StringOutput)
}

type GetSflowCollectorArrayOutput struct{ *pulumi.OutputState }

func (GetSflowCollectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSflowCollector)(nil)).Elem()
}

func (o GetSflowCollectorArrayOutput) ToGetSflowCollectorArrayOutput() GetSflowCollectorArrayOutput {
	return o
}

func (o GetSflowCollectorArrayOutput) ToGetSflowCollectorArrayOutputWithContext(ctx context.Context) GetSflowCollectorArrayOutput {
	return o
}

func (o GetSflowCollectorArrayOutput) Index(i pulumi.IntInput) GetSflowCollectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSflowCollector {
		return vs[0].([]GetSflowCollector)[vs[1].(int)]
	}).(GetSflowCollectorOutput)
}

type GetVdomexceptionVdom struct {
	// VDOM name.
	Name string `pulumi:"name"`
}

// GetVdomexceptionVdomInput is an input type that accepts GetVdomexceptionVdomArgs and GetVdomexceptionVdomOutput values.
// You can construct a concrete instance of `GetVdomexceptionVdomInput` via:
//
//	GetVdomexceptionVdomArgs{...}
type GetVdomexceptionVdomInput interface {
	pulumi.Input

	ToGetVdomexceptionVdomOutput() GetVdomexceptionVdomOutput
	ToGetVdomexceptionVdomOutputWithContext(context.Context) GetVdomexceptionVdomOutput
}

type GetVdomexceptionVdomArgs struct {
	// VDOM name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVdomexceptionVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVdomexceptionVdom)(nil)).Elem()
}

func (i GetVdomexceptionVdomArgs) ToGetVdomexceptionVdomOutput() GetVdomexceptionVdomOutput {
	return i.ToGetVdomexceptionVdomOutputWithContext(context.Background())
}

func (i GetVdomexceptionVdomArgs) ToGetVdomexceptionVdomOutputWithContext(ctx context.Context) GetVdomexceptionVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVdomexceptionVdomOutput)
}

// GetVdomexceptionVdomArrayInput is an input type that accepts GetVdomexceptionVdomArray and GetVdomexceptionVdomArrayOutput values.
// You can construct a concrete instance of `GetVdomexceptionVdomArrayInput` via:
//
//	GetVdomexceptionVdomArray{ GetVdomexceptionVdomArgs{...} }
type GetVdomexceptionVdomArrayInput interface {
	pulumi.Input

	ToGetVdomexceptionVdomArrayOutput() GetVdomexceptionVdomArrayOutput
	ToGetVdomexceptionVdomArrayOutputWithContext(context.Context) GetVdomexceptionVdomArrayOutput
}

type GetVdomexceptionVdomArray []GetVdomexceptionVdomInput

func (GetVdomexceptionVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVdomexceptionVdom)(nil)).Elem()
}

func (i GetVdomexceptionVdomArray) ToGetVdomexceptionVdomArrayOutput() GetVdomexceptionVdomArrayOutput {
	return i.ToGetVdomexceptionVdomArrayOutputWithContext(context.Background())
}

func (i GetVdomexceptionVdomArray) ToGetVdomexceptionVdomArrayOutputWithContext(ctx context.Context) GetVdomexceptionVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVdomexceptionVdomArrayOutput)
}

type GetVdomexceptionVdomOutput struct{ *pulumi.OutputState }

func (GetVdomexceptionVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVdomexceptionVdom)(nil)).Elem()
}

func (o GetVdomexceptionVdomOutput) ToGetVdomexceptionVdomOutput() GetVdomexceptionVdomOutput {
	return o
}

func (o GetVdomexceptionVdomOutput) ToGetVdomexceptionVdomOutputWithContext(ctx context.Context) GetVdomexceptionVdomOutput {
	return o
}

// VDOM name.
func (o GetVdomexceptionVdomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdomexceptionVdom) string { return v.Name }).(pulumi.StringOutput)
}

type GetVdomexceptionVdomArrayOutput struct{ *pulumi.OutputState }

func (GetVdomexceptionVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVdomexceptionVdom)(nil)).Elem()
}

func (o GetVdomexceptionVdomArrayOutput) ToGetVdomexceptionVdomArrayOutput() GetVdomexceptionVdomArrayOutput {
	return o
}

func (o GetVdomexceptionVdomArrayOutput) ToGetVdomexceptionVdomArrayOutputWithContext(ctx context.Context) GetVdomexceptionVdomArrayOutput {
	return o
}

func (o GetVdomexceptionVdomArrayOutput) Index(i pulumi.IntInput) GetVdomexceptionVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVdomexceptionVdom {
		return vs[0].([]GetVdomexceptionVdom)[vs[1].(int)]
	}).(GetVdomexceptionVdomOutput)
}

type GetVdomnetflowCollector struct {
	// Collector IP.
	CollectorIp string `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort int `pulumi:"collectorPort"`
	// ID.
	Id int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp string `pulumi:"sourceIp"`
}

// GetVdomnetflowCollectorInput is an input type that accepts GetVdomnetflowCollectorArgs and GetVdomnetflowCollectorOutput values.
// You can construct a concrete instance of `GetVdomnetflowCollectorInput` via:
//
//	GetVdomnetflowCollectorArgs{...}
type GetVdomnetflowCollectorInput interface {
	pulumi.Input

	ToGetVdomnetflowCollectorOutput() GetVdomnetflowCollectorOutput
	ToGetVdomnetflowCollectorOutputWithContext(context.Context) GetVdomnetflowCollectorOutput
}

type GetVdomnetflowCollectorArgs struct {
	// Collector IP.
	CollectorIp pulumi.StringInput `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort pulumi.IntInput `pulumi:"collectorPort"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod pulumi.StringInput `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp pulumi.StringInput `pulumi:"sourceIp"`
}

func (GetVdomnetflowCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVdomnetflowCollector)(nil)).Elem()
}

func (i GetVdomnetflowCollectorArgs) ToGetVdomnetflowCollectorOutput() GetVdomnetflowCollectorOutput {
	return i.ToGetVdomnetflowCollectorOutputWithContext(context.Background())
}

func (i GetVdomnetflowCollectorArgs) ToGetVdomnetflowCollectorOutputWithContext(ctx context.Context) GetVdomnetflowCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVdomnetflowCollectorOutput)
}

// GetVdomnetflowCollectorArrayInput is an input type that accepts GetVdomnetflowCollectorArray and GetVdomnetflowCollectorArrayOutput values.
// You can construct a concrete instance of `GetVdomnetflowCollectorArrayInput` via:
//
//	GetVdomnetflowCollectorArray{ GetVdomnetflowCollectorArgs{...} }
type GetVdomnetflowCollectorArrayInput interface {
	pulumi.Input

	ToGetVdomnetflowCollectorArrayOutput() GetVdomnetflowCollectorArrayOutput
	ToGetVdomnetflowCollectorArrayOutputWithContext(context.Context) GetVdomnetflowCollectorArrayOutput
}

type GetVdomnetflowCollectorArray []GetVdomnetflowCollectorInput

func (GetVdomnetflowCollectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVdomnetflowCollector)(nil)).Elem()
}

func (i GetVdomnetflowCollectorArray) ToGetVdomnetflowCollectorArrayOutput() GetVdomnetflowCollectorArrayOutput {
	return i.ToGetVdomnetflowCollectorArrayOutputWithContext(context.Background())
}

func (i GetVdomnetflowCollectorArray) ToGetVdomnetflowCollectorArrayOutputWithContext(ctx context.Context) GetVdomnetflowCollectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVdomnetflowCollectorArrayOutput)
}

type GetVdomnetflowCollectorOutput struct{ *pulumi.OutputState }

func (GetVdomnetflowCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVdomnetflowCollector)(nil)).Elem()
}

func (o GetVdomnetflowCollectorOutput) ToGetVdomnetflowCollectorOutput() GetVdomnetflowCollectorOutput {
	return o
}

func (o GetVdomnetflowCollectorOutput) ToGetVdomnetflowCollectorOutputWithContext(ctx context.Context) GetVdomnetflowCollectorOutput {
	return o
}

// Collector IP.
func (o GetVdomnetflowCollectorOutput) CollectorIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdomnetflowCollector) string { return v.CollectorIp }).(pulumi.StringOutput)
}

// NetFlow collector port number.
func (o GetVdomnetflowCollectorOutput) CollectorPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetVdomnetflowCollector) int { return v.CollectorPort }).(pulumi.IntOutput)
}

// ID.
func (o GetVdomnetflowCollectorOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetVdomnetflowCollector) int { return v.Id }).(pulumi.IntOutput)
}

// Specify outgoing interface to reach server.
func (o GetVdomnetflowCollectorOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdomnetflowCollector) string { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server.
func (o GetVdomnetflowCollectorOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdomnetflowCollector) string { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Source IP address for communication with the NetFlow agent.
func (o GetVdomnetflowCollectorOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdomnetflowCollector) string { return v.SourceIp }).(pulumi.StringOutput)
}

type GetVdomnetflowCollectorArrayOutput struct{ *pulumi.OutputState }

func (GetVdomnetflowCollectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVdomnetflowCollector)(nil)).Elem()
}

func (o GetVdomnetflowCollectorArrayOutput) ToGetVdomnetflowCollectorArrayOutput() GetVdomnetflowCollectorArrayOutput {
	return o
}

func (o GetVdomnetflowCollectorArrayOutput) ToGetVdomnetflowCollectorArrayOutputWithContext(ctx context.Context) GetVdomnetflowCollectorArrayOutput {
	return o
}

func (o GetVdomnetflowCollectorArrayOutput) Index(i pulumi.IntInput) GetVdomnetflowCollectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVdomnetflowCollector {
		return vs[0].([]GetVdomnetflowCollector)[vs[1].(int)]
	}).(GetVdomnetflowCollectorOutput)
}

type GetVdomsflowCollector struct {
	// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
	CollectorIp string `pulumi:"collectorIp"`
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort int `pulumi:"collectorPort"`
	// ID.
	Id int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod string `pulumi:"interfaceSelectMethod"`
	// Source IP address for sFlow agent.
	SourceIp string `pulumi:"sourceIp"`
}

// GetVdomsflowCollectorInput is an input type that accepts GetVdomsflowCollectorArgs and GetVdomsflowCollectorOutput values.
// You can construct a concrete instance of `GetVdomsflowCollectorInput` via:
//
//	GetVdomsflowCollectorArgs{...}
type GetVdomsflowCollectorInput interface {
	pulumi.Input

	ToGetVdomsflowCollectorOutput() GetVdomsflowCollectorOutput
	ToGetVdomsflowCollectorOutputWithContext(context.Context) GetVdomsflowCollectorOutput
}

type GetVdomsflowCollectorArgs struct {
	// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
	CollectorIp pulumi.StringInput `pulumi:"collectorIp"`
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort pulumi.IntInput `pulumi:"collectorPort"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod pulumi.StringInput `pulumi:"interfaceSelectMethod"`
	// Source IP address for sFlow agent.
	SourceIp pulumi.StringInput `pulumi:"sourceIp"`
}

func (GetVdomsflowCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVdomsflowCollector)(nil)).Elem()
}

func (i GetVdomsflowCollectorArgs) ToGetVdomsflowCollectorOutput() GetVdomsflowCollectorOutput {
	return i.ToGetVdomsflowCollectorOutputWithContext(context.Background())
}

func (i GetVdomsflowCollectorArgs) ToGetVdomsflowCollectorOutputWithContext(ctx context.Context) GetVdomsflowCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVdomsflowCollectorOutput)
}

// GetVdomsflowCollectorArrayInput is an input type that accepts GetVdomsflowCollectorArray and GetVdomsflowCollectorArrayOutput values.
// You can construct a concrete instance of `GetVdomsflowCollectorArrayInput` via:
//
//	GetVdomsflowCollectorArray{ GetVdomsflowCollectorArgs{...} }
type GetVdomsflowCollectorArrayInput interface {
	pulumi.Input

	ToGetVdomsflowCollectorArrayOutput() GetVdomsflowCollectorArrayOutput
	ToGetVdomsflowCollectorArrayOutputWithContext(context.Context) GetVdomsflowCollectorArrayOutput
}

type GetVdomsflowCollectorArray []GetVdomsflowCollectorInput

func (GetVdomsflowCollectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVdomsflowCollector)(nil)).Elem()
}

func (i GetVdomsflowCollectorArray) ToGetVdomsflowCollectorArrayOutput() GetVdomsflowCollectorArrayOutput {
	return i.ToGetVdomsflowCollectorArrayOutputWithContext(context.Background())
}

func (i GetVdomsflowCollectorArray) ToGetVdomsflowCollectorArrayOutputWithContext(ctx context.Context) GetVdomsflowCollectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVdomsflowCollectorArrayOutput)
}

type GetVdomsflowCollectorOutput struct{ *pulumi.OutputState }

func (GetVdomsflowCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVdomsflowCollector)(nil)).Elem()
}

func (o GetVdomsflowCollectorOutput) ToGetVdomsflowCollectorOutput() GetVdomsflowCollectorOutput {
	return o
}

func (o GetVdomsflowCollectorOutput) ToGetVdomsflowCollectorOutputWithContext(ctx context.Context) GetVdomsflowCollectorOutput {
	return o
}

// IP addresses of the sFlow collectors that sFlow agents added to interfaces in this VDOM send sFlow datagrams to.
func (o GetVdomsflowCollectorOutput) CollectorIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdomsflowCollector) string { return v.CollectorIp }).(pulumi.StringOutput)
}

// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
func (o GetVdomsflowCollectorOutput) CollectorPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetVdomsflowCollector) int { return v.CollectorPort }).(pulumi.IntOutput)
}

// ID.
func (o GetVdomsflowCollectorOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetVdomsflowCollector) int { return v.Id }).(pulumi.IntOutput)
}

// Specify outgoing interface to reach server.
func (o GetVdomsflowCollectorOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdomsflowCollector) string { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server.
func (o GetVdomsflowCollectorOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdomsflowCollector) string { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Source IP address for sFlow agent.
func (o GetVdomsflowCollectorOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVdomsflowCollector) string { return v.SourceIp }).(pulumi.StringOutput)
}

type GetVdomsflowCollectorArrayOutput struct{ *pulumi.OutputState }

func (GetVdomsflowCollectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVdomsflowCollector)(nil)).Elem()
}

func (o GetVdomsflowCollectorArrayOutput) ToGetVdomsflowCollectorArrayOutput() GetVdomsflowCollectorArrayOutput {
	return o
}

func (o GetVdomsflowCollectorArrayOutput) ToGetVdomsflowCollectorArrayOutputWithContext(ctx context.Context) GetVdomsflowCollectorArrayOutput {
	return o
}

func (o GetVdomsflowCollectorArrayOutput) Index(i pulumi.IntInput) GetVdomsflowCollectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVdomsflowCollector {
		return vs[0].([]GetVdomsflowCollector)[vs[1].(int)]
	}).(GetVdomsflowCollectorOutput)
}

type GetVirtualwanlinkFailAlertInterface struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkFailAlertInterfaceInput is an input type that accepts GetVirtualwanlinkFailAlertInterfaceArgs and GetVirtualwanlinkFailAlertInterfaceOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkFailAlertInterfaceInput` via:
//
//	GetVirtualwanlinkFailAlertInterfaceArgs{...}
type GetVirtualwanlinkFailAlertInterfaceInput interface {
	pulumi.Input

	ToGetVirtualwanlinkFailAlertInterfaceOutput() GetVirtualwanlinkFailAlertInterfaceOutput
	ToGetVirtualwanlinkFailAlertInterfaceOutputWithContext(context.Context) GetVirtualwanlinkFailAlertInterfaceOutput
}

type GetVirtualwanlinkFailAlertInterfaceArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkFailAlertInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (i GetVirtualwanlinkFailAlertInterfaceArgs) ToGetVirtualwanlinkFailAlertInterfaceOutput() GetVirtualwanlinkFailAlertInterfaceOutput {
	return i.ToGetVirtualwanlinkFailAlertInterfaceOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkFailAlertInterfaceArgs) ToGetVirtualwanlinkFailAlertInterfaceOutputWithContext(ctx context.Context) GetVirtualwanlinkFailAlertInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkFailAlertInterfaceOutput)
}

// GetVirtualwanlinkFailAlertInterfaceArrayInput is an input type that accepts GetVirtualwanlinkFailAlertInterfaceArray and GetVirtualwanlinkFailAlertInterfaceArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkFailAlertInterfaceArrayInput` via:
//
//	GetVirtualwanlinkFailAlertInterfaceArray{ GetVirtualwanlinkFailAlertInterfaceArgs{...} }
type GetVirtualwanlinkFailAlertInterfaceArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkFailAlertInterfaceArrayOutput() GetVirtualwanlinkFailAlertInterfaceArrayOutput
	ToGetVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(context.Context) GetVirtualwanlinkFailAlertInterfaceArrayOutput
}

type GetVirtualwanlinkFailAlertInterfaceArray []GetVirtualwanlinkFailAlertInterfaceInput

func (GetVirtualwanlinkFailAlertInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (i GetVirtualwanlinkFailAlertInterfaceArray) ToGetVirtualwanlinkFailAlertInterfaceArrayOutput() GetVirtualwanlinkFailAlertInterfaceArrayOutput {
	return i.ToGetVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkFailAlertInterfaceArray) ToGetVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkFailAlertInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkFailAlertInterfaceArrayOutput)
}

type GetVirtualwanlinkFailAlertInterfaceOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkFailAlertInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (o GetVirtualwanlinkFailAlertInterfaceOutput) ToGetVirtualwanlinkFailAlertInterfaceOutput() GetVirtualwanlinkFailAlertInterfaceOutput {
	return o
}

func (o GetVirtualwanlinkFailAlertInterfaceOutput) ToGetVirtualwanlinkFailAlertInterfaceOutputWithContext(ctx context.Context) GetVirtualwanlinkFailAlertInterfaceOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkFailAlertInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkFailAlertInterface) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkFailAlertInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkFailAlertInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (o GetVirtualwanlinkFailAlertInterfaceArrayOutput) ToGetVirtualwanlinkFailAlertInterfaceArrayOutput() GetVirtualwanlinkFailAlertInterfaceArrayOutput {
	return o
}

func (o GetVirtualwanlinkFailAlertInterfaceArrayOutput) ToGetVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkFailAlertInterfaceArrayOutput {
	return o
}

func (o GetVirtualwanlinkFailAlertInterfaceArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkFailAlertInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkFailAlertInterface {
		return vs[0].([]GetVirtualwanlinkFailAlertInterface)[vs[1].(int)]
	}).(GetVirtualwanlinkFailAlertInterfaceOutput)
}

type GetVirtualwanlinkHealthCheck struct {
	// Address mode (IPv4 or IPv6).
	AddrMode string `pulumi:"addrMode"`
	// Differentiated services code point (DSCP) in the IP header of the probe packet.
	Diffservcode string `pulumi:"diffservcode"`
	// Fully qualified domain name to resolve for the DNS probe.
	DnsRequestDomain string `pulumi:"dnsRequestDomain"`
	// Number of failures before server is considered lost (1 - 3600, default = 5).
	Failtime int `pulumi:"failtime"`
	// HA election priority (1 - 50).
	HaPriority int `pulumi:"haPriority"`
	// String in the http-agent field in the HTTP header.
	HttpAgent string `pulumi:"httpAgent"`
	// URL used to communicate with the server if the protocol if the protocol is HTTP.
	HttpGet string `pulumi:"httpGet"`
	// Response string expected from the server if the protocol is HTTP.
	HttpMatch string `pulumi:"httpMatch"`
	// Status check interval, or the time between attempting to connect to the server (1 - 3600 sec, default = 5).
	Interval int `pulumi:"interval"`
	// Member sequence number list. The structure of `members` block is documented below.
	Members []GetVirtualwanlinkHealthCheckMember `pulumi:"members"`
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
	// Packet size of a twamp test session,
	PacketSize int `pulumi:"packetSize"`
	// Twamp controller password in authentication mode
	Password string `pulumi:"password"`
	// Port number used to communicate with the server over the selected protocol.
	Port int `pulumi:"port"`
	// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
	ProbeCount int `pulumi:"probeCount"`
	// Enable/disable transmission of probe packets.
	ProbePackets string `pulumi:"probePackets"`
	// Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500).
	ProbeTimeout int `pulumi:"probeTimeout"`
	// Protocol number.
	Protocol string `pulumi:"protocol"`
	// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
	Recoverytime int `pulumi:"recoverytime"`
	// Twamp controller security mode.
	SecurityMode string `pulumi:"securityMode"`
	// IP address or FQDN name of the server.
	Server string `pulumi:"server"`
	// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
	SlaFailLogPeriod int `pulumi:"slaFailLogPeriod"`
	// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
	SlaPassLogPeriod int `pulumi:"slaPassLogPeriod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas []GetVirtualwanlinkHealthCheckSla `pulumi:"slas"`
	// Enable/disable system DNS as the probe server.
	SystemDns string `pulumi:"systemDns"`
	// Alert threshold for jitter (ms, default = 0).
	ThresholdAlertJitter int `pulumi:"thresholdAlertJitter"`
	// Alert threshold for latency (ms, default = 0).
	ThresholdAlertLatency int `pulumi:"thresholdAlertLatency"`
	// Alert threshold for packet loss (percentage, default = 0).
	ThresholdAlertPacketloss int `pulumi:"thresholdAlertPacketloss"`
	// Warning threshold for jitter (ms, default = 0).
	ThresholdWarningJitter int `pulumi:"thresholdWarningJitter"`
	// Warning threshold for latency (ms, default = 0).
	ThresholdWarningLatency int `pulumi:"thresholdWarningLatency"`
	// Warning threshold for packet loss (percentage, default = 0).
	ThresholdWarningPacketloss int `pulumi:"thresholdWarningPacketloss"`
	// Enable/disable update cascade interface.
	UpdateCascadeInterface string `pulumi:"updateCascadeInterface"`
	// Enable/disable updating the static route.
	UpdateStaticRoute string `pulumi:"updateStaticRoute"`
}

// GetVirtualwanlinkHealthCheckInput is an input type that accepts GetVirtualwanlinkHealthCheckArgs and GetVirtualwanlinkHealthCheckOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkHealthCheckInput` via:
//
//	GetVirtualwanlinkHealthCheckArgs{...}
type GetVirtualwanlinkHealthCheckInput interface {
	pulumi.Input

	ToGetVirtualwanlinkHealthCheckOutput() GetVirtualwanlinkHealthCheckOutput
	ToGetVirtualwanlinkHealthCheckOutputWithContext(context.Context) GetVirtualwanlinkHealthCheckOutput
}

type GetVirtualwanlinkHealthCheckArgs struct {
	// Address mode (IPv4 or IPv6).
	AddrMode pulumi.StringInput `pulumi:"addrMode"`
	// Differentiated services code point (DSCP) in the IP header of the probe packet.
	Diffservcode pulumi.StringInput `pulumi:"diffservcode"`
	// Fully qualified domain name to resolve for the DNS probe.
	DnsRequestDomain pulumi.StringInput `pulumi:"dnsRequestDomain"`
	// Number of failures before server is considered lost (1 - 3600, default = 5).
	Failtime pulumi.IntInput `pulumi:"failtime"`
	// HA election priority (1 - 50).
	HaPriority pulumi.IntInput `pulumi:"haPriority"`
	// String in the http-agent field in the HTTP header.
	HttpAgent pulumi.StringInput `pulumi:"httpAgent"`
	// URL used to communicate with the server if the protocol if the protocol is HTTP.
	HttpGet pulumi.StringInput `pulumi:"httpGet"`
	// Response string expected from the server if the protocol is HTTP.
	HttpMatch pulumi.StringInput `pulumi:"httpMatch"`
	// Status check interval, or the time between attempting to connect to the server (1 - 3600 sec, default = 5).
	Interval pulumi.IntInput `pulumi:"interval"`
	// Member sequence number list. The structure of `members` block is documented below.
	Members GetVirtualwanlinkHealthCheckMemberArrayInput `pulumi:"members"`
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
	// Packet size of a twamp test session,
	PacketSize pulumi.IntInput `pulumi:"packetSize"`
	// Twamp controller password in authentication mode
	Password pulumi.StringInput `pulumi:"password"`
	// Port number used to communicate with the server over the selected protocol.
	Port pulumi.IntInput `pulumi:"port"`
	// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
	ProbeCount pulumi.IntInput `pulumi:"probeCount"`
	// Enable/disable transmission of probe packets.
	ProbePackets pulumi.StringInput `pulumi:"probePackets"`
	// Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500).
	ProbeTimeout pulumi.IntInput `pulumi:"probeTimeout"`
	// Protocol number.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
	Recoverytime pulumi.IntInput `pulumi:"recoverytime"`
	// Twamp controller security mode.
	SecurityMode pulumi.StringInput `pulumi:"securityMode"`
	// IP address or FQDN name of the server.
	Server pulumi.StringInput `pulumi:"server"`
	// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
	SlaFailLogPeriod pulumi.IntInput `pulumi:"slaFailLogPeriod"`
	// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
	SlaPassLogPeriod pulumi.IntInput `pulumi:"slaPassLogPeriod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas GetVirtualwanlinkHealthCheckSlaArrayInput `pulumi:"slas"`
	// Enable/disable system DNS as the probe server.
	SystemDns pulumi.StringInput `pulumi:"systemDns"`
	// Alert threshold for jitter (ms, default = 0).
	ThresholdAlertJitter pulumi.IntInput `pulumi:"thresholdAlertJitter"`
	// Alert threshold for latency (ms, default = 0).
	ThresholdAlertLatency pulumi.IntInput `pulumi:"thresholdAlertLatency"`
	// Alert threshold for packet loss (percentage, default = 0).
	ThresholdAlertPacketloss pulumi.IntInput `pulumi:"thresholdAlertPacketloss"`
	// Warning threshold for jitter (ms, default = 0).
	ThresholdWarningJitter pulumi.IntInput `pulumi:"thresholdWarningJitter"`
	// Warning threshold for latency (ms, default = 0).
	ThresholdWarningLatency pulumi.IntInput `pulumi:"thresholdWarningLatency"`
	// Warning threshold for packet loss (percentage, default = 0).
	ThresholdWarningPacketloss pulumi.IntInput `pulumi:"thresholdWarningPacketloss"`
	// Enable/disable update cascade interface.
	UpdateCascadeInterface pulumi.StringInput `pulumi:"updateCascadeInterface"`
	// Enable/disable updating the static route.
	UpdateStaticRoute pulumi.StringInput `pulumi:"updateStaticRoute"`
}

func (GetVirtualwanlinkHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkHealthCheck)(nil)).Elem()
}

func (i GetVirtualwanlinkHealthCheckArgs) ToGetVirtualwanlinkHealthCheckOutput() GetVirtualwanlinkHealthCheckOutput {
	return i.ToGetVirtualwanlinkHealthCheckOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkHealthCheckArgs) ToGetVirtualwanlinkHealthCheckOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkHealthCheckOutput)
}

// GetVirtualwanlinkHealthCheckArrayInput is an input type that accepts GetVirtualwanlinkHealthCheckArray and GetVirtualwanlinkHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkHealthCheckArrayInput` via:
//
//	GetVirtualwanlinkHealthCheckArray{ GetVirtualwanlinkHealthCheckArgs{...} }
type GetVirtualwanlinkHealthCheckArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkHealthCheckArrayOutput() GetVirtualwanlinkHealthCheckArrayOutput
	ToGetVirtualwanlinkHealthCheckArrayOutputWithContext(context.Context) GetVirtualwanlinkHealthCheckArrayOutput
}

type GetVirtualwanlinkHealthCheckArray []GetVirtualwanlinkHealthCheckInput

func (GetVirtualwanlinkHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkHealthCheck)(nil)).Elem()
}

func (i GetVirtualwanlinkHealthCheckArray) ToGetVirtualwanlinkHealthCheckArrayOutput() GetVirtualwanlinkHealthCheckArrayOutput {
	return i.ToGetVirtualwanlinkHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkHealthCheckArray) ToGetVirtualwanlinkHealthCheckArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkHealthCheckArrayOutput)
}

type GetVirtualwanlinkHealthCheckOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkHealthCheck)(nil)).Elem()
}

func (o GetVirtualwanlinkHealthCheckOutput) ToGetVirtualwanlinkHealthCheckOutput() GetVirtualwanlinkHealthCheckOutput {
	return o
}

func (o GetVirtualwanlinkHealthCheckOutput) ToGetVirtualwanlinkHealthCheckOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckOutput {
	return o
}

// Address mode (IPv4 or IPv6).
func (o GetVirtualwanlinkHealthCheckOutput) AddrMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.AddrMode }).(pulumi.StringOutput)
}

// Differentiated services code point (DSCP) in the IP header of the probe packet.
func (o GetVirtualwanlinkHealthCheckOutput) Diffservcode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.Diffservcode }).(pulumi.StringOutput)
}

// Fully qualified domain name to resolve for the DNS probe.
func (o GetVirtualwanlinkHealthCheckOutput) DnsRequestDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.DnsRequestDomain }).(pulumi.StringOutput)
}

// Number of failures before server is considered lost (1 - 3600, default = 5).
func (o GetVirtualwanlinkHealthCheckOutput) Failtime() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.Failtime }).(pulumi.IntOutput)
}

// HA election priority (1 - 50).
func (o GetVirtualwanlinkHealthCheckOutput) HaPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.HaPriority }).(pulumi.IntOutput)
}

// String in the http-agent field in the HTTP header.
func (o GetVirtualwanlinkHealthCheckOutput) HttpAgent() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.HttpAgent }).(pulumi.StringOutput)
}

// URL used to communicate with the server if the protocol if the protocol is HTTP.
func (o GetVirtualwanlinkHealthCheckOutput) HttpGet() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.HttpGet }).(pulumi.StringOutput)
}

// Response string expected from the server if the protocol is HTTP.
func (o GetVirtualwanlinkHealthCheckOutput) HttpMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.HttpMatch }).(pulumi.StringOutput)
}

// Status check interval, or the time between attempting to connect to the server (1 - 3600 sec, default = 5).
func (o GetVirtualwanlinkHealthCheckOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.Interval }).(pulumi.IntOutput)
}

// Member sequence number list. The structure of `members` block is documented below.
func (o GetVirtualwanlinkHealthCheckOutput) Members() GetVirtualwanlinkHealthCheckMemberArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) []GetVirtualwanlinkHealthCheckMember { return v.Members }).(GetVirtualwanlinkHealthCheckMemberArrayOutput)
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkHealthCheckOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.Name }).(pulumi.StringOutput)
}

// Packet size of a twamp test session,
func (o GetVirtualwanlinkHealthCheckOutput) PacketSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.PacketSize }).(pulumi.IntOutput)
}

// Twamp controller password in authentication mode
func (o GetVirtualwanlinkHealthCheckOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.Password }).(pulumi.StringOutput)
}

// Port number used to communicate with the server over the selected protocol.
func (o GetVirtualwanlinkHealthCheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.Port }).(pulumi.IntOutput)
}

// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
func (o GetVirtualwanlinkHealthCheckOutput) ProbeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.ProbeCount }).(pulumi.IntOutput)
}

// Enable/disable transmission of probe packets.
func (o GetVirtualwanlinkHealthCheckOutput) ProbePackets() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.ProbePackets }).(pulumi.StringOutput)
}

// Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500).
func (o GetVirtualwanlinkHealthCheckOutput) ProbeTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.ProbeTimeout }).(pulumi.IntOutput)
}

// Protocol number.
func (o GetVirtualwanlinkHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
func (o GetVirtualwanlinkHealthCheckOutput) Recoverytime() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.Recoverytime }).(pulumi.IntOutput)
}

// Twamp controller security mode.
func (o GetVirtualwanlinkHealthCheckOutput) SecurityMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.SecurityMode }).(pulumi.StringOutput)
}

// IP address or FQDN name of the server.
func (o GetVirtualwanlinkHealthCheckOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.Server }).(pulumi.StringOutput)
}

// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
func (o GetVirtualwanlinkHealthCheckOutput) SlaFailLogPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.SlaFailLogPeriod }).(pulumi.IntOutput)
}

// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
func (o GetVirtualwanlinkHealthCheckOutput) SlaPassLogPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.SlaPassLogPeriod }).(pulumi.IntOutput)
}

// Service level agreement (SLA). The structure of `sla` block is documented below.
func (o GetVirtualwanlinkHealthCheckOutput) Slas() GetVirtualwanlinkHealthCheckSlaArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) []GetVirtualwanlinkHealthCheckSla { return v.Slas }).(GetVirtualwanlinkHealthCheckSlaArrayOutput)
}

// Enable/disable system DNS as the probe server.
func (o GetVirtualwanlinkHealthCheckOutput) SystemDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.SystemDns }).(pulumi.StringOutput)
}

// Alert threshold for jitter (ms, default = 0).
func (o GetVirtualwanlinkHealthCheckOutput) ThresholdAlertJitter() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.ThresholdAlertJitter }).(pulumi.IntOutput)
}

// Alert threshold for latency (ms, default = 0).
func (o GetVirtualwanlinkHealthCheckOutput) ThresholdAlertLatency() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.ThresholdAlertLatency }).(pulumi.IntOutput)
}

// Alert threshold for packet loss (percentage, default = 0).
func (o GetVirtualwanlinkHealthCheckOutput) ThresholdAlertPacketloss() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.ThresholdAlertPacketloss }).(pulumi.IntOutput)
}

// Warning threshold for jitter (ms, default = 0).
func (o GetVirtualwanlinkHealthCheckOutput) ThresholdWarningJitter() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.ThresholdWarningJitter }).(pulumi.IntOutput)
}

// Warning threshold for latency (ms, default = 0).
func (o GetVirtualwanlinkHealthCheckOutput) ThresholdWarningLatency() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.ThresholdWarningLatency }).(pulumi.IntOutput)
}

// Warning threshold for packet loss (percentage, default = 0).
func (o GetVirtualwanlinkHealthCheckOutput) ThresholdWarningPacketloss() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) int { return v.ThresholdWarningPacketloss }).(pulumi.IntOutput)
}

// Enable/disable update cascade interface.
func (o GetVirtualwanlinkHealthCheckOutput) UpdateCascadeInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.UpdateCascadeInterface }).(pulumi.StringOutput)
}

// Enable/disable updating the static route.
func (o GetVirtualwanlinkHealthCheckOutput) UpdateStaticRoute() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheck) string { return v.UpdateStaticRoute }).(pulumi.StringOutput)
}

type GetVirtualwanlinkHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkHealthCheck)(nil)).Elem()
}

func (o GetVirtualwanlinkHealthCheckArrayOutput) ToGetVirtualwanlinkHealthCheckArrayOutput() GetVirtualwanlinkHealthCheckArrayOutput {
	return o
}

func (o GetVirtualwanlinkHealthCheckArrayOutput) ToGetVirtualwanlinkHealthCheckArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckArrayOutput {
	return o
}

func (o GetVirtualwanlinkHealthCheckArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkHealthCheck {
		return vs[0].([]GetVirtualwanlinkHealthCheck)[vs[1].(int)]
	}).(GetVirtualwanlinkHealthCheckOutput)
}

type GetVirtualwanlinkHealthCheckMember struct {
	// Member sequence number.
	SeqNum int `pulumi:"seqNum"`
}

// GetVirtualwanlinkHealthCheckMemberInput is an input type that accepts GetVirtualwanlinkHealthCheckMemberArgs and GetVirtualwanlinkHealthCheckMemberOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkHealthCheckMemberInput` via:
//
//	GetVirtualwanlinkHealthCheckMemberArgs{...}
type GetVirtualwanlinkHealthCheckMemberInput interface {
	pulumi.Input

	ToGetVirtualwanlinkHealthCheckMemberOutput() GetVirtualwanlinkHealthCheckMemberOutput
	ToGetVirtualwanlinkHealthCheckMemberOutputWithContext(context.Context) GetVirtualwanlinkHealthCheckMemberOutput
}

type GetVirtualwanlinkHealthCheckMemberArgs struct {
	// Member sequence number.
	SeqNum pulumi.IntInput `pulumi:"seqNum"`
}

func (GetVirtualwanlinkHealthCheckMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (i GetVirtualwanlinkHealthCheckMemberArgs) ToGetVirtualwanlinkHealthCheckMemberOutput() GetVirtualwanlinkHealthCheckMemberOutput {
	return i.ToGetVirtualwanlinkHealthCheckMemberOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkHealthCheckMemberArgs) ToGetVirtualwanlinkHealthCheckMemberOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkHealthCheckMemberOutput)
}

// GetVirtualwanlinkHealthCheckMemberArrayInput is an input type that accepts GetVirtualwanlinkHealthCheckMemberArray and GetVirtualwanlinkHealthCheckMemberArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkHealthCheckMemberArrayInput` via:
//
//	GetVirtualwanlinkHealthCheckMemberArray{ GetVirtualwanlinkHealthCheckMemberArgs{...} }
type GetVirtualwanlinkHealthCheckMemberArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkHealthCheckMemberArrayOutput() GetVirtualwanlinkHealthCheckMemberArrayOutput
	ToGetVirtualwanlinkHealthCheckMemberArrayOutputWithContext(context.Context) GetVirtualwanlinkHealthCheckMemberArrayOutput
}

type GetVirtualwanlinkHealthCheckMemberArray []GetVirtualwanlinkHealthCheckMemberInput

func (GetVirtualwanlinkHealthCheckMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (i GetVirtualwanlinkHealthCheckMemberArray) ToGetVirtualwanlinkHealthCheckMemberArrayOutput() GetVirtualwanlinkHealthCheckMemberArrayOutput {
	return i.ToGetVirtualwanlinkHealthCheckMemberArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkHealthCheckMemberArray) ToGetVirtualwanlinkHealthCheckMemberArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkHealthCheckMemberArrayOutput)
}

type GetVirtualwanlinkHealthCheckMemberOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkHealthCheckMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (o GetVirtualwanlinkHealthCheckMemberOutput) ToGetVirtualwanlinkHealthCheckMemberOutput() GetVirtualwanlinkHealthCheckMemberOutput {
	return o
}

func (o GetVirtualwanlinkHealthCheckMemberOutput) ToGetVirtualwanlinkHealthCheckMemberOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckMemberOutput {
	return o
}

// Member sequence number.
func (o GetVirtualwanlinkHealthCheckMemberOutput) SeqNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheckMember) int { return v.SeqNum }).(pulumi.IntOutput)
}

type GetVirtualwanlinkHealthCheckMemberArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkHealthCheckMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (o GetVirtualwanlinkHealthCheckMemberArrayOutput) ToGetVirtualwanlinkHealthCheckMemberArrayOutput() GetVirtualwanlinkHealthCheckMemberArrayOutput {
	return o
}

func (o GetVirtualwanlinkHealthCheckMemberArrayOutput) ToGetVirtualwanlinkHealthCheckMemberArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckMemberArrayOutput {
	return o
}

func (o GetVirtualwanlinkHealthCheckMemberArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkHealthCheckMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkHealthCheckMember {
		return vs[0].([]GetVirtualwanlinkHealthCheckMember)[vs[1].(int)]
	}).(GetVirtualwanlinkHealthCheckMemberOutput)
}

type GetVirtualwanlinkHealthCheckSla struct {
	// SLA ID.
	Id int `pulumi:"id"`
	// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	JitterThreshold int `pulumi:"jitterThreshold"`
	// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	LatencyThreshold int `pulumi:"latencyThreshold"`
	// Link cost factor.
	LinkCostFactor string `pulumi:"linkCostFactor"`
	// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
	PacketlossThreshold int `pulumi:"packetlossThreshold"`
}

// GetVirtualwanlinkHealthCheckSlaInput is an input type that accepts GetVirtualwanlinkHealthCheckSlaArgs and GetVirtualwanlinkHealthCheckSlaOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkHealthCheckSlaInput` via:
//
//	GetVirtualwanlinkHealthCheckSlaArgs{...}
type GetVirtualwanlinkHealthCheckSlaInput interface {
	pulumi.Input

	ToGetVirtualwanlinkHealthCheckSlaOutput() GetVirtualwanlinkHealthCheckSlaOutput
	ToGetVirtualwanlinkHealthCheckSlaOutputWithContext(context.Context) GetVirtualwanlinkHealthCheckSlaOutput
}

type GetVirtualwanlinkHealthCheckSlaArgs struct {
	// SLA ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	JitterThreshold pulumi.IntInput `pulumi:"jitterThreshold"`
	// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	LatencyThreshold pulumi.IntInput `pulumi:"latencyThreshold"`
	// Link cost factor.
	LinkCostFactor pulumi.StringInput `pulumi:"linkCostFactor"`
	// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
	PacketlossThreshold pulumi.IntInput `pulumi:"packetlossThreshold"`
}

func (GetVirtualwanlinkHealthCheckSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (i GetVirtualwanlinkHealthCheckSlaArgs) ToGetVirtualwanlinkHealthCheckSlaOutput() GetVirtualwanlinkHealthCheckSlaOutput {
	return i.ToGetVirtualwanlinkHealthCheckSlaOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkHealthCheckSlaArgs) ToGetVirtualwanlinkHealthCheckSlaOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkHealthCheckSlaOutput)
}

// GetVirtualwanlinkHealthCheckSlaArrayInput is an input type that accepts GetVirtualwanlinkHealthCheckSlaArray and GetVirtualwanlinkHealthCheckSlaArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkHealthCheckSlaArrayInput` via:
//
//	GetVirtualwanlinkHealthCheckSlaArray{ GetVirtualwanlinkHealthCheckSlaArgs{...} }
type GetVirtualwanlinkHealthCheckSlaArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkHealthCheckSlaArrayOutput() GetVirtualwanlinkHealthCheckSlaArrayOutput
	ToGetVirtualwanlinkHealthCheckSlaArrayOutputWithContext(context.Context) GetVirtualwanlinkHealthCheckSlaArrayOutput
}

type GetVirtualwanlinkHealthCheckSlaArray []GetVirtualwanlinkHealthCheckSlaInput

func (GetVirtualwanlinkHealthCheckSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (i GetVirtualwanlinkHealthCheckSlaArray) ToGetVirtualwanlinkHealthCheckSlaArrayOutput() GetVirtualwanlinkHealthCheckSlaArrayOutput {
	return i.ToGetVirtualwanlinkHealthCheckSlaArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkHealthCheckSlaArray) ToGetVirtualwanlinkHealthCheckSlaArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkHealthCheckSlaArrayOutput)
}

type GetVirtualwanlinkHealthCheckSlaOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkHealthCheckSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (o GetVirtualwanlinkHealthCheckSlaOutput) ToGetVirtualwanlinkHealthCheckSlaOutput() GetVirtualwanlinkHealthCheckSlaOutput {
	return o
}

func (o GetVirtualwanlinkHealthCheckSlaOutput) ToGetVirtualwanlinkHealthCheckSlaOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckSlaOutput {
	return o
}

// SLA ID.
func (o GetVirtualwanlinkHealthCheckSlaOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheckSla) int { return v.Id }).(pulumi.IntOutput)
}

// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
func (o GetVirtualwanlinkHealthCheckSlaOutput) JitterThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheckSla) int { return v.JitterThreshold }).(pulumi.IntOutput)
}

// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
func (o GetVirtualwanlinkHealthCheckSlaOutput) LatencyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheckSla) int { return v.LatencyThreshold }).(pulumi.IntOutput)
}

// Link cost factor.
func (o GetVirtualwanlinkHealthCheckSlaOutput) LinkCostFactor() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheckSla) string { return v.LinkCostFactor }).(pulumi.StringOutput)
}

// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
func (o GetVirtualwanlinkHealthCheckSlaOutput) PacketlossThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkHealthCheckSla) int { return v.PacketlossThreshold }).(pulumi.IntOutput)
}

type GetVirtualwanlinkHealthCheckSlaArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkHealthCheckSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (o GetVirtualwanlinkHealthCheckSlaArrayOutput) ToGetVirtualwanlinkHealthCheckSlaArrayOutput() GetVirtualwanlinkHealthCheckSlaArrayOutput {
	return o
}

func (o GetVirtualwanlinkHealthCheckSlaArrayOutput) ToGetVirtualwanlinkHealthCheckSlaArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkHealthCheckSlaArrayOutput {
	return o
}

func (o GetVirtualwanlinkHealthCheckSlaArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkHealthCheckSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkHealthCheckSla {
		return vs[0].([]GetVirtualwanlinkHealthCheckSla)[vs[1].(int)]
	}).(GetVirtualwanlinkHealthCheckSlaOutput)
}

type GetVirtualwanlinkMember struct {
	// Comments.
	Comment string `pulumi:"comment"`
	// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
	Cost int `pulumi:"cost"`
	// Enable/disable SD-WAN service gateway.
	Gateway string `pulumi:"gateway"`
	// IPv6 gateway.
	Gateway6 string `pulumi:"gateway6"`
	// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	IngressSpilloverThreshold int `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface string `pulumi:"interface"`
	// Priority of the interface (0 - 4294967295). Used for SD-WAN rules or priority rules.
	Priority int `pulumi:"priority"`
	// Member sequence number.
	SeqNum int `pulumi:"seqNum"`
	// Source IP address used in the health-check packet to the server.
	Source string `pulumi:"source"`
	// Source IPv6 address used in the health-check packet to the server.
	Source6 string `pulumi:"source6"`
	// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	SpilloverThreshold int `pulumi:"spilloverThreshold"`
	// Enable/disable SD-WAN service.
	Status string `pulumi:"status"`
	// Measured volume ratio (this value / sum of all values = percentage of link volume, 0 - 255).
	VolumeRatio int `pulumi:"volumeRatio"`
	// Weight of this interface for weighted load balancing. (0 - 255) More traffic is directed to interfaces with higher weights.
	Weight int `pulumi:"weight"`
}

// GetVirtualwanlinkMemberInput is an input type that accepts GetVirtualwanlinkMemberArgs and GetVirtualwanlinkMemberOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkMemberInput` via:
//
//	GetVirtualwanlinkMemberArgs{...}
type GetVirtualwanlinkMemberInput interface {
	pulumi.Input

	ToGetVirtualwanlinkMemberOutput() GetVirtualwanlinkMemberOutput
	ToGetVirtualwanlinkMemberOutputWithContext(context.Context) GetVirtualwanlinkMemberOutput
}

type GetVirtualwanlinkMemberArgs struct {
	// Comments.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
	Cost pulumi.IntInput `pulumi:"cost"`
	// Enable/disable SD-WAN service gateway.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// IPv6 gateway.
	Gateway6 pulumi.StringInput `pulumi:"gateway6"`
	// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	IngressSpilloverThreshold pulumi.IntInput `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface pulumi.StringInput `pulumi:"interface"`
	// Priority of the interface (0 - 4294967295). Used for SD-WAN rules or priority rules.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Member sequence number.
	SeqNum pulumi.IntInput `pulumi:"seqNum"`
	// Source IP address used in the health-check packet to the server.
	Source pulumi.StringInput `pulumi:"source"`
	// Source IPv6 address used in the health-check packet to the server.
	Source6 pulumi.StringInput `pulumi:"source6"`
	// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	SpilloverThreshold pulumi.IntInput `pulumi:"spilloverThreshold"`
	// Enable/disable SD-WAN service.
	Status pulumi.StringInput `pulumi:"status"`
	// Measured volume ratio (this value / sum of all values = percentage of link volume, 0 - 255).
	VolumeRatio pulumi.IntInput `pulumi:"volumeRatio"`
	// Weight of this interface for weighted load balancing. (0 - 255) More traffic is directed to interfaces with higher weights.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetVirtualwanlinkMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkMember)(nil)).Elem()
}

func (i GetVirtualwanlinkMemberArgs) ToGetVirtualwanlinkMemberOutput() GetVirtualwanlinkMemberOutput {
	return i.ToGetVirtualwanlinkMemberOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkMemberArgs) ToGetVirtualwanlinkMemberOutputWithContext(ctx context.Context) GetVirtualwanlinkMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkMemberOutput)
}

// GetVirtualwanlinkMemberArrayInput is an input type that accepts GetVirtualwanlinkMemberArray and GetVirtualwanlinkMemberArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkMemberArrayInput` via:
//
//	GetVirtualwanlinkMemberArray{ GetVirtualwanlinkMemberArgs{...} }
type GetVirtualwanlinkMemberArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkMemberArrayOutput() GetVirtualwanlinkMemberArrayOutput
	ToGetVirtualwanlinkMemberArrayOutputWithContext(context.Context) GetVirtualwanlinkMemberArrayOutput
}

type GetVirtualwanlinkMemberArray []GetVirtualwanlinkMemberInput

func (GetVirtualwanlinkMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkMember)(nil)).Elem()
}

func (i GetVirtualwanlinkMemberArray) ToGetVirtualwanlinkMemberArrayOutput() GetVirtualwanlinkMemberArrayOutput {
	return i.ToGetVirtualwanlinkMemberArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkMemberArray) ToGetVirtualwanlinkMemberArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkMemberArrayOutput)
}

type GetVirtualwanlinkMemberOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkMember)(nil)).Elem()
}

func (o GetVirtualwanlinkMemberOutput) ToGetVirtualwanlinkMemberOutput() GetVirtualwanlinkMemberOutput {
	return o
}

func (o GetVirtualwanlinkMemberOutput) ToGetVirtualwanlinkMemberOutputWithContext(ctx context.Context) GetVirtualwanlinkMemberOutput {
	return o
}

// Comments.
func (o GetVirtualwanlinkMemberOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) string { return v.Comment }).(pulumi.StringOutput)
}

// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
func (o GetVirtualwanlinkMemberOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) int { return v.Cost }).(pulumi.IntOutput)
}

// Enable/disable SD-WAN service gateway.
func (o GetVirtualwanlinkMemberOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) string { return v.Gateway }).(pulumi.StringOutput)
}

// IPv6 gateway.
func (o GetVirtualwanlinkMemberOutput) Gateway6() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) string { return v.Gateway6 }).(pulumi.StringOutput)
}

// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
func (o GetVirtualwanlinkMemberOutput) IngressSpilloverThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) int { return v.IngressSpilloverThreshold }).(pulumi.IntOutput)
}

// Interface name.
func (o GetVirtualwanlinkMemberOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) string { return v.Interface }).(pulumi.StringOutput)
}

// Priority of the interface (0 - 4294967295). Used for SD-WAN rules or priority rules.
func (o GetVirtualwanlinkMemberOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) int { return v.Priority }).(pulumi.IntOutput)
}

// Member sequence number.
func (o GetVirtualwanlinkMemberOutput) SeqNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) int { return v.SeqNum }).(pulumi.IntOutput)
}

// Source IP address used in the health-check packet to the server.
func (o GetVirtualwanlinkMemberOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) string { return v.Source }).(pulumi.StringOutput)
}

// Source IPv6 address used in the health-check packet to the server.
func (o GetVirtualwanlinkMemberOutput) Source6() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) string { return v.Source6 }).(pulumi.StringOutput)
}

// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
func (o GetVirtualwanlinkMemberOutput) SpilloverThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) int { return v.SpilloverThreshold }).(pulumi.IntOutput)
}

// Enable/disable SD-WAN service.
func (o GetVirtualwanlinkMemberOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) string { return v.Status }).(pulumi.StringOutput)
}

// Measured volume ratio (this value / sum of all values = percentage of link volume, 0 - 255).
func (o GetVirtualwanlinkMemberOutput) VolumeRatio() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) int { return v.VolumeRatio }).(pulumi.IntOutput)
}

// Weight of this interface for weighted load balancing. (0 - 255) More traffic is directed to interfaces with higher weights.
func (o GetVirtualwanlinkMemberOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkMember) int { return v.Weight }).(pulumi.IntOutput)
}

type GetVirtualwanlinkMemberArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkMember)(nil)).Elem()
}

func (o GetVirtualwanlinkMemberArrayOutput) ToGetVirtualwanlinkMemberArrayOutput() GetVirtualwanlinkMemberArrayOutput {
	return o
}

func (o GetVirtualwanlinkMemberArrayOutput) ToGetVirtualwanlinkMemberArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkMemberArrayOutput {
	return o
}

func (o GetVirtualwanlinkMemberArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkMember {
		return vs[0].([]GetVirtualwanlinkMember)[vs[1].(int)]
	}).(GetVirtualwanlinkMemberOutput)
}

type GetVirtualwanlinkNeighbor struct {
	// Virtual WAN Link health-check.
	HealthCheck string `pulumi:"healthCheck"`
	// IP address of neighbor.
	Ip string `pulumi:"ip"`
	// Member sequence number.
	Member int `pulumi:"member"`
	// Service role to work with neighbor.
	Role string `pulumi:"role"`
	// SLA ID.
	SlaId int `pulumi:"slaId"`
}

// GetVirtualwanlinkNeighborInput is an input type that accepts GetVirtualwanlinkNeighborArgs and GetVirtualwanlinkNeighborOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkNeighborInput` via:
//
//	GetVirtualwanlinkNeighborArgs{...}
type GetVirtualwanlinkNeighborInput interface {
	pulumi.Input

	ToGetVirtualwanlinkNeighborOutput() GetVirtualwanlinkNeighborOutput
	ToGetVirtualwanlinkNeighborOutputWithContext(context.Context) GetVirtualwanlinkNeighborOutput
}

type GetVirtualwanlinkNeighborArgs struct {
	// Virtual WAN Link health-check.
	HealthCheck pulumi.StringInput `pulumi:"healthCheck"`
	// IP address of neighbor.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Member sequence number.
	Member pulumi.IntInput `pulumi:"member"`
	// Service role to work with neighbor.
	Role pulumi.StringInput `pulumi:"role"`
	// SLA ID.
	SlaId pulumi.IntInput `pulumi:"slaId"`
}

func (GetVirtualwanlinkNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkNeighbor)(nil)).Elem()
}

func (i GetVirtualwanlinkNeighborArgs) ToGetVirtualwanlinkNeighborOutput() GetVirtualwanlinkNeighborOutput {
	return i.ToGetVirtualwanlinkNeighborOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkNeighborArgs) ToGetVirtualwanlinkNeighborOutputWithContext(ctx context.Context) GetVirtualwanlinkNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkNeighborOutput)
}

// GetVirtualwanlinkNeighborArrayInput is an input type that accepts GetVirtualwanlinkNeighborArray and GetVirtualwanlinkNeighborArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkNeighborArrayInput` via:
//
//	GetVirtualwanlinkNeighborArray{ GetVirtualwanlinkNeighborArgs{...} }
type GetVirtualwanlinkNeighborArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkNeighborArrayOutput() GetVirtualwanlinkNeighborArrayOutput
	ToGetVirtualwanlinkNeighborArrayOutputWithContext(context.Context) GetVirtualwanlinkNeighborArrayOutput
}

type GetVirtualwanlinkNeighborArray []GetVirtualwanlinkNeighborInput

func (GetVirtualwanlinkNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkNeighbor)(nil)).Elem()
}

func (i GetVirtualwanlinkNeighborArray) ToGetVirtualwanlinkNeighborArrayOutput() GetVirtualwanlinkNeighborArrayOutput {
	return i.ToGetVirtualwanlinkNeighborArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkNeighborArray) ToGetVirtualwanlinkNeighborArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkNeighborArrayOutput)
}

type GetVirtualwanlinkNeighborOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkNeighbor)(nil)).Elem()
}

func (o GetVirtualwanlinkNeighborOutput) ToGetVirtualwanlinkNeighborOutput() GetVirtualwanlinkNeighborOutput {
	return o
}

func (o GetVirtualwanlinkNeighborOutput) ToGetVirtualwanlinkNeighborOutputWithContext(ctx context.Context) GetVirtualwanlinkNeighborOutput {
	return o
}

// Virtual WAN Link health-check.
func (o GetVirtualwanlinkNeighborOutput) HealthCheck() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkNeighbor) string { return v.HealthCheck }).(pulumi.StringOutput)
}

// IP address of neighbor.
func (o GetVirtualwanlinkNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkNeighbor) string { return v.Ip }).(pulumi.StringOutput)
}

// Member sequence number.
func (o GetVirtualwanlinkNeighborOutput) Member() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkNeighbor) int { return v.Member }).(pulumi.IntOutput)
}

// Service role to work with neighbor.
func (o GetVirtualwanlinkNeighborOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkNeighbor) string { return v.Role }).(pulumi.StringOutput)
}

// SLA ID.
func (o GetVirtualwanlinkNeighborOutput) SlaId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkNeighbor) int { return v.SlaId }).(pulumi.IntOutput)
}

type GetVirtualwanlinkNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkNeighbor)(nil)).Elem()
}

func (o GetVirtualwanlinkNeighborArrayOutput) ToGetVirtualwanlinkNeighborArrayOutput() GetVirtualwanlinkNeighborArrayOutput {
	return o
}

func (o GetVirtualwanlinkNeighborArrayOutput) ToGetVirtualwanlinkNeighborArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkNeighborArrayOutput {
	return o
}

func (o GetVirtualwanlinkNeighborArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkNeighbor {
		return vs[0].([]GetVirtualwanlinkNeighbor)[vs[1].(int)]
	}).(GetVirtualwanlinkNeighborOutput)
}

type GetVirtualwanlinkService struct {
	// Address mode (IPv4 or IPv6).
	AddrMode string `pulumi:"addrMode"`
	// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
	BandwidthWeight int `pulumi:"bandwidthWeight"`
	// Enable/disable use of SD-WAN as default service.
	Default string `pulumi:"default"`
	// Enable/disable forward traffic DSCP tag.
	DscpForward string `pulumi:"dscpForward"`
	// Forward traffic DSCP tag.
	DscpForwardTag string `pulumi:"dscpForwardTag"`
	// Enable/disable reverse traffic DSCP tag.
	DscpReverse string `pulumi:"dscpReverse"`
	// Reverse traffic DSCP tag.
	DscpReverseTag string `pulumi:"dscpReverseTag"`
	// Destination address6 name. The structure of `dst6` block is documented below.
	Dst6s []GetVirtualwanlinkServiceDst6 `pulumi:"dst6s"`
	// Enable/disable negation of destination address match.
	DstNegate string `pulumi:"dstNegate"`
	// Destination address name. The structure of `dst` block is documented below.
	Dsts []GetVirtualwanlinkServiceDst `pulumi:"dsts"`
	// End destination port number.
	EndPort int `pulumi:"endPort"`
	// Enable/disable SD-WAN service gateway.
	Gateway string `pulumi:"gateway"`
	// User groups. The structure of `groups` block is documented below.
	Groups []GetVirtualwanlinkServiceGroup `pulumi:"groups"`
	// Virtual WAN Link health-check.
	HealthCheck string `pulumi:"healthCheck"`
	// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
	HoldDownTime int `pulumi:"holdDownTime"`
	// SLA ID.
	Id int `pulumi:"id"`
	// Enable/disable negation of input device match.
	InputDeviceNegate string `pulumi:"inputDeviceNegate"`
	// Source interface name. The structure of `inputDevice` block is documented below.
	InputDevices []GetVirtualwanlinkServiceInputDevice `pulumi:"inputDevices"`
	// Enable/disable use of Internet service for application-based load balancing.
	InternetService string `pulumi:"internetService"`
	// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
	InternetServiceAppCtrlGroups []GetVirtualwanlinkServiceInternetServiceAppCtrlGroup `pulumi:"internetServiceAppCtrlGroups"`
	// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
	InternetServiceAppCtrls []GetVirtualwanlinkServiceInternetServiceAppCtrl `pulumi:"internetServiceAppCtrls"`
	// Control-based Internet Service group list. The structure of `internetServiceCtrlGroup` block is documented below.
	InternetServiceCtrlGroups []GetVirtualwanlinkServiceInternetServiceCtrlGroup `pulumi:"internetServiceCtrlGroups"`
	// Control-based Internet Service ID list. The structure of `internetServiceCtrl` block is documented below.
	InternetServiceCtrls []GetVirtualwanlinkServiceInternetServiceCtrl `pulumi:"internetServiceCtrls"`
	// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups []GetVirtualwanlinkServiceInternetServiceCustomGroup `pulumi:"internetServiceCustomGroups"`
	// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms []GetVirtualwanlinkServiceInternetServiceCustom `pulumi:"internetServiceCustoms"`
	// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups []GetVirtualwanlinkServiceInternetServiceGroup `pulumi:"internetServiceGroups"`
	// Internet service ID list. The structure of `internetServiceId` block is documented below.
	InternetServiceIds []GetVirtualwanlinkServiceInternetServiceId `pulumi:"internetServiceIds"`
	// Internet service name list. The structure of `internetServiceName` block is documented below.
	InternetServiceNames []GetVirtualwanlinkServiceInternetServiceName `pulumi:"internetServiceNames"`
	// Coefficient of jitter in the formula of custom-profile-1.
	JitterWeight int `pulumi:"jitterWeight"`
	// Coefficient of latency in the formula of custom-profile-1.
	LatencyWeight int `pulumi:"latencyWeight"`
	// Link cost factor.
	LinkCostFactor string `pulumi:"linkCostFactor"`
	// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
	LinkCostThreshold int `pulumi:"linkCostThreshold"`
	// Member sequence number.
	Member int `pulumi:"member"`
	// Control how the priority rule sets the priority of interfaces in the SD-WAN.
	Mode string `pulumi:"mode"`
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
	// Coefficient of packet-loss in the formula of custom-profile-1.
	PacketLossWeight int `pulumi:"packetLossWeight"`
	// Member sequence number list. The structure of `priorityMembers` block is documented below.
	PriorityMembers []GetVirtualwanlinkServicePriorityMember `pulumi:"priorityMembers"`
	// Protocol number.
	Protocol int `pulumi:"protocol"`
	// Quality grade.
	QualityLink int `pulumi:"qualityLink"`
	// Service role to work with neighbor.
	Role string `pulumi:"role"`
	// IPv4 route map route-tag.
	RouteTag int `pulumi:"routeTag"`
	// Method to compare SLA value for sla and load balance mode.
	SlaCompareMethod string `pulumi:"slaCompareMethod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas []GetVirtualwanlinkServiceSla `pulumi:"slas"`
	// Source address6 name. The structure of `src6` block is documented below.
	Src6s []GetVirtualwanlinkServiceSrc6 `pulumi:"src6s"`
	// Enable/disable negation of source address match.
	SrcNegate string `pulumi:"srcNegate"`
	// Source address name. The structure of `src` block is documented below.
	Srcs []GetVirtualwanlinkServiceSrc `pulumi:"srcs"`
	// Enable/disable service when selected neighbor role is standalone while service role is not standalone.
	StandaloneAction string `pulumi:"standaloneAction"`
	// Start destination port number.
	StartPort int `pulumi:"startPort"`
	// Enable/disable SD-WAN service.
	Status string `pulumi:"status"`
	// Type of service bit pattern.
	Tos string `pulumi:"tos"`
	// Type of service evaluated bits.
	TosMask string `pulumi:"tosMask"`
	// User name. The structure of `users` block is documented below.
	Users []GetVirtualwanlinkServiceUser `pulumi:"users"`
}

// GetVirtualwanlinkServiceInput is an input type that accepts GetVirtualwanlinkServiceArgs and GetVirtualwanlinkServiceOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInput` via:
//
//	GetVirtualwanlinkServiceArgs{...}
type GetVirtualwanlinkServiceInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceOutput() GetVirtualwanlinkServiceOutput
	ToGetVirtualwanlinkServiceOutputWithContext(context.Context) GetVirtualwanlinkServiceOutput
}

type GetVirtualwanlinkServiceArgs struct {
	// Address mode (IPv4 or IPv6).
	AddrMode pulumi.StringInput `pulumi:"addrMode"`
	// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
	BandwidthWeight pulumi.IntInput `pulumi:"bandwidthWeight"`
	// Enable/disable use of SD-WAN as default service.
	Default pulumi.StringInput `pulumi:"default"`
	// Enable/disable forward traffic DSCP tag.
	DscpForward pulumi.StringInput `pulumi:"dscpForward"`
	// Forward traffic DSCP tag.
	DscpForwardTag pulumi.StringInput `pulumi:"dscpForwardTag"`
	// Enable/disable reverse traffic DSCP tag.
	DscpReverse pulumi.StringInput `pulumi:"dscpReverse"`
	// Reverse traffic DSCP tag.
	DscpReverseTag pulumi.StringInput `pulumi:"dscpReverseTag"`
	// Destination address6 name. The structure of `dst6` block is documented below.
	Dst6s GetVirtualwanlinkServiceDst6ArrayInput `pulumi:"dst6s"`
	// Enable/disable negation of destination address match.
	DstNegate pulumi.StringInput `pulumi:"dstNegate"`
	// Destination address name. The structure of `dst` block is documented below.
	Dsts GetVirtualwanlinkServiceDstArrayInput `pulumi:"dsts"`
	// End destination port number.
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Enable/disable SD-WAN service gateway.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// User groups. The structure of `groups` block is documented below.
	Groups GetVirtualwanlinkServiceGroupArrayInput `pulumi:"groups"`
	// Virtual WAN Link health-check.
	HealthCheck pulumi.StringInput `pulumi:"healthCheck"`
	// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
	HoldDownTime pulumi.IntInput `pulumi:"holdDownTime"`
	// SLA ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Enable/disable negation of input device match.
	InputDeviceNegate pulumi.StringInput `pulumi:"inputDeviceNegate"`
	// Source interface name. The structure of `inputDevice` block is documented below.
	InputDevices GetVirtualwanlinkServiceInputDeviceArrayInput `pulumi:"inputDevices"`
	// Enable/disable use of Internet service for application-based load balancing.
	InternetService pulumi.StringInput `pulumi:"internetService"`
	// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
	InternetServiceAppCtrlGroups GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput `pulumi:"internetServiceAppCtrlGroups"`
	// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
	InternetServiceAppCtrls GetVirtualwanlinkServiceInternetServiceAppCtrlArrayInput `pulumi:"internetServiceAppCtrls"`
	// Control-based Internet Service group list. The structure of `internetServiceCtrlGroup` block is documented below.
	InternetServiceCtrlGroups GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayInput `pulumi:"internetServiceCtrlGroups"`
	// Control-based Internet Service ID list. The structure of `internetServiceCtrl` block is documented below.
	InternetServiceCtrls GetVirtualwanlinkServiceInternetServiceCtrlArrayInput `pulumi:"internetServiceCtrls"`
	// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups GetVirtualwanlinkServiceInternetServiceCustomGroupArrayInput `pulumi:"internetServiceCustomGroups"`
	// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms GetVirtualwanlinkServiceInternetServiceCustomArrayInput `pulumi:"internetServiceCustoms"`
	// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups GetVirtualwanlinkServiceInternetServiceGroupArrayInput `pulumi:"internetServiceGroups"`
	// Internet service ID list. The structure of `internetServiceId` block is documented below.
	InternetServiceIds GetVirtualwanlinkServiceInternetServiceIdArrayInput `pulumi:"internetServiceIds"`
	// Internet service name list. The structure of `internetServiceName` block is documented below.
	InternetServiceNames GetVirtualwanlinkServiceInternetServiceNameArrayInput `pulumi:"internetServiceNames"`
	// Coefficient of jitter in the formula of custom-profile-1.
	JitterWeight pulumi.IntInput `pulumi:"jitterWeight"`
	// Coefficient of latency in the formula of custom-profile-1.
	LatencyWeight pulumi.IntInput `pulumi:"latencyWeight"`
	// Link cost factor.
	LinkCostFactor pulumi.StringInput `pulumi:"linkCostFactor"`
	// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
	LinkCostThreshold pulumi.IntInput `pulumi:"linkCostThreshold"`
	// Member sequence number.
	Member pulumi.IntInput `pulumi:"member"`
	// Control how the priority rule sets the priority of interfaces in the SD-WAN.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
	// Coefficient of packet-loss in the formula of custom-profile-1.
	PacketLossWeight pulumi.IntInput `pulumi:"packetLossWeight"`
	// Member sequence number list. The structure of `priorityMembers` block is documented below.
	PriorityMembers GetVirtualwanlinkServicePriorityMemberArrayInput `pulumi:"priorityMembers"`
	// Protocol number.
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// Quality grade.
	QualityLink pulumi.IntInput `pulumi:"qualityLink"`
	// Service role to work with neighbor.
	Role pulumi.StringInput `pulumi:"role"`
	// IPv4 route map route-tag.
	RouteTag pulumi.IntInput `pulumi:"routeTag"`
	// Method to compare SLA value for sla and load balance mode.
	SlaCompareMethod pulumi.StringInput `pulumi:"slaCompareMethod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas GetVirtualwanlinkServiceSlaArrayInput `pulumi:"slas"`
	// Source address6 name. The structure of `src6` block is documented below.
	Src6s GetVirtualwanlinkServiceSrc6ArrayInput `pulumi:"src6s"`
	// Enable/disable negation of source address match.
	SrcNegate pulumi.StringInput `pulumi:"srcNegate"`
	// Source address name. The structure of `src` block is documented below.
	Srcs GetVirtualwanlinkServiceSrcArrayInput `pulumi:"srcs"`
	// Enable/disable service when selected neighbor role is standalone while service role is not standalone.
	StandaloneAction pulumi.StringInput `pulumi:"standaloneAction"`
	// Start destination port number.
	StartPort pulumi.IntInput `pulumi:"startPort"`
	// Enable/disable SD-WAN service.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of service bit pattern.
	Tos pulumi.StringInput `pulumi:"tos"`
	// Type of service evaluated bits.
	TosMask pulumi.StringInput `pulumi:"tosMask"`
	// User name. The structure of `users` block is documented below.
	Users GetVirtualwanlinkServiceUserArrayInput `pulumi:"users"`
}

func (GetVirtualwanlinkServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkService)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceArgs) ToGetVirtualwanlinkServiceOutput() GetVirtualwanlinkServiceOutput {
	return i.ToGetVirtualwanlinkServiceOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceArgs) ToGetVirtualwanlinkServiceOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceOutput)
}

// GetVirtualwanlinkServiceArrayInput is an input type that accepts GetVirtualwanlinkServiceArray and GetVirtualwanlinkServiceArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceArrayInput` via:
//
//	GetVirtualwanlinkServiceArray{ GetVirtualwanlinkServiceArgs{...} }
type GetVirtualwanlinkServiceArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceArrayOutput() GetVirtualwanlinkServiceArrayOutput
	ToGetVirtualwanlinkServiceArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceArrayOutput
}

type GetVirtualwanlinkServiceArray []GetVirtualwanlinkServiceInput

func (GetVirtualwanlinkServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkService)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceArray) ToGetVirtualwanlinkServiceArrayOutput() GetVirtualwanlinkServiceArrayOutput {
	return i.ToGetVirtualwanlinkServiceArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceArray) ToGetVirtualwanlinkServiceArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceArrayOutput)
}

type GetVirtualwanlinkServiceOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkService)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceOutput) ToGetVirtualwanlinkServiceOutput() GetVirtualwanlinkServiceOutput {
	return o
}

func (o GetVirtualwanlinkServiceOutput) ToGetVirtualwanlinkServiceOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceOutput {
	return o
}

// Address mode (IPv4 or IPv6).
func (o GetVirtualwanlinkServiceOutput) AddrMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.AddrMode }).(pulumi.StringOutput)
}

// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
func (o GetVirtualwanlinkServiceOutput) BandwidthWeight() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.BandwidthWeight }).(pulumi.IntOutput)
}

// Enable/disable use of SD-WAN as default service.
func (o GetVirtualwanlinkServiceOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.Default }).(pulumi.StringOutput)
}

// Enable/disable forward traffic DSCP tag.
func (o GetVirtualwanlinkServiceOutput) DscpForward() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.DscpForward }).(pulumi.StringOutput)
}

// Forward traffic DSCP tag.
func (o GetVirtualwanlinkServiceOutput) DscpForwardTag() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.DscpForwardTag }).(pulumi.StringOutput)
}

// Enable/disable reverse traffic DSCP tag.
func (o GetVirtualwanlinkServiceOutput) DscpReverse() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.DscpReverse }).(pulumi.StringOutput)
}

// Reverse traffic DSCP tag.
func (o GetVirtualwanlinkServiceOutput) DscpReverseTag() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.DscpReverseTag }).(pulumi.StringOutput)
}

// Destination address6 name. The structure of `dst6` block is documented below.
func (o GetVirtualwanlinkServiceOutput) Dst6s() GetVirtualwanlinkServiceDst6ArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceDst6 { return v.Dst6s }).(GetVirtualwanlinkServiceDst6ArrayOutput)
}

// Enable/disable negation of destination address match.
func (o GetVirtualwanlinkServiceOutput) DstNegate() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.DstNegate }).(pulumi.StringOutput)
}

// Destination address name. The structure of `dst` block is documented below.
func (o GetVirtualwanlinkServiceOutput) Dsts() GetVirtualwanlinkServiceDstArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceDst { return v.Dsts }).(GetVirtualwanlinkServiceDstArrayOutput)
}

// End destination port number.
func (o GetVirtualwanlinkServiceOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.EndPort }).(pulumi.IntOutput)
}

// Enable/disable SD-WAN service gateway.
func (o GetVirtualwanlinkServiceOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.Gateway }).(pulumi.StringOutput)
}

// User groups. The structure of `groups` block is documented below.
func (o GetVirtualwanlinkServiceOutput) Groups() GetVirtualwanlinkServiceGroupArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceGroup { return v.Groups }).(GetVirtualwanlinkServiceGroupArrayOutput)
}

// Virtual WAN Link health-check.
func (o GetVirtualwanlinkServiceOutput) HealthCheck() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.HealthCheck }).(pulumi.StringOutput)
}

// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
func (o GetVirtualwanlinkServiceOutput) HoldDownTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.HoldDownTime }).(pulumi.IntOutput)
}

// SLA ID.
func (o GetVirtualwanlinkServiceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.Id }).(pulumi.IntOutput)
}

// Enable/disable negation of input device match.
func (o GetVirtualwanlinkServiceOutput) InputDeviceNegate() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.InputDeviceNegate }).(pulumi.StringOutput)
}

// Source interface name. The structure of `inputDevice` block is documented below.
func (o GetVirtualwanlinkServiceOutput) InputDevices() GetVirtualwanlinkServiceInputDeviceArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceInputDevice { return v.InputDevices }).(GetVirtualwanlinkServiceInputDeviceArrayOutput)
}

// Enable/disable use of Internet service for application-based load balancing.
func (o GetVirtualwanlinkServiceOutput) InternetService() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.InternetService }).(pulumi.StringOutput)
}

// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
func (o GetVirtualwanlinkServiceOutput) InternetServiceAppCtrlGroups() GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceInternetServiceAppCtrlGroup {
		return v.InternetServiceAppCtrlGroups
	}).(GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput)
}

// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
func (o GetVirtualwanlinkServiceOutput) InternetServiceAppCtrls() GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceInternetServiceAppCtrl {
		return v.InternetServiceAppCtrls
	}).(GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput)
}

// Control-based Internet Service group list. The structure of `internetServiceCtrlGroup` block is documented below.
func (o GetVirtualwanlinkServiceOutput) InternetServiceCtrlGroups() GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceInternetServiceCtrlGroup {
		return v.InternetServiceCtrlGroups
	}).(GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput)
}

// Control-based Internet Service ID list. The structure of `internetServiceCtrl` block is documented below.
func (o GetVirtualwanlinkServiceOutput) InternetServiceCtrls() GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceInternetServiceCtrl {
		return v.InternetServiceCtrls
	}).(GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput)
}

// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
func (o GetVirtualwanlinkServiceOutput) InternetServiceCustomGroups() GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceInternetServiceCustomGroup {
		return v.InternetServiceCustomGroups
	}).(GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput)
}

// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
func (o GetVirtualwanlinkServiceOutput) InternetServiceCustoms() GetVirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceInternetServiceCustom {
		return v.InternetServiceCustoms
	}).(GetVirtualwanlinkServiceInternetServiceCustomArrayOutput)
}

// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
func (o GetVirtualwanlinkServiceOutput) InternetServiceGroups() GetVirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceInternetServiceGroup {
		return v.InternetServiceGroups
	}).(GetVirtualwanlinkServiceInternetServiceGroupArrayOutput)
}

// Internet service ID list. The structure of `internetServiceId` block is documented below.
func (o GetVirtualwanlinkServiceOutput) InternetServiceIds() GetVirtualwanlinkServiceInternetServiceIdArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceInternetServiceId {
		return v.InternetServiceIds
	}).(GetVirtualwanlinkServiceInternetServiceIdArrayOutput)
}

// Internet service name list. The structure of `internetServiceName` block is documented below.
func (o GetVirtualwanlinkServiceOutput) InternetServiceNames() GetVirtualwanlinkServiceInternetServiceNameArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceInternetServiceName {
		return v.InternetServiceNames
	}).(GetVirtualwanlinkServiceInternetServiceNameArrayOutput)
}

// Coefficient of jitter in the formula of custom-profile-1.
func (o GetVirtualwanlinkServiceOutput) JitterWeight() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.JitterWeight }).(pulumi.IntOutput)
}

// Coefficient of latency in the formula of custom-profile-1.
func (o GetVirtualwanlinkServiceOutput) LatencyWeight() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.LatencyWeight }).(pulumi.IntOutput)
}

// Link cost factor.
func (o GetVirtualwanlinkServiceOutput) LinkCostFactor() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.LinkCostFactor }).(pulumi.StringOutput)
}

// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
func (o GetVirtualwanlinkServiceOutput) LinkCostThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.LinkCostThreshold }).(pulumi.IntOutput)
}

// Member sequence number.
func (o GetVirtualwanlinkServiceOutput) Member() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.Member }).(pulumi.IntOutput)
}

// Control how the priority rule sets the priority of interfaces in the SD-WAN.
func (o GetVirtualwanlinkServiceOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.Mode }).(pulumi.StringOutput)
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.Name }).(pulumi.StringOutput)
}

// Coefficient of packet-loss in the formula of custom-profile-1.
func (o GetVirtualwanlinkServiceOutput) PacketLossWeight() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.PacketLossWeight }).(pulumi.IntOutput)
}

// Member sequence number list. The structure of `priorityMembers` block is documented below.
func (o GetVirtualwanlinkServiceOutput) PriorityMembers() GetVirtualwanlinkServicePriorityMemberArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServicePriorityMember { return v.PriorityMembers }).(GetVirtualwanlinkServicePriorityMemberArrayOutput)
}

// Protocol number.
func (o GetVirtualwanlinkServiceOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.Protocol }).(pulumi.IntOutput)
}

// Quality grade.
func (o GetVirtualwanlinkServiceOutput) QualityLink() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.QualityLink }).(pulumi.IntOutput)
}

// Service role to work with neighbor.
func (o GetVirtualwanlinkServiceOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.Role }).(pulumi.StringOutput)
}

// IPv4 route map route-tag.
func (o GetVirtualwanlinkServiceOutput) RouteTag() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.RouteTag }).(pulumi.IntOutput)
}

// Method to compare SLA value for sla and load balance mode.
func (o GetVirtualwanlinkServiceOutput) SlaCompareMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.SlaCompareMethod }).(pulumi.StringOutput)
}

// Service level agreement (SLA). The structure of `sla` block is documented below.
func (o GetVirtualwanlinkServiceOutput) Slas() GetVirtualwanlinkServiceSlaArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceSla { return v.Slas }).(GetVirtualwanlinkServiceSlaArrayOutput)
}

// Source address6 name. The structure of `src6` block is documented below.
func (o GetVirtualwanlinkServiceOutput) Src6s() GetVirtualwanlinkServiceSrc6ArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceSrc6 { return v.Src6s }).(GetVirtualwanlinkServiceSrc6ArrayOutput)
}

// Enable/disable negation of source address match.
func (o GetVirtualwanlinkServiceOutput) SrcNegate() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.SrcNegate }).(pulumi.StringOutput)
}

// Source address name. The structure of `src` block is documented below.
func (o GetVirtualwanlinkServiceOutput) Srcs() GetVirtualwanlinkServiceSrcArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceSrc { return v.Srcs }).(GetVirtualwanlinkServiceSrcArrayOutput)
}

// Enable/disable service when selected neighbor role is standalone while service role is not standalone.
func (o GetVirtualwanlinkServiceOutput) StandaloneAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.StandaloneAction }).(pulumi.StringOutput)
}

// Start destination port number.
func (o GetVirtualwanlinkServiceOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) int { return v.StartPort }).(pulumi.IntOutput)
}

// Enable/disable SD-WAN service.
func (o GetVirtualwanlinkServiceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.Status }).(pulumi.StringOutput)
}

// Type of service bit pattern.
func (o GetVirtualwanlinkServiceOutput) Tos() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.Tos }).(pulumi.StringOutput)
}

// Type of service evaluated bits.
func (o GetVirtualwanlinkServiceOutput) TosMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) string { return v.TosMask }).(pulumi.StringOutput)
}

// User name. The structure of `users` block is documented below.
func (o GetVirtualwanlinkServiceOutput) Users() GetVirtualwanlinkServiceUserArrayOutput {
	return o.ApplyT(func(v GetVirtualwanlinkService) []GetVirtualwanlinkServiceUser { return v.Users }).(GetVirtualwanlinkServiceUserArrayOutput)
}

type GetVirtualwanlinkServiceArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkService)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceArrayOutput) ToGetVirtualwanlinkServiceArrayOutput() GetVirtualwanlinkServiceArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceArrayOutput) ToGetVirtualwanlinkServiceArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkService {
		return vs[0].([]GetVirtualwanlinkService)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceOutput)
}

type GetVirtualwanlinkServiceDst6 struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceDst6Input is an input type that accepts GetVirtualwanlinkServiceDst6Args and GetVirtualwanlinkServiceDst6Output values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceDst6Input` via:
//
//	GetVirtualwanlinkServiceDst6Args{...}
type GetVirtualwanlinkServiceDst6Input interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceDst6Output() GetVirtualwanlinkServiceDst6Output
	ToGetVirtualwanlinkServiceDst6OutputWithContext(context.Context) GetVirtualwanlinkServiceDst6Output
}

type GetVirtualwanlinkServiceDst6Args struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceDst6)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceDst6Args) ToGetVirtualwanlinkServiceDst6Output() GetVirtualwanlinkServiceDst6Output {
	return i.ToGetVirtualwanlinkServiceDst6OutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceDst6Args) ToGetVirtualwanlinkServiceDst6OutputWithContext(ctx context.Context) GetVirtualwanlinkServiceDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceDst6Output)
}

// GetVirtualwanlinkServiceDst6ArrayInput is an input type that accepts GetVirtualwanlinkServiceDst6Array and GetVirtualwanlinkServiceDst6ArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceDst6ArrayInput` via:
//
//	GetVirtualwanlinkServiceDst6Array{ GetVirtualwanlinkServiceDst6Args{...} }
type GetVirtualwanlinkServiceDst6ArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceDst6ArrayOutput() GetVirtualwanlinkServiceDst6ArrayOutput
	ToGetVirtualwanlinkServiceDst6ArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceDst6ArrayOutput
}

type GetVirtualwanlinkServiceDst6Array []GetVirtualwanlinkServiceDst6Input

func (GetVirtualwanlinkServiceDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceDst6)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceDst6Array) ToGetVirtualwanlinkServiceDst6ArrayOutput() GetVirtualwanlinkServiceDst6ArrayOutput {
	return i.ToGetVirtualwanlinkServiceDst6ArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceDst6Array) ToGetVirtualwanlinkServiceDst6ArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceDst6ArrayOutput)
}

type GetVirtualwanlinkServiceDst6Output struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceDst6)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceDst6Output) ToGetVirtualwanlinkServiceDst6Output() GetVirtualwanlinkServiceDst6Output {
	return o
}

func (o GetVirtualwanlinkServiceDst6Output) ToGetVirtualwanlinkServiceDst6OutputWithContext(ctx context.Context) GetVirtualwanlinkServiceDst6Output {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceDst6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceDst6) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceDst6ArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceDst6)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceDst6ArrayOutput) ToGetVirtualwanlinkServiceDst6ArrayOutput() GetVirtualwanlinkServiceDst6ArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceDst6ArrayOutput) ToGetVirtualwanlinkServiceDst6ArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceDst6ArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceDst6ArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceDst6 {
		return vs[0].([]GetVirtualwanlinkServiceDst6)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceDst6Output)
}

type GetVirtualwanlinkServiceDst struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceDstInput is an input type that accepts GetVirtualwanlinkServiceDstArgs and GetVirtualwanlinkServiceDstOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceDstInput` via:
//
//	GetVirtualwanlinkServiceDstArgs{...}
type GetVirtualwanlinkServiceDstInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceDstOutput() GetVirtualwanlinkServiceDstOutput
	ToGetVirtualwanlinkServiceDstOutputWithContext(context.Context) GetVirtualwanlinkServiceDstOutput
}

type GetVirtualwanlinkServiceDstArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceDst)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceDstArgs) ToGetVirtualwanlinkServiceDstOutput() GetVirtualwanlinkServiceDstOutput {
	return i.ToGetVirtualwanlinkServiceDstOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceDstArgs) ToGetVirtualwanlinkServiceDstOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceDstOutput)
}

// GetVirtualwanlinkServiceDstArrayInput is an input type that accepts GetVirtualwanlinkServiceDstArray and GetVirtualwanlinkServiceDstArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceDstArrayInput` via:
//
//	GetVirtualwanlinkServiceDstArray{ GetVirtualwanlinkServiceDstArgs{...} }
type GetVirtualwanlinkServiceDstArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceDstArrayOutput() GetVirtualwanlinkServiceDstArrayOutput
	ToGetVirtualwanlinkServiceDstArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceDstArrayOutput
}

type GetVirtualwanlinkServiceDstArray []GetVirtualwanlinkServiceDstInput

func (GetVirtualwanlinkServiceDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceDst)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceDstArray) ToGetVirtualwanlinkServiceDstArrayOutput() GetVirtualwanlinkServiceDstArrayOutput {
	return i.ToGetVirtualwanlinkServiceDstArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceDstArray) ToGetVirtualwanlinkServiceDstArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceDstArrayOutput)
}

type GetVirtualwanlinkServiceDstOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceDst)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceDstOutput) ToGetVirtualwanlinkServiceDstOutput() GetVirtualwanlinkServiceDstOutput {
	return o
}

func (o GetVirtualwanlinkServiceDstOutput) ToGetVirtualwanlinkServiceDstOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceDstOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceDstOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceDst) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceDstArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceDst)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceDstArrayOutput) ToGetVirtualwanlinkServiceDstArrayOutput() GetVirtualwanlinkServiceDstArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceDstArrayOutput) ToGetVirtualwanlinkServiceDstArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceDstArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceDstArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceDst {
		return vs[0].([]GetVirtualwanlinkServiceDst)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceDstOutput)
}

type GetVirtualwanlinkServiceGroup struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceGroupInput is an input type that accepts GetVirtualwanlinkServiceGroupArgs and GetVirtualwanlinkServiceGroupOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceGroupInput` via:
//
//	GetVirtualwanlinkServiceGroupArgs{...}
type GetVirtualwanlinkServiceGroupInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceGroupOutput() GetVirtualwanlinkServiceGroupOutput
	ToGetVirtualwanlinkServiceGroupOutputWithContext(context.Context) GetVirtualwanlinkServiceGroupOutput
}

type GetVirtualwanlinkServiceGroupArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceGroup)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceGroupArgs) ToGetVirtualwanlinkServiceGroupOutput() GetVirtualwanlinkServiceGroupOutput {
	return i.ToGetVirtualwanlinkServiceGroupOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceGroupArgs) ToGetVirtualwanlinkServiceGroupOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceGroupOutput)
}

// GetVirtualwanlinkServiceGroupArrayInput is an input type that accepts GetVirtualwanlinkServiceGroupArray and GetVirtualwanlinkServiceGroupArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceGroupArrayInput` via:
//
//	GetVirtualwanlinkServiceGroupArray{ GetVirtualwanlinkServiceGroupArgs{...} }
type GetVirtualwanlinkServiceGroupArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceGroupArrayOutput() GetVirtualwanlinkServiceGroupArrayOutput
	ToGetVirtualwanlinkServiceGroupArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceGroupArrayOutput
}

type GetVirtualwanlinkServiceGroupArray []GetVirtualwanlinkServiceGroupInput

func (GetVirtualwanlinkServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceGroup)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceGroupArray) ToGetVirtualwanlinkServiceGroupArrayOutput() GetVirtualwanlinkServiceGroupArrayOutput {
	return i.ToGetVirtualwanlinkServiceGroupArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceGroupArray) ToGetVirtualwanlinkServiceGroupArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceGroupArrayOutput)
}

type GetVirtualwanlinkServiceGroupOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceGroup)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceGroupOutput) ToGetVirtualwanlinkServiceGroupOutput() GetVirtualwanlinkServiceGroupOutput {
	return o
}

func (o GetVirtualwanlinkServiceGroupOutput) ToGetVirtualwanlinkServiceGroupOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceGroupOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceGroup)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceGroupArrayOutput) ToGetVirtualwanlinkServiceGroupArrayOutput() GetVirtualwanlinkServiceGroupArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceGroupArrayOutput) ToGetVirtualwanlinkServiceGroupArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceGroupArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceGroupArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceGroup {
		return vs[0].([]GetVirtualwanlinkServiceGroup)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceGroupOutput)
}

type GetVirtualwanlinkServiceInputDevice struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceInputDeviceInput is an input type that accepts GetVirtualwanlinkServiceInputDeviceArgs and GetVirtualwanlinkServiceInputDeviceOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInputDeviceInput` via:
//
//	GetVirtualwanlinkServiceInputDeviceArgs{...}
type GetVirtualwanlinkServiceInputDeviceInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInputDeviceOutput() GetVirtualwanlinkServiceInputDeviceOutput
	ToGetVirtualwanlinkServiceInputDeviceOutputWithContext(context.Context) GetVirtualwanlinkServiceInputDeviceOutput
}

type GetVirtualwanlinkServiceInputDeviceArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInputDeviceArgs) ToGetVirtualwanlinkServiceInputDeviceOutput() GetVirtualwanlinkServiceInputDeviceOutput {
	return i.ToGetVirtualwanlinkServiceInputDeviceOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInputDeviceArgs) ToGetVirtualwanlinkServiceInputDeviceOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInputDeviceOutput)
}

// GetVirtualwanlinkServiceInputDeviceArrayInput is an input type that accepts GetVirtualwanlinkServiceInputDeviceArray and GetVirtualwanlinkServiceInputDeviceArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInputDeviceArrayInput` via:
//
//	GetVirtualwanlinkServiceInputDeviceArray{ GetVirtualwanlinkServiceInputDeviceArgs{...} }
type GetVirtualwanlinkServiceInputDeviceArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInputDeviceArrayOutput() GetVirtualwanlinkServiceInputDeviceArrayOutput
	ToGetVirtualwanlinkServiceInputDeviceArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceInputDeviceArrayOutput
}

type GetVirtualwanlinkServiceInputDeviceArray []GetVirtualwanlinkServiceInputDeviceInput

func (GetVirtualwanlinkServiceInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInputDeviceArray) ToGetVirtualwanlinkServiceInputDeviceArrayOutput() GetVirtualwanlinkServiceInputDeviceArrayOutput {
	return i.ToGetVirtualwanlinkServiceInputDeviceArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInputDeviceArray) ToGetVirtualwanlinkServiceInputDeviceArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInputDeviceArrayOutput)
}

type GetVirtualwanlinkServiceInputDeviceOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInputDeviceOutput) ToGetVirtualwanlinkServiceInputDeviceOutput() GetVirtualwanlinkServiceInputDeviceOutput {
	return o
}

func (o GetVirtualwanlinkServiceInputDeviceOutput) ToGetVirtualwanlinkServiceInputDeviceOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInputDeviceOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceInputDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceInputDevice) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInputDeviceArrayOutput) ToGetVirtualwanlinkServiceInputDeviceArrayOutput() GetVirtualwanlinkServiceInputDeviceArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInputDeviceArrayOutput) ToGetVirtualwanlinkServiceInputDeviceArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInputDeviceArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInputDeviceArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceInputDevice {
		return vs[0].([]GetVirtualwanlinkServiceInputDevice)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceInputDeviceOutput)
}

type GetVirtualwanlinkServiceInternetServiceAppCtrl struct {
	// SLA ID.
	Id int `pulumi:"id"`
}

// GetVirtualwanlinkServiceInternetServiceAppCtrlInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceAppCtrlArgs and GetVirtualwanlinkServiceInternetServiceAppCtrlOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceAppCtrlInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceAppCtrlArgs{...}
type GetVirtualwanlinkServiceInternetServiceAppCtrlInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceAppCtrlOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlOutput
	ToGetVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlOutput
}

type GetVirtualwanlinkServiceInternetServiceAppCtrlArgs struct {
	// SLA ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetVirtualwanlinkServiceInternetServiceAppCtrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceAppCtrlArgs) ToGetVirtualwanlinkServiceInternetServiceAppCtrlOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceAppCtrlArgs) ToGetVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceAppCtrlOutput)
}

// GetVirtualwanlinkServiceInternetServiceAppCtrlArrayInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceAppCtrlArray and GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceAppCtrlArrayInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceAppCtrlArray{ GetVirtualwanlinkServiceInternetServiceAppCtrlArgs{...} }
type GetVirtualwanlinkServiceInternetServiceAppCtrlArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput
	ToGetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput
}

type GetVirtualwanlinkServiceInternetServiceAppCtrlArray []GetVirtualwanlinkServiceInternetServiceAppCtrlInput

func (GetVirtualwanlinkServiceInternetServiceAppCtrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceAppCtrlArray) ToGetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceAppCtrlArray) ToGetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput)
}

type GetVirtualwanlinkServiceInternetServiceAppCtrlOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceAppCtrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceAppCtrlOutput) ToGetVirtualwanlinkServiceInternetServiceAppCtrlOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceAppCtrlOutput) ToGetVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return o
}

// SLA ID.
func (o GetVirtualwanlinkServiceInternetServiceAppCtrlOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceInternetServiceAppCtrl) int { return v.Id }).(pulumi.IntOutput)
}

type GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) ToGetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) ToGetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceInternetServiceAppCtrl {
		return vs[0].([]GetVirtualwanlinkServiceInternetServiceAppCtrl)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceInternetServiceAppCtrlOutput)
}

type GetVirtualwanlinkServiceInternetServiceAppCtrlGroup struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceInternetServiceAppCtrlGroupInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs and GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceAppCtrlGroupInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs{...}
type GetVirtualwanlinkServiceInternetServiceAppCtrlGroupInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput
	ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput
}

type GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs) ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs) ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput)
}

// GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArray and GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArray{ GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs{...} }
type GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput
	ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput
}

type GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArray []GetVirtualwanlinkServiceInternetServiceAppCtrlGroupInput

func (GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArray) ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArray) ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput)
}

type GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceInternetServiceAppCtrlGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) ToGetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceInternetServiceAppCtrlGroup {
		return vs[0].([]GetVirtualwanlinkServiceInternetServiceAppCtrlGroup)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput)
}

type GetVirtualwanlinkServiceInternetServiceCtrl struct {
	// SLA ID.
	Id int `pulumi:"id"`
}

// GetVirtualwanlinkServiceInternetServiceCtrlInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceCtrlArgs and GetVirtualwanlinkServiceInternetServiceCtrlOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceCtrlInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceCtrlArgs{...}
type GetVirtualwanlinkServiceInternetServiceCtrlInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceCtrlOutput() GetVirtualwanlinkServiceInternetServiceCtrlOutput
	ToGetVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceCtrlOutput
}

type GetVirtualwanlinkServiceInternetServiceCtrlArgs struct {
	// SLA ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetVirtualwanlinkServiceInternetServiceCtrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceCtrlArgs) ToGetVirtualwanlinkServiceInternetServiceCtrlOutput() GetVirtualwanlinkServiceInternetServiceCtrlOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceCtrlArgs) ToGetVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCtrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceCtrlOutput)
}

// GetVirtualwanlinkServiceInternetServiceCtrlArrayInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceCtrlArray and GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceCtrlArrayInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceCtrlArray{ GetVirtualwanlinkServiceInternetServiceCtrlArgs{...} }
type GetVirtualwanlinkServiceInternetServiceCtrlArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceCtrlArrayOutput() GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput
	ToGetVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput
}

type GetVirtualwanlinkServiceInternetServiceCtrlArray []GetVirtualwanlinkServiceInternetServiceCtrlInput

func (GetVirtualwanlinkServiceInternetServiceCtrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceCtrlArray) ToGetVirtualwanlinkServiceInternetServiceCtrlArrayOutput() GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceCtrlArray) ToGetVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput)
}

type GetVirtualwanlinkServiceInternetServiceCtrlOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceCtrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceCtrlOutput) ToGetVirtualwanlinkServiceInternetServiceCtrlOutput() GetVirtualwanlinkServiceInternetServiceCtrlOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCtrlOutput) ToGetVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCtrlOutput {
	return o
}

// SLA ID.
func (o GetVirtualwanlinkServiceInternetServiceCtrlOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceInternetServiceCtrl) int { return v.Id }).(pulumi.IntOutput)
}

type GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput) ToGetVirtualwanlinkServiceInternetServiceCtrlArrayOutput() GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput) ToGetVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceInternetServiceCtrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceInternetServiceCtrl {
		return vs[0].([]GetVirtualwanlinkServiceInternetServiceCtrl)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceInternetServiceCtrlOutput)
}

type GetVirtualwanlinkServiceInternetServiceCtrlGroup struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceInternetServiceCtrlGroupInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceCtrlGroupArgs and GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceCtrlGroupInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceCtrlGroupArgs{...}
type GetVirtualwanlinkServiceInternetServiceCtrlGroupInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceCtrlGroupOutput() GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput
	ToGetVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput
}

type GetVirtualwanlinkServiceInternetServiceCtrlGroupArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceInternetServiceCtrlGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceCtrlGroupArgs) ToGetVirtualwanlinkServiceInternetServiceCtrlGroupOutput() GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceCtrlGroupArgs) ToGetVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput)
}

// GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceCtrlGroupArray and GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceCtrlGroupArray{ GetVirtualwanlinkServiceInternetServiceCtrlGroupArgs{...} }
type GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput
	ToGetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput
}

type GetVirtualwanlinkServiceInternetServiceCtrlGroupArray []GetVirtualwanlinkServiceInternetServiceCtrlGroupInput

func (GetVirtualwanlinkServiceInternetServiceCtrlGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceCtrlGroupArray) ToGetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceCtrlGroupArray) ToGetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput)
}

type GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput) ToGetVirtualwanlinkServiceInternetServiceCtrlGroupOutput() GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput) ToGetVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceInternetServiceCtrlGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) ToGetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) ToGetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceInternetServiceCtrlGroup {
		return vs[0].([]GetVirtualwanlinkServiceInternetServiceCtrlGroup)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput)
}

type GetVirtualwanlinkServiceInternetServiceCustom struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceInternetServiceCustomInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceCustomArgs and GetVirtualwanlinkServiceInternetServiceCustomOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceCustomInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceCustomArgs{...}
type GetVirtualwanlinkServiceInternetServiceCustomInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceCustomOutput() GetVirtualwanlinkServiceInternetServiceCustomOutput
	ToGetVirtualwanlinkServiceInternetServiceCustomOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceCustomOutput
}

type GetVirtualwanlinkServiceInternetServiceCustomArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceCustomArgs) ToGetVirtualwanlinkServiceInternetServiceCustomOutput() GetVirtualwanlinkServiceInternetServiceCustomOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceCustomOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceCustomArgs) ToGetVirtualwanlinkServiceInternetServiceCustomOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceCustomOutput)
}

// GetVirtualwanlinkServiceInternetServiceCustomArrayInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceCustomArray and GetVirtualwanlinkServiceInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceCustomArrayInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceCustomArray{ GetVirtualwanlinkServiceInternetServiceCustomArgs{...} }
type GetVirtualwanlinkServiceInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceCustomArrayOutput() GetVirtualwanlinkServiceInternetServiceCustomArrayOutput
	ToGetVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceCustomArrayOutput
}

type GetVirtualwanlinkServiceInternetServiceCustomArray []GetVirtualwanlinkServiceInternetServiceCustomInput

func (GetVirtualwanlinkServiceInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceCustomArray) ToGetVirtualwanlinkServiceInternetServiceCustomArrayOutput() GetVirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceCustomArray) ToGetVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceCustomArrayOutput)
}

type GetVirtualwanlinkServiceInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceCustomOutput) ToGetVirtualwanlinkServiceInternetServiceCustomOutput() GetVirtualwanlinkServiceInternetServiceCustomOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCustomOutput) ToGetVirtualwanlinkServiceInternetServiceCustomOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCustomOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceInternetServiceCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceInternetServiceCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceCustomArrayOutput) ToGetVirtualwanlinkServiceInternetServiceCustomArrayOutput() GetVirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCustomArrayOutput) ToGetVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceInternetServiceCustom {
		return vs[0].([]GetVirtualwanlinkServiceInternetServiceCustom)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceInternetServiceCustomOutput)
}

type GetVirtualwanlinkServiceInternetServiceCustomGroup struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceInternetServiceCustomGroupInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceCustomGroupArgs and GetVirtualwanlinkServiceInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceCustomGroupInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceCustomGroupArgs{...}
type GetVirtualwanlinkServiceInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceCustomGroupOutput() GetVirtualwanlinkServiceInternetServiceCustomGroupOutput
	ToGetVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceCustomGroupOutput
}

type GetVirtualwanlinkServiceInternetServiceCustomGroupArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceCustomGroupArgs) ToGetVirtualwanlinkServiceInternetServiceCustomGroupOutput() GetVirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceCustomGroupArgs) ToGetVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceCustomGroupOutput)
}

// GetVirtualwanlinkServiceInternetServiceCustomGroupArrayInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceCustomGroupArray and GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceCustomGroupArrayInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceCustomGroupArray{ GetVirtualwanlinkServiceInternetServiceCustomGroupArgs{...} }
type GetVirtualwanlinkServiceInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput
	ToGetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput
}

type GetVirtualwanlinkServiceInternetServiceCustomGroupArray []GetVirtualwanlinkServiceInternetServiceCustomGroupInput

func (GetVirtualwanlinkServiceInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceCustomGroupArray) ToGetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceCustomGroupArray) ToGetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput)
}

type GetVirtualwanlinkServiceInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceCustomGroupOutput) ToGetVirtualwanlinkServiceInternetServiceCustomGroupOutput() GetVirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCustomGroupOutput) ToGetVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceInternetServiceCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceInternetServiceCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) ToGetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) ToGetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceInternetServiceCustomGroup {
		return vs[0].([]GetVirtualwanlinkServiceInternetServiceCustomGroup)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceInternetServiceCustomGroupOutput)
}

type GetVirtualwanlinkServiceInternetServiceGroup struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceInternetServiceGroupInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceGroupArgs and GetVirtualwanlinkServiceInternetServiceGroupOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceGroupInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceGroupArgs{...}
type GetVirtualwanlinkServiceInternetServiceGroupInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceGroupOutput() GetVirtualwanlinkServiceInternetServiceGroupOutput
	ToGetVirtualwanlinkServiceInternetServiceGroupOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceGroupOutput
}

type GetVirtualwanlinkServiceInternetServiceGroupArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceGroupArgs) ToGetVirtualwanlinkServiceInternetServiceGroupOutput() GetVirtualwanlinkServiceInternetServiceGroupOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceGroupOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceGroupArgs) ToGetVirtualwanlinkServiceInternetServiceGroupOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceGroupOutput)
}

// GetVirtualwanlinkServiceInternetServiceGroupArrayInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceGroupArray and GetVirtualwanlinkServiceInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceGroupArrayInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceGroupArray{ GetVirtualwanlinkServiceInternetServiceGroupArgs{...} }
type GetVirtualwanlinkServiceInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceGroupArrayOutput
	ToGetVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceGroupArrayOutput
}

type GetVirtualwanlinkServiceInternetServiceGroupArray []GetVirtualwanlinkServiceInternetServiceGroupInput

func (GetVirtualwanlinkServiceInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceGroupArray) ToGetVirtualwanlinkServiceInternetServiceGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceGroupArray) ToGetVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceGroupArrayOutput)
}

type GetVirtualwanlinkServiceInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceGroupOutput) ToGetVirtualwanlinkServiceInternetServiceGroupOutput() GetVirtualwanlinkServiceInternetServiceGroupOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceGroupOutput) ToGetVirtualwanlinkServiceInternetServiceGroupOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceGroupOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceInternetServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceInternetServiceGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceGroupArrayOutput) ToGetVirtualwanlinkServiceInternetServiceGroupArrayOutput() GetVirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceGroupArrayOutput) ToGetVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceInternetServiceGroup {
		return vs[0].([]GetVirtualwanlinkServiceInternetServiceGroup)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceInternetServiceGroupOutput)
}

type GetVirtualwanlinkServiceInternetServiceId struct {
	// SLA ID.
	Id int `pulumi:"id"`
}

// GetVirtualwanlinkServiceInternetServiceIdInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceIdArgs and GetVirtualwanlinkServiceInternetServiceIdOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceIdInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceIdArgs{...}
type GetVirtualwanlinkServiceInternetServiceIdInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceIdOutput() GetVirtualwanlinkServiceInternetServiceIdOutput
	ToGetVirtualwanlinkServiceInternetServiceIdOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceIdOutput
}

type GetVirtualwanlinkServiceInternetServiceIdArgs struct {
	// SLA ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetVirtualwanlinkServiceInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceIdArgs) ToGetVirtualwanlinkServiceInternetServiceIdOutput() GetVirtualwanlinkServiceInternetServiceIdOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceIdOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceIdArgs) ToGetVirtualwanlinkServiceInternetServiceIdOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceIdOutput)
}

// GetVirtualwanlinkServiceInternetServiceIdArrayInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceIdArray and GetVirtualwanlinkServiceInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceIdArrayInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceIdArray{ GetVirtualwanlinkServiceInternetServiceIdArgs{...} }
type GetVirtualwanlinkServiceInternetServiceIdArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceIdArrayOutput() GetVirtualwanlinkServiceInternetServiceIdArrayOutput
	ToGetVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceIdArrayOutput
}

type GetVirtualwanlinkServiceInternetServiceIdArray []GetVirtualwanlinkServiceInternetServiceIdInput

func (GetVirtualwanlinkServiceInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceIdArray) ToGetVirtualwanlinkServiceInternetServiceIdArrayOutput() GetVirtualwanlinkServiceInternetServiceIdArrayOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceIdArray) ToGetVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceIdArrayOutput)
}

type GetVirtualwanlinkServiceInternetServiceIdOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceIdOutput) ToGetVirtualwanlinkServiceInternetServiceIdOutput() GetVirtualwanlinkServiceInternetServiceIdOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceIdOutput) ToGetVirtualwanlinkServiceInternetServiceIdOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceIdOutput {
	return o
}

// SLA ID.
func (o GetVirtualwanlinkServiceInternetServiceIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceInternetServiceId) int { return v.Id }).(pulumi.IntOutput)
}

type GetVirtualwanlinkServiceInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceIdArrayOutput) ToGetVirtualwanlinkServiceInternetServiceIdArrayOutput() GetVirtualwanlinkServiceInternetServiceIdArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceIdArrayOutput) ToGetVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceIdArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceIdArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceInternetServiceId {
		return vs[0].([]GetVirtualwanlinkServiceInternetServiceId)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceInternetServiceIdOutput)
}

type GetVirtualwanlinkServiceInternetServiceName struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceInternetServiceNameInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceNameArgs and GetVirtualwanlinkServiceInternetServiceNameOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceNameInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceNameArgs{...}
type GetVirtualwanlinkServiceInternetServiceNameInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceNameOutput() GetVirtualwanlinkServiceInternetServiceNameOutput
	ToGetVirtualwanlinkServiceInternetServiceNameOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceNameOutput
}

type GetVirtualwanlinkServiceInternetServiceNameArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceNameArgs) ToGetVirtualwanlinkServiceInternetServiceNameOutput() GetVirtualwanlinkServiceInternetServiceNameOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceNameOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceNameArgs) ToGetVirtualwanlinkServiceInternetServiceNameOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceNameOutput)
}

// GetVirtualwanlinkServiceInternetServiceNameArrayInput is an input type that accepts GetVirtualwanlinkServiceInternetServiceNameArray and GetVirtualwanlinkServiceInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceInternetServiceNameArrayInput` via:
//
//	GetVirtualwanlinkServiceInternetServiceNameArray{ GetVirtualwanlinkServiceInternetServiceNameArgs{...} }
type GetVirtualwanlinkServiceInternetServiceNameArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceInternetServiceNameArrayOutput() GetVirtualwanlinkServiceInternetServiceNameArrayOutput
	ToGetVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceInternetServiceNameArrayOutput
}

type GetVirtualwanlinkServiceInternetServiceNameArray []GetVirtualwanlinkServiceInternetServiceNameInput

func (GetVirtualwanlinkServiceInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceInternetServiceNameArray) ToGetVirtualwanlinkServiceInternetServiceNameArrayOutput() GetVirtualwanlinkServiceInternetServiceNameArrayOutput {
	return i.ToGetVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceInternetServiceNameArray) ToGetVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceInternetServiceNameArrayOutput)
}

type GetVirtualwanlinkServiceInternetServiceNameOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceNameOutput) ToGetVirtualwanlinkServiceInternetServiceNameOutput() GetVirtualwanlinkServiceInternetServiceNameOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceNameOutput) ToGetVirtualwanlinkServiceInternetServiceNameOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceNameOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceInternetServiceNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceInternetServiceName) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceInternetServiceNameArrayOutput) ToGetVirtualwanlinkServiceInternetServiceNameArrayOutput() GetVirtualwanlinkServiceInternetServiceNameArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceNameArrayOutput) ToGetVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceInternetServiceNameArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceInternetServiceNameArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceInternetServiceName {
		return vs[0].([]GetVirtualwanlinkServiceInternetServiceName)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceInternetServiceNameOutput)
}

type GetVirtualwanlinkServicePriorityMember struct {
	// Member sequence number.
	SeqNum int `pulumi:"seqNum"`
}

// GetVirtualwanlinkServicePriorityMemberInput is an input type that accepts GetVirtualwanlinkServicePriorityMemberArgs and GetVirtualwanlinkServicePriorityMemberOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServicePriorityMemberInput` via:
//
//	GetVirtualwanlinkServicePriorityMemberArgs{...}
type GetVirtualwanlinkServicePriorityMemberInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServicePriorityMemberOutput() GetVirtualwanlinkServicePriorityMemberOutput
	ToGetVirtualwanlinkServicePriorityMemberOutputWithContext(context.Context) GetVirtualwanlinkServicePriorityMemberOutput
}

type GetVirtualwanlinkServicePriorityMemberArgs struct {
	// Member sequence number.
	SeqNum pulumi.IntInput `pulumi:"seqNum"`
}

func (GetVirtualwanlinkServicePriorityMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (i GetVirtualwanlinkServicePriorityMemberArgs) ToGetVirtualwanlinkServicePriorityMemberOutput() GetVirtualwanlinkServicePriorityMemberOutput {
	return i.ToGetVirtualwanlinkServicePriorityMemberOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServicePriorityMemberArgs) ToGetVirtualwanlinkServicePriorityMemberOutputWithContext(ctx context.Context) GetVirtualwanlinkServicePriorityMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServicePriorityMemberOutput)
}

// GetVirtualwanlinkServicePriorityMemberArrayInput is an input type that accepts GetVirtualwanlinkServicePriorityMemberArray and GetVirtualwanlinkServicePriorityMemberArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServicePriorityMemberArrayInput` via:
//
//	GetVirtualwanlinkServicePriorityMemberArray{ GetVirtualwanlinkServicePriorityMemberArgs{...} }
type GetVirtualwanlinkServicePriorityMemberArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServicePriorityMemberArrayOutput() GetVirtualwanlinkServicePriorityMemberArrayOutput
	ToGetVirtualwanlinkServicePriorityMemberArrayOutputWithContext(context.Context) GetVirtualwanlinkServicePriorityMemberArrayOutput
}

type GetVirtualwanlinkServicePriorityMemberArray []GetVirtualwanlinkServicePriorityMemberInput

func (GetVirtualwanlinkServicePriorityMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (i GetVirtualwanlinkServicePriorityMemberArray) ToGetVirtualwanlinkServicePriorityMemberArrayOutput() GetVirtualwanlinkServicePriorityMemberArrayOutput {
	return i.ToGetVirtualwanlinkServicePriorityMemberArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServicePriorityMemberArray) ToGetVirtualwanlinkServicePriorityMemberArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServicePriorityMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServicePriorityMemberArrayOutput)
}

type GetVirtualwanlinkServicePriorityMemberOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServicePriorityMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (o GetVirtualwanlinkServicePriorityMemberOutput) ToGetVirtualwanlinkServicePriorityMemberOutput() GetVirtualwanlinkServicePriorityMemberOutput {
	return o
}

func (o GetVirtualwanlinkServicePriorityMemberOutput) ToGetVirtualwanlinkServicePriorityMemberOutputWithContext(ctx context.Context) GetVirtualwanlinkServicePriorityMemberOutput {
	return o
}

// Member sequence number.
func (o GetVirtualwanlinkServicePriorityMemberOutput) SeqNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServicePriorityMember) int { return v.SeqNum }).(pulumi.IntOutput)
}

type GetVirtualwanlinkServicePriorityMemberArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServicePriorityMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (o GetVirtualwanlinkServicePriorityMemberArrayOutput) ToGetVirtualwanlinkServicePriorityMemberArrayOutput() GetVirtualwanlinkServicePriorityMemberArrayOutput {
	return o
}

func (o GetVirtualwanlinkServicePriorityMemberArrayOutput) ToGetVirtualwanlinkServicePriorityMemberArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServicePriorityMemberArrayOutput {
	return o
}

func (o GetVirtualwanlinkServicePriorityMemberArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServicePriorityMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServicePriorityMember {
		return vs[0].([]GetVirtualwanlinkServicePriorityMember)[vs[1].(int)]
	}).(GetVirtualwanlinkServicePriorityMemberOutput)
}

type GetVirtualwanlinkServiceSla struct {
	// Virtual WAN Link health-check.
	HealthCheck string `pulumi:"healthCheck"`
	// SLA ID.
	Id int `pulumi:"id"`
}

// GetVirtualwanlinkServiceSlaInput is an input type that accepts GetVirtualwanlinkServiceSlaArgs and GetVirtualwanlinkServiceSlaOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceSlaInput` via:
//
//	GetVirtualwanlinkServiceSlaArgs{...}
type GetVirtualwanlinkServiceSlaInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceSlaOutput() GetVirtualwanlinkServiceSlaOutput
	ToGetVirtualwanlinkServiceSlaOutputWithContext(context.Context) GetVirtualwanlinkServiceSlaOutput
}

type GetVirtualwanlinkServiceSlaArgs struct {
	// Virtual WAN Link health-check.
	HealthCheck pulumi.StringInput `pulumi:"healthCheck"`
	// SLA ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetVirtualwanlinkServiceSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceSla)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceSlaArgs) ToGetVirtualwanlinkServiceSlaOutput() GetVirtualwanlinkServiceSlaOutput {
	return i.ToGetVirtualwanlinkServiceSlaOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceSlaArgs) ToGetVirtualwanlinkServiceSlaOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceSlaOutput)
}

// GetVirtualwanlinkServiceSlaArrayInput is an input type that accepts GetVirtualwanlinkServiceSlaArray and GetVirtualwanlinkServiceSlaArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceSlaArrayInput` via:
//
//	GetVirtualwanlinkServiceSlaArray{ GetVirtualwanlinkServiceSlaArgs{...} }
type GetVirtualwanlinkServiceSlaArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceSlaArrayOutput() GetVirtualwanlinkServiceSlaArrayOutput
	ToGetVirtualwanlinkServiceSlaArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceSlaArrayOutput
}

type GetVirtualwanlinkServiceSlaArray []GetVirtualwanlinkServiceSlaInput

func (GetVirtualwanlinkServiceSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceSla)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceSlaArray) ToGetVirtualwanlinkServiceSlaArrayOutput() GetVirtualwanlinkServiceSlaArrayOutput {
	return i.ToGetVirtualwanlinkServiceSlaArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceSlaArray) ToGetVirtualwanlinkServiceSlaArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceSlaArrayOutput)
}

type GetVirtualwanlinkServiceSlaOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceSla)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceSlaOutput) ToGetVirtualwanlinkServiceSlaOutput() GetVirtualwanlinkServiceSlaOutput {
	return o
}

func (o GetVirtualwanlinkServiceSlaOutput) ToGetVirtualwanlinkServiceSlaOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSlaOutput {
	return o
}

// Virtual WAN Link health-check.
func (o GetVirtualwanlinkServiceSlaOutput) HealthCheck() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceSla) string { return v.HealthCheck }).(pulumi.StringOutput)
}

// SLA ID.
func (o GetVirtualwanlinkServiceSlaOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceSla) int { return v.Id }).(pulumi.IntOutput)
}

type GetVirtualwanlinkServiceSlaArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceSla)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceSlaArrayOutput) ToGetVirtualwanlinkServiceSlaArrayOutput() GetVirtualwanlinkServiceSlaArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceSlaArrayOutput) ToGetVirtualwanlinkServiceSlaArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSlaArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceSlaArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceSla {
		return vs[0].([]GetVirtualwanlinkServiceSla)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceSlaOutput)
}

type GetVirtualwanlinkServiceSrc6 struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceSrc6Input is an input type that accepts GetVirtualwanlinkServiceSrc6Args and GetVirtualwanlinkServiceSrc6Output values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceSrc6Input` via:
//
//	GetVirtualwanlinkServiceSrc6Args{...}
type GetVirtualwanlinkServiceSrc6Input interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceSrc6Output() GetVirtualwanlinkServiceSrc6Output
	ToGetVirtualwanlinkServiceSrc6OutputWithContext(context.Context) GetVirtualwanlinkServiceSrc6Output
}

type GetVirtualwanlinkServiceSrc6Args struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceSrc6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceSrc6Args) ToGetVirtualwanlinkServiceSrc6Output() GetVirtualwanlinkServiceSrc6Output {
	return i.ToGetVirtualwanlinkServiceSrc6OutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceSrc6Args) ToGetVirtualwanlinkServiceSrc6OutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSrc6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceSrc6Output)
}

// GetVirtualwanlinkServiceSrc6ArrayInput is an input type that accepts GetVirtualwanlinkServiceSrc6Array and GetVirtualwanlinkServiceSrc6ArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceSrc6ArrayInput` via:
//
//	GetVirtualwanlinkServiceSrc6Array{ GetVirtualwanlinkServiceSrc6Args{...} }
type GetVirtualwanlinkServiceSrc6ArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceSrc6ArrayOutput() GetVirtualwanlinkServiceSrc6ArrayOutput
	ToGetVirtualwanlinkServiceSrc6ArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceSrc6ArrayOutput
}

type GetVirtualwanlinkServiceSrc6Array []GetVirtualwanlinkServiceSrc6Input

func (GetVirtualwanlinkServiceSrc6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceSrc6Array) ToGetVirtualwanlinkServiceSrc6ArrayOutput() GetVirtualwanlinkServiceSrc6ArrayOutput {
	return i.ToGetVirtualwanlinkServiceSrc6ArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceSrc6Array) ToGetVirtualwanlinkServiceSrc6ArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSrc6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceSrc6ArrayOutput)
}

type GetVirtualwanlinkServiceSrc6Output struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceSrc6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceSrc6Output) ToGetVirtualwanlinkServiceSrc6Output() GetVirtualwanlinkServiceSrc6Output {
	return o
}

func (o GetVirtualwanlinkServiceSrc6Output) ToGetVirtualwanlinkServiceSrc6OutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSrc6Output {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceSrc6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceSrc6) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceSrc6ArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceSrc6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceSrc6ArrayOutput) ToGetVirtualwanlinkServiceSrc6ArrayOutput() GetVirtualwanlinkServiceSrc6ArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceSrc6ArrayOutput) ToGetVirtualwanlinkServiceSrc6ArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSrc6ArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceSrc6ArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceSrc6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceSrc6 {
		return vs[0].([]GetVirtualwanlinkServiceSrc6)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceSrc6Output)
}

type GetVirtualwanlinkServiceSrc struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceSrcInput is an input type that accepts GetVirtualwanlinkServiceSrcArgs and GetVirtualwanlinkServiceSrcOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceSrcInput` via:
//
//	GetVirtualwanlinkServiceSrcArgs{...}
type GetVirtualwanlinkServiceSrcInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceSrcOutput() GetVirtualwanlinkServiceSrcOutput
	ToGetVirtualwanlinkServiceSrcOutputWithContext(context.Context) GetVirtualwanlinkServiceSrcOutput
}

type GetVirtualwanlinkServiceSrcArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceSrcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceSrc)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceSrcArgs) ToGetVirtualwanlinkServiceSrcOutput() GetVirtualwanlinkServiceSrcOutput {
	return i.ToGetVirtualwanlinkServiceSrcOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceSrcArgs) ToGetVirtualwanlinkServiceSrcOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSrcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceSrcOutput)
}

// GetVirtualwanlinkServiceSrcArrayInput is an input type that accepts GetVirtualwanlinkServiceSrcArray and GetVirtualwanlinkServiceSrcArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceSrcArrayInput` via:
//
//	GetVirtualwanlinkServiceSrcArray{ GetVirtualwanlinkServiceSrcArgs{...} }
type GetVirtualwanlinkServiceSrcArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceSrcArrayOutput() GetVirtualwanlinkServiceSrcArrayOutput
	ToGetVirtualwanlinkServiceSrcArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceSrcArrayOutput
}

type GetVirtualwanlinkServiceSrcArray []GetVirtualwanlinkServiceSrcInput

func (GetVirtualwanlinkServiceSrcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceSrc)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceSrcArray) ToGetVirtualwanlinkServiceSrcArrayOutput() GetVirtualwanlinkServiceSrcArrayOutput {
	return i.ToGetVirtualwanlinkServiceSrcArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceSrcArray) ToGetVirtualwanlinkServiceSrcArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSrcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceSrcArrayOutput)
}

type GetVirtualwanlinkServiceSrcOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceSrcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceSrc)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceSrcOutput) ToGetVirtualwanlinkServiceSrcOutput() GetVirtualwanlinkServiceSrcOutput {
	return o
}

func (o GetVirtualwanlinkServiceSrcOutput) ToGetVirtualwanlinkServiceSrcOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSrcOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceSrcOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceSrc) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceSrcArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceSrcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceSrc)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceSrcArrayOutput) ToGetVirtualwanlinkServiceSrcArrayOutput() GetVirtualwanlinkServiceSrcArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceSrcArrayOutput) ToGetVirtualwanlinkServiceSrcArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceSrcArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceSrcArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceSrcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceSrc {
		return vs[0].([]GetVirtualwanlinkServiceSrc)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceSrcOutput)
}

type GetVirtualwanlinkServiceUser struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkServiceUserInput is an input type that accepts GetVirtualwanlinkServiceUserArgs and GetVirtualwanlinkServiceUserOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceUserInput` via:
//
//	GetVirtualwanlinkServiceUserArgs{...}
type GetVirtualwanlinkServiceUserInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceUserOutput() GetVirtualwanlinkServiceUserOutput
	ToGetVirtualwanlinkServiceUserOutputWithContext(context.Context) GetVirtualwanlinkServiceUserOutput
}

type GetVirtualwanlinkServiceUserArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkServiceUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceUser)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceUserArgs) ToGetVirtualwanlinkServiceUserOutput() GetVirtualwanlinkServiceUserOutput {
	return i.ToGetVirtualwanlinkServiceUserOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceUserArgs) ToGetVirtualwanlinkServiceUserOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceUserOutput)
}

// GetVirtualwanlinkServiceUserArrayInput is an input type that accepts GetVirtualwanlinkServiceUserArray and GetVirtualwanlinkServiceUserArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkServiceUserArrayInput` via:
//
//	GetVirtualwanlinkServiceUserArray{ GetVirtualwanlinkServiceUserArgs{...} }
type GetVirtualwanlinkServiceUserArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkServiceUserArrayOutput() GetVirtualwanlinkServiceUserArrayOutput
	ToGetVirtualwanlinkServiceUserArrayOutputWithContext(context.Context) GetVirtualwanlinkServiceUserArrayOutput
}

type GetVirtualwanlinkServiceUserArray []GetVirtualwanlinkServiceUserInput

func (GetVirtualwanlinkServiceUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceUser)(nil)).Elem()
}

func (i GetVirtualwanlinkServiceUserArray) ToGetVirtualwanlinkServiceUserArrayOutput() GetVirtualwanlinkServiceUserArrayOutput {
	return i.ToGetVirtualwanlinkServiceUserArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkServiceUserArray) ToGetVirtualwanlinkServiceUserArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkServiceUserArrayOutput)
}

type GetVirtualwanlinkServiceUserOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkServiceUser)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceUserOutput) ToGetVirtualwanlinkServiceUserOutput() GetVirtualwanlinkServiceUserOutput {
	return o
}

func (o GetVirtualwanlinkServiceUserOutput) ToGetVirtualwanlinkServiceUserOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceUserOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkServiceUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkServiceUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkServiceUserArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkServiceUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkServiceUser)(nil)).Elem()
}

func (o GetVirtualwanlinkServiceUserArrayOutput) ToGetVirtualwanlinkServiceUserArrayOutput() GetVirtualwanlinkServiceUserArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceUserArrayOutput) ToGetVirtualwanlinkServiceUserArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkServiceUserArrayOutput {
	return o
}

func (o GetVirtualwanlinkServiceUserArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkServiceUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkServiceUser {
		return vs[0].([]GetVirtualwanlinkServiceUser)[vs[1].(int)]
	}).(GetVirtualwanlinkServiceUserOutput)
}

type GetVirtualwanlinkZone struct {
	// Control-based Internet Service group name.
	Name string `pulumi:"name"`
}

// GetVirtualwanlinkZoneInput is an input type that accepts GetVirtualwanlinkZoneArgs and GetVirtualwanlinkZoneOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkZoneInput` via:
//
//	GetVirtualwanlinkZoneArgs{...}
type GetVirtualwanlinkZoneInput interface {
	pulumi.Input

	ToGetVirtualwanlinkZoneOutput() GetVirtualwanlinkZoneOutput
	ToGetVirtualwanlinkZoneOutputWithContext(context.Context) GetVirtualwanlinkZoneOutput
}

type GetVirtualwanlinkZoneArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVirtualwanlinkZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkZone)(nil)).Elem()
}

func (i GetVirtualwanlinkZoneArgs) ToGetVirtualwanlinkZoneOutput() GetVirtualwanlinkZoneOutput {
	return i.ToGetVirtualwanlinkZoneOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkZoneArgs) ToGetVirtualwanlinkZoneOutputWithContext(ctx context.Context) GetVirtualwanlinkZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkZoneOutput)
}

// GetVirtualwanlinkZoneArrayInput is an input type that accepts GetVirtualwanlinkZoneArray and GetVirtualwanlinkZoneArrayOutput values.
// You can construct a concrete instance of `GetVirtualwanlinkZoneArrayInput` via:
//
//	GetVirtualwanlinkZoneArray{ GetVirtualwanlinkZoneArgs{...} }
type GetVirtualwanlinkZoneArrayInput interface {
	pulumi.Input

	ToGetVirtualwanlinkZoneArrayOutput() GetVirtualwanlinkZoneArrayOutput
	ToGetVirtualwanlinkZoneArrayOutputWithContext(context.Context) GetVirtualwanlinkZoneArrayOutput
}

type GetVirtualwanlinkZoneArray []GetVirtualwanlinkZoneInput

func (GetVirtualwanlinkZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkZone)(nil)).Elem()
}

func (i GetVirtualwanlinkZoneArray) ToGetVirtualwanlinkZoneArrayOutput() GetVirtualwanlinkZoneArrayOutput {
	return i.ToGetVirtualwanlinkZoneArrayOutputWithContext(context.Background())
}

func (i GetVirtualwanlinkZoneArray) ToGetVirtualwanlinkZoneArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualwanlinkZoneArrayOutput)
}

type GetVirtualwanlinkZoneOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualwanlinkZone)(nil)).Elem()
}

func (o GetVirtualwanlinkZoneOutput) ToGetVirtualwanlinkZoneOutput() GetVirtualwanlinkZoneOutput {
	return o
}

func (o GetVirtualwanlinkZoneOutput) ToGetVirtualwanlinkZoneOutputWithContext(ctx context.Context) GetVirtualwanlinkZoneOutput {
	return o
}

// Control-based Internet Service group name.
func (o GetVirtualwanlinkZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualwanlinkZone) string { return v.Name }).(pulumi.StringOutput)
}

type GetVirtualwanlinkZoneArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualwanlinkZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualwanlinkZone)(nil)).Elem()
}

func (o GetVirtualwanlinkZoneArrayOutput) ToGetVirtualwanlinkZoneArrayOutput() GetVirtualwanlinkZoneArrayOutput {
	return o
}

func (o GetVirtualwanlinkZoneArrayOutput) ToGetVirtualwanlinkZoneArrayOutputWithContext(ctx context.Context) GetVirtualwanlinkZoneArrayOutput {
	return o
}

func (o GetVirtualwanlinkZoneArrayOutput) Index(i pulumi.IntInput) GetVirtualwanlinkZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualwanlinkZone {
		return vs[0].([]GetVirtualwanlinkZone)[vs[1].(int)]
	}).(GetVirtualwanlinkZoneOutput)
}

type GetVxlanRemoteIp6 struct {
	// IPv6 address.
	Ip6 string `pulumi:"ip6"`
}

// GetVxlanRemoteIp6Input is an input type that accepts GetVxlanRemoteIp6Args and GetVxlanRemoteIp6Output values.
// You can construct a concrete instance of `GetVxlanRemoteIp6Input` via:
//
//	GetVxlanRemoteIp6Args{...}
type GetVxlanRemoteIp6Input interface {
	pulumi.Input

	ToGetVxlanRemoteIp6Output() GetVxlanRemoteIp6Output
	ToGetVxlanRemoteIp6OutputWithContext(context.Context) GetVxlanRemoteIp6Output
}

type GetVxlanRemoteIp6Args struct {
	// IPv6 address.
	Ip6 pulumi.StringInput `pulumi:"ip6"`
}

func (GetVxlanRemoteIp6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVxlanRemoteIp6)(nil)).Elem()
}

func (i GetVxlanRemoteIp6Args) ToGetVxlanRemoteIp6Output() GetVxlanRemoteIp6Output {
	return i.ToGetVxlanRemoteIp6OutputWithContext(context.Background())
}

func (i GetVxlanRemoteIp6Args) ToGetVxlanRemoteIp6OutputWithContext(ctx context.Context) GetVxlanRemoteIp6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetVxlanRemoteIp6Output)
}

// GetVxlanRemoteIp6ArrayInput is an input type that accepts GetVxlanRemoteIp6Array and GetVxlanRemoteIp6ArrayOutput values.
// You can construct a concrete instance of `GetVxlanRemoteIp6ArrayInput` via:
//
//	GetVxlanRemoteIp6Array{ GetVxlanRemoteIp6Args{...} }
type GetVxlanRemoteIp6ArrayInput interface {
	pulumi.Input

	ToGetVxlanRemoteIp6ArrayOutput() GetVxlanRemoteIp6ArrayOutput
	ToGetVxlanRemoteIp6ArrayOutputWithContext(context.Context) GetVxlanRemoteIp6ArrayOutput
}

type GetVxlanRemoteIp6Array []GetVxlanRemoteIp6Input

func (GetVxlanRemoteIp6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVxlanRemoteIp6)(nil)).Elem()
}

func (i GetVxlanRemoteIp6Array) ToGetVxlanRemoteIp6ArrayOutput() GetVxlanRemoteIp6ArrayOutput {
	return i.ToGetVxlanRemoteIp6ArrayOutputWithContext(context.Background())
}

func (i GetVxlanRemoteIp6Array) ToGetVxlanRemoteIp6ArrayOutputWithContext(ctx context.Context) GetVxlanRemoteIp6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVxlanRemoteIp6ArrayOutput)
}

type GetVxlanRemoteIp6Output struct{ *pulumi.OutputState }

func (GetVxlanRemoteIp6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVxlanRemoteIp6)(nil)).Elem()
}

func (o GetVxlanRemoteIp6Output) ToGetVxlanRemoteIp6Output() GetVxlanRemoteIp6Output {
	return o
}

func (o GetVxlanRemoteIp6Output) ToGetVxlanRemoteIp6OutputWithContext(ctx context.Context) GetVxlanRemoteIp6Output {
	return o
}

// IPv6 address.
func (o GetVxlanRemoteIp6Output) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetVxlanRemoteIp6) string { return v.Ip6 }).(pulumi.StringOutput)
}

type GetVxlanRemoteIp6ArrayOutput struct{ *pulumi.OutputState }

func (GetVxlanRemoteIp6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVxlanRemoteIp6)(nil)).Elem()
}

func (o GetVxlanRemoteIp6ArrayOutput) ToGetVxlanRemoteIp6ArrayOutput() GetVxlanRemoteIp6ArrayOutput {
	return o
}

func (o GetVxlanRemoteIp6ArrayOutput) ToGetVxlanRemoteIp6ArrayOutputWithContext(ctx context.Context) GetVxlanRemoteIp6ArrayOutput {
	return o
}

func (o GetVxlanRemoteIp6ArrayOutput) Index(i pulumi.IntInput) GetVxlanRemoteIp6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVxlanRemoteIp6 {
		return vs[0].([]GetVxlanRemoteIp6)[vs[1].(int)]
	}).(GetVxlanRemoteIp6Output)
}

type GetVxlanRemoteIp struct {
	// IPv4 address.
	Ip string `pulumi:"ip"`
}

// GetVxlanRemoteIpInput is an input type that accepts GetVxlanRemoteIpArgs and GetVxlanRemoteIpOutput values.
// You can construct a concrete instance of `GetVxlanRemoteIpInput` via:
//
//	GetVxlanRemoteIpArgs{...}
type GetVxlanRemoteIpInput interface {
	pulumi.Input

	ToGetVxlanRemoteIpOutput() GetVxlanRemoteIpOutput
	ToGetVxlanRemoteIpOutputWithContext(context.Context) GetVxlanRemoteIpOutput
}

type GetVxlanRemoteIpArgs struct {
	// IPv4 address.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetVxlanRemoteIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVxlanRemoteIp)(nil)).Elem()
}

func (i GetVxlanRemoteIpArgs) ToGetVxlanRemoteIpOutput() GetVxlanRemoteIpOutput {
	return i.ToGetVxlanRemoteIpOutputWithContext(context.Background())
}

func (i GetVxlanRemoteIpArgs) ToGetVxlanRemoteIpOutputWithContext(ctx context.Context) GetVxlanRemoteIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVxlanRemoteIpOutput)
}

// GetVxlanRemoteIpArrayInput is an input type that accepts GetVxlanRemoteIpArray and GetVxlanRemoteIpArrayOutput values.
// You can construct a concrete instance of `GetVxlanRemoteIpArrayInput` via:
//
//	GetVxlanRemoteIpArray{ GetVxlanRemoteIpArgs{...} }
type GetVxlanRemoteIpArrayInput interface {
	pulumi.Input

	ToGetVxlanRemoteIpArrayOutput() GetVxlanRemoteIpArrayOutput
	ToGetVxlanRemoteIpArrayOutputWithContext(context.Context) GetVxlanRemoteIpArrayOutput
}

type GetVxlanRemoteIpArray []GetVxlanRemoteIpInput

func (GetVxlanRemoteIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVxlanRemoteIp)(nil)).Elem()
}

func (i GetVxlanRemoteIpArray) ToGetVxlanRemoteIpArrayOutput() GetVxlanRemoteIpArrayOutput {
	return i.ToGetVxlanRemoteIpArrayOutputWithContext(context.Background())
}

func (i GetVxlanRemoteIpArray) ToGetVxlanRemoteIpArrayOutputWithContext(ctx context.Context) GetVxlanRemoteIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVxlanRemoteIpArrayOutput)
}

type GetVxlanRemoteIpOutput struct{ *pulumi.OutputState }

func (GetVxlanRemoteIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVxlanRemoteIp)(nil)).Elem()
}

func (o GetVxlanRemoteIpOutput) ToGetVxlanRemoteIpOutput() GetVxlanRemoteIpOutput {
	return o
}

func (o GetVxlanRemoteIpOutput) ToGetVxlanRemoteIpOutputWithContext(ctx context.Context) GetVxlanRemoteIpOutput {
	return o
}

// IPv4 address.
func (o GetVxlanRemoteIpOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetVxlanRemoteIp) string { return v.Ip }).(pulumi.StringOutput)
}

type GetVxlanRemoteIpArrayOutput struct{ *pulumi.OutputState }

func (GetVxlanRemoteIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVxlanRemoteIp)(nil)).Elem()
}

func (o GetVxlanRemoteIpArrayOutput) ToGetVxlanRemoteIpArrayOutput() GetVxlanRemoteIpArrayOutput {
	return o
}

func (o GetVxlanRemoteIpArrayOutput) ToGetVxlanRemoteIpArrayOutputWithContext(ctx context.Context) GetVxlanRemoteIpArrayOutput {
	return o
}

func (o GetVxlanRemoteIpArrayOutput) Index(i pulumi.IntInput) GetVxlanRemoteIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVxlanRemoteIp {
		return vs[0].([]GetVxlanRemoteIp)[vs[1].(int)]
	}).(GetVxlanRemoteIpOutput)
}

type GetZoneInterface struct {
	// Select interfaces to add to the zone.
	InterfaceName string `pulumi:"interfaceName"`
}

// GetZoneInterfaceInput is an input type that accepts GetZoneInterfaceArgs and GetZoneInterfaceOutput values.
// You can construct a concrete instance of `GetZoneInterfaceInput` via:
//
//	GetZoneInterfaceArgs{...}
type GetZoneInterfaceInput interface {
	pulumi.Input

	ToGetZoneInterfaceOutput() GetZoneInterfaceOutput
	ToGetZoneInterfaceOutputWithContext(context.Context) GetZoneInterfaceOutput
}

type GetZoneInterfaceArgs struct {
	// Select interfaces to add to the zone.
	InterfaceName pulumi.StringInput `pulumi:"interfaceName"`
}

func (GetZoneInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneInterface)(nil)).Elem()
}

func (i GetZoneInterfaceArgs) ToGetZoneInterfaceOutput() GetZoneInterfaceOutput {
	return i.ToGetZoneInterfaceOutputWithContext(context.Background())
}

func (i GetZoneInterfaceArgs) ToGetZoneInterfaceOutputWithContext(ctx context.Context) GetZoneInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneInterfaceOutput)
}

// GetZoneInterfaceArrayInput is an input type that accepts GetZoneInterfaceArray and GetZoneInterfaceArrayOutput values.
// You can construct a concrete instance of `GetZoneInterfaceArrayInput` via:
//
//	GetZoneInterfaceArray{ GetZoneInterfaceArgs{...} }
type GetZoneInterfaceArrayInput interface {
	pulumi.Input

	ToGetZoneInterfaceArrayOutput() GetZoneInterfaceArrayOutput
	ToGetZoneInterfaceArrayOutputWithContext(context.Context) GetZoneInterfaceArrayOutput
}

type GetZoneInterfaceArray []GetZoneInterfaceInput

func (GetZoneInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneInterface)(nil)).Elem()
}

func (i GetZoneInterfaceArray) ToGetZoneInterfaceArrayOutput() GetZoneInterfaceArrayOutput {
	return i.ToGetZoneInterfaceArrayOutputWithContext(context.Background())
}

func (i GetZoneInterfaceArray) ToGetZoneInterfaceArrayOutputWithContext(ctx context.Context) GetZoneInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneInterfaceArrayOutput)
}

type GetZoneInterfaceOutput struct{ *pulumi.OutputState }

func (GetZoneInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneInterface)(nil)).Elem()
}

func (o GetZoneInterfaceOutput) ToGetZoneInterfaceOutput() GetZoneInterfaceOutput {
	return o
}

func (o GetZoneInterfaceOutput) ToGetZoneInterfaceOutputWithContext(ctx context.Context) GetZoneInterfaceOutput {
	return o
}

// Select interfaces to add to the zone.
func (o GetZoneInterfaceOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneInterface) string { return v.InterfaceName }).(pulumi.StringOutput)
}

type GetZoneInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetZoneInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneInterface)(nil)).Elem()
}

func (o GetZoneInterfaceArrayOutput) ToGetZoneInterfaceArrayOutput() GetZoneInterfaceArrayOutput {
	return o
}

func (o GetZoneInterfaceArrayOutput) ToGetZoneInterfaceArrayOutputWithContext(ctx context.Context) GetZoneInterfaceArrayOutput {
	return o
}

func (o GetZoneInterfaceArrayOutput) Index(i pulumi.IntInput) GetZoneInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneInterface {
		return vs[0].([]GetZoneInterface)[vs[1].(int)]
	}).(GetZoneInterfaceOutput)
}

type GetZoneTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired system zone.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetZoneTaggingTag `pulumi:"tags"`
}

// GetZoneTaggingInput is an input type that accepts GetZoneTaggingArgs and GetZoneTaggingOutput values.
// You can construct a concrete instance of `GetZoneTaggingInput` via:
//
//	GetZoneTaggingArgs{...}
type GetZoneTaggingInput interface {
	pulumi.Input

	ToGetZoneTaggingOutput() GetZoneTaggingOutput
	ToGetZoneTaggingOutputWithContext(context.Context) GetZoneTaggingOutput
}

type GetZoneTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired system zone.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetZoneTaggingTagArrayInput `pulumi:"tags"`
}

func (GetZoneTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneTagging)(nil)).Elem()
}

func (i GetZoneTaggingArgs) ToGetZoneTaggingOutput() GetZoneTaggingOutput {
	return i.ToGetZoneTaggingOutputWithContext(context.Background())
}

func (i GetZoneTaggingArgs) ToGetZoneTaggingOutputWithContext(ctx context.Context) GetZoneTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneTaggingOutput)
}

// GetZoneTaggingArrayInput is an input type that accepts GetZoneTaggingArray and GetZoneTaggingArrayOutput values.
// You can construct a concrete instance of `GetZoneTaggingArrayInput` via:
//
//	GetZoneTaggingArray{ GetZoneTaggingArgs{...} }
type GetZoneTaggingArrayInput interface {
	pulumi.Input

	ToGetZoneTaggingArrayOutput() GetZoneTaggingArrayOutput
	ToGetZoneTaggingArrayOutputWithContext(context.Context) GetZoneTaggingArrayOutput
}

type GetZoneTaggingArray []GetZoneTaggingInput

func (GetZoneTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneTagging)(nil)).Elem()
}

func (i GetZoneTaggingArray) ToGetZoneTaggingArrayOutput() GetZoneTaggingArrayOutput {
	return i.ToGetZoneTaggingArrayOutputWithContext(context.Background())
}

func (i GetZoneTaggingArray) ToGetZoneTaggingArrayOutputWithContext(ctx context.Context) GetZoneTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneTaggingArrayOutput)
}

type GetZoneTaggingOutput struct{ *pulumi.OutputState }

func (GetZoneTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneTagging)(nil)).Elem()
}

func (o GetZoneTaggingOutput) ToGetZoneTaggingOutput() GetZoneTaggingOutput {
	return o
}

func (o GetZoneTaggingOutput) ToGetZoneTaggingOutputWithContext(ctx context.Context) GetZoneTaggingOutput {
	return o
}

// Tag category.
func (o GetZoneTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired system zone.
func (o GetZoneTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetZoneTaggingOutput) Tags() GetZoneTaggingTagArrayOutput {
	return o.ApplyT(func(v GetZoneTagging) []GetZoneTaggingTag { return v.Tags }).(GetZoneTaggingTagArrayOutput)
}

type GetZoneTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetZoneTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneTagging)(nil)).Elem()
}

func (o GetZoneTaggingArrayOutput) ToGetZoneTaggingArrayOutput() GetZoneTaggingArrayOutput {
	return o
}

func (o GetZoneTaggingArrayOutput) ToGetZoneTaggingArrayOutputWithContext(ctx context.Context) GetZoneTaggingArrayOutput {
	return o
}

func (o GetZoneTaggingArrayOutput) Index(i pulumi.IntInput) GetZoneTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneTagging {
		return vs[0].([]GetZoneTagging)[vs[1].(int)]
	}).(GetZoneTaggingOutput)
}

type GetZoneTaggingTag struct {
	// Specify the name of the desired system zone.
	Name string `pulumi:"name"`
}

// GetZoneTaggingTagInput is an input type that accepts GetZoneTaggingTagArgs and GetZoneTaggingTagOutput values.
// You can construct a concrete instance of `GetZoneTaggingTagInput` via:
//
//	GetZoneTaggingTagArgs{...}
type GetZoneTaggingTagInput interface {
	pulumi.Input

	ToGetZoneTaggingTagOutput() GetZoneTaggingTagOutput
	ToGetZoneTaggingTagOutputWithContext(context.Context) GetZoneTaggingTagOutput
}

type GetZoneTaggingTagArgs struct {
	// Specify the name of the desired system zone.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZoneTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneTaggingTag)(nil)).Elem()
}

func (i GetZoneTaggingTagArgs) ToGetZoneTaggingTagOutput() GetZoneTaggingTagOutput {
	return i.ToGetZoneTaggingTagOutputWithContext(context.Background())
}

func (i GetZoneTaggingTagArgs) ToGetZoneTaggingTagOutputWithContext(ctx context.Context) GetZoneTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneTaggingTagOutput)
}

// GetZoneTaggingTagArrayInput is an input type that accepts GetZoneTaggingTagArray and GetZoneTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetZoneTaggingTagArrayInput` via:
//
//	GetZoneTaggingTagArray{ GetZoneTaggingTagArgs{...} }
type GetZoneTaggingTagArrayInput interface {
	pulumi.Input

	ToGetZoneTaggingTagArrayOutput() GetZoneTaggingTagArrayOutput
	ToGetZoneTaggingTagArrayOutputWithContext(context.Context) GetZoneTaggingTagArrayOutput
}

type GetZoneTaggingTagArray []GetZoneTaggingTagInput

func (GetZoneTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneTaggingTag)(nil)).Elem()
}

func (i GetZoneTaggingTagArray) ToGetZoneTaggingTagArrayOutput() GetZoneTaggingTagArrayOutput {
	return i.ToGetZoneTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetZoneTaggingTagArray) ToGetZoneTaggingTagArrayOutputWithContext(ctx context.Context) GetZoneTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneTaggingTagArrayOutput)
}

type GetZoneTaggingTagOutput struct{ *pulumi.OutputState }

func (GetZoneTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneTaggingTag)(nil)).Elem()
}

func (o GetZoneTaggingTagOutput) ToGetZoneTaggingTagOutput() GetZoneTaggingTagOutput {
	return o
}

func (o GetZoneTaggingTagOutput) ToGetZoneTaggingTagOutputWithContext(ctx context.Context) GetZoneTaggingTagOutput {
	return o
}

// Specify the name of the desired system zone.
func (o GetZoneTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetZoneTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetZoneTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneTaggingTag)(nil)).Elem()
}

func (o GetZoneTaggingTagArrayOutput) ToGetZoneTaggingTagArrayOutput() GetZoneTaggingTagArrayOutput {
	return o
}

func (o GetZoneTaggingTagArrayOutput) ToGetZoneTaggingTagArrayOutputWithContext(ctx context.Context) GetZoneTaggingTagArrayOutput {
	return o
}

func (o GetZoneTaggingTagArrayOutput) Index(i pulumi.IntInput) GetZoneTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneTaggingTag {
		return vs[0].([]GetZoneTaggingTag)[vs[1].(int)]
	}).(GetZoneTaggingTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccprofileFwgrpPermissionInput)(nil)).Elem(), AccprofileFwgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccprofileFwgrpPermissionPtrInput)(nil)).Elem(), AccprofileFwgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccprofileLoggrpPermissionInput)(nil)).Elem(), AccprofileLoggrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccprofileLoggrpPermissionPtrInput)(nil)).Elem(), AccprofileLoggrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccprofileNetgrpPermissionInput)(nil)).Elem(), AccprofileNetgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccprofileNetgrpPermissionPtrInput)(nil)).Elem(), AccprofileNetgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccprofileSysgrpPermissionInput)(nil)).Elem(), AccprofileSysgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccprofileSysgrpPermissionPtrInput)(nil)).Elem(), AccprofileSysgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccprofileUtmgrpPermissionInput)(nil)).Elem(), AccprofileUtmgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccprofileUtmgrpPermissionPtrInput)(nil)).Elem(), AccprofileUtmgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AcmeAccountInput)(nil)).Elem(), AcmeAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AcmeAccountArrayInput)(nil)).Elem(), AcmeAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AcmeInterfaceInput)(nil)).Elem(), AcmeInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AcmeInterfaceArrayInput)(nil)).Elem(), AcmeInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuestUsergroupInput)(nil)).Elem(), AdminGuestUsergroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuestUsergroupArrayInput)(nil)).Elem(), AdminGuestUsergroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiDashboardInput)(nil)).Elem(), AdminGuiDashboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiDashboardArrayInput)(nil)).Elem(), AdminGuiDashboardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiDashboardWidgetInput)(nil)).Elem(), AdminGuiDashboardWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiDashboardWidgetArrayInput)(nil)).Elem(), AdminGuiDashboardWidgetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiDashboardWidgetFilterInput)(nil)).Elem(), AdminGuiDashboardWidgetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiDashboardWidgetFilterArrayInput)(nil)).Elem(), AdminGuiDashboardWidgetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiGlobalMenuFavoriteInput)(nil)).Elem(), AdminGuiGlobalMenuFavoriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiGlobalMenuFavoriteArrayInput)(nil)).Elem(), AdminGuiGlobalMenuFavoriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiNewFeatureAcknowledgeInput)(nil)).Elem(), AdminGuiNewFeatureAcknowledgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiNewFeatureAcknowledgeArrayInput)(nil)).Elem(), AdminGuiNewFeatureAcknowledgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiVdomMenuFavoriteInput)(nil)).Elem(), AdminGuiVdomMenuFavoriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminGuiVdomMenuFavoriteArrayInput)(nil)).Elem(), AdminGuiVdomMenuFavoriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminLoginTimeInput)(nil)).Elem(), AdminLoginTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminLoginTimeArrayInput)(nil)).Elem(), AdminLoginTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminVdomInput)(nil)).Elem(), AdminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminVdomArrayInput)(nil)).Elem(), AdminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmGroupInput)(nil)).Elem(), AlarmGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmGroupArrayInput)(nil)).Elem(), AlarmGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmGroupFwPolicyViolationInput)(nil)).Elem(), AlarmGroupFwPolicyViolationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmGroupFwPolicyViolationArrayInput)(nil)).Elem(), AlarmGroupFwPolicyViolationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiuserSettingTrusthostInput)(nil)).Elem(), ApiuserSettingTrusthostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiuserSettingTrusthostArrayInput)(nil)).Elem(), ApiuserSettingTrusthostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiuserTrusthostInput)(nil)).Elem(), ApiuserTrusthostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiuserTrusthostArrayInput)(nil)).Elem(), ApiuserTrusthostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiuserVdomInput)(nil)).Elem(), ApiuserVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiuserVdomArrayInput)(nil)).Elem(), ApiuserVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationactionEmailToInput)(nil)).Elem(), AutomationactionEmailToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationactionEmailToArrayInput)(nil)).Elem(), AutomationactionEmailToArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationactionHeaderInput)(nil)).Elem(), AutomationactionHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationactionHeaderArrayInput)(nil)).Elem(), AutomationactionHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationactionHttpHeaderInput)(nil)).Elem(), AutomationactionHttpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationactionHttpHeaderArrayInput)(nil)).Elem(), AutomationactionHttpHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationactionSdnConnectorInput)(nil)).Elem(), AutomationactionSdnConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationactionSdnConnectorArrayInput)(nil)).Elem(), AutomationactionSdnConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationdestinationDestinationInput)(nil)).Elem(), AutomationdestinationDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationdestinationDestinationArrayInput)(nil)).Elem(), AutomationdestinationDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationstitchActionInput)(nil)).Elem(), AutomationstitchActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationstitchActionArrayInput)(nil)).Elem(), AutomationstitchActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationstitchDestinationInput)(nil)).Elem(), AutomationstitchDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationstitchDestinationArrayInput)(nil)).Elem(), AutomationstitchDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationtriggerFieldInput)(nil)).Elem(), AutomationtriggerFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationtriggerFieldArrayInput)(nil)).Elem(), AutomationtriggerFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationtriggerLogidBlockInput)(nil)).Elem(), AutomationtriggerLogidBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationtriggerLogidBlockArrayInput)(nil)).Elem(), AutomationtriggerLogidBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationtriggerVdomInput)(nil)).Elem(), AutomationtriggerVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationtriggerVdomArrayInput)(nil)).Elem(), AutomationtriggerVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralmanagementServerListInput)(nil)).Elem(), CentralmanagementServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralmanagementServerListArrayInput)(nil)).Elem(), CentralmanagementServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersyncDownIntfsBeforeSessSyncInput)(nil)).Elem(), ClustersyncDownIntfsBeforeSessSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersyncDownIntfsBeforeSessSyncArrayInput)(nil)).Elem(), ClustersyncDownIntfsBeforeSessSyncArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersyncSessionSyncFilterInput)(nil)).Elem(), ClustersyncSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersyncSessionSyncFilterPtrInput)(nil)).Elem(), ClustersyncSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersyncSessionSyncFilterCustomServiceInput)(nil)).Elem(), ClustersyncSessionSyncFilterCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersyncSessionSyncFilterCustomServiceArrayInput)(nil)).Elem(), ClustersyncSessionSyncFilterCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersyncSyncvdInput)(nil)).Elem(), ClustersyncSyncvdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersyncSyncvdArrayInput)(nil)).Elem(), ClustersyncSyncvdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsfFabricConnectorInput)(nil)).Elem(), CsfFabricConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsfFabricConnectorArrayInput)(nil)).Elem(), CsfFabricConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsfFabricConnectorVdomInput)(nil)).Elem(), CsfFabricConnectorVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsfFabricConnectorVdomArrayInput)(nil)).Elem(), CsfFabricConnectorVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsfFabricDeviceInput)(nil)).Elem(), CsfFabricDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsfFabricDeviceArrayInput)(nil)).Elem(), CsfFabricDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsfTrustedListInput)(nil)).Elem(), CsfTrustedListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsfTrustedListArrayInput)(nil)).Elem(), CsfTrustedListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdnsDdnsServerAddrInput)(nil)).Elem(), DdnsDdnsServerAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdnsDdnsServerAddrArrayInput)(nil)).Elem(), DdnsDdnsServerAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdnsMonitorInterfaceInput)(nil)).Elem(), DdnsMonitorInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdnsMonitorInterfaceArrayInput)(nil)).Elem(), DdnsMonitorInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceupgradeKnownHaMemberInput)(nil)).Elem(), DeviceupgradeKnownHaMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceupgradeKnownHaMemberArrayInput)(nil)).Elem(), DeviceupgradeKnownHaMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsDomainInput)(nil)).Elem(), DnsDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsDomainArrayInput)(nil)).Elem(), DnsDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsServerHostnameInput)(nil)).Elem(), DnsServerHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsServerHostnameArrayInput)(nil)).Elem(), DnsServerHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsdatabaseDnsEntryInput)(nil)).Elem(), DnsdatabaseDnsEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsdatabaseDnsEntryArrayInput)(nil)).Elem(), DnsdatabaseDnsEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvpnExportRtInput)(nil)).Elem(), EvpnExportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvpnExportRtArrayInput)(nil)).Elem(), EvpnExportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvpnImportRtInput)(nil)).Elem(), EvpnImportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvpnImportRtArrayInput)(nil)).Elem(), EvpnImportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FabricvpnAdvertisedSubnetInput)(nil)).Elem(), FabricvpnAdvertisedSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FabricvpnAdvertisedSubnetArrayInput)(nil)).Elem(), FabricvpnAdvertisedSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FabricvpnOverlayInput)(nil)).Elem(), FabricvpnOverlayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FabricvpnOverlayArrayInput)(nil)).Elem(), FabricvpnOverlayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedupgradeKnownHaMemberInput)(nil)).Elem(), FederatedupgradeKnownHaMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedupgradeKnownHaMemberArrayInput)(nil)).Elem(), FederatedupgradeKnownHaMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedupgradeNodeListInput)(nil)).Elem(), FederatedupgradeNodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedupgradeNodeListArrayInput)(nil)).Elem(), FederatedupgradeNodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeoipoverrideIp6RangeInput)(nil)).Elem(), GeoipoverrideIp6RangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeoipoverrideIp6RangeArrayInput)(nil)).Elem(), GeoipoverrideIp6RangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeoipoverrideIpRangeInput)(nil)).Elem(), GeoipoverrideIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeoipoverrideIpRangeArrayInput)(nil)).Elem(), GeoipoverrideIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalInternetServiceDownloadListInput)(nil)).Elem(), GlobalInternetServiceDownloadListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalInternetServiceDownloadListArrayInput)(nil)).Elem(), GlobalInternetServiceDownloadListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaHaMgmtInterfaceInput)(nil)).Elem(), HaHaMgmtInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaHaMgmtInterfaceArrayInput)(nil)).Elem(), HaHaMgmtInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaSecondaryVclusterInput)(nil)).Elem(), HaSecondaryVclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaSecondaryVclusterPtrInput)(nil)).Elem(), HaSecondaryVclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaUnicastPeerInput)(nil)).Elem(), HaUnicastPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaUnicastPeerArrayInput)(nil)).Elem(), HaUnicastPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVclusterInput)(nil)).Elem(), HaVclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVclusterArrayInput)(nil)).Elem(), HaVclusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVclusterVdomInput)(nil)).Elem(), HaVclusterVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVclusterVdomArrayInput)(nil)).Elem(), HaVclusterVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup14Input)(nil)).Elem(), IkeDhGroup14Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup14PtrInput)(nil)).Elem(), IkeDhGroup14Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup15Input)(nil)).Elem(), IkeDhGroup15Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup15PtrInput)(nil)).Elem(), IkeDhGroup15Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup16Input)(nil)).Elem(), IkeDhGroup16Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup16PtrInput)(nil)).Elem(), IkeDhGroup16Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup17Input)(nil)).Elem(), IkeDhGroup17Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup17PtrInput)(nil)).Elem(), IkeDhGroup17Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup18Input)(nil)).Elem(), IkeDhGroup18Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup18PtrInput)(nil)).Elem(), IkeDhGroup18Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup19Input)(nil)).Elem(), IkeDhGroup19Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup19PtrInput)(nil)).Elem(), IkeDhGroup19Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup1Input)(nil)).Elem(), IkeDhGroup1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup1PtrInput)(nil)).Elem(), IkeDhGroup1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup20Input)(nil)).Elem(), IkeDhGroup20Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup20PtrInput)(nil)).Elem(), IkeDhGroup20Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup21Input)(nil)).Elem(), IkeDhGroup21Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup21PtrInput)(nil)).Elem(), IkeDhGroup21Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup27Input)(nil)).Elem(), IkeDhGroup27Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup27PtrInput)(nil)).Elem(), IkeDhGroup27Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup28Input)(nil)).Elem(), IkeDhGroup28Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup28PtrInput)(nil)).Elem(), IkeDhGroup28Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup29Input)(nil)).Elem(), IkeDhGroup29Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup29PtrInput)(nil)).Elem(), IkeDhGroup29Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup2Input)(nil)).Elem(), IkeDhGroup2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup2PtrInput)(nil)).Elem(), IkeDhGroup2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup30Input)(nil)).Elem(), IkeDhGroup30Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup30PtrInput)(nil)).Elem(), IkeDhGroup30Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup31Input)(nil)).Elem(), IkeDhGroup31Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup31PtrInput)(nil)).Elem(), IkeDhGroup31Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup32Input)(nil)).Elem(), IkeDhGroup32Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup32PtrInput)(nil)).Elem(), IkeDhGroup32Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup5Input)(nil)).Elem(), IkeDhGroup5Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeDhGroup5PtrInput)(nil)).Elem(), IkeDhGroup5Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceClientOptionInput)(nil)).Elem(), InterfaceClientOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceClientOptionArrayInput)(nil)).Elem(), InterfaceClientOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceDhcpSnoopingServerListInput)(nil)).Elem(), InterfaceDhcpSnoopingServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceDhcpSnoopingServerListArrayInput)(nil)).Elem(), InterfaceDhcpSnoopingServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceFailAlertInterfaceInput)(nil)).Elem(), InterfaceFailAlertInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceFailAlertInterfaceArrayInput)(nil)).Elem(), InterfaceFailAlertInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Input)(nil)).Elem(), InterfaceIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6PtrInput)(nil)).Elem(), InterfaceIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Dhcp6IapdListInput)(nil)).Elem(), InterfaceIpv6Dhcp6IapdListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Dhcp6IapdListArrayInput)(nil)).Elem(), InterfaceIpv6Dhcp6IapdListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Ip6DelegatedPrefixListInput)(nil)).Elem(), InterfaceIpv6Ip6DelegatedPrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Ip6DelegatedPrefixListArrayInput)(nil)).Elem(), InterfaceIpv6Ip6DelegatedPrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Ip6ExtraAddrInput)(nil)).Elem(), InterfaceIpv6Ip6ExtraAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Ip6ExtraAddrArrayInput)(nil)).Elem(), InterfaceIpv6Ip6ExtraAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Ip6PrefixListInput)(nil)).Elem(), InterfaceIpv6Ip6PrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Ip6PrefixListArrayInput)(nil)).Elem(), InterfaceIpv6Ip6PrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Ip6PrefixListDnsslInput)(nil)).Elem(), InterfaceIpv6Ip6PrefixListDnsslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Ip6PrefixListDnsslArrayInput)(nil)).Elem(), InterfaceIpv6Ip6PrefixListDnsslArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Vrrp6Input)(nil)).Elem(), InterfaceIpv6Vrrp6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceIpv6Vrrp6ArrayInput)(nil)).Elem(), InterfaceIpv6Vrrp6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceManagedDeviceInput)(nil)).Elem(), InterfaceManagedDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceManagedDeviceArrayInput)(nil)).Elem(), InterfaceManagedDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceMemberInput)(nil)).Elem(), InterfaceMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceMemberArrayInput)(nil)).Elem(), InterfaceMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceSecondaryipInput)(nil)).Elem(), InterfaceSecondaryipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceSecondaryipArrayInput)(nil)).Elem(), InterfaceSecondaryipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceSecurityGroupInput)(nil)).Elem(), InterfaceSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceSecurityGroupArrayInput)(nil)).Elem(), InterfaceSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceTaggingInput)(nil)).Elem(), InterfaceTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceTaggingArrayInput)(nil)).Elem(), InterfaceTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceTaggingTagInput)(nil)).Elem(), InterfaceTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceTaggingTagArrayInput)(nil)).Elem(), InterfaceTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceVrrpInput)(nil)).Elem(), InterfaceVrrpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceVrrpArrayInput)(nil)).Elem(), InterfaceVrrpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceVrrpProxyArpInput)(nil)).Elem(), InterfaceVrrpProxyArpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceVrrpProxyArpArrayInput)(nil)).Elem(), InterfaceVrrpProxyArpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamPoolInput)(nil)).Elem(), IpamPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamPoolArrayInput)(nil)).Elem(), IpamPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamRuleInput)(nil)).Elem(), IpamRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamRuleArrayInput)(nil)).Elem(), IpamRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamRuleDeviceInput)(nil)).Elem(), IpamRuleDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamRuleDeviceArrayInput)(nil)).Elem(), IpamRuleDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamRuleInterfaceInput)(nil)).Elem(), IpamRuleInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamRuleInterfaceArrayInput)(nil)).Elem(), IpamRuleInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamRulePoolInput)(nil)).Elem(), IpamRulePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamRulePoolArrayInput)(nil)).Elem(), IpamRulePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecaggregateMemberInput)(nil)).Elem(), IpsecaggregateMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecaggregateMemberArrayInput)(nil)).Elem(), IpsecaggregateMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkmonitorRouteInput)(nil)).Elem(), LinkmonitorRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkmonitorRouteArrayInput)(nil)).Elem(), LinkmonitorRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkmonitorServerInput)(nil)).Elem(), LinkmonitorServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkmonitorServerArrayInput)(nil)).Elem(), LinkmonitorServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkmonitorServerListInput)(nil)).Elem(), LinkmonitorServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkmonitorServerListArrayInput)(nil)).Elem(), LinkmonitorServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobiletunnelNetworkInput)(nil)).Elem(), MobiletunnelNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobiletunnelNetworkArrayInput)(nil)).Elem(), MobiletunnelNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Nat64SecondaryPrefixInput)(nil)).Elem(), Nat64SecondaryPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Nat64SecondaryPrefixArrayInput)(nil)).Elem(), Nat64SecondaryPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdproxyMemberInput)(nil)).Elem(), NdproxyMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdproxyMemberArrayInput)(nil)).Elem(), NdproxyMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetflowCollectorInput)(nil)).Elem(), NetflowCollectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetflowCollectorArrayInput)(nil)).Elem(), NetflowCollectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NpuPriorityProtocolInput)(nil)).Elem(), NpuPriorityProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NpuPriorityProtocolPtrInput)(nil)).Elem(), NpuPriorityProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NtpInterfaceInput)(nil)).Elem(), NtpInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NtpInterfaceArrayInput)(nil)).Elem(), NtpInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NtpNtpserverInput)(nil)).Elem(), NtpNtpserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NtpNtpserverArrayInput)(nil)).Elem(), NtpNtpserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjecttaggingTagInput)(nil)).Elem(), ObjecttaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjecttaggingTagArrayInput)(nil)).Elem(), ObjecttaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcpserverPoolInput)(nil)).Elem(), PcpserverPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcpserverPoolArrayInput)(nil)).Elem(), PcpserverPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcpserverPoolClientSubnetInput)(nil)).Elem(), PcpserverPoolClientSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcpserverPoolClientSubnetArrayInput)(nil)).Elem(), PcpserverPoolClientSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcpserverPoolIntlIntfInput)(nil)).Elem(), PcpserverPoolIntlIntfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcpserverPoolIntlIntfArrayInput)(nil)).Elem(), PcpserverPoolIntlIntfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcpserverPoolThirdPartySubnetInput)(nil)).Elem(), PcpserverPoolThirdPartySubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcpserverPoolThirdPartySubnetArrayInput)(nil)).Elem(), PcpserverPoolThirdPartySubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PtpServerInterfaceInput)(nil)).Elem(), PtpServerInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PtpServerInterfaceArrayInput)(nil)).Elem(), PtpServerInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupAdminInput)(nil)).Elem(), ReplacemsggroupAdminArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupAdminArrayInput)(nil)).Elem(), ReplacemsggroupAdminArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupAlertmailInput)(nil)).Elem(), ReplacemsggroupAlertmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupAlertmailArrayInput)(nil)).Elem(), ReplacemsggroupAlertmailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupAuthInput)(nil)).Elem(), ReplacemsggroupAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupAuthArrayInput)(nil)).Elem(), ReplacemsggroupAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupAutomationInput)(nil)).Elem(), ReplacemsggroupAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupAutomationArrayInput)(nil)).Elem(), ReplacemsggroupAutomationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupCustomMessageInput)(nil)).Elem(), ReplacemsggroupCustomMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupCustomMessageArrayInput)(nil)).Elem(), ReplacemsggroupCustomMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupDeviceDetectionPortalInput)(nil)).Elem(), ReplacemsggroupDeviceDetectionPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupDeviceDetectionPortalArrayInput)(nil)).Elem(), ReplacemsggroupDeviceDetectionPortalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupEcInput)(nil)).Elem(), ReplacemsggroupEcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupEcArrayInput)(nil)).Elem(), ReplacemsggroupEcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupFortiguardWfInput)(nil)).Elem(), ReplacemsggroupFortiguardWfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupFortiguardWfArrayInput)(nil)).Elem(), ReplacemsggroupFortiguardWfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupFtpInput)(nil)).Elem(), ReplacemsggroupFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupFtpArrayInput)(nil)).Elem(), ReplacemsggroupFtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupHttpInput)(nil)).Elem(), ReplacemsggroupHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupHttpArrayInput)(nil)).Elem(), ReplacemsggroupHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupIcapInput)(nil)).Elem(), ReplacemsggroupIcapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupIcapArrayInput)(nil)).Elem(), ReplacemsggroupIcapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupMailInput)(nil)).Elem(), ReplacemsggroupMailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupMailArrayInput)(nil)).Elem(), ReplacemsggroupMailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupNacQuarInput)(nil)).Elem(), ReplacemsggroupNacQuarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupNacQuarArrayInput)(nil)).Elem(), ReplacemsggroupNacQuarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupNntpInput)(nil)).Elem(), ReplacemsggroupNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupNntpArrayInput)(nil)).Elem(), ReplacemsggroupNntpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupSpamInput)(nil)).Elem(), ReplacemsggroupSpamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupSpamArrayInput)(nil)).Elem(), ReplacemsggroupSpamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupSslvpnInput)(nil)).Elem(), ReplacemsggroupSslvpnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupSslvpnArrayInput)(nil)).Elem(), ReplacemsggroupSslvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupTrafficQuotaInput)(nil)).Elem(), ReplacemsggroupTrafficQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupTrafficQuotaArrayInput)(nil)).Elem(), ReplacemsggroupTrafficQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupUtmInput)(nil)).Elem(), ReplacemsggroupUtmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupUtmArrayInput)(nil)).Elem(), ReplacemsggroupUtmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupWebproxyInput)(nil)).Elem(), ReplacemsggroupWebproxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplacemsggroupWebproxyArrayInput)(nil)).Elem(), ReplacemsggroupWebproxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlServiceProviderInput)(nil)).Elem(), SamlServiceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlServiceProviderArrayInput)(nil)).Elem(), SamlServiceProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlServiceProviderAssertionAttributeInput)(nil)).Elem(), SamlServiceProviderAssertionAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlServiceProviderAssertionAttributeArrayInput)(nil)).Elem(), SamlServiceProviderAssertionAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorCompartmentListInput)(nil)).Elem(), SdnconnectorCompartmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorCompartmentListArrayInput)(nil)).Elem(), SdnconnectorCompartmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorExternalAccountListInput)(nil)).Elem(), SdnconnectorExternalAccountListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorExternalAccountListArrayInput)(nil)).Elem(), SdnconnectorExternalAccountListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorExternalAccountListRegionListInput)(nil)).Elem(), SdnconnectorExternalAccountListRegionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorExternalAccountListRegionListArrayInput)(nil)).Elem(), SdnconnectorExternalAccountListRegionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorExternalIpInput)(nil)).Elem(), SdnconnectorExternalIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorExternalIpArrayInput)(nil)).Elem(), SdnconnectorExternalIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorForwardingRuleInput)(nil)).Elem(), SdnconnectorForwardingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorForwardingRuleArrayInput)(nil)).Elem(), SdnconnectorForwardingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorGcpProjectListInput)(nil)).Elem(), SdnconnectorGcpProjectListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorGcpProjectListArrayInput)(nil)).Elem(), SdnconnectorGcpProjectListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorGcpProjectListGcpZoneListInput)(nil)).Elem(), SdnconnectorGcpProjectListGcpZoneListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorGcpProjectListGcpZoneListArrayInput)(nil)).Elem(), SdnconnectorGcpProjectListGcpZoneListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorNicInput)(nil)).Elem(), SdnconnectorNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorNicArrayInput)(nil)).Elem(), SdnconnectorNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorNicIpInput)(nil)).Elem(), SdnconnectorNicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorNicIpArrayInput)(nil)).Elem(), SdnconnectorNicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorOciRegionListInput)(nil)).Elem(), SdnconnectorOciRegionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorOciRegionListArrayInput)(nil)).Elem(), SdnconnectorOciRegionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorRouteInput)(nil)).Elem(), SdnconnectorRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorRouteArrayInput)(nil)).Elem(), SdnconnectorRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorRouteTableInput)(nil)).Elem(), SdnconnectorRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorRouteTableArrayInput)(nil)).Elem(), SdnconnectorRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorRouteTableRouteInput)(nil)).Elem(), SdnconnectorRouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorRouteTableRouteArrayInput)(nil)).Elem(), SdnconnectorRouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorServerListInput)(nil)).Elem(), SdnconnectorServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdnconnectorServerListArrayInput)(nil)).Elem(), SdnconnectorServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationInput)(nil)).Elem(), SdwanDuplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationArrayInput)(nil)).Elem(), SdwanDuplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationDstaddr6Input)(nil)).Elem(), SdwanDuplicationDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationDstaddr6ArrayInput)(nil)).Elem(), SdwanDuplicationDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationDstaddrInput)(nil)).Elem(), SdwanDuplicationDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationDstaddrArrayInput)(nil)).Elem(), SdwanDuplicationDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationDstintfInput)(nil)).Elem(), SdwanDuplicationDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationDstintfArrayInput)(nil)).Elem(), SdwanDuplicationDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationServiceInput)(nil)).Elem(), SdwanDuplicationServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationServiceArrayInput)(nil)).Elem(), SdwanDuplicationServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationServiceIdInput)(nil)).Elem(), SdwanDuplicationServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationServiceIdArrayInput)(nil)).Elem(), SdwanDuplicationServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationSrcaddr6Input)(nil)).Elem(), SdwanDuplicationSrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationSrcaddr6ArrayInput)(nil)).Elem(), SdwanDuplicationSrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationSrcaddrInput)(nil)).Elem(), SdwanDuplicationSrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationSrcaddrArrayInput)(nil)).Elem(), SdwanDuplicationSrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationSrcintfInput)(nil)).Elem(), SdwanDuplicationSrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanDuplicationSrcintfArrayInput)(nil)).Elem(), SdwanDuplicationSrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanFailAlertInterfaceInput)(nil)).Elem(), SdwanFailAlertInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanFailAlertInterfaceArrayInput)(nil)).Elem(), SdwanFailAlertInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanHealthCheckInput)(nil)).Elem(), SdwanHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanHealthCheckArrayInput)(nil)).Elem(), SdwanHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanHealthCheckMemberInput)(nil)).Elem(), SdwanHealthCheckMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanHealthCheckMemberArrayInput)(nil)).Elem(), SdwanHealthCheckMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanHealthCheckSlaInput)(nil)).Elem(), SdwanHealthCheckSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanHealthCheckSlaArrayInput)(nil)).Elem(), SdwanHealthCheckSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanMemberInput)(nil)).Elem(), SdwanMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanMemberArrayInput)(nil)).Elem(), SdwanMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanNeighborInput)(nil)).Elem(), SdwanNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanNeighborArrayInput)(nil)).Elem(), SdwanNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanNeighborMemberBlockInput)(nil)).Elem(), SdwanNeighborMemberBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanNeighborMemberBlockArrayInput)(nil)).Elem(), SdwanNeighborMemberBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInput)(nil)).Elem(), SdwanServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceArrayInput)(nil)).Elem(), SdwanServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceDst6Input)(nil)).Elem(), SdwanServiceDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceDst6ArrayInput)(nil)).Elem(), SdwanServiceDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceDstInput)(nil)).Elem(), SdwanServiceDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceDstArrayInput)(nil)).Elem(), SdwanServiceDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceGroupInput)(nil)).Elem(), SdwanServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceGroupArrayInput)(nil)).Elem(), SdwanServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceHealthCheckInput)(nil)).Elem(), SdwanServiceHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceHealthCheckArrayInput)(nil)).Elem(), SdwanServiceHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInputDeviceInput)(nil)).Elem(), SdwanServiceInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInputDeviceArrayInput)(nil)).Elem(), SdwanServiceInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInputZoneInput)(nil)).Elem(), SdwanServiceInputZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInputZoneArrayInput)(nil)).Elem(), SdwanServiceInputZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceAppCtrlInput)(nil)).Elem(), SdwanServiceInternetServiceAppCtrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceAppCtrlArrayInput)(nil)).Elem(), SdwanServiceInternetServiceAppCtrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceAppCtrlCategoryInput)(nil)).Elem(), SdwanServiceInternetServiceAppCtrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceAppCtrlCategoryArrayInput)(nil)).Elem(), SdwanServiceInternetServiceAppCtrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceAppCtrlGroupInput)(nil)).Elem(), SdwanServiceInternetServiceAppCtrlGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceAppCtrlGroupArrayInput)(nil)).Elem(), SdwanServiceInternetServiceAppCtrlGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceCustomInput)(nil)).Elem(), SdwanServiceInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceCustomArrayInput)(nil)).Elem(), SdwanServiceInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceCustomGroupInput)(nil)).Elem(), SdwanServiceInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceCustomGroupArrayInput)(nil)).Elem(), SdwanServiceInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceGroupInput)(nil)).Elem(), SdwanServiceInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceGroupArrayInput)(nil)).Elem(), SdwanServiceInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceNameInput)(nil)).Elem(), SdwanServiceInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceInternetServiceNameArrayInput)(nil)).Elem(), SdwanServiceInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServicePriorityMemberInput)(nil)).Elem(), SdwanServicePriorityMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServicePriorityMemberArrayInput)(nil)).Elem(), SdwanServicePriorityMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServicePriorityZoneInput)(nil)).Elem(), SdwanServicePriorityZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServicePriorityZoneArrayInput)(nil)).Elem(), SdwanServicePriorityZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceSlaInput)(nil)).Elem(), SdwanServiceSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceSlaArrayInput)(nil)).Elem(), SdwanServiceSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceSrc6Input)(nil)).Elem(), SdwanServiceSrc6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceSrc6ArrayInput)(nil)).Elem(), SdwanServiceSrc6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceSrcInput)(nil)).Elem(), SdwanServiceSrcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceSrcArrayInput)(nil)).Elem(), SdwanServiceSrcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceUserInput)(nil)).Elem(), SdwanServiceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanServiceUserArrayInput)(nil)).Elem(), SdwanServiceUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanZoneInput)(nil)).Elem(), SdwanZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SdwanZoneArrayInput)(nil)).Elem(), SdwanZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionttlPortInput)(nil)).Elem(), SessionttlPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionttlPortArrayInput)(nil)).Elem(), SessionttlPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsGuiDefaultPolicyColumnInput)(nil)).Elem(), SettingsGuiDefaultPolicyColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsGuiDefaultPolicyColumnArrayInput)(nil)).Elem(), SettingsGuiDefaultPolicyColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SflowCollectorInput)(nil)).Elem(), SflowCollectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SflowCollectorArrayInput)(nil)).Elem(), SflowCollectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpeedtestscheduleScheduleInput)(nil)).Elem(), SpeedtestscheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpeedtestscheduleScheduleArrayInput)(nil)).Elem(), SpeedtestscheduleScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpeedtestserverHostInput)(nil)).Elem(), SpeedtestserverHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpeedtestserverHostArrayInput)(nil)).Elem(), SpeedtestserverHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoadminVdomInput)(nil)).Elem(), SsoadminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoadminVdomArrayInput)(nil)).Elem(), SsoadminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoforticloudadminVdomInput)(nil)).Elem(), SsoforticloudadminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoforticloudadminVdomArrayInput)(nil)).Elem(), SsoforticloudadminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsofortigatecloudadminVdomInput)(nil)).Elem(), SsofortigatecloudadminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsofortigatecloudadminVdomArrayInput)(nil)).Elem(), SsofortigatecloudadminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterClusterPeerInput)(nil)).Elem(), StandaloneclusterClusterPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterClusterPeerArrayInput)(nil)).Elem(), StandaloneclusterClusterPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterClusterPeerDownIntfsBeforeSessSyncInput)(nil)).Elem(), StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayInput)(nil)).Elem(), StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterClusterPeerSessionSyncFilterInput)(nil)).Elem(), StandaloneclusterClusterPeerSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterClusterPeerSessionSyncFilterPtrInput)(nil)).Elem(), StandaloneclusterClusterPeerSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterClusterPeerSessionSyncFilterCustomServiceInput)(nil)).Elem(), StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayInput)(nil)).Elem(), StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterClusterPeerSyncvdInput)(nil)).Elem(), StandaloneclusterClusterPeerSyncvdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandaloneclusterClusterPeerSyncvdArrayInput)(nil)).Elem(), StandaloneclusterClusterPeerSyncvdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchinterfaceMemberInput)(nil)).Elem(), SwitchinterfaceMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchinterfaceMemberArrayInput)(nil)).Elem(), SwitchinterfaceMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchinterfaceSpanSourcePortInput)(nil)).Elem(), SwitchinterfaceSpanSourcePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchinterfaceSpanSourcePortArrayInput)(nil)).Elem(), SwitchinterfaceSpanSourcePortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomdnsServerHostnameInput)(nil)).Elem(), VdomdnsServerHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomdnsServerHostnameArrayInput)(nil)).Elem(), VdomdnsServerHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomexceptionVdomInput)(nil)).Elem(), VdomexceptionVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomexceptionVdomArrayInput)(nil)).Elem(), VdomexceptionVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomnetflowCollectorInput)(nil)).Elem(), VdomnetflowCollectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomnetflowCollectorArrayInput)(nil)).Elem(), VdomnetflowCollectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomsflowCollectorInput)(nil)).Elem(), VdomsflowCollectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VdomsflowCollectorArrayInput)(nil)).Elem(), VdomsflowCollectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualswitchPortInput)(nil)).Elem(), VirtualswitchPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualswitchPortArrayInput)(nil)).Elem(), VirtualswitchPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkFailAlertInterfaceInput)(nil)).Elem(), VirtualwanlinkFailAlertInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkFailAlertInterfaceArrayInput)(nil)).Elem(), VirtualwanlinkFailAlertInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkHealthCheckInput)(nil)).Elem(), VirtualwanlinkHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkHealthCheckArrayInput)(nil)).Elem(), VirtualwanlinkHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkHealthCheckMemberInput)(nil)).Elem(), VirtualwanlinkHealthCheckMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkHealthCheckMemberArrayInput)(nil)).Elem(), VirtualwanlinkHealthCheckMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkHealthCheckSlaInput)(nil)).Elem(), VirtualwanlinkHealthCheckSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkHealthCheckSlaArrayInput)(nil)).Elem(), VirtualwanlinkHealthCheckSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkMemberInput)(nil)).Elem(), VirtualwanlinkMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkMemberArrayInput)(nil)).Elem(), VirtualwanlinkMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkNeighborInput)(nil)).Elem(), VirtualwanlinkNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkNeighborArrayInput)(nil)).Elem(), VirtualwanlinkNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInput)(nil)).Elem(), VirtualwanlinkServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceArrayInput)(nil)).Elem(), VirtualwanlinkServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceDst6Input)(nil)).Elem(), VirtualwanlinkServiceDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceDst6ArrayInput)(nil)).Elem(), VirtualwanlinkServiceDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceDstInput)(nil)).Elem(), VirtualwanlinkServiceDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceDstArrayInput)(nil)).Elem(), VirtualwanlinkServiceDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceGroupInput)(nil)).Elem(), VirtualwanlinkServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceGroupArrayInput)(nil)).Elem(), VirtualwanlinkServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInputDeviceInput)(nil)).Elem(), VirtualwanlinkServiceInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInputDeviceArrayInput)(nil)).Elem(), VirtualwanlinkServiceInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceAppCtrlInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceAppCtrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceAppCtrlArrayInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceAppCtrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceAppCtrlGroupInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceAppCtrlGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceAppCtrlGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCtrlInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceCtrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCtrlArrayInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceCtrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCtrlGroupInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceCtrlGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCtrlGroupArrayInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceCtrlGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCustomInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCustomArrayInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCustomGroupInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceCustomGroupArrayInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceGroupInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceGroupArrayInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceIdInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceIdArrayInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceNameInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceInternetServiceNameArrayInput)(nil)).Elem(), VirtualwanlinkServiceInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServicePriorityMemberInput)(nil)).Elem(), VirtualwanlinkServicePriorityMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServicePriorityMemberArrayInput)(nil)).Elem(), VirtualwanlinkServicePriorityMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceSlaInput)(nil)).Elem(), VirtualwanlinkServiceSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceSlaArrayInput)(nil)).Elem(), VirtualwanlinkServiceSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceSrc6Input)(nil)).Elem(), VirtualwanlinkServiceSrc6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceSrc6ArrayInput)(nil)).Elem(), VirtualwanlinkServiceSrc6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceSrcInput)(nil)).Elem(), VirtualwanlinkServiceSrcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceSrcArrayInput)(nil)).Elem(), VirtualwanlinkServiceSrcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceUserInput)(nil)).Elem(), VirtualwanlinkServiceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkServiceUserArrayInput)(nil)).Elem(), VirtualwanlinkServiceUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkZoneInput)(nil)).Elem(), VirtualwanlinkZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwanlinkZoneArrayInput)(nil)).Elem(), VirtualwanlinkZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwirepairMemberInput)(nil)).Elem(), VirtualwirepairMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualwirepairMemberArrayInput)(nil)).Elem(), VirtualwirepairMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VxlanRemoteIp6Input)(nil)).Elem(), VxlanRemoteIp6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VxlanRemoteIp6ArrayInput)(nil)).Elem(), VxlanRemoteIp6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*VxlanRemoteIpInput)(nil)).Elem(), VxlanRemoteIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VxlanRemoteIpArrayInput)(nil)).Elem(), VxlanRemoteIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneInterfaceInput)(nil)).Elem(), ZoneInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneInterfaceArrayInput)(nil)).Elem(), ZoneInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneTaggingInput)(nil)).Elem(), ZoneTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneTaggingArrayInput)(nil)).Elem(), ZoneTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneTaggingTagInput)(nil)).Elem(), ZoneTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneTaggingTagArrayInput)(nil)).Elem(), ZoneTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccprofileFwgrpPermissionInput)(nil)).Elem(), GetAccprofileFwgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccprofileFwgrpPermissionArrayInput)(nil)).Elem(), GetAccprofileFwgrpPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccprofileLoggrpPermissionInput)(nil)).Elem(), GetAccprofileLoggrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccprofileLoggrpPermissionArrayInput)(nil)).Elem(), GetAccprofileLoggrpPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccprofileNetgrpPermissionInput)(nil)).Elem(), GetAccprofileNetgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccprofileNetgrpPermissionArrayInput)(nil)).Elem(), GetAccprofileNetgrpPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccprofileSysgrpPermissionInput)(nil)).Elem(), GetAccprofileSysgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccprofileSysgrpPermissionArrayInput)(nil)).Elem(), GetAccprofileSysgrpPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccprofileUtmgrpPermissionInput)(nil)).Elem(), GetAccprofileUtmgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccprofileUtmgrpPermissionArrayInput)(nil)).Elem(), GetAccprofileUtmgrpPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuestUsergroupInput)(nil)).Elem(), GetAdminGuestUsergroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuestUsergroupArrayInput)(nil)).Elem(), GetAdminGuestUsergroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiDashboardInput)(nil)).Elem(), GetAdminGuiDashboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiDashboardArrayInput)(nil)).Elem(), GetAdminGuiDashboardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiDashboardWidgetInput)(nil)).Elem(), GetAdminGuiDashboardWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiDashboardWidgetArrayInput)(nil)).Elem(), GetAdminGuiDashboardWidgetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiDashboardWidgetFilterInput)(nil)).Elem(), GetAdminGuiDashboardWidgetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiDashboardWidgetFilterArrayInput)(nil)).Elem(), GetAdminGuiDashboardWidgetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiGlobalMenuFavoriteInput)(nil)).Elem(), GetAdminGuiGlobalMenuFavoriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiGlobalMenuFavoriteArrayInput)(nil)).Elem(), GetAdminGuiGlobalMenuFavoriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiNewFeatureAcknowledgeInput)(nil)).Elem(), GetAdminGuiNewFeatureAcknowledgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiNewFeatureAcknowledgeArrayInput)(nil)).Elem(), GetAdminGuiNewFeatureAcknowledgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiVdomMenuFavoriteInput)(nil)).Elem(), GetAdminGuiVdomMenuFavoriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminGuiVdomMenuFavoriteArrayInput)(nil)).Elem(), GetAdminGuiVdomMenuFavoriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminLoginTimeInput)(nil)).Elem(), GetAdminLoginTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminLoginTimeArrayInput)(nil)).Elem(), GetAdminLoginTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminVdomInput)(nil)).Elem(), GetAdminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminVdomArrayInput)(nil)).Elem(), GetAdminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiuserTrusthostInput)(nil)).Elem(), GetApiuserTrusthostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiuserTrusthostArrayInput)(nil)).Elem(), GetApiuserTrusthostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiuserVdomInput)(nil)).Elem(), GetApiuserVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiuserVdomArrayInput)(nil)).Elem(), GetApiuserVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationactionEmailToInput)(nil)).Elem(), GetAutomationactionEmailToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationactionEmailToArrayInput)(nil)).Elem(), GetAutomationactionEmailToArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationactionHeaderInput)(nil)).Elem(), GetAutomationactionHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationactionHeaderArrayInput)(nil)).Elem(), GetAutomationactionHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationactionHttpHeaderInput)(nil)).Elem(), GetAutomationactionHttpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationactionHttpHeaderArrayInput)(nil)).Elem(), GetAutomationactionHttpHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationactionSdnConnectorInput)(nil)).Elem(), GetAutomationactionSdnConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationactionSdnConnectorArrayInput)(nil)).Elem(), GetAutomationactionSdnConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationdestinationDestinationInput)(nil)).Elem(), GetAutomationdestinationDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationdestinationDestinationArrayInput)(nil)).Elem(), GetAutomationdestinationDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationtriggerFieldInput)(nil)).Elem(), GetAutomationtriggerFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationtriggerFieldArrayInput)(nil)).Elem(), GetAutomationtriggerFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationtriggerLogidBlockInput)(nil)).Elem(), GetAutomationtriggerLogidBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationtriggerLogidBlockArrayInput)(nil)).Elem(), GetAutomationtriggerLogidBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationtriggerVdomInput)(nil)).Elem(), GetAutomationtriggerVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutomationtriggerVdomArrayInput)(nil)).Elem(), GetAutomationtriggerVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralmanagementServerListInput)(nil)).Elem(), GetCentralmanagementServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralmanagementServerListArrayInput)(nil)).Elem(), GetCentralmanagementServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersyncDownIntfsBeforeSessSyncInput)(nil)).Elem(), GetClustersyncDownIntfsBeforeSessSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersyncDownIntfsBeforeSessSyncArrayInput)(nil)).Elem(), GetClustersyncDownIntfsBeforeSessSyncArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersyncSessionSyncFilterInput)(nil)).Elem(), GetClustersyncSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersyncSessionSyncFilterArrayInput)(nil)).Elem(), GetClustersyncSessionSyncFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersyncSessionSyncFilterCustomServiceInput)(nil)).Elem(), GetClustersyncSessionSyncFilterCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersyncSessionSyncFilterCustomServiceArrayInput)(nil)).Elem(), GetClustersyncSessionSyncFilterCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersyncSyncvdInput)(nil)).Elem(), GetClustersyncSyncvdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersyncSyncvdArrayInput)(nil)).Elem(), GetClustersyncSyncvdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsfFabricConnectorInput)(nil)).Elem(), GetCsfFabricConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsfFabricConnectorArrayInput)(nil)).Elem(), GetCsfFabricConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsfFabricConnectorVdomInput)(nil)).Elem(), GetCsfFabricConnectorVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsfFabricConnectorVdomArrayInput)(nil)).Elem(), GetCsfFabricConnectorVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsfFabricDeviceInput)(nil)).Elem(), GetCsfFabricDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsfFabricDeviceArrayInput)(nil)).Elem(), GetCsfFabricDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsfTrustedListInput)(nil)).Elem(), GetCsfTrustedListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsfTrustedListArrayInput)(nil)).Elem(), GetCsfTrustedListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdnsDdnsServerAddrInput)(nil)).Elem(), GetDdnsDdnsServerAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdnsDdnsServerAddrArrayInput)(nil)).Elem(), GetDdnsDdnsServerAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdnsMonitorInterfaceInput)(nil)).Elem(), GetDdnsMonitorInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdnsMonitorInterfaceArrayInput)(nil)).Elem(), GetDdnsMonitorInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDnsDomainInput)(nil)).Elem(), GetDnsDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDnsDomainArrayInput)(nil)).Elem(), GetDnsDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDnsServerHostnameInput)(nil)).Elem(), GetDnsServerHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDnsServerHostnameArrayInput)(nil)).Elem(), GetDnsServerHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDnsdatabaseDnsEntryInput)(nil)).Elem(), GetDnsdatabaseDnsEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDnsdatabaseDnsEntryArrayInput)(nil)).Elem(), GetDnsdatabaseDnsEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalInternetServiceDownloadListInput)(nil)).Elem(), GetGlobalInternetServiceDownloadListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalInternetServiceDownloadListArrayInput)(nil)).Elem(), GetGlobalInternetServiceDownloadListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaHaMgmtInterfaceInput)(nil)).Elem(), GetHaHaMgmtInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaHaMgmtInterfaceArrayInput)(nil)).Elem(), GetHaHaMgmtInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaSecondaryVclusterInput)(nil)).Elem(), GetHaSecondaryVclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaSecondaryVclusterArrayInput)(nil)).Elem(), GetHaSecondaryVclusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaUnicastPeerInput)(nil)).Elem(), GetHaUnicastPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaUnicastPeerArrayInput)(nil)).Elem(), GetHaUnicastPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaVclusterInput)(nil)).Elem(), GetHaVclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaVclusterArrayInput)(nil)).Elem(), GetHaVclusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaVclusterVdomInput)(nil)).Elem(), GetHaVclusterVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaVclusterVdomArrayInput)(nil)).Elem(), GetHaVclusterVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceClientOptionInput)(nil)).Elem(), GetInterfaceClientOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceClientOptionArrayInput)(nil)).Elem(), GetInterfaceClientOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceDhcpSnoopingServerListInput)(nil)).Elem(), GetInterfaceDhcpSnoopingServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceDhcpSnoopingServerListArrayInput)(nil)).Elem(), GetInterfaceDhcpSnoopingServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceFailAlertInterfaceInput)(nil)).Elem(), GetInterfaceFailAlertInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceFailAlertInterfaceArrayInput)(nil)).Elem(), GetInterfaceFailAlertInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Input)(nil)).Elem(), GetInterfaceIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6ArrayInput)(nil)).Elem(), GetInterfaceIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Dhcp6IapdListInput)(nil)).Elem(), GetInterfaceIpv6Dhcp6IapdListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Dhcp6IapdListArrayInput)(nil)).Elem(), GetInterfaceIpv6Dhcp6IapdListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Ip6DelegatedPrefixListInput)(nil)).Elem(), GetInterfaceIpv6Ip6DelegatedPrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Ip6DelegatedPrefixListArrayInput)(nil)).Elem(), GetInterfaceIpv6Ip6DelegatedPrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Ip6ExtraAddrInput)(nil)).Elem(), GetInterfaceIpv6Ip6ExtraAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Ip6ExtraAddrArrayInput)(nil)).Elem(), GetInterfaceIpv6Ip6ExtraAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Ip6PrefixListInput)(nil)).Elem(), GetInterfaceIpv6Ip6PrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Ip6PrefixListArrayInput)(nil)).Elem(), GetInterfaceIpv6Ip6PrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Ip6PrefixListDnsslInput)(nil)).Elem(), GetInterfaceIpv6Ip6PrefixListDnsslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Ip6PrefixListDnsslArrayInput)(nil)).Elem(), GetInterfaceIpv6Ip6PrefixListDnsslArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Vrrp6Input)(nil)).Elem(), GetInterfaceIpv6Vrrp6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceIpv6Vrrp6ArrayInput)(nil)).Elem(), GetInterfaceIpv6Vrrp6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceManagedDeviceInput)(nil)).Elem(), GetInterfaceManagedDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceManagedDeviceArrayInput)(nil)).Elem(), GetInterfaceManagedDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceMemberInput)(nil)).Elem(), GetInterfaceMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceMemberArrayInput)(nil)).Elem(), GetInterfaceMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceSecondaryipInput)(nil)).Elem(), GetInterfaceSecondaryipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceSecondaryipArrayInput)(nil)).Elem(), GetInterfaceSecondaryipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceSecurityGroupInput)(nil)).Elem(), GetInterfaceSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceSecurityGroupArrayInput)(nil)).Elem(), GetInterfaceSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceTaggingInput)(nil)).Elem(), GetInterfaceTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceTaggingArrayInput)(nil)).Elem(), GetInterfaceTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceTaggingTagInput)(nil)).Elem(), GetInterfaceTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceTaggingTagArrayInput)(nil)).Elem(), GetInterfaceTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceVrrpInput)(nil)).Elem(), GetInterfaceVrrpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceVrrpArrayInput)(nil)).Elem(), GetInterfaceVrrpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceVrrpProxyArpInput)(nil)).Elem(), GetInterfaceVrrpProxyArpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfaceVrrpProxyArpArrayInput)(nil)).Elem(), GetInterfaceVrrpProxyArpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinkmonitorRouteInput)(nil)).Elem(), GetLinkmonitorRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinkmonitorRouteArrayInput)(nil)).Elem(), GetLinkmonitorRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinkmonitorServerInput)(nil)).Elem(), GetLinkmonitorServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinkmonitorServerArrayInput)(nil)).Elem(), GetLinkmonitorServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinkmonitorServerListInput)(nil)).Elem(), GetLinkmonitorServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinkmonitorServerListArrayInput)(nil)).Elem(), GetLinkmonitorServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMobiletunnelNetworkInput)(nil)).Elem(), GetMobiletunnelNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMobiletunnelNetworkArrayInput)(nil)).Elem(), GetMobiletunnelNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNat64SecondaryPrefixInput)(nil)).Elem(), GetNat64SecondaryPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNat64SecondaryPrefixArrayInput)(nil)).Elem(), GetNat64SecondaryPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNdproxyMemberInput)(nil)).Elem(), GetNdproxyMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNdproxyMemberArrayInput)(nil)).Elem(), GetNdproxyMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetflowCollectorInput)(nil)).Elem(), GetNetflowCollectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetflowCollectorArrayInput)(nil)).Elem(), GetNetflowCollectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNtpInterfaceInput)(nil)).Elem(), GetNtpInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNtpInterfaceArrayInput)(nil)).Elem(), GetNtpInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNtpNtpserverInput)(nil)).Elem(), GetNtpNtpserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNtpNtpserverArrayInput)(nil)).Elem(), GetNtpNtpserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjecttaggingTagInput)(nil)).Elem(), GetObjecttaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjecttaggingTagArrayInput)(nil)).Elem(), GetObjecttaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupAdminInput)(nil)).Elem(), GetReplacemsggroupAdminArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupAdminArrayInput)(nil)).Elem(), GetReplacemsggroupAdminArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupAlertmailInput)(nil)).Elem(), GetReplacemsggroupAlertmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupAlertmailArrayInput)(nil)).Elem(), GetReplacemsggroupAlertmailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupAuthInput)(nil)).Elem(), GetReplacemsggroupAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupAuthArrayInput)(nil)).Elem(), GetReplacemsggroupAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupAutomationInput)(nil)).Elem(), GetReplacemsggroupAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupAutomationArrayInput)(nil)).Elem(), GetReplacemsggroupAutomationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupCustomMessageInput)(nil)).Elem(), GetReplacemsggroupCustomMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupCustomMessageArrayInput)(nil)).Elem(), GetReplacemsggroupCustomMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupDeviceDetectionPortalInput)(nil)).Elem(), GetReplacemsggroupDeviceDetectionPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupDeviceDetectionPortalArrayInput)(nil)).Elem(), GetReplacemsggroupDeviceDetectionPortalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupEcInput)(nil)).Elem(), GetReplacemsggroupEcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupEcArrayInput)(nil)).Elem(), GetReplacemsggroupEcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupFortiguardWfInput)(nil)).Elem(), GetReplacemsggroupFortiguardWfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupFortiguardWfArrayInput)(nil)).Elem(), GetReplacemsggroupFortiguardWfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupFtpInput)(nil)).Elem(), GetReplacemsggroupFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupFtpArrayInput)(nil)).Elem(), GetReplacemsggroupFtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupHttpInput)(nil)).Elem(), GetReplacemsggroupHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupHttpArrayInput)(nil)).Elem(), GetReplacemsggroupHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupIcapInput)(nil)).Elem(), GetReplacemsggroupIcapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupIcapArrayInput)(nil)).Elem(), GetReplacemsggroupIcapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupMailInput)(nil)).Elem(), GetReplacemsggroupMailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupMailArrayInput)(nil)).Elem(), GetReplacemsggroupMailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupNacQuarInput)(nil)).Elem(), GetReplacemsggroupNacQuarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupNacQuarArrayInput)(nil)).Elem(), GetReplacemsggroupNacQuarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupNntpInput)(nil)).Elem(), GetReplacemsggroupNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupNntpArrayInput)(nil)).Elem(), GetReplacemsggroupNntpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupSpamInput)(nil)).Elem(), GetReplacemsggroupSpamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupSpamArrayInput)(nil)).Elem(), GetReplacemsggroupSpamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupSslvpnInput)(nil)).Elem(), GetReplacemsggroupSslvpnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupSslvpnArrayInput)(nil)).Elem(), GetReplacemsggroupSslvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupTrafficQuotaInput)(nil)).Elem(), GetReplacemsggroupTrafficQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupTrafficQuotaArrayInput)(nil)).Elem(), GetReplacemsggroupTrafficQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupUtmInput)(nil)).Elem(), GetReplacemsggroupUtmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupUtmArrayInput)(nil)).Elem(), GetReplacemsggroupUtmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupWebproxyInput)(nil)).Elem(), GetReplacemsggroupWebproxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplacemsggroupWebproxyArrayInput)(nil)).Elem(), GetReplacemsggroupWebproxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorCompartmentListInput)(nil)).Elem(), GetSdnconnectorCompartmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorCompartmentListArrayInput)(nil)).Elem(), GetSdnconnectorCompartmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorExternalAccountListInput)(nil)).Elem(), GetSdnconnectorExternalAccountListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorExternalAccountListArrayInput)(nil)).Elem(), GetSdnconnectorExternalAccountListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorExternalAccountListRegionListInput)(nil)).Elem(), GetSdnconnectorExternalAccountListRegionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorExternalAccountListRegionListArrayInput)(nil)).Elem(), GetSdnconnectorExternalAccountListRegionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorExternalIpInput)(nil)).Elem(), GetSdnconnectorExternalIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorExternalIpArrayInput)(nil)).Elem(), GetSdnconnectorExternalIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorForwardingRuleInput)(nil)).Elem(), GetSdnconnectorForwardingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorForwardingRuleArrayInput)(nil)).Elem(), GetSdnconnectorForwardingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorGcpProjectListInput)(nil)).Elem(), GetSdnconnectorGcpProjectListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorGcpProjectListArrayInput)(nil)).Elem(), GetSdnconnectorGcpProjectListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorGcpProjectListGcpZoneListInput)(nil)).Elem(), GetSdnconnectorGcpProjectListGcpZoneListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorGcpProjectListGcpZoneListArrayInput)(nil)).Elem(), GetSdnconnectorGcpProjectListGcpZoneListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorNicInput)(nil)).Elem(), GetSdnconnectorNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorNicArrayInput)(nil)).Elem(), GetSdnconnectorNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorNicIpInput)(nil)).Elem(), GetSdnconnectorNicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorNicIpArrayInput)(nil)).Elem(), GetSdnconnectorNicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorOciRegionListInput)(nil)).Elem(), GetSdnconnectorOciRegionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorOciRegionListArrayInput)(nil)).Elem(), GetSdnconnectorOciRegionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorRouteInput)(nil)).Elem(), GetSdnconnectorRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorRouteArrayInput)(nil)).Elem(), GetSdnconnectorRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorRouteTableInput)(nil)).Elem(), GetSdnconnectorRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorRouteTableArrayInput)(nil)).Elem(), GetSdnconnectorRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorRouteTableRouteInput)(nil)).Elem(), GetSdnconnectorRouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorRouteTableRouteArrayInput)(nil)).Elem(), GetSdnconnectorRouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorServerListInput)(nil)).Elem(), GetSdnconnectorServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSdnconnectorServerListArrayInput)(nil)).Elem(), GetSdnconnectorServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionttlPortInput)(nil)).Elem(), GetSessionttlPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionttlPortArrayInput)(nil)).Elem(), GetSessionttlPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSflowCollectorInput)(nil)).Elem(), GetSflowCollectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSflowCollectorArrayInput)(nil)).Elem(), GetSflowCollectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVdomexceptionVdomInput)(nil)).Elem(), GetVdomexceptionVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVdomexceptionVdomArrayInput)(nil)).Elem(), GetVdomexceptionVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVdomnetflowCollectorInput)(nil)).Elem(), GetVdomnetflowCollectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVdomnetflowCollectorArrayInput)(nil)).Elem(), GetVdomnetflowCollectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVdomsflowCollectorInput)(nil)).Elem(), GetVdomsflowCollectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVdomsflowCollectorArrayInput)(nil)).Elem(), GetVdomsflowCollectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkFailAlertInterfaceInput)(nil)).Elem(), GetVirtualwanlinkFailAlertInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkFailAlertInterfaceArrayInput)(nil)).Elem(), GetVirtualwanlinkFailAlertInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkHealthCheckInput)(nil)).Elem(), GetVirtualwanlinkHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkHealthCheckArrayInput)(nil)).Elem(), GetVirtualwanlinkHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkHealthCheckMemberInput)(nil)).Elem(), GetVirtualwanlinkHealthCheckMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkHealthCheckMemberArrayInput)(nil)).Elem(), GetVirtualwanlinkHealthCheckMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkHealthCheckSlaInput)(nil)).Elem(), GetVirtualwanlinkHealthCheckSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkHealthCheckSlaArrayInput)(nil)).Elem(), GetVirtualwanlinkHealthCheckSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkMemberInput)(nil)).Elem(), GetVirtualwanlinkMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkMemberArrayInput)(nil)).Elem(), GetVirtualwanlinkMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkNeighborInput)(nil)).Elem(), GetVirtualwanlinkNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkNeighborArrayInput)(nil)).Elem(), GetVirtualwanlinkNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInput)(nil)).Elem(), GetVirtualwanlinkServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceDst6Input)(nil)).Elem(), GetVirtualwanlinkServiceDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceDst6ArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceDstInput)(nil)).Elem(), GetVirtualwanlinkServiceDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceDstArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceGroupInput)(nil)).Elem(), GetVirtualwanlinkServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceGroupArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInputDeviceInput)(nil)).Elem(), GetVirtualwanlinkServiceInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInputDeviceArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceAppCtrlInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceAppCtrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceAppCtrlArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceAppCtrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceAppCtrlGroupInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCtrlInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceCtrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCtrlArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceCtrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCtrlGroupInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceCtrlGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceCtrlGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCustomInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCustomArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCustomGroupInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceCustomGroupArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceGroupInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceGroupArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceIdInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceIdArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceNameInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceInternetServiceNameArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServicePriorityMemberInput)(nil)).Elem(), GetVirtualwanlinkServicePriorityMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServicePriorityMemberArrayInput)(nil)).Elem(), GetVirtualwanlinkServicePriorityMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceSlaInput)(nil)).Elem(), GetVirtualwanlinkServiceSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceSlaArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceSrc6Input)(nil)).Elem(), GetVirtualwanlinkServiceSrc6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceSrc6ArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceSrc6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceSrcInput)(nil)).Elem(), GetVirtualwanlinkServiceSrcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceSrcArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceSrcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceUserInput)(nil)).Elem(), GetVirtualwanlinkServiceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkServiceUserArrayInput)(nil)).Elem(), GetVirtualwanlinkServiceUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkZoneInput)(nil)).Elem(), GetVirtualwanlinkZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualwanlinkZoneArrayInput)(nil)).Elem(), GetVirtualwanlinkZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVxlanRemoteIp6Input)(nil)).Elem(), GetVxlanRemoteIp6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVxlanRemoteIp6ArrayInput)(nil)).Elem(), GetVxlanRemoteIp6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVxlanRemoteIpInput)(nil)).Elem(), GetVxlanRemoteIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVxlanRemoteIpArrayInput)(nil)).Elem(), GetVxlanRemoteIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneInterfaceInput)(nil)).Elem(), GetZoneInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneInterfaceArrayInput)(nil)).Elem(), GetZoneInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneTaggingInput)(nil)).Elem(), GetZoneTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneTaggingArrayInput)(nil)).Elem(), GetZoneTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneTaggingTagInput)(nil)).Elem(), GetZoneTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneTaggingTagArrayInput)(nil)).Elem(), GetZoneTaggingTagArray{})
	pulumi.RegisterOutputType(AccprofileFwgrpPermissionOutput{})
	pulumi.RegisterOutputType(AccprofileFwgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(AccprofileLoggrpPermissionOutput{})
	pulumi.RegisterOutputType(AccprofileLoggrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(AccprofileNetgrpPermissionOutput{})
	pulumi.RegisterOutputType(AccprofileNetgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(AccprofileSysgrpPermissionOutput{})
	pulumi.RegisterOutputType(AccprofileSysgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(AccprofileUtmgrpPermissionOutput{})
	pulumi.RegisterOutputType(AccprofileUtmgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(AcmeAccountOutput{})
	pulumi.RegisterOutputType(AcmeAccountArrayOutput{})
	pulumi.RegisterOutputType(AcmeInterfaceOutput{})
	pulumi.RegisterOutputType(AcmeInterfaceArrayOutput{})
	pulumi.RegisterOutputType(AdminGuestUsergroupOutput{})
	pulumi.RegisterOutputType(AdminGuestUsergroupArrayOutput{})
	pulumi.RegisterOutputType(AdminGuiDashboardOutput{})
	pulumi.RegisterOutputType(AdminGuiDashboardArrayOutput{})
	pulumi.RegisterOutputType(AdminGuiDashboardWidgetOutput{})
	pulumi.RegisterOutputType(AdminGuiDashboardWidgetArrayOutput{})
	pulumi.RegisterOutputType(AdminGuiDashboardWidgetFilterOutput{})
	pulumi.RegisterOutputType(AdminGuiDashboardWidgetFilterArrayOutput{})
	pulumi.RegisterOutputType(AdminGuiGlobalMenuFavoriteOutput{})
	pulumi.RegisterOutputType(AdminGuiGlobalMenuFavoriteArrayOutput{})
	pulumi.RegisterOutputType(AdminGuiNewFeatureAcknowledgeOutput{})
	pulumi.RegisterOutputType(AdminGuiNewFeatureAcknowledgeArrayOutput{})
	pulumi.RegisterOutputType(AdminGuiVdomMenuFavoriteOutput{})
	pulumi.RegisterOutputType(AdminGuiVdomMenuFavoriteArrayOutput{})
	pulumi.RegisterOutputType(AdminLoginTimeOutput{})
	pulumi.RegisterOutputType(AdminLoginTimeArrayOutput{})
	pulumi.RegisterOutputType(AdminVdomOutput{})
	pulumi.RegisterOutputType(AdminVdomArrayOutput{})
	pulumi.RegisterOutputType(AlarmGroupOutput{})
	pulumi.RegisterOutputType(AlarmGroupArrayOutput{})
	pulumi.RegisterOutputType(AlarmGroupFwPolicyViolationOutput{})
	pulumi.RegisterOutputType(AlarmGroupFwPolicyViolationArrayOutput{})
	pulumi.RegisterOutputType(ApiuserSettingTrusthostOutput{})
	pulumi.RegisterOutputType(ApiuserSettingTrusthostArrayOutput{})
	pulumi.RegisterOutputType(ApiuserTrusthostOutput{})
	pulumi.RegisterOutputType(ApiuserTrusthostArrayOutput{})
	pulumi.RegisterOutputType(ApiuserVdomOutput{})
	pulumi.RegisterOutputType(ApiuserVdomArrayOutput{})
	pulumi.RegisterOutputType(AutomationactionEmailToOutput{})
	pulumi.RegisterOutputType(AutomationactionEmailToArrayOutput{})
	pulumi.RegisterOutputType(AutomationactionHeaderOutput{})
	pulumi.RegisterOutputType(AutomationactionHeaderArrayOutput{})
	pulumi.RegisterOutputType(AutomationactionHttpHeaderOutput{})
	pulumi.RegisterOutputType(AutomationactionHttpHeaderArrayOutput{})
	pulumi.RegisterOutputType(AutomationactionSdnConnectorOutput{})
	pulumi.RegisterOutputType(AutomationactionSdnConnectorArrayOutput{})
	pulumi.RegisterOutputType(AutomationdestinationDestinationOutput{})
	pulumi.RegisterOutputType(AutomationdestinationDestinationArrayOutput{})
	pulumi.RegisterOutputType(AutomationstitchActionOutput{})
	pulumi.RegisterOutputType(AutomationstitchActionArrayOutput{})
	pulumi.RegisterOutputType(AutomationstitchDestinationOutput{})
	pulumi.RegisterOutputType(AutomationstitchDestinationArrayOutput{})
	pulumi.RegisterOutputType(AutomationtriggerFieldOutput{})
	pulumi.RegisterOutputType(AutomationtriggerFieldArrayOutput{})
	pulumi.RegisterOutputType(AutomationtriggerLogidBlockOutput{})
	pulumi.RegisterOutputType(AutomationtriggerLogidBlockArrayOutput{})
	pulumi.RegisterOutputType(AutomationtriggerVdomOutput{})
	pulumi.RegisterOutputType(AutomationtriggerVdomArrayOutput{})
	pulumi.RegisterOutputType(CentralmanagementServerListOutput{})
	pulumi.RegisterOutputType(CentralmanagementServerListArrayOutput{})
	pulumi.RegisterOutputType(ClustersyncDownIntfsBeforeSessSyncOutput{})
	pulumi.RegisterOutputType(ClustersyncDownIntfsBeforeSessSyncArrayOutput{})
	pulumi.RegisterOutputType(ClustersyncSessionSyncFilterOutput{})
	pulumi.RegisterOutputType(ClustersyncSessionSyncFilterPtrOutput{})
	pulumi.RegisterOutputType(ClustersyncSessionSyncFilterCustomServiceOutput{})
	pulumi.RegisterOutputType(ClustersyncSessionSyncFilterCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(ClustersyncSyncvdOutput{})
	pulumi.RegisterOutputType(ClustersyncSyncvdArrayOutput{})
	pulumi.RegisterOutputType(CsfFabricConnectorOutput{})
	pulumi.RegisterOutputType(CsfFabricConnectorArrayOutput{})
	pulumi.RegisterOutputType(CsfFabricConnectorVdomOutput{})
	pulumi.RegisterOutputType(CsfFabricConnectorVdomArrayOutput{})
	pulumi.RegisterOutputType(CsfFabricDeviceOutput{})
	pulumi.RegisterOutputType(CsfFabricDeviceArrayOutput{})
	pulumi.RegisterOutputType(CsfTrustedListOutput{})
	pulumi.RegisterOutputType(CsfTrustedListArrayOutput{})
	pulumi.RegisterOutputType(DdnsDdnsServerAddrOutput{})
	pulumi.RegisterOutputType(DdnsDdnsServerAddrArrayOutput{})
	pulumi.RegisterOutputType(DdnsMonitorInterfaceOutput{})
	pulumi.RegisterOutputType(DdnsMonitorInterfaceArrayOutput{})
	pulumi.RegisterOutputType(DeviceupgradeKnownHaMemberOutput{})
	pulumi.RegisterOutputType(DeviceupgradeKnownHaMemberArrayOutput{})
	pulumi.RegisterOutputType(DnsDomainOutput{})
	pulumi.RegisterOutputType(DnsDomainArrayOutput{})
	pulumi.RegisterOutputType(DnsServerHostnameOutput{})
	pulumi.RegisterOutputType(DnsServerHostnameArrayOutput{})
	pulumi.RegisterOutputType(DnsdatabaseDnsEntryOutput{})
	pulumi.RegisterOutputType(DnsdatabaseDnsEntryArrayOutput{})
	pulumi.RegisterOutputType(EvpnExportRtOutput{})
	pulumi.RegisterOutputType(EvpnExportRtArrayOutput{})
	pulumi.RegisterOutputType(EvpnImportRtOutput{})
	pulumi.RegisterOutputType(EvpnImportRtArrayOutput{})
	pulumi.RegisterOutputType(FabricvpnAdvertisedSubnetOutput{})
	pulumi.RegisterOutputType(FabricvpnAdvertisedSubnetArrayOutput{})
	pulumi.RegisterOutputType(FabricvpnOverlayOutput{})
	pulumi.RegisterOutputType(FabricvpnOverlayArrayOutput{})
	pulumi.RegisterOutputType(FederatedupgradeKnownHaMemberOutput{})
	pulumi.RegisterOutputType(FederatedupgradeKnownHaMemberArrayOutput{})
	pulumi.RegisterOutputType(FederatedupgradeNodeListOutput{})
	pulumi.RegisterOutputType(FederatedupgradeNodeListArrayOutput{})
	pulumi.RegisterOutputType(GeoipoverrideIp6RangeOutput{})
	pulumi.RegisterOutputType(GeoipoverrideIp6RangeArrayOutput{})
	pulumi.RegisterOutputType(GeoipoverrideIpRangeOutput{})
	pulumi.RegisterOutputType(GeoipoverrideIpRangeArrayOutput{})
	pulumi.RegisterOutputType(GlobalInternetServiceDownloadListOutput{})
	pulumi.RegisterOutputType(GlobalInternetServiceDownloadListArrayOutput{})
	pulumi.RegisterOutputType(HaHaMgmtInterfaceOutput{})
	pulumi.RegisterOutputType(HaHaMgmtInterfaceArrayOutput{})
	pulumi.RegisterOutputType(HaSecondaryVclusterOutput{})
	pulumi.RegisterOutputType(HaSecondaryVclusterPtrOutput{})
	pulumi.RegisterOutputType(HaUnicastPeerOutput{})
	pulumi.RegisterOutputType(HaUnicastPeerArrayOutput{})
	pulumi.RegisterOutputType(HaVclusterOutput{})
	pulumi.RegisterOutputType(HaVclusterArrayOutput{})
	pulumi.RegisterOutputType(HaVclusterVdomOutput{})
	pulumi.RegisterOutputType(HaVclusterVdomArrayOutput{})
	pulumi.RegisterOutputType(IkeDhGroup14Output{})
	pulumi.RegisterOutputType(IkeDhGroup14PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup15Output{})
	pulumi.RegisterOutputType(IkeDhGroup15PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup16Output{})
	pulumi.RegisterOutputType(IkeDhGroup16PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup17Output{})
	pulumi.RegisterOutputType(IkeDhGroup17PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup18Output{})
	pulumi.RegisterOutputType(IkeDhGroup18PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup19Output{})
	pulumi.RegisterOutputType(IkeDhGroup19PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup1Output{})
	pulumi.RegisterOutputType(IkeDhGroup1PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup20Output{})
	pulumi.RegisterOutputType(IkeDhGroup20PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup21Output{})
	pulumi.RegisterOutputType(IkeDhGroup21PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup27Output{})
	pulumi.RegisterOutputType(IkeDhGroup27PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup28Output{})
	pulumi.RegisterOutputType(IkeDhGroup28PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup29Output{})
	pulumi.RegisterOutputType(IkeDhGroup29PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup2Output{})
	pulumi.RegisterOutputType(IkeDhGroup2PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup30Output{})
	pulumi.RegisterOutputType(IkeDhGroup30PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup31Output{})
	pulumi.RegisterOutputType(IkeDhGroup31PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup32Output{})
	pulumi.RegisterOutputType(IkeDhGroup32PtrOutput{})
	pulumi.RegisterOutputType(IkeDhGroup5Output{})
	pulumi.RegisterOutputType(IkeDhGroup5PtrOutput{})
	pulumi.RegisterOutputType(InterfaceClientOptionOutput{})
	pulumi.RegisterOutputType(InterfaceClientOptionArrayOutput{})
	pulumi.RegisterOutputType(InterfaceDhcpSnoopingServerListOutput{})
	pulumi.RegisterOutputType(InterfaceDhcpSnoopingServerListArrayOutput{})
	pulumi.RegisterOutputType(InterfaceFailAlertInterfaceOutput{})
	pulumi.RegisterOutputType(InterfaceFailAlertInterfaceArrayOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Output{})
	pulumi.RegisterOutputType(InterfaceIpv6PtrOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Dhcp6IapdListOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Dhcp6IapdListArrayOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Ip6DelegatedPrefixListOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Ip6DelegatedPrefixListArrayOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Ip6ExtraAddrOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Ip6ExtraAddrArrayOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Ip6PrefixListOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Ip6PrefixListArrayOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Ip6PrefixListDnsslOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Ip6PrefixListDnsslArrayOutput{})
	pulumi.RegisterOutputType(InterfaceIpv6Vrrp6Output{})
	pulumi.RegisterOutputType(InterfaceIpv6Vrrp6ArrayOutput{})
	pulumi.RegisterOutputType(InterfaceManagedDeviceOutput{})
	pulumi.RegisterOutputType(InterfaceManagedDeviceArrayOutput{})
	pulumi.RegisterOutputType(InterfaceMemberOutput{})
	pulumi.RegisterOutputType(InterfaceMemberArrayOutput{})
	pulumi.RegisterOutputType(InterfaceSecondaryipOutput{})
	pulumi.RegisterOutputType(InterfaceSecondaryipArrayOutput{})
	pulumi.RegisterOutputType(InterfaceSecurityGroupOutput{})
	pulumi.RegisterOutputType(InterfaceSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(InterfaceTaggingOutput{})
	pulumi.RegisterOutputType(InterfaceTaggingArrayOutput{})
	pulumi.RegisterOutputType(InterfaceTaggingTagOutput{})
	pulumi.RegisterOutputType(InterfaceTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(InterfaceVrrpOutput{})
	pulumi.RegisterOutputType(InterfaceVrrpArrayOutput{})
	pulumi.RegisterOutputType(InterfaceVrrpProxyArpOutput{})
	pulumi.RegisterOutputType(InterfaceVrrpProxyArpArrayOutput{})
	pulumi.RegisterOutputType(IpamPoolOutput{})
	pulumi.RegisterOutputType(IpamPoolArrayOutput{})
	pulumi.RegisterOutputType(IpamRuleOutput{})
	pulumi.RegisterOutputType(IpamRuleArrayOutput{})
	pulumi.RegisterOutputType(IpamRuleDeviceOutput{})
	pulumi.RegisterOutputType(IpamRuleDeviceArrayOutput{})
	pulumi.RegisterOutputType(IpamRuleInterfaceOutput{})
	pulumi.RegisterOutputType(IpamRuleInterfaceArrayOutput{})
	pulumi.RegisterOutputType(IpamRulePoolOutput{})
	pulumi.RegisterOutputType(IpamRulePoolArrayOutput{})
	pulumi.RegisterOutputType(IpsecaggregateMemberOutput{})
	pulumi.RegisterOutputType(IpsecaggregateMemberArrayOutput{})
	pulumi.RegisterOutputType(LinkmonitorRouteOutput{})
	pulumi.RegisterOutputType(LinkmonitorRouteArrayOutput{})
	pulumi.RegisterOutputType(LinkmonitorServerOutput{})
	pulumi.RegisterOutputType(LinkmonitorServerArrayOutput{})
	pulumi.RegisterOutputType(LinkmonitorServerListOutput{})
	pulumi.RegisterOutputType(LinkmonitorServerListArrayOutput{})
	pulumi.RegisterOutputType(MobiletunnelNetworkOutput{})
	pulumi.RegisterOutputType(MobiletunnelNetworkArrayOutput{})
	pulumi.RegisterOutputType(Nat64SecondaryPrefixOutput{})
	pulumi.RegisterOutputType(Nat64SecondaryPrefixArrayOutput{})
	pulumi.RegisterOutputType(NdproxyMemberOutput{})
	pulumi.RegisterOutputType(NdproxyMemberArrayOutput{})
	pulumi.RegisterOutputType(NetflowCollectorOutput{})
	pulumi.RegisterOutputType(NetflowCollectorArrayOutput{})
	pulumi.RegisterOutputType(NpuPriorityProtocolOutput{})
	pulumi.RegisterOutputType(NpuPriorityProtocolPtrOutput{})
	pulumi.RegisterOutputType(NtpInterfaceOutput{})
	pulumi.RegisterOutputType(NtpInterfaceArrayOutput{})
	pulumi.RegisterOutputType(NtpNtpserverOutput{})
	pulumi.RegisterOutputType(NtpNtpserverArrayOutput{})
	pulumi.RegisterOutputType(ObjecttaggingTagOutput{})
	pulumi.RegisterOutputType(ObjecttaggingTagArrayOutput{})
	pulumi.RegisterOutputType(PcpserverPoolOutput{})
	pulumi.RegisterOutputType(PcpserverPoolArrayOutput{})
	pulumi.RegisterOutputType(PcpserverPoolClientSubnetOutput{})
	pulumi.RegisterOutputType(PcpserverPoolClientSubnetArrayOutput{})
	pulumi.RegisterOutputType(PcpserverPoolIntlIntfOutput{})
	pulumi.RegisterOutputType(PcpserverPoolIntlIntfArrayOutput{})
	pulumi.RegisterOutputType(PcpserverPoolThirdPartySubnetOutput{})
	pulumi.RegisterOutputType(PcpserverPoolThirdPartySubnetArrayOutput{})
	pulumi.RegisterOutputType(PtpServerInterfaceOutput{})
	pulumi.RegisterOutputType(PtpServerInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupAdminOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupAdminArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupAlertmailOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupAlertmailArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupAuthOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupAuthArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupAutomationOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupAutomationArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupCustomMessageOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupCustomMessageArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupDeviceDetectionPortalOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupDeviceDetectionPortalArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupEcOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupEcArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupFortiguardWfOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupFortiguardWfArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupFtpOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupFtpArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupHttpOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupHttpArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupIcapOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupIcapArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupMailOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupMailArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupNacQuarOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupNacQuarArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupNntpOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupNntpArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupSpamOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupSpamArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupSslvpnOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupSslvpnArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupTrafficQuotaOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupTrafficQuotaArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupUtmOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupUtmArrayOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupWebproxyOutput{})
	pulumi.RegisterOutputType(ReplacemsggroupWebproxyArrayOutput{})
	pulumi.RegisterOutputType(SamlServiceProviderOutput{})
	pulumi.RegisterOutputType(SamlServiceProviderArrayOutput{})
	pulumi.RegisterOutputType(SamlServiceProviderAssertionAttributeOutput{})
	pulumi.RegisterOutputType(SamlServiceProviderAssertionAttributeArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorCompartmentListOutput{})
	pulumi.RegisterOutputType(SdnconnectorCompartmentListArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorExternalAccountListOutput{})
	pulumi.RegisterOutputType(SdnconnectorExternalAccountListArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorExternalAccountListRegionListOutput{})
	pulumi.RegisterOutputType(SdnconnectorExternalAccountListRegionListArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorExternalIpOutput{})
	pulumi.RegisterOutputType(SdnconnectorExternalIpArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorForwardingRuleOutput{})
	pulumi.RegisterOutputType(SdnconnectorForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorGcpProjectListOutput{})
	pulumi.RegisterOutputType(SdnconnectorGcpProjectListArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorGcpProjectListGcpZoneListOutput{})
	pulumi.RegisterOutputType(SdnconnectorGcpProjectListGcpZoneListArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorNicOutput{})
	pulumi.RegisterOutputType(SdnconnectorNicArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorNicIpOutput{})
	pulumi.RegisterOutputType(SdnconnectorNicIpArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorOciRegionListOutput{})
	pulumi.RegisterOutputType(SdnconnectorOciRegionListArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorRouteOutput{})
	pulumi.RegisterOutputType(SdnconnectorRouteArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorRouteTableOutput{})
	pulumi.RegisterOutputType(SdnconnectorRouteTableArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorRouteTableRouteOutput{})
	pulumi.RegisterOutputType(SdnconnectorRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(SdnconnectorServerListOutput{})
	pulumi.RegisterOutputType(SdnconnectorServerListArrayOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationArrayOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationDstaddr6Output{})
	pulumi.RegisterOutputType(SdwanDuplicationDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationDstaddrOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationDstaddrArrayOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationDstintfOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationDstintfArrayOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationServiceOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationServiceArrayOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationServiceIdOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationServiceIdArrayOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationSrcaddr6Output{})
	pulumi.RegisterOutputType(SdwanDuplicationSrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationSrcaddrOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationSrcaddrArrayOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationSrcintfOutput{})
	pulumi.RegisterOutputType(SdwanDuplicationSrcintfArrayOutput{})
	pulumi.RegisterOutputType(SdwanFailAlertInterfaceOutput{})
	pulumi.RegisterOutputType(SdwanFailAlertInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SdwanHealthCheckOutput{})
	pulumi.RegisterOutputType(SdwanHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(SdwanHealthCheckMemberOutput{})
	pulumi.RegisterOutputType(SdwanHealthCheckMemberArrayOutput{})
	pulumi.RegisterOutputType(SdwanHealthCheckSlaOutput{})
	pulumi.RegisterOutputType(SdwanHealthCheckSlaArrayOutput{})
	pulumi.RegisterOutputType(SdwanMemberOutput{})
	pulumi.RegisterOutputType(SdwanMemberArrayOutput{})
	pulumi.RegisterOutputType(SdwanNeighborOutput{})
	pulumi.RegisterOutputType(SdwanNeighborArrayOutput{})
	pulumi.RegisterOutputType(SdwanNeighborMemberBlockOutput{})
	pulumi.RegisterOutputType(SdwanNeighborMemberBlockArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceOutput{})
	pulumi.RegisterOutputType(SdwanServiceArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceDst6Output{})
	pulumi.RegisterOutputType(SdwanServiceDst6ArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceDstOutput{})
	pulumi.RegisterOutputType(SdwanServiceDstArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceGroupOutput{})
	pulumi.RegisterOutputType(SdwanServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceHealthCheckOutput{})
	pulumi.RegisterOutputType(SdwanServiceHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceInputDeviceOutput{})
	pulumi.RegisterOutputType(SdwanServiceInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceInputZoneOutput{})
	pulumi.RegisterOutputType(SdwanServiceInputZoneArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceAppCtrlOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceAppCtrlArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceAppCtrlCategoryOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceAppCtrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceAppCtrlGroupOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceAppCtrlGroupArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceNameOutput{})
	pulumi.RegisterOutputType(SdwanServiceInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(SdwanServicePriorityMemberOutput{})
	pulumi.RegisterOutputType(SdwanServicePriorityMemberArrayOutput{})
	pulumi.RegisterOutputType(SdwanServicePriorityZoneOutput{})
	pulumi.RegisterOutputType(SdwanServicePriorityZoneArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceSlaOutput{})
	pulumi.RegisterOutputType(SdwanServiceSlaArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceSrc6Output{})
	pulumi.RegisterOutputType(SdwanServiceSrc6ArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceSrcOutput{})
	pulumi.RegisterOutputType(SdwanServiceSrcArrayOutput{})
	pulumi.RegisterOutputType(SdwanServiceUserOutput{})
	pulumi.RegisterOutputType(SdwanServiceUserArrayOutput{})
	pulumi.RegisterOutputType(SdwanZoneOutput{})
	pulumi.RegisterOutputType(SdwanZoneArrayOutput{})
	pulumi.RegisterOutputType(SessionttlPortOutput{})
	pulumi.RegisterOutputType(SessionttlPortArrayOutput{})
	pulumi.RegisterOutputType(SettingsGuiDefaultPolicyColumnOutput{})
	pulumi.RegisterOutputType(SettingsGuiDefaultPolicyColumnArrayOutput{})
	pulumi.RegisterOutputType(SflowCollectorOutput{})
	pulumi.RegisterOutputType(SflowCollectorArrayOutput{})
	pulumi.RegisterOutputType(SpeedtestscheduleScheduleOutput{})
	pulumi.RegisterOutputType(SpeedtestscheduleScheduleArrayOutput{})
	pulumi.RegisterOutputType(SpeedtestserverHostOutput{})
	pulumi.RegisterOutputType(SpeedtestserverHostArrayOutput{})
	pulumi.RegisterOutputType(SsoadminVdomOutput{})
	pulumi.RegisterOutputType(SsoadminVdomArrayOutput{})
	pulumi.RegisterOutputType(SsoforticloudadminVdomOutput{})
	pulumi.RegisterOutputType(SsoforticloudadminVdomArrayOutput{})
	pulumi.RegisterOutputType(SsofortigatecloudadminVdomOutput{})
	pulumi.RegisterOutputType(SsofortigatecloudadminVdomArrayOutput{})
	pulumi.RegisterOutputType(StandaloneclusterClusterPeerOutput{})
	pulumi.RegisterOutputType(StandaloneclusterClusterPeerArrayOutput{})
	pulumi.RegisterOutputType(StandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput{})
	pulumi.RegisterOutputType(StandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput{})
	pulumi.RegisterOutputType(StandaloneclusterClusterPeerSessionSyncFilterOutput{})
	pulumi.RegisterOutputType(StandaloneclusterClusterPeerSessionSyncFilterPtrOutput{})
	pulumi.RegisterOutputType(StandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput{})
	pulumi.RegisterOutputType(StandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(StandaloneclusterClusterPeerSyncvdOutput{})
	pulumi.RegisterOutputType(StandaloneclusterClusterPeerSyncvdArrayOutput{})
	pulumi.RegisterOutputType(SwitchinterfaceMemberOutput{})
	pulumi.RegisterOutputType(SwitchinterfaceMemberArrayOutput{})
	pulumi.RegisterOutputType(SwitchinterfaceSpanSourcePortOutput{})
	pulumi.RegisterOutputType(SwitchinterfaceSpanSourcePortArrayOutput{})
	pulumi.RegisterOutputType(VdomdnsServerHostnameOutput{})
	pulumi.RegisterOutputType(VdomdnsServerHostnameArrayOutput{})
	pulumi.RegisterOutputType(VdomexceptionVdomOutput{})
	pulumi.RegisterOutputType(VdomexceptionVdomArrayOutput{})
	pulumi.RegisterOutputType(VdomnetflowCollectorOutput{})
	pulumi.RegisterOutputType(VdomnetflowCollectorArrayOutput{})
	pulumi.RegisterOutputType(VdomsflowCollectorOutput{})
	pulumi.RegisterOutputType(VdomsflowCollectorArrayOutput{})
	pulumi.RegisterOutputType(VirtualswitchPortOutput{})
	pulumi.RegisterOutputType(VirtualswitchPortArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkFailAlertInterfaceOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkFailAlertInterfaceArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkHealthCheckOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkHealthCheckMemberOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkHealthCheckMemberArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkHealthCheckSlaOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkHealthCheckSlaArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkMemberOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkMemberArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkNeighborOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkNeighborArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceDst6Output{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceDst6ArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceDstOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceDstArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceGroupOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInputDeviceOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceAppCtrlOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceAppCtrlArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceAppCtrlGroupOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceCtrlOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceCtrlArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceCtrlGroupOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceIdOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceNameOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServicePriorityMemberOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServicePriorityMemberArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceSlaOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceSlaArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceSrc6Output{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceSrc6ArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceSrcOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceSrcArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceUserOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkServiceUserArrayOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkZoneOutput{})
	pulumi.RegisterOutputType(VirtualwanlinkZoneArrayOutput{})
	pulumi.RegisterOutputType(VirtualwirepairMemberOutput{})
	pulumi.RegisterOutputType(VirtualwirepairMemberArrayOutput{})
	pulumi.RegisterOutputType(VxlanRemoteIp6Output{})
	pulumi.RegisterOutputType(VxlanRemoteIp6ArrayOutput{})
	pulumi.RegisterOutputType(VxlanRemoteIpOutput{})
	pulumi.RegisterOutputType(VxlanRemoteIpArrayOutput{})
	pulumi.RegisterOutputType(ZoneInterfaceOutput{})
	pulumi.RegisterOutputType(ZoneInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ZoneTaggingOutput{})
	pulumi.RegisterOutputType(ZoneTaggingArrayOutput{})
	pulumi.RegisterOutputType(ZoneTaggingTagOutput{})
	pulumi.RegisterOutputType(ZoneTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetAccprofileFwgrpPermissionOutput{})
	pulumi.RegisterOutputType(GetAccprofileFwgrpPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetAccprofileLoggrpPermissionOutput{})
	pulumi.RegisterOutputType(GetAccprofileLoggrpPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetAccprofileNetgrpPermissionOutput{})
	pulumi.RegisterOutputType(GetAccprofileNetgrpPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetAccprofileSysgrpPermissionOutput{})
	pulumi.RegisterOutputType(GetAccprofileSysgrpPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetAccprofileUtmgrpPermissionOutput{})
	pulumi.RegisterOutputType(GetAccprofileUtmgrpPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetAdminGuestUsergroupOutput{})
	pulumi.RegisterOutputType(GetAdminGuestUsergroupArrayOutput{})
	pulumi.RegisterOutputType(GetAdminGuiDashboardOutput{})
	pulumi.RegisterOutputType(GetAdminGuiDashboardArrayOutput{})
	pulumi.RegisterOutputType(GetAdminGuiDashboardWidgetOutput{})
	pulumi.RegisterOutputType(GetAdminGuiDashboardWidgetArrayOutput{})
	pulumi.RegisterOutputType(GetAdminGuiDashboardWidgetFilterOutput{})
	pulumi.RegisterOutputType(GetAdminGuiDashboardWidgetFilterArrayOutput{})
	pulumi.RegisterOutputType(GetAdminGuiGlobalMenuFavoriteOutput{})
	pulumi.RegisterOutputType(GetAdminGuiGlobalMenuFavoriteArrayOutput{})
	pulumi.RegisterOutputType(GetAdminGuiNewFeatureAcknowledgeOutput{})
	pulumi.RegisterOutputType(GetAdminGuiNewFeatureAcknowledgeArrayOutput{})
	pulumi.RegisterOutputType(GetAdminGuiVdomMenuFavoriteOutput{})
	pulumi.RegisterOutputType(GetAdminGuiVdomMenuFavoriteArrayOutput{})
	pulumi.RegisterOutputType(GetAdminLoginTimeOutput{})
	pulumi.RegisterOutputType(GetAdminLoginTimeArrayOutput{})
	pulumi.RegisterOutputType(GetAdminVdomOutput{})
	pulumi.RegisterOutputType(GetAdminVdomArrayOutput{})
	pulumi.RegisterOutputType(GetApiuserTrusthostOutput{})
	pulumi.RegisterOutputType(GetApiuserTrusthostArrayOutput{})
	pulumi.RegisterOutputType(GetApiuserVdomOutput{})
	pulumi.RegisterOutputType(GetApiuserVdomArrayOutput{})
	pulumi.RegisterOutputType(GetAutomationactionEmailToOutput{})
	pulumi.RegisterOutputType(GetAutomationactionEmailToArrayOutput{})
	pulumi.RegisterOutputType(GetAutomationactionHeaderOutput{})
	pulumi.RegisterOutputType(GetAutomationactionHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetAutomationactionHttpHeaderOutput{})
	pulumi.RegisterOutputType(GetAutomationactionHttpHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetAutomationactionSdnConnectorOutput{})
	pulumi.RegisterOutputType(GetAutomationactionSdnConnectorArrayOutput{})
	pulumi.RegisterOutputType(GetAutomationdestinationDestinationOutput{})
	pulumi.RegisterOutputType(GetAutomationdestinationDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetAutomationtriggerFieldOutput{})
	pulumi.RegisterOutputType(GetAutomationtriggerFieldArrayOutput{})
	pulumi.RegisterOutputType(GetAutomationtriggerLogidBlockOutput{})
	pulumi.RegisterOutputType(GetAutomationtriggerLogidBlockArrayOutput{})
	pulumi.RegisterOutputType(GetAutomationtriggerVdomOutput{})
	pulumi.RegisterOutputType(GetAutomationtriggerVdomArrayOutput{})
	pulumi.RegisterOutputType(GetCentralmanagementServerListOutput{})
	pulumi.RegisterOutputType(GetCentralmanagementServerListArrayOutput{})
	pulumi.RegisterOutputType(GetClustersyncDownIntfsBeforeSessSyncOutput{})
	pulumi.RegisterOutputType(GetClustersyncDownIntfsBeforeSessSyncArrayOutput{})
	pulumi.RegisterOutputType(GetClustersyncSessionSyncFilterOutput{})
	pulumi.RegisterOutputType(GetClustersyncSessionSyncFilterArrayOutput{})
	pulumi.RegisterOutputType(GetClustersyncSessionSyncFilterCustomServiceOutput{})
	pulumi.RegisterOutputType(GetClustersyncSessionSyncFilterCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(GetClustersyncSyncvdOutput{})
	pulumi.RegisterOutputType(GetClustersyncSyncvdArrayOutput{})
	pulumi.RegisterOutputType(GetCsfFabricConnectorOutput{})
	pulumi.RegisterOutputType(GetCsfFabricConnectorArrayOutput{})
	pulumi.RegisterOutputType(GetCsfFabricConnectorVdomOutput{})
	pulumi.RegisterOutputType(GetCsfFabricConnectorVdomArrayOutput{})
	pulumi.RegisterOutputType(GetCsfFabricDeviceOutput{})
	pulumi.RegisterOutputType(GetCsfFabricDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetCsfTrustedListOutput{})
	pulumi.RegisterOutputType(GetCsfTrustedListArrayOutput{})
	pulumi.RegisterOutputType(GetDdnsDdnsServerAddrOutput{})
	pulumi.RegisterOutputType(GetDdnsDdnsServerAddrArrayOutput{})
	pulumi.RegisterOutputType(GetDdnsMonitorInterfaceOutput{})
	pulumi.RegisterOutputType(GetDdnsMonitorInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetDnsDomainOutput{})
	pulumi.RegisterOutputType(GetDnsDomainArrayOutput{})
	pulumi.RegisterOutputType(GetDnsServerHostnameOutput{})
	pulumi.RegisterOutputType(GetDnsServerHostnameArrayOutput{})
	pulumi.RegisterOutputType(GetDnsdatabaseDnsEntryOutput{})
	pulumi.RegisterOutputType(GetDnsdatabaseDnsEntryArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalInternetServiceDownloadListOutput{})
	pulumi.RegisterOutputType(GetGlobalInternetServiceDownloadListArrayOutput{})
	pulumi.RegisterOutputType(GetHaHaMgmtInterfaceOutput{})
	pulumi.RegisterOutputType(GetHaHaMgmtInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetHaSecondaryVclusterOutput{})
	pulumi.RegisterOutputType(GetHaSecondaryVclusterArrayOutput{})
	pulumi.RegisterOutputType(GetHaUnicastPeerOutput{})
	pulumi.RegisterOutputType(GetHaUnicastPeerArrayOutput{})
	pulumi.RegisterOutputType(GetHaVclusterOutput{})
	pulumi.RegisterOutputType(GetHaVclusterArrayOutput{})
	pulumi.RegisterOutputType(GetHaVclusterVdomOutput{})
	pulumi.RegisterOutputType(GetHaVclusterVdomArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceClientOptionOutput{})
	pulumi.RegisterOutputType(GetInterfaceClientOptionArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceDhcpSnoopingServerListOutput{})
	pulumi.RegisterOutputType(GetInterfaceDhcpSnoopingServerListArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceFailAlertInterfaceOutput{})
	pulumi.RegisterOutputType(GetInterfaceFailAlertInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Output{})
	pulumi.RegisterOutputType(GetInterfaceIpv6ArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Dhcp6IapdListOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Dhcp6IapdListArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Ip6DelegatedPrefixListOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Ip6DelegatedPrefixListArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Ip6ExtraAddrOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Ip6ExtraAddrArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Ip6PrefixListOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Ip6PrefixListArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Ip6PrefixListDnsslOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Ip6PrefixListDnsslArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Vrrp6Output{})
	pulumi.RegisterOutputType(GetInterfaceIpv6Vrrp6ArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceManagedDeviceOutput{})
	pulumi.RegisterOutputType(GetInterfaceManagedDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceMemberOutput{})
	pulumi.RegisterOutputType(GetInterfaceMemberArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceSecondaryipOutput{})
	pulumi.RegisterOutputType(GetInterfaceSecondaryipArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetInterfaceSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceTaggingOutput{})
	pulumi.RegisterOutputType(GetInterfaceTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceTaggingTagOutput{})
	pulumi.RegisterOutputType(GetInterfaceTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceVrrpOutput{})
	pulumi.RegisterOutputType(GetInterfaceVrrpArrayOutput{})
	pulumi.RegisterOutputType(GetInterfaceVrrpProxyArpOutput{})
	pulumi.RegisterOutputType(GetInterfaceVrrpProxyArpArrayOutput{})
	pulumi.RegisterOutputType(GetLinkmonitorRouteOutput{})
	pulumi.RegisterOutputType(GetLinkmonitorRouteArrayOutput{})
	pulumi.RegisterOutputType(GetLinkmonitorServerOutput{})
	pulumi.RegisterOutputType(GetLinkmonitorServerArrayOutput{})
	pulumi.RegisterOutputType(GetLinkmonitorServerListOutput{})
	pulumi.RegisterOutputType(GetLinkmonitorServerListArrayOutput{})
	pulumi.RegisterOutputType(GetMobiletunnelNetworkOutput{})
	pulumi.RegisterOutputType(GetMobiletunnelNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetNat64SecondaryPrefixOutput{})
	pulumi.RegisterOutputType(GetNat64SecondaryPrefixArrayOutput{})
	pulumi.RegisterOutputType(GetNdproxyMemberOutput{})
	pulumi.RegisterOutputType(GetNdproxyMemberArrayOutput{})
	pulumi.RegisterOutputType(GetNetflowCollectorOutput{})
	pulumi.RegisterOutputType(GetNetflowCollectorArrayOutput{})
	pulumi.RegisterOutputType(GetNtpInterfaceOutput{})
	pulumi.RegisterOutputType(GetNtpInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetNtpNtpserverOutput{})
	pulumi.RegisterOutputType(GetNtpNtpserverArrayOutput{})
	pulumi.RegisterOutputType(GetObjecttaggingTagOutput{})
	pulumi.RegisterOutputType(GetObjecttaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupAdminOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupAdminArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupAlertmailOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupAlertmailArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupAuthOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupAuthArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupAutomationOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupAutomationArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupCustomMessageOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupCustomMessageArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupDeviceDetectionPortalOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupDeviceDetectionPortalArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupEcOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupEcArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupFortiguardWfOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupFortiguardWfArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupFtpOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupFtpArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupHttpOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupHttpArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupIcapOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupIcapArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupMailOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupMailArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupNacQuarOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupNacQuarArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupNntpOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupNntpArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupSpamOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupSpamArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupSslvpnOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupSslvpnArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupTrafficQuotaOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupTrafficQuotaArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupUtmOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupUtmArrayOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupWebproxyOutput{})
	pulumi.RegisterOutputType(GetReplacemsggroupWebproxyArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorCompartmentListOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorCompartmentListArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorExternalAccountListOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorExternalAccountListArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorExternalAccountListRegionListOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorExternalAccountListRegionListArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorExternalIpOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorExternalIpArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorForwardingRuleOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorGcpProjectListOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorGcpProjectListArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorGcpProjectListGcpZoneListOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorGcpProjectListGcpZoneListArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorNicOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorNicArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorNicIpOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorNicIpArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorOciRegionListOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorOciRegionListArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorRouteOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorRouteArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorRouteTableOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorRouteTableArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorServerListOutput{})
	pulumi.RegisterOutputType(GetSdnconnectorServerListArrayOutput{})
	pulumi.RegisterOutputType(GetSessionttlPortOutput{})
	pulumi.RegisterOutputType(GetSessionttlPortArrayOutput{})
	pulumi.RegisterOutputType(GetSflowCollectorOutput{})
	pulumi.RegisterOutputType(GetSflowCollectorArrayOutput{})
	pulumi.RegisterOutputType(GetVdomexceptionVdomOutput{})
	pulumi.RegisterOutputType(GetVdomexceptionVdomArrayOutput{})
	pulumi.RegisterOutputType(GetVdomnetflowCollectorOutput{})
	pulumi.RegisterOutputType(GetVdomnetflowCollectorArrayOutput{})
	pulumi.RegisterOutputType(GetVdomsflowCollectorOutput{})
	pulumi.RegisterOutputType(GetVdomsflowCollectorArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkFailAlertInterfaceOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkFailAlertInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkHealthCheckOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkHealthCheckMemberOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkHealthCheckMemberArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkHealthCheckSlaOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkHealthCheckSlaArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkMemberOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkMemberArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkNeighborOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceDst6Output{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceDst6ArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceDstOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceDstArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceGroupOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInputDeviceOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceAppCtrlOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceCtrlOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceCtrlArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceCtrlGroupOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceIdOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceNameOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServicePriorityMemberOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServicePriorityMemberArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceSlaOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceSlaArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceSrc6Output{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceSrc6ArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceSrcOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceSrcArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceUserOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkServiceUserArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkZoneOutput{})
	pulumi.RegisterOutputType(GetVirtualwanlinkZoneArrayOutput{})
	pulumi.RegisterOutputType(GetVxlanRemoteIp6Output{})
	pulumi.RegisterOutputType(GetVxlanRemoteIp6ArrayOutput{})
	pulumi.RegisterOutputType(GetVxlanRemoteIpOutput{})
	pulumi.RegisterOutputType(GetVxlanRemoteIpArrayOutput{})
	pulumi.RegisterOutputType(GetZoneInterfaceOutput{})
	pulumi.RegisterOutputType(GetZoneInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetZoneTaggingOutput{})
	pulumi.RegisterOutputType(GetZoneTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetZoneTaggingTagOutput{})
	pulumi.RegisterOutputType(GetZoneTaggingTagArrayOutput{})
}
