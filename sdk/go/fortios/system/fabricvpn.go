// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Setup for self orchestrated fabric auto discovery VPN. Applies to FortiOS Version `>= 7.2.4`.
//
// ## Import
//
// System FabricVpn can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/fabricvpn:Fabricvpn labelname SystemFabricVpn
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/fabricvpn:Fabricvpn labelname SystemFabricVpn
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Fabricvpn struct {
	pulumi.CustomResourceState

	// Local advertised subnets. The structure of `advertisedSubnets` block is documented below.
	AdvertisedSubnets FabricvpnAdvertisedSubnetArrayOutput `pulumi:"advertisedSubnets"`
	// BGP Router AS number, valid from 1 to 4294967295.
	BgpAs pulumi.IntOutput `pulumi:"bgpAs"`
	// Branch name.
	BranchName pulumi.StringOutput `pulumi:"branchName"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Underlying health checks.
	HealthChecks pulumi.StringOutput `pulumi:"healthChecks"`
	// IPv4 address and subnet mask for hub's loopback address, syntax: X.X.X.X/24.
	LoopbackAddressBlock pulumi.StringOutput `pulumi:"loopbackAddressBlock"`
	// Loopback advertised subnet reference.
	LoopbackAdvertisedSubnet pulumi.IntOutput `pulumi:"loopbackAdvertisedSubnet"`
	// Loopback interface.
	LoopbackInterface pulumi.StringOutput `pulumi:"loopbackInterface"`
	// Local overlay interfaces table. The structure of `overlays` block is documented below.
	Overlays FabricvpnOverlayArrayOutput `pulumi:"overlays"`
	// Policy creation rule. Valid values: `health-check`, `manual`, `auto`.
	PolicyRule pulumi.StringOutput `pulumi:"policyRule"`
	// Pre-shared secret for ADVPN.
	Psksecret pulumi.StringPtrOutput `pulumi:"psksecret"`
	// Reference to created SD-WAN zone.
	SdwanZone pulumi.StringOutput `pulumi:"sdwanZone"`
	// Enable/disable Fabric VPN. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Setting synchronised by fabric or manual. Valid values: `enable`, `disable`.
	SyncMode pulumi.StringOutput `pulumi:"syncMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Fabric VPN role. Valid values: `hub`, `spoke`.
	VpnRole pulumi.StringOutput `pulumi:"vpnRole"`
}

// NewFabricvpn registers a new resource with the given unique name, arguments, and options.
func NewFabricvpn(ctx *pulumi.Context,
	name string, args *FabricvpnArgs, opts ...pulumi.ResourceOption) (*Fabricvpn, error) {
	if args == nil {
		args = &FabricvpnArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Fabricvpn
	err := ctx.RegisterResource("fortios:system/fabricvpn:Fabricvpn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFabricvpn gets an existing Fabricvpn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFabricvpn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FabricvpnState, opts ...pulumi.ResourceOption) (*Fabricvpn, error) {
	var resource Fabricvpn
	err := ctx.ReadResource("fortios:system/fabricvpn:Fabricvpn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Fabricvpn resources.
type fabricvpnState struct {
	// Local advertised subnets. The structure of `advertisedSubnets` block is documented below.
	AdvertisedSubnets []FabricvpnAdvertisedSubnet `pulumi:"advertisedSubnets"`
	// BGP Router AS number, valid from 1 to 4294967295.
	BgpAs *int `pulumi:"bgpAs"`
	// Branch name.
	BranchName *string `pulumi:"branchName"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Underlying health checks.
	HealthChecks *string `pulumi:"healthChecks"`
	// IPv4 address and subnet mask for hub's loopback address, syntax: X.X.X.X/24.
	LoopbackAddressBlock *string `pulumi:"loopbackAddressBlock"`
	// Loopback advertised subnet reference.
	LoopbackAdvertisedSubnet *int `pulumi:"loopbackAdvertisedSubnet"`
	// Loopback interface.
	LoopbackInterface *string `pulumi:"loopbackInterface"`
	// Local overlay interfaces table. The structure of `overlays` block is documented below.
	Overlays []FabricvpnOverlay `pulumi:"overlays"`
	// Policy creation rule. Valid values: `health-check`, `manual`, `auto`.
	PolicyRule *string `pulumi:"policyRule"`
	// Pre-shared secret for ADVPN.
	Psksecret *string `pulumi:"psksecret"`
	// Reference to created SD-WAN zone.
	SdwanZone *string `pulumi:"sdwanZone"`
	// Enable/disable Fabric VPN. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Setting synchronised by fabric or manual. Valid values: `enable`, `disable`.
	SyncMode *string `pulumi:"syncMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Fabric VPN role. Valid values: `hub`, `spoke`.
	VpnRole *string `pulumi:"vpnRole"`
}

type FabricvpnState struct {
	// Local advertised subnets. The structure of `advertisedSubnets` block is documented below.
	AdvertisedSubnets FabricvpnAdvertisedSubnetArrayInput
	// BGP Router AS number, valid from 1 to 4294967295.
	BgpAs pulumi.IntPtrInput
	// Branch name.
	BranchName pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Underlying health checks.
	HealthChecks pulumi.StringPtrInput
	// IPv4 address and subnet mask for hub's loopback address, syntax: X.X.X.X/24.
	LoopbackAddressBlock pulumi.StringPtrInput
	// Loopback advertised subnet reference.
	LoopbackAdvertisedSubnet pulumi.IntPtrInput
	// Loopback interface.
	LoopbackInterface pulumi.StringPtrInput
	// Local overlay interfaces table. The structure of `overlays` block is documented below.
	Overlays FabricvpnOverlayArrayInput
	// Policy creation rule. Valid values: `health-check`, `manual`, `auto`.
	PolicyRule pulumi.StringPtrInput
	// Pre-shared secret for ADVPN.
	Psksecret pulumi.StringPtrInput
	// Reference to created SD-WAN zone.
	SdwanZone pulumi.StringPtrInput
	// Enable/disable Fabric VPN. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Setting synchronised by fabric or manual. Valid values: `enable`, `disable`.
	SyncMode pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Fabric VPN role. Valid values: `hub`, `spoke`.
	VpnRole pulumi.StringPtrInput
}

func (FabricvpnState) ElementType() reflect.Type {
	return reflect.TypeOf((*fabricvpnState)(nil)).Elem()
}

type fabricvpnArgs struct {
	// Local advertised subnets. The structure of `advertisedSubnets` block is documented below.
	AdvertisedSubnets []FabricvpnAdvertisedSubnet `pulumi:"advertisedSubnets"`
	// BGP Router AS number, valid from 1 to 4294967295.
	BgpAs *int `pulumi:"bgpAs"`
	// Branch name.
	BranchName *string `pulumi:"branchName"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Underlying health checks.
	HealthChecks *string `pulumi:"healthChecks"`
	// IPv4 address and subnet mask for hub's loopback address, syntax: X.X.X.X/24.
	LoopbackAddressBlock *string `pulumi:"loopbackAddressBlock"`
	// Loopback advertised subnet reference.
	LoopbackAdvertisedSubnet *int `pulumi:"loopbackAdvertisedSubnet"`
	// Loopback interface.
	LoopbackInterface *string `pulumi:"loopbackInterface"`
	// Local overlay interfaces table. The structure of `overlays` block is documented below.
	Overlays []FabricvpnOverlay `pulumi:"overlays"`
	// Policy creation rule. Valid values: `health-check`, `manual`, `auto`.
	PolicyRule *string `pulumi:"policyRule"`
	// Pre-shared secret for ADVPN.
	Psksecret *string `pulumi:"psksecret"`
	// Reference to created SD-WAN zone.
	SdwanZone *string `pulumi:"sdwanZone"`
	// Enable/disable Fabric VPN. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Setting synchronised by fabric or manual. Valid values: `enable`, `disable`.
	SyncMode *string `pulumi:"syncMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Fabric VPN role. Valid values: `hub`, `spoke`.
	VpnRole *string `pulumi:"vpnRole"`
}

// The set of arguments for constructing a Fabricvpn resource.
type FabricvpnArgs struct {
	// Local advertised subnets. The structure of `advertisedSubnets` block is documented below.
	AdvertisedSubnets FabricvpnAdvertisedSubnetArrayInput
	// BGP Router AS number, valid from 1 to 4294967295.
	BgpAs pulumi.IntPtrInput
	// Branch name.
	BranchName pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Underlying health checks.
	HealthChecks pulumi.StringPtrInput
	// IPv4 address and subnet mask for hub's loopback address, syntax: X.X.X.X/24.
	LoopbackAddressBlock pulumi.StringPtrInput
	// Loopback advertised subnet reference.
	LoopbackAdvertisedSubnet pulumi.IntPtrInput
	// Loopback interface.
	LoopbackInterface pulumi.StringPtrInput
	// Local overlay interfaces table. The structure of `overlays` block is documented below.
	Overlays FabricvpnOverlayArrayInput
	// Policy creation rule. Valid values: `health-check`, `manual`, `auto`.
	PolicyRule pulumi.StringPtrInput
	// Pre-shared secret for ADVPN.
	Psksecret pulumi.StringPtrInput
	// Reference to created SD-WAN zone.
	SdwanZone pulumi.StringPtrInput
	// Enable/disable Fabric VPN. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Setting synchronised by fabric or manual. Valid values: `enable`, `disable`.
	SyncMode pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Fabric VPN role. Valid values: `hub`, `spoke`.
	VpnRole pulumi.StringPtrInput
}

func (FabricvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fabricvpnArgs)(nil)).Elem()
}

type FabricvpnInput interface {
	pulumi.Input

	ToFabricvpnOutput() FabricvpnOutput
	ToFabricvpnOutputWithContext(ctx context.Context) FabricvpnOutput
}

func (*Fabricvpn) ElementType() reflect.Type {
	return reflect.TypeOf((**Fabricvpn)(nil)).Elem()
}

func (i *Fabricvpn) ToFabricvpnOutput() FabricvpnOutput {
	return i.ToFabricvpnOutputWithContext(context.Background())
}

func (i *Fabricvpn) ToFabricvpnOutputWithContext(ctx context.Context) FabricvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricvpnOutput)
}

// FabricvpnArrayInput is an input type that accepts FabricvpnArray and FabricvpnArrayOutput values.
// You can construct a concrete instance of `FabricvpnArrayInput` via:
//
//	FabricvpnArray{ FabricvpnArgs{...} }
type FabricvpnArrayInput interface {
	pulumi.Input

	ToFabricvpnArrayOutput() FabricvpnArrayOutput
	ToFabricvpnArrayOutputWithContext(context.Context) FabricvpnArrayOutput
}

type FabricvpnArray []FabricvpnInput

func (FabricvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fabricvpn)(nil)).Elem()
}

func (i FabricvpnArray) ToFabricvpnArrayOutput() FabricvpnArrayOutput {
	return i.ToFabricvpnArrayOutputWithContext(context.Background())
}

func (i FabricvpnArray) ToFabricvpnArrayOutputWithContext(ctx context.Context) FabricvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricvpnArrayOutput)
}

// FabricvpnMapInput is an input type that accepts FabricvpnMap and FabricvpnMapOutput values.
// You can construct a concrete instance of `FabricvpnMapInput` via:
//
//	FabricvpnMap{ "key": FabricvpnArgs{...} }
type FabricvpnMapInput interface {
	pulumi.Input

	ToFabricvpnMapOutput() FabricvpnMapOutput
	ToFabricvpnMapOutputWithContext(context.Context) FabricvpnMapOutput
}

type FabricvpnMap map[string]FabricvpnInput

func (FabricvpnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fabricvpn)(nil)).Elem()
}

func (i FabricvpnMap) ToFabricvpnMapOutput() FabricvpnMapOutput {
	return i.ToFabricvpnMapOutputWithContext(context.Background())
}

func (i FabricvpnMap) ToFabricvpnMapOutputWithContext(ctx context.Context) FabricvpnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricvpnMapOutput)
}

type FabricvpnOutput struct{ *pulumi.OutputState }

func (FabricvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Fabricvpn)(nil)).Elem()
}

func (o FabricvpnOutput) ToFabricvpnOutput() FabricvpnOutput {
	return o
}

func (o FabricvpnOutput) ToFabricvpnOutputWithContext(ctx context.Context) FabricvpnOutput {
	return o
}

// Local advertised subnets. The structure of `advertisedSubnets` block is documented below.
func (o FabricvpnOutput) AdvertisedSubnets() FabricvpnAdvertisedSubnetArrayOutput {
	return o.ApplyT(func(v *Fabricvpn) FabricvpnAdvertisedSubnetArrayOutput { return v.AdvertisedSubnets }).(FabricvpnAdvertisedSubnetArrayOutput)
}

// BGP Router AS number, valid from 1 to 4294967295.
func (o FabricvpnOutput) BgpAs() pulumi.IntOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.IntOutput { return v.BgpAs }).(pulumi.IntOutput)
}

// Branch name.
func (o FabricvpnOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringOutput { return v.BranchName }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o FabricvpnOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o FabricvpnOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Underlying health checks.
func (o FabricvpnOutput) HealthChecks() pulumi.StringOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringOutput { return v.HealthChecks }).(pulumi.StringOutput)
}

// IPv4 address and subnet mask for hub's loopback address, syntax: X.X.X.X/24.
func (o FabricvpnOutput) LoopbackAddressBlock() pulumi.StringOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringOutput { return v.LoopbackAddressBlock }).(pulumi.StringOutput)
}

// Loopback advertised subnet reference.
func (o FabricvpnOutput) LoopbackAdvertisedSubnet() pulumi.IntOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.IntOutput { return v.LoopbackAdvertisedSubnet }).(pulumi.IntOutput)
}

// Loopback interface.
func (o FabricvpnOutput) LoopbackInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringOutput { return v.LoopbackInterface }).(pulumi.StringOutput)
}

// Local overlay interfaces table. The structure of `overlays` block is documented below.
func (o FabricvpnOutput) Overlays() FabricvpnOverlayArrayOutput {
	return o.ApplyT(func(v *Fabricvpn) FabricvpnOverlayArrayOutput { return v.Overlays }).(FabricvpnOverlayArrayOutput)
}

// Policy creation rule. Valid values: `health-check`, `manual`, `auto`.
func (o FabricvpnOutput) PolicyRule() pulumi.StringOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringOutput { return v.PolicyRule }).(pulumi.StringOutput)
}

// Pre-shared secret for ADVPN.
func (o FabricvpnOutput) Psksecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringPtrOutput { return v.Psksecret }).(pulumi.StringPtrOutput)
}

// Reference to created SD-WAN zone.
func (o FabricvpnOutput) SdwanZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringOutput { return v.SdwanZone }).(pulumi.StringOutput)
}

// Enable/disable Fabric VPN. Valid values: `enable`, `disable`.
func (o FabricvpnOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Setting synchronised by fabric or manual. Valid values: `enable`, `disable`.
func (o FabricvpnOutput) SyncMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringOutput { return v.SyncMode }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FabricvpnOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Fabric VPN role. Valid values: `hub`, `spoke`.
func (o FabricvpnOutput) VpnRole() pulumi.StringOutput {
	return o.ApplyT(func(v *Fabricvpn) pulumi.StringOutput { return v.VpnRole }).(pulumi.StringOutput)
}

type FabricvpnArrayOutput struct{ *pulumi.OutputState }

func (FabricvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fabricvpn)(nil)).Elem()
}

func (o FabricvpnArrayOutput) ToFabricvpnArrayOutput() FabricvpnArrayOutput {
	return o
}

func (o FabricvpnArrayOutput) ToFabricvpnArrayOutputWithContext(ctx context.Context) FabricvpnArrayOutput {
	return o
}

func (o FabricvpnArrayOutput) Index(i pulumi.IntInput) FabricvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Fabricvpn {
		return vs[0].([]*Fabricvpn)[vs[1].(int)]
	}).(FabricvpnOutput)
}

type FabricvpnMapOutput struct{ *pulumi.OutputState }

func (FabricvpnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fabricvpn)(nil)).Elem()
}

func (o FabricvpnMapOutput) ToFabricvpnMapOutput() FabricvpnMapOutput {
	return o
}

func (o FabricvpnMapOutput) ToFabricvpnMapOutputWithContext(ctx context.Context) FabricvpnMapOutput {
	return o
}

func (o FabricvpnMapOutput) MapIndex(k pulumi.StringInput) FabricvpnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Fabricvpn {
		return vs[0].(map[string]*Fabricvpn)[vs[1].(string)]
	}).(FabricvpnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FabricvpnInput)(nil)).Elem(), &Fabricvpn{})
	pulumi.RegisterInputType(reflect.TypeOf((*FabricvpnArrayInput)(nil)).Elem(), FabricvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FabricvpnMapInput)(nil)).Elem(), FabricvpnMap{})
	pulumi.RegisterOutputType(FabricvpnOutput{})
	pulumi.RegisterOutputType(FabricvpnArrayOutput{})
	pulumi.RegisterOutputType(FabricvpnMapOutput{})
}
