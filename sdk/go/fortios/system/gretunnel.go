// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure GRE tunnel.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewGretunnel(ctx, "trname", &system.GretunnelArgs{
//				ChecksumReception:          pulumi.String("disable"),
//				ChecksumTransmission:       pulumi.String("disable"),
//				DscpCopying:                pulumi.String("disable"),
//				Interface:                  pulumi.String("port3"),
//				IpVersion:                  pulumi.String("4"),
//				KeepaliveFailtimes:         pulumi.Int(10),
//				KeepaliveInterval:          pulumi.Int(0),
//				KeyInbound:                 pulumi.Int(0),
//				KeyOutbound:                pulumi.Int(0),
//				LocalGw:                    pulumi.String("3.3.3.3"),
//				LocalGw6:                   pulumi.String("::"),
//				RemoteGw:                   pulumi.String("1.1.1.1"),
//				RemoteGw6:                  pulumi.String("::"),
//				SequenceNumberReception:    pulumi.String("disable"),
//				SequenceNumberTransmission: pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System GreTunnel can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/gretunnel:Gretunnel labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/gretunnel:Gretunnel labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Gretunnel struct {
	pulumi.CustomResourceState

	// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
	ChecksumReception pulumi.StringOutput `pulumi:"checksumReception"`
	// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
	ChecksumTransmission pulumi.StringOutput `pulumi:"checksumTransmission"`
	// DiffServ setting to be applied to GRE tunnel outer IP header.
	Diffservcode pulumi.StringOutput `pulumi:"diffservcode"`
	// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
	DscpCopying pulumi.StringOutput `pulumi:"dscpCopying"`
	// Interface name.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// IP version to use for VPN interface. Valid values: `4`, `6`.
	IpVersion pulumi.StringOutput `pulumi:"ipVersion"`
	// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
	KeepaliveFailtimes pulumi.IntOutput `pulumi:"keepaliveFailtimes"`
	// Keepalive message interval (0 - 32767, 0 = disabled).
	KeepaliveInterval pulumi.IntOutput `pulumi:"keepaliveInterval"`
	// Require received GRE packets contain this key (0 - 4294967295).
	KeyInbound pulumi.IntOutput `pulumi:"keyInbound"`
	// Include this key in transmitted GRE packets (0 - 4294967295).
	KeyOutbound pulumi.IntOutput `pulumi:"keyOutbound"`
	// IP address of the local gateway.
	LocalGw pulumi.StringOutput `pulumi:"localGw"`
	// IPv6 address of the local gateway.
	LocalGw6 pulumi.StringOutput `pulumi:"localGw6"`
	// Tunnel name.
	Name pulumi.StringOutput `pulumi:"name"`
	// IP address of the remote gateway.
	RemoteGw pulumi.StringOutput `pulumi:"remoteGw"`
	// IPv6 address of the remote gateway.
	RemoteGw6 pulumi.StringOutput `pulumi:"remoteGw6"`
	// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberReception pulumi.StringOutput `pulumi:"sequenceNumberReception"`
	// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberTransmission pulumi.StringOutput `pulumi:"sequenceNumberTransmission"`
	// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
	UseSdwan pulumi.StringOutput `pulumi:"useSdwan"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewGretunnel registers a new resource with the given unique name, arguments, and options.
func NewGretunnel(ctx *pulumi.Context,
	name string, args *GretunnelArgs, opts ...pulumi.ResourceOption) (*Gretunnel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LocalGw == nil {
		return nil, errors.New("invalid value for required argument 'LocalGw'")
	}
	if args.RemoteGw == nil {
		return nil, errors.New("invalid value for required argument 'RemoteGw'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Gretunnel
	err := ctx.RegisterResource("fortios:system/gretunnel:Gretunnel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGretunnel gets an existing Gretunnel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGretunnel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GretunnelState, opts ...pulumi.ResourceOption) (*Gretunnel, error) {
	var resource Gretunnel
	err := ctx.ReadResource("fortios:system/gretunnel:Gretunnel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Gretunnel resources.
type gretunnelState struct {
	// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
	ChecksumReception *string `pulumi:"checksumReception"`
	// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
	ChecksumTransmission *string `pulumi:"checksumTransmission"`
	// DiffServ setting to be applied to GRE tunnel outer IP header.
	Diffservcode *string `pulumi:"diffservcode"`
	// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
	DscpCopying *string `pulumi:"dscpCopying"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// IP version to use for VPN interface. Valid values: `4`, `6`.
	IpVersion *string `pulumi:"ipVersion"`
	// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
	KeepaliveFailtimes *int `pulumi:"keepaliveFailtimes"`
	// Keepalive message interval (0 - 32767, 0 = disabled).
	KeepaliveInterval *int `pulumi:"keepaliveInterval"`
	// Require received GRE packets contain this key (0 - 4294967295).
	KeyInbound *int `pulumi:"keyInbound"`
	// Include this key in transmitted GRE packets (0 - 4294967295).
	KeyOutbound *int `pulumi:"keyOutbound"`
	// IP address of the local gateway.
	LocalGw *string `pulumi:"localGw"`
	// IPv6 address of the local gateway.
	LocalGw6 *string `pulumi:"localGw6"`
	// Tunnel name.
	Name *string `pulumi:"name"`
	// IP address of the remote gateway.
	RemoteGw *string `pulumi:"remoteGw"`
	// IPv6 address of the remote gateway.
	RemoteGw6 *string `pulumi:"remoteGw6"`
	// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberReception *string `pulumi:"sequenceNumberReception"`
	// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberTransmission *string `pulumi:"sequenceNumberTransmission"`
	// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
	UseSdwan *string `pulumi:"useSdwan"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type GretunnelState struct {
	// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
	ChecksumReception pulumi.StringPtrInput
	// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
	ChecksumTransmission pulumi.StringPtrInput
	// DiffServ setting to be applied to GRE tunnel outer IP header.
	Diffservcode pulumi.StringPtrInput
	// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
	DscpCopying pulumi.StringPtrInput
	// Interface name.
	Interface pulumi.StringPtrInput
	// IP version to use for VPN interface. Valid values: `4`, `6`.
	IpVersion pulumi.StringPtrInput
	// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
	KeepaliveFailtimes pulumi.IntPtrInput
	// Keepalive message interval (0 - 32767, 0 = disabled).
	KeepaliveInterval pulumi.IntPtrInput
	// Require received GRE packets contain this key (0 - 4294967295).
	KeyInbound pulumi.IntPtrInput
	// Include this key in transmitted GRE packets (0 - 4294967295).
	KeyOutbound pulumi.IntPtrInput
	// IP address of the local gateway.
	LocalGw pulumi.StringPtrInput
	// IPv6 address of the local gateway.
	LocalGw6 pulumi.StringPtrInput
	// Tunnel name.
	Name pulumi.StringPtrInput
	// IP address of the remote gateway.
	RemoteGw pulumi.StringPtrInput
	// IPv6 address of the remote gateway.
	RemoteGw6 pulumi.StringPtrInput
	// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberReception pulumi.StringPtrInput
	// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberTransmission pulumi.StringPtrInput
	// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
	UseSdwan pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (GretunnelState) ElementType() reflect.Type {
	return reflect.TypeOf((*gretunnelState)(nil)).Elem()
}

type gretunnelArgs struct {
	// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
	ChecksumReception *string `pulumi:"checksumReception"`
	// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
	ChecksumTransmission *string `pulumi:"checksumTransmission"`
	// DiffServ setting to be applied to GRE tunnel outer IP header.
	Diffservcode *string `pulumi:"diffservcode"`
	// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
	DscpCopying *string `pulumi:"dscpCopying"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// IP version to use for VPN interface. Valid values: `4`, `6`.
	IpVersion *string `pulumi:"ipVersion"`
	// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
	KeepaliveFailtimes *int `pulumi:"keepaliveFailtimes"`
	// Keepalive message interval (0 - 32767, 0 = disabled).
	KeepaliveInterval *int `pulumi:"keepaliveInterval"`
	// Require received GRE packets contain this key (0 - 4294967295).
	KeyInbound *int `pulumi:"keyInbound"`
	// Include this key in transmitted GRE packets (0 - 4294967295).
	KeyOutbound *int `pulumi:"keyOutbound"`
	// IP address of the local gateway.
	LocalGw string `pulumi:"localGw"`
	// IPv6 address of the local gateway.
	LocalGw6 *string `pulumi:"localGw6"`
	// Tunnel name.
	Name *string `pulumi:"name"`
	// IP address of the remote gateway.
	RemoteGw string `pulumi:"remoteGw"`
	// IPv6 address of the remote gateway.
	RemoteGw6 *string `pulumi:"remoteGw6"`
	// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberReception *string `pulumi:"sequenceNumberReception"`
	// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberTransmission *string `pulumi:"sequenceNumberTransmission"`
	// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
	UseSdwan *string `pulumi:"useSdwan"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Gretunnel resource.
type GretunnelArgs struct {
	// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
	ChecksumReception pulumi.StringPtrInput
	// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
	ChecksumTransmission pulumi.StringPtrInput
	// DiffServ setting to be applied to GRE tunnel outer IP header.
	Diffservcode pulumi.StringPtrInput
	// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
	DscpCopying pulumi.StringPtrInput
	// Interface name.
	Interface pulumi.StringPtrInput
	// IP version to use for VPN interface. Valid values: `4`, `6`.
	IpVersion pulumi.StringPtrInput
	// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
	KeepaliveFailtimes pulumi.IntPtrInput
	// Keepalive message interval (0 - 32767, 0 = disabled).
	KeepaliveInterval pulumi.IntPtrInput
	// Require received GRE packets contain this key (0 - 4294967295).
	KeyInbound pulumi.IntPtrInput
	// Include this key in transmitted GRE packets (0 - 4294967295).
	KeyOutbound pulumi.IntPtrInput
	// IP address of the local gateway.
	LocalGw pulumi.StringInput
	// IPv6 address of the local gateway.
	LocalGw6 pulumi.StringPtrInput
	// Tunnel name.
	Name pulumi.StringPtrInput
	// IP address of the remote gateway.
	RemoteGw pulumi.StringInput
	// IPv6 address of the remote gateway.
	RemoteGw6 pulumi.StringPtrInput
	// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberReception pulumi.StringPtrInput
	// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberTransmission pulumi.StringPtrInput
	// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
	UseSdwan pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (GretunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gretunnelArgs)(nil)).Elem()
}

type GretunnelInput interface {
	pulumi.Input

	ToGretunnelOutput() GretunnelOutput
	ToGretunnelOutputWithContext(ctx context.Context) GretunnelOutput
}

func (*Gretunnel) ElementType() reflect.Type {
	return reflect.TypeOf((**Gretunnel)(nil)).Elem()
}

func (i *Gretunnel) ToGretunnelOutput() GretunnelOutput {
	return i.ToGretunnelOutputWithContext(context.Background())
}

func (i *Gretunnel) ToGretunnelOutputWithContext(ctx context.Context) GretunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GretunnelOutput)
}

// GretunnelArrayInput is an input type that accepts GretunnelArray and GretunnelArrayOutput values.
// You can construct a concrete instance of `GretunnelArrayInput` via:
//
//	GretunnelArray{ GretunnelArgs{...} }
type GretunnelArrayInput interface {
	pulumi.Input

	ToGretunnelArrayOutput() GretunnelArrayOutput
	ToGretunnelArrayOutputWithContext(context.Context) GretunnelArrayOutput
}

type GretunnelArray []GretunnelInput

func (GretunnelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Gretunnel)(nil)).Elem()
}

func (i GretunnelArray) ToGretunnelArrayOutput() GretunnelArrayOutput {
	return i.ToGretunnelArrayOutputWithContext(context.Background())
}

func (i GretunnelArray) ToGretunnelArrayOutputWithContext(ctx context.Context) GretunnelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GretunnelArrayOutput)
}

// GretunnelMapInput is an input type that accepts GretunnelMap and GretunnelMapOutput values.
// You can construct a concrete instance of `GretunnelMapInput` via:
//
//	GretunnelMap{ "key": GretunnelArgs{...} }
type GretunnelMapInput interface {
	pulumi.Input

	ToGretunnelMapOutput() GretunnelMapOutput
	ToGretunnelMapOutputWithContext(context.Context) GretunnelMapOutput
}

type GretunnelMap map[string]GretunnelInput

func (GretunnelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Gretunnel)(nil)).Elem()
}

func (i GretunnelMap) ToGretunnelMapOutput() GretunnelMapOutput {
	return i.ToGretunnelMapOutputWithContext(context.Background())
}

func (i GretunnelMap) ToGretunnelMapOutputWithContext(ctx context.Context) GretunnelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GretunnelMapOutput)
}

type GretunnelOutput struct{ *pulumi.OutputState }

func (GretunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Gretunnel)(nil)).Elem()
}

func (o GretunnelOutput) ToGretunnelOutput() GretunnelOutput {
	return o
}

func (o GretunnelOutput) ToGretunnelOutputWithContext(ctx context.Context) GretunnelOutput {
	return o
}

// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
func (o GretunnelOutput) ChecksumReception() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.ChecksumReception }).(pulumi.StringOutput)
}

// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
func (o GretunnelOutput) ChecksumTransmission() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.ChecksumTransmission }).(pulumi.StringOutput)
}

// DiffServ setting to be applied to GRE tunnel outer IP header.
func (o GretunnelOutput) Diffservcode() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.Diffservcode }).(pulumi.StringOutput)
}

// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
func (o GretunnelOutput) DscpCopying() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.DscpCopying }).(pulumi.StringOutput)
}

// Interface name.
func (o GretunnelOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// IP version to use for VPN interface. Valid values: `4`, `6`.
func (o GretunnelOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.IpVersion }).(pulumi.StringOutput)
}

// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
func (o GretunnelOutput) KeepaliveFailtimes() pulumi.IntOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.IntOutput { return v.KeepaliveFailtimes }).(pulumi.IntOutput)
}

// Keepalive message interval (0 - 32767, 0 = disabled).
func (o GretunnelOutput) KeepaliveInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.IntOutput { return v.KeepaliveInterval }).(pulumi.IntOutput)
}

// Require received GRE packets contain this key (0 - 4294967295).
func (o GretunnelOutput) KeyInbound() pulumi.IntOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.IntOutput { return v.KeyInbound }).(pulumi.IntOutput)
}

// Include this key in transmitted GRE packets (0 - 4294967295).
func (o GretunnelOutput) KeyOutbound() pulumi.IntOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.IntOutput { return v.KeyOutbound }).(pulumi.IntOutput)
}

// IP address of the local gateway.
func (o GretunnelOutput) LocalGw() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.LocalGw }).(pulumi.StringOutput)
}

// IPv6 address of the local gateway.
func (o GretunnelOutput) LocalGw6() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.LocalGw6 }).(pulumi.StringOutput)
}

// Tunnel name.
func (o GretunnelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// IP address of the remote gateway.
func (o GretunnelOutput) RemoteGw() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.RemoteGw }).(pulumi.StringOutput)
}

// IPv6 address of the remote gateway.
func (o GretunnelOutput) RemoteGw6() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.RemoteGw6 }).(pulumi.StringOutput)
}

// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
func (o GretunnelOutput) SequenceNumberReception() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.SequenceNumberReception }).(pulumi.StringOutput)
}

// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
func (o GretunnelOutput) SequenceNumberTransmission() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.SequenceNumberTransmission }).(pulumi.StringOutput)
}

// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
func (o GretunnelOutput) UseSdwan() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.UseSdwan }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o GretunnelOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Gretunnel) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type GretunnelArrayOutput struct{ *pulumi.OutputState }

func (GretunnelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Gretunnel)(nil)).Elem()
}

func (o GretunnelArrayOutput) ToGretunnelArrayOutput() GretunnelArrayOutput {
	return o
}

func (o GretunnelArrayOutput) ToGretunnelArrayOutputWithContext(ctx context.Context) GretunnelArrayOutput {
	return o
}

func (o GretunnelArrayOutput) Index(i pulumi.IntInput) GretunnelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Gretunnel {
		return vs[0].([]*Gretunnel)[vs[1].(int)]
	}).(GretunnelOutput)
}

type GretunnelMapOutput struct{ *pulumi.OutputState }

func (GretunnelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Gretunnel)(nil)).Elem()
}

func (o GretunnelMapOutput) ToGretunnelMapOutput() GretunnelMapOutput {
	return o
}

func (o GretunnelMapOutput) ToGretunnelMapOutputWithContext(ctx context.Context) GretunnelMapOutput {
	return o
}

func (o GretunnelMapOutput) MapIndex(k pulumi.StringInput) GretunnelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Gretunnel {
		return vs[0].(map[string]*Gretunnel)[vs[1].(string)]
	}).(GretunnelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GretunnelInput)(nil)).Elem(), &Gretunnel{})
	pulumi.RegisterInputType(reflect.TypeOf((*GretunnelArrayInput)(nil)).Elem(), GretunnelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GretunnelMapInput)(nil)).Elem(), GretunnelMap{})
	pulumi.RegisterOutputType(GretunnelOutput{})
	pulumi.RegisterOutputType(GretunnelArrayOutput{})
	pulumi.RegisterOutputType(GretunnelMapOutput{})
}
