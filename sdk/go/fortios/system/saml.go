// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Global settings for SAML authentication. Applies to FortiOS Version `>= 6.2.4`.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewSaml(ctx, "trname", &system.SamlArgs{
//				DefaultLoginPage: pulumi.String("normal"),
//				DefaultProfile:   pulumi.String("admin_no_access"),
//				Life:             pulumi.Int(30),
//				Role:             pulumi.String("service-provider"),
//				Status:           pulumi.String("disable"),
//				Tolerance:        pulumi.Int(5),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// System Saml can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/saml:Saml labelname SystemSaml
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/saml:Saml labelname SystemSaml
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Saml struct {
	pulumi.CustomResourceState

	// IdP Binding protocol. Valid values: `post`, `redirect`.
	BindingProtocol pulumi.StringOutput `pulumi:"bindingProtocol"`
	// Certificate to sign SAML messages.
	Cert pulumi.StringOutput `pulumi:"cert"`
	// Choose default login page. Valid values: `normal`, `sso`.
	DefaultLoginPage pulumi.StringOutput `pulumi:"defaultLoginPage"`
	// Default profile for new SSO admin.
	DefaultProfile pulumi.StringOutput `pulumi:"defaultProfile"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// SP entity ID.
	EntityId pulumi.StringOutput `pulumi:"entityId"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// IDP certificate name.
	IdpCert pulumi.StringOutput `pulumi:"idpCert"`
	// IDP entity ID.
	IdpEntityId pulumi.StringOutput `pulumi:"idpEntityId"`
	// IDP single logout URL.
	IdpSingleLogoutUrl pulumi.StringOutput `pulumi:"idpSingleLogoutUrl"`
	// IDP single sign-on URL.
	IdpSingleSignOnUrl pulumi.StringOutput `pulumi:"idpSingleSignOnUrl"`
	// Length of the range of time when the assertion is valid (in minutes).
	Life pulumi.IntOutput `pulumi:"life"`
	// SP portal URL.
	PortalUrl pulumi.StringOutput `pulumi:"portalUrl"`
	// SAML role. Valid values: `identity-provider`, `service-provider`.
	Role pulumi.StringOutput `pulumi:"role"`
	// Server address.
	ServerAddress pulumi.StringOutput `pulumi:"serverAddress"`
	// Authorized service providers. The structure of `serviceProviders` block is documented below.
	ServiceProviders SamlServiceProviderArrayOutput `pulumi:"serviceProviders"`
	// SP single logout URL.
	SingleLogoutUrl pulumi.StringOutput `pulumi:"singleLogoutUrl"`
	// SP single sign-on URL.
	SingleSignOnUrl pulumi.StringOutput `pulumi:"singleSignOnUrl"`
	// Enable/disable SAML authentication (default = disable). Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Tolerance to the range of time when the assertion is valid (in minutes).
	Tolerance pulumi.IntOutput `pulumi:"tolerance"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSaml registers a new resource with the given unique name, arguments, and options.
func NewSaml(ctx *pulumi.Context,
	name string, args *SamlArgs, opts ...pulumi.ResourceOption) (*Saml, error) {
	if args == nil {
		args = &SamlArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Saml
	err := ctx.RegisterResource("fortios:system/saml:Saml", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSaml gets an existing Saml resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSaml(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SamlState, opts ...pulumi.ResourceOption) (*Saml, error) {
	var resource Saml
	err := ctx.ReadResource("fortios:system/saml:Saml", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Saml resources.
type samlState struct {
	// IdP Binding protocol. Valid values: `post`, `redirect`.
	BindingProtocol *string `pulumi:"bindingProtocol"`
	// Certificate to sign SAML messages.
	Cert *string `pulumi:"cert"`
	// Choose default login page. Valid values: `normal`, `sso`.
	DefaultLoginPage *string `pulumi:"defaultLoginPage"`
	// Default profile for new SSO admin.
	DefaultProfile *string `pulumi:"defaultProfile"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// SP entity ID.
	EntityId *string `pulumi:"entityId"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// IDP certificate name.
	IdpCert *string `pulumi:"idpCert"`
	// IDP entity ID.
	IdpEntityId *string `pulumi:"idpEntityId"`
	// IDP single logout URL.
	IdpSingleLogoutUrl *string `pulumi:"idpSingleLogoutUrl"`
	// IDP single sign-on URL.
	IdpSingleSignOnUrl *string `pulumi:"idpSingleSignOnUrl"`
	// Length of the range of time when the assertion is valid (in minutes).
	Life *int `pulumi:"life"`
	// SP portal URL.
	PortalUrl *string `pulumi:"portalUrl"`
	// SAML role. Valid values: `identity-provider`, `service-provider`.
	Role *string `pulumi:"role"`
	// Server address.
	ServerAddress *string `pulumi:"serverAddress"`
	// Authorized service providers. The structure of `serviceProviders` block is documented below.
	ServiceProviders []SamlServiceProvider `pulumi:"serviceProviders"`
	// SP single logout URL.
	SingleLogoutUrl *string `pulumi:"singleLogoutUrl"`
	// SP single sign-on URL.
	SingleSignOnUrl *string `pulumi:"singleSignOnUrl"`
	// Enable/disable SAML authentication (default = disable). Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Tolerance to the range of time when the assertion is valid (in minutes).
	Tolerance *int `pulumi:"tolerance"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SamlState struct {
	// IdP Binding protocol. Valid values: `post`, `redirect`.
	BindingProtocol pulumi.StringPtrInput
	// Certificate to sign SAML messages.
	Cert pulumi.StringPtrInput
	// Choose default login page. Valid values: `normal`, `sso`.
	DefaultLoginPage pulumi.StringPtrInput
	// Default profile for new SSO admin.
	DefaultProfile pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// SP entity ID.
	EntityId pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// IDP certificate name.
	IdpCert pulumi.StringPtrInput
	// IDP entity ID.
	IdpEntityId pulumi.StringPtrInput
	// IDP single logout URL.
	IdpSingleLogoutUrl pulumi.StringPtrInput
	// IDP single sign-on URL.
	IdpSingleSignOnUrl pulumi.StringPtrInput
	// Length of the range of time when the assertion is valid (in minutes).
	Life pulumi.IntPtrInput
	// SP portal URL.
	PortalUrl pulumi.StringPtrInput
	// SAML role. Valid values: `identity-provider`, `service-provider`.
	Role pulumi.StringPtrInput
	// Server address.
	ServerAddress pulumi.StringPtrInput
	// Authorized service providers. The structure of `serviceProviders` block is documented below.
	ServiceProviders SamlServiceProviderArrayInput
	// SP single logout URL.
	SingleLogoutUrl pulumi.StringPtrInput
	// SP single sign-on URL.
	SingleSignOnUrl pulumi.StringPtrInput
	// Enable/disable SAML authentication (default = disable). Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Tolerance to the range of time when the assertion is valid (in minutes).
	Tolerance pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SamlState) ElementType() reflect.Type {
	return reflect.TypeOf((*samlState)(nil)).Elem()
}

type samlArgs struct {
	// IdP Binding protocol. Valid values: `post`, `redirect`.
	BindingProtocol *string `pulumi:"bindingProtocol"`
	// Certificate to sign SAML messages.
	Cert *string `pulumi:"cert"`
	// Choose default login page. Valid values: `normal`, `sso`.
	DefaultLoginPage *string `pulumi:"defaultLoginPage"`
	// Default profile for new SSO admin.
	DefaultProfile *string `pulumi:"defaultProfile"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// SP entity ID.
	EntityId *string `pulumi:"entityId"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// IDP certificate name.
	IdpCert *string `pulumi:"idpCert"`
	// IDP entity ID.
	IdpEntityId *string `pulumi:"idpEntityId"`
	// IDP single logout URL.
	IdpSingleLogoutUrl *string `pulumi:"idpSingleLogoutUrl"`
	// IDP single sign-on URL.
	IdpSingleSignOnUrl *string `pulumi:"idpSingleSignOnUrl"`
	// Length of the range of time when the assertion is valid (in minutes).
	Life *int `pulumi:"life"`
	// SP portal URL.
	PortalUrl *string `pulumi:"portalUrl"`
	// SAML role. Valid values: `identity-provider`, `service-provider`.
	Role *string `pulumi:"role"`
	// Server address.
	ServerAddress *string `pulumi:"serverAddress"`
	// Authorized service providers. The structure of `serviceProviders` block is documented below.
	ServiceProviders []SamlServiceProvider `pulumi:"serviceProviders"`
	// SP single logout URL.
	SingleLogoutUrl *string `pulumi:"singleLogoutUrl"`
	// SP single sign-on URL.
	SingleSignOnUrl *string `pulumi:"singleSignOnUrl"`
	// Enable/disable SAML authentication (default = disable). Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Tolerance to the range of time when the assertion is valid (in minutes).
	Tolerance *int `pulumi:"tolerance"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Saml resource.
type SamlArgs struct {
	// IdP Binding protocol. Valid values: `post`, `redirect`.
	BindingProtocol pulumi.StringPtrInput
	// Certificate to sign SAML messages.
	Cert pulumi.StringPtrInput
	// Choose default login page. Valid values: `normal`, `sso`.
	DefaultLoginPage pulumi.StringPtrInput
	// Default profile for new SSO admin.
	DefaultProfile pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// SP entity ID.
	EntityId pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// IDP certificate name.
	IdpCert pulumi.StringPtrInput
	// IDP entity ID.
	IdpEntityId pulumi.StringPtrInput
	// IDP single logout URL.
	IdpSingleLogoutUrl pulumi.StringPtrInput
	// IDP single sign-on URL.
	IdpSingleSignOnUrl pulumi.StringPtrInput
	// Length of the range of time when the assertion is valid (in minutes).
	Life pulumi.IntPtrInput
	// SP portal URL.
	PortalUrl pulumi.StringPtrInput
	// SAML role. Valid values: `identity-provider`, `service-provider`.
	Role pulumi.StringPtrInput
	// Server address.
	ServerAddress pulumi.StringPtrInput
	// Authorized service providers. The structure of `serviceProviders` block is documented below.
	ServiceProviders SamlServiceProviderArrayInput
	// SP single logout URL.
	SingleLogoutUrl pulumi.StringPtrInput
	// SP single sign-on URL.
	SingleSignOnUrl pulumi.StringPtrInput
	// Enable/disable SAML authentication (default = disable). Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Tolerance to the range of time when the assertion is valid (in minutes).
	Tolerance pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*samlArgs)(nil)).Elem()
}

type SamlInput interface {
	pulumi.Input

	ToSamlOutput() SamlOutput
	ToSamlOutputWithContext(ctx context.Context) SamlOutput
}

func (*Saml) ElementType() reflect.Type {
	return reflect.TypeOf((**Saml)(nil)).Elem()
}

func (i *Saml) ToSamlOutput() SamlOutput {
	return i.ToSamlOutputWithContext(context.Background())
}

func (i *Saml) ToSamlOutputWithContext(ctx context.Context) SamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlOutput)
}

// SamlArrayInput is an input type that accepts SamlArray and SamlArrayOutput values.
// You can construct a concrete instance of `SamlArrayInput` via:
//
//	SamlArray{ SamlArgs{...} }
type SamlArrayInput interface {
	pulumi.Input

	ToSamlArrayOutput() SamlArrayOutput
	ToSamlArrayOutputWithContext(context.Context) SamlArrayOutput
}

type SamlArray []SamlInput

func (SamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Saml)(nil)).Elem()
}

func (i SamlArray) ToSamlArrayOutput() SamlArrayOutput {
	return i.ToSamlArrayOutputWithContext(context.Background())
}

func (i SamlArray) ToSamlArrayOutputWithContext(ctx context.Context) SamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlArrayOutput)
}

// SamlMapInput is an input type that accepts SamlMap and SamlMapOutput values.
// You can construct a concrete instance of `SamlMapInput` via:
//
//	SamlMap{ "key": SamlArgs{...} }
type SamlMapInput interface {
	pulumi.Input

	ToSamlMapOutput() SamlMapOutput
	ToSamlMapOutputWithContext(context.Context) SamlMapOutput
}

type SamlMap map[string]SamlInput

func (SamlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Saml)(nil)).Elem()
}

func (i SamlMap) ToSamlMapOutput() SamlMapOutput {
	return i.ToSamlMapOutputWithContext(context.Background())
}

func (i SamlMap) ToSamlMapOutputWithContext(ctx context.Context) SamlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlMapOutput)
}

type SamlOutput struct{ *pulumi.OutputState }

func (SamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Saml)(nil)).Elem()
}

func (o SamlOutput) ToSamlOutput() SamlOutput {
	return o
}

func (o SamlOutput) ToSamlOutputWithContext(ctx context.Context) SamlOutput {
	return o
}

// IdP Binding protocol. Valid values: `post`, `redirect`.
func (o SamlOutput) BindingProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.BindingProtocol }).(pulumi.StringOutput)
}

// Certificate to sign SAML messages.
func (o SamlOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.Cert }).(pulumi.StringOutput)
}

// Choose default login page. Valid values: `normal`, `sso`.
func (o SamlOutput) DefaultLoginPage() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.DefaultLoginPage }).(pulumi.StringOutput)
}

// Default profile for new SSO admin.
func (o SamlOutput) DefaultProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.DefaultProfile }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SamlOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// SP entity ID.
func (o SamlOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.EntityId }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o SamlOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// IDP certificate name.
func (o SamlOutput) IdpCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.IdpCert }).(pulumi.StringOutput)
}

// IDP entity ID.
func (o SamlOutput) IdpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.IdpEntityId }).(pulumi.StringOutput)
}

// IDP single logout URL.
func (o SamlOutput) IdpSingleLogoutUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.IdpSingleLogoutUrl }).(pulumi.StringOutput)
}

// IDP single sign-on URL.
func (o SamlOutput) IdpSingleSignOnUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.IdpSingleSignOnUrl }).(pulumi.StringOutput)
}

// Length of the range of time when the assertion is valid (in minutes).
func (o SamlOutput) Life() pulumi.IntOutput {
	return o.ApplyT(func(v *Saml) pulumi.IntOutput { return v.Life }).(pulumi.IntOutput)
}

// SP portal URL.
func (o SamlOutput) PortalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.PortalUrl }).(pulumi.StringOutput)
}

// SAML role. Valid values: `identity-provider`, `service-provider`.
func (o SamlOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// Server address.
func (o SamlOutput) ServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.ServerAddress }).(pulumi.StringOutput)
}

// Authorized service providers. The structure of `serviceProviders` block is documented below.
func (o SamlOutput) ServiceProviders() SamlServiceProviderArrayOutput {
	return o.ApplyT(func(v *Saml) SamlServiceProviderArrayOutput { return v.ServiceProviders }).(SamlServiceProviderArrayOutput)
}

// SP single logout URL.
func (o SamlOutput) SingleLogoutUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.SingleLogoutUrl }).(pulumi.StringOutput)
}

// SP single sign-on URL.
func (o SamlOutput) SingleSignOnUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.SingleSignOnUrl }).(pulumi.StringOutput)
}

// Enable/disable SAML authentication (default = disable). Valid values: `enable`, `disable`.
func (o SamlOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Tolerance to the range of time when the assertion is valid (in minutes).
func (o SamlOutput) Tolerance() pulumi.IntOutput {
	return o.ApplyT(func(v *Saml) pulumi.IntOutput { return v.Tolerance }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SamlOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Saml) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SamlArrayOutput struct{ *pulumi.OutputState }

func (SamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Saml)(nil)).Elem()
}

func (o SamlArrayOutput) ToSamlArrayOutput() SamlArrayOutput {
	return o
}

func (o SamlArrayOutput) ToSamlArrayOutputWithContext(ctx context.Context) SamlArrayOutput {
	return o
}

func (o SamlArrayOutput) Index(i pulumi.IntInput) SamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Saml {
		return vs[0].([]*Saml)[vs[1].(int)]
	}).(SamlOutput)
}

type SamlMapOutput struct{ *pulumi.OutputState }

func (SamlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Saml)(nil)).Elem()
}

func (o SamlMapOutput) ToSamlMapOutput() SamlMapOutput {
	return o
}

func (o SamlMapOutput) ToSamlMapOutputWithContext(ctx context.Context) SamlMapOutput {
	return o
}

func (o SamlMapOutput) MapIndex(k pulumi.StringInput) SamlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Saml {
		return vs[0].(map[string]*Saml)[vs[1].(string)]
	}).(SamlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SamlInput)(nil)).Elem(), &Saml{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlArrayInput)(nil)).Elem(), SamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlMapInput)(nil)).Elem(), SamlMap{})
	pulumi.RegisterOutputType(SamlOutput{})
	pulumi.RegisterOutputType(SamlArrayOutput{})
	pulumi.RegisterOutputType(SamlMapOutput{})
}
