// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure FIPS-CC mode.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewFipscc(ctx, "trname", &system.FipsccArgs{
//				EntropyToken:          pulumi.String("enable"),
//				KeyGenerationSelfTest: pulumi.String("disable"),
//				SelfTestPeriod:        pulumi.Int(1440),
//				Status:                pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System FipsCc can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/fipscc:Fipscc labelname SystemFipsCc
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/fipscc:Fipscc labelname SystemFipsCc
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Fipscc struct {
	pulumi.CustomResourceState

	// Enable/disable/dynamic entropy token. Valid values: `enable`, `disable`, `dynamic`.
	EntropyToken pulumi.StringOutput `pulumi:"entropyToken"`
	// Enable/disable self tests after key generation. Valid values: `enable`, `disable`.
	KeyGenerationSelfTest pulumi.StringOutput `pulumi:"keyGenerationSelfTest"`
	// Self test period.
	SelfTestPeriod pulumi.IntOutput `pulumi:"selfTestPeriod"`
	// Enable/disable FIPS-CC mode. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFipscc registers a new resource with the given unique name, arguments, and options.
func NewFipscc(ctx *pulumi.Context,
	name string, args *FipsccArgs, opts ...pulumi.ResourceOption) (*Fipscc, error) {
	if args == nil {
		args = &FipsccArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Fipscc
	err := ctx.RegisterResource("fortios:system/fipscc:Fipscc", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFipscc gets an existing Fipscc resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFipscc(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FipsccState, opts ...pulumi.ResourceOption) (*Fipscc, error) {
	var resource Fipscc
	err := ctx.ReadResource("fortios:system/fipscc:Fipscc", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Fipscc resources.
type fipsccState struct {
	// Enable/disable/dynamic entropy token. Valid values: `enable`, `disable`, `dynamic`.
	EntropyToken *string `pulumi:"entropyToken"`
	// Enable/disable self tests after key generation. Valid values: `enable`, `disable`.
	KeyGenerationSelfTest *string `pulumi:"keyGenerationSelfTest"`
	// Self test period.
	SelfTestPeriod *int `pulumi:"selfTestPeriod"`
	// Enable/disable FIPS-CC mode. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FipsccState struct {
	// Enable/disable/dynamic entropy token. Valid values: `enable`, `disable`, `dynamic`.
	EntropyToken pulumi.StringPtrInput
	// Enable/disable self tests after key generation. Valid values: `enable`, `disable`.
	KeyGenerationSelfTest pulumi.StringPtrInput
	// Self test period.
	SelfTestPeriod pulumi.IntPtrInput
	// Enable/disable FIPS-CC mode. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FipsccState) ElementType() reflect.Type {
	return reflect.TypeOf((*fipsccState)(nil)).Elem()
}

type fipsccArgs struct {
	// Enable/disable/dynamic entropy token. Valid values: `enable`, `disable`, `dynamic`.
	EntropyToken *string `pulumi:"entropyToken"`
	// Enable/disable self tests after key generation. Valid values: `enable`, `disable`.
	KeyGenerationSelfTest *string `pulumi:"keyGenerationSelfTest"`
	// Self test period.
	SelfTestPeriod *int `pulumi:"selfTestPeriod"`
	// Enable/disable FIPS-CC mode. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Fipscc resource.
type FipsccArgs struct {
	// Enable/disable/dynamic entropy token. Valid values: `enable`, `disable`, `dynamic`.
	EntropyToken pulumi.StringPtrInput
	// Enable/disable self tests after key generation. Valid values: `enable`, `disable`.
	KeyGenerationSelfTest pulumi.StringPtrInput
	// Self test period.
	SelfTestPeriod pulumi.IntPtrInput
	// Enable/disable FIPS-CC mode. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FipsccArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fipsccArgs)(nil)).Elem()
}

type FipsccInput interface {
	pulumi.Input

	ToFipsccOutput() FipsccOutput
	ToFipsccOutputWithContext(ctx context.Context) FipsccOutput
}

func (*Fipscc) ElementType() reflect.Type {
	return reflect.TypeOf((**Fipscc)(nil)).Elem()
}

func (i *Fipscc) ToFipsccOutput() FipsccOutput {
	return i.ToFipsccOutputWithContext(context.Background())
}

func (i *Fipscc) ToFipsccOutputWithContext(ctx context.Context) FipsccOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FipsccOutput)
}

// FipsccArrayInput is an input type that accepts FipsccArray and FipsccArrayOutput values.
// You can construct a concrete instance of `FipsccArrayInput` via:
//
//	FipsccArray{ FipsccArgs{...} }
type FipsccArrayInput interface {
	pulumi.Input

	ToFipsccArrayOutput() FipsccArrayOutput
	ToFipsccArrayOutputWithContext(context.Context) FipsccArrayOutput
}

type FipsccArray []FipsccInput

func (FipsccArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fipscc)(nil)).Elem()
}

func (i FipsccArray) ToFipsccArrayOutput() FipsccArrayOutput {
	return i.ToFipsccArrayOutputWithContext(context.Background())
}

func (i FipsccArray) ToFipsccArrayOutputWithContext(ctx context.Context) FipsccArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FipsccArrayOutput)
}

// FipsccMapInput is an input type that accepts FipsccMap and FipsccMapOutput values.
// You can construct a concrete instance of `FipsccMapInput` via:
//
//	FipsccMap{ "key": FipsccArgs{...} }
type FipsccMapInput interface {
	pulumi.Input

	ToFipsccMapOutput() FipsccMapOutput
	ToFipsccMapOutputWithContext(context.Context) FipsccMapOutput
}

type FipsccMap map[string]FipsccInput

func (FipsccMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fipscc)(nil)).Elem()
}

func (i FipsccMap) ToFipsccMapOutput() FipsccMapOutput {
	return i.ToFipsccMapOutputWithContext(context.Background())
}

func (i FipsccMap) ToFipsccMapOutputWithContext(ctx context.Context) FipsccMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FipsccMapOutput)
}

type FipsccOutput struct{ *pulumi.OutputState }

func (FipsccOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Fipscc)(nil)).Elem()
}

func (o FipsccOutput) ToFipsccOutput() FipsccOutput {
	return o
}

func (o FipsccOutput) ToFipsccOutputWithContext(ctx context.Context) FipsccOutput {
	return o
}

// Enable/disable/dynamic entropy token. Valid values: `enable`, `disable`, `dynamic`.
func (o FipsccOutput) EntropyToken() pulumi.StringOutput {
	return o.ApplyT(func(v *Fipscc) pulumi.StringOutput { return v.EntropyToken }).(pulumi.StringOutput)
}

// Enable/disable self tests after key generation. Valid values: `enable`, `disable`.
func (o FipsccOutput) KeyGenerationSelfTest() pulumi.StringOutput {
	return o.ApplyT(func(v *Fipscc) pulumi.StringOutput { return v.KeyGenerationSelfTest }).(pulumi.StringOutput)
}

// Self test period.
func (o FipsccOutput) SelfTestPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *Fipscc) pulumi.IntOutput { return v.SelfTestPeriod }).(pulumi.IntOutput)
}

// Enable/disable FIPS-CC mode. Valid values: `enable`, `disable`.
func (o FipsccOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Fipscc) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FipsccOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fipscc) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FipsccArrayOutput struct{ *pulumi.OutputState }

func (FipsccArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fipscc)(nil)).Elem()
}

func (o FipsccArrayOutput) ToFipsccArrayOutput() FipsccArrayOutput {
	return o
}

func (o FipsccArrayOutput) ToFipsccArrayOutputWithContext(ctx context.Context) FipsccArrayOutput {
	return o
}

func (o FipsccArrayOutput) Index(i pulumi.IntInput) FipsccOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Fipscc {
		return vs[0].([]*Fipscc)[vs[1].(int)]
	}).(FipsccOutput)
}

type FipsccMapOutput struct{ *pulumi.OutputState }

func (FipsccMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fipscc)(nil)).Elem()
}

func (o FipsccMapOutput) ToFipsccMapOutput() FipsccMapOutput {
	return o
}

func (o FipsccMapOutput) ToFipsccMapOutputWithContext(ctx context.Context) FipsccMapOutput {
	return o
}

func (o FipsccMapOutput) MapIndex(k pulumi.StringInput) FipsccOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Fipscc {
		return vs[0].(map[string]*Fipscc)[vs[1].(string)]
	}).(FipsccOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FipsccInput)(nil)).Elem(), &Fipscc{})
	pulumi.RegisterInputType(reflect.TypeOf((*FipsccArrayInput)(nil)).Elem(), FipsccArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FipsccMapInput)(nil)).Elem(), FipsccMap{})
	pulumi.RegisterOutputType(FipsccOutput{})
	pulumi.RegisterOutputType(FipsccArrayOutput{})
	pulumi.RegisterOutputType(FipsccMapOutput{})
}
