// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure the password policy for guest administrators.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewPasswordpolicyguestadmin(ctx, "trname", &system.PasswordpolicyguestadminArgs{
//				ApplyTo:            pulumi.String("guest-admin-password"),
//				Change4Characters:  pulumi.String("disable"),
//				ExpireDay:          pulumi.Int(90),
//				ExpireStatus:       pulumi.String("disable"),
//				MinLowerCaseLetter: pulumi.Int(0),
//				MinNonAlphanumeric: pulumi.Int(0),
//				MinNumber:          pulumi.Int(0),
//				MinUpperCaseLetter: pulumi.Int(0),
//				MinimumLength:      pulumi.Int(8),
//				ReusePassword:      pulumi.String("enable"),
//				Status:             pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System PasswordPolicyGuestAdmin can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/passwordpolicyguestadmin:Passwordpolicyguestadmin labelname SystemPasswordPolicyGuestAdmin
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/passwordpolicyguestadmin:Passwordpolicyguestadmin labelname SystemPasswordPolicyGuestAdmin
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Passwordpolicyguestadmin struct {
	pulumi.CustomResourceState

	// Guest administrator to which this password policy applies. Valid values: `guest-admin-password`.
	ApplyTo pulumi.StringOutput `pulumi:"applyTo"`
	// Enable/disable changing at least 4 characters for a new password (This attribute overrides reuse-password if both are enabled). Valid values: `enable`, `disable`.
	Change4Characters pulumi.StringOutput `pulumi:"change4Characters"`
	// Number of days after which passwords expire (1 - 999 days, default = 90).
	ExpireDay pulumi.IntOutput `pulumi:"expireDay"`
	// Enable/disable password expiration. Valid values: `enable`, `disable`.
	ExpireStatus pulumi.StringOutput `pulumi:"expireStatus"`
	// Minimum number of unique characters in new password which do not exist in old password (This attribute overrides reuse-password if both are enabled).
	MinChangeCharacters pulumi.IntOutput `pulumi:"minChangeCharacters"`
	// Minimum number of lowercase characters in password (0 - 128, default = 0).
	MinLowerCaseLetter pulumi.IntOutput `pulumi:"minLowerCaseLetter"`
	// Minimum number of non-alphanumeric characters in password (0 - 128, default = 0).
	MinNonAlphanumeric pulumi.IntOutput `pulumi:"minNonAlphanumeric"`
	// Minimum number of numeric characters in password (0 - 128, default = 0).
	MinNumber pulumi.IntOutput `pulumi:"minNumber"`
	// Minimum number of uppercase characters in password (0 - 128, default = 0).
	MinUpperCaseLetter pulumi.IntOutput `pulumi:"minUpperCaseLetter"`
	// Minimum password length (8 - 128, default = 8).
	MinimumLength pulumi.IntOutput `pulumi:"minimumLength"`
	// Enable/disable reusing of password (if both reuse-password and change-4-characters are enabled, change-4-characters overrides). Valid values: `enable`, `disable`.
	ReusePassword pulumi.StringOutput `pulumi:"reusePassword"`
	// Enable/disable setting a password policy for locally defined administrator passwords and IPsec VPN pre-shared keys. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewPasswordpolicyguestadmin registers a new resource with the given unique name, arguments, and options.
func NewPasswordpolicyguestadmin(ctx *pulumi.Context,
	name string, args *PasswordpolicyguestadminArgs, opts ...pulumi.ResourceOption) (*Passwordpolicyguestadmin, error) {
	if args == nil {
		args = &PasswordpolicyguestadminArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Passwordpolicyguestadmin
	err := ctx.RegisterResource("fortios:system/passwordpolicyguestadmin:Passwordpolicyguestadmin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPasswordpolicyguestadmin gets an existing Passwordpolicyguestadmin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPasswordpolicyguestadmin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PasswordpolicyguestadminState, opts ...pulumi.ResourceOption) (*Passwordpolicyguestadmin, error) {
	var resource Passwordpolicyguestadmin
	err := ctx.ReadResource("fortios:system/passwordpolicyguestadmin:Passwordpolicyguestadmin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Passwordpolicyguestadmin resources.
type passwordpolicyguestadminState struct {
	// Guest administrator to which this password policy applies. Valid values: `guest-admin-password`.
	ApplyTo *string `pulumi:"applyTo"`
	// Enable/disable changing at least 4 characters for a new password (This attribute overrides reuse-password if both are enabled). Valid values: `enable`, `disable`.
	Change4Characters *string `pulumi:"change4Characters"`
	// Number of days after which passwords expire (1 - 999 days, default = 90).
	ExpireDay *int `pulumi:"expireDay"`
	// Enable/disable password expiration. Valid values: `enable`, `disable`.
	ExpireStatus *string `pulumi:"expireStatus"`
	// Minimum number of unique characters in new password which do not exist in old password (This attribute overrides reuse-password if both are enabled).
	MinChangeCharacters *int `pulumi:"minChangeCharacters"`
	// Minimum number of lowercase characters in password (0 - 128, default = 0).
	MinLowerCaseLetter *int `pulumi:"minLowerCaseLetter"`
	// Minimum number of non-alphanumeric characters in password (0 - 128, default = 0).
	MinNonAlphanumeric *int `pulumi:"minNonAlphanumeric"`
	// Minimum number of numeric characters in password (0 - 128, default = 0).
	MinNumber *int `pulumi:"minNumber"`
	// Minimum number of uppercase characters in password (0 - 128, default = 0).
	MinUpperCaseLetter *int `pulumi:"minUpperCaseLetter"`
	// Minimum password length (8 - 128, default = 8).
	MinimumLength *int `pulumi:"minimumLength"`
	// Enable/disable reusing of password (if both reuse-password and change-4-characters are enabled, change-4-characters overrides). Valid values: `enable`, `disable`.
	ReusePassword *string `pulumi:"reusePassword"`
	// Enable/disable setting a password policy for locally defined administrator passwords and IPsec VPN pre-shared keys. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type PasswordpolicyguestadminState struct {
	// Guest administrator to which this password policy applies. Valid values: `guest-admin-password`.
	ApplyTo pulumi.StringPtrInput
	// Enable/disable changing at least 4 characters for a new password (This attribute overrides reuse-password if both are enabled). Valid values: `enable`, `disable`.
	Change4Characters pulumi.StringPtrInput
	// Number of days after which passwords expire (1 - 999 days, default = 90).
	ExpireDay pulumi.IntPtrInput
	// Enable/disable password expiration. Valid values: `enable`, `disable`.
	ExpireStatus pulumi.StringPtrInput
	// Minimum number of unique characters in new password which do not exist in old password (This attribute overrides reuse-password if both are enabled).
	MinChangeCharacters pulumi.IntPtrInput
	// Minimum number of lowercase characters in password (0 - 128, default = 0).
	MinLowerCaseLetter pulumi.IntPtrInput
	// Minimum number of non-alphanumeric characters in password (0 - 128, default = 0).
	MinNonAlphanumeric pulumi.IntPtrInput
	// Minimum number of numeric characters in password (0 - 128, default = 0).
	MinNumber pulumi.IntPtrInput
	// Minimum number of uppercase characters in password (0 - 128, default = 0).
	MinUpperCaseLetter pulumi.IntPtrInput
	// Minimum password length (8 - 128, default = 8).
	MinimumLength pulumi.IntPtrInput
	// Enable/disable reusing of password (if both reuse-password and change-4-characters are enabled, change-4-characters overrides). Valid values: `enable`, `disable`.
	ReusePassword pulumi.StringPtrInput
	// Enable/disable setting a password policy for locally defined administrator passwords and IPsec VPN pre-shared keys. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (PasswordpolicyguestadminState) ElementType() reflect.Type {
	return reflect.TypeOf((*passwordpolicyguestadminState)(nil)).Elem()
}

type passwordpolicyguestadminArgs struct {
	// Guest administrator to which this password policy applies. Valid values: `guest-admin-password`.
	ApplyTo *string `pulumi:"applyTo"`
	// Enable/disable changing at least 4 characters for a new password (This attribute overrides reuse-password if both are enabled). Valid values: `enable`, `disable`.
	Change4Characters *string `pulumi:"change4Characters"`
	// Number of days after which passwords expire (1 - 999 days, default = 90).
	ExpireDay *int `pulumi:"expireDay"`
	// Enable/disable password expiration. Valid values: `enable`, `disable`.
	ExpireStatus *string `pulumi:"expireStatus"`
	// Minimum number of unique characters in new password which do not exist in old password (This attribute overrides reuse-password if both are enabled).
	MinChangeCharacters *int `pulumi:"minChangeCharacters"`
	// Minimum number of lowercase characters in password (0 - 128, default = 0).
	MinLowerCaseLetter *int `pulumi:"minLowerCaseLetter"`
	// Minimum number of non-alphanumeric characters in password (0 - 128, default = 0).
	MinNonAlphanumeric *int `pulumi:"minNonAlphanumeric"`
	// Minimum number of numeric characters in password (0 - 128, default = 0).
	MinNumber *int `pulumi:"minNumber"`
	// Minimum number of uppercase characters in password (0 - 128, default = 0).
	MinUpperCaseLetter *int `pulumi:"minUpperCaseLetter"`
	// Minimum password length (8 - 128, default = 8).
	MinimumLength *int `pulumi:"minimumLength"`
	// Enable/disable reusing of password (if both reuse-password and change-4-characters are enabled, change-4-characters overrides). Valid values: `enable`, `disable`.
	ReusePassword *string `pulumi:"reusePassword"`
	// Enable/disable setting a password policy for locally defined administrator passwords and IPsec VPN pre-shared keys. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Passwordpolicyguestadmin resource.
type PasswordpolicyguestadminArgs struct {
	// Guest administrator to which this password policy applies. Valid values: `guest-admin-password`.
	ApplyTo pulumi.StringPtrInput
	// Enable/disable changing at least 4 characters for a new password (This attribute overrides reuse-password if both are enabled). Valid values: `enable`, `disable`.
	Change4Characters pulumi.StringPtrInput
	// Number of days after which passwords expire (1 - 999 days, default = 90).
	ExpireDay pulumi.IntPtrInput
	// Enable/disable password expiration. Valid values: `enable`, `disable`.
	ExpireStatus pulumi.StringPtrInput
	// Minimum number of unique characters in new password which do not exist in old password (This attribute overrides reuse-password if both are enabled).
	MinChangeCharacters pulumi.IntPtrInput
	// Minimum number of lowercase characters in password (0 - 128, default = 0).
	MinLowerCaseLetter pulumi.IntPtrInput
	// Minimum number of non-alphanumeric characters in password (0 - 128, default = 0).
	MinNonAlphanumeric pulumi.IntPtrInput
	// Minimum number of numeric characters in password (0 - 128, default = 0).
	MinNumber pulumi.IntPtrInput
	// Minimum number of uppercase characters in password (0 - 128, default = 0).
	MinUpperCaseLetter pulumi.IntPtrInput
	// Minimum password length (8 - 128, default = 8).
	MinimumLength pulumi.IntPtrInput
	// Enable/disable reusing of password (if both reuse-password and change-4-characters are enabled, change-4-characters overrides). Valid values: `enable`, `disable`.
	ReusePassword pulumi.StringPtrInput
	// Enable/disable setting a password policy for locally defined administrator passwords and IPsec VPN pre-shared keys. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (PasswordpolicyguestadminArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*passwordpolicyguestadminArgs)(nil)).Elem()
}

type PasswordpolicyguestadminInput interface {
	pulumi.Input

	ToPasswordpolicyguestadminOutput() PasswordpolicyguestadminOutput
	ToPasswordpolicyguestadminOutputWithContext(ctx context.Context) PasswordpolicyguestadminOutput
}

func (*Passwordpolicyguestadmin) ElementType() reflect.Type {
	return reflect.TypeOf((**Passwordpolicyguestadmin)(nil)).Elem()
}

func (i *Passwordpolicyguestadmin) ToPasswordpolicyguestadminOutput() PasswordpolicyguestadminOutput {
	return i.ToPasswordpolicyguestadminOutputWithContext(context.Background())
}

func (i *Passwordpolicyguestadmin) ToPasswordpolicyguestadminOutputWithContext(ctx context.Context) PasswordpolicyguestadminOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordpolicyguestadminOutput)
}

// PasswordpolicyguestadminArrayInput is an input type that accepts PasswordpolicyguestadminArray and PasswordpolicyguestadminArrayOutput values.
// You can construct a concrete instance of `PasswordpolicyguestadminArrayInput` via:
//
//	PasswordpolicyguestadminArray{ PasswordpolicyguestadminArgs{...} }
type PasswordpolicyguestadminArrayInput interface {
	pulumi.Input

	ToPasswordpolicyguestadminArrayOutput() PasswordpolicyguestadminArrayOutput
	ToPasswordpolicyguestadminArrayOutputWithContext(context.Context) PasswordpolicyguestadminArrayOutput
}

type PasswordpolicyguestadminArray []PasswordpolicyguestadminInput

func (PasswordpolicyguestadminArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Passwordpolicyguestadmin)(nil)).Elem()
}

func (i PasswordpolicyguestadminArray) ToPasswordpolicyguestadminArrayOutput() PasswordpolicyguestadminArrayOutput {
	return i.ToPasswordpolicyguestadminArrayOutputWithContext(context.Background())
}

func (i PasswordpolicyguestadminArray) ToPasswordpolicyguestadminArrayOutputWithContext(ctx context.Context) PasswordpolicyguestadminArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordpolicyguestadminArrayOutput)
}

// PasswordpolicyguestadminMapInput is an input type that accepts PasswordpolicyguestadminMap and PasswordpolicyguestadminMapOutput values.
// You can construct a concrete instance of `PasswordpolicyguestadminMapInput` via:
//
//	PasswordpolicyguestadminMap{ "key": PasswordpolicyguestadminArgs{...} }
type PasswordpolicyguestadminMapInput interface {
	pulumi.Input

	ToPasswordpolicyguestadminMapOutput() PasswordpolicyguestadminMapOutput
	ToPasswordpolicyguestadminMapOutputWithContext(context.Context) PasswordpolicyguestadminMapOutput
}

type PasswordpolicyguestadminMap map[string]PasswordpolicyguestadminInput

func (PasswordpolicyguestadminMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Passwordpolicyguestadmin)(nil)).Elem()
}

func (i PasswordpolicyguestadminMap) ToPasswordpolicyguestadminMapOutput() PasswordpolicyguestadminMapOutput {
	return i.ToPasswordpolicyguestadminMapOutputWithContext(context.Background())
}

func (i PasswordpolicyguestadminMap) ToPasswordpolicyguestadminMapOutputWithContext(ctx context.Context) PasswordpolicyguestadminMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordpolicyguestadminMapOutput)
}

type PasswordpolicyguestadminOutput struct{ *pulumi.OutputState }

func (PasswordpolicyguestadminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Passwordpolicyguestadmin)(nil)).Elem()
}

func (o PasswordpolicyguestadminOutput) ToPasswordpolicyguestadminOutput() PasswordpolicyguestadminOutput {
	return o
}

func (o PasswordpolicyguestadminOutput) ToPasswordpolicyguestadminOutputWithContext(ctx context.Context) PasswordpolicyguestadminOutput {
	return o
}

// Guest administrator to which this password policy applies. Valid values: `guest-admin-password`.
func (o PasswordpolicyguestadminOutput) ApplyTo() pulumi.StringOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.StringOutput { return v.ApplyTo }).(pulumi.StringOutput)
}

// Enable/disable changing at least 4 characters for a new password (This attribute overrides reuse-password if both are enabled). Valid values: `enable`, `disable`.
func (o PasswordpolicyguestadminOutput) Change4Characters() pulumi.StringOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.StringOutput { return v.Change4Characters }).(pulumi.StringOutput)
}

// Number of days after which passwords expire (1 - 999 days, default = 90).
func (o PasswordpolicyguestadminOutput) ExpireDay() pulumi.IntOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.IntOutput { return v.ExpireDay }).(pulumi.IntOutput)
}

// Enable/disable password expiration. Valid values: `enable`, `disable`.
func (o PasswordpolicyguestadminOutput) ExpireStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.StringOutput { return v.ExpireStatus }).(pulumi.StringOutput)
}

// Minimum number of unique characters in new password which do not exist in old password (This attribute overrides reuse-password if both are enabled).
func (o PasswordpolicyguestadminOutput) MinChangeCharacters() pulumi.IntOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.IntOutput { return v.MinChangeCharacters }).(pulumi.IntOutput)
}

// Minimum number of lowercase characters in password (0 - 128, default = 0).
func (o PasswordpolicyguestadminOutput) MinLowerCaseLetter() pulumi.IntOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.IntOutput { return v.MinLowerCaseLetter }).(pulumi.IntOutput)
}

// Minimum number of non-alphanumeric characters in password (0 - 128, default = 0).
func (o PasswordpolicyguestadminOutput) MinNonAlphanumeric() pulumi.IntOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.IntOutput { return v.MinNonAlphanumeric }).(pulumi.IntOutput)
}

// Minimum number of numeric characters in password (0 - 128, default = 0).
func (o PasswordpolicyguestadminOutput) MinNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.IntOutput { return v.MinNumber }).(pulumi.IntOutput)
}

// Minimum number of uppercase characters in password (0 - 128, default = 0).
func (o PasswordpolicyguestadminOutput) MinUpperCaseLetter() pulumi.IntOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.IntOutput { return v.MinUpperCaseLetter }).(pulumi.IntOutput)
}

// Minimum password length (8 - 128, default = 8).
func (o PasswordpolicyguestadminOutput) MinimumLength() pulumi.IntOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.IntOutput { return v.MinimumLength }).(pulumi.IntOutput)
}

// Enable/disable reusing of password (if both reuse-password and change-4-characters are enabled, change-4-characters overrides). Valid values: `enable`, `disable`.
func (o PasswordpolicyguestadminOutput) ReusePassword() pulumi.StringOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.StringOutput { return v.ReusePassword }).(pulumi.StringOutput)
}

// Enable/disable setting a password policy for locally defined administrator passwords and IPsec VPN pre-shared keys. Valid values: `enable`, `disable`.
func (o PasswordpolicyguestadminOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o PasswordpolicyguestadminOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Passwordpolicyguestadmin) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type PasswordpolicyguestadminArrayOutput struct{ *pulumi.OutputState }

func (PasswordpolicyguestadminArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Passwordpolicyguestadmin)(nil)).Elem()
}

func (o PasswordpolicyguestadminArrayOutput) ToPasswordpolicyguestadminArrayOutput() PasswordpolicyguestadminArrayOutput {
	return o
}

func (o PasswordpolicyguestadminArrayOutput) ToPasswordpolicyguestadminArrayOutputWithContext(ctx context.Context) PasswordpolicyguestadminArrayOutput {
	return o
}

func (o PasswordpolicyguestadminArrayOutput) Index(i pulumi.IntInput) PasswordpolicyguestadminOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Passwordpolicyguestadmin {
		return vs[0].([]*Passwordpolicyguestadmin)[vs[1].(int)]
	}).(PasswordpolicyguestadminOutput)
}

type PasswordpolicyguestadminMapOutput struct{ *pulumi.OutputState }

func (PasswordpolicyguestadminMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Passwordpolicyguestadmin)(nil)).Elem()
}

func (o PasswordpolicyguestadminMapOutput) ToPasswordpolicyguestadminMapOutput() PasswordpolicyguestadminMapOutput {
	return o
}

func (o PasswordpolicyguestadminMapOutput) ToPasswordpolicyguestadminMapOutputWithContext(ctx context.Context) PasswordpolicyguestadminMapOutput {
	return o
}

func (o PasswordpolicyguestadminMapOutput) MapIndex(k pulumi.StringInput) PasswordpolicyguestadminOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Passwordpolicyguestadmin {
		return vs[0].(map[string]*Passwordpolicyguestadmin)[vs[1].(string)]
	}).(PasswordpolicyguestadminOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PasswordpolicyguestadminInput)(nil)).Elem(), &Passwordpolicyguestadmin{})
	pulumi.RegisterInputType(reflect.TypeOf((*PasswordpolicyguestadminArrayInput)(nil)).Elem(), PasswordpolicyguestadminArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PasswordpolicyguestadminMapInput)(nil)).Elem(), PasswordpolicyguestadminMap{})
	pulumi.RegisterOutputType(PasswordpolicyguestadminOutput{})
	pulumi.RegisterOutputType(PasswordpolicyguestadminArrayOutput{})
	pulumi.RegisterOutputType(PasswordpolicyguestadminMapOutput{})
}
