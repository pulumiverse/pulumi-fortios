// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure central management.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewCentralmanagement(ctx, "trname1", &system.CentralmanagementArgs{
//				AllowMonitor:               pulumi.String("enable"),
//				AllowPushConfiguration:     pulumi.String("enable"),
//				AllowPushFirmware:          pulumi.String("enable"),
//				AllowRemoteFirmwareUpgrade: pulumi.String("enable"),
//				EncAlgorithm:               pulumi.String("high"),
//				Fmg:                        pulumi.String("0.0.0.0"),
//				FmgSourceIp6:               pulumi.String("::"),
//				IncludeDefaultServers:      pulumi.String("enable"),
//				Mode:                       pulumi.String("normal"),
//				ScheduleConfigRestore:      pulumi.String("enable"),
//				ScheduleScriptRestore:      pulumi.String("enable"),
//				Type:                       pulumi.String("fortimanager"),
//				Vdom:                       pulumi.String("root"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = system.NewCentralmanagement(ctx, "trname2", &system.CentralmanagementArgs{
//				AllowMonitor:               pulumi.String("enable"),
//				AllowPushConfiguration:     pulumi.String("enable"),
//				AllowPushFirmware:          pulumi.String("enable"),
//				AllowRemoteFirmwareUpgrade: pulumi.String("enable"),
//				EncAlgorithm:               pulumi.String("high"),
//				Fmg:                        pulumi.String("\"192.168.52.177\""),
//				IncludeDefaultServers:      pulumi.String("enable"),
//				Mode:                       pulumi.String("normal"),
//				Type:                       pulumi.String("fortimanager"),
//				Vdom:                       pulumi.String("root"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// System CentralManagement can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/centralmanagement:Centralmanagement labelname SystemCentralManagement
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/centralmanagement:Centralmanagement labelname SystemCentralManagement
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Centralmanagement struct {
	pulumi.CustomResourceState

	// Enable/disable allowing the central management server to remotely monitor this FortiGate Valid values: `enable`, `disable`.
	AllowMonitor pulumi.StringOutput `pulumi:"allowMonitor"`
	// Enable/disable allowing the central management server to push configuration changes to this FortiGate. Valid values: `enable`, `disable`.
	AllowPushConfiguration pulumi.StringOutput `pulumi:"allowPushConfiguration"`
	// Enable/disable allowing the central management server to push firmware updates to this FortiGate. Valid values: `enable`, `disable`.
	AllowPushFirmware pulumi.StringOutput `pulumi:"allowPushFirmware"`
	// Enable/disable remotely upgrading the firmware on this FortiGate from the central management server. Valid values: `enable`, `disable`.
	AllowRemoteFirmwareUpgrade pulumi.StringOutput `pulumi:"allowRemoteFirmwareUpgrade"`
	// CA certificate to be used by FGFM protocol.
	CaCert pulumi.StringOutput `pulumi:"caCert"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Encryption strength for communications between the FortiGate and central management. Valid values: `default`, `high`, `low`.
	EncAlgorithm pulumi.StringOutput `pulumi:"encAlgorithm"`
	// IP address or FQDN of the FortiManager.
	Fmg pulumi.StringOutput `pulumi:"fmg"`
	// IPv4 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp pulumi.StringOutput `pulumi:"fmgSourceIp"`
	// IPv6 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp6 pulumi.StringOutput `pulumi:"fmgSourceIp6"`
	// Port used to communicate with FortiManager that is acting as a FortiGuard update server. Valid values: `8890`, `443`.
	FmgUpdatePort pulumi.StringOutput `pulumi:"fmgUpdatePort"`
	// Override access profile.
	FortigateCloudSsoDefaultProfile pulumi.StringOutput `pulumi:"fortigateCloudSsoDefaultProfile"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Enable/disable inclusion of public FortiGuard servers in the override server list. Valid values: `enable`, `disable`.
	IncludeDefaultServers pulumi.StringOutput `pulumi:"includeDefaultServers"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// Certificate to be used by FGFM protocol.
	LocalCert pulumi.StringOutput `pulumi:"localCert"`
	// Central management mode. Valid values: `normal`, `backup`.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Enable/disable allowing the central management server to restore the configuration of this FortiGate. Valid values: `enable`, `disable`.
	ScheduleConfigRestore pulumi.StringOutput `pulumi:"scheduleConfigRestore"`
	// Enable/disable allowing the central management server to restore the scripts stored on this FortiGate. Valid values: `enable`, `disable`.
	ScheduleScriptRestore pulumi.StringOutput `pulumi:"scheduleScriptRestore"`
	// Serial number.
	SerialNumber pulumi.StringOutput `pulumi:"serialNumber"`
	// Additional severs that the FortiGate can use for updates (for AV, IPS, updates) and ratings (for web filter and antispam ratings) servers. The structure of `serverList` block is documented below.
	ServerLists CentralmanagementServerListArrayOutput `pulumi:"serverLists"`
	// Central management type. Valid values: `fortimanager`, `fortiguard`, `none`.
	Type pulumi.StringOutput `pulumi:"type"`
	// Virtual domain (VDOM) name to use when communicating with FortiManager.
	Vdom pulumi.StringOutput `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewCentralmanagement registers a new resource with the given unique name, arguments, and options.
func NewCentralmanagement(ctx *pulumi.Context,
	name string, args *CentralmanagementArgs, opts ...pulumi.ResourceOption) (*Centralmanagement, error) {
	if args == nil {
		args = &CentralmanagementArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Centralmanagement
	err := ctx.RegisterResource("fortios:system/centralmanagement:Centralmanagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCentralmanagement gets an existing Centralmanagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCentralmanagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CentralmanagementState, opts ...pulumi.ResourceOption) (*Centralmanagement, error) {
	var resource Centralmanagement
	err := ctx.ReadResource("fortios:system/centralmanagement:Centralmanagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Centralmanagement resources.
type centralmanagementState struct {
	// Enable/disable allowing the central management server to remotely monitor this FortiGate Valid values: `enable`, `disable`.
	AllowMonitor *string `pulumi:"allowMonitor"`
	// Enable/disable allowing the central management server to push configuration changes to this FortiGate. Valid values: `enable`, `disable`.
	AllowPushConfiguration *string `pulumi:"allowPushConfiguration"`
	// Enable/disable allowing the central management server to push firmware updates to this FortiGate. Valid values: `enable`, `disable`.
	AllowPushFirmware *string `pulumi:"allowPushFirmware"`
	// Enable/disable remotely upgrading the firmware on this FortiGate from the central management server. Valid values: `enable`, `disable`.
	AllowRemoteFirmwareUpgrade *string `pulumi:"allowRemoteFirmwareUpgrade"`
	// CA certificate to be used by FGFM protocol.
	CaCert *string `pulumi:"caCert"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Encryption strength for communications between the FortiGate and central management. Valid values: `default`, `high`, `low`.
	EncAlgorithm *string `pulumi:"encAlgorithm"`
	// IP address or FQDN of the FortiManager.
	Fmg *string `pulumi:"fmg"`
	// IPv4 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp *string `pulumi:"fmgSourceIp"`
	// IPv6 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp6 *string `pulumi:"fmgSourceIp6"`
	// Port used to communicate with FortiManager that is acting as a FortiGuard update server. Valid values: `8890`, `443`.
	FmgUpdatePort *string `pulumi:"fmgUpdatePort"`
	// Override access profile.
	FortigateCloudSsoDefaultProfile *string `pulumi:"fortigateCloudSsoDefaultProfile"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable inclusion of public FortiGuard servers in the override server list. Valid values: `enable`, `disable`.
	IncludeDefaultServers *string `pulumi:"includeDefaultServers"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Certificate to be used by FGFM protocol.
	LocalCert *string `pulumi:"localCert"`
	// Central management mode. Valid values: `normal`, `backup`.
	Mode *string `pulumi:"mode"`
	// Enable/disable allowing the central management server to restore the configuration of this FortiGate. Valid values: `enable`, `disable`.
	ScheduleConfigRestore *string `pulumi:"scheduleConfigRestore"`
	// Enable/disable allowing the central management server to restore the scripts stored on this FortiGate. Valid values: `enable`, `disable`.
	ScheduleScriptRestore *string `pulumi:"scheduleScriptRestore"`
	// Serial number.
	SerialNumber *string `pulumi:"serialNumber"`
	// Additional severs that the FortiGate can use for updates (for AV, IPS, updates) and ratings (for web filter and antispam ratings) servers. The structure of `serverList` block is documented below.
	ServerLists []CentralmanagementServerList `pulumi:"serverLists"`
	// Central management type. Valid values: `fortimanager`, `fortiguard`, `none`.
	Type *string `pulumi:"type"`
	// Virtual domain (VDOM) name to use when communicating with FortiManager.
	Vdom *string `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type CentralmanagementState struct {
	// Enable/disable allowing the central management server to remotely monitor this FortiGate Valid values: `enable`, `disable`.
	AllowMonitor pulumi.StringPtrInput
	// Enable/disable allowing the central management server to push configuration changes to this FortiGate. Valid values: `enable`, `disable`.
	AllowPushConfiguration pulumi.StringPtrInput
	// Enable/disable allowing the central management server to push firmware updates to this FortiGate. Valid values: `enable`, `disable`.
	AllowPushFirmware pulumi.StringPtrInput
	// Enable/disable remotely upgrading the firmware on this FortiGate from the central management server. Valid values: `enable`, `disable`.
	AllowRemoteFirmwareUpgrade pulumi.StringPtrInput
	// CA certificate to be used by FGFM protocol.
	CaCert pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Encryption strength for communications between the FortiGate and central management. Valid values: `default`, `high`, `low`.
	EncAlgorithm pulumi.StringPtrInput
	// IP address or FQDN of the FortiManager.
	Fmg pulumi.StringPtrInput
	// IPv4 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp pulumi.StringPtrInput
	// IPv6 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp6 pulumi.StringPtrInput
	// Port used to communicate with FortiManager that is acting as a FortiGuard update server. Valid values: `8890`, `443`.
	FmgUpdatePort pulumi.StringPtrInput
	// Override access profile.
	FortigateCloudSsoDefaultProfile pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable inclusion of public FortiGuard servers in the override server list. Valid values: `enable`, `disable`.
	IncludeDefaultServers pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Certificate to be used by FGFM protocol.
	LocalCert pulumi.StringPtrInput
	// Central management mode. Valid values: `normal`, `backup`.
	Mode pulumi.StringPtrInput
	// Enable/disable allowing the central management server to restore the configuration of this FortiGate. Valid values: `enable`, `disable`.
	ScheduleConfigRestore pulumi.StringPtrInput
	// Enable/disable allowing the central management server to restore the scripts stored on this FortiGate. Valid values: `enable`, `disable`.
	ScheduleScriptRestore pulumi.StringPtrInput
	// Serial number.
	SerialNumber pulumi.StringPtrInput
	// Additional severs that the FortiGate can use for updates (for AV, IPS, updates) and ratings (for web filter and antispam ratings) servers. The structure of `serverList` block is documented below.
	ServerLists CentralmanagementServerListArrayInput
	// Central management type. Valid values: `fortimanager`, `fortiguard`, `none`.
	Type pulumi.StringPtrInput
	// Virtual domain (VDOM) name to use when communicating with FortiManager.
	Vdom pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (CentralmanagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*centralmanagementState)(nil)).Elem()
}

type centralmanagementArgs struct {
	// Enable/disable allowing the central management server to remotely monitor this FortiGate Valid values: `enable`, `disable`.
	AllowMonitor *string `pulumi:"allowMonitor"`
	// Enable/disable allowing the central management server to push configuration changes to this FortiGate. Valid values: `enable`, `disable`.
	AllowPushConfiguration *string `pulumi:"allowPushConfiguration"`
	// Enable/disable allowing the central management server to push firmware updates to this FortiGate. Valid values: `enable`, `disable`.
	AllowPushFirmware *string `pulumi:"allowPushFirmware"`
	// Enable/disable remotely upgrading the firmware on this FortiGate from the central management server. Valid values: `enable`, `disable`.
	AllowRemoteFirmwareUpgrade *string `pulumi:"allowRemoteFirmwareUpgrade"`
	// CA certificate to be used by FGFM protocol.
	CaCert *string `pulumi:"caCert"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Encryption strength for communications between the FortiGate and central management. Valid values: `default`, `high`, `low`.
	EncAlgorithm *string `pulumi:"encAlgorithm"`
	// IP address or FQDN of the FortiManager.
	Fmg *string `pulumi:"fmg"`
	// IPv4 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp *string `pulumi:"fmgSourceIp"`
	// IPv6 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp6 *string `pulumi:"fmgSourceIp6"`
	// Port used to communicate with FortiManager that is acting as a FortiGuard update server. Valid values: `8890`, `443`.
	FmgUpdatePort *string `pulumi:"fmgUpdatePort"`
	// Override access profile.
	FortigateCloudSsoDefaultProfile *string `pulumi:"fortigateCloudSsoDefaultProfile"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable inclusion of public FortiGuard servers in the override server list. Valid values: `enable`, `disable`.
	IncludeDefaultServers *string `pulumi:"includeDefaultServers"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Certificate to be used by FGFM protocol.
	LocalCert *string `pulumi:"localCert"`
	// Central management mode. Valid values: `normal`, `backup`.
	Mode *string `pulumi:"mode"`
	// Enable/disable allowing the central management server to restore the configuration of this FortiGate. Valid values: `enable`, `disable`.
	ScheduleConfigRestore *string `pulumi:"scheduleConfigRestore"`
	// Enable/disable allowing the central management server to restore the scripts stored on this FortiGate. Valid values: `enable`, `disable`.
	ScheduleScriptRestore *string `pulumi:"scheduleScriptRestore"`
	// Serial number.
	SerialNumber *string `pulumi:"serialNumber"`
	// Additional severs that the FortiGate can use for updates (for AV, IPS, updates) and ratings (for web filter and antispam ratings) servers. The structure of `serverList` block is documented below.
	ServerLists []CentralmanagementServerList `pulumi:"serverLists"`
	// Central management type. Valid values: `fortimanager`, `fortiguard`, `none`.
	Type *string `pulumi:"type"`
	// Virtual domain (VDOM) name to use when communicating with FortiManager.
	Vdom *string `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Centralmanagement resource.
type CentralmanagementArgs struct {
	// Enable/disable allowing the central management server to remotely monitor this FortiGate Valid values: `enable`, `disable`.
	AllowMonitor pulumi.StringPtrInput
	// Enable/disable allowing the central management server to push configuration changes to this FortiGate. Valid values: `enable`, `disable`.
	AllowPushConfiguration pulumi.StringPtrInput
	// Enable/disable allowing the central management server to push firmware updates to this FortiGate. Valid values: `enable`, `disable`.
	AllowPushFirmware pulumi.StringPtrInput
	// Enable/disable remotely upgrading the firmware on this FortiGate from the central management server. Valid values: `enable`, `disable`.
	AllowRemoteFirmwareUpgrade pulumi.StringPtrInput
	// CA certificate to be used by FGFM protocol.
	CaCert pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Encryption strength for communications between the FortiGate and central management. Valid values: `default`, `high`, `low`.
	EncAlgorithm pulumi.StringPtrInput
	// IP address or FQDN of the FortiManager.
	Fmg pulumi.StringPtrInput
	// IPv4 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp pulumi.StringPtrInput
	// IPv6 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp6 pulumi.StringPtrInput
	// Port used to communicate with FortiManager that is acting as a FortiGuard update server. Valid values: `8890`, `443`.
	FmgUpdatePort pulumi.StringPtrInput
	// Override access profile.
	FortigateCloudSsoDefaultProfile pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable inclusion of public FortiGuard servers in the override server list. Valid values: `enable`, `disable`.
	IncludeDefaultServers pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Certificate to be used by FGFM protocol.
	LocalCert pulumi.StringPtrInput
	// Central management mode. Valid values: `normal`, `backup`.
	Mode pulumi.StringPtrInput
	// Enable/disable allowing the central management server to restore the configuration of this FortiGate. Valid values: `enable`, `disable`.
	ScheduleConfigRestore pulumi.StringPtrInput
	// Enable/disable allowing the central management server to restore the scripts stored on this FortiGate. Valid values: `enable`, `disable`.
	ScheduleScriptRestore pulumi.StringPtrInput
	// Serial number.
	SerialNumber pulumi.StringPtrInput
	// Additional severs that the FortiGate can use for updates (for AV, IPS, updates) and ratings (for web filter and antispam ratings) servers. The structure of `serverList` block is documented below.
	ServerLists CentralmanagementServerListArrayInput
	// Central management type. Valid values: `fortimanager`, `fortiguard`, `none`.
	Type pulumi.StringPtrInput
	// Virtual domain (VDOM) name to use when communicating with FortiManager.
	Vdom pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (CentralmanagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*centralmanagementArgs)(nil)).Elem()
}

type CentralmanagementInput interface {
	pulumi.Input

	ToCentralmanagementOutput() CentralmanagementOutput
	ToCentralmanagementOutputWithContext(ctx context.Context) CentralmanagementOutput
}

func (*Centralmanagement) ElementType() reflect.Type {
	return reflect.TypeOf((**Centralmanagement)(nil)).Elem()
}

func (i *Centralmanagement) ToCentralmanagementOutput() CentralmanagementOutput {
	return i.ToCentralmanagementOutputWithContext(context.Background())
}

func (i *Centralmanagement) ToCentralmanagementOutputWithContext(ctx context.Context) CentralmanagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralmanagementOutput)
}

// CentralmanagementArrayInput is an input type that accepts CentralmanagementArray and CentralmanagementArrayOutput values.
// You can construct a concrete instance of `CentralmanagementArrayInput` via:
//
//	CentralmanagementArray{ CentralmanagementArgs{...} }
type CentralmanagementArrayInput interface {
	pulumi.Input

	ToCentralmanagementArrayOutput() CentralmanagementArrayOutput
	ToCentralmanagementArrayOutputWithContext(context.Context) CentralmanagementArrayOutput
}

type CentralmanagementArray []CentralmanagementInput

func (CentralmanagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Centralmanagement)(nil)).Elem()
}

func (i CentralmanagementArray) ToCentralmanagementArrayOutput() CentralmanagementArrayOutput {
	return i.ToCentralmanagementArrayOutputWithContext(context.Background())
}

func (i CentralmanagementArray) ToCentralmanagementArrayOutputWithContext(ctx context.Context) CentralmanagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralmanagementArrayOutput)
}

// CentralmanagementMapInput is an input type that accepts CentralmanagementMap and CentralmanagementMapOutput values.
// You can construct a concrete instance of `CentralmanagementMapInput` via:
//
//	CentralmanagementMap{ "key": CentralmanagementArgs{...} }
type CentralmanagementMapInput interface {
	pulumi.Input

	ToCentralmanagementMapOutput() CentralmanagementMapOutput
	ToCentralmanagementMapOutputWithContext(context.Context) CentralmanagementMapOutput
}

type CentralmanagementMap map[string]CentralmanagementInput

func (CentralmanagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Centralmanagement)(nil)).Elem()
}

func (i CentralmanagementMap) ToCentralmanagementMapOutput() CentralmanagementMapOutput {
	return i.ToCentralmanagementMapOutputWithContext(context.Background())
}

func (i CentralmanagementMap) ToCentralmanagementMapOutputWithContext(ctx context.Context) CentralmanagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralmanagementMapOutput)
}

type CentralmanagementOutput struct{ *pulumi.OutputState }

func (CentralmanagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Centralmanagement)(nil)).Elem()
}

func (o CentralmanagementOutput) ToCentralmanagementOutput() CentralmanagementOutput {
	return o
}

func (o CentralmanagementOutput) ToCentralmanagementOutputWithContext(ctx context.Context) CentralmanagementOutput {
	return o
}

// Enable/disable allowing the central management server to remotely monitor this FortiGate Valid values: `enable`, `disable`.
func (o CentralmanagementOutput) AllowMonitor() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.AllowMonitor }).(pulumi.StringOutput)
}

// Enable/disable allowing the central management server to push configuration changes to this FortiGate. Valid values: `enable`, `disable`.
func (o CentralmanagementOutput) AllowPushConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.AllowPushConfiguration }).(pulumi.StringOutput)
}

// Enable/disable allowing the central management server to push firmware updates to this FortiGate. Valid values: `enable`, `disable`.
func (o CentralmanagementOutput) AllowPushFirmware() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.AllowPushFirmware }).(pulumi.StringOutput)
}

// Enable/disable remotely upgrading the firmware on this FortiGate from the central management server. Valid values: `enable`, `disable`.
func (o CentralmanagementOutput) AllowRemoteFirmwareUpgrade() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.AllowRemoteFirmwareUpgrade }).(pulumi.StringOutput)
}

// CA certificate to be used by FGFM protocol.
func (o CentralmanagementOutput) CaCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.CaCert }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o CentralmanagementOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Encryption strength for communications between the FortiGate and central management. Valid values: `default`, `high`, `low`.
func (o CentralmanagementOutput) EncAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.EncAlgorithm }).(pulumi.StringOutput)
}

// IP address or FQDN of the FortiManager.
func (o CentralmanagementOutput) Fmg() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.Fmg }).(pulumi.StringOutput)
}

// IPv4 source address that this FortiGate uses when communicating with FortiManager.
func (o CentralmanagementOutput) FmgSourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.FmgSourceIp }).(pulumi.StringOutput)
}

// IPv6 source address that this FortiGate uses when communicating with FortiManager.
func (o CentralmanagementOutput) FmgSourceIp6() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.FmgSourceIp6 }).(pulumi.StringOutput)
}

// Port used to communicate with FortiManager that is acting as a FortiGuard update server. Valid values: `8890`, `443`.
func (o CentralmanagementOutput) FmgUpdatePort() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.FmgUpdatePort }).(pulumi.StringOutput)
}

// Override access profile.
func (o CentralmanagementOutput) FortigateCloudSsoDefaultProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.FortigateCloudSsoDefaultProfile }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o CentralmanagementOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Enable/disable inclusion of public FortiGuard servers in the override server list. Valid values: `enable`, `disable`.
func (o CentralmanagementOutput) IncludeDefaultServers() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.IncludeDefaultServers }).(pulumi.StringOutput)
}

// Specify outgoing interface to reach server.
func (o CentralmanagementOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o CentralmanagementOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Certificate to be used by FGFM protocol.
func (o CentralmanagementOutput) LocalCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.LocalCert }).(pulumi.StringOutput)
}

// Central management mode. Valid values: `normal`, `backup`.
func (o CentralmanagementOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// Enable/disable allowing the central management server to restore the configuration of this FortiGate. Valid values: `enable`, `disable`.
func (o CentralmanagementOutput) ScheduleConfigRestore() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.ScheduleConfigRestore }).(pulumi.StringOutput)
}

// Enable/disable allowing the central management server to restore the scripts stored on this FortiGate. Valid values: `enable`, `disable`.
func (o CentralmanagementOutput) ScheduleScriptRestore() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.ScheduleScriptRestore }).(pulumi.StringOutput)
}

// Serial number.
func (o CentralmanagementOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.SerialNumber }).(pulumi.StringOutput)
}

// Additional severs that the FortiGate can use for updates (for AV, IPS, updates) and ratings (for web filter and antispam ratings) servers. The structure of `serverList` block is documented below.
func (o CentralmanagementOutput) ServerLists() CentralmanagementServerListArrayOutput {
	return o.ApplyT(func(v *Centralmanagement) CentralmanagementServerListArrayOutput { return v.ServerLists }).(CentralmanagementServerListArrayOutput)
}

// Central management type. Valid values: `fortimanager`, `fortiguard`, `none`.
func (o CentralmanagementOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Virtual domain (VDOM) name to use when communicating with FortiManager.
func (o CentralmanagementOutput) Vdom() pulumi.StringOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringOutput { return v.Vdom }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o CentralmanagementOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Centralmanagement) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type CentralmanagementArrayOutput struct{ *pulumi.OutputState }

func (CentralmanagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Centralmanagement)(nil)).Elem()
}

func (o CentralmanagementArrayOutput) ToCentralmanagementArrayOutput() CentralmanagementArrayOutput {
	return o
}

func (o CentralmanagementArrayOutput) ToCentralmanagementArrayOutputWithContext(ctx context.Context) CentralmanagementArrayOutput {
	return o
}

func (o CentralmanagementArrayOutput) Index(i pulumi.IntInput) CentralmanagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Centralmanagement {
		return vs[0].([]*Centralmanagement)[vs[1].(int)]
	}).(CentralmanagementOutput)
}

type CentralmanagementMapOutput struct{ *pulumi.OutputState }

func (CentralmanagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Centralmanagement)(nil)).Elem()
}

func (o CentralmanagementMapOutput) ToCentralmanagementMapOutput() CentralmanagementMapOutput {
	return o
}

func (o CentralmanagementMapOutput) ToCentralmanagementMapOutputWithContext(ctx context.Context) CentralmanagementMapOutput {
	return o
}

func (o CentralmanagementMapOutput) MapIndex(k pulumi.StringInput) CentralmanagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Centralmanagement {
		return vs[0].(map[string]*Centralmanagement)[vs[1].(string)]
	}).(CentralmanagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CentralmanagementInput)(nil)).Elem(), &Centralmanagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralmanagementArrayInput)(nil)).Elem(), CentralmanagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralmanagementMapInput)(nil)).Elem(), CentralmanagementMap{})
	pulumi.RegisterOutputType(CentralmanagementOutput{})
	pulumi.RegisterOutputType(CentralmanagementArrayOutput{})
	pulumi.RegisterOutputType(CentralmanagementMapOutput{})
}
