// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Use this data source to get information on fortios system fortiguard
func LookupFortiguard(ctx *pulumi.Context, args *LookupFortiguardArgs, opts ...pulumi.InvokeOption) (*LookupFortiguardResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFortiguardResult
	err := ctx.Invoke("fortios:system/getFortiguard:getFortiguard", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFortiguard.
type LookupFortiguardArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getFortiguard.
type LookupFortiguardResult struct {
	// Enable/disable FortiGuard antispam request caching. Uses a small amount of memory but improves performance.
	AntispamCache string `pulumi:"antispamCache"`
	// Maximum percent of FortiGate memory the antispam cache is allowed to use (1 - 15%!)(MISSING).
	AntispamCacheMpercent int `pulumi:"antispamCacheMpercent"`
	// Maximum permille of FortiGate memory the antispam cache is allowed to use (1 - 150).
	AntispamCacheMpermille int `pulumi:"antispamCacheMpermille"`
	// Time-to-live for antispam cache entries in seconds (300 - 86400). Lower times reduce the cache size. Higher times may improve performance since the cache will have more entries.
	AntispamCacheTtl int `pulumi:"antispamCacheTtl"`
	// Expiration date of the FortiGuard antispam contract.
	AntispamExpiration int `pulumi:"antispamExpiration"`
	// Enable/disable turning off the FortiGuard antispam service.
	AntispamForceOff string `pulumi:"antispamForceOff"`
	// Interval of time between license checks for the FortiGuard antispam contract.
	AntispamLicense int `pulumi:"antispamLicense"`
	// Antispam query time out (1 - 30 sec, default = 7).
	AntispamTimeout int `pulumi:"antispamTimeout"`
	// IP address of the FortiGuard anycast DNS rating server.
	AnycastSdnsServerIp string `pulumi:"anycastSdnsServerIp"`
	// Port to connect to on the FortiGuard anycast DNS rating server.
	AnycastSdnsServerPort int `pulumi:"anycastSdnsServerPort"`
	// Enable/disable automatic patch-level firmware upgrade from FortiGuard. The FortiGate unit searches for new patches only in the same major and minor version.
	AutoFirmwareUpgrade string `pulumi:"autoFirmwareUpgrade"`
	// Allowed day(s) of the week to start automatic patch-level firmware upgrade from FortiGuard.
	AutoFirmwareUpgradeDay string `pulumi:"autoFirmwareUpgradeDay"`
	// Delay of day(s) before installing an automatic patch-level firmware upgrade from FortiGuard (default = 3). Set it 0 to use auto-firmware-upgrade-day instead, which selects allowed day(s) of the week for installing an automatic patch-level firmware upgrade.
	AutoFirmwareUpgradeDelay int `pulumi:"autoFirmwareUpgradeDelay"`
	// End time in the designated time window for automatic patch-level firmware upgrade from FortiGuard in 24 hour time (0 ~ 23, default = 4). When the end time is smaller than the start time, the end time is interpreted as the next day. The actual upgrade time is selected randomly within the time window.
	AutoFirmwareUpgradeEndHour int `pulumi:"autoFirmwareUpgradeEndHour"`
	// Start time in the designated time window for automatic patch-level firmware upgrade from FortiGuard in 24 hour time (0 ~ 23, default = 2). The actual upgrade time is selected randomly within the time window.
	AutoFirmwareUpgradeStartHour int `pulumi:"autoFirmwareUpgradeStartHour"`
	// Automatically connect to and login to FortiCloud.
	AutoJoinForticloud string `pulumi:"autoJoinForticloud"`
	// IP address of the FortiDDNS server.
	DdnsServerIp string `pulumi:"ddnsServerIp"`
	// IPv6 address of the FortiDDNS server.
	DdnsServerIp6 string `pulumi:"ddnsServerIp6"`
	// Port used to communicate with FortiDDNS servers.
	DdnsServerPort int `pulumi:"ddnsServerPort"`
	// Threshold for number of days before FortiGuard license expiration to generate license expiring event log (1 - 100 days, default = 15).
	FdsLicenseExpiringDays int `pulumi:"fdsLicenseExpiringDays"`
	// Enable/disable use of FortiGuard's anycast network.
	FortiguardAnycast string `pulumi:"fortiguardAnycast"`
	// Configure which of Fortinet's servers to provide FortiGuard services in FortiGuard's anycast network. Default is Fortinet.
	FortiguardAnycastSource string `pulumi:"fortiguardAnycastSource"`
	// Enable/disable prompting of automatic patch-level firmware upgrade recommendation.
	GuiPromptAutoUpgrade string `pulumi:"guiPromptAutoUpgrade"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod string `pulumi:"interfaceSelectMethod"`
	// Number of servers to alternate between as first FortiGuard option.
	LoadBalanceServers int `pulumi:"loadBalanceServers"`
	// Enable/disable FortiGuard Virus Outbreak Prevention cache.
	OutbreakPreventionCache string `pulumi:"outbreakPreventionCache"`
	// Maximum percent of memory FortiGuard Virus Outbreak Prevention cache can use (1 - 15%!,(MISSING) default = 2).
	OutbreakPreventionCacheMpercent int `pulumi:"outbreakPreventionCacheMpercent"`
	// Maximum permille of memory FortiGuard Virus Outbreak Prevention cache can use (1 - 150 permille, default = 1).
	OutbreakPreventionCacheMpermille int `pulumi:"outbreakPreventionCacheMpermille"`
	// Time-to-live for FortiGuard Virus Outbreak Prevention cache entries (300 - 86400 sec, default = 300).
	OutbreakPreventionCacheTtl int `pulumi:"outbreakPreventionCacheTtl"`
	// Expiration date of FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionExpiration int `pulumi:"outbreakPreventionExpiration"`
	// Turn off FortiGuard Virus Outbreak Prevention service.
	OutbreakPreventionForceOff string `pulumi:"outbreakPreventionForceOff"`
	// Interval of time between license checks for FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionLicense int `pulumi:"outbreakPreventionLicense"`
	// FortiGuard Virus Outbreak Prevention time out (1 - 30 sec, default = 7).
	OutbreakPreventionTimeout int `pulumi:"outbreakPreventionTimeout"`
	// Enable/disable use of persistent connection to receive update notification from FortiGuard.
	PersistentConnection string `pulumi:"persistentConnection"`
	// Port used to communicate with the FortiGuard servers.
	Port string `pulumi:"port"`
	// Protocol used to communicate with the FortiGuard servers.
	Protocol string `pulumi:"protocol"`
	// Proxy user password.
	ProxyPassword string `pulumi:"proxyPassword"`
	// IP address of the proxy server.
	ProxyServerIp string `pulumi:"proxyServerIp"`
	// Port used to communicate with the proxy server.
	ProxyServerPort int `pulumi:"proxyServerPort"`
	// Proxy user name.
	ProxyUsername string `pulumi:"proxyUsername"`
	// Enable/disable FortiCloud Sandbox inline-scan.
	SandboxInlineScan string `pulumi:"sandboxInlineScan"`
	// Cloud sandbox region.
	SandboxRegion string `pulumi:"sandboxRegion"`
	// Customization options for the FortiGuard DNS service.
	SdnsOptions string `pulumi:"sdnsOptions"`
	// IP address of the FortiDNS server.
	SdnsServerIp string `pulumi:"sdnsServerIp"`
	// Port used to communicate with FortiDNS servers.
	SdnsServerPort int `pulumi:"sdnsServerPort"`
	// Service account ID.
	ServiceAccountId string `pulumi:"serviceAccountId"`
	// Source IPv4 address used to communicate with FortiGuard.
	SourceIp string `pulumi:"sourceIp"`
	// Source IPv6 address used to communicate with FortiGuard.
	SourceIp6 string `pulumi:"sourceIp6"`
	// Enable/disable proxy dictionary rebuild.
	UpdateBuildProxy string `pulumi:"updateBuildProxy"`
	// Enable/disable DLP signature update.
	UpdateDldb string `pulumi:"updateDldb"`
	// Enable/disable external resource update.
	UpdateExtdb string `pulumi:"updateExtdb"`
	// Enable/disable Internet Service Database update.
	UpdateFfdb string `pulumi:"updateFfdb"`
	// Signature update server location.
	UpdateServerLocation string `pulumi:"updateServerLocation"`
	// Enable/disable allowlist update.
	UpdateUwdb string `pulumi:"updateUwdb"`
	// FortiGuard Service virtual domain name.
	Vdom      string  `pulumi:"vdom"`
	Vdomparam *string `pulumi:"vdomparam"`
	// Expiration date of the FortiGuard video filter contract.
	VideofilterExpiration int `pulumi:"videofilterExpiration"`
	// Interval of time between license checks for the FortiGuard video filter contract.
	VideofilterLicense int `pulumi:"videofilterLicense"`
	// Enable/disable FortiGuard web filter caching.
	WebfilterCache string `pulumi:"webfilterCache"`
	// Time-to-live for web filter cache entries in seconds (300 - 86400).
	WebfilterCacheTtl int `pulumi:"webfilterCacheTtl"`
	// Expiration date of the FortiGuard web filter contract.
	WebfilterExpiration int `pulumi:"webfilterExpiration"`
	// Enable/disable turning off the FortiGuard web filtering service.
	WebfilterForceOff string `pulumi:"webfilterForceOff"`
	// Interval of time between license checks for the FortiGuard web filter contract.
	WebfilterLicense int `pulumi:"webfilterLicense"`
	// Web filter query time out (1 - 30 sec, default = 7).
	WebfilterTimeout int `pulumi:"webfilterTimeout"`
}

func LookupFortiguardOutput(ctx *pulumi.Context, args LookupFortiguardOutputArgs, opts ...pulumi.InvokeOption) LookupFortiguardResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFortiguardResult, error) {
			args := v.(LookupFortiguardArgs)
			r, err := LookupFortiguard(ctx, &args, opts...)
			var s LookupFortiguardResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFortiguardResultOutput)
}

// A collection of arguments for invoking getFortiguard.
type LookupFortiguardOutputArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupFortiguardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFortiguardArgs)(nil)).Elem()
}

// A collection of values returned by getFortiguard.
type LookupFortiguardResultOutput struct{ *pulumi.OutputState }

func (LookupFortiguardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFortiguardResult)(nil)).Elem()
}

func (o LookupFortiguardResultOutput) ToLookupFortiguardResultOutput() LookupFortiguardResultOutput {
	return o
}

func (o LookupFortiguardResultOutput) ToLookupFortiguardResultOutputWithContext(ctx context.Context) LookupFortiguardResultOutput {
	return o
}

// Enable/disable FortiGuard antispam request caching. Uses a small amount of memory but improves performance.
func (o LookupFortiguardResultOutput) AntispamCache() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.AntispamCache }).(pulumi.StringOutput)
}

// Maximum percent of FortiGate memory the antispam cache is allowed to use (1 - 15%!)(MISSING).
func (o LookupFortiguardResultOutput) AntispamCacheMpercent() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.AntispamCacheMpercent }).(pulumi.IntOutput)
}

// Maximum permille of FortiGate memory the antispam cache is allowed to use (1 - 150).
func (o LookupFortiguardResultOutput) AntispamCacheMpermille() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.AntispamCacheMpermille }).(pulumi.IntOutput)
}

// Time-to-live for antispam cache entries in seconds (300 - 86400). Lower times reduce the cache size. Higher times may improve performance since the cache will have more entries.
func (o LookupFortiguardResultOutput) AntispamCacheTtl() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.AntispamCacheTtl }).(pulumi.IntOutput)
}

// Expiration date of the FortiGuard antispam contract.
func (o LookupFortiguardResultOutput) AntispamExpiration() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.AntispamExpiration }).(pulumi.IntOutput)
}

// Enable/disable turning off the FortiGuard antispam service.
func (o LookupFortiguardResultOutput) AntispamForceOff() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.AntispamForceOff }).(pulumi.StringOutput)
}

// Interval of time between license checks for the FortiGuard antispam contract.
func (o LookupFortiguardResultOutput) AntispamLicense() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.AntispamLicense }).(pulumi.IntOutput)
}

// Antispam query time out (1 - 30 sec, default = 7).
func (o LookupFortiguardResultOutput) AntispamTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.AntispamTimeout }).(pulumi.IntOutput)
}

// IP address of the FortiGuard anycast DNS rating server.
func (o LookupFortiguardResultOutput) AnycastSdnsServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.AnycastSdnsServerIp }).(pulumi.StringOutput)
}

// Port to connect to on the FortiGuard anycast DNS rating server.
func (o LookupFortiguardResultOutput) AnycastSdnsServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.AnycastSdnsServerPort }).(pulumi.IntOutput)
}

// Enable/disable automatic patch-level firmware upgrade from FortiGuard. The FortiGate unit searches for new patches only in the same major and minor version.
func (o LookupFortiguardResultOutput) AutoFirmwareUpgrade() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.AutoFirmwareUpgrade }).(pulumi.StringOutput)
}

// Allowed day(s) of the week to start automatic patch-level firmware upgrade from FortiGuard.
func (o LookupFortiguardResultOutput) AutoFirmwareUpgradeDay() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.AutoFirmwareUpgradeDay }).(pulumi.StringOutput)
}

// Delay of day(s) before installing an automatic patch-level firmware upgrade from FortiGuard (default = 3). Set it 0 to use auto-firmware-upgrade-day instead, which selects allowed day(s) of the week for installing an automatic patch-level firmware upgrade.
func (o LookupFortiguardResultOutput) AutoFirmwareUpgradeDelay() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.AutoFirmwareUpgradeDelay }).(pulumi.IntOutput)
}

// End time in the designated time window for automatic patch-level firmware upgrade from FortiGuard in 24 hour time (0 ~ 23, default = 4). When the end time is smaller than the start time, the end time is interpreted as the next day. The actual upgrade time is selected randomly within the time window.
func (o LookupFortiguardResultOutput) AutoFirmwareUpgradeEndHour() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.AutoFirmwareUpgradeEndHour }).(pulumi.IntOutput)
}

// Start time in the designated time window for automatic patch-level firmware upgrade from FortiGuard in 24 hour time (0 ~ 23, default = 2). The actual upgrade time is selected randomly within the time window.
func (o LookupFortiguardResultOutput) AutoFirmwareUpgradeStartHour() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.AutoFirmwareUpgradeStartHour }).(pulumi.IntOutput)
}

// Automatically connect to and login to FortiCloud.
func (o LookupFortiguardResultOutput) AutoJoinForticloud() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.AutoJoinForticloud }).(pulumi.StringOutput)
}

// IP address of the FortiDDNS server.
func (o LookupFortiguardResultOutput) DdnsServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.DdnsServerIp }).(pulumi.StringOutput)
}

// IPv6 address of the FortiDDNS server.
func (o LookupFortiguardResultOutput) DdnsServerIp6() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.DdnsServerIp6 }).(pulumi.StringOutput)
}

// Port used to communicate with FortiDDNS servers.
func (o LookupFortiguardResultOutput) DdnsServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.DdnsServerPort }).(pulumi.IntOutput)
}

// Threshold for number of days before FortiGuard license expiration to generate license expiring event log (1 - 100 days, default = 15).
func (o LookupFortiguardResultOutput) FdsLicenseExpiringDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.FdsLicenseExpiringDays }).(pulumi.IntOutput)
}

// Enable/disable use of FortiGuard's anycast network.
func (o LookupFortiguardResultOutput) FortiguardAnycast() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.FortiguardAnycast }).(pulumi.StringOutput)
}

// Configure which of Fortinet's servers to provide FortiGuard services in FortiGuard's anycast network. Default is Fortinet.
func (o LookupFortiguardResultOutput) FortiguardAnycastSource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.FortiguardAnycastSource }).(pulumi.StringOutput)
}

// Enable/disable prompting of automatic patch-level firmware upgrade recommendation.
func (o LookupFortiguardResultOutput) GuiPromptAutoUpgrade() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.GuiPromptAutoUpgrade }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFortiguardResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.Id }).(pulumi.StringOutput)
}

// Specify outgoing interface to reach server.
func (o LookupFortiguardResultOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server.
func (o LookupFortiguardResultOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Number of servers to alternate between as first FortiGuard option.
func (o LookupFortiguardResultOutput) LoadBalanceServers() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.LoadBalanceServers }).(pulumi.IntOutput)
}

// Enable/disable FortiGuard Virus Outbreak Prevention cache.
func (o LookupFortiguardResultOutput) OutbreakPreventionCache() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.OutbreakPreventionCache }).(pulumi.StringOutput)
}

// Maximum percent of memory FortiGuard Virus Outbreak Prevention cache can use (1 - 15%!,(MISSING) default = 2).
func (o LookupFortiguardResultOutput) OutbreakPreventionCacheMpercent() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.OutbreakPreventionCacheMpercent }).(pulumi.IntOutput)
}

// Maximum permille of memory FortiGuard Virus Outbreak Prevention cache can use (1 - 150 permille, default = 1).
func (o LookupFortiguardResultOutput) OutbreakPreventionCacheMpermille() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.OutbreakPreventionCacheMpermille }).(pulumi.IntOutput)
}

// Time-to-live for FortiGuard Virus Outbreak Prevention cache entries (300 - 86400 sec, default = 300).
func (o LookupFortiguardResultOutput) OutbreakPreventionCacheTtl() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.OutbreakPreventionCacheTtl }).(pulumi.IntOutput)
}

// Expiration date of FortiGuard Virus Outbreak Prevention contract.
func (o LookupFortiguardResultOutput) OutbreakPreventionExpiration() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.OutbreakPreventionExpiration }).(pulumi.IntOutput)
}

// Turn off FortiGuard Virus Outbreak Prevention service.
func (o LookupFortiguardResultOutput) OutbreakPreventionForceOff() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.OutbreakPreventionForceOff }).(pulumi.StringOutput)
}

// Interval of time between license checks for FortiGuard Virus Outbreak Prevention contract.
func (o LookupFortiguardResultOutput) OutbreakPreventionLicense() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.OutbreakPreventionLicense }).(pulumi.IntOutput)
}

// FortiGuard Virus Outbreak Prevention time out (1 - 30 sec, default = 7).
func (o LookupFortiguardResultOutput) OutbreakPreventionTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.OutbreakPreventionTimeout }).(pulumi.IntOutput)
}

// Enable/disable use of persistent connection to receive update notification from FortiGuard.
func (o LookupFortiguardResultOutput) PersistentConnection() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.PersistentConnection }).(pulumi.StringOutput)
}

// Port used to communicate with the FortiGuard servers.
func (o LookupFortiguardResultOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.Port }).(pulumi.StringOutput)
}

// Protocol used to communicate with the FortiGuard servers.
func (o LookupFortiguardResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// Proxy user password.
func (o LookupFortiguardResultOutput) ProxyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.ProxyPassword }).(pulumi.StringOutput)
}

// IP address of the proxy server.
func (o LookupFortiguardResultOutput) ProxyServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.ProxyServerIp }).(pulumi.StringOutput)
}

// Port used to communicate with the proxy server.
func (o LookupFortiguardResultOutput) ProxyServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.ProxyServerPort }).(pulumi.IntOutput)
}

// Proxy user name.
func (o LookupFortiguardResultOutput) ProxyUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.ProxyUsername }).(pulumi.StringOutput)
}

// Enable/disable FortiCloud Sandbox inline-scan.
func (o LookupFortiguardResultOutput) SandboxInlineScan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.SandboxInlineScan }).(pulumi.StringOutput)
}

// Cloud sandbox region.
func (o LookupFortiguardResultOutput) SandboxRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.SandboxRegion }).(pulumi.StringOutput)
}

// Customization options for the FortiGuard DNS service.
func (o LookupFortiguardResultOutput) SdnsOptions() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.SdnsOptions }).(pulumi.StringOutput)
}

// IP address of the FortiDNS server.
func (o LookupFortiguardResultOutput) SdnsServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.SdnsServerIp }).(pulumi.StringOutput)
}

// Port used to communicate with FortiDNS servers.
func (o LookupFortiguardResultOutput) SdnsServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.SdnsServerPort }).(pulumi.IntOutput)
}

// Service account ID.
func (o LookupFortiguardResultOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.ServiceAccountId }).(pulumi.StringOutput)
}

// Source IPv4 address used to communicate with FortiGuard.
func (o LookupFortiguardResultOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.SourceIp }).(pulumi.StringOutput)
}

// Source IPv6 address used to communicate with FortiGuard.
func (o LookupFortiguardResultOutput) SourceIp6() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.SourceIp6 }).(pulumi.StringOutput)
}

// Enable/disable proxy dictionary rebuild.
func (o LookupFortiguardResultOutput) UpdateBuildProxy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.UpdateBuildProxy }).(pulumi.StringOutput)
}

// Enable/disable DLP signature update.
func (o LookupFortiguardResultOutput) UpdateDldb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.UpdateDldb }).(pulumi.StringOutput)
}

// Enable/disable external resource update.
func (o LookupFortiguardResultOutput) UpdateExtdb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.UpdateExtdb }).(pulumi.StringOutput)
}

// Enable/disable Internet Service Database update.
func (o LookupFortiguardResultOutput) UpdateFfdb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.UpdateFfdb }).(pulumi.StringOutput)
}

// Signature update server location.
func (o LookupFortiguardResultOutput) UpdateServerLocation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.UpdateServerLocation }).(pulumi.StringOutput)
}

// Enable/disable allowlist update.
func (o LookupFortiguardResultOutput) UpdateUwdb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.UpdateUwdb }).(pulumi.StringOutput)
}

// FortiGuard Service virtual domain name.
func (o LookupFortiguardResultOutput) Vdom() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.Vdom }).(pulumi.StringOutput)
}

func (o LookupFortiguardResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFortiguardResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Expiration date of the FortiGuard video filter contract.
func (o LookupFortiguardResultOutput) VideofilterExpiration() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.VideofilterExpiration }).(pulumi.IntOutput)
}

// Interval of time between license checks for the FortiGuard video filter contract.
func (o LookupFortiguardResultOutput) VideofilterLicense() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.VideofilterLicense }).(pulumi.IntOutput)
}

// Enable/disable FortiGuard web filter caching.
func (o LookupFortiguardResultOutput) WebfilterCache() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.WebfilterCache }).(pulumi.StringOutput)
}

// Time-to-live for web filter cache entries in seconds (300 - 86400).
func (o LookupFortiguardResultOutput) WebfilterCacheTtl() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.WebfilterCacheTtl }).(pulumi.IntOutput)
}

// Expiration date of the FortiGuard web filter contract.
func (o LookupFortiguardResultOutput) WebfilterExpiration() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.WebfilterExpiration }).(pulumi.IntOutput)
}

// Enable/disable turning off the FortiGuard web filtering service.
func (o LookupFortiguardResultOutput) WebfilterForceOff() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFortiguardResult) string { return v.WebfilterForceOff }).(pulumi.StringOutput)
}

// Interval of time between license checks for the FortiGuard web filter contract.
func (o LookupFortiguardResultOutput) WebfilterLicense() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.WebfilterLicense }).(pulumi.IntOutput)
}

// Web filter query time out (1 - 30 sec, default = 7).
func (o LookupFortiguardResultOutput) WebfilterTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFortiguardResult) int { return v.WebfilterTimeout }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFortiguardResultOutput{})
}
