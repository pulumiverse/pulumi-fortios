// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoupdate

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure push updates. Applies to FortiOS Version `<= 7.0.0`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/system"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := system.NewPushupdate(ctx, "trname", &system.PushupdateArgs{
//				Address:  pulumi.String("0.0.0.0"),
//				Override: pulumi.String("disable"),
//				Port:     pulumi.Int(9443),
//				Status:   pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SystemAutoupdate PushUpdate can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:system/autoupdate/pushupdate:Pushupdate labelname SystemAutoupdatePushUpdate
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:system/autoupdate/pushupdate:Pushupdate labelname SystemAutoupdatePushUpdate
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Pushupdate struct {
	pulumi.CustomResourceState

	// Push update override server.
	Address pulumi.StringOutput `pulumi:"address"`
	// Enable/disable push update override server. Valid values: `enable`, `disable`.
	Override pulumi.StringOutput `pulumi:"override"`
	// Push update override port. (Do not overlap with other service ports)
	Port pulumi.IntOutput `pulumi:"port"`
	// Enable/disable push updates. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewPushupdate registers a new resource with the given unique name, arguments, and options.
func NewPushupdate(ctx *pulumi.Context,
	name string, args *PushupdateArgs, opts ...pulumi.ResourceOption) (*Pushupdate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.Override == nil {
		return nil, errors.New("invalid value for required argument 'Override'")
	}
	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Pushupdate
	err := ctx.RegisterResource("fortios:system/autoupdate/pushupdate:Pushupdate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPushupdate gets an existing Pushupdate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPushupdate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PushupdateState, opts ...pulumi.ResourceOption) (*Pushupdate, error) {
	var resource Pushupdate
	err := ctx.ReadResource("fortios:system/autoupdate/pushupdate:Pushupdate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Pushupdate resources.
type pushupdateState struct {
	// Push update override server.
	Address *string `pulumi:"address"`
	// Enable/disable push update override server. Valid values: `enable`, `disable`.
	Override *string `pulumi:"override"`
	// Push update override port. (Do not overlap with other service ports)
	Port *int `pulumi:"port"`
	// Enable/disable push updates. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type PushupdateState struct {
	// Push update override server.
	Address pulumi.StringPtrInput
	// Enable/disable push update override server. Valid values: `enable`, `disable`.
	Override pulumi.StringPtrInput
	// Push update override port. (Do not overlap with other service ports)
	Port pulumi.IntPtrInput
	// Enable/disable push updates. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (PushupdateState) ElementType() reflect.Type {
	return reflect.TypeOf((*pushupdateState)(nil)).Elem()
}

type pushupdateArgs struct {
	// Push update override server.
	Address string `pulumi:"address"`
	// Enable/disable push update override server. Valid values: `enable`, `disable`.
	Override string `pulumi:"override"`
	// Push update override port. (Do not overlap with other service ports)
	Port int `pulumi:"port"`
	// Enable/disable push updates. Valid values: `enable`, `disable`.
	Status string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Pushupdate resource.
type PushupdateArgs struct {
	// Push update override server.
	Address pulumi.StringInput
	// Enable/disable push update override server. Valid values: `enable`, `disable`.
	Override pulumi.StringInput
	// Push update override port. (Do not overlap with other service ports)
	Port pulumi.IntInput
	// Enable/disable push updates. Valid values: `enable`, `disable`.
	Status pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (PushupdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pushupdateArgs)(nil)).Elem()
}

type PushupdateInput interface {
	pulumi.Input

	ToPushupdateOutput() PushupdateOutput
	ToPushupdateOutputWithContext(ctx context.Context) PushupdateOutput
}

func (*Pushupdate) ElementType() reflect.Type {
	return reflect.TypeOf((**Pushupdate)(nil)).Elem()
}

func (i *Pushupdate) ToPushupdateOutput() PushupdateOutput {
	return i.ToPushupdateOutputWithContext(context.Background())
}

func (i *Pushupdate) ToPushupdateOutputWithContext(ctx context.Context) PushupdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushupdateOutput)
}

// PushupdateArrayInput is an input type that accepts PushupdateArray and PushupdateArrayOutput values.
// You can construct a concrete instance of `PushupdateArrayInput` via:
//
//	PushupdateArray{ PushupdateArgs{...} }
type PushupdateArrayInput interface {
	pulumi.Input

	ToPushupdateArrayOutput() PushupdateArrayOutput
	ToPushupdateArrayOutputWithContext(context.Context) PushupdateArrayOutput
}

type PushupdateArray []PushupdateInput

func (PushupdateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Pushupdate)(nil)).Elem()
}

func (i PushupdateArray) ToPushupdateArrayOutput() PushupdateArrayOutput {
	return i.ToPushupdateArrayOutputWithContext(context.Background())
}

func (i PushupdateArray) ToPushupdateArrayOutputWithContext(ctx context.Context) PushupdateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushupdateArrayOutput)
}

// PushupdateMapInput is an input type that accepts PushupdateMap and PushupdateMapOutput values.
// You can construct a concrete instance of `PushupdateMapInput` via:
//
//	PushupdateMap{ "key": PushupdateArgs{...} }
type PushupdateMapInput interface {
	pulumi.Input

	ToPushupdateMapOutput() PushupdateMapOutput
	ToPushupdateMapOutputWithContext(context.Context) PushupdateMapOutput
}

type PushupdateMap map[string]PushupdateInput

func (PushupdateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Pushupdate)(nil)).Elem()
}

func (i PushupdateMap) ToPushupdateMapOutput() PushupdateMapOutput {
	return i.ToPushupdateMapOutputWithContext(context.Background())
}

func (i PushupdateMap) ToPushupdateMapOutputWithContext(ctx context.Context) PushupdateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushupdateMapOutput)
}

type PushupdateOutput struct{ *pulumi.OutputState }

func (PushupdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Pushupdate)(nil)).Elem()
}

func (o PushupdateOutput) ToPushupdateOutput() PushupdateOutput {
	return o
}

func (o PushupdateOutput) ToPushupdateOutputWithContext(ctx context.Context) PushupdateOutput {
	return o
}

// Push update override server.
func (o PushupdateOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *Pushupdate) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// Enable/disable push update override server. Valid values: `enable`, `disable`.
func (o PushupdateOutput) Override() pulumi.StringOutput {
	return o.ApplyT(func(v *Pushupdate) pulumi.StringOutput { return v.Override }).(pulumi.StringOutput)
}

// Push update override port. (Do not overlap with other service ports)
func (o PushupdateOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *Pushupdate) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// Enable/disable push updates. Valid values: `enable`, `disable`.
func (o PushupdateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Pushupdate) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o PushupdateOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Pushupdate) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type PushupdateArrayOutput struct{ *pulumi.OutputState }

func (PushupdateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Pushupdate)(nil)).Elem()
}

func (o PushupdateArrayOutput) ToPushupdateArrayOutput() PushupdateArrayOutput {
	return o
}

func (o PushupdateArrayOutput) ToPushupdateArrayOutputWithContext(ctx context.Context) PushupdateArrayOutput {
	return o
}

func (o PushupdateArrayOutput) Index(i pulumi.IntInput) PushupdateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Pushupdate {
		return vs[0].([]*Pushupdate)[vs[1].(int)]
	}).(PushupdateOutput)
}

type PushupdateMapOutput struct{ *pulumi.OutputState }

func (PushupdateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Pushupdate)(nil)).Elem()
}

func (o PushupdateMapOutput) ToPushupdateMapOutput() PushupdateMapOutput {
	return o
}

func (o PushupdateMapOutput) ToPushupdateMapOutputWithContext(ctx context.Context) PushupdateMapOutput {
	return o
}

func (o PushupdateMapOutput) MapIndex(k pulumi.StringInput) PushupdateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Pushupdate {
		return vs[0].(map[string]*Pushupdate)[vs[1].(string)]
	}).(PushupdateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PushupdateInput)(nil)).Elem(), &Pushupdate{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushupdateArrayInput)(nil)).Elem(), PushupdateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushupdateMapInput)(nil)).Elem(), PushupdateMap{})
	pulumi.RegisterOutputType(PushupdateOutput{})
	pulumi.RegisterOutputType(PushupdateArrayOutput{})
	pulumi.RegisterOutputType(PushupdateMapOutput{})
}
