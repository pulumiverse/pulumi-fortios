// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fmg

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// This resource supports modifying system admin setting for FortiManager.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/fmg"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fmg.NewSystemAdmin(ctx, "test1", &fmg.SystemAdminArgs{
//				HttpPort:    pulumi.Int(80),
//				HttpsPort:   pulumi.Int(443),
//				IdleTimeout: pulumi.Int(20),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SystemAdmin struct {
	pulumi.CustomResourceState

	// Http port.
	HttpPort pulumi.IntPtrOutput `pulumi:"httpPort"`
	// Https port.
	HttpsPort pulumi.IntPtrOutput `pulumi:"httpsPort"`
	// Idle Timeout(1-480 minute).
	IdleTimeout pulumi.IntPtrOutput `pulumi:"idleTimeout"`
}

// NewSystemAdmin registers a new resource with the given unique name, arguments, and options.
func NewSystemAdmin(ctx *pulumi.Context,
	name string, args *SystemAdminArgs, opts ...pulumi.ResourceOption) (*SystemAdmin, error) {
	if args == nil {
		args = &SystemAdminArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemAdmin
	err := ctx.RegisterResource("fortios:fmg/systemAdmin:SystemAdmin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemAdmin gets an existing SystemAdmin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemAdmin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemAdminState, opts ...pulumi.ResourceOption) (*SystemAdmin, error) {
	var resource SystemAdmin
	err := ctx.ReadResource("fortios:fmg/systemAdmin:SystemAdmin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemAdmin resources.
type systemAdminState struct {
	// Http port.
	HttpPort *int `pulumi:"httpPort"`
	// Https port.
	HttpsPort *int `pulumi:"httpsPort"`
	// Idle Timeout(1-480 minute).
	IdleTimeout *int `pulumi:"idleTimeout"`
}

type SystemAdminState struct {
	// Http port.
	HttpPort pulumi.IntPtrInput
	// Https port.
	HttpsPort pulumi.IntPtrInput
	// Idle Timeout(1-480 minute).
	IdleTimeout pulumi.IntPtrInput
}

func (SystemAdminState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAdminState)(nil)).Elem()
}

type systemAdminArgs struct {
	// Http port.
	HttpPort *int `pulumi:"httpPort"`
	// Https port.
	HttpsPort *int `pulumi:"httpsPort"`
	// Idle Timeout(1-480 minute).
	IdleTimeout *int `pulumi:"idleTimeout"`
}

// The set of arguments for constructing a SystemAdmin resource.
type SystemAdminArgs struct {
	// Http port.
	HttpPort pulumi.IntPtrInput
	// Https port.
	HttpsPort pulumi.IntPtrInput
	// Idle Timeout(1-480 minute).
	IdleTimeout pulumi.IntPtrInput
}

func (SystemAdminArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAdminArgs)(nil)).Elem()
}

type SystemAdminInput interface {
	pulumi.Input

	ToSystemAdminOutput() SystemAdminOutput
	ToSystemAdminOutputWithContext(ctx context.Context) SystemAdminOutput
}

func (*SystemAdmin) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAdmin)(nil)).Elem()
}

func (i *SystemAdmin) ToSystemAdminOutput() SystemAdminOutput {
	return i.ToSystemAdminOutputWithContext(context.Background())
}

func (i *SystemAdmin) ToSystemAdminOutputWithContext(ctx context.Context) SystemAdminOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminOutput)
}

// SystemAdminArrayInput is an input type that accepts SystemAdminArray and SystemAdminArrayOutput values.
// You can construct a concrete instance of `SystemAdminArrayInput` via:
//
//	SystemAdminArray{ SystemAdminArgs{...} }
type SystemAdminArrayInput interface {
	pulumi.Input

	ToSystemAdminArrayOutput() SystemAdminArrayOutput
	ToSystemAdminArrayOutputWithContext(context.Context) SystemAdminArrayOutput
}

type SystemAdminArray []SystemAdminInput

func (SystemAdminArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAdmin)(nil)).Elem()
}

func (i SystemAdminArray) ToSystemAdminArrayOutput() SystemAdminArrayOutput {
	return i.ToSystemAdminArrayOutputWithContext(context.Background())
}

func (i SystemAdminArray) ToSystemAdminArrayOutputWithContext(ctx context.Context) SystemAdminArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminArrayOutput)
}

// SystemAdminMapInput is an input type that accepts SystemAdminMap and SystemAdminMapOutput values.
// You can construct a concrete instance of `SystemAdminMapInput` via:
//
//	SystemAdminMap{ "key": SystemAdminArgs{...} }
type SystemAdminMapInput interface {
	pulumi.Input

	ToSystemAdminMapOutput() SystemAdminMapOutput
	ToSystemAdminMapOutputWithContext(context.Context) SystemAdminMapOutput
}

type SystemAdminMap map[string]SystemAdminInput

func (SystemAdminMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAdmin)(nil)).Elem()
}

func (i SystemAdminMap) ToSystemAdminMapOutput() SystemAdminMapOutput {
	return i.ToSystemAdminMapOutputWithContext(context.Background())
}

func (i SystemAdminMap) ToSystemAdminMapOutputWithContext(ctx context.Context) SystemAdminMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminMapOutput)
}

type SystemAdminOutput struct{ *pulumi.OutputState }

func (SystemAdminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAdmin)(nil)).Elem()
}

func (o SystemAdminOutput) ToSystemAdminOutput() SystemAdminOutput {
	return o
}

func (o SystemAdminOutput) ToSystemAdminOutputWithContext(ctx context.Context) SystemAdminOutput {
	return o
}

// Http port.
func (o SystemAdminOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.IntPtrOutput { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// Https port.
func (o SystemAdminOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.IntPtrOutput { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Idle Timeout(1-480 minute).
func (o SystemAdminOutput) IdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.IntPtrOutput { return v.IdleTimeout }).(pulumi.IntPtrOutput)
}

type SystemAdminArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAdmin)(nil)).Elem()
}

func (o SystemAdminArrayOutput) ToSystemAdminArrayOutput() SystemAdminArrayOutput {
	return o
}

func (o SystemAdminArrayOutput) ToSystemAdminArrayOutputWithContext(ctx context.Context) SystemAdminArrayOutput {
	return o
}

func (o SystemAdminArrayOutput) Index(i pulumi.IntInput) SystemAdminOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemAdmin {
		return vs[0].([]*SystemAdmin)[vs[1].(int)]
	}).(SystemAdminOutput)
}

type SystemAdminMapOutput struct{ *pulumi.OutputState }

func (SystemAdminMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAdmin)(nil)).Elem()
}

func (o SystemAdminMapOutput) ToSystemAdminMapOutput() SystemAdminMapOutput {
	return o
}

func (o SystemAdminMapOutput) ToSystemAdminMapOutputWithContext(ctx context.Context) SystemAdminMapOutput {
	return o
}

func (o SystemAdminMapOutput) MapIndex(k pulumi.StringInput) SystemAdminOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemAdmin {
		return vs[0].(map[string]*SystemAdmin)[vs[1].(string)]
	}).(SystemAdminOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminInput)(nil)).Elem(), &SystemAdmin{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminArrayInput)(nil)).Elem(), SystemAdminArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminMapInput)(nil)).Elem(), SystemAdminMap{})
	pulumi.RegisterOutputType(SystemAdminOutput{})
	pulumi.RegisterOutputType(SystemAdminArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminMapOutput{})
}
