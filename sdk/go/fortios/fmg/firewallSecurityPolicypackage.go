// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fmg

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// This resource supports Create/Read/Update/Delete firewall security policypackage on FortiManager which could be installed to the FortiGate later
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/fmg"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fmg.NewFirewallSecurityPolicypackage(ctx, "test1", &fmg.FirewallSecurityPolicypackageArgs{
//				Target: pulumi.String("FGVM64-test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FirewallSecurityPolicypackage struct {
	pulumi.CustomResourceState

	// Source ADOM name. default is 'root'
	Adom pulumi.StringPtrOutput `pulumi:"adom"`
	// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
	InspectionMode pulumi.StringPtrOutput `pulumi:"inspectionMode"`
	// Security policy package name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The installation target.
	Target pulumi.StringPtrOutput `pulumi:"target"`
	// Vdom of managed device. default is 'root'
	Vdom pulumi.StringPtrOutput `pulumi:"vdom"`
}

// NewFirewallSecurityPolicypackage registers a new resource with the given unique name, arguments, and options.
func NewFirewallSecurityPolicypackage(ctx *pulumi.Context,
	name string, args *FirewallSecurityPolicypackageArgs, opts ...pulumi.ResourceOption) (*FirewallSecurityPolicypackage, error) {
	if args == nil {
		args = &FirewallSecurityPolicypackageArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallSecurityPolicypackage
	err := ctx.RegisterResource("fortios:fmg/firewallSecurityPolicypackage:FirewallSecurityPolicypackage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallSecurityPolicypackage gets an existing FirewallSecurityPolicypackage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallSecurityPolicypackage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallSecurityPolicypackageState, opts ...pulumi.ResourceOption) (*FirewallSecurityPolicypackage, error) {
	var resource FirewallSecurityPolicypackage
	err := ctx.ReadResource("fortios:fmg/firewallSecurityPolicypackage:FirewallSecurityPolicypackage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallSecurityPolicypackage resources.
type firewallSecurityPolicypackageState struct {
	// Source ADOM name. default is 'root'
	Adom *string `pulumi:"adom"`
	// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
	InspectionMode *string `pulumi:"inspectionMode"`
	// Security policy package name.
	Name *string `pulumi:"name"`
	// The installation target.
	Target *string `pulumi:"target"`
	// Vdom of managed device. default is 'root'
	Vdom *string `pulumi:"vdom"`
}

type FirewallSecurityPolicypackageState struct {
	// Source ADOM name. default is 'root'
	Adom pulumi.StringPtrInput
	// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
	InspectionMode pulumi.StringPtrInput
	// Security policy package name.
	Name pulumi.StringPtrInput
	// The installation target.
	Target pulumi.StringPtrInput
	// Vdom of managed device. default is 'root'
	Vdom pulumi.StringPtrInput
}

func (FirewallSecurityPolicypackageState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallSecurityPolicypackageState)(nil)).Elem()
}

type firewallSecurityPolicypackageArgs struct {
	// Source ADOM name. default is 'root'
	Adom *string `pulumi:"adom"`
	// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
	InspectionMode *string `pulumi:"inspectionMode"`
	// Security policy package name.
	Name *string `pulumi:"name"`
	// The installation target.
	Target *string `pulumi:"target"`
	// Vdom of managed device. default is 'root'
	Vdom *string `pulumi:"vdom"`
}

// The set of arguments for constructing a FirewallSecurityPolicypackage resource.
type FirewallSecurityPolicypackageArgs struct {
	// Source ADOM name. default is 'root'
	Adom pulumi.StringPtrInput
	// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
	InspectionMode pulumi.StringPtrInput
	// Security policy package name.
	Name pulumi.StringPtrInput
	// The installation target.
	Target pulumi.StringPtrInput
	// Vdom of managed device. default is 'root'
	Vdom pulumi.StringPtrInput
}

func (FirewallSecurityPolicypackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallSecurityPolicypackageArgs)(nil)).Elem()
}

type FirewallSecurityPolicypackageInput interface {
	pulumi.Input

	ToFirewallSecurityPolicypackageOutput() FirewallSecurityPolicypackageOutput
	ToFirewallSecurityPolicypackageOutputWithContext(ctx context.Context) FirewallSecurityPolicypackageOutput
}

func (*FirewallSecurityPolicypackage) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSecurityPolicypackage)(nil)).Elem()
}

func (i *FirewallSecurityPolicypackage) ToFirewallSecurityPolicypackageOutput() FirewallSecurityPolicypackageOutput {
	return i.ToFirewallSecurityPolicypackageOutputWithContext(context.Background())
}

func (i *FirewallSecurityPolicypackage) ToFirewallSecurityPolicypackageOutputWithContext(ctx context.Context) FirewallSecurityPolicypackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecurityPolicypackageOutput)
}

// FirewallSecurityPolicypackageArrayInput is an input type that accepts FirewallSecurityPolicypackageArray and FirewallSecurityPolicypackageArrayOutput values.
// You can construct a concrete instance of `FirewallSecurityPolicypackageArrayInput` via:
//
//	FirewallSecurityPolicypackageArray{ FirewallSecurityPolicypackageArgs{...} }
type FirewallSecurityPolicypackageArrayInput interface {
	pulumi.Input

	ToFirewallSecurityPolicypackageArrayOutput() FirewallSecurityPolicypackageArrayOutput
	ToFirewallSecurityPolicypackageArrayOutputWithContext(context.Context) FirewallSecurityPolicypackageArrayOutput
}

type FirewallSecurityPolicypackageArray []FirewallSecurityPolicypackageInput

func (FirewallSecurityPolicypackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallSecurityPolicypackage)(nil)).Elem()
}

func (i FirewallSecurityPolicypackageArray) ToFirewallSecurityPolicypackageArrayOutput() FirewallSecurityPolicypackageArrayOutput {
	return i.ToFirewallSecurityPolicypackageArrayOutputWithContext(context.Background())
}

func (i FirewallSecurityPolicypackageArray) ToFirewallSecurityPolicypackageArrayOutputWithContext(ctx context.Context) FirewallSecurityPolicypackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecurityPolicypackageArrayOutput)
}

// FirewallSecurityPolicypackageMapInput is an input type that accepts FirewallSecurityPolicypackageMap and FirewallSecurityPolicypackageMapOutput values.
// You can construct a concrete instance of `FirewallSecurityPolicypackageMapInput` via:
//
//	FirewallSecurityPolicypackageMap{ "key": FirewallSecurityPolicypackageArgs{...} }
type FirewallSecurityPolicypackageMapInput interface {
	pulumi.Input

	ToFirewallSecurityPolicypackageMapOutput() FirewallSecurityPolicypackageMapOutput
	ToFirewallSecurityPolicypackageMapOutputWithContext(context.Context) FirewallSecurityPolicypackageMapOutput
}

type FirewallSecurityPolicypackageMap map[string]FirewallSecurityPolicypackageInput

func (FirewallSecurityPolicypackageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallSecurityPolicypackage)(nil)).Elem()
}

func (i FirewallSecurityPolicypackageMap) ToFirewallSecurityPolicypackageMapOutput() FirewallSecurityPolicypackageMapOutput {
	return i.ToFirewallSecurityPolicypackageMapOutputWithContext(context.Background())
}

func (i FirewallSecurityPolicypackageMap) ToFirewallSecurityPolicypackageMapOutputWithContext(ctx context.Context) FirewallSecurityPolicypackageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecurityPolicypackageMapOutput)
}

type FirewallSecurityPolicypackageOutput struct{ *pulumi.OutputState }

func (FirewallSecurityPolicypackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSecurityPolicypackage)(nil)).Elem()
}

func (o FirewallSecurityPolicypackageOutput) ToFirewallSecurityPolicypackageOutput() FirewallSecurityPolicypackageOutput {
	return o
}

func (o FirewallSecurityPolicypackageOutput) ToFirewallSecurityPolicypackageOutputWithContext(ctx context.Context) FirewallSecurityPolicypackageOutput {
	return o
}

// Source ADOM name. default is 'root'
func (o FirewallSecurityPolicypackageOutput) Adom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSecurityPolicypackage) pulumi.StringPtrOutput { return v.Adom }).(pulumi.StringPtrOutput)
}

// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
func (o FirewallSecurityPolicypackageOutput) InspectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSecurityPolicypackage) pulumi.StringPtrOutput { return v.InspectionMode }).(pulumi.StringPtrOutput)
}

// Security policy package name.
func (o FirewallSecurityPolicypackageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallSecurityPolicypackage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The installation target.
func (o FirewallSecurityPolicypackageOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSecurityPolicypackage) pulumi.StringPtrOutput { return v.Target }).(pulumi.StringPtrOutput)
}

// Vdom of managed device. default is 'root'
func (o FirewallSecurityPolicypackageOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSecurityPolicypackage) pulumi.StringPtrOutput { return v.Vdom }).(pulumi.StringPtrOutput)
}

type FirewallSecurityPolicypackageArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecurityPolicypackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallSecurityPolicypackage)(nil)).Elem()
}

func (o FirewallSecurityPolicypackageArrayOutput) ToFirewallSecurityPolicypackageArrayOutput() FirewallSecurityPolicypackageArrayOutput {
	return o
}

func (o FirewallSecurityPolicypackageArrayOutput) ToFirewallSecurityPolicypackageArrayOutputWithContext(ctx context.Context) FirewallSecurityPolicypackageArrayOutput {
	return o
}

func (o FirewallSecurityPolicypackageArrayOutput) Index(i pulumi.IntInput) FirewallSecurityPolicypackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallSecurityPolicypackage {
		return vs[0].([]*FirewallSecurityPolicypackage)[vs[1].(int)]
	}).(FirewallSecurityPolicypackageOutput)
}

type FirewallSecurityPolicypackageMapOutput struct{ *pulumi.OutputState }

func (FirewallSecurityPolicypackageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallSecurityPolicypackage)(nil)).Elem()
}

func (o FirewallSecurityPolicypackageMapOutput) ToFirewallSecurityPolicypackageMapOutput() FirewallSecurityPolicypackageMapOutput {
	return o
}

func (o FirewallSecurityPolicypackageMapOutput) ToFirewallSecurityPolicypackageMapOutputWithContext(ctx context.Context) FirewallSecurityPolicypackageMapOutput {
	return o
}

func (o FirewallSecurityPolicypackageMapOutput) MapIndex(k pulumi.StringInput) FirewallSecurityPolicypackageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallSecurityPolicypackage {
		return vs[0].(map[string]*FirewallSecurityPolicypackage)[vs[1].(string)]
	}).(FirewallSecurityPolicypackageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecurityPolicypackageInput)(nil)).Elem(), &FirewallSecurityPolicypackage{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecurityPolicypackageArrayInput)(nil)).Elem(), FirewallSecurityPolicypackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecurityPolicypackageMapInput)(nil)).Elem(), FirewallSecurityPolicypackageMap{})
	pulumi.RegisterOutputType(FirewallSecurityPolicypackageOutput{})
	pulumi.RegisterOutputType(FirewallSecurityPolicypackageArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecurityPolicypackageMapOutput{})
}
