// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fmg

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// This resource supports Create/Read/Update/Delete firewall object virtual ip for FortiManager.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/fmg"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fmg.NewFirewallObjectVip(ctx, "test1", &fmg.FirewallObjectVipArgs{
//				ArpReply:      pulumi.String("enable"),
//				Comment:       pulumi.String("test obj vip"),
//				ConfigDefault: pulumi.String("enable"),
//				ExtIntf:       pulumi.String("any"),
//				ExtIp:         pulumi.String("2.2.2.2"),
//				MappedIp:      pulumi.String("1.1.1.1"),
//				Type:          pulumi.String("static-nat"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = fmg.NewFirewallObjectVip(ctx, "test2", &fmg.FirewallObjectVipArgs{
//				ArpReply:      pulumi.String("disable"),
//				Comment:       pulumi.String("test obj vip"),
//				ConfigDefault: pulumi.String("enable"),
//				ExtIp:         pulumi.String("2.2.2.2-2.2.2.100"),
//				MappedAddr:    pulumi.String("update.microsoft.com"),
//				Type:          pulumi.String("fqdn"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FirewallObjectVip struct {
	pulumi.CustomResourceState

	// ADOM name. default is 'root'.
	Adom pulumi.StringPtrOutput `pulumi:"adom"`
	// Enable to respond to ARP requests for this virtual IP address. Enabled by default.
	ArpReply pulumi.StringPtrOutput `pulumi:"arpReply"`
	// Comments.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Enable/Disable config default value. enabled by default.
	ConfigDefault pulumi.StringPtrOutput `pulumi:"configDefault"`
	// Interface connected to the source network that receives the packets that will be forwarded to the destination network.
	ExtIntf pulumi.StringPtrOutput `pulumi:"extIntf"`
	// IP address or address range on the external interface that you want to map to an address or address range on the destination network.
	ExtIp pulumi.StringPtrOutput `pulumi:"extIp"`
	// Mapped FQDN address name.
	MappedAddr pulumi.StringPtrOutput `pulumi:"mappedAddr"`
	// Mapped Ip address.
	MappedIp pulumi.StringPtrOutput `pulumi:"mappedIp"`
	// Virtual IP name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Virtual IP type, Enum: ["static-nat", "dns-translation", "fqdn"]
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewFirewallObjectVip registers a new resource with the given unique name, arguments, and options.
func NewFirewallObjectVip(ctx *pulumi.Context,
	name string, args *FirewallObjectVipArgs, opts ...pulumi.ResourceOption) (*FirewallObjectVip, error) {
	if args == nil {
		args = &FirewallObjectVipArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallObjectVip
	err := ctx.RegisterResource("fortios:fmg/firewallObjectVip:FirewallObjectVip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallObjectVip gets an existing FirewallObjectVip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallObjectVip(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallObjectVipState, opts ...pulumi.ResourceOption) (*FirewallObjectVip, error) {
	var resource FirewallObjectVip
	err := ctx.ReadResource("fortios:fmg/firewallObjectVip:FirewallObjectVip", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallObjectVip resources.
type firewallObjectVipState struct {
	// ADOM name. default is 'root'.
	Adom *string `pulumi:"adom"`
	// Enable to respond to ARP requests for this virtual IP address. Enabled by default.
	ArpReply *string `pulumi:"arpReply"`
	// Comments.
	Comment *string `pulumi:"comment"`
	// Enable/Disable config default value. enabled by default.
	ConfigDefault *string `pulumi:"configDefault"`
	// Interface connected to the source network that receives the packets that will be forwarded to the destination network.
	ExtIntf *string `pulumi:"extIntf"`
	// IP address or address range on the external interface that you want to map to an address or address range on the destination network.
	ExtIp *string `pulumi:"extIp"`
	// Mapped FQDN address name.
	MappedAddr *string `pulumi:"mappedAddr"`
	// Mapped Ip address.
	MappedIp *string `pulumi:"mappedIp"`
	// Virtual IP name.
	Name *string `pulumi:"name"`
	// Virtual IP type, Enum: ["static-nat", "dns-translation", "fqdn"]
	Type *string `pulumi:"type"`
}

type FirewallObjectVipState struct {
	// ADOM name. default is 'root'.
	Adom pulumi.StringPtrInput
	// Enable to respond to ARP requests for this virtual IP address. Enabled by default.
	ArpReply pulumi.StringPtrInput
	// Comments.
	Comment pulumi.StringPtrInput
	// Enable/Disable config default value. enabled by default.
	ConfigDefault pulumi.StringPtrInput
	// Interface connected to the source network that receives the packets that will be forwarded to the destination network.
	ExtIntf pulumi.StringPtrInput
	// IP address or address range on the external interface that you want to map to an address or address range on the destination network.
	ExtIp pulumi.StringPtrInput
	// Mapped FQDN address name.
	MappedAddr pulumi.StringPtrInput
	// Mapped Ip address.
	MappedIp pulumi.StringPtrInput
	// Virtual IP name.
	Name pulumi.StringPtrInput
	// Virtual IP type, Enum: ["static-nat", "dns-translation", "fqdn"]
	Type pulumi.StringPtrInput
}

func (FirewallObjectVipState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallObjectVipState)(nil)).Elem()
}

type firewallObjectVipArgs struct {
	// ADOM name. default is 'root'.
	Adom *string `pulumi:"adom"`
	// Enable to respond to ARP requests for this virtual IP address. Enabled by default.
	ArpReply *string `pulumi:"arpReply"`
	// Comments.
	Comment *string `pulumi:"comment"`
	// Enable/Disable config default value. enabled by default.
	ConfigDefault *string `pulumi:"configDefault"`
	// Interface connected to the source network that receives the packets that will be forwarded to the destination network.
	ExtIntf *string `pulumi:"extIntf"`
	// IP address or address range on the external interface that you want to map to an address or address range on the destination network.
	ExtIp *string `pulumi:"extIp"`
	// Mapped FQDN address name.
	MappedAddr *string `pulumi:"mappedAddr"`
	// Mapped Ip address.
	MappedIp *string `pulumi:"mappedIp"`
	// Virtual IP name.
	Name *string `pulumi:"name"`
	// Virtual IP type, Enum: ["static-nat", "dns-translation", "fqdn"]
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a FirewallObjectVip resource.
type FirewallObjectVipArgs struct {
	// ADOM name. default is 'root'.
	Adom pulumi.StringPtrInput
	// Enable to respond to ARP requests for this virtual IP address. Enabled by default.
	ArpReply pulumi.StringPtrInput
	// Comments.
	Comment pulumi.StringPtrInput
	// Enable/Disable config default value. enabled by default.
	ConfigDefault pulumi.StringPtrInput
	// Interface connected to the source network that receives the packets that will be forwarded to the destination network.
	ExtIntf pulumi.StringPtrInput
	// IP address or address range on the external interface that you want to map to an address or address range on the destination network.
	ExtIp pulumi.StringPtrInput
	// Mapped FQDN address name.
	MappedAddr pulumi.StringPtrInput
	// Mapped Ip address.
	MappedIp pulumi.StringPtrInput
	// Virtual IP name.
	Name pulumi.StringPtrInput
	// Virtual IP type, Enum: ["static-nat", "dns-translation", "fqdn"]
	Type pulumi.StringPtrInput
}

func (FirewallObjectVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallObjectVipArgs)(nil)).Elem()
}

type FirewallObjectVipInput interface {
	pulumi.Input

	ToFirewallObjectVipOutput() FirewallObjectVipOutput
	ToFirewallObjectVipOutputWithContext(ctx context.Context) FirewallObjectVipOutput
}

func (*FirewallObjectVip) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallObjectVip)(nil)).Elem()
}

func (i *FirewallObjectVip) ToFirewallObjectVipOutput() FirewallObjectVipOutput {
	return i.ToFirewallObjectVipOutputWithContext(context.Background())
}

func (i *FirewallObjectVip) ToFirewallObjectVipOutputWithContext(ctx context.Context) FirewallObjectVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectVipOutput)
}

// FirewallObjectVipArrayInput is an input type that accepts FirewallObjectVipArray and FirewallObjectVipArrayOutput values.
// You can construct a concrete instance of `FirewallObjectVipArrayInput` via:
//
//	FirewallObjectVipArray{ FirewallObjectVipArgs{...} }
type FirewallObjectVipArrayInput interface {
	pulumi.Input

	ToFirewallObjectVipArrayOutput() FirewallObjectVipArrayOutput
	ToFirewallObjectVipArrayOutputWithContext(context.Context) FirewallObjectVipArrayOutput
}

type FirewallObjectVipArray []FirewallObjectVipInput

func (FirewallObjectVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallObjectVip)(nil)).Elem()
}

func (i FirewallObjectVipArray) ToFirewallObjectVipArrayOutput() FirewallObjectVipArrayOutput {
	return i.ToFirewallObjectVipArrayOutputWithContext(context.Background())
}

func (i FirewallObjectVipArray) ToFirewallObjectVipArrayOutputWithContext(ctx context.Context) FirewallObjectVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectVipArrayOutput)
}

// FirewallObjectVipMapInput is an input type that accepts FirewallObjectVipMap and FirewallObjectVipMapOutput values.
// You can construct a concrete instance of `FirewallObjectVipMapInput` via:
//
//	FirewallObjectVipMap{ "key": FirewallObjectVipArgs{...} }
type FirewallObjectVipMapInput interface {
	pulumi.Input

	ToFirewallObjectVipMapOutput() FirewallObjectVipMapOutput
	ToFirewallObjectVipMapOutputWithContext(context.Context) FirewallObjectVipMapOutput
}

type FirewallObjectVipMap map[string]FirewallObjectVipInput

func (FirewallObjectVipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallObjectVip)(nil)).Elem()
}

func (i FirewallObjectVipMap) ToFirewallObjectVipMapOutput() FirewallObjectVipMapOutput {
	return i.ToFirewallObjectVipMapOutputWithContext(context.Background())
}

func (i FirewallObjectVipMap) ToFirewallObjectVipMapOutputWithContext(ctx context.Context) FirewallObjectVipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectVipMapOutput)
}

type FirewallObjectVipOutput struct{ *pulumi.OutputState }

func (FirewallObjectVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallObjectVip)(nil)).Elem()
}

func (o FirewallObjectVipOutput) ToFirewallObjectVipOutput() FirewallObjectVipOutput {
	return o
}

func (o FirewallObjectVipOutput) ToFirewallObjectVipOutputWithContext(ctx context.Context) FirewallObjectVipOutput {
	return o
}

// ADOM name. default is 'root'.
func (o FirewallObjectVipOutput) Adom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectVip) pulumi.StringPtrOutput { return v.Adom }).(pulumi.StringPtrOutput)
}

// Enable to respond to ARP requests for this virtual IP address. Enabled by default.
func (o FirewallObjectVipOutput) ArpReply() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectVip) pulumi.StringPtrOutput { return v.ArpReply }).(pulumi.StringPtrOutput)
}

// Comments.
func (o FirewallObjectVipOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectVip) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Enable/Disable config default value. enabled by default.
func (o FirewallObjectVipOutput) ConfigDefault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectVip) pulumi.StringPtrOutput { return v.ConfigDefault }).(pulumi.StringPtrOutput)
}

// Interface connected to the source network that receives the packets that will be forwarded to the destination network.
func (o FirewallObjectVipOutput) ExtIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectVip) pulumi.StringPtrOutput { return v.ExtIntf }).(pulumi.StringPtrOutput)
}

// IP address or address range on the external interface that you want to map to an address or address range on the destination network.
func (o FirewallObjectVipOutput) ExtIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectVip) pulumi.StringPtrOutput { return v.ExtIp }).(pulumi.StringPtrOutput)
}

// Mapped FQDN address name.
func (o FirewallObjectVipOutput) MappedAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectVip) pulumi.StringPtrOutput { return v.MappedAddr }).(pulumi.StringPtrOutput)
}

// Mapped Ip address.
func (o FirewallObjectVipOutput) MappedIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectVip) pulumi.StringPtrOutput { return v.MappedIp }).(pulumi.StringPtrOutput)
}

// Virtual IP name.
func (o FirewallObjectVipOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectVip) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Virtual IP type, Enum: ["static-nat", "dns-translation", "fqdn"]
func (o FirewallObjectVipOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectVip) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallObjectVipArrayOutput struct{ *pulumi.OutputState }

func (FirewallObjectVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallObjectVip)(nil)).Elem()
}

func (o FirewallObjectVipArrayOutput) ToFirewallObjectVipArrayOutput() FirewallObjectVipArrayOutput {
	return o
}

func (o FirewallObjectVipArrayOutput) ToFirewallObjectVipArrayOutputWithContext(ctx context.Context) FirewallObjectVipArrayOutput {
	return o
}

func (o FirewallObjectVipArrayOutput) Index(i pulumi.IntInput) FirewallObjectVipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallObjectVip {
		return vs[0].([]*FirewallObjectVip)[vs[1].(int)]
	}).(FirewallObjectVipOutput)
}

type FirewallObjectVipMapOutput struct{ *pulumi.OutputState }

func (FirewallObjectVipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallObjectVip)(nil)).Elem()
}

func (o FirewallObjectVipMapOutput) ToFirewallObjectVipMapOutput() FirewallObjectVipMapOutput {
	return o
}

func (o FirewallObjectVipMapOutput) ToFirewallObjectVipMapOutputWithContext(ctx context.Context) FirewallObjectVipMapOutput {
	return o
}

func (o FirewallObjectVipMapOutput) MapIndex(k pulumi.StringInput) FirewallObjectVipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallObjectVip {
		return vs[0].(map[string]*FirewallObjectVip)[vs[1].(string)]
	}).(FirewallObjectVipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectVipInput)(nil)).Elem(), &FirewallObjectVip{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectVipArrayInput)(nil)).Elem(), FirewallObjectVipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectVipMapInput)(nil)).Elem(), FirewallObjectVipMap{})
	pulumi.RegisterOutputType(FirewallObjectVipOutput{})
	pulumi.RegisterOutputType(FirewallObjectVipArrayOutput{})
	pulumi.RegisterOutputType(FirewallObjectVipMapOutput{})
}
