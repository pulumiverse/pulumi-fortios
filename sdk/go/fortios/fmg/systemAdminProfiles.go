// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fmg

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// This resource supports Create/Read/Update/Delete admin profiles for FortiManager
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/fmg"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fmg.NewSystemAdminProfiles(ctx, "test1", &fmg.SystemAdminProfilesArgs{
//				AdomPolicyPackages:                  pulumi.String("read"),
//				AdomSwitch:                          pulumi.String("read"),
//				Assignment:                          pulumi.String("read"),
//				ConfigRetrieve:                      pulumi.String("read"),
//				ConfigRevert:                        pulumi.String("read"),
//				ConsistencyCheck:                    pulumi.String("read-write"),
//				DeployManagement:                    pulumi.String("read"),
//				Description:                         pulumi.String("11"),
//				DeviceAp:                            pulumi.String("none"),
//				DeviceConfig:                        pulumi.String("read"),
//				DeviceForticlient:                   pulumi.String("read"),
//				DeviceFortiswitch:                   pulumi.String("read"),
//				DeviceManager:                       pulumi.String("read-write"),
//				DeviceOperation:                     pulumi.String("read"),
//				DeviceProfile:                       pulumi.String("read"),
//				DeviceRevisionDeletion:              pulumi.String("read"),
//				DeviceWanLinkLoadBalance:            pulumi.String("read"),
//				FortiguardCenter:                    pulumi.String("read"),
//				FortiguardCenterAdvanced:            pulumi.String("read"),
//				FortiguardCenterFirmwareManagerment: pulumi.String("read"),
//				FortiguardCenterLicensing:           pulumi.String("read"),
//				GlobalPolicyPackages:                pulumi.String("read-write"),
//				ImportPolicyPackages:                pulumi.String("read"),
//				IntfMapping:                         pulumi.String("read-write"),
//				LogViewer:                           pulumi.String("read"),
//				PolicyObjects:                       pulumi.String("read-write"),
//				Profileid:                           pulumi.String("terraform-test1"),
//				SetInstallTargets:                   pulumi.String("read-write"),
//				SystemSetting:                       pulumi.String("read"),
//				TerminalAccess:                      pulumi.String("read"),
//				VpnManager:                          pulumi.String("read"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SystemAdminProfiles struct {
	pulumi.CustomResourceState

	// Adom policy packages.
	AdomPolicyPackages pulumi.StringPtrOutput `pulumi:"adomPolicyPackages"`
	// Administrator Domain.
	AdomSwitch pulumi.StringPtrOutput `pulumi:"adomSwitch"`
	// Assignment Permission.
	Assignment pulumi.StringPtrOutput `pulumi:"assignment"`
	// Configuration Retrieve.
	ConfigRetrieve pulumi.StringPtrOutput `pulumi:"configRetrieve"`
	// Revert Configuration from Revision History.
	ConfigRevert pulumi.StringPtrOutput `pulumi:"configRevert"`
	// Consistency check.
	ConsistencyCheck pulumi.StringPtrOutput `pulumi:"consistencyCheck"`
	// Install to devices.
	DeployManagement pulumi.StringPtrOutput `pulumi:"deployManagement"`
	// Description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Manage AP.
	DeviceAp pulumi.StringPtrOutput `pulumi:"deviceAp"`
	// Manage device configurations.
	DeviceConfig pulumi.StringPtrOutput `pulumi:"deviceConfig"`
	// Manage FortiClient.
	DeviceForticlient pulumi.StringPtrOutput `pulumi:"deviceForticlient"`
	// Manage FortiSwitch.
	DeviceFortiswitch pulumi.StringPtrOutput `pulumi:"deviceFortiswitch"`
	// Device Manager.
	DeviceManager pulumi.StringPtrOutput `pulumi:"deviceManager"`
	// Device add/delete/edit.
	DeviceOperation pulumi.StringPtrOutput `pulumi:"deviceOperation"`
	// Device profile permission.
	DeviceProfile pulumi.StringPtrOutput `pulumi:"deviceProfile"`
	// Delete device revision.
	DeviceRevisionDeletion pulumi.StringPtrOutput `pulumi:"deviceRevisionDeletion"`
	// Manage WAN link load balance.
	DeviceWanLinkLoadBalance pulumi.StringPtrOutput `pulumi:"deviceWanLinkLoadBalance"`
	// FortiGuard Center.
	FortiguardCenter pulumi.StringPtrOutput `pulumi:"fortiguardCenter"`
	// FortiGuard Center Advanced.
	FortiguardCenterAdvanced pulumi.StringPtrOutput `pulumi:"fortiguardCenterAdvanced"`
	// FortiGuard Center Firmware Managerment.
	FortiguardCenterFirmwareManagerment pulumi.StringPtrOutput `pulumi:"fortiguardCenterFirmwareManagerment"`
	// FortiGuard Center Licensing.
	FortiguardCenterLicensing pulumi.StringPtrOutput `pulumi:"fortiguardCenterLicensing"`
	// Global policy packages.
	GlobalPolicyPackages pulumi.StringPtrOutput `pulumi:"globalPolicyPackages"`
	// Import Policy Package.
	ImportPolicyPackages pulumi.StringPtrOutput `pulumi:"importPolicyPackages"`
	// Interface Mapping.
	IntfMapping pulumi.StringPtrOutput `pulumi:"intfMapping"`
	// Log Viewer.
	LogViewer pulumi.StringPtrOutput `pulumi:"logViewer"`
	// Policy objects permission.
	PolicyObjects pulumi.StringPtrOutput `pulumi:"policyObjects"`
	// Profile name.
	Profileid pulumi.StringOutput `pulumi:"profileid"`
	// Edit installation targets.
	SetInstallTargets pulumi.StringPtrOutput `pulumi:"setInstallTargets"`
	// System Setting.
	SystemSetting pulumi.StringPtrOutput `pulumi:"systemSetting"`
	// Terminal access.
	TerminalAccess pulumi.StringPtrOutput `pulumi:"terminalAccess"`
	// VPN Manager.
	VpnManager pulumi.StringPtrOutput `pulumi:"vpnManager"`
}

// NewSystemAdminProfiles registers a new resource with the given unique name, arguments, and options.
func NewSystemAdminProfiles(ctx *pulumi.Context,
	name string, args *SystemAdminProfilesArgs, opts ...pulumi.ResourceOption) (*SystemAdminProfiles, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Profileid == nil {
		return nil, errors.New("invalid value for required argument 'Profileid'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemAdminProfiles
	err := ctx.RegisterResource("fortios:fmg/systemAdminProfiles:SystemAdminProfiles", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemAdminProfiles gets an existing SystemAdminProfiles resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemAdminProfiles(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemAdminProfilesState, opts ...pulumi.ResourceOption) (*SystemAdminProfiles, error) {
	var resource SystemAdminProfiles
	err := ctx.ReadResource("fortios:fmg/systemAdminProfiles:SystemAdminProfiles", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemAdminProfiles resources.
type systemAdminProfilesState struct {
	// Adom policy packages.
	AdomPolicyPackages *string `pulumi:"adomPolicyPackages"`
	// Administrator Domain.
	AdomSwitch *string `pulumi:"adomSwitch"`
	// Assignment Permission.
	Assignment *string `pulumi:"assignment"`
	// Configuration Retrieve.
	ConfigRetrieve *string `pulumi:"configRetrieve"`
	// Revert Configuration from Revision History.
	ConfigRevert *string `pulumi:"configRevert"`
	// Consistency check.
	ConsistencyCheck *string `pulumi:"consistencyCheck"`
	// Install to devices.
	DeployManagement *string `pulumi:"deployManagement"`
	// Description.
	Description *string `pulumi:"description"`
	// Manage AP.
	DeviceAp *string `pulumi:"deviceAp"`
	// Manage device configurations.
	DeviceConfig *string `pulumi:"deviceConfig"`
	// Manage FortiClient.
	DeviceForticlient *string `pulumi:"deviceForticlient"`
	// Manage FortiSwitch.
	DeviceFortiswitch *string `pulumi:"deviceFortiswitch"`
	// Device Manager.
	DeviceManager *string `pulumi:"deviceManager"`
	// Device add/delete/edit.
	DeviceOperation *string `pulumi:"deviceOperation"`
	// Device profile permission.
	DeviceProfile *string `pulumi:"deviceProfile"`
	// Delete device revision.
	DeviceRevisionDeletion *string `pulumi:"deviceRevisionDeletion"`
	// Manage WAN link load balance.
	DeviceWanLinkLoadBalance *string `pulumi:"deviceWanLinkLoadBalance"`
	// FortiGuard Center.
	FortiguardCenter *string `pulumi:"fortiguardCenter"`
	// FortiGuard Center Advanced.
	FortiguardCenterAdvanced *string `pulumi:"fortiguardCenterAdvanced"`
	// FortiGuard Center Firmware Managerment.
	FortiguardCenterFirmwareManagerment *string `pulumi:"fortiguardCenterFirmwareManagerment"`
	// FortiGuard Center Licensing.
	FortiguardCenterLicensing *string `pulumi:"fortiguardCenterLicensing"`
	// Global policy packages.
	GlobalPolicyPackages *string `pulumi:"globalPolicyPackages"`
	// Import Policy Package.
	ImportPolicyPackages *string `pulumi:"importPolicyPackages"`
	// Interface Mapping.
	IntfMapping *string `pulumi:"intfMapping"`
	// Log Viewer.
	LogViewer *string `pulumi:"logViewer"`
	// Policy objects permission.
	PolicyObjects *string `pulumi:"policyObjects"`
	// Profile name.
	Profileid *string `pulumi:"profileid"`
	// Edit installation targets.
	SetInstallTargets *string `pulumi:"setInstallTargets"`
	// System Setting.
	SystemSetting *string `pulumi:"systemSetting"`
	// Terminal access.
	TerminalAccess *string `pulumi:"terminalAccess"`
	// VPN Manager.
	VpnManager *string `pulumi:"vpnManager"`
}

type SystemAdminProfilesState struct {
	// Adom policy packages.
	AdomPolicyPackages pulumi.StringPtrInput
	// Administrator Domain.
	AdomSwitch pulumi.StringPtrInput
	// Assignment Permission.
	Assignment pulumi.StringPtrInput
	// Configuration Retrieve.
	ConfigRetrieve pulumi.StringPtrInput
	// Revert Configuration from Revision History.
	ConfigRevert pulumi.StringPtrInput
	// Consistency check.
	ConsistencyCheck pulumi.StringPtrInput
	// Install to devices.
	DeployManagement pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// Manage AP.
	DeviceAp pulumi.StringPtrInput
	// Manage device configurations.
	DeviceConfig pulumi.StringPtrInput
	// Manage FortiClient.
	DeviceForticlient pulumi.StringPtrInput
	// Manage FortiSwitch.
	DeviceFortiswitch pulumi.StringPtrInput
	// Device Manager.
	DeviceManager pulumi.StringPtrInput
	// Device add/delete/edit.
	DeviceOperation pulumi.StringPtrInput
	// Device profile permission.
	DeviceProfile pulumi.StringPtrInput
	// Delete device revision.
	DeviceRevisionDeletion pulumi.StringPtrInput
	// Manage WAN link load balance.
	DeviceWanLinkLoadBalance pulumi.StringPtrInput
	// FortiGuard Center.
	FortiguardCenter pulumi.StringPtrInput
	// FortiGuard Center Advanced.
	FortiguardCenterAdvanced pulumi.StringPtrInput
	// FortiGuard Center Firmware Managerment.
	FortiguardCenterFirmwareManagerment pulumi.StringPtrInput
	// FortiGuard Center Licensing.
	FortiguardCenterLicensing pulumi.StringPtrInput
	// Global policy packages.
	GlobalPolicyPackages pulumi.StringPtrInput
	// Import Policy Package.
	ImportPolicyPackages pulumi.StringPtrInput
	// Interface Mapping.
	IntfMapping pulumi.StringPtrInput
	// Log Viewer.
	LogViewer pulumi.StringPtrInput
	// Policy objects permission.
	PolicyObjects pulumi.StringPtrInput
	// Profile name.
	Profileid pulumi.StringPtrInput
	// Edit installation targets.
	SetInstallTargets pulumi.StringPtrInput
	// System Setting.
	SystemSetting pulumi.StringPtrInput
	// Terminal access.
	TerminalAccess pulumi.StringPtrInput
	// VPN Manager.
	VpnManager pulumi.StringPtrInput
}

func (SystemAdminProfilesState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAdminProfilesState)(nil)).Elem()
}

type systemAdminProfilesArgs struct {
	// Adom policy packages.
	AdomPolicyPackages *string `pulumi:"adomPolicyPackages"`
	// Administrator Domain.
	AdomSwitch *string `pulumi:"adomSwitch"`
	// Assignment Permission.
	Assignment *string `pulumi:"assignment"`
	// Configuration Retrieve.
	ConfigRetrieve *string `pulumi:"configRetrieve"`
	// Revert Configuration from Revision History.
	ConfigRevert *string `pulumi:"configRevert"`
	// Consistency check.
	ConsistencyCheck *string `pulumi:"consistencyCheck"`
	// Install to devices.
	DeployManagement *string `pulumi:"deployManagement"`
	// Description.
	Description *string `pulumi:"description"`
	// Manage AP.
	DeviceAp *string `pulumi:"deviceAp"`
	// Manage device configurations.
	DeviceConfig *string `pulumi:"deviceConfig"`
	// Manage FortiClient.
	DeviceForticlient *string `pulumi:"deviceForticlient"`
	// Manage FortiSwitch.
	DeviceFortiswitch *string `pulumi:"deviceFortiswitch"`
	// Device Manager.
	DeviceManager *string `pulumi:"deviceManager"`
	// Device add/delete/edit.
	DeviceOperation *string `pulumi:"deviceOperation"`
	// Device profile permission.
	DeviceProfile *string `pulumi:"deviceProfile"`
	// Delete device revision.
	DeviceRevisionDeletion *string `pulumi:"deviceRevisionDeletion"`
	// Manage WAN link load balance.
	DeviceWanLinkLoadBalance *string `pulumi:"deviceWanLinkLoadBalance"`
	// FortiGuard Center.
	FortiguardCenter *string `pulumi:"fortiguardCenter"`
	// FortiGuard Center Advanced.
	FortiguardCenterAdvanced *string `pulumi:"fortiguardCenterAdvanced"`
	// FortiGuard Center Firmware Managerment.
	FortiguardCenterFirmwareManagerment *string `pulumi:"fortiguardCenterFirmwareManagerment"`
	// FortiGuard Center Licensing.
	FortiguardCenterLicensing *string `pulumi:"fortiguardCenterLicensing"`
	// Global policy packages.
	GlobalPolicyPackages *string `pulumi:"globalPolicyPackages"`
	// Import Policy Package.
	ImportPolicyPackages *string `pulumi:"importPolicyPackages"`
	// Interface Mapping.
	IntfMapping *string `pulumi:"intfMapping"`
	// Log Viewer.
	LogViewer *string `pulumi:"logViewer"`
	// Policy objects permission.
	PolicyObjects *string `pulumi:"policyObjects"`
	// Profile name.
	Profileid string `pulumi:"profileid"`
	// Edit installation targets.
	SetInstallTargets *string `pulumi:"setInstallTargets"`
	// System Setting.
	SystemSetting *string `pulumi:"systemSetting"`
	// Terminal access.
	TerminalAccess *string `pulumi:"terminalAccess"`
	// VPN Manager.
	VpnManager *string `pulumi:"vpnManager"`
}

// The set of arguments for constructing a SystemAdminProfiles resource.
type SystemAdminProfilesArgs struct {
	// Adom policy packages.
	AdomPolicyPackages pulumi.StringPtrInput
	// Administrator Domain.
	AdomSwitch pulumi.StringPtrInput
	// Assignment Permission.
	Assignment pulumi.StringPtrInput
	// Configuration Retrieve.
	ConfigRetrieve pulumi.StringPtrInput
	// Revert Configuration from Revision History.
	ConfigRevert pulumi.StringPtrInput
	// Consistency check.
	ConsistencyCheck pulumi.StringPtrInput
	// Install to devices.
	DeployManagement pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// Manage AP.
	DeviceAp pulumi.StringPtrInput
	// Manage device configurations.
	DeviceConfig pulumi.StringPtrInput
	// Manage FortiClient.
	DeviceForticlient pulumi.StringPtrInput
	// Manage FortiSwitch.
	DeviceFortiswitch pulumi.StringPtrInput
	// Device Manager.
	DeviceManager pulumi.StringPtrInput
	// Device add/delete/edit.
	DeviceOperation pulumi.StringPtrInput
	// Device profile permission.
	DeviceProfile pulumi.StringPtrInput
	// Delete device revision.
	DeviceRevisionDeletion pulumi.StringPtrInput
	// Manage WAN link load balance.
	DeviceWanLinkLoadBalance pulumi.StringPtrInput
	// FortiGuard Center.
	FortiguardCenter pulumi.StringPtrInput
	// FortiGuard Center Advanced.
	FortiguardCenterAdvanced pulumi.StringPtrInput
	// FortiGuard Center Firmware Managerment.
	FortiguardCenterFirmwareManagerment pulumi.StringPtrInput
	// FortiGuard Center Licensing.
	FortiguardCenterLicensing pulumi.StringPtrInput
	// Global policy packages.
	GlobalPolicyPackages pulumi.StringPtrInput
	// Import Policy Package.
	ImportPolicyPackages pulumi.StringPtrInput
	// Interface Mapping.
	IntfMapping pulumi.StringPtrInput
	// Log Viewer.
	LogViewer pulumi.StringPtrInput
	// Policy objects permission.
	PolicyObjects pulumi.StringPtrInput
	// Profile name.
	Profileid pulumi.StringInput
	// Edit installation targets.
	SetInstallTargets pulumi.StringPtrInput
	// System Setting.
	SystemSetting pulumi.StringPtrInput
	// Terminal access.
	TerminalAccess pulumi.StringPtrInput
	// VPN Manager.
	VpnManager pulumi.StringPtrInput
}

func (SystemAdminProfilesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAdminProfilesArgs)(nil)).Elem()
}

type SystemAdminProfilesInput interface {
	pulumi.Input

	ToSystemAdminProfilesOutput() SystemAdminProfilesOutput
	ToSystemAdminProfilesOutputWithContext(ctx context.Context) SystemAdminProfilesOutput
}

func (*SystemAdminProfiles) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAdminProfiles)(nil)).Elem()
}

func (i *SystemAdminProfiles) ToSystemAdminProfilesOutput() SystemAdminProfilesOutput {
	return i.ToSystemAdminProfilesOutputWithContext(context.Background())
}

func (i *SystemAdminProfiles) ToSystemAdminProfilesOutputWithContext(ctx context.Context) SystemAdminProfilesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminProfilesOutput)
}

// SystemAdminProfilesArrayInput is an input type that accepts SystemAdminProfilesArray and SystemAdminProfilesArrayOutput values.
// You can construct a concrete instance of `SystemAdminProfilesArrayInput` via:
//
//	SystemAdminProfilesArray{ SystemAdminProfilesArgs{...} }
type SystemAdminProfilesArrayInput interface {
	pulumi.Input

	ToSystemAdminProfilesArrayOutput() SystemAdminProfilesArrayOutput
	ToSystemAdminProfilesArrayOutputWithContext(context.Context) SystemAdminProfilesArrayOutput
}

type SystemAdminProfilesArray []SystemAdminProfilesInput

func (SystemAdminProfilesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAdminProfiles)(nil)).Elem()
}

func (i SystemAdminProfilesArray) ToSystemAdminProfilesArrayOutput() SystemAdminProfilesArrayOutput {
	return i.ToSystemAdminProfilesArrayOutputWithContext(context.Background())
}

func (i SystemAdminProfilesArray) ToSystemAdminProfilesArrayOutputWithContext(ctx context.Context) SystemAdminProfilesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminProfilesArrayOutput)
}

// SystemAdminProfilesMapInput is an input type that accepts SystemAdminProfilesMap and SystemAdminProfilesMapOutput values.
// You can construct a concrete instance of `SystemAdminProfilesMapInput` via:
//
//	SystemAdminProfilesMap{ "key": SystemAdminProfilesArgs{...} }
type SystemAdminProfilesMapInput interface {
	pulumi.Input

	ToSystemAdminProfilesMapOutput() SystemAdminProfilesMapOutput
	ToSystemAdminProfilesMapOutputWithContext(context.Context) SystemAdminProfilesMapOutput
}

type SystemAdminProfilesMap map[string]SystemAdminProfilesInput

func (SystemAdminProfilesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAdminProfiles)(nil)).Elem()
}

func (i SystemAdminProfilesMap) ToSystemAdminProfilesMapOutput() SystemAdminProfilesMapOutput {
	return i.ToSystemAdminProfilesMapOutputWithContext(context.Background())
}

func (i SystemAdminProfilesMap) ToSystemAdminProfilesMapOutputWithContext(ctx context.Context) SystemAdminProfilesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminProfilesMapOutput)
}

type SystemAdminProfilesOutput struct{ *pulumi.OutputState }

func (SystemAdminProfilesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAdminProfiles)(nil)).Elem()
}

func (o SystemAdminProfilesOutput) ToSystemAdminProfilesOutput() SystemAdminProfilesOutput {
	return o
}

func (o SystemAdminProfilesOutput) ToSystemAdminProfilesOutputWithContext(ctx context.Context) SystemAdminProfilesOutput {
	return o
}

// Adom policy packages.
func (o SystemAdminProfilesOutput) AdomPolicyPackages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.AdomPolicyPackages }).(pulumi.StringPtrOutput)
}

// Administrator Domain.
func (o SystemAdminProfilesOutput) AdomSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.AdomSwitch }).(pulumi.StringPtrOutput)
}

// Assignment Permission.
func (o SystemAdminProfilesOutput) Assignment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.Assignment }).(pulumi.StringPtrOutput)
}

// Configuration Retrieve.
func (o SystemAdminProfilesOutput) ConfigRetrieve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.ConfigRetrieve }).(pulumi.StringPtrOutput)
}

// Revert Configuration from Revision History.
func (o SystemAdminProfilesOutput) ConfigRevert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.ConfigRevert }).(pulumi.StringPtrOutput)
}

// Consistency check.
func (o SystemAdminProfilesOutput) ConsistencyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.ConsistencyCheck }).(pulumi.StringPtrOutput)
}

// Install to devices.
func (o SystemAdminProfilesOutput) DeployManagement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.DeployManagement }).(pulumi.StringPtrOutput)
}

// Description.
func (o SystemAdminProfilesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Manage AP.
func (o SystemAdminProfilesOutput) DeviceAp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceAp }).(pulumi.StringPtrOutput)
}

// Manage device configurations.
func (o SystemAdminProfilesOutput) DeviceConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceConfig }).(pulumi.StringPtrOutput)
}

// Manage FortiClient.
func (o SystemAdminProfilesOutput) DeviceForticlient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceForticlient }).(pulumi.StringPtrOutput)
}

// Manage FortiSwitch.
func (o SystemAdminProfilesOutput) DeviceFortiswitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceFortiswitch }).(pulumi.StringPtrOutput)
}

// Device Manager.
func (o SystemAdminProfilesOutput) DeviceManager() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceManager }).(pulumi.StringPtrOutput)
}

// Device add/delete/edit.
func (o SystemAdminProfilesOutput) DeviceOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceOperation }).(pulumi.StringPtrOutput)
}

// Device profile permission.
func (o SystemAdminProfilesOutput) DeviceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceProfile }).(pulumi.StringPtrOutput)
}

// Delete device revision.
func (o SystemAdminProfilesOutput) DeviceRevisionDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceRevisionDeletion }).(pulumi.StringPtrOutput)
}

// Manage WAN link load balance.
func (o SystemAdminProfilesOutput) DeviceWanLinkLoadBalance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceWanLinkLoadBalance }).(pulumi.StringPtrOutput)
}

// FortiGuard Center.
func (o SystemAdminProfilesOutput) FortiguardCenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.FortiguardCenter }).(pulumi.StringPtrOutput)
}

// FortiGuard Center Advanced.
func (o SystemAdminProfilesOutput) FortiguardCenterAdvanced() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.FortiguardCenterAdvanced }).(pulumi.StringPtrOutput)
}

// FortiGuard Center Firmware Managerment.
func (o SystemAdminProfilesOutput) FortiguardCenterFirmwareManagerment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.FortiguardCenterFirmwareManagerment }).(pulumi.StringPtrOutput)
}

// FortiGuard Center Licensing.
func (o SystemAdminProfilesOutput) FortiguardCenterLicensing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.FortiguardCenterLicensing }).(pulumi.StringPtrOutput)
}

// Global policy packages.
func (o SystemAdminProfilesOutput) GlobalPolicyPackages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.GlobalPolicyPackages }).(pulumi.StringPtrOutput)
}

// Import Policy Package.
func (o SystemAdminProfilesOutput) ImportPolicyPackages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.ImportPolicyPackages }).(pulumi.StringPtrOutput)
}

// Interface Mapping.
func (o SystemAdminProfilesOutput) IntfMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.IntfMapping }).(pulumi.StringPtrOutput)
}

// Log Viewer.
func (o SystemAdminProfilesOutput) LogViewer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.LogViewer }).(pulumi.StringPtrOutput)
}

// Policy objects permission.
func (o SystemAdminProfilesOutput) PolicyObjects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.PolicyObjects }).(pulumi.StringPtrOutput)
}

// Profile name.
func (o SystemAdminProfilesOutput) Profileid() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringOutput { return v.Profileid }).(pulumi.StringOutput)
}

// Edit installation targets.
func (o SystemAdminProfilesOutput) SetInstallTargets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.SetInstallTargets }).(pulumi.StringPtrOutput)
}

// System Setting.
func (o SystemAdminProfilesOutput) SystemSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.SystemSetting }).(pulumi.StringPtrOutput)
}

// Terminal access.
func (o SystemAdminProfilesOutput) TerminalAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.TerminalAccess }).(pulumi.StringPtrOutput)
}

// VPN Manager.
func (o SystemAdminProfilesOutput) VpnManager() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdminProfiles) pulumi.StringPtrOutput { return v.VpnManager }).(pulumi.StringPtrOutput)
}

type SystemAdminProfilesArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminProfilesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAdminProfiles)(nil)).Elem()
}

func (o SystemAdminProfilesArrayOutput) ToSystemAdminProfilesArrayOutput() SystemAdminProfilesArrayOutput {
	return o
}

func (o SystemAdminProfilesArrayOutput) ToSystemAdminProfilesArrayOutputWithContext(ctx context.Context) SystemAdminProfilesArrayOutput {
	return o
}

func (o SystemAdminProfilesArrayOutput) Index(i pulumi.IntInput) SystemAdminProfilesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemAdminProfiles {
		return vs[0].([]*SystemAdminProfiles)[vs[1].(int)]
	}).(SystemAdminProfilesOutput)
}

type SystemAdminProfilesMapOutput struct{ *pulumi.OutputState }

func (SystemAdminProfilesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAdminProfiles)(nil)).Elem()
}

func (o SystemAdminProfilesMapOutput) ToSystemAdminProfilesMapOutput() SystemAdminProfilesMapOutput {
	return o
}

func (o SystemAdminProfilesMapOutput) ToSystemAdminProfilesMapOutputWithContext(ctx context.Context) SystemAdminProfilesMapOutput {
	return o
}

func (o SystemAdminProfilesMapOutput) MapIndex(k pulumi.StringInput) SystemAdminProfilesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemAdminProfiles {
		return vs[0].(map[string]*SystemAdminProfiles)[vs[1].(string)]
	}).(SystemAdminProfilesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminProfilesInput)(nil)).Elem(), &SystemAdminProfiles{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminProfilesArrayInput)(nil)).Elem(), SystemAdminProfilesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminProfilesMapInput)(nil)).Elem(), SystemAdminProfilesMap{})
	pulumi.RegisterOutputType(SystemAdminProfilesOutput{})
	pulumi.RegisterOutputType(SystemAdminProfilesArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminProfilesMapOutput{})
}
