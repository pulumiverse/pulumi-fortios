// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

var _ = internal.GetEnvOrDefault

type Accessproxy6ApiGateway6 struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications []Accessproxy6ApiGateway6Application `pulumi:"applications"`
	// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
	H2Support *string `pulumi:"h2Support"`
	// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
	H3Support *string `pulumi:"h3Support"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge *int `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain *string `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost *string `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration *int `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath *string `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare *string `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure *string `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id *int `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod *string `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence *string `pulumi:"persistence"`
	// QUIC setting. The structure of `quic` block is documented below.
	Quic *Accessproxy6ApiGateway6Quic `pulumi:"quic"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers []Accessproxy6ApiGateway6Realserver `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect *string `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer *string `pulumi:"samlServer"`
	// Service.
	Service *string `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm *string `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites []Accessproxy6ApiGateway6SslCipherSuite `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits *string `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion *string `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion *string `pulumi:"sslMinVersion"`
	// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
	SslRenegotiation *string `pulumi:"sslRenegotiation"`
	// SSL-VPN web portal.
	SslVpnWebPortal *string `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap *string `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType *string `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost *string `pulumi:"virtualHost"`
}

// Accessproxy6ApiGateway6Input is an input type that accepts Accessproxy6ApiGateway6Args and Accessproxy6ApiGateway6Output values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6Input` via:
//
//	Accessproxy6ApiGateway6Args{...}
type Accessproxy6ApiGateway6Input interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6Output() Accessproxy6ApiGateway6Output
	ToAccessproxy6ApiGateway6OutputWithContext(context.Context) Accessproxy6ApiGateway6Output
}

type Accessproxy6ApiGateway6Args struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications Accessproxy6ApiGateway6ApplicationArrayInput `pulumi:"applications"`
	// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
	H2Support pulumi.StringPtrInput `pulumi:"h2Support"`
	// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
	H3Support pulumi.StringPtrInput `pulumi:"h3Support"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge pulumi.IntPtrInput `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain pulumi.StringPtrInput `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost pulumi.StringPtrInput `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration pulumi.IntPtrInput `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath pulumi.StringPtrInput `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare pulumi.StringPtrInput `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure pulumi.StringPtrInput `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod pulumi.StringPtrInput `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence pulumi.StringPtrInput `pulumi:"persistence"`
	// QUIC setting. The structure of `quic` block is documented below.
	Quic Accessproxy6ApiGateway6QuicPtrInput `pulumi:"quic"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers Accessproxy6ApiGateway6RealserverArrayInput `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect pulumi.StringPtrInput `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer pulumi.StringPtrInput `pulumi:"samlServer"`
	// Service.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringPtrInput `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites Accessproxy6ApiGateway6SslCipherSuiteArrayInput `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits pulumi.StringPtrInput `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion pulumi.StringPtrInput `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion pulumi.StringPtrInput `pulumi:"sslMinVersion"`
	// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
	SslRenegotiation pulumi.StringPtrInput `pulumi:"sslRenegotiation"`
	// SSL-VPN web portal.
	SslVpnWebPortal pulumi.StringPtrInput `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap pulumi.StringPtrInput `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType pulumi.StringPtrInput `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost pulumi.StringPtrInput `pulumi:"virtualHost"`
}

func (Accessproxy6ApiGateway6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6)(nil)).Elem()
}

func (i Accessproxy6ApiGateway6Args) ToAccessproxy6ApiGateway6Output() Accessproxy6ApiGateway6Output {
	return i.ToAccessproxy6ApiGateway6OutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6Args) ToAccessproxy6ApiGateway6OutputWithContext(ctx context.Context) Accessproxy6ApiGateway6Output {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6Output)
}

// Accessproxy6ApiGateway6ArrayInput is an input type that accepts Accessproxy6ApiGateway6Array and Accessproxy6ApiGateway6ArrayOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6ArrayInput` via:
//
//	Accessproxy6ApiGateway6Array{ Accessproxy6ApiGateway6Args{...} }
type Accessproxy6ApiGateway6ArrayInput interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6ArrayOutput() Accessproxy6ApiGateway6ArrayOutput
	ToAccessproxy6ApiGateway6ArrayOutputWithContext(context.Context) Accessproxy6ApiGateway6ArrayOutput
}

type Accessproxy6ApiGateway6Array []Accessproxy6ApiGateway6Input

func (Accessproxy6ApiGateway6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway6)(nil)).Elem()
}

func (i Accessproxy6ApiGateway6Array) ToAccessproxy6ApiGateway6ArrayOutput() Accessproxy6ApiGateway6ArrayOutput {
	return i.ToAccessproxy6ApiGateway6ArrayOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6Array) ToAccessproxy6ApiGateway6ArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6ArrayOutput)
}

type Accessproxy6ApiGateway6Output struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6Output) ToAccessproxy6ApiGateway6Output() Accessproxy6ApiGateway6Output {
	return o
}

func (o Accessproxy6ApiGateway6Output) ToAccessproxy6ApiGateway6OutputWithContext(ctx context.Context) Accessproxy6ApiGateway6Output {
	return o
}

// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
func (o Accessproxy6ApiGateway6Output) Applications() Accessproxy6ApiGateway6ApplicationArrayOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) []Accessproxy6ApiGateway6Application { return v.Applications }).(Accessproxy6ApiGateway6ApplicationArrayOutput)
}

// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGateway6Output) H2Support() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.H2Support }).(pulumi.StringPtrOutput)
}

// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGateway6Output) H3Support() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.H3Support }).(pulumi.StringPtrOutput)
}

// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
func (o Accessproxy6ApiGateway6Output) HttpCookieAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *int { return v.HttpCookieAge }).(pulumi.IntPtrOutput)
}

// Domain that HTTP cookie persistence should apply to.
func (o Accessproxy6ApiGateway6Output) HttpCookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.HttpCookieDomain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
func (o Accessproxy6ApiGateway6Output) HttpCookieDomainFromHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.HttpCookieDomainFromHost }).(pulumi.StringPtrOutput)
}

// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
func (o Accessproxy6ApiGateway6Output) HttpCookieGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *int { return v.HttpCookieGeneration }).(pulumi.IntPtrOutput)
}

// Limit HTTP cookie persistence to the specified path.
func (o Accessproxy6ApiGateway6Output) HttpCookiePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.HttpCookiePath }).(pulumi.StringPtrOutput)
}

// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
func (o Accessproxy6ApiGateway6Output) HttpCookieShare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.HttpCookieShare }).(pulumi.StringPtrOutput)
}

// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
func (o Accessproxy6ApiGateway6Output) HttpsCookieSecure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.HttpsCookieSecure }).(pulumi.StringPtrOutput)
}

// API Gateway ID.
func (o Accessproxy6ApiGateway6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
func (o Accessproxy6ApiGateway6Output) LdbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.LdbMethod }).(pulumi.StringPtrOutput)
}

// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
func (o Accessproxy6ApiGateway6Output) Persistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.Persistence }).(pulumi.StringPtrOutput)
}

// QUIC setting. The structure of `quic` block is documented below.
func (o Accessproxy6ApiGateway6Output) Quic() Accessproxy6ApiGateway6QuicPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *Accessproxy6ApiGateway6Quic { return v.Quic }).(Accessproxy6ApiGateway6QuicPtrOutput)
}

// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
func (o Accessproxy6ApiGateway6Output) Realservers() Accessproxy6ApiGateway6RealserverArrayOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) []Accessproxy6ApiGateway6Realserver { return v.Realservers }).(Accessproxy6ApiGateway6RealserverArrayOutput)
}

// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
func (o Accessproxy6ApiGateway6Output) SamlRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.SamlRedirect }).(pulumi.StringPtrOutput)
}

// SAML service provider configuration for VIP authentication.
func (o Accessproxy6ApiGateway6Output) SamlServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.SamlServer }).(pulumi.StringPtrOutput)
}

// Service.
func (o Accessproxy6ApiGateway6Output) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
func (o Accessproxy6ApiGateway6Output) SslAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.SslAlgorithm }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
func (o Accessproxy6ApiGateway6Output) SslCipherSuites() Accessproxy6ApiGateway6SslCipherSuiteArrayOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) []Accessproxy6ApiGateway6SslCipherSuite { return v.SslCipherSuites }).(Accessproxy6ApiGateway6SslCipherSuiteArrayOutput)
}

// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
func (o Accessproxy6ApiGateway6Output) SslDhBits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.SslDhBits }).(pulumi.StringPtrOutput)
}

// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o Accessproxy6ApiGateway6Output) SslMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.SslMaxVersion }).(pulumi.StringPtrOutput)
}

// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o Accessproxy6ApiGateway6Output) SslMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.SslMinVersion }).(pulumi.StringPtrOutput)
}

// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGateway6Output) SslRenegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.SslRenegotiation }).(pulumi.StringPtrOutput)
}

// SSL-VPN web portal.
func (o Accessproxy6ApiGateway6Output) SslVpnWebPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.SslVpnWebPortal }).(pulumi.StringPtrOutput)
}

// URL pattern to match.
func (o Accessproxy6ApiGateway6Output) UrlMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.UrlMap }).(pulumi.StringPtrOutput)
}

// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
func (o Accessproxy6ApiGateway6Output) UrlMapType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.UrlMapType }).(pulumi.StringPtrOutput)
}

// Virtual host.
func (o Accessproxy6ApiGateway6Output) VirtualHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6) *string { return v.VirtualHost }).(pulumi.StringPtrOutput)
}

type Accessproxy6ApiGateway6ArrayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway6)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6ArrayOutput) ToAccessproxy6ApiGateway6ArrayOutput() Accessproxy6ApiGateway6ArrayOutput {
	return o
}

func (o Accessproxy6ApiGateway6ArrayOutput) ToAccessproxy6ApiGateway6ArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6ArrayOutput {
	return o
}

func (o Accessproxy6ApiGateway6ArrayOutput) Index(i pulumi.IntInput) Accessproxy6ApiGateway6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Accessproxy6ApiGateway6 {
		return vs[0].([]Accessproxy6ApiGateway6)[vs[1].(int)]
	}).(Accessproxy6ApiGateway6Output)
}

type Accessproxy6ApiGateway6Application struct {
	// SaaS application name.
	Name *string `pulumi:"name"`
}

// Accessproxy6ApiGateway6ApplicationInput is an input type that accepts Accessproxy6ApiGateway6ApplicationArgs and Accessproxy6ApiGateway6ApplicationOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6ApplicationInput` via:
//
//	Accessproxy6ApiGateway6ApplicationArgs{...}
type Accessproxy6ApiGateway6ApplicationInput interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6ApplicationOutput() Accessproxy6ApiGateway6ApplicationOutput
	ToAccessproxy6ApiGateway6ApplicationOutputWithContext(context.Context) Accessproxy6ApiGateway6ApplicationOutput
}

type Accessproxy6ApiGateway6ApplicationArgs struct {
	// SaaS application name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Accessproxy6ApiGateway6ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6Application)(nil)).Elem()
}

func (i Accessproxy6ApiGateway6ApplicationArgs) ToAccessproxy6ApiGateway6ApplicationOutput() Accessproxy6ApiGateway6ApplicationOutput {
	return i.ToAccessproxy6ApiGateway6ApplicationOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6ApplicationArgs) ToAccessproxy6ApiGateway6ApplicationOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6ApplicationOutput)
}

// Accessproxy6ApiGateway6ApplicationArrayInput is an input type that accepts Accessproxy6ApiGateway6ApplicationArray and Accessproxy6ApiGateway6ApplicationArrayOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6ApplicationArrayInput` via:
//
//	Accessproxy6ApiGateway6ApplicationArray{ Accessproxy6ApiGateway6ApplicationArgs{...} }
type Accessproxy6ApiGateway6ApplicationArrayInput interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6ApplicationArrayOutput() Accessproxy6ApiGateway6ApplicationArrayOutput
	ToAccessproxy6ApiGateway6ApplicationArrayOutputWithContext(context.Context) Accessproxy6ApiGateway6ApplicationArrayOutput
}

type Accessproxy6ApiGateway6ApplicationArray []Accessproxy6ApiGateway6ApplicationInput

func (Accessproxy6ApiGateway6ApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway6Application)(nil)).Elem()
}

func (i Accessproxy6ApiGateway6ApplicationArray) ToAccessproxy6ApiGateway6ApplicationArrayOutput() Accessproxy6ApiGateway6ApplicationArrayOutput {
	return i.ToAccessproxy6ApiGateway6ApplicationArrayOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6ApplicationArray) ToAccessproxy6ApiGateway6ApplicationArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6ApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6ApplicationArrayOutput)
}

type Accessproxy6ApiGateway6ApplicationOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6Application)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6ApplicationOutput) ToAccessproxy6ApiGateway6ApplicationOutput() Accessproxy6ApiGateway6ApplicationOutput {
	return o
}

func (o Accessproxy6ApiGateway6ApplicationOutput) ToAccessproxy6ApiGateway6ApplicationOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6ApplicationOutput {
	return o
}

// SaaS application name.
func (o Accessproxy6ApiGateway6ApplicationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Application) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Accessproxy6ApiGateway6ApplicationArrayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6ApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway6Application)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6ApplicationArrayOutput) ToAccessproxy6ApiGateway6ApplicationArrayOutput() Accessproxy6ApiGateway6ApplicationArrayOutput {
	return o
}

func (o Accessproxy6ApiGateway6ApplicationArrayOutput) ToAccessproxy6ApiGateway6ApplicationArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6ApplicationArrayOutput {
	return o
}

func (o Accessproxy6ApiGateway6ApplicationArrayOutput) Index(i pulumi.IntInput) Accessproxy6ApiGateway6ApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Accessproxy6ApiGateway6Application {
		return vs[0].([]Accessproxy6ApiGateway6Application)[vs[1].(int)]
	}).(Accessproxy6ApiGateway6ApplicationOutput)
}

type Accessproxy6ApiGateway6Quic struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent *int `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit *int `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration *string `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit *string `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay *int `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize *int `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout *int `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize *int `pulumi:"maxUdpPayloadSize"`
}

// Accessproxy6ApiGateway6QuicInput is an input type that accepts Accessproxy6ApiGateway6QuicArgs and Accessproxy6ApiGateway6QuicOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6QuicInput` via:
//
//	Accessproxy6ApiGateway6QuicArgs{...}
type Accessproxy6ApiGateway6QuicInput interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6QuicOutput() Accessproxy6ApiGateway6QuicOutput
	ToAccessproxy6ApiGateway6QuicOutputWithContext(context.Context) Accessproxy6ApiGateway6QuicOutput
}

type Accessproxy6ApiGateway6QuicArgs struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent pulumi.IntPtrInput `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit pulumi.IntPtrInput `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration pulumi.StringPtrInput `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit pulumi.StringPtrInput `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay pulumi.IntPtrInput `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize pulumi.IntPtrInput `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout pulumi.IntPtrInput `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize pulumi.IntPtrInput `pulumi:"maxUdpPayloadSize"`
}

func (Accessproxy6ApiGateway6QuicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6Quic)(nil)).Elem()
}

func (i Accessproxy6ApiGateway6QuicArgs) ToAccessproxy6ApiGateway6QuicOutput() Accessproxy6ApiGateway6QuicOutput {
	return i.ToAccessproxy6ApiGateway6QuicOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6QuicArgs) ToAccessproxy6ApiGateway6QuicOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6QuicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6QuicOutput)
}

func (i Accessproxy6ApiGateway6QuicArgs) ToAccessproxy6ApiGateway6QuicPtrOutput() Accessproxy6ApiGateway6QuicPtrOutput {
	return i.ToAccessproxy6ApiGateway6QuicPtrOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6QuicArgs) ToAccessproxy6ApiGateway6QuicPtrOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6QuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6QuicOutput).ToAccessproxy6ApiGateway6QuicPtrOutputWithContext(ctx)
}

// Accessproxy6ApiGateway6QuicPtrInput is an input type that accepts Accessproxy6ApiGateway6QuicArgs, Accessproxy6ApiGateway6QuicPtr and Accessproxy6ApiGateway6QuicPtrOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6QuicPtrInput` via:
//
//	        Accessproxy6ApiGateway6QuicArgs{...}
//
//	or:
//
//	        nil
type Accessproxy6ApiGateway6QuicPtrInput interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6QuicPtrOutput() Accessproxy6ApiGateway6QuicPtrOutput
	ToAccessproxy6ApiGateway6QuicPtrOutputWithContext(context.Context) Accessproxy6ApiGateway6QuicPtrOutput
}

type accessproxy6ApiGateway6QuicPtrType Accessproxy6ApiGateway6QuicArgs

func Accessproxy6ApiGateway6QuicPtr(v *Accessproxy6ApiGateway6QuicArgs) Accessproxy6ApiGateway6QuicPtrInput {
	return (*accessproxy6ApiGateway6QuicPtrType)(v)
}

func (*accessproxy6ApiGateway6QuicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Accessproxy6ApiGateway6Quic)(nil)).Elem()
}

func (i *accessproxy6ApiGateway6QuicPtrType) ToAccessproxy6ApiGateway6QuicPtrOutput() Accessproxy6ApiGateway6QuicPtrOutput {
	return i.ToAccessproxy6ApiGateway6QuicPtrOutputWithContext(context.Background())
}

func (i *accessproxy6ApiGateway6QuicPtrType) ToAccessproxy6ApiGateway6QuicPtrOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6QuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6QuicPtrOutput)
}

type Accessproxy6ApiGateway6QuicOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6QuicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6Quic)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6QuicOutput) ToAccessproxy6ApiGateway6QuicOutput() Accessproxy6ApiGateway6QuicOutput {
	return o
}

func (o Accessproxy6ApiGateway6QuicOutput) ToAccessproxy6ApiGateway6QuicOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6QuicOutput {
	return o
}

func (o Accessproxy6ApiGateway6QuicOutput) ToAccessproxy6ApiGateway6QuicPtrOutput() Accessproxy6ApiGateway6QuicPtrOutput {
	return o.ToAccessproxy6ApiGateway6QuicPtrOutputWithContext(context.Background())
}

func (o Accessproxy6ApiGateway6QuicOutput) ToAccessproxy6ApiGateway6QuicPtrOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6QuicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Accessproxy6ApiGateway6Quic) *Accessproxy6ApiGateway6Quic {
		return &v
	}).(Accessproxy6ApiGateway6QuicPtrOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o Accessproxy6ApiGateway6QuicOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Quic) *int { return v.AckDelayExponent }).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o Accessproxy6ApiGateway6QuicOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Quic) *int { return v.ActiveConnectionIdLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGateway6QuicOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Quic) *string { return v.ActiveMigration }).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGateway6QuicOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Quic) *string { return v.GreaseQuicBit }).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o Accessproxy6ApiGateway6QuicOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Quic) *int { return v.MaxAckDelay }).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o Accessproxy6ApiGateway6QuicOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Quic) *int { return v.MaxDatagramFrameSize }).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o Accessproxy6ApiGateway6QuicOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Quic) *int { return v.MaxIdleTimeout }).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o Accessproxy6ApiGateway6QuicOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Quic) *int { return v.MaxUdpPayloadSize }).(pulumi.IntPtrOutput)
}

type Accessproxy6ApiGateway6QuicPtrOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6QuicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Accessproxy6ApiGateway6Quic)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6QuicPtrOutput) ToAccessproxy6ApiGateway6QuicPtrOutput() Accessproxy6ApiGateway6QuicPtrOutput {
	return o
}

func (o Accessproxy6ApiGateway6QuicPtrOutput) ToAccessproxy6ApiGateway6QuicPtrOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6QuicPtrOutput {
	return o
}

func (o Accessproxy6ApiGateway6QuicPtrOutput) Elem() Accessproxy6ApiGateway6QuicOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGateway6Quic) Accessproxy6ApiGateway6Quic {
		if v != nil {
			return *v
		}
		var ret Accessproxy6ApiGateway6Quic
		return ret
	}).(Accessproxy6ApiGateway6QuicOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o Accessproxy6ApiGateway6QuicPtrOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.AckDelayExponent
	}).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o Accessproxy6ApiGateway6QuicPtrOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.ActiveConnectionIdLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGateway6QuicPtrOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGateway6Quic) *string {
		if v == nil {
			return nil
		}
		return v.ActiveMigration
	}).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGateway6QuicPtrOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGateway6Quic) *string {
		if v == nil {
			return nil
		}
		return v.GreaseQuicBit
	}).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o Accessproxy6ApiGateway6QuicPtrOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxAckDelay
	}).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o Accessproxy6ApiGateway6QuicPtrOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxDatagramFrameSize
	}).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o Accessproxy6ApiGateway6QuicPtrOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleTimeout
	}).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o Accessproxy6ApiGateway6QuicPtrOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxUdpPayloadSize
	}).(pulumi.IntPtrOutput)
}

type Accessproxy6ApiGateway6Realserver struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType *string `pulumi:"addrType"`
	// Address or address group of the real server.
	Address *string `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain *string `pulumi:"domain"`
	// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
	ExternalAuth *string `pulumi:"externalAuth"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck *string `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto *string `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval *string `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IPv6 address of the real server.
	Ip *string `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport *string `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port *int `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert *string `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation *string `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys []Accessproxy6ApiGateway6RealserverSshHostKey `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost *string `pulumi:"translateHost"`
	// Tunnel encryption. Valid values: `enable`, `disable`.
	TunnelEncryption *string `pulumi:"tunnelEncryption"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type *string `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// Accessproxy6ApiGateway6RealserverInput is an input type that accepts Accessproxy6ApiGateway6RealserverArgs and Accessproxy6ApiGateway6RealserverOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6RealserverInput` via:
//
//	Accessproxy6ApiGateway6RealserverArgs{...}
type Accessproxy6ApiGateway6RealserverInput interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6RealserverOutput() Accessproxy6ApiGateway6RealserverOutput
	ToAccessproxy6ApiGateway6RealserverOutputWithContext(context.Context) Accessproxy6ApiGateway6RealserverOutput
}

type Accessproxy6ApiGateway6RealserverArgs struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Address or address group of the real server.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
	ExternalAuth pulumi.StringPtrInput `pulumi:"externalAuth"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto pulumi.StringPtrInput `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval pulumi.StringPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport pulumi.StringPtrInput `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert pulumi.StringPtrInput `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation pulumi.StringPtrInput `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys Accessproxy6ApiGateway6RealserverSshHostKeyArrayInput `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost pulumi.StringPtrInput `pulumi:"translateHost"`
	// Tunnel encryption. Valid values: `enable`, `disable`.
	TunnelEncryption pulumi.StringPtrInput `pulumi:"tunnelEncryption"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (Accessproxy6ApiGateway6RealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6Realserver)(nil)).Elem()
}

func (i Accessproxy6ApiGateway6RealserverArgs) ToAccessproxy6ApiGateway6RealserverOutput() Accessproxy6ApiGateway6RealserverOutput {
	return i.ToAccessproxy6ApiGateway6RealserverOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6RealserverArgs) ToAccessproxy6ApiGateway6RealserverOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6RealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6RealserverOutput)
}

// Accessproxy6ApiGateway6RealserverArrayInput is an input type that accepts Accessproxy6ApiGateway6RealserverArray and Accessproxy6ApiGateway6RealserverArrayOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6RealserverArrayInput` via:
//
//	Accessproxy6ApiGateway6RealserverArray{ Accessproxy6ApiGateway6RealserverArgs{...} }
type Accessproxy6ApiGateway6RealserverArrayInput interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6RealserverArrayOutput() Accessproxy6ApiGateway6RealserverArrayOutput
	ToAccessproxy6ApiGateway6RealserverArrayOutputWithContext(context.Context) Accessproxy6ApiGateway6RealserverArrayOutput
}

type Accessproxy6ApiGateway6RealserverArray []Accessproxy6ApiGateway6RealserverInput

func (Accessproxy6ApiGateway6RealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway6Realserver)(nil)).Elem()
}

func (i Accessproxy6ApiGateway6RealserverArray) ToAccessproxy6ApiGateway6RealserverArrayOutput() Accessproxy6ApiGateway6RealserverArrayOutput {
	return i.ToAccessproxy6ApiGateway6RealserverArrayOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6RealserverArray) ToAccessproxy6ApiGateway6RealserverArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6RealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6RealserverArrayOutput)
}

type Accessproxy6ApiGateway6RealserverOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6RealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6Realserver)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6RealserverOutput) ToAccessproxy6ApiGateway6RealserverOutput() Accessproxy6ApiGateway6RealserverOutput {
	return o
}

func (o Accessproxy6ApiGateway6RealserverOutput) ToAccessproxy6ApiGateway6RealserverOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6RealserverOutput {
	return o
}

// Type of address. Valid values: `ip`, `fqdn`.
func (o Accessproxy6ApiGateway6RealserverOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Address or address group of the real server.
func (o Accessproxy6ApiGateway6RealserverOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Wildcard domain name of the real server.
func (o Accessproxy6ApiGateway6RealserverOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGateway6RealserverOutput) ExternalAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.ExternalAuth }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
func (o Accessproxy6ApiGateway6RealserverOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
func (o Accessproxy6ApiGateway6RealserverOutput) HealthCheckProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.HealthCheckProto }).(pulumi.StringPtrOutput)
}

// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGateway6RealserverOutput) HolddownInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.HolddownInterval }).(pulumi.StringPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o Accessproxy6ApiGateway6RealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o Accessproxy6ApiGateway6RealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 address of the real server.
func (o Accessproxy6ApiGateway6RealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o Accessproxy6ApiGateway6RealserverOutput) Mappedport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.Mappedport }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o Accessproxy6ApiGateway6RealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set access-proxy SSH client certificate profile.
func (o Accessproxy6ApiGateway6RealserverOutput) SshClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.SshClientCert }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
func (o Accessproxy6ApiGateway6RealserverOutput) SshHostKeyValidation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.SshHostKeyValidation }).(pulumi.StringPtrOutput)
}

// One or more server host key. The structure of `sshHostKey` block is documented below.
func (o Accessproxy6ApiGateway6RealserverOutput) SshHostKeys() Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) []Accessproxy6ApiGateway6RealserverSshHostKey {
		return v.SshHostKeys
	}).(Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o Accessproxy6ApiGateway6RealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGateway6RealserverOutput) TranslateHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.TranslateHost }).(pulumi.StringPtrOutput)
}

// Tunnel encryption. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGateway6RealserverOutput) TunnelEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.TunnelEncryption }).(pulumi.StringPtrOutput)
}

// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
func (o Accessproxy6ApiGateway6RealserverOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o Accessproxy6ApiGateway6RealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6Realserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type Accessproxy6ApiGateway6RealserverArrayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6RealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway6Realserver)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6RealserverArrayOutput) ToAccessproxy6ApiGateway6RealserverArrayOutput() Accessproxy6ApiGateway6RealserverArrayOutput {
	return o
}

func (o Accessproxy6ApiGateway6RealserverArrayOutput) ToAccessproxy6ApiGateway6RealserverArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6RealserverArrayOutput {
	return o
}

func (o Accessproxy6ApiGateway6RealserverArrayOutput) Index(i pulumi.IntInput) Accessproxy6ApiGateway6RealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Accessproxy6ApiGateway6Realserver {
		return vs[0].([]Accessproxy6ApiGateway6Realserver)[vs[1].(int)]
	}).(Accessproxy6ApiGateway6RealserverOutput)
}

type Accessproxy6ApiGateway6RealserverSshHostKey struct {
	// Server host key name.
	Name *string `pulumi:"name"`
}

// Accessproxy6ApiGateway6RealserverSshHostKeyInput is an input type that accepts Accessproxy6ApiGateway6RealserverSshHostKeyArgs and Accessproxy6ApiGateway6RealserverSshHostKeyOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6RealserverSshHostKeyInput` via:
//
//	Accessproxy6ApiGateway6RealserverSshHostKeyArgs{...}
type Accessproxy6ApiGateway6RealserverSshHostKeyInput interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6RealserverSshHostKeyOutput() Accessproxy6ApiGateway6RealserverSshHostKeyOutput
	ToAccessproxy6ApiGateway6RealserverSshHostKeyOutputWithContext(context.Context) Accessproxy6ApiGateway6RealserverSshHostKeyOutput
}

type Accessproxy6ApiGateway6RealserverSshHostKeyArgs struct {
	// Server host key name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Accessproxy6ApiGateway6RealserverSshHostKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (i Accessproxy6ApiGateway6RealserverSshHostKeyArgs) ToAccessproxy6ApiGateway6RealserverSshHostKeyOutput() Accessproxy6ApiGateway6RealserverSshHostKeyOutput {
	return i.ToAccessproxy6ApiGateway6RealserverSshHostKeyOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6RealserverSshHostKeyArgs) ToAccessproxy6ApiGateway6RealserverSshHostKeyOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6RealserverSshHostKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6RealserverSshHostKeyOutput)
}

// Accessproxy6ApiGateway6RealserverSshHostKeyArrayInput is an input type that accepts Accessproxy6ApiGateway6RealserverSshHostKeyArray and Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6RealserverSshHostKeyArrayInput` via:
//
//	Accessproxy6ApiGateway6RealserverSshHostKeyArray{ Accessproxy6ApiGateway6RealserverSshHostKeyArgs{...} }
type Accessproxy6ApiGateway6RealserverSshHostKeyArrayInput interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput() Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput
	ToAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutputWithContext(context.Context) Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput
}

type Accessproxy6ApiGateway6RealserverSshHostKeyArray []Accessproxy6ApiGateway6RealserverSshHostKeyInput

func (Accessproxy6ApiGateway6RealserverSshHostKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (i Accessproxy6ApiGateway6RealserverSshHostKeyArray) ToAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput() Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput {
	return i.ToAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6RealserverSshHostKeyArray) ToAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput)
}

type Accessproxy6ApiGateway6RealserverSshHostKeyOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6RealserverSshHostKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6RealserverSshHostKeyOutput) ToAccessproxy6ApiGateway6RealserverSshHostKeyOutput() Accessproxy6ApiGateway6RealserverSshHostKeyOutput {
	return o
}

func (o Accessproxy6ApiGateway6RealserverSshHostKeyOutput) ToAccessproxy6ApiGateway6RealserverSshHostKeyOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6RealserverSshHostKeyOutput {
	return o
}

// Server host key name.
func (o Accessproxy6ApiGateway6RealserverSshHostKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6RealserverSshHostKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput) ToAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput() Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput {
	return o
}

func (o Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput) ToAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput {
	return o
}

func (o Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput) Index(i pulumi.IntInput) Accessproxy6ApiGateway6RealserverSshHostKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Accessproxy6ApiGateway6RealserverSshHostKey {
		return vs[0].([]Accessproxy6ApiGateway6RealserverSshHostKey)[vs[1].(int)]
	}).(Accessproxy6ApiGateway6RealserverSshHostKeyOutput)
}

type Accessproxy6ApiGateway6SslCipherSuite struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions *string `pulumi:"versions"`
}

// Accessproxy6ApiGateway6SslCipherSuiteInput is an input type that accepts Accessproxy6ApiGateway6SslCipherSuiteArgs and Accessproxy6ApiGateway6SslCipherSuiteOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6SslCipherSuiteInput` via:
//
//	Accessproxy6ApiGateway6SslCipherSuiteArgs{...}
type Accessproxy6ApiGateway6SslCipherSuiteInput interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6SslCipherSuiteOutput() Accessproxy6ApiGateway6SslCipherSuiteOutput
	ToAccessproxy6ApiGateway6SslCipherSuiteOutputWithContext(context.Context) Accessproxy6ApiGateway6SslCipherSuiteOutput
}

type Accessproxy6ApiGateway6SslCipherSuiteArgs struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (Accessproxy6ApiGateway6SslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6SslCipherSuite)(nil)).Elem()
}

func (i Accessproxy6ApiGateway6SslCipherSuiteArgs) ToAccessproxy6ApiGateway6SslCipherSuiteOutput() Accessproxy6ApiGateway6SslCipherSuiteOutput {
	return i.ToAccessproxy6ApiGateway6SslCipherSuiteOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6SslCipherSuiteArgs) ToAccessproxy6ApiGateway6SslCipherSuiteOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6SslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6SslCipherSuiteOutput)
}

// Accessproxy6ApiGateway6SslCipherSuiteArrayInput is an input type that accepts Accessproxy6ApiGateway6SslCipherSuiteArray and Accessproxy6ApiGateway6SslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGateway6SslCipherSuiteArrayInput` via:
//
//	Accessproxy6ApiGateway6SslCipherSuiteArray{ Accessproxy6ApiGateway6SslCipherSuiteArgs{...} }
type Accessproxy6ApiGateway6SslCipherSuiteArrayInput interface {
	pulumi.Input

	ToAccessproxy6ApiGateway6SslCipherSuiteArrayOutput() Accessproxy6ApiGateway6SslCipherSuiteArrayOutput
	ToAccessproxy6ApiGateway6SslCipherSuiteArrayOutputWithContext(context.Context) Accessproxy6ApiGateway6SslCipherSuiteArrayOutput
}

type Accessproxy6ApiGateway6SslCipherSuiteArray []Accessproxy6ApiGateway6SslCipherSuiteInput

func (Accessproxy6ApiGateway6SslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway6SslCipherSuite)(nil)).Elem()
}

func (i Accessproxy6ApiGateway6SslCipherSuiteArray) ToAccessproxy6ApiGateway6SslCipherSuiteArrayOutput() Accessproxy6ApiGateway6SslCipherSuiteArrayOutput {
	return i.ToAccessproxy6ApiGateway6SslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGateway6SslCipherSuiteArray) ToAccessproxy6ApiGateway6SslCipherSuiteArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6SslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGateway6SslCipherSuiteArrayOutput)
}

type Accessproxy6ApiGateway6SslCipherSuiteOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6SslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway6SslCipherSuite)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6SslCipherSuiteOutput) ToAccessproxy6ApiGateway6SslCipherSuiteOutput() Accessproxy6ApiGateway6SslCipherSuiteOutput {
	return o
}

func (o Accessproxy6ApiGateway6SslCipherSuiteOutput) ToAccessproxy6ApiGateway6SslCipherSuiteOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6SslCipherSuiteOutput {
	return o
}

// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
func (o Accessproxy6ApiGateway6SslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6SslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o Accessproxy6ApiGateway6SslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6SslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o Accessproxy6ApiGateway6SslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway6SslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type Accessproxy6ApiGateway6SslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGateway6SslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway6SslCipherSuite)(nil)).Elem()
}

func (o Accessproxy6ApiGateway6SslCipherSuiteArrayOutput) ToAccessproxy6ApiGateway6SslCipherSuiteArrayOutput() Accessproxy6ApiGateway6SslCipherSuiteArrayOutput {
	return o
}

func (o Accessproxy6ApiGateway6SslCipherSuiteArrayOutput) ToAccessproxy6ApiGateway6SslCipherSuiteArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGateway6SslCipherSuiteArrayOutput {
	return o
}

func (o Accessproxy6ApiGateway6SslCipherSuiteArrayOutput) Index(i pulumi.IntInput) Accessproxy6ApiGateway6SslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Accessproxy6ApiGateway6SslCipherSuite {
		return vs[0].([]Accessproxy6ApiGateway6SslCipherSuite)[vs[1].(int)]
	}).(Accessproxy6ApiGateway6SslCipherSuiteOutput)
}

type Accessproxy6ApiGateway struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications []Accessproxy6ApiGatewayApplication `pulumi:"applications"`
	// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
	H2Support *string `pulumi:"h2Support"`
	// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
	H3Support *string `pulumi:"h3Support"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge *int `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain *string `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost *string `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration *int `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath *string `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare *string `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure *string `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id *int `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod *string `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence *string `pulumi:"persistence"`
	// QUIC setting. The structure of `quic` block is documented below.
	Quic *Accessproxy6ApiGatewayQuic `pulumi:"quic"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers []Accessproxy6ApiGatewayRealserver `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect *string `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer *string `pulumi:"samlServer"`
	// Service.
	Service *string `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm *string `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites []Accessproxy6ApiGatewaySslCipherSuite `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits *string `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion *string `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion *string `pulumi:"sslMinVersion"`
	// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
	SslRenegotiation *string `pulumi:"sslRenegotiation"`
	// SSL-VPN web portal.
	SslVpnWebPortal *string `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap *string `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType *string `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost *string `pulumi:"virtualHost"`
}

// Accessproxy6ApiGatewayInput is an input type that accepts Accessproxy6ApiGatewayArgs and Accessproxy6ApiGatewayOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewayInput` via:
//
//	Accessproxy6ApiGatewayArgs{...}
type Accessproxy6ApiGatewayInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewayOutput() Accessproxy6ApiGatewayOutput
	ToAccessproxy6ApiGatewayOutputWithContext(context.Context) Accessproxy6ApiGatewayOutput
}

type Accessproxy6ApiGatewayArgs struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications Accessproxy6ApiGatewayApplicationArrayInput `pulumi:"applications"`
	// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
	H2Support pulumi.StringPtrInput `pulumi:"h2Support"`
	// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
	H3Support pulumi.StringPtrInput `pulumi:"h3Support"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge pulumi.IntPtrInput `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain pulumi.StringPtrInput `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost pulumi.StringPtrInput `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration pulumi.IntPtrInput `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath pulumi.StringPtrInput `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare pulumi.StringPtrInput `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure pulumi.StringPtrInput `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod pulumi.StringPtrInput `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence pulumi.StringPtrInput `pulumi:"persistence"`
	// QUIC setting. The structure of `quic` block is documented below.
	Quic Accessproxy6ApiGatewayQuicPtrInput `pulumi:"quic"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers Accessproxy6ApiGatewayRealserverArrayInput `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect pulumi.StringPtrInput `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer pulumi.StringPtrInput `pulumi:"samlServer"`
	// Service.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringPtrInput `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites Accessproxy6ApiGatewaySslCipherSuiteArrayInput `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits pulumi.StringPtrInput `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion pulumi.StringPtrInput `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion pulumi.StringPtrInput `pulumi:"sslMinVersion"`
	// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
	SslRenegotiation pulumi.StringPtrInput `pulumi:"sslRenegotiation"`
	// SSL-VPN web portal.
	SslVpnWebPortal pulumi.StringPtrInput `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap pulumi.StringPtrInput `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType pulumi.StringPtrInput `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost pulumi.StringPtrInput `pulumi:"virtualHost"`
}

func (Accessproxy6ApiGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway)(nil)).Elem()
}

func (i Accessproxy6ApiGatewayArgs) ToAccessproxy6ApiGatewayOutput() Accessproxy6ApiGatewayOutput {
	return i.ToAccessproxy6ApiGatewayOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewayArgs) ToAccessproxy6ApiGatewayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewayOutput)
}

// Accessproxy6ApiGatewayArrayInput is an input type that accepts Accessproxy6ApiGatewayArray and Accessproxy6ApiGatewayArrayOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewayArrayInput` via:
//
//	Accessproxy6ApiGatewayArray{ Accessproxy6ApiGatewayArgs{...} }
type Accessproxy6ApiGatewayArrayInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewayArrayOutput() Accessproxy6ApiGatewayArrayOutput
	ToAccessproxy6ApiGatewayArrayOutputWithContext(context.Context) Accessproxy6ApiGatewayArrayOutput
}

type Accessproxy6ApiGatewayArray []Accessproxy6ApiGatewayInput

func (Accessproxy6ApiGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway)(nil)).Elem()
}

func (i Accessproxy6ApiGatewayArray) ToAccessproxy6ApiGatewayArrayOutput() Accessproxy6ApiGatewayArrayOutput {
	return i.ToAccessproxy6ApiGatewayArrayOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewayArray) ToAccessproxy6ApiGatewayArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewayArrayOutput)
}

type Accessproxy6ApiGatewayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGateway)(nil)).Elem()
}

func (o Accessproxy6ApiGatewayOutput) ToAccessproxy6ApiGatewayOutput() Accessproxy6ApiGatewayOutput {
	return o
}

func (o Accessproxy6ApiGatewayOutput) ToAccessproxy6ApiGatewayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayOutput {
	return o
}

// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
func (o Accessproxy6ApiGatewayOutput) Applications() Accessproxy6ApiGatewayApplicationArrayOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) []Accessproxy6ApiGatewayApplication { return v.Applications }).(Accessproxy6ApiGatewayApplicationArrayOutput)
}

// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGatewayOutput) H2Support() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.H2Support }).(pulumi.StringPtrOutput)
}

// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGatewayOutput) H3Support() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.H3Support }).(pulumi.StringPtrOutput)
}

// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
func (o Accessproxy6ApiGatewayOutput) HttpCookieAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *int { return v.HttpCookieAge }).(pulumi.IntPtrOutput)
}

// Domain that HTTP cookie persistence should apply to.
func (o Accessproxy6ApiGatewayOutput) HttpCookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.HttpCookieDomain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
func (o Accessproxy6ApiGatewayOutput) HttpCookieDomainFromHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.HttpCookieDomainFromHost }).(pulumi.StringPtrOutput)
}

// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
func (o Accessproxy6ApiGatewayOutput) HttpCookieGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *int { return v.HttpCookieGeneration }).(pulumi.IntPtrOutput)
}

// Limit HTTP cookie persistence to the specified path.
func (o Accessproxy6ApiGatewayOutput) HttpCookiePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.HttpCookiePath }).(pulumi.StringPtrOutput)
}

// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
func (o Accessproxy6ApiGatewayOutput) HttpCookieShare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.HttpCookieShare }).(pulumi.StringPtrOutput)
}

// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
func (o Accessproxy6ApiGatewayOutput) HttpsCookieSecure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.HttpsCookieSecure }).(pulumi.StringPtrOutput)
}

// API Gateway ID.
func (o Accessproxy6ApiGatewayOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
func (o Accessproxy6ApiGatewayOutput) LdbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.LdbMethod }).(pulumi.StringPtrOutput)
}

// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
func (o Accessproxy6ApiGatewayOutput) Persistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.Persistence }).(pulumi.StringPtrOutput)
}

// QUIC setting. The structure of `quic` block is documented below.
func (o Accessproxy6ApiGatewayOutput) Quic() Accessproxy6ApiGatewayQuicPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *Accessproxy6ApiGatewayQuic { return v.Quic }).(Accessproxy6ApiGatewayQuicPtrOutput)
}

// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
func (o Accessproxy6ApiGatewayOutput) Realservers() Accessproxy6ApiGatewayRealserverArrayOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) []Accessproxy6ApiGatewayRealserver { return v.Realservers }).(Accessproxy6ApiGatewayRealserverArrayOutput)
}

// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
func (o Accessproxy6ApiGatewayOutput) SamlRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.SamlRedirect }).(pulumi.StringPtrOutput)
}

// SAML service provider configuration for VIP authentication.
func (o Accessproxy6ApiGatewayOutput) SamlServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.SamlServer }).(pulumi.StringPtrOutput)
}

// Service.
func (o Accessproxy6ApiGatewayOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
func (o Accessproxy6ApiGatewayOutput) SslAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.SslAlgorithm }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
func (o Accessproxy6ApiGatewayOutput) SslCipherSuites() Accessproxy6ApiGatewaySslCipherSuiteArrayOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) []Accessproxy6ApiGatewaySslCipherSuite { return v.SslCipherSuites }).(Accessproxy6ApiGatewaySslCipherSuiteArrayOutput)
}

// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
func (o Accessproxy6ApiGatewayOutput) SslDhBits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.SslDhBits }).(pulumi.StringPtrOutput)
}

// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o Accessproxy6ApiGatewayOutput) SslMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.SslMaxVersion }).(pulumi.StringPtrOutput)
}

// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o Accessproxy6ApiGatewayOutput) SslMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.SslMinVersion }).(pulumi.StringPtrOutput)
}

// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGatewayOutput) SslRenegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.SslRenegotiation }).(pulumi.StringPtrOutput)
}

// SSL-VPN web portal.
func (o Accessproxy6ApiGatewayOutput) SslVpnWebPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.SslVpnWebPortal }).(pulumi.StringPtrOutput)
}

// URL pattern to match.
func (o Accessproxy6ApiGatewayOutput) UrlMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.UrlMap }).(pulumi.StringPtrOutput)
}

// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
func (o Accessproxy6ApiGatewayOutput) UrlMapType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.UrlMapType }).(pulumi.StringPtrOutput)
}

// Virtual host.
func (o Accessproxy6ApiGatewayOutput) VirtualHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGateway) *string { return v.VirtualHost }).(pulumi.StringPtrOutput)
}

type Accessproxy6ApiGatewayArrayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGateway)(nil)).Elem()
}

func (o Accessproxy6ApiGatewayArrayOutput) ToAccessproxy6ApiGatewayArrayOutput() Accessproxy6ApiGatewayArrayOutput {
	return o
}

func (o Accessproxy6ApiGatewayArrayOutput) ToAccessproxy6ApiGatewayArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayArrayOutput {
	return o
}

func (o Accessproxy6ApiGatewayArrayOutput) Index(i pulumi.IntInput) Accessproxy6ApiGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Accessproxy6ApiGateway {
		return vs[0].([]Accessproxy6ApiGateway)[vs[1].(int)]
	}).(Accessproxy6ApiGatewayOutput)
}

type Accessproxy6ApiGatewayApplication struct {
	// SaaS application name.
	Name *string `pulumi:"name"`
}

// Accessproxy6ApiGatewayApplicationInput is an input type that accepts Accessproxy6ApiGatewayApplicationArgs and Accessproxy6ApiGatewayApplicationOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewayApplicationInput` via:
//
//	Accessproxy6ApiGatewayApplicationArgs{...}
type Accessproxy6ApiGatewayApplicationInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewayApplicationOutput() Accessproxy6ApiGatewayApplicationOutput
	ToAccessproxy6ApiGatewayApplicationOutputWithContext(context.Context) Accessproxy6ApiGatewayApplicationOutput
}

type Accessproxy6ApiGatewayApplicationArgs struct {
	// SaaS application name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Accessproxy6ApiGatewayApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGatewayApplication)(nil)).Elem()
}

func (i Accessproxy6ApiGatewayApplicationArgs) ToAccessproxy6ApiGatewayApplicationOutput() Accessproxy6ApiGatewayApplicationOutput {
	return i.ToAccessproxy6ApiGatewayApplicationOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewayApplicationArgs) ToAccessproxy6ApiGatewayApplicationOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewayApplicationOutput)
}

// Accessproxy6ApiGatewayApplicationArrayInput is an input type that accepts Accessproxy6ApiGatewayApplicationArray and Accessproxy6ApiGatewayApplicationArrayOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewayApplicationArrayInput` via:
//
//	Accessproxy6ApiGatewayApplicationArray{ Accessproxy6ApiGatewayApplicationArgs{...} }
type Accessproxy6ApiGatewayApplicationArrayInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewayApplicationArrayOutput() Accessproxy6ApiGatewayApplicationArrayOutput
	ToAccessproxy6ApiGatewayApplicationArrayOutputWithContext(context.Context) Accessproxy6ApiGatewayApplicationArrayOutput
}

type Accessproxy6ApiGatewayApplicationArray []Accessproxy6ApiGatewayApplicationInput

func (Accessproxy6ApiGatewayApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGatewayApplication)(nil)).Elem()
}

func (i Accessproxy6ApiGatewayApplicationArray) ToAccessproxy6ApiGatewayApplicationArrayOutput() Accessproxy6ApiGatewayApplicationArrayOutput {
	return i.ToAccessproxy6ApiGatewayApplicationArrayOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewayApplicationArray) ToAccessproxy6ApiGatewayApplicationArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewayApplicationArrayOutput)
}

type Accessproxy6ApiGatewayApplicationOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewayApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGatewayApplication)(nil)).Elem()
}

func (o Accessproxy6ApiGatewayApplicationOutput) ToAccessproxy6ApiGatewayApplicationOutput() Accessproxy6ApiGatewayApplicationOutput {
	return o
}

func (o Accessproxy6ApiGatewayApplicationOutput) ToAccessproxy6ApiGatewayApplicationOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayApplicationOutput {
	return o
}

// SaaS application name.
func (o Accessproxy6ApiGatewayApplicationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayApplication) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Accessproxy6ApiGatewayApplicationArrayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewayApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGatewayApplication)(nil)).Elem()
}

func (o Accessproxy6ApiGatewayApplicationArrayOutput) ToAccessproxy6ApiGatewayApplicationArrayOutput() Accessproxy6ApiGatewayApplicationArrayOutput {
	return o
}

func (o Accessproxy6ApiGatewayApplicationArrayOutput) ToAccessproxy6ApiGatewayApplicationArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayApplicationArrayOutput {
	return o
}

func (o Accessproxy6ApiGatewayApplicationArrayOutput) Index(i pulumi.IntInput) Accessproxy6ApiGatewayApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Accessproxy6ApiGatewayApplication {
		return vs[0].([]Accessproxy6ApiGatewayApplication)[vs[1].(int)]
	}).(Accessproxy6ApiGatewayApplicationOutput)
}

type Accessproxy6ApiGatewayQuic struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent *int `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit *int `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration *string `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit *string `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay *int `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize *int `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout *int `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize *int `pulumi:"maxUdpPayloadSize"`
}

// Accessproxy6ApiGatewayQuicInput is an input type that accepts Accessproxy6ApiGatewayQuicArgs and Accessproxy6ApiGatewayQuicOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewayQuicInput` via:
//
//	Accessproxy6ApiGatewayQuicArgs{...}
type Accessproxy6ApiGatewayQuicInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewayQuicOutput() Accessproxy6ApiGatewayQuicOutput
	ToAccessproxy6ApiGatewayQuicOutputWithContext(context.Context) Accessproxy6ApiGatewayQuicOutput
}

type Accessproxy6ApiGatewayQuicArgs struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent pulumi.IntPtrInput `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit pulumi.IntPtrInput `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration pulumi.StringPtrInput `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit pulumi.StringPtrInput `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay pulumi.IntPtrInput `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize pulumi.IntPtrInput `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout pulumi.IntPtrInput `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize pulumi.IntPtrInput `pulumi:"maxUdpPayloadSize"`
}

func (Accessproxy6ApiGatewayQuicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGatewayQuic)(nil)).Elem()
}

func (i Accessproxy6ApiGatewayQuicArgs) ToAccessproxy6ApiGatewayQuicOutput() Accessproxy6ApiGatewayQuicOutput {
	return i.ToAccessproxy6ApiGatewayQuicOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewayQuicArgs) ToAccessproxy6ApiGatewayQuicOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayQuicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewayQuicOutput)
}

func (i Accessproxy6ApiGatewayQuicArgs) ToAccessproxy6ApiGatewayQuicPtrOutput() Accessproxy6ApiGatewayQuicPtrOutput {
	return i.ToAccessproxy6ApiGatewayQuicPtrOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewayQuicArgs) ToAccessproxy6ApiGatewayQuicPtrOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayQuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewayQuicOutput).ToAccessproxy6ApiGatewayQuicPtrOutputWithContext(ctx)
}

// Accessproxy6ApiGatewayQuicPtrInput is an input type that accepts Accessproxy6ApiGatewayQuicArgs, Accessproxy6ApiGatewayQuicPtr and Accessproxy6ApiGatewayQuicPtrOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewayQuicPtrInput` via:
//
//	        Accessproxy6ApiGatewayQuicArgs{...}
//
//	or:
//
//	        nil
type Accessproxy6ApiGatewayQuicPtrInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewayQuicPtrOutput() Accessproxy6ApiGatewayQuicPtrOutput
	ToAccessproxy6ApiGatewayQuicPtrOutputWithContext(context.Context) Accessproxy6ApiGatewayQuicPtrOutput
}

type accessproxy6ApiGatewayQuicPtrType Accessproxy6ApiGatewayQuicArgs

func Accessproxy6ApiGatewayQuicPtr(v *Accessproxy6ApiGatewayQuicArgs) Accessproxy6ApiGatewayQuicPtrInput {
	return (*accessproxy6ApiGatewayQuicPtrType)(v)
}

func (*accessproxy6ApiGatewayQuicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Accessproxy6ApiGatewayQuic)(nil)).Elem()
}

func (i *accessproxy6ApiGatewayQuicPtrType) ToAccessproxy6ApiGatewayQuicPtrOutput() Accessproxy6ApiGatewayQuicPtrOutput {
	return i.ToAccessproxy6ApiGatewayQuicPtrOutputWithContext(context.Background())
}

func (i *accessproxy6ApiGatewayQuicPtrType) ToAccessproxy6ApiGatewayQuicPtrOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayQuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewayQuicPtrOutput)
}

type Accessproxy6ApiGatewayQuicOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewayQuicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGatewayQuic)(nil)).Elem()
}

func (o Accessproxy6ApiGatewayQuicOutput) ToAccessproxy6ApiGatewayQuicOutput() Accessproxy6ApiGatewayQuicOutput {
	return o
}

func (o Accessproxy6ApiGatewayQuicOutput) ToAccessproxy6ApiGatewayQuicOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayQuicOutput {
	return o
}

func (o Accessproxy6ApiGatewayQuicOutput) ToAccessproxy6ApiGatewayQuicPtrOutput() Accessproxy6ApiGatewayQuicPtrOutput {
	return o.ToAccessproxy6ApiGatewayQuicPtrOutputWithContext(context.Background())
}

func (o Accessproxy6ApiGatewayQuicOutput) ToAccessproxy6ApiGatewayQuicPtrOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayQuicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Accessproxy6ApiGatewayQuic) *Accessproxy6ApiGatewayQuic {
		return &v
	}).(Accessproxy6ApiGatewayQuicPtrOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o Accessproxy6ApiGatewayQuicOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayQuic) *int { return v.AckDelayExponent }).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o Accessproxy6ApiGatewayQuicOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayQuic) *int { return v.ActiveConnectionIdLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGatewayQuicOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayQuic) *string { return v.ActiveMigration }).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGatewayQuicOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayQuic) *string { return v.GreaseQuicBit }).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o Accessproxy6ApiGatewayQuicOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayQuic) *int { return v.MaxAckDelay }).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o Accessproxy6ApiGatewayQuicOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayQuic) *int { return v.MaxDatagramFrameSize }).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o Accessproxy6ApiGatewayQuicOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayQuic) *int { return v.MaxIdleTimeout }).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o Accessproxy6ApiGatewayQuicOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayQuic) *int { return v.MaxUdpPayloadSize }).(pulumi.IntPtrOutput)
}

type Accessproxy6ApiGatewayQuicPtrOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewayQuicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Accessproxy6ApiGatewayQuic)(nil)).Elem()
}

func (o Accessproxy6ApiGatewayQuicPtrOutput) ToAccessproxy6ApiGatewayQuicPtrOutput() Accessproxy6ApiGatewayQuicPtrOutput {
	return o
}

func (o Accessproxy6ApiGatewayQuicPtrOutput) ToAccessproxy6ApiGatewayQuicPtrOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayQuicPtrOutput {
	return o
}

func (o Accessproxy6ApiGatewayQuicPtrOutput) Elem() Accessproxy6ApiGatewayQuicOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGatewayQuic) Accessproxy6ApiGatewayQuic {
		if v != nil {
			return *v
		}
		var ret Accessproxy6ApiGatewayQuic
		return ret
	}).(Accessproxy6ApiGatewayQuicOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o Accessproxy6ApiGatewayQuicPtrOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.AckDelayExponent
	}).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o Accessproxy6ApiGatewayQuicPtrOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.ActiveConnectionIdLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGatewayQuicPtrOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGatewayQuic) *string {
		if v == nil {
			return nil
		}
		return v.ActiveMigration
	}).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGatewayQuicPtrOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGatewayQuic) *string {
		if v == nil {
			return nil
		}
		return v.GreaseQuicBit
	}).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o Accessproxy6ApiGatewayQuicPtrOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxAckDelay
	}).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o Accessproxy6ApiGatewayQuicPtrOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxDatagramFrameSize
	}).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o Accessproxy6ApiGatewayQuicPtrOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleTimeout
	}).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o Accessproxy6ApiGatewayQuicPtrOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Accessproxy6ApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxUdpPayloadSize
	}).(pulumi.IntPtrOutput)
}

type Accessproxy6ApiGatewayRealserver struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType *string `pulumi:"addrType"`
	// Address or address group of the real server.
	Address *string `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain *string `pulumi:"domain"`
	// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
	ExternalAuth *string `pulumi:"externalAuth"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck *string `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto *string `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval *string `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IPv6 address of the real server.
	Ip *string `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport *string `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port *int `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert *string `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation *string `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys []Accessproxy6ApiGatewayRealserverSshHostKey `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost *string `pulumi:"translateHost"`
	// Tunnel encryption. Valid values: `enable`, `disable`.
	TunnelEncryption *string `pulumi:"tunnelEncryption"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type *string `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// Accessproxy6ApiGatewayRealserverInput is an input type that accepts Accessproxy6ApiGatewayRealserverArgs and Accessproxy6ApiGatewayRealserverOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewayRealserverInput` via:
//
//	Accessproxy6ApiGatewayRealserverArgs{...}
type Accessproxy6ApiGatewayRealserverInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewayRealserverOutput() Accessproxy6ApiGatewayRealserverOutput
	ToAccessproxy6ApiGatewayRealserverOutputWithContext(context.Context) Accessproxy6ApiGatewayRealserverOutput
}

type Accessproxy6ApiGatewayRealserverArgs struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Address or address group of the real server.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
	ExternalAuth pulumi.StringPtrInput `pulumi:"externalAuth"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto pulumi.StringPtrInput `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval pulumi.StringPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport pulumi.StringPtrInput `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert pulumi.StringPtrInput `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation pulumi.StringPtrInput `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys Accessproxy6ApiGatewayRealserverSshHostKeyArrayInput `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost pulumi.StringPtrInput `pulumi:"translateHost"`
	// Tunnel encryption. Valid values: `enable`, `disable`.
	TunnelEncryption pulumi.StringPtrInput `pulumi:"tunnelEncryption"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (Accessproxy6ApiGatewayRealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGatewayRealserver)(nil)).Elem()
}

func (i Accessproxy6ApiGatewayRealserverArgs) ToAccessproxy6ApiGatewayRealserverOutput() Accessproxy6ApiGatewayRealserverOutput {
	return i.ToAccessproxy6ApiGatewayRealserverOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewayRealserverArgs) ToAccessproxy6ApiGatewayRealserverOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayRealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewayRealserverOutput)
}

// Accessproxy6ApiGatewayRealserverArrayInput is an input type that accepts Accessproxy6ApiGatewayRealserverArray and Accessproxy6ApiGatewayRealserverArrayOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewayRealserverArrayInput` via:
//
//	Accessproxy6ApiGatewayRealserverArray{ Accessproxy6ApiGatewayRealserverArgs{...} }
type Accessproxy6ApiGatewayRealserverArrayInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewayRealserverArrayOutput() Accessproxy6ApiGatewayRealserverArrayOutput
	ToAccessproxy6ApiGatewayRealserverArrayOutputWithContext(context.Context) Accessproxy6ApiGatewayRealserverArrayOutput
}

type Accessproxy6ApiGatewayRealserverArray []Accessproxy6ApiGatewayRealserverInput

func (Accessproxy6ApiGatewayRealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGatewayRealserver)(nil)).Elem()
}

func (i Accessproxy6ApiGatewayRealserverArray) ToAccessproxy6ApiGatewayRealserverArrayOutput() Accessproxy6ApiGatewayRealserverArrayOutput {
	return i.ToAccessproxy6ApiGatewayRealserverArrayOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewayRealserverArray) ToAccessproxy6ApiGatewayRealserverArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayRealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewayRealserverArrayOutput)
}

type Accessproxy6ApiGatewayRealserverOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewayRealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGatewayRealserver)(nil)).Elem()
}

func (o Accessproxy6ApiGatewayRealserverOutput) ToAccessproxy6ApiGatewayRealserverOutput() Accessproxy6ApiGatewayRealserverOutput {
	return o
}

func (o Accessproxy6ApiGatewayRealserverOutput) ToAccessproxy6ApiGatewayRealserverOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayRealserverOutput {
	return o
}

// Type of address. Valid values: `ip`, `fqdn`.
func (o Accessproxy6ApiGatewayRealserverOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Address or address group of the real server.
func (o Accessproxy6ApiGatewayRealserverOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Wildcard domain name of the real server.
func (o Accessproxy6ApiGatewayRealserverOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGatewayRealserverOutput) ExternalAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.ExternalAuth }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
func (o Accessproxy6ApiGatewayRealserverOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
func (o Accessproxy6ApiGatewayRealserverOutput) HealthCheckProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.HealthCheckProto }).(pulumi.StringPtrOutput)
}

// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGatewayRealserverOutput) HolddownInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.HolddownInterval }).(pulumi.StringPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o Accessproxy6ApiGatewayRealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o Accessproxy6ApiGatewayRealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 address of the real server.
func (o Accessproxy6ApiGatewayRealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o Accessproxy6ApiGatewayRealserverOutput) Mappedport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.Mappedport }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o Accessproxy6ApiGatewayRealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set access-proxy SSH client certificate profile.
func (o Accessproxy6ApiGatewayRealserverOutput) SshClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.SshClientCert }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
func (o Accessproxy6ApiGatewayRealserverOutput) SshHostKeyValidation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.SshHostKeyValidation }).(pulumi.StringPtrOutput)
}

// One or more server host key. The structure of `sshHostKey` block is documented below.
func (o Accessproxy6ApiGatewayRealserverOutput) SshHostKeys() Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) []Accessproxy6ApiGatewayRealserverSshHostKey {
		return v.SshHostKeys
	}).(Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o Accessproxy6ApiGatewayRealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGatewayRealserverOutput) TranslateHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.TranslateHost }).(pulumi.StringPtrOutput)
}

// Tunnel encryption. Valid values: `enable`, `disable`.
func (o Accessproxy6ApiGatewayRealserverOutput) TunnelEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.TunnelEncryption }).(pulumi.StringPtrOutput)
}

// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
func (o Accessproxy6ApiGatewayRealserverOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o Accessproxy6ApiGatewayRealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type Accessproxy6ApiGatewayRealserverArrayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewayRealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGatewayRealserver)(nil)).Elem()
}

func (o Accessproxy6ApiGatewayRealserverArrayOutput) ToAccessproxy6ApiGatewayRealserverArrayOutput() Accessproxy6ApiGatewayRealserverArrayOutput {
	return o
}

func (o Accessproxy6ApiGatewayRealserverArrayOutput) ToAccessproxy6ApiGatewayRealserverArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayRealserverArrayOutput {
	return o
}

func (o Accessproxy6ApiGatewayRealserverArrayOutput) Index(i pulumi.IntInput) Accessproxy6ApiGatewayRealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Accessproxy6ApiGatewayRealserver {
		return vs[0].([]Accessproxy6ApiGatewayRealserver)[vs[1].(int)]
	}).(Accessproxy6ApiGatewayRealserverOutput)
}

type Accessproxy6ApiGatewayRealserverSshHostKey struct {
	// Server host key name.
	Name *string `pulumi:"name"`
}

// Accessproxy6ApiGatewayRealserverSshHostKeyInput is an input type that accepts Accessproxy6ApiGatewayRealserverSshHostKeyArgs and Accessproxy6ApiGatewayRealserverSshHostKeyOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewayRealserverSshHostKeyInput` via:
//
//	Accessproxy6ApiGatewayRealserverSshHostKeyArgs{...}
type Accessproxy6ApiGatewayRealserverSshHostKeyInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewayRealserverSshHostKeyOutput() Accessproxy6ApiGatewayRealserverSshHostKeyOutput
	ToAccessproxy6ApiGatewayRealserverSshHostKeyOutputWithContext(context.Context) Accessproxy6ApiGatewayRealserverSshHostKeyOutput
}

type Accessproxy6ApiGatewayRealserverSshHostKeyArgs struct {
	// Server host key name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Accessproxy6ApiGatewayRealserverSshHostKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (i Accessproxy6ApiGatewayRealserverSshHostKeyArgs) ToAccessproxy6ApiGatewayRealserverSshHostKeyOutput() Accessproxy6ApiGatewayRealserverSshHostKeyOutput {
	return i.ToAccessproxy6ApiGatewayRealserverSshHostKeyOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewayRealserverSshHostKeyArgs) ToAccessproxy6ApiGatewayRealserverSshHostKeyOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayRealserverSshHostKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewayRealserverSshHostKeyOutput)
}

// Accessproxy6ApiGatewayRealserverSshHostKeyArrayInput is an input type that accepts Accessproxy6ApiGatewayRealserverSshHostKeyArray and Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewayRealserverSshHostKeyArrayInput` via:
//
//	Accessproxy6ApiGatewayRealserverSshHostKeyArray{ Accessproxy6ApiGatewayRealserverSshHostKeyArgs{...} }
type Accessproxy6ApiGatewayRealserverSshHostKeyArrayInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput() Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput
	ToAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutputWithContext(context.Context) Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput
}

type Accessproxy6ApiGatewayRealserverSshHostKeyArray []Accessproxy6ApiGatewayRealserverSshHostKeyInput

func (Accessproxy6ApiGatewayRealserverSshHostKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (i Accessproxy6ApiGatewayRealserverSshHostKeyArray) ToAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput() Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput {
	return i.ToAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewayRealserverSshHostKeyArray) ToAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput)
}

type Accessproxy6ApiGatewayRealserverSshHostKeyOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewayRealserverSshHostKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (o Accessproxy6ApiGatewayRealserverSshHostKeyOutput) ToAccessproxy6ApiGatewayRealserverSshHostKeyOutput() Accessproxy6ApiGatewayRealserverSshHostKeyOutput {
	return o
}

func (o Accessproxy6ApiGatewayRealserverSshHostKeyOutput) ToAccessproxy6ApiGatewayRealserverSshHostKeyOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayRealserverSshHostKeyOutput {
	return o
}

// Server host key name.
func (o Accessproxy6ApiGatewayRealserverSshHostKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewayRealserverSshHostKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (o Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput) ToAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput() Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput {
	return o
}

func (o Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput) ToAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput {
	return o
}

func (o Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput) Index(i pulumi.IntInput) Accessproxy6ApiGatewayRealserverSshHostKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Accessproxy6ApiGatewayRealserverSshHostKey {
		return vs[0].([]Accessproxy6ApiGatewayRealserverSshHostKey)[vs[1].(int)]
	}).(Accessproxy6ApiGatewayRealserverSshHostKeyOutput)
}

type Accessproxy6ApiGatewaySslCipherSuite struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions *string `pulumi:"versions"`
}

// Accessproxy6ApiGatewaySslCipherSuiteInput is an input type that accepts Accessproxy6ApiGatewaySslCipherSuiteArgs and Accessproxy6ApiGatewaySslCipherSuiteOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewaySslCipherSuiteInput` via:
//
//	Accessproxy6ApiGatewaySslCipherSuiteArgs{...}
type Accessproxy6ApiGatewaySslCipherSuiteInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewaySslCipherSuiteOutput() Accessproxy6ApiGatewaySslCipherSuiteOutput
	ToAccessproxy6ApiGatewaySslCipherSuiteOutputWithContext(context.Context) Accessproxy6ApiGatewaySslCipherSuiteOutput
}

type Accessproxy6ApiGatewaySslCipherSuiteArgs struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (Accessproxy6ApiGatewaySslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGatewaySslCipherSuite)(nil)).Elem()
}

func (i Accessproxy6ApiGatewaySslCipherSuiteArgs) ToAccessproxy6ApiGatewaySslCipherSuiteOutput() Accessproxy6ApiGatewaySslCipherSuiteOutput {
	return i.ToAccessproxy6ApiGatewaySslCipherSuiteOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewaySslCipherSuiteArgs) ToAccessproxy6ApiGatewaySslCipherSuiteOutputWithContext(ctx context.Context) Accessproxy6ApiGatewaySslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewaySslCipherSuiteOutput)
}

// Accessproxy6ApiGatewaySslCipherSuiteArrayInput is an input type that accepts Accessproxy6ApiGatewaySslCipherSuiteArray and Accessproxy6ApiGatewaySslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `Accessproxy6ApiGatewaySslCipherSuiteArrayInput` via:
//
//	Accessproxy6ApiGatewaySslCipherSuiteArray{ Accessproxy6ApiGatewaySslCipherSuiteArgs{...} }
type Accessproxy6ApiGatewaySslCipherSuiteArrayInput interface {
	pulumi.Input

	ToAccessproxy6ApiGatewaySslCipherSuiteArrayOutput() Accessproxy6ApiGatewaySslCipherSuiteArrayOutput
	ToAccessproxy6ApiGatewaySslCipherSuiteArrayOutputWithContext(context.Context) Accessproxy6ApiGatewaySslCipherSuiteArrayOutput
}

type Accessproxy6ApiGatewaySslCipherSuiteArray []Accessproxy6ApiGatewaySslCipherSuiteInput

func (Accessproxy6ApiGatewaySslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGatewaySslCipherSuite)(nil)).Elem()
}

func (i Accessproxy6ApiGatewaySslCipherSuiteArray) ToAccessproxy6ApiGatewaySslCipherSuiteArrayOutput() Accessproxy6ApiGatewaySslCipherSuiteArrayOutput {
	return i.ToAccessproxy6ApiGatewaySslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i Accessproxy6ApiGatewaySslCipherSuiteArray) ToAccessproxy6ApiGatewaySslCipherSuiteArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewaySslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ApiGatewaySslCipherSuiteArrayOutput)
}

type Accessproxy6ApiGatewaySslCipherSuiteOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewaySslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessproxy6ApiGatewaySslCipherSuite)(nil)).Elem()
}

func (o Accessproxy6ApiGatewaySslCipherSuiteOutput) ToAccessproxy6ApiGatewaySslCipherSuiteOutput() Accessproxy6ApiGatewaySslCipherSuiteOutput {
	return o
}

func (o Accessproxy6ApiGatewaySslCipherSuiteOutput) ToAccessproxy6ApiGatewaySslCipherSuiteOutputWithContext(ctx context.Context) Accessproxy6ApiGatewaySslCipherSuiteOutput {
	return o
}

// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
func (o Accessproxy6ApiGatewaySslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewaySslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o Accessproxy6ApiGatewaySslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewaySslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o Accessproxy6ApiGatewaySslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Accessproxy6ApiGatewaySslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type Accessproxy6ApiGatewaySslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ApiGatewaySslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Accessproxy6ApiGatewaySslCipherSuite)(nil)).Elem()
}

func (o Accessproxy6ApiGatewaySslCipherSuiteArrayOutput) ToAccessproxy6ApiGatewaySslCipherSuiteArrayOutput() Accessproxy6ApiGatewaySslCipherSuiteArrayOutput {
	return o
}

func (o Accessproxy6ApiGatewaySslCipherSuiteArrayOutput) ToAccessproxy6ApiGatewaySslCipherSuiteArrayOutputWithContext(ctx context.Context) Accessproxy6ApiGatewaySslCipherSuiteArrayOutput {
	return o
}

func (o Accessproxy6ApiGatewaySslCipherSuiteArrayOutput) Index(i pulumi.IntInput) Accessproxy6ApiGatewaySslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Accessproxy6ApiGatewaySslCipherSuite {
		return vs[0].([]Accessproxy6ApiGatewaySslCipherSuite)[vs[1].(int)]
	}).(Accessproxy6ApiGatewaySslCipherSuiteOutput)
}

type AccessproxyApiGateway6 struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications []AccessproxyApiGateway6Application `pulumi:"applications"`
	// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
	H2Support *string `pulumi:"h2Support"`
	// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
	H3Support *string `pulumi:"h3Support"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge *int `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain *string `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost *string `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration *int `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath *string `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare *string `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure *string `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id *int `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod *string `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence *string `pulumi:"persistence"`
	// QUIC setting. The structure of `quic` block is documented below.
	Quic *AccessproxyApiGateway6Quic `pulumi:"quic"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers []AccessproxyApiGateway6Realserver `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect *string `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer *string `pulumi:"samlServer"`
	// Service.
	Service *string `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm *string `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites []AccessproxyApiGateway6SslCipherSuite `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits *string `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion *string `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion *string `pulumi:"sslMinVersion"`
	// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
	SslRenegotiation *string `pulumi:"sslRenegotiation"`
	// SSL-VPN web portal.
	SslVpnWebPortal *string `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap *string `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType *string `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost *string `pulumi:"virtualHost"`
}

// AccessproxyApiGateway6Input is an input type that accepts AccessproxyApiGateway6Args and AccessproxyApiGateway6Output values.
// You can construct a concrete instance of `AccessproxyApiGateway6Input` via:
//
//	AccessproxyApiGateway6Args{...}
type AccessproxyApiGateway6Input interface {
	pulumi.Input

	ToAccessproxyApiGateway6Output() AccessproxyApiGateway6Output
	ToAccessproxyApiGateway6OutputWithContext(context.Context) AccessproxyApiGateway6Output
}

type AccessproxyApiGateway6Args struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications AccessproxyApiGateway6ApplicationArrayInput `pulumi:"applications"`
	// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
	H2Support pulumi.StringPtrInput `pulumi:"h2Support"`
	// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
	H3Support pulumi.StringPtrInput `pulumi:"h3Support"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge pulumi.IntPtrInput `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain pulumi.StringPtrInput `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost pulumi.StringPtrInput `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration pulumi.IntPtrInput `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath pulumi.StringPtrInput `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare pulumi.StringPtrInput `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure pulumi.StringPtrInput `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod pulumi.StringPtrInput `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence pulumi.StringPtrInput `pulumi:"persistence"`
	// QUIC setting. The structure of `quic` block is documented below.
	Quic AccessproxyApiGateway6QuicPtrInput `pulumi:"quic"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers AccessproxyApiGateway6RealserverArrayInput `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect pulumi.StringPtrInput `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer pulumi.StringPtrInput `pulumi:"samlServer"`
	// Service.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringPtrInput `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites AccessproxyApiGateway6SslCipherSuiteArrayInput `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits pulumi.StringPtrInput `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion pulumi.StringPtrInput `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion pulumi.StringPtrInput `pulumi:"sslMinVersion"`
	// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
	SslRenegotiation pulumi.StringPtrInput `pulumi:"sslRenegotiation"`
	// SSL-VPN web portal.
	SslVpnWebPortal pulumi.StringPtrInput `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap pulumi.StringPtrInput `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType pulumi.StringPtrInput `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost pulumi.StringPtrInput `pulumi:"virtualHost"`
}

func (AccessproxyApiGateway6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6)(nil)).Elem()
}

func (i AccessproxyApiGateway6Args) ToAccessproxyApiGateway6Output() AccessproxyApiGateway6Output {
	return i.ToAccessproxyApiGateway6OutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6Args) ToAccessproxyApiGateway6OutputWithContext(ctx context.Context) AccessproxyApiGateway6Output {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6Output)
}

// AccessproxyApiGateway6ArrayInput is an input type that accepts AccessproxyApiGateway6Array and AccessproxyApiGateway6ArrayOutput values.
// You can construct a concrete instance of `AccessproxyApiGateway6ArrayInput` via:
//
//	AccessproxyApiGateway6Array{ AccessproxyApiGateway6Args{...} }
type AccessproxyApiGateway6ArrayInput interface {
	pulumi.Input

	ToAccessproxyApiGateway6ArrayOutput() AccessproxyApiGateway6ArrayOutput
	ToAccessproxyApiGateway6ArrayOutputWithContext(context.Context) AccessproxyApiGateway6ArrayOutput
}

type AccessproxyApiGateway6Array []AccessproxyApiGateway6Input

func (AccessproxyApiGateway6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway6)(nil)).Elem()
}

func (i AccessproxyApiGateway6Array) ToAccessproxyApiGateway6ArrayOutput() AccessproxyApiGateway6ArrayOutput {
	return i.ToAccessproxyApiGateway6ArrayOutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6Array) ToAccessproxyApiGateway6ArrayOutputWithContext(ctx context.Context) AccessproxyApiGateway6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6ArrayOutput)
}

type AccessproxyApiGateway6Output struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6)(nil)).Elem()
}

func (o AccessproxyApiGateway6Output) ToAccessproxyApiGateway6Output() AccessproxyApiGateway6Output {
	return o
}

func (o AccessproxyApiGateway6Output) ToAccessproxyApiGateway6OutputWithContext(ctx context.Context) AccessproxyApiGateway6Output {
	return o
}

// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
func (o AccessproxyApiGateway6Output) Applications() AccessproxyApiGateway6ApplicationArrayOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) []AccessproxyApiGateway6Application { return v.Applications }).(AccessproxyApiGateway6ApplicationArrayOutput)
}

// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
func (o AccessproxyApiGateway6Output) H2Support() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.H2Support }).(pulumi.StringPtrOutput)
}

// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
func (o AccessproxyApiGateway6Output) H3Support() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.H3Support }).(pulumi.StringPtrOutput)
}

// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
func (o AccessproxyApiGateway6Output) HttpCookieAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *int { return v.HttpCookieAge }).(pulumi.IntPtrOutput)
}

// Domain that HTTP cookie persistence should apply to.
func (o AccessproxyApiGateway6Output) HttpCookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.HttpCookieDomain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
func (o AccessproxyApiGateway6Output) HttpCookieDomainFromHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.HttpCookieDomainFromHost }).(pulumi.StringPtrOutput)
}

// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
func (o AccessproxyApiGateway6Output) HttpCookieGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *int { return v.HttpCookieGeneration }).(pulumi.IntPtrOutput)
}

// Limit HTTP cookie persistence to the specified path.
func (o AccessproxyApiGateway6Output) HttpCookiePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.HttpCookiePath }).(pulumi.StringPtrOutput)
}

// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
func (o AccessproxyApiGateway6Output) HttpCookieShare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.HttpCookieShare }).(pulumi.StringPtrOutput)
}

// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
func (o AccessproxyApiGateway6Output) HttpsCookieSecure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.HttpsCookieSecure }).(pulumi.StringPtrOutput)
}

// API Gateway ID.
func (o AccessproxyApiGateway6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
func (o AccessproxyApiGateway6Output) LdbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.LdbMethod }).(pulumi.StringPtrOutput)
}

// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
func (o AccessproxyApiGateway6Output) Persistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.Persistence }).(pulumi.StringPtrOutput)
}

// QUIC setting. The structure of `quic` block is documented below.
func (o AccessproxyApiGateway6Output) Quic() AccessproxyApiGateway6QuicPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *AccessproxyApiGateway6Quic { return v.Quic }).(AccessproxyApiGateway6QuicPtrOutput)
}

// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
func (o AccessproxyApiGateway6Output) Realservers() AccessproxyApiGateway6RealserverArrayOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) []AccessproxyApiGateway6Realserver { return v.Realservers }).(AccessproxyApiGateway6RealserverArrayOutput)
}

// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
func (o AccessproxyApiGateway6Output) SamlRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.SamlRedirect }).(pulumi.StringPtrOutput)
}

// SAML service provider configuration for VIP authentication.
func (o AccessproxyApiGateway6Output) SamlServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.SamlServer }).(pulumi.StringPtrOutput)
}

// Service.
func (o AccessproxyApiGateway6Output) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
func (o AccessproxyApiGateway6Output) SslAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.SslAlgorithm }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
func (o AccessproxyApiGateway6Output) SslCipherSuites() AccessproxyApiGateway6SslCipherSuiteArrayOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) []AccessproxyApiGateway6SslCipherSuite { return v.SslCipherSuites }).(AccessproxyApiGateway6SslCipherSuiteArrayOutput)
}

// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
func (o AccessproxyApiGateway6Output) SslDhBits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.SslDhBits }).(pulumi.StringPtrOutput)
}

// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o AccessproxyApiGateway6Output) SslMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.SslMaxVersion }).(pulumi.StringPtrOutput)
}

// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o AccessproxyApiGateway6Output) SslMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.SslMinVersion }).(pulumi.StringPtrOutput)
}

// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
func (o AccessproxyApiGateway6Output) SslRenegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.SslRenegotiation }).(pulumi.StringPtrOutput)
}

// SSL-VPN web portal.
func (o AccessproxyApiGateway6Output) SslVpnWebPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.SslVpnWebPortal }).(pulumi.StringPtrOutput)
}

// URL pattern to match.
func (o AccessproxyApiGateway6Output) UrlMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.UrlMap }).(pulumi.StringPtrOutput)
}

// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
func (o AccessproxyApiGateway6Output) UrlMapType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.UrlMapType }).(pulumi.StringPtrOutput)
}

// Virtual host.
func (o AccessproxyApiGateway6Output) VirtualHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6) *string { return v.VirtualHost }).(pulumi.StringPtrOutput)
}

type AccessproxyApiGateway6ArrayOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway6)(nil)).Elem()
}

func (o AccessproxyApiGateway6ArrayOutput) ToAccessproxyApiGateway6ArrayOutput() AccessproxyApiGateway6ArrayOutput {
	return o
}

func (o AccessproxyApiGateway6ArrayOutput) ToAccessproxyApiGateway6ArrayOutputWithContext(ctx context.Context) AccessproxyApiGateway6ArrayOutput {
	return o
}

func (o AccessproxyApiGateway6ArrayOutput) Index(i pulumi.IntInput) AccessproxyApiGateway6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessproxyApiGateway6 {
		return vs[0].([]AccessproxyApiGateway6)[vs[1].(int)]
	}).(AccessproxyApiGateway6Output)
}

type AccessproxyApiGateway6Application struct {
	// SaaS application name.
	Name *string `pulumi:"name"`
}

// AccessproxyApiGateway6ApplicationInput is an input type that accepts AccessproxyApiGateway6ApplicationArgs and AccessproxyApiGateway6ApplicationOutput values.
// You can construct a concrete instance of `AccessproxyApiGateway6ApplicationInput` via:
//
//	AccessproxyApiGateway6ApplicationArgs{...}
type AccessproxyApiGateway6ApplicationInput interface {
	pulumi.Input

	ToAccessproxyApiGateway6ApplicationOutput() AccessproxyApiGateway6ApplicationOutput
	ToAccessproxyApiGateway6ApplicationOutputWithContext(context.Context) AccessproxyApiGateway6ApplicationOutput
}

type AccessproxyApiGateway6ApplicationArgs struct {
	// SaaS application name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AccessproxyApiGateway6ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6Application)(nil)).Elem()
}

func (i AccessproxyApiGateway6ApplicationArgs) ToAccessproxyApiGateway6ApplicationOutput() AccessproxyApiGateway6ApplicationOutput {
	return i.ToAccessproxyApiGateway6ApplicationOutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6ApplicationArgs) ToAccessproxyApiGateway6ApplicationOutputWithContext(ctx context.Context) AccessproxyApiGateway6ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6ApplicationOutput)
}

// AccessproxyApiGateway6ApplicationArrayInput is an input type that accepts AccessproxyApiGateway6ApplicationArray and AccessproxyApiGateway6ApplicationArrayOutput values.
// You can construct a concrete instance of `AccessproxyApiGateway6ApplicationArrayInput` via:
//
//	AccessproxyApiGateway6ApplicationArray{ AccessproxyApiGateway6ApplicationArgs{...} }
type AccessproxyApiGateway6ApplicationArrayInput interface {
	pulumi.Input

	ToAccessproxyApiGateway6ApplicationArrayOutput() AccessproxyApiGateway6ApplicationArrayOutput
	ToAccessproxyApiGateway6ApplicationArrayOutputWithContext(context.Context) AccessproxyApiGateway6ApplicationArrayOutput
}

type AccessproxyApiGateway6ApplicationArray []AccessproxyApiGateway6ApplicationInput

func (AccessproxyApiGateway6ApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway6Application)(nil)).Elem()
}

func (i AccessproxyApiGateway6ApplicationArray) ToAccessproxyApiGateway6ApplicationArrayOutput() AccessproxyApiGateway6ApplicationArrayOutput {
	return i.ToAccessproxyApiGateway6ApplicationArrayOutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6ApplicationArray) ToAccessproxyApiGateway6ApplicationArrayOutputWithContext(ctx context.Context) AccessproxyApiGateway6ApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6ApplicationArrayOutput)
}

type AccessproxyApiGateway6ApplicationOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6Application)(nil)).Elem()
}

func (o AccessproxyApiGateway6ApplicationOutput) ToAccessproxyApiGateway6ApplicationOutput() AccessproxyApiGateway6ApplicationOutput {
	return o
}

func (o AccessproxyApiGateway6ApplicationOutput) ToAccessproxyApiGateway6ApplicationOutputWithContext(ctx context.Context) AccessproxyApiGateway6ApplicationOutput {
	return o
}

// SaaS application name.
func (o AccessproxyApiGateway6ApplicationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Application) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AccessproxyApiGateway6ApplicationArrayOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6ApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway6Application)(nil)).Elem()
}

func (o AccessproxyApiGateway6ApplicationArrayOutput) ToAccessproxyApiGateway6ApplicationArrayOutput() AccessproxyApiGateway6ApplicationArrayOutput {
	return o
}

func (o AccessproxyApiGateway6ApplicationArrayOutput) ToAccessproxyApiGateway6ApplicationArrayOutputWithContext(ctx context.Context) AccessproxyApiGateway6ApplicationArrayOutput {
	return o
}

func (o AccessproxyApiGateway6ApplicationArrayOutput) Index(i pulumi.IntInput) AccessproxyApiGateway6ApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessproxyApiGateway6Application {
		return vs[0].([]AccessproxyApiGateway6Application)[vs[1].(int)]
	}).(AccessproxyApiGateway6ApplicationOutput)
}

type AccessproxyApiGateway6Quic struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent *int `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit *int `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration *string `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit *string `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay *int `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize *int `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout *int `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize *int `pulumi:"maxUdpPayloadSize"`
}

// AccessproxyApiGateway6QuicInput is an input type that accepts AccessproxyApiGateway6QuicArgs and AccessproxyApiGateway6QuicOutput values.
// You can construct a concrete instance of `AccessproxyApiGateway6QuicInput` via:
//
//	AccessproxyApiGateway6QuicArgs{...}
type AccessproxyApiGateway6QuicInput interface {
	pulumi.Input

	ToAccessproxyApiGateway6QuicOutput() AccessproxyApiGateway6QuicOutput
	ToAccessproxyApiGateway6QuicOutputWithContext(context.Context) AccessproxyApiGateway6QuicOutput
}

type AccessproxyApiGateway6QuicArgs struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent pulumi.IntPtrInput `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit pulumi.IntPtrInput `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration pulumi.StringPtrInput `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit pulumi.StringPtrInput `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay pulumi.IntPtrInput `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize pulumi.IntPtrInput `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout pulumi.IntPtrInput `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize pulumi.IntPtrInput `pulumi:"maxUdpPayloadSize"`
}

func (AccessproxyApiGateway6QuicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6Quic)(nil)).Elem()
}

func (i AccessproxyApiGateway6QuicArgs) ToAccessproxyApiGateway6QuicOutput() AccessproxyApiGateway6QuicOutput {
	return i.ToAccessproxyApiGateway6QuicOutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6QuicArgs) ToAccessproxyApiGateway6QuicOutputWithContext(ctx context.Context) AccessproxyApiGateway6QuicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6QuicOutput)
}

func (i AccessproxyApiGateway6QuicArgs) ToAccessproxyApiGateway6QuicPtrOutput() AccessproxyApiGateway6QuicPtrOutput {
	return i.ToAccessproxyApiGateway6QuicPtrOutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6QuicArgs) ToAccessproxyApiGateway6QuicPtrOutputWithContext(ctx context.Context) AccessproxyApiGateway6QuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6QuicOutput).ToAccessproxyApiGateway6QuicPtrOutputWithContext(ctx)
}

// AccessproxyApiGateway6QuicPtrInput is an input type that accepts AccessproxyApiGateway6QuicArgs, AccessproxyApiGateway6QuicPtr and AccessproxyApiGateway6QuicPtrOutput values.
// You can construct a concrete instance of `AccessproxyApiGateway6QuicPtrInput` via:
//
//	        AccessproxyApiGateway6QuicArgs{...}
//
//	or:
//
//	        nil
type AccessproxyApiGateway6QuicPtrInput interface {
	pulumi.Input

	ToAccessproxyApiGateway6QuicPtrOutput() AccessproxyApiGateway6QuicPtrOutput
	ToAccessproxyApiGateway6QuicPtrOutputWithContext(context.Context) AccessproxyApiGateway6QuicPtrOutput
}

type accessproxyApiGateway6QuicPtrType AccessproxyApiGateway6QuicArgs

func AccessproxyApiGateway6QuicPtr(v *AccessproxyApiGateway6QuicArgs) AccessproxyApiGateway6QuicPtrInput {
	return (*accessproxyApiGateway6QuicPtrType)(v)
}

func (*accessproxyApiGateway6QuicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessproxyApiGateway6Quic)(nil)).Elem()
}

func (i *accessproxyApiGateway6QuicPtrType) ToAccessproxyApiGateway6QuicPtrOutput() AccessproxyApiGateway6QuicPtrOutput {
	return i.ToAccessproxyApiGateway6QuicPtrOutputWithContext(context.Background())
}

func (i *accessproxyApiGateway6QuicPtrType) ToAccessproxyApiGateway6QuicPtrOutputWithContext(ctx context.Context) AccessproxyApiGateway6QuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6QuicPtrOutput)
}

type AccessproxyApiGateway6QuicOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6QuicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6Quic)(nil)).Elem()
}

func (o AccessproxyApiGateway6QuicOutput) ToAccessproxyApiGateway6QuicOutput() AccessproxyApiGateway6QuicOutput {
	return o
}

func (o AccessproxyApiGateway6QuicOutput) ToAccessproxyApiGateway6QuicOutputWithContext(ctx context.Context) AccessproxyApiGateway6QuicOutput {
	return o
}

func (o AccessproxyApiGateway6QuicOutput) ToAccessproxyApiGateway6QuicPtrOutput() AccessproxyApiGateway6QuicPtrOutput {
	return o.ToAccessproxyApiGateway6QuicPtrOutputWithContext(context.Background())
}

func (o AccessproxyApiGateway6QuicOutput) ToAccessproxyApiGateway6QuicPtrOutputWithContext(ctx context.Context) AccessproxyApiGateway6QuicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessproxyApiGateway6Quic) *AccessproxyApiGateway6Quic {
		return &v
	}).(AccessproxyApiGateway6QuicPtrOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o AccessproxyApiGateway6QuicOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Quic) *int { return v.AckDelayExponent }).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o AccessproxyApiGateway6QuicOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Quic) *int { return v.ActiveConnectionIdLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o AccessproxyApiGateway6QuicOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Quic) *string { return v.ActiveMigration }).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o AccessproxyApiGateway6QuicOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Quic) *string { return v.GreaseQuicBit }).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o AccessproxyApiGateway6QuicOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Quic) *int { return v.MaxAckDelay }).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o AccessproxyApiGateway6QuicOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Quic) *int { return v.MaxDatagramFrameSize }).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o AccessproxyApiGateway6QuicOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Quic) *int { return v.MaxIdleTimeout }).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o AccessproxyApiGateway6QuicOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Quic) *int { return v.MaxUdpPayloadSize }).(pulumi.IntPtrOutput)
}

type AccessproxyApiGateway6QuicPtrOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6QuicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessproxyApiGateway6Quic)(nil)).Elem()
}

func (o AccessproxyApiGateway6QuicPtrOutput) ToAccessproxyApiGateway6QuicPtrOutput() AccessproxyApiGateway6QuicPtrOutput {
	return o
}

func (o AccessproxyApiGateway6QuicPtrOutput) ToAccessproxyApiGateway6QuicPtrOutputWithContext(ctx context.Context) AccessproxyApiGateway6QuicPtrOutput {
	return o
}

func (o AccessproxyApiGateway6QuicPtrOutput) Elem() AccessproxyApiGateway6QuicOutput {
	return o.ApplyT(func(v *AccessproxyApiGateway6Quic) AccessproxyApiGateway6Quic {
		if v != nil {
			return *v
		}
		var ret AccessproxyApiGateway6Quic
		return ret
	}).(AccessproxyApiGateway6QuicOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o AccessproxyApiGateway6QuicPtrOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.AckDelayExponent
	}).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o AccessproxyApiGateway6QuicPtrOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.ActiveConnectionIdLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o AccessproxyApiGateway6QuicPtrOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGateway6Quic) *string {
		if v == nil {
			return nil
		}
		return v.ActiveMigration
	}).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o AccessproxyApiGateway6QuicPtrOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGateway6Quic) *string {
		if v == nil {
			return nil
		}
		return v.GreaseQuicBit
	}).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o AccessproxyApiGateway6QuicPtrOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxAckDelay
	}).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o AccessproxyApiGateway6QuicPtrOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxDatagramFrameSize
	}).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o AccessproxyApiGateway6QuicPtrOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleTimeout
	}).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o AccessproxyApiGateway6QuicPtrOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGateway6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxUdpPayloadSize
	}).(pulumi.IntPtrOutput)
}

type AccessproxyApiGateway6Realserver struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType *string `pulumi:"addrType"`
	// Address or address group of the real server.
	Address *string `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain *string `pulumi:"domain"`
	// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
	ExternalAuth *string `pulumi:"externalAuth"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck *string `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto *string `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval *string `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IPv6 address of the real server.
	Ip *string `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport *string `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port *int `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert *string `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation *string `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys []AccessproxyApiGateway6RealserverSshHostKey `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost *string `pulumi:"translateHost"`
	// Tunnel encryption. Valid values: `enable`, `disable`.
	TunnelEncryption *string `pulumi:"tunnelEncryption"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type *string `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// AccessproxyApiGateway6RealserverInput is an input type that accepts AccessproxyApiGateway6RealserverArgs and AccessproxyApiGateway6RealserverOutput values.
// You can construct a concrete instance of `AccessproxyApiGateway6RealserverInput` via:
//
//	AccessproxyApiGateway6RealserverArgs{...}
type AccessproxyApiGateway6RealserverInput interface {
	pulumi.Input

	ToAccessproxyApiGateway6RealserverOutput() AccessproxyApiGateway6RealserverOutput
	ToAccessproxyApiGateway6RealserverOutputWithContext(context.Context) AccessproxyApiGateway6RealserverOutput
}

type AccessproxyApiGateway6RealserverArgs struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Address or address group of the real server.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
	ExternalAuth pulumi.StringPtrInput `pulumi:"externalAuth"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto pulumi.StringPtrInput `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval pulumi.StringPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport pulumi.StringPtrInput `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert pulumi.StringPtrInput `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation pulumi.StringPtrInput `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys AccessproxyApiGateway6RealserverSshHostKeyArrayInput `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost pulumi.StringPtrInput `pulumi:"translateHost"`
	// Tunnel encryption. Valid values: `enable`, `disable`.
	TunnelEncryption pulumi.StringPtrInput `pulumi:"tunnelEncryption"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (AccessproxyApiGateway6RealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6Realserver)(nil)).Elem()
}

func (i AccessproxyApiGateway6RealserverArgs) ToAccessproxyApiGateway6RealserverOutput() AccessproxyApiGateway6RealserverOutput {
	return i.ToAccessproxyApiGateway6RealserverOutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6RealserverArgs) ToAccessproxyApiGateway6RealserverOutputWithContext(ctx context.Context) AccessproxyApiGateway6RealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6RealserverOutput)
}

// AccessproxyApiGateway6RealserverArrayInput is an input type that accepts AccessproxyApiGateway6RealserverArray and AccessproxyApiGateway6RealserverArrayOutput values.
// You can construct a concrete instance of `AccessproxyApiGateway6RealserverArrayInput` via:
//
//	AccessproxyApiGateway6RealserverArray{ AccessproxyApiGateway6RealserverArgs{...} }
type AccessproxyApiGateway6RealserverArrayInput interface {
	pulumi.Input

	ToAccessproxyApiGateway6RealserverArrayOutput() AccessproxyApiGateway6RealserverArrayOutput
	ToAccessproxyApiGateway6RealserverArrayOutputWithContext(context.Context) AccessproxyApiGateway6RealserverArrayOutput
}

type AccessproxyApiGateway6RealserverArray []AccessproxyApiGateway6RealserverInput

func (AccessproxyApiGateway6RealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway6Realserver)(nil)).Elem()
}

func (i AccessproxyApiGateway6RealserverArray) ToAccessproxyApiGateway6RealserverArrayOutput() AccessproxyApiGateway6RealserverArrayOutput {
	return i.ToAccessproxyApiGateway6RealserverArrayOutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6RealserverArray) ToAccessproxyApiGateway6RealserverArrayOutputWithContext(ctx context.Context) AccessproxyApiGateway6RealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6RealserverArrayOutput)
}

type AccessproxyApiGateway6RealserverOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6RealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6Realserver)(nil)).Elem()
}

func (o AccessproxyApiGateway6RealserverOutput) ToAccessproxyApiGateway6RealserverOutput() AccessproxyApiGateway6RealserverOutput {
	return o
}

func (o AccessproxyApiGateway6RealserverOutput) ToAccessproxyApiGateway6RealserverOutputWithContext(ctx context.Context) AccessproxyApiGateway6RealserverOutput {
	return o
}

// Type of address. Valid values: `ip`, `fqdn`.
func (o AccessproxyApiGateway6RealserverOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Address or address group of the real server.
func (o AccessproxyApiGateway6RealserverOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Wildcard domain name of the real server.
func (o AccessproxyApiGateway6RealserverOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
func (o AccessproxyApiGateway6RealserverOutput) ExternalAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.ExternalAuth }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
func (o AccessproxyApiGateway6RealserverOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
func (o AccessproxyApiGateway6RealserverOutput) HealthCheckProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.HealthCheckProto }).(pulumi.StringPtrOutput)
}

// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
func (o AccessproxyApiGateway6RealserverOutput) HolddownInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.HolddownInterval }).(pulumi.StringPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o AccessproxyApiGateway6RealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o AccessproxyApiGateway6RealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 address of the real server.
func (o AccessproxyApiGateway6RealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o AccessproxyApiGateway6RealserverOutput) Mappedport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.Mappedport }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o AccessproxyApiGateway6RealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set access-proxy SSH client certificate profile.
func (o AccessproxyApiGateway6RealserverOutput) SshClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.SshClientCert }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
func (o AccessproxyApiGateway6RealserverOutput) SshHostKeyValidation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.SshHostKeyValidation }).(pulumi.StringPtrOutput)
}

// One or more server host key. The structure of `sshHostKey` block is documented below.
func (o AccessproxyApiGateway6RealserverOutput) SshHostKeys() AccessproxyApiGateway6RealserverSshHostKeyArrayOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) []AccessproxyApiGateway6RealserverSshHostKey {
		return v.SshHostKeys
	}).(AccessproxyApiGateway6RealserverSshHostKeyArrayOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o AccessproxyApiGateway6RealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
func (o AccessproxyApiGateway6RealserverOutput) TranslateHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.TranslateHost }).(pulumi.StringPtrOutput)
}

// Tunnel encryption. Valid values: `enable`, `disable`.
func (o AccessproxyApiGateway6RealserverOutput) TunnelEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.TunnelEncryption }).(pulumi.StringPtrOutput)
}

// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
func (o AccessproxyApiGateway6RealserverOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o AccessproxyApiGateway6RealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6Realserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AccessproxyApiGateway6RealserverArrayOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6RealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway6Realserver)(nil)).Elem()
}

func (o AccessproxyApiGateway6RealserverArrayOutput) ToAccessproxyApiGateway6RealserverArrayOutput() AccessproxyApiGateway6RealserverArrayOutput {
	return o
}

func (o AccessproxyApiGateway6RealserverArrayOutput) ToAccessproxyApiGateway6RealserverArrayOutputWithContext(ctx context.Context) AccessproxyApiGateway6RealserverArrayOutput {
	return o
}

func (o AccessproxyApiGateway6RealserverArrayOutput) Index(i pulumi.IntInput) AccessproxyApiGateway6RealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessproxyApiGateway6Realserver {
		return vs[0].([]AccessproxyApiGateway6Realserver)[vs[1].(int)]
	}).(AccessproxyApiGateway6RealserverOutput)
}

type AccessproxyApiGateway6RealserverSshHostKey struct {
	// Server host key name.
	Name *string `pulumi:"name"`
}

// AccessproxyApiGateway6RealserverSshHostKeyInput is an input type that accepts AccessproxyApiGateway6RealserverSshHostKeyArgs and AccessproxyApiGateway6RealserverSshHostKeyOutput values.
// You can construct a concrete instance of `AccessproxyApiGateway6RealserverSshHostKeyInput` via:
//
//	AccessproxyApiGateway6RealserverSshHostKeyArgs{...}
type AccessproxyApiGateway6RealserverSshHostKeyInput interface {
	pulumi.Input

	ToAccessproxyApiGateway6RealserverSshHostKeyOutput() AccessproxyApiGateway6RealserverSshHostKeyOutput
	ToAccessproxyApiGateway6RealserverSshHostKeyOutputWithContext(context.Context) AccessproxyApiGateway6RealserverSshHostKeyOutput
}

type AccessproxyApiGateway6RealserverSshHostKeyArgs struct {
	// Server host key name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AccessproxyApiGateway6RealserverSshHostKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (i AccessproxyApiGateway6RealserverSshHostKeyArgs) ToAccessproxyApiGateway6RealserverSshHostKeyOutput() AccessproxyApiGateway6RealserverSshHostKeyOutput {
	return i.ToAccessproxyApiGateway6RealserverSshHostKeyOutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6RealserverSshHostKeyArgs) ToAccessproxyApiGateway6RealserverSshHostKeyOutputWithContext(ctx context.Context) AccessproxyApiGateway6RealserverSshHostKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6RealserverSshHostKeyOutput)
}

// AccessproxyApiGateway6RealserverSshHostKeyArrayInput is an input type that accepts AccessproxyApiGateway6RealserverSshHostKeyArray and AccessproxyApiGateway6RealserverSshHostKeyArrayOutput values.
// You can construct a concrete instance of `AccessproxyApiGateway6RealserverSshHostKeyArrayInput` via:
//
//	AccessproxyApiGateway6RealserverSshHostKeyArray{ AccessproxyApiGateway6RealserverSshHostKeyArgs{...} }
type AccessproxyApiGateway6RealserverSshHostKeyArrayInput interface {
	pulumi.Input

	ToAccessproxyApiGateway6RealserverSshHostKeyArrayOutput() AccessproxyApiGateway6RealserverSshHostKeyArrayOutput
	ToAccessproxyApiGateway6RealserverSshHostKeyArrayOutputWithContext(context.Context) AccessproxyApiGateway6RealserverSshHostKeyArrayOutput
}

type AccessproxyApiGateway6RealserverSshHostKeyArray []AccessproxyApiGateway6RealserverSshHostKeyInput

func (AccessproxyApiGateway6RealserverSshHostKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (i AccessproxyApiGateway6RealserverSshHostKeyArray) ToAccessproxyApiGateway6RealserverSshHostKeyArrayOutput() AccessproxyApiGateway6RealserverSshHostKeyArrayOutput {
	return i.ToAccessproxyApiGateway6RealserverSshHostKeyArrayOutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6RealserverSshHostKeyArray) ToAccessproxyApiGateway6RealserverSshHostKeyArrayOutputWithContext(ctx context.Context) AccessproxyApiGateway6RealserverSshHostKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6RealserverSshHostKeyArrayOutput)
}

type AccessproxyApiGateway6RealserverSshHostKeyOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6RealserverSshHostKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (o AccessproxyApiGateway6RealserverSshHostKeyOutput) ToAccessproxyApiGateway6RealserverSshHostKeyOutput() AccessproxyApiGateway6RealserverSshHostKeyOutput {
	return o
}

func (o AccessproxyApiGateway6RealserverSshHostKeyOutput) ToAccessproxyApiGateway6RealserverSshHostKeyOutputWithContext(ctx context.Context) AccessproxyApiGateway6RealserverSshHostKeyOutput {
	return o
}

// Server host key name.
func (o AccessproxyApiGateway6RealserverSshHostKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6RealserverSshHostKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AccessproxyApiGateway6RealserverSshHostKeyArrayOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6RealserverSshHostKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (o AccessproxyApiGateway6RealserverSshHostKeyArrayOutput) ToAccessproxyApiGateway6RealserverSshHostKeyArrayOutput() AccessproxyApiGateway6RealserverSshHostKeyArrayOutput {
	return o
}

func (o AccessproxyApiGateway6RealserverSshHostKeyArrayOutput) ToAccessproxyApiGateway6RealserverSshHostKeyArrayOutputWithContext(ctx context.Context) AccessproxyApiGateway6RealserverSshHostKeyArrayOutput {
	return o
}

func (o AccessproxyApiGateway6RealserverSshHostKeyArrayOutput) Index(i pulumi.IntInput) AccessproxyApiGateway6RealserverSshHostKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessproxyApiGateway6RealserverSshHostKey {
		return vs[0].([]AccessproxyApiGateway6RealserverSshHostKey)[vs[1].(int)]
	}).(AccessproxyApiGateway6RealserverSshHostKeyOutput)
}

type AccessproxyApiGateway6SslCipherSuite struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions *string `pulumi:"versions"`
}

// AccessproxyApiGateway6SslCipherSuiteInput is an input type that accepts AccessproxyApiGateway6SslCipherSuiteArgs and AccessproxyApiGateway6SslCipherSuiteOutput values.
// You can construct a concrete instance of `AccessproxyApiGateway6SslCipherSuiteInput` via:
//
//	AccessproxyApiGateway6SslCipherSuiteArgs{...}
type AccessproxyApiGateway6SslCipherSuiteInput interface {
	pulumi.Input

	ToAccessproxyApiGateway6SslCipherSuiteOutput() AccessproxyApiGateway6SslCipherSuiteOutput
	ToAccessproxyApiGateway6SslCipherSuiteOutputWithContext(context.Context) AccessproxyApiGateway6SslCipherSuiteOutput
}

type AccessproxyApiGateway6SslCipherSuiteArgs struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (AccessproxyApiGateway6SslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6SslCipherSuite)(nil)).Elem()
}

func (i AccessproxyApiGateway6SslCipherSuiteArgs) ToAccessproxyApiGateway6SslCipherSuiteOutput() AccessproxyApiGateway6SslCipherSuiteOutput {
	return i.ToAccessproxyApiGateway6SslCipherSuiteOutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6SslCipherSuiteArgs) ToAccessproxyApiGateway6SslCipherSuiteOutputWithContext(ctx context.Context) AccessproxyApiGateway6SslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6SslCipherSuiteOutput)
}

// AccessproxyApiGateway6SslCipherSuiteArrayInput is an input type that accepts AccessproxyApiGateway6SslCipherSuiteArray and AccessproxyApiGateway6SslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `AccessproxyApiGateway6SslCipherSuiteArrayInput` via:
//
//	AccessproxyApiGateway6SslCipherSuiteArray{ AccessproxyApiGateway6SslCipherSuiteArgs{...} }
type AccessproxyApiGateway6SslCipherSuiteArrayInput interface {
	pulumi.Input

	ToAccessproxyApiGateway6SslCipherSuiteArrayOutput() AccessproxyApiGateway6SslCipherSuiteArrayOutput
	ToAccessproxyApiGateway6SslCipherSuiteArrayOutputWithContext(context.Context) AccessproxyApiGateway6SslCipherSuiteArrayOutput
}

type AccessproxyApiGateway6SslCipherSuiteArray []AccessproxyApiGateway6SslCipherSuiteInput

func (AccessproxyApiGateway6SslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway6SslCipherSuite)(nil)).Elem()
}

func (i AccessproxyApiGateway6SslCipherSuiteArray) ToAccessproxyApiGateway6SslCipherSuiteArrayOutput() AccessproxyApiGateway6SslCipherSuiteArrayOutput {
	return i.ToAccessproxyApiGateway6SslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i AccessproxyApiGateway6SslCipherSuiteArray) ToAccessproxyApiGateway6SslCipherSuiteArrayOutputWithContext(ctx context.Context) AccessproxyApiGateway6SslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGateway6SslCipherSuiteArrayOutput)
}

type AccessproxyApiGateway6SslCipherSuiteOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6SslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway6SslCipherSuite)(nil)).Elem()
}

func (o AccessproxyApiGateway6SslCipherSuiteOutput) ToAccessproxyApiGateway6SslCipherSuiteOutput() AccessproxyApiGateway6SslCipherSuiteOutput {
	return o
}

func (o AccessproxyApiGateway6SslCipherSuiteOutput) ToAccessproxyApiGateway6SslCipherSuiteOutputWithContext(ctx context.Context) AccessproxyApiGateway6SslCipherSuiteOutput {
	return o
}

// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
func (o AccessproxyApiGateway6SslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6SslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o AccessproxyApiGateway6SslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6SslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o AccessproxyApiGateway6SslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway6SslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type AccessproxyApiGateway6SslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGateway6SslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway6SslCipherSuite)(nil)).Elem()
}

func (o AccessproxyApiGateway6SslCipherSuiteArrayOutput) ToAccessproxyApiGateway6SslCipherSuiteArrayOutput() AccessproxyApiGateway6SslCipherSuiteArrayOutput {
	return o
}

func (o AccessproxyApiGateway6SslCipherSuiteArrayOutput) ToAccessproxyApiGateway6SslCipherSuiteArrayOutputWithContext(ctx context.Context) AccessproxyApiGateway6SslCipherSuiteArrayOutput {
	return o
}

func (o AccessproxyApiGateway6SslCipherSuiteArrayOutput) Index(i pulumi.IntInput) AccessproxyApiGateway6SslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessproxyApiGateway6SslCipherSuite {
		return vs[0].([]AccessproxyApiGateway6SslCipherSuite)[vs[1].(int)]
	}).(AccessproxyApiGateway6SslCipherSuiteOutput)
}

type AccessproxyApiGateway struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications []AccessproxyApiGatewayApplication `pulumi:"applications"`
	// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
	H2Support *string `pulumi:"h2Support"`
	// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
	H3Support *string `pulumi:"h3Support"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge *int `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain *string `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost *string `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration *int `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath *string `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare *string `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure *string `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id *int `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod *string `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence *string `pulumi:"persistence"`
	// QUIC setting. The structure of `quic` block is documented below.
	Quic *AccessproxyApiGatewayQuic `pulumi:"quic"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers []AccessproxyApiGatewayRealserver `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect *string `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer *string `pulumi:"samlServer"`
	// Service.
	Service *string `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm *string `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites []AccessproxyApiGatewaySslCipherSuite `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits *string `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion *string `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion *string `pulumi:"sslMinVersion"`
	// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
	SslRenegotiation *string `pulumi:"sslRenegotiation"`
	// SSL-VPN web portal.
	SslVpnWebPortal *string `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap *string `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType *string `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost *string `pulumi:"virtualHost"`
}

// AccessproxyApiGatewayInput is an input type that accepts AccessproxyApiGatewayArgs and AccessproxyApiGatewayOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewayInput` via:
//
//	AccessproxyApiGatewayArgs{...}
type AccessproxyApiGatewayInput interface {
	pulumi.Input

	ToAccessproxyApiGatewayOutput() AccessproxyApiGatewayOutput
	ToAccessproxyApiGatewayOutputWithContext(context.Context) AccessproxyApiGatewayOutput
}

type AccessproxyApiGatewayArgs struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications AccessproxyApiGatewayApplicationArrayInput `pulumi:"applications"`
	// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
	H2Support pulumi.StringPtrInput `pulumi:"h2Support"`
	// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
	H3Support pulumi.StringPtrInput `pulumi:"h3Support"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge pulumi.IntPtrInput `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain pulumi.StringPtrInput `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost pulumi.StringPtrInput `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration pulumi.IntPtrInput `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath pulumi.StringPtrInput `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare pulumi.StringPtrInput `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure pulumi.StringPtrInput `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod pulumi.StringPtrInput `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence pulumi.StringPtrInput `pulumi:"persistence"`
	// QUIC setting. The structure of `quic` block is documented below.
	Quic AccessproxyApiGatewayQuicPtrInput `pulumi:"quic"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers AccessproxyApiGatewayRealserverArrayInput `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect pulumi.StringPtrInput `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer pulumi.StringPtrInput `pulumi:"samlServer"`
	// Service.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringPtrInput `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites AccessproxyApiGatewaySslCipherSuiteArrayInput `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits pulumi.StringPtrInput `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion pulumi.StringPtrInput `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion pulumi.StringPtrInput `pulumi:"sslMinVersion"`
	// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
	SslRenegotiation pulumi.StringPtrInput `pulumi:"sslRenegotiation"`
	// SSL-VPN web portal.
	SslVpnWebPortal pulumi.StringPtrInput `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap pulumi.StringPtrInput `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType pulumi.StringPtrInput `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost pulumi.StringPtrInput `pulumi:"virtualHost"`
}

func (AccessproxyApiGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway)(nil)).Elem()
}

func (i AccessproxyApiGatewayArgs) ToAccessproxyApiGatewayOutput() AccessproxyApiGatewayOutput {
	return i.ToAccessproxyApiGatewayOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewayArgs) ToAccessproxyApiGatewayOutputWithContext(ctx context.Context) AccessproxyApiGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewayOutput)
}

// AccessproxyApiGatewayArrayInput is an input type that accepts AccessproxyApiGatewayArray and AccessproxyApiGatewayArrayOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewayArrayInput` via:
//
//	AccessproxyApiGatewayArray{ AccessproxyApiGatewayArgs{...} }
type AccessproxyApiGatewayArrayInput interface {
	pulumi.Input

	ToAccessproxyApiGatewayArrayOutput() AccessproxyApiGatewayArrayOutput
	ToAccessproxyApiGatewayArrayOutputWithContext(context.Context) AccessproxyApiGatewayArrayOutput
}

type AccessproxyApiGatewayArray []AccessproxyApiGatewayInput

func (AccessproxyApiGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway)(nil)).Elem()
}

func (i AccessproxyApiGatewayArray) ToAccessproxyApiGatewayArrayOutput() AccessproxyApiGatewayArrayOutput {
	return i.ToAccessproxyApiGatewayArrayOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewayArray) ToAccessproxyApiGatewayArrayOutputWithContext(ctx context.Context) AccessproxyApiGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewayArrayOutput)
}

type AccessproxyApiGatewayOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGateway)(nil)).Elem()
}

func (o AccessproxyApiGatewayOutput) ToAccessproxyApiGatewayOutput() AccessproxyApiGatewayOutput {
	return o
}

func (o AccessproxyApiGatewayOutput) ToAccessproxyApiGatewayOutputWithContext(ctx context.Context) AccessproxyApiGatewayOutput {
	return o
}

// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
func (o AccessproxyApiGatewayOutput) Applications() AccessproxyApiGatewayApplicationArrayOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) []AccessproxyApiGatewayApplication { return v.Applications }).(AccessproxyApiGatewayApplicationArrayOutput)
}

// HTTP2 support, default=Enable. Valid values: `enable`, `disable`.
func (o AccessproxyApiGatewayOutput) H2Support() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.H2Support }).(pulumi.StringPtrOutput)
}

// HTTP3/QUIC support, default=Disable. Valid values: `enable`, `disable`.
func (o AccessproxyApiGatewayOutput) H3Support() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.H3Support }).(pulumi.StringPtrOutput)
}

// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
func (o AccessproxyApiGatewayOutput) HttpCookieAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *int { return v.HttpCookieAge }).(pulumi.IntPtrOutput)
}

// Domain that HTTP cookie persistence should apply to.
func (o AccessproxyApiGatewayOutput) HttpCookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.HttpCookieDomain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
func (o AccessproxyApiGatewayOutput) HttpCookieDomainFromHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.HttpCookieDomainFromHost }).(pulumi.StringPtrOutput)
}

// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
func (o AccessproxyApiGatewayOutput) HttpCookieGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *int { return v.HttpCookieGeneration }).(pulumi.IntPtrOutput)
}

// Limit HTTP cookie persistence to the specified path.
func (o AccessproxyApiGatewayOutput) HttpCookiePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.HttpCookiePath }).(pulumi.StringPtrOutput)
}

// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
func (o AccessproxyApiGatewayOutput) HttpCookieShare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.HttpCookieShare }).(pulumi.StringPtrOutput)
}

// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
func (o AccessproxyApiGatewayOutput) HttpsCookieSecure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.HttpsCookieSecure }).(pulumi.StringPtrOutput)
}

// API Gateway ID.
func (o AccessproxyApiGatewayOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
func (o AccessproxyApiGatewayOutput) LdbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.LdbMethod }).(pulumi.StringPtrOutput)
}

// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
func (o AccessproxyApiGatewayOutput) Persistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.Persistence }).(pulumi.StringPtrOutput)
}

// QUIC setting. The structure of `quic` block is documented below.
func (o AccessproxyApiGatewayOutput) Quic() AccessproxyApiGatewayQuicPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *AccessproxyApiGatewayQuic { return v.Quic }).(AccessproxyApiGatewayQuicPtrOutput)
}

// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
func (o AccessproxyApiGatewayOutput) Realservers() AccessproxyApiGatewayRealserverArrayOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) []AccessproxyApiGatewayRealserver { return v.Realservers }).(AccessproxyApiGatewayRealserverArrayOutput)
}

// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
func (o AccessproxyApiGatewayOutput) SamlRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.SamlRedirect }).(pulumi.StringPtrOutput)
}

// SAML service provider configuration for VIP authentication.
func (o AccessproxyApiGatewayOutput) SamlServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.SamlServer }).(pulumi.StringPtrOutput)
}

// Service.
func (o AccessproxyApiGatewayOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
func (o AccessproxyApiGatewayOutput) SslAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.SslAlgorithm }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
func (o AccessproxyApiGatewayOutput) SslCipherSuites() AccessproxyApiGatewaySslCipherSuiteArrayOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) []AccessproxyApiGatewaySslCipherSuite { return v.SslCipherSuites }).(AccessproxyApiGatewaySslCipherSuiteArrayOutput)
}

// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
func (o AccessproxyApiGatewayOutput) SslDhBits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.SslDhBits }).(pulumi.StringPtrOutput)
}

// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o AccessproxyApiGatewayOutput) SslMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.SslMaxVersion }).(pulumi.StringPtrOutput)
}

// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o AccessproxyApiGatewayOutput) SslMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.SslMinVersion }).(pulumi.StringPtrOutput)
}

// Enable/disable secure renegotiation to comply with RFC 5746. Valid values: `enable`, `disable`.
func (o AccessproxyApiGatewayOutput) SslRenegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.SslRenegotiation }).(pulumi.StringPtrOutput)
}

// SSL-VPN web portal.
func (o AccessproxyApiGatewayOutput) SslVpnWebPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.SslVpnWebPortal }).(pulumi.StringPtrOutput)
}

// URL pattern to match.
func (o AccessproxyApiGatewayOutput) UrlMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.UrlMap }).(pulumi.StringPtrOutput)
}

// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
func (o AccessproxyApiGatewayOutput) UrlMapType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.UrlMapType }).(pulumi.StringPtrOutput)
}

// Virtual host.
func (o AccessproxyApiGatewayOutput) VirtualHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGateway) *string { return v.VirtualHost }).(pulumi.StringPtrOutput)
}

type AccessproxyApiGatewayArrayOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGateway)(nil)).Elem()
}

func (o AccessproxyApiGatewayArrayOutput) ToAccessproxyApiGatewayArrayOutput() AccessproxyApiGatewayArrayOutput {
	return o
}

func (o AccessproxyApiGatewayArrayOutput) ToAccessproxyApiGatewayArrayOutputWithContext(ctx context.Context) AccessproxyApiGatewayArrayOutput {
	return o
}

func (o AccessproxyApiGatewayArrayOutput) Index(i pulumi.IntInput) AccessproxyApiGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessproxyApiGateway {
		return vs[0].([]AccessproxyApiGateway)[vs[1].(int)]
	}).(AccessproxyApiGatewayOutput)
}

type AccessproxyApiGatewayApplication struct {
	// SaaS application name.
	Name *string `pulumi:"name"`
}

// AccessproxyApiGatewayApplicationInput is an input type that accepts AccessproxyApiGatewayApplicationArgs and AccessproxyApiGatewayApplicationOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewayApplicationInput` via:
//
//	AccessproxyApiGatewayApplicationArgs{...}
type AccessproxyApiGatewayApplicationInput interface {
	pulumi.Input

	ToAccessproxyApiGatewayApplicationOutput() AccessproxyApiGatewayApplicationOutput
	ToAccessproxyApiGatewayApplicationOutputWithContext(context.Context) AccessproxyApiGatewayApplicationOutput
}

type AccessproxyApiGatewayApplicationArgs struct {
	// SaaS application name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AccessproxyApiGatewayApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGatewayApplication)(nil)).Elem()
}

func (i AccessproxyApiGatewayApplicationArgs) ToAccessproxyApiGatewayApplicationOutput() AccessproxyApiGatewayApplicationOutput {
	return i.ToAccessproxyApiGatewayApplicationOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewayApplicationArgs) ToAccessproxyApiGatewayApplicationOutputWithContext(ctx context.Context) AccessproxyApiGatewayApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewayApplicationOutput)
}

// AccessproxyApiGatewayApplicationArrayInput is an input type that accepts AccessproxyApiGatewayApplicationArray and AccessproxyApiGatewayApplicationArrayOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewayApplicationArrayInput` via:
//
//	AccessproxyApiGatewayApplicationArray{ AccessproxyApiGatewayApplicationArgs{...} }
type AccessproxyApiGatewayApplicationArrayInput interface {
	pulumi.Input

	ToAccessproxyApiGatewayApplicationArrayOutput() AccessproxyApiGatewayApplicationArrayOutput
	ToAccessproxyApiGatewayApplicationArrayOutputWithContext(context.Context) AccessproxyApiGatewayApplicationArrayOutput
}

type AccessproxyApiGatewayApplicationArray []AccessproxyApiGatewayApplicationInput

func (AccessproxyApiGatewayApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGatewayApplication)(nil)).Elem()
}

func (i AccessproxyApiGatewayApplicationArray) ToAccessproxyApiGatewayApplicationArrayOutput() AccessproxyApiGatewayApplicationArrayOutput {
	return i.ToAccessproxyApiGatewayApplicationArrayOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewayApplicationArray) ToAccessproxyApiGatewayApplicationArrayOutputWithContext(ctx context.Context) AccessproxyApiGatewayApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewayApplicationArrayOutput)
}

type AccessproxyApiGatewayApplicationOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewayApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGatewayApplication)(nil)).Elem()
}

func (o AccessproxyApiGatewayApplicationOutput) ToAccessproxyApiGatewayApplicationOutput() AccessproxyApiGatewayApplicationOutput {
	return o
}

func (o AccessproxyApiGatewayApplicationOutput) ToAccessproxyApiGatewayApplicationOutputWithContext(ctx context.Context) AccessproxyApiGatewayApplicationOutput {
	return o
}

// SaaS application name.
func (o AccessproxyApiGatewayApplicationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayApplication) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AccessproxyApiGatewayApplicationArrayOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewayApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGatewayApplication)(nil)).Elem()
}

func (o AccessproxyApiGatewayApplicationArrayOutput) ToAccessproxyApiGatewayApplicationArrayOutput() AccessproxyApiGatewayApplicationArrayOutput {
	return o
}

func (o AccessproxyApiGatewayApplicationArrayOutput) ToAccessproxyApiGatewayApplicationArrayOutputWithContext(ctx context.Context) AccessproxyApiGatewayApplicationArrayOutput {
	return o
}

func (o AccessproxyApiGatewayApplicationArrayOutput) Index(i pulumi.IntInput) AccessproxyApiGatewayApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessproxyApiGatewayApplication {
		return vs[0].([]AccessproxyApiGatewayApplication)[vs[1].(int)]
	}).(AccessproxyApiGatewayApplicationOutput)
}

type AccessproxyApiGatewayQuic struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent *int `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit *int `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration *string `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit *string `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay *int `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize *int `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout *int `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize *int `pulumi:"maxUdpPayloadSize"`
}

// AccessproxyApiGatewayQuicInput is an input type that accepts AccessproxyApiGatewayQuicArgs and AccessproxyApiGatewayQuicOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewayQuicInput` via:
//
//	AccessproxyApiGatewayQuicArgs{...}
type AccessproxyApiGatewayQuicInput interface {
	pulumi.Input

	ToAccessproxyApiGatewayQuicOutput() AccessproxyApiGatewayQuicOutput
	ToAccessproxyApiGatewayQuicOutputWithContext(context.Context) AccessproxyApiGatewayQuicOutput
}

type AccessproxyApiGatewayQuicArgs struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent pulumi.IntPtrInput `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit pulumi.IntPtrInput `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration pulumi.StringPtrInput `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit pulumi.StringPtrInput `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay pulumi.IntPtrInput `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize pulumi.IntPtrInput `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout pulumi.IntPtrInput `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize pulumi.IntPtrInput `pulumi:"maxUdpPayloadSize"`
}

func (AccessproxyApiGatewayQuicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGatewayQuic)(nil)).Elem()
}

func (i AccessproxyApiGatewayQuicArgs) ToAccessproxyApiGatewayQuicOutput() AccessproxyApiGatewayQuicOutput {
	return i.ToAccessproxyApiGatewayQuicOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewayQuicArgs) ToAccessproxyApiGatewayQuicOutputWithContext(ctx context.Context) AccessproxyApiGatewayQuicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewayQuicOutput)
}

func (i AccessproxyApiGatewayQuicArgs) ToAccessproxyApiGatewayQuicPtrOutput() AccessproxyApiGatewayQuicPtrOutput {
	return i.ToAccessproxyApiGatewayQuicPtrOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewayQuicArgs) ToAccessproxyApiGatewayQuicPtrOutputWithContext(ctx context.Context) AccessproxyApiGatewayQuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewayQuicOutput).ToAccessproxyApiGatewayQuicPtrOutputWithContext(ctx)
}

// AccessproxyApiGatewayQuicPtrInput is an input type that accepts AccessproxyApiGatewayQuicArgs, AccessproxyApiGatewayQuicPtr and AccessproxyApiGatewayQuicPtrOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewayQuicPtrInput` via:
//
//	        AccessproxyApiGatewayQuicArgs{...}
//
//	or:
//
//	        nil
type AccessproxyApiGatewayQuicPtrInput interface {
	pulumi.Input

	ToAccessproxyApiGatewayQuicPtrOutput() AccessproxyApiGatewayQuicPtrOutput
	ToAccessproxyApiGatewayQuicPtrOutputWithContext(context.Context) AccessproxyApiGatewayQuicPtrOutput
}

type accessproxyApiGatewayQuicPtrType AccessproxyApiGatewayQuicArgs

func AccessproxyApiGatewayQuicPtr(v *AccessproxyApiGatewayQuicArgs) AccessproxyApiGatewayQuicPtrInput {
	return (*accessproxyApiGatewayQuicPtrType)(v)
}

func (*accessproxyApiGatewayQuicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessproxyApiGatewayQuic)(nil)).Elem()
}

func (i *accessproxyApiGatewayQuicPtrType) ToAccessproxyApiGatewayQuicPtrOutput() AccessproxyApiGatewayQuicPtrOutput {
	return i.ToAccessproxyApiGatewayQuicPtrOutputWithContext(context.Background())
}

func (i *accessproxyApiGatewayQuicPtrType) ToAccessproxyApiGatewayQuicPtrOutputWithContext(ctx context.Context) AccessproxyApiGatewayQuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewayQuicPtrOutput)
}

type AccessproxyApiGatewayQuicOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewayQuicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGatewayQuic)(nil)).Elem()
}

func (o AccessproxyApiGatewayQuicOutput) ToAccessproxyApiGatewayQuicOutput() AccessproxyApiGatewayQuicOutput {
	return o
}

func (o AccessproxyApiGatewayQuicOutput) ToAccessproxyApiGatewayQuicOutputWithContext(ctx context.Context) AccessproxyApiGatewayQuicOutput {
	return o
}

func (o AccessproxyApiGatewayQuicOutput) ToAccessproxyApiGatewayQuicPtrOutput() AccessproxyApiGatewayQuicPtrOutput {
	return o.ToAccessproxyApiGatewayQuicPtrOutputWithContext(context.Background())
}

func (o AccessproxyApiGatewayQuicOutput) ToAccessproxyApiGatewayQuicPtrOutputWithContext(ctx context.Context) AccessproxyApiGatewayQuicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessproxyApiGatewayQuic) *AccessproxyApiGatewayQuic {
		return &v
	}).(AccessproxyApiGatewayQuicPtrOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o AccessproxyApiGatewayQuicOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayQuic) *int { return v.AckDelayExponent }).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o AccessproxyApiGatewayQuicOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayQuic) *int { return v.ActiveConnectionIdLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o AccessproxyApiGatewayQuicOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayQuic) *string { return v.ActiveMigration }).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o AccessproxyApiGatewayQuicOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayQuic) *string { return v.GreaseQuicBit }).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o AccessproxyApiGatewayQuicOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayQuic) *int { return v.MaxAckDelay }).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o AccessproxyApiGatewayQuicOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayQuic) *int { return v.MaxDatagramFrameSize }).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o AccessproxyApiGatewayQuicOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayQuic) *int { return v.MaxIdleTimeout }).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o AccessproxyApiGatewayQuicOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayQuic) *int { return v.MaxUdpPayloadSize }).(pulumi.IntPtrOutput)
}

type AccessproxyApiGatewayQuicPtrOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewayQuicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessproxyApiGatewayQuic)(nil)).Elem()
}

func (o AccessproxyApiGatewayQuicPtrOutput) ToAccessproxyApiGatewayQuicPtrOutput() AccessproxyApiGatewayQuicPtrOutput {
	return o
}

func (o AccessproxyApiGatewayQuicPtrOutput) ToAccessproxyApiGatewayQuicPtrOutputWithContext(ctx context.Context) AccessproxyApiGatewayQuicPtrOutput {
	return o
}

func (o AccessproxyApiGatewayQuicPtrOutput) Elem() AccessproxyApiGatewayQuicOutput {
	return o.ApplyT(func(v *AccessproxyApiGatewayQuic) AccessproxyApiGatewayQuic {
		if v != nil {
			return *v
		}
		var ret AccessproxyApiGatewayQuic
		return ret
	}).(AccessproxyApiGatewayQuicOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o AccessproxyApiGatewayQuicPtrOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.AckDelayExponent
	}).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o AccessproxyApiGatewayQuicPtrOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.ActiveConnectionIdLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o AccessproxyApiGatewayQuicPtrOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGatewayQuic) *string {
		if v == nil {
			return nil
		}
		return v.ActiveMigration
	}).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o AccessproxyApiGatewayQuicPtrOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGatewayQuic) *string {
		if v == nil {
			return nil
		}
		return v.GreaseQuicBit
	}).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o AccessproxyApiGatewayQuicPtrOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxAckDelay
	}).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o AccessproxyApiGatewayQuicPtrOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxDatagramFrameSize
	}).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o AccessproxyApiGatewayQuicPtrOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleTimeout
	}).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o AccessproxyApiGatewayQuicPtrOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessproxyApiGatewayQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxUdpPayloadSize
	}).(pulumi.IntPtrOutput)
}

type AccessproxyApiGatewayRealserver struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType *string `pulumi:"addrType"`
	// Address or address group of the real server.
	Address *string `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain *string `pulumi:"domain"`
	// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
	ExternalAuth *string `pulumi:"externalAuth"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck *string `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto *string `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval *string `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IPv6 address of the real server.
	Ip *string `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport *string `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port *int `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert *string `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation *string `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys []AccessproxyApiGatewayRealserverSshHostKey `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost *string `pulumi:"translateHost"`
	// Tunnel encryption. Valid values: `enable`, `disable`.
	TunnelEncryption *string `pulumi:"tunnelEncryption"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type *string `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// AccessproxyApiGatewayRealserverInput is an input type that accepts AccessproxyApiGatewayRealserverArgs and AccessproxyApiGatewayRealserverOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewayRealserverInput` via:
//
//	AccessproxyApiGatewayRealserverArgs{...}
type AccessproxyApiGatewayRealserverInput interface {
	pulumi.Input

	ToAccessproxyApiGatewayRealserverOutput() AccessproxyApiGatewayRealserverOutput
	ToAccessproxyApiGatewayRealserverOutputWithContext(context.Context) AccessproxyApiGatewayRealserverOutput
}

type AccessproxyApiGatewayRealserverArgs struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Address or address group of the real server.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
	ExternalAuth pulumi.StringPtrInput `pulumi:"externalAuth"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto pulumi.StringPtrInput `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval pulumi.StringPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport pulumi.StringPtrInput `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert pulumi.StringPtrInput `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation pulumi.StringPtrInput `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys AccessproxyApiGatewayRealserverSshHostKeyArrayInput `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost pulumi.StringPtrInput `pulumi:"translateHost"`
	// Tunnel encryption. Valid values: `enable`, `disable`.
	TunnelEncryption pulumi.StringPtrInput `pulumi:"tunnelEncryption"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (AccessproxyApiGatewayRealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGatewayRealserver)(nil)).Elem()
}

func (i AccessproxyApiGatewayRealserverArgs) ToAccessproxyApiGatewayRealserverOutput() AccessproxyApiGatewayRealserverOutput {
	return i.ToAccessproxyApiGatewayRealserverOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewayRealserverArgs) ToAccessproxyApiGatewayRealserverOutputWithContext(ctx context.Context) AccessproxyApiGatewayRealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewayRealserverOutput)
}

// AccessproxyApiGatewayRealserverArrayInput is an input type that accepts AccessproxyApiGatewayRealserverArray and AccessproxyApiGatewayRealserverArrayOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewayRealserverArrayInput` via:
//
//	AccessproxyApiGatewayRealserverArray{ AccessproxyApiGatewayRealserverArgs{...} }
type AccessproxyApiGatewayRealserverArrayInput interface {
	pulumi.Input

	ToAccessproxyApiGatewayRealserverArrayOutput() AccessproxyApiGatewayRealserverArrayOutput
	ToAccessproxyApiGatewayRealserverArrayOutputWithContext(context.Context) AccessproxyApiGatewayRealserverArrayOutput
}

type AccessproxyApiGatewayRealserverArray []AccessproxyApiGatewayRealserverInput

func (AccessproxyApiGatewayRealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGatewayRealserver)(nil)).Elem()
}

func (i AccessproxyApiGatewayRealserverArray) ToAccessproxyApiGatewayRealserverArrayOutput() AccessproxyApiGatewayRealserverArrayOutput {
	return i.ToAccessproxyApiGatewayRealserverArrayOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewayRealserverArray) ToAccessproxyApiGatewayRealserverArrayOutputWithContext(ctx context.Context) AccessproxyApiGatewayRealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewayRealserverArrayOutput)
}

type AccessproxyApiGatewayRealserverOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewayRealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGatewayRealserver)(nil)).Elem()
}

func (o AccessproxyApiGatewayRealserverOutput) ToAccessproxyApiGatewayRealserverOutput() AccessproxyApiGatewayRealserverOutput {
	return o
}

func (o AccessproxyApiGatewayRealserverOutput) ToAccessproxyApiGatewayRealserverOutputWithContext(ctx context.Context) AccessproxyApiGatewayRealserverOutput {
	return o
}

// Type of address. Valid values: `ip`, `fqdn`.
func (o AccessproxyApiGatewayRealserverOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Address or address group of the real server.
func (o AccessproxyApiGatewayRealserverOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Wildcard domain name of the real server.
func (o AccessproxyApiGatewayRealserverOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of external browser as user-agent for SAML user authentication. Valid values: `enable`, `disable`.
func (o AccessproxyApiGatewayRealserverOutput) ExternalAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.ExternalAuth }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
func (o AccessproxyApiGatewayRealserverOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
func (o AccessproxyApiGatewayRealserverOutput) HealthCheckProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.HealthCheckProto }).(pulumi.StringPtrOutput)
}

// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
func (o AccessproxyApiGatewayRealserverOutput) HolddownInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.HolddownInterval }).(pulumi.StringPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o AccessproxyApiGatewayRealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o AccessproxyApiGatewayRealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 address of the real server.
func (o AccessproxyApiGatewayRealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o AccessproxyApiGatewayRealserverOutput) Mappedport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.Mappedport }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o AccessproxyApiGatewayRealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set access-proxy SSH client certificate profile.
func (o AccessproxyApiGatewayRealserverOutput) SshClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.SshClientCert }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
func (o AccessproxyApiGatewayRealserverOutput) SshHostKeyValidation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.SshHostKeyValidation }).(pulumi.StringPtrOutput)
}

// One or more server host key. The structure of `sshHostKey` block is documented below.
func (o AccessproxyApiGatewayRealserverOutput) SshHostKeys() AccessproxyApiGatewayRealserverSshHostKeyArrayOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) []AccessproxyApiGatewayRealserverSshHostKey {
		return v.SshHostKeys
	}).(AccessproxyApiGatewayRealserverSshHostKeyArrayOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o AccessproxyApiGatewayRealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
func (o AccessproxyApiGatewayRealserverOutput) TranslateHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.TranslateHost }).(pulumi.StringPtrOutput)
}

// Tunnel encryption. Valid values: `enable`, `disable`.
func (o AccessproxyApiGatewayRealserverOutput) TunnelEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.TunnelEncryption }).(pulumi.StringPtrOutput)
}

// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
func (o AccessproxyApiGatewayRealserverOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o AccessproxyApiGatewayRealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AccessproxyApiGatewayRealserverArrayOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewayRealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGatewayRealserver)(nil)).Elem()
}

func (o AccessproxyApiGatewayRealserverArrayOutput) ToAccessproxyApiGatewayRealserverArrayOutput() AccessproxyApiGatewayRealserverArrayOutput {
	return o
}

func (o AccessproxyApiGatewayRealserverArrayOutput) ToAccessproxyApiGatewayRealserverArrayOutputWithContext(ctx context.Context) AccessproxyApiGatewayRealserverArrayOutput {
	return o
}

func (o AccessproxyApiGatewayRealserverArrayOutput) Index(i pulumi.IntInput) AccessproxyApiGatewayRealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessproxyApiGatewayRealserver {
		return vs[0].([]AccessproxyApiGatewayRealserver)[vs[1].(int)]
	}).(AccessproxyApiGatewayRealserverOutput)
}

type AccessproxyApiGatewayRealserverSshHostKey struct {
	// Server host key name.
	Name *string `pulumi:"name"`
}

// AccessproxyApiGatewayRealserverSshHostKeyInput is an input type that accepts AccessproxyApiGatewayRealserverSshHostKeyArgs and AccessproxyApiGatewayRealserverSshHostKeyOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewayRealserverSshHostKeyInput` via:
//
//	AccessproxyApiGatewayRealserverSshHostKeyArgs{...}
type AccessproxyApiGatewayRealserverSshHostKeyInput interface {
	pulumi.Input

	ToAccessproxyApiGatewayRealserverSshHostKeyOutput() AccessproxyApiGatewayRealserverSshHostKeyOutput
	ToAccessproxyApiGatewayRealserverSshHostKeyOutputWithContext(context.Context) AccessproxyApiGatewayRealserverSshHostKeyOutput
}

type AccessproxyApiGatewayRealserverSshHostKeyArgs struct {
	// Server host key name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AccessproxyApiGatewayRealserverSshHostKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (i AccessproxyApiGatewayRealserverSshHostKeyArgs) ToAccessproxyApiGatewayRealserverSshHostKeyOutput() AccessproxyApiGatewayRealserverSshHostKeyOutput {
	return i.ToAccessproxyApiGatewayRealserverSshHostKeyOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewayRealserverSshHostKeyArgs) ToAccessproxyApiGatewayRealserverSshHostKeyOutputWithContext(ctx context.Context) AccessproxyApiGatewayRealserverSshHostKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewayRealserverSshHostKeyOutput)
}

// AccessproxyApiGatewayRealserverSshHostKeyArrayInput is an input type that accepts AccessproxyApiGatewayRealserverSshHostKeyArray and AccessproxyApiGatewayRealserverSshHostKeyArrayOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewayRealserverSshHostKeyArrayInput` via:
//
//	AccessproxyApiGatewayRealserverSshHostKeyArray{ AccessproxyApiGatewayRealserverSshHostKeyArgs{...} }
type AccessproxyApiGatewayRealserverSshHostKeyArrayInput interface {
	pulumi.Input

	ToAccessproxyApiGatewayRealserverSshHostKeyArrayOutput() AccessproxyApiGatewayRealserverSshHostKeyArrayOutput
	ToAccessproxyApiGatewayRealserverSshHostKeyArrayOutputWithContext(context.Context) AccessproxyApiGatewayRealserverSshHostKeyArrayOutput
}

type AccessproxyApiGatewayRealserverSshHostKeyArray []AccessproxyApiGatewayRealserverSshHostKeyInput

func (AccessproxyApiGatewayRealserverSshHostKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (i AccessproxyApiGatewayRealserverSshHostKeyArray) ToAccessproxyApiGatewayRealserverSshHostKeyArrayOutput() AccessproxyApiGatewayRealserverSshHostKeyArrayOutput {
	return i.ToAccessproxyApiGatewayRealserverSshHostKeyArrayOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewayRealserverSshHostKeyArray) ToAccessproxyApiGatewayRealserverSshHostKeyArrayOutputWithContext(ctx context.Context) AccessproxyApiGatewayRealserverSshHostKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewayRealserverSshHostKeyArrayOutput)
}

type AccessproxyApiGatewayRealserverSshHostKeyOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewayRealserverSshHostKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (o AccessproxyApiGatewayRealserverSshHostKeyOutput) ToAccessproxyApiGatewayRealserverSshHostKeyOutput() AccessproxyApiGatewayRealserverSshHostKeyOutput {
	return o
}

func (o AccessproxyApiGatewayRealserverSshHostKeyOutput) ToAccessproxyApiGatewayRealserverSshHostKeyOutputWithContext(ctx context.Context) AccessproxyApiGatewayRealserverSshHostKeyOutput {
	return o
}

// Server host key name.
func (o AccessproxyApiGatewayRealserverSshHostKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewayRealserverSshHostKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AccessproxyApiGatewayRealserverSshHostKeyArrayOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewayRealserverSshHostKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (o AccessproxyApiGatewayRealserverSshHostKeyArrayOutput) ToAccessproxyApiGatewayRealserverSshHostKeyArrayOutput() AccessproxyApiGatewayRealserverSshHostKeyArrayOutput {
	return o
}

func (o AccessproxyApiGatewayRealserverSshHostKeyArrayOutput) ToAccessproxyApiGatewayRealserverSshHostKeyArrayOutputWithContext(ctx context.Context) AccessproxyApiGatewayRealserverSshHostKeyArrayOutput {
	return o
}

func (o AccessproxyApiGatewayRealserverSshHostKeyArrayOutput) Index(i pulumi.IntInput) AccessproxyApiGatewayRealserverSshHostKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessproxyApiGatewayRealserverSshHostKey {
		return vs[0].([]AccessproxyApiGatewayRealserverSshHostKey)[vs[1].(int)]
	}).(AccessproxyApiGatewayRealserverSshHostKeyOutput)
}

type AccessproxyApiGatewaySslCipherSuite struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions *string `pulumi:"versions"`
}

// AccessproxyApiGatewaySslCipherSuiteInput is an input type that accepts AccessproxyApiGatewaySslCipherSuiteArgs and AccessproxyApiGatewaySslCipherSuiteOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewaySslCipherSuiteInput` via:
//
//	AccessproxyApiGatewaySslCipherSuiteArgs{...}
type AccessproxyApiGatewaySslCipherSuiteInput interface {
	pulumi.Input

	ToAccessproxyApiGatewaySslCipherSuiteOutput() AccessproxyApiGatewaySslCipherSuiteOutput
	ToAccessproxyApiGatewaySslCipherSuiteOutputWithContext(context.Context) AccessproxyApiGatewaySslCipherSuiteOutput
}

type AccessproxyApiGatewaySslCipherSuiteArgs struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (AccessproxyApiGatewaySslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGatewaySslCipherSuite)(nil)).Elem()
}

func (i AccessproxyApiGatewaySslCipherSuiteArgs) ToAccessproxyApiGatewaySslCipherSuiteOutput() AccessproxyApiGatewaySslCipherSuiteOutput {
	return i.ToAccessproxyApiGatewaySslCipherSuiteOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewaySslCipherSuiteArgs) ToAccessproxyApiGatewaySslCipherSuiteOutputWithContext(ctx context.Context) AccessproxyApiGatewaySslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewaySslCipherSuiteOutput)
}

// AccessproxyApiGatewaySslCipherSuiteArrayInput is an input type that accepts AccessproxyApiGatewaySslCipherSuiteArray and AccessproxyApiGatewaySslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `AccessproxyApiGatewaySslCipherSuiteArrayInput` via:
//
//	AccessproxyApiGatewaySslCipherSuiteArray{ AccessproxyApiGatewaySslCipherSuiteArgs{...} }
type AccessproxyApiGatewaySslCipherSuiteArrayInput interface {
	pulumi.Input

	ToAccessproxyApiGatewaySslCipherSuiteArrayOutput() AccessproxyApiGatewaySslCipherSuiteArrayOutput
	ToAccessproxyApiGatewaySslCipherSuiteArrayOutputWithContext(context.Context) AccessproxyApiGatewaySslCipherSuiteArrayOutput
}

type AccessproxyApiGatewaySslCipherSuiteArray []AccessproxyApiGatewaySslCipherSuiteInput

func (AccessproxyApiGatewaySslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGatewaySslCipherSuite)(nil)).Elem()
}

func (i AccessproxyApiGatewaySslCipherSuiteArray) ToAccessproxyApiGatewaySslCipherSuiteArrayOutput() AccessproxyApiGatewaySslCipherSuiteArrayOutput {
	return i.ToAccessproxyApiGatewaySslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i AccessproxyApiGatewaySslCipherSuiteArray) ToAccessproxyApiGatewaySslCipherSuiteArrayOutputWithContext(ctx context.Context) AccessproxyApiGatewaySslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxyApiGatewaySslCipherSuiteArrayOutput)
}

type AccessproxyApiGatewaySslCipherSuiteOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewaySslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxyApiGatewaySslCipherSuite)(nil)).Elem()
}

func (o AccessproxyApiGatewaySslCipherSuiteOutput) ToAccessproxyApiGatewaySslCipherSuiteOutput() AccessproxyApiGatewaySslCipherSuiteOutput {
	return o
}

func (o AccessproxyApiGatewaySslCipherSuiteOutput) ToAccessproxyApiGatewaySslCipherSuiteOutputWithContext(ctx context.Context) AccessproxyApiGatewaySslCipherSuiteOutput {
	return o
}

// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
func (o AccessproxyApiGatewaySslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewaySslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o AccessproxyApiGatewaySslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewaySslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o AccessproxyApiGatewaySslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxyApiGatewaySslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type AccessproxyApiGatewaySslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (AccessproxyApiGatewaySslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxyApiGatewaySslCipherSuite)(nil)).Elem()
}

func (o AccessproxyApiGatewaySslCipherSuiteArrayOutput) ToAccessproxyApiGatewaySslCipherSuiteArrayOutput() AccessproxyApiGatewaySslCipherSuiteArrayOutput {
	return o
}

func (o AccessproxyApiGatewaySslCipherSuiteArrayOutput) ToAccessproxyApiGatewaySslCipherSuiteArrayOutputWithContext(ctx context.Context) AccessproxyApiGatewaySslCipherSuiteArrayOutput {
	return o
}

func (o AccessproxyApiGatewaySslCipherSuiteArrayOutput) Index(i pulumi.IntInput) AccessproxyApiGatewaySslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessproxyApiGatewaySslCipherSuite {
		return vs[0].([]AccessproxyApiGatewaySslCipherSuite)[vs[1].(int)]
	}).(AccessproxyApiGatewaySslCipherSuiteOutput)
}

type AccessproxysshclientcertCertExtension struct {
	// Critical option. Valid values: `no`, `yes`.
	Critical *string `pulumi:"critical"`
	// Data of certificate extension.
	Data *string `pulumi:"data"`
	// Name of certificate extension.
	Name *string `pulumi:"name"`
	// Type of certificate extension. Valid values: `fixed`, `user`.
	Type *string `pulumi:"type"`
}

// AccessproxysshclientcertCertExtensionInput is an input type that accepts AccessproxysshclientcertCertExtensionArgs and AccessproxysshclientcertCertExtensionOutput values.
// You can construct a concrete instance of `AccessproxysshclientcertCertExtensionInput` via:
//
//	AccessproxysshclientcertCertExtensionArgs{...}
type AccessproxysshclientcertCertExtensionInput interface {
	pulumi.Input

	ToAccessproxysshclientcertCertExtensionOutput() AccessproxysshclientcertCertExtensionOutput
	ToAccessproxysshclientcertCertExtensionOutputWithContext(context.Context) AccessproxysshclientcertCertExtensionOutput
}

type AccessproxysshclientcertCertExtensionArgs struct {
	// Critical option. Valid values: `no`, `yes`.
	Critical pulumi.StringPtrInput `pulumi:"critical"`
	// Data of certificate extension.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Name of certificate extension.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of certificate extension. Valid values: `fixed`, `user`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AccessproxysshclientcertCertExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxysshclientcertCertExtension)(nil)).Elem()
}

func (i AccessproxysshclientcertCertExtensionArgs) ToAccessproxysshclientcertCertExtensionOutput() AccessproxysshclientcertCertExtensionOutput {
	return i.ToAccessproxysshclientcertCertExtensionOutputWithContext(context.Background())
}

func (i AccessproxysshclientcertCertExtensionArgs) ToAccessproxysshclientcertCertExtensionOutputWithContext(ctx context.Context) AccessproxysshclientcertCertExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxysshclientcertCertExtensionOutput)
}

// AccessproxysshclientcertCertExtensionArrayInput is an input type that accepts AccessproxysshclientcertCertExtensionArray and AccessproxysshclientcertCertExtensionArrayOutput values.
// You can construct a concrete instance of `AccessproxysshclientcertCertExtensionArrayInput` via:
//
//	AccessproxysshclientcertCertExtensionArray{ AccessproxysshclientcertCertExtensionArgs{...} }
type AccessproxysshclientcertCertExtensionArrayInput interface {
	pulumi.Input

	ToAccessproxysshclientcertCertExtensionArrayOutput() AccessproxysshclientcertCertExtensionArrayOutput
	ToAccessproxysshclientcertCertExtensionArrayOutputWithContext(context.Context) AccessproxysshclientcertCertExtensionArrayOutput
}

type AccessproxysshclientcertCertExtensionArray []AccessproxysshclientcertCertExtensionInput

func (AccessproxysshclientcertCertExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxysshclientcertCertExtension)(nil)).Elem()
}

func (i AccessproxysshclientcertCertExtensionArray) ToAccessproxysshclientcertCertExtensionArrayOutput() AccessproxysshclientcertCertExtensionArrayOutput {
	return i.ToAccessproxysshclientcertCertExtensionArrayOutputWithContext(context.Background())
}

func (i AccessproxysshclientcertCertExtensionArray) ToAccessproxysshclientcertCertExtensionArrayOutputWithContext(ctx context.Context) AccessproxysshclientcertCertExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxysshclientcertCertExtensionArrayOutput)
}

type AccessproxysshclientcertCertExtensionOutput struct{ *pulumi.OutputState }

func (AccessproxysshclientcertCertExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessproxysshclientcertCertExtension)(nil)).Elem()
}

func (o AccessproxysshclientcertCertExtensionOutput) ToAccessproxysshclientcertCertExtensionOutput() AccessproxysshclientcertCertExtensionOutput {
	return o
}

func (o AccessproxysshclientcertCertExtensionOutput) ToAccessproxysshclientcertCertExtensionOutputWithContext(ctx context.Context) AccessproxysshclientcertCertExtensionOutput {
	return o
}

// Critical option. Valid values: `no`, `yes`.
func (o AccessproxysshclientcertCertExtensionOutput) Critical() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxysshclientcertCertExtension) *string { return v.Critical }).(pulumi.StringPtrOutput)
}

// Data of certificate extension.
func (o AccessproxysshclientcertCertExtensionOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxysshclientcertCertExtension) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Name of certificate extension.
func (o AccessproxysshclientcertCertExtensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxysshclientcertCertExtension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of certificate extension. Valid values: `fixed`, `user`.
func (o AccessproxysshclientcertCertExtensionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessproxysshclientcertCertExtension) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AccessproxysshclientcertCertExtensionArrayOutput struct{ *pulumi.OutputState }

func (AccessproxysshclientcertCertExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessproxysshclientcertCertExtension)(nil)).Elem()
}

func (o AccessproxysshclientcertCertExtensionArrayOutput) ToAccessproxysshclientcertCertExtensionArrayOutput() AccessproxysshclientcertCertExtensionArrayOutput {
	return o
}

func (o AccessproxysshclientcertCertExtensionArrayOutput) ToAccessproxysshclientcertCertExtensionArrayOutputWithContext(ctx context.Context) AccessproxysshclientcertCertExtensionArrayOutput {
	return o
}

func (o AccessproxysshclientcertCertExtensionArrayOutput) Index(i pulumi.IntInput) AccessproxysshclientcertCertExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessproxysshclientcertCertExtension {
		return vs[0].([]AccessproxysshclientcertCertExtension)[vs[1].(int)]
	}).(AccessproxysshclientcertCertExtensionOutput)
}

type Address6List struct {
	// IP.
	Ip *string `pulumi:"ip"`
}

// Address6ListInput is an input type that accepts Address6ListArgs and Address6ListOutput values.
// You can construct a concrete instance of `Address6ListInput` via:
//
//	Address6ListArgs{...}
type Address6ListInput interface {
	pulumi.Input

	ToAddress6ListOutput() Address6ListOutput
	ToAddress6ListOutputWithContext(context.Context) Address6ListOutput
}

type Address6ListArgs struct {
	// IP.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (Address6ListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6List)(nil)).Elem()
}

func (i Address6ListArgs) ToAddress6ListOutput() Address6ListOutput {
	return i.ToAddress6ListOutputWithContext(context.Background())
}

func (i Address6ListArgs) ToAddress6ListOutputWithContext(ctx context.Context) Address6ListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6ListOutput)
}

// Address6ListArrayInput is an input type that accepts Address6ListArray and Address6ListArrayOutput values.
// You can construct a concrete instance of `Address6ListArrayInput` via:
//
//	Address6ListArray{ Address6ListArgs{...} }
type Address6ListArrayInput interface {
	pulumi.Input

	ToAddress6ListArrayOutput() Address6ListArrayOutput
	ToAddress6ListArrayOutputWithContext(context.Context) Address6ListArrayOutput
}

type Address6ListArray []Address6ListInput

func (Address6ListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6List)(nil)).Elem()
}

func (i Address6ListArray) ToAddress6ListArrayOutput() Address6ListArrayOutput {
	return i.ToAddress6ListArrayOutputWithContext(context.Background())
}

func (i Address6ListArray) ToAddress6ListArrayOutputWithContext(ctx context.Context) Address6ListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6ListArrayOutput)
}

type Address6ListOutput struct{ *pulumi.OutputState }

func (Address6ListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6List)(nil)).Elem()
}

func (o Address6ListOutput) ToAddress6ListOutput() Address6ListOutput {
	return o
}

func (o Address6ListOutput) ToAddress6ListOutputWithContext(ctx context.Context) Address6ListOutput {
	return o
}

// IP.
func (o Address6ListOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6List) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type Address6ListArrayOutput struct{ *pulumi.OutputState }

func (Address6ListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6List)(nil)).Elem()
}

func (o Address6ListArrayOutput) ToAddress6ListArrayOutput() Address6ListArrayOutput {
	return o
}

func (o Address6ListArrayOutput) ToAddress6ListArrayOutputWithContext(ctx context.Context) Address6ListArrayOutput {
	return o
}

func (o Address6ListArrayOutput) Index(i pulumi.IntInput) Address6ListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Address6List {
		return vs[0].([]Address6List)[vs[1].(int)]
	}).(Address6ListOutput)
}

type Address6Macaddr struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr *string `pulumi:"macaddr"`
}

// Address6MacaddrInput is an input type that accepts Address6MacaddrArgs and Address6MacaddrOutput values.
// You can construct a concrete instance of `Address6MacaddrInput` via:
//
//	Address6MacaddrArgs{...}
type Address6MacaddrInput interface {
	pulumi.Input

	ToAddress6MacaddrOutput() Address6MacaddrOutput
	ToAddress6MacaddrOutputWithContext(context.Context) Address6MacaddrOutput
}

type Address6MacaddrArgs struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr pulumi.StringPtrInput `pulumi:"macaddr"`
}

func (Address6MacaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6Macaddr)(nil)).Elem()
}

func (i Address6MacaddrArgs) ToAddress6MacaddrOutput() Address6MacaddrOutput {
	return i.ToAddress6MacaddrOutputWithContext(context.Background())
}

func (i Address6MacaddrArgs) ToAddress6MacaddrOutputWithContext(ctx context.Context) Address6MacaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6MacaddrOutput)
}

// Address6MacaddrArrayInput is an input type that accepts Address6MacaddrArray and Address6MacaddrArrayOutput values.
// You can construct a concrete instance of `Address6MacaddrArrayInput` via:
//
//	Address6MacaddrArray{ Address6MacaddrArgs{...} }
type Address6MacaddrArrayInput interface {
	pulumi.Input

	ToAddress6MacaddrArrayOutput() Address6MacaddrArrayOutput
	ToAddress6MacaddrArrayOutputWithContext(context.Context) Address6MacaddrArrayOutput
}

type Address6MacaddrArray []Address6MacaddrInput

func (Address6MacaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6Macaddr)(nil)).Elem()
}

func (i Address6MacaddrArray) ToAddress6MacaddrArrayOutput() Address6MacaddrArrayOutput {
	return i.ToAddress6MacaddrArrayOutputWithContext(context.Background())
}

func (i Address6MacaddrArray) ToAddress6MacaddrArrayOutputWithContext(ctx context.Context) Address6MacaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6MacaddrArrayOutput)
}

type Address6MacaddrOutput struct{ *pulumi.OutputState }

func (Address6MacaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6Macaddr)(nil)).Elem()
}

func (o Address6MacaddrOutput) ToAddress6MacaddrOutput() Address6MacaddrOutput {
	return o
}

func (o Address6MacaddrOutput) ToAddress6MacaddrOutputWithContext(ctx context.Context) Address6MacaddrOutput {
	return o
}

// MAC address ranges <start>[-<end>] separated by space.
func (o Address6MacaddrOutput) Macaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6Macaddr) *string { return v.Macaddr }).(pulumi.StringPtrOutput)
}

type Address6MacaddrArrayOutput struct{ *pulumi.OutputState }

func (Address6MacaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6Macaddr)(nil)).Elem()
}

func (o Address6MacaddrArrayOutput) ToAddress6MacaddrArrayOutput() Address6MacaddrArrayOutput {
	return o
}

func (o Address6MacaddrArrayOutput) ToAddress6MacaddrArrayOutputWithContext(ctx context.Context) Address6MacaddrArrayOutput {
	return o
}

func (o Address6MacaddrArrayOutput) Index(i pulumi.IntInput) Address6MacaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Address6Macaddr {
		return vs[0].([]Address6Macaddr)[vs[1].(int)]
	}).(Address6MacaddrOutput)
}

type Address6SubnetSegment struct {
	// Name.
	Name *string `pulumi:"name"`
	// Subnet segment type. Valid values: `any`, `specific`.
	Type *string `pulumi:"type"`
	// Subnet segment value.
	Value *string `pulumi:"value"`
}

// Address6SubnetSegmentInput is an input type that accepts Address6SubnetSegmentArgs and Address6SubnetSegmentOutput values.
// You can construct a concrete instance of `Address6SubnetSegmentInput` via:
//
//	Address6SubnetSegmentArgs{...}
type Address6SubnetSegmentInput interface {
	pulumi.Input

	ToAddress6SubnetSegmentOutput() Address6SubnetSegmentOutput
	ToAddress6SubnetSegmentOutputWithContext(context.Context) Address6SubnetSegmentOutput
}

type Address6SubnetSegmentArgs struct {
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subnet segment type. Valid values: `any`, `specific`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Subnet segment value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (Address6SubnetSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6SubnetSegment)(nil)).Elem()
}

func (i Address6SubnetSegmentArgs) ToAddress6SubnetSegmentOutput() Address6SubnetSegmentOutput {
	return i.ToAddress6SubnetSegmentOutputWithContext(context.Background())
}

func (i Address6SubnetSegmentArgs) ToAddress6SubnetSegmentOutputWithContext(ctx context.Context) Address6SubnetSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6SubnetSegmentOutput)
}

// Address6SubnetSegmentArrayInput is an input type that accepts Address6SubnetSegmentArray and Address6SubnetSegmentArrayOutput values.
// You can construct a concrete instance of `Address6SubnetSegmentArrayInput` via:
//
//	Address6SubnetSegmentArray{ Address6SubnetSegmentArgs{...} }
type Address6SubnetSegmentArrayInput interface {
	pulumi.Input

	ToAddress6SubnetSegmentArrayOutput() Address6SubnetSegmentArrayOutput
	ToAddress6SubnetSegmentArrayOutputWithContext(context.Context) Address6SubnetSegmentArrayOutput
}

type Address6SubnetSegmentArray []Address6SubnetSegmentInput

func (Address6SubnetSegmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6SubnetSegment)(nil)).Elem()
}

func (i Address6SubnetSegmentArray) ToAddress6SubnetSegmentArrayOutput() Address6SubnetSegmentArrayOutput {
	return i.ToAddress6SubnetSegmentArrayOutputWithContext(context.Background())
}

func (i Address6SubnetSegmentArray) ToAddress6SubnetSegmentArrayOutputWithContext(ctx context.Context) Address6SubnetSegmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6SubnetSegmentArrayOutput)
}

type Address6SubnetSegmentOutput struct{ *pulumi.OutputState }

func (Address6SubnetSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6SubnetSegment)(nil)).Elem()
}

func (o Address6SubnetSegmentOutput) ToAddress6SubnetSegmentOutput() Address6SubnetSegmentOutput {
	return o
}

func (o Address6SubnetSegmentOutput) ToAddress6SubnetSegmentOutputWithContext(ctx context.Context) Address6SubnetSegmentOutput {
	return o
}

// Name.
func (o Address6SubnetSegmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6SubnetSegment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subnet segment type. Valid values: `any`, `specific`.
func (o Address6SubnetSegmentOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6SubnetSegment) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Subnet segment value.
func (o Address6SubnetSegmentOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6SubnetSegment) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Address6SubnetSegmentArrayOutput struct{ *pulumi.OutputState }

func (Address6SubnetSegmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6SubnetSegment)(nil)).Elem()
}

func (o Address6SubnetSegmentArrayOutput) ToAddress6SubnetSegmentArrayOutput() Address6SubnetSegmentArrayOutput {
	return o
}

func (o Address6SubnetSegmentArrayOutput) ToAddress6SubnetSegmentArrayOutputWithContext(ctx context.Context) Address6SubnetSegmentArrayOutput {
	return o
}

func (o Address6SubnetSegmentArrayOutput) Index(i pulumi.IntInput) Address6SubnetSegmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Address6SubnetSegment {
		return vs[0].([]Address6SubnetSegment)[vs[1].(int)]
	}).(Address6SubnetSegmentOutput)
}

type Address6Tagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []Address6TaggingTag `pulumi:"tags"`
}

// Address6TaggingInput is an input type that accepts Address6TaggingArgs and Address6TaggingOutput values.
// You can construct a concrete instance of `Address6TaggingInput` via:
//
//	Address6TaggingArgs{...}
type Address6TaggingInput interface {
	pulumi.Input

	ToAddress6TaggingOutput() Address6TaggingOutput
	ToAddress6TaggingOutputWithContext(context.Context) Address6TaggingOutput
}

type Address6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags Address6TaggingTagArrayInput `pulumi:"tags"`
}

func (Address6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6Tagging)(nil)).Elem()
}

func (i Address6TaggingArgs) ToAddress6TaggingOutput() Address6TaggingOutput {
	return i.ToAddress6TaggingOutputWithContext(context.Background())
}

func (i Address6TaggingArgs) ToAddress6TaggingOutputWithContext(ctx context.Context) Address6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6TaggingOutput)
}

// Address6TaggingArrayInput is an input type that accepts Address6TaggingArray and Address6TaggingArrayOutput values.
// You can construct a concrete instance of `Address6TaggingArrayInput` via:
//
//	Address6TaggingArray{ Address6TaggingArgs{...} }
type Address6TaggingArrayInput interface {
	pulumi.Input

	ToAddress6TaggingArrayOutput() Address6TaggingArrayOutput
	ToAddress6TaggingArrayOutputWithContext(context.Context) Address6TaggingArrayOutput
}

type Address6TaggingArray []Address6TaggingInput

func (Address6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6Tagging)(nil)).Elem()
}

func (i Address6TaggingArray) ToAddress6TaggingArrayOutput() Address6TaggingArrayOutput {
	return i.ToAddress6TaggingArrayOutputWithContext(context.Background())
}

func (i Address6TaggingArray) ToAddress6TaggingArrayOutputWithContext(ctx context.Context) Address6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6TaggingArrayOutput)
}

type Address6TaggingOutput struct{ *pulumi.OutputState }

func (Address6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6Tagging)(nil)).Elem()
}

func (o Address6TaggingOutput) ToAddress6TaggingOutput() Address6TaggingOutput {
	return o
}

func (o Address6TaggingOutput) ToAddress6TaggingOutputWithContext(ctx context.Context) Address6TaggingOutput {
	return o
}

// Tag category.
func (o Address6TaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6Tagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o Address6TaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6Tagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o Address6TaggingOutput) Tags() Address6TaggingTagArrayOutput {
	return o.ApplyT(func(v Address6Tagging) []Address6TaggingTag { return v.Tags }).(Address6TaggingTagArrayOutput)
}

type Address6TaggingArrayOutput struct{ *pulumi.OutputState }

func (Address6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6Tagging)(nil)).Elem()
}

func (o Address6TaggingArrayOutput) ToAddress6TaggingArrayOutput() Address6TaggingArrayOutput {
	return o
}

func (o Address6TaggingArrayOutput) ToAddress6TaggingArrayOutputWithContext(ctx context.Context) Address6TaggingArrayOutput {
	return o
}

func (o Address6TaggingArrayOutput) Index(i pulumi.IntInput) Address6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Address6Tagging {
		return vs[0].([]Address6Tagging)[vs[1].(int)]
	}).(Address6TaggingOutput)
}

type Address6TaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// Address6TaggingTagInput is an input type that accepts Address6TaggingTagArgs and Address6TaggingTagOutput values.
// You can construct a concrete instance of `Address6TaggingTagInput` via:
//
//	Address6TaggingTagArgs{...}
type Address6TaggingTagInput interface {
	pulumi.Input

	ToAddress6TaggingTagOutput() Address6TaggingTagOutput
	ToAddress6TaggingTagOutputWithContext(context.Context) Address6TaggingTagOutput
}

type Address6TaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Address6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6TaggingTag)(nil)).Elem()
}

func (i Address6TaggingTagArgs) ToAddress6TaggingTagOutput() Address6TaggingTagOutput {
	return i.ToAddress6TaggingTagOutputWithContext(context.Background())
}

func (i Address6TaggingTagArgs) ToAddress6TaggingTagOutputWithContext(ctx context.Context) Address6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6TaggingTagOutput)
}

// Address6TaggingTagArrayInput is an input type that accepts Address6TaggingTagArray and Address6TaggingTagArrayOutput values.
// You can construct a concrete instance of `Address6TaggingTagArrayInput` via:
//
//	Address6TaggingTagArray{ Address6TaggingTagArgs{...} }
type Address6TaggingTagArrayInput interface {
	pulumi.Input

	ToAddress6TaggingTagArrayOutput() Address6TaggingTagArrayOutput
	ToAddress6TaggingTagArrayOutputWithContext(context.Context) Address6TaggingTagArrayOutput
}

type Address6TaggingTagArray []Address6TaggingTagInput

func (Address6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6TaggingTag)(nil)).Elem()
}

func (i Address6TaggingTagArray) ToAddress6TaggingTagArrayOutput() Address6TaggingTagArrayOutput {
	return i.ToAddress6TaggingTagArrayOutputWithContext(context.Background())
}

func (i Address6TaggingTagArray) ToAddress6TaggingTagArrayOutputWithContext(ctx context.Context) Address6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6TaggingTagArrayOutput)
}

type Address6TaggingTagOutput struct{ *pulumi.OutputState }

func (Address6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6TaggingTag)(nil)).Elem()
}

func (o Address6TaggingTagOutput) ToAddress6TaggingTagOutput() Address6TaggingTagOutput {
	return o
}

func (o Address6TaggingTagOutput) ToAddress6TaggingTagOutputWithContext(ctx context.Context) Address6TaggingTagOutput {
	return o
}

// Tag name.
func (o Address6TaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6TaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Address6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (Address6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6TaggingTag)(nil)).Elem()
}

func (o Address6TaggingTagArrayOutput) ToAddress6TaggingTagArrayOutput() Address6TaggingTagArrayOutput {
	return o
}

func (o Address6TaggingTagArrayOutput) ToAddress6TaggingTagArrayOutputWithContext(ctx context.Context) Address6TaggingTagArrayOutput {
	return o
}

func (o Address6TaggingTagArrayOutput) Index(i pulumi.IntInput) Address6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Address6TaggingTag {
		return vs[0].([]Address6TaggingTag)[vs[1].(int)]
	}).(Address6TaggingTagOutput)
}

type Address6templateSubnetSegment struct {
	// Number of bits.
	Bits *int `pulumi:"bits"`
	// Enable/disable exclusive value. Valid values: `enable`, `disable`.
	Exclusive *string `pulumi:"exclusive"`
	// Subnet segment ID.
	Id *int `pulumi:"id"`
	// Subnet segment name.
	Name *string `pulumi:"name"`
	// Subnet segment values. The structure of `values` block is documented below.
	Values []Address6templateSubnetSegmentValue `pulumi:"values"`
}

// Address6templateSubnetSegmentInput is an input type that accepts Address6templateSubnetSegmentArgs and Address6templateSubnetSegmentOutput values.
// You can construct a concrete instance of `Address6templateSubnetSegmentInput` via:
//
//	Address6templateSubnetSegmentArgs{...}
type Address6templateSubnetSegmentInput interface {
	pulumi.Input

	ToAddress6templateSubnetSegmentOutput() Address6templateSubnetSegmentOutput
	ToAddress6templateSubnetSegmentOutputWithContext(context.Context) Address6templateSubnetSegmentOutput
}

type Address6templateSubnetSegmentArgs struct {
	// Number of bits.
	Bits pulumi.IntPtrInput `pulumi:"bits"`
	// Enable/disable exclusive value. Valid values: `enable`, `disable`.
	Exclusive pulumi.StringPtrInput `pulumi:"exclusive"`
	// Subnet segment ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Subnet segment name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subnet segment values. The structure of `values` block is documented below.
	Values Address6templateSubnetSegmentValueArrayInput `pulumi:"values"`
}

func (Address6templateSubnetSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6templateSubnetSegment)(nil)).Elem()
}

func (i Address6templateSubnetSegmentArgs) ToAddress6templateSubnetSegmentOutput() Address6templateSubnetSegmentOutput {
	return i.ToAddress6templateSubnetSegmentOutputWithContext(context.Background())
}

func (i Address6templateSubnetSegmentArgs) ToAddress6templateSubnetSegmentOutputWithContext(ctx context.Context) Address6templateSubnetSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6templateSubnetSegmentOutput)
}

// Address6templateSubnetSegmentArrayInput is an input type that accepts Address6templateSubnetSegmentArray and Address6templateSubnetSegmentArrayOutput values.
// You can construct a concrete instance of `Address6templateSubnetSegmentArrayInput` via:
//
//	Address6templateSubnetSegmentArray{ Address6templateSubnetSegmentArgs{...} }
type Address6templateSubnetSegmentArrayInput interface {
	pulumi.Input

	ToAddress6templateSubnetSegmentArrayOutput() Address6templateSubnetSegmentArrayOutput
	ToAddress6templateSubnetSegmentArrayOutputWithContext(context.Context) Address6templateSubnetSegmentArrayOutput
}

type Address6templateSubnetSegmentArray []Address6templateSubnetSegmentInput

func (Address6templateSubnetSegmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6templateSubnetSegment)(nil)).Elem()
}

func (i Address6templateSubnetSegmentArray) ToAddress6templateSubnetSegmentArrayOutput() Address6templateSubnetSegmentArrayOutput {
	return i.ToAddress6templateSubnetSegmentArrayOutputWithContext(context.Background())
}

func (i Address6templateSubnetSegmentArray) ToAddress6templateSubnetSegmentArrayOutputWithContext(ctx context.Context) Address6templateSubnetSegmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6templateSubnetSegmentArrayOutput)
}

type Address6templateSubnetSegmentOutput struct{ *pulumi.OutputState }

func (Address6templateSubnetSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6templateSubnetSegment)(nil)).Elem()
}

func (o Address6templateSubnetSegmentOutput) ToAddress6templateSubnetSegmentOutput() Address6templateSubnetSegmentOutput {
	return o
}

func (o Address6templateSubnetSegmentOutput) ToAddress6templateSubnetSegmentOutputWithContext(ctx context.Context) Address6templateSubnetSegmentOutput {
	return o
}

// Number of bits.
func (o Address6templateSubnetSegmentOutput) Bits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Address6templateSubnetSegment) *int { return v.Bits }).(pulumi.IntPtrOutput)
}

// Enable/disable exclusive value. Valid values: `enable`, `disable`.
func (o Address6templateSubnetSegmentOutput) Exclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6templateSubnetSegment) *string { return v.Exclusive }).(pulumi.StringPtrOutput)
}

// Subnet segment ID.
func (o Address6templateSubnetSegmentOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Address6templateSubnetSegment) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Subnet segment name.
func (o Address6templateSubnetSegmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6templateSubnetSegment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subnet segment values. The structure of `values` block is documented below.
func (o Address6templateSubnetSegmentOutput) Values() Address6templateSubnetSegmentValueArrayOutput {
	return o.ApplyT(func(v Address6templateSubnetSegment) []Address6templateSubnetSegmentValue { return v.Values }).(Address6templateSubnetSegmentValueArrayOutput)
}

type Address6templateSubnetSegmentArrayOutput struct{ *pulumi.OutputState }

func (Address6templateSubnetSegmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6templateSubnetSegment)(nil)).Elem()
}

func (o Address6templateSubnetSegmentArrayOutput) ToAddress6templateSubnetSegmentArrayOutput() Address6templateSubnetSegmentArrayOutput {
	return o
}

func (o Address6templateSubnetSegmentArrayOutput) ToAddress6templateSubnetSegmentArrayOutputWithContext(ctx context.Context) Address6templateSubnetSegmentArrayOutput {
	return o
}

func (o Address6templateSubnetSegmentArrayOutput) Index(i pulumi.IntInput) Address6templateSubnetSegmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Address6templateSubnetSegment {
		return vs[0].([]Address6templateSubnetSegment)[vs[1].(int)]
	}).(Address6templateSubnetSegmentOutput)
}

type Address6templateSubnetSegmentValue struct {
	// Subnet segment value name.
	Name *string `pulumi:"name"`
	// Subnet segment value.
	Value *string `pulumi:"value"`
}

// Address6templateSubnetSegmentValueInput is an input type that accepts Address6templateSubnetSegmentValueArgs and Address6templateSubnetSegmentValueOutput values.
// You can construct a concrete instance of `Address6templateSubnetSegmentValueInput` via:
//
//	Address6templateSubnetSegmentValueArgs{...}
type Address6templateSubnetSegmentValueInput interface {
	pulumi.Input

	ToAddress6templateSubnetSegmentValueOutput() Address6templateSubnetSegmentValueOutput
	ToAddress6templateSubnetSegmentValueOutputWithContext(context.Context) Address6templateSubnetSegmentValueOutput
}

type Address6templateSubnetSegmentValueArgs struct {
	// Subnet segment value name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subnet segment value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (Address6templateSubnetSegmentValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6templateSubnetSegmentValue)(nil)).Elem()
}

func (i Address6templateSubnetSegmentValueArgs) ToAddress6templateSubnetSegmentValueOutput() Address6templateSubnetSegmentValueOutput {
	return i.ToAddress6templateSubnetSegmentValueOutputWithContext(context.Background())
}

func (i Address6templateSubnetSegmentValueArgs) ToAddress6templateSubnetSegmentValueOutputWithContext(ctx context.Context) Address6templateSubnetSegmentValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6templateSubnetSegmentValueOutput)
}

// Address6templateSubnetSegmentValueArrayInput is an input type that accepts Address6templateSubnetSegmentValueArray and Address6templateSubnetSegmentValueArrayOutput values.
// You can construct a concrete instance of `Address6templateSubnetSegmentValueArrayInput` via:
//
//	Address6templateSubnetSegmentValueArray{ Address6templateSubnetSegmentValueArgs{...} }
type Address6templateSubnetSegmentValueArrayInput interface {
	pulumi.Input

	ToAddress6templateSubnetSegmentValueArrayOutput() Address6templateSubnetSegmentValueArrayOutput
	ToAddress6templateSubnetSegmentValueArrayOutputWithContext(context.Context) Address6templateSubnetSegmentValueArrayOutput
}

type Address6templateSubnetSegmentValueArray []Address6templateSubnetSegmentValueInput

func (Address6templateSubnetSegmentValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6templateSubnetSegmentValue)(nil)).Elem()
}

func (i Address6templateSubnetSegmentValueArray) ToAddress6templateSubnetSegmentValueArrayOutput() Address6templateSubnetSegmentValueArrayOutput {
	return i.ToAddress6templateSubnetSegmentValueArrayOutputWithContext(context.Background())
}

func (i Address6templateSubnetSegmentValueArray) ToAddress6templateSubnetSegmentValueArrayOutputWithContext(ctx context.Context) Address6templateSubnetSegmentValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Address6templateSubnetSegmentValueArrayOutput)
}

type Address6templateSubnetSegmentValueOutput struct{ *pulumi.OutputState }

func (Address6templateSubnetSegmentValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Address6templateSubnetSegmentValue)(nil)).Elem()
}

func (o Address6templateSubnetSegmentValueOutput) ToAddress6templateSubnetSegmentValueOutput() Address6templateSubnetSegmentValueOutput {
	return o
}

func (o Address6templateSubnetSegmentValueOutput) ToAddress6templateSubnetSegmentValueOutputWithContext(ctx context.Context) Address6templateSubnetSegmentValueOutput {
	return o
}

// Subnet segment value name.
func (o Address6templateSubnetSegmentValueOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6templateSubnetSegmentValue) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subnet segment value.
func (o Address6templateSubnetSegmentValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address6templateSubnetSegmentValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type Address6templateSubnetSegmentValueArrayOutput struct{ *pulumi.OutputState }

func (Address6templateSubnetSegmentValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Address6templateSubnetSegmentValue)(nil)).Elem()
}

func (o Address6templateSubnetSegmentValueArrayOutput) ToAddress6templateSubnetSegmentValueArrayOutput() Address6templateSubnetSegmentValueArrayOutput {
	return o
}

func (o Address6templateSubnetSegmentValueArrayOutput) ToAddress6templateSubnetSegmentValueArrayOutputWithContext(ctx context.Context) Address6templateSubnetSegmentValueArrayOutput {
	return o
}

func (o Address6templateSubnetSegmentValueArrayOutput) Index(i pulumi.IntInput) Address6templateSubnetSegmentValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Address6templateSubnetSegmentValue {
		return vs[0].([]Address6templateSubnetSegmentValue)[vs[1].(int)]
	}).(Address6templateSubnetSegmentValueOutput)
}

type AddressFssoGroup struct {
	// FSSO group name.
	Name *string `pulumi:"name"`
}

// AddressFssoGroupInput is an input type that accepts AddressFssoGroupArgs and AddressFssoGroupOutput values.
// You can construct a concrete instance of `AddressFssoGroupInput` via:
//
//	AddressFssoGroupArgs{...}
type AddressFssoGroupInput interface {
	pulumi.Input

	ToAddressFssoGroupOutput() AddressFssoGroupOutput
	ToAddressFssoGroupOutputWithContext(context.Context) AddressFssoGroupOutput
}

type AddressFssoGroupArgs struct {
	// FSSO group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AddressFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressFssoGroup)(nil)).Elem()
}

func (i AddressFssoGroupArgs) ToAddressFssoGroupOutput() AddressFssoGroupOutput {
	return i.ToAddressFssoGroupOutputWithContext(context.Background())
}

func (i AddressFssoGroupArgs) ToAddressFssoGroupOutputWithContext(ctx context.Context) AddressFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressFssoGroupOutput)
}

// AddressFssoGroupArrayInput is an input type that accepts AddressFssoGroupArray and AddressFssoGroupArrayOutput values.
// You can construct a concrete instance of `AddressFssoGroupArrayInput` via:
//
//	AddressFssoGroupArray{ AddressFssoGroupArgs{...} }
type AddressFssoGroupArrayInput interface {
	pulumi.Input

	ToAddressFssoGroupArrayOutput() AddressFssoGroupArrayOutput
	ToAddressFssoGroupArrayOutputWithContext(context.Context) AddressFssoGroupArrayOutput
}

type AddressFssoGroupArray []AddressFssoGroupInput

func (AddressFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressFssoGroup)(nil)).Elem()
}

func (i AddressFssoGroupArray) ToAddressFssoGroupArrayOutput() AddressFssoGroupArrayOutput {
	return i.ToAddressFssoGroupArrayOutputWithContext(context.Background())
}

func (i AddressFssoGroupArray) ToAddressFssoGroupArrayOutputWithContext(ctx context.Context) AddressFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressFssoGroupArrayOutput)
}

type AddressFssoGroupOutput struct{ *pulumi.OutputState }

func (AddressFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressFssoGroup)(nil)).Elem()
}

func (o AddressFssoGroupOutput) ToAddressFssoGroupOutput() AddressFssoGroupOutput {
	return o
}

func (o AddressFssoGroupOutput) ToAddressFssoGroupOutputWithContext(ctx context.Context) AddressFssoGroupOutput {
	return o
}

// FSSO group name.
func (o AddressFssoGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressFssoGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AddressFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (AddressFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressFssoGroup)(nil)).Elem()
}

func (o AddressFssoGroupArrayOutput) ToAddressFssoGroupArrayOutput() AddressFssoGroupArrayOutput {
	return o
}

func (o AddressFssoGroupArrayOutput) ToAddressFssoGroupArrayOutputWithContext(ctx context.Context) AddressFssoGroupArrayOutput {
	return o
}

func (o AddressFssoGroupArrayOutput) Index(i pulumi.IntInput) AddressFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressFssoGroup {
		return vs[0].([]AddressFssoGroup)[vs[1].(int)]
	}).(AddressFssoGroupOutput)
}

type AddressList struct {
	// IP.
	Ip *string `pulumi:"ip"`
}

// AddressListInput is an input type that accepts AddressListArgs and AddressListOutput values.
// You can construct a concrete instance of `AddressListInput` via:
//
//	AddressListArgs{...}
type AddressListInput interface {
	pulumi.Input

	ToAddressListOutput() AddressListOutput
	ToAddressListOutputWithContext(context.Context) AddressListOutput
}

type AddressListArgs struct {
	// IP.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (AddressListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressList)(nil)).Elem()
}

func (i AddressListArgs) ToAddressListOutput() AddressListOutput {
	return i.ToAddressListOutputWithContext(context.Background())
}

func (i AddressListArgs) ToAddressListOutputWithContext(ctx context.Context) AddressListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressListOutput)
}

// AddressListArrayInput is an input type that accepts AddressListArray and AddressListArrayOutput values.
// You can construct a concrete instance of `AddressListArrayInput` via:
//
//	AddressListArray{ AddressListArgs{...} }
type AddressListArrayInput interface {
	pulumi.Input

	ToAddressListArrayOutput() AddressListArrayOutput
	ToAddressListArrayOutputWithContext(context.Context) AddressListArrayOutput
}

type AddressListArray []AddressListInput

func (AddressListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressList)(nil)).Elem()
}

func (i AddressListArray) ToAddressListArrayOutput() AddressListArrayOutput {
	return i.ToAddressListArrayOutputWithContext(context.Background())
}

func (i AddressListArray) ToAddressListArrayOutputWithContext(ctx context.Context) AddressListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressListArrayOutput)
}

type AddressListOutput struct{ *pulumi.OutputState }

func (AddressListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressList)(nil)).Elem()
}

func (o AddressListOutput) ToAddressListOutput() AddressListOutput {
	return o
}

func (o AddressListOutput) ToAddressListOutputWithContext(ctx context.Context) AddressListOutput {
	return o
}

// IP.
func (o AddressListOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressList) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type AddressListArrayOutput struct{ *pulumi.OutputState }

func (AddressListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressList)(nil)).Elem()
}

func (o AddressListArrayOutput) ToAddressListArrayOutput() AddressListArrayOutput {
	return o
}

func (o AddressListArrayOutput) ToAddressListArrayOutputWithContext(ctx context.Context) AddressListArrayOutput {
	return o
}

func (o AddressListArrayOutput) Index(i pulumi.IntInput) AddressListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressList {
		return vs[0].([]AddressList)[vs[1].(int)]
	}).(AddressListOutput)
}

type AddressMacaddr struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr *string `pulumi:"macaddr"`
}

// AddressMacaddrInput is an input type that accepts AddressMacaddrArgs and AddressMacaddrOutput values.
// You can construct a concrete instance of `AddressMacaddrInput` via:
//
//	AddressMacaddrArgs{...}
type AddressMacaddrInput interface {
	pulumi.Input

	ToAddressMacaddrOutput() AddressMacaddrOutput
	ToAddressMacaddrOutputWithContext(context.Context) AddressMacaddrOutput
}

type AddressMacaddrArgs struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr pulumi.StringPtrInput `pulumi:"macaddr"`
}

func (AddressMacaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressMacaddr)(nil)).Elem()
}

func (i AddressMacaddrArgs) ToAddressMacaddrOutput() AddressMacaddrOutput {
	return i.ToAddressMacaddrOutputWithContext(context.Background())
}

func (i AddressMacaddrArgs) ToAddressMacaddrOutputWithContext(ctx context.Context) AddressMacaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressMacaddrOutput)
}

// AddressMacaddrArrayInput is an input type that accepts AddressMacaddrArray and AddressMacaddrArrayOutput values.
// You can construct a concrete instance of `AddressMacaddrArrayInput` via:
//
//	AddressMacaddrArray{ AddressMacaddrArgs{...} }
type AddressMacaddrArrayInput interface {
	pulumi.Input

	ToAddressMacaddrArrayOutput() AddressMacaddrArrayOutput
	ToAddressMacaddrArrayOutputWithContext(context.Context) AddressMacaddrArrayOutput
}

type AddressMacaddrArray []AddressMacaddrInput

func (AddressMacaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressMacaddr)(nil)).Elem()
}

func (i AddressMacaddrArray) ToAddressMacaddrArrayOutput() AddressMacaddrArrayOutput {
	return i.ToAddressMacaddrArrayOutputWithContext(context.Background())
}

func (i AddressMacaddrArray) ToAddressMacaddrArrayOutputWithContext(ctx context.Context) AddressMacaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressMacaddrArrayOutput)
}

type AddressMacaddrOutput struct{ *pulumi.OutputState }

func (AddressMacaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressMacaddr)(nil)).Elem()
}

func (o AddressMacaddrOutput) ToAddressMacaddrOutput() AddressMacaddrOutput {
	return o
}

func (o AddressMacaddrOutput) ToAddressMacaddrOutputWithContext(ctx context.Context) AddressMacaddrOutput {
	return o
}

// MAC address ranges <start>[-<end>] separated by space.
func (o AddressMacaddrOutput) Macaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressMacaddr) *string { return v.Macaddr }).(pulumi.StringPtrOutput)
}

type AddressMacaddrArrayOutput struct{ *pulumi.OutputState }

func (AddressMacaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressMacaddr)(nil)).Elem()
}

func (o AddressMacaddrArrayOutput) ToAddressMacaddrArrayOutput() AddressMacaddrArrayOutput {
	return o
}

func (o AddressMacaddrArrayOutput) ToAddressMacaddrArrayOutputWithContext(ctx context.Context) AddressMacaddrArrayOutput {
	return o
}

func (o AddressMacaddrArrayOutput) Index(i pulumi.IntInput) AddressMacaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressMacaddr {
		return vs[0].([]AddressMacaddr)[vs[1].(int)]
	}).(AddressMacaddrOutput)
}

type AddressTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []AddressTaggingTag `pulumi:"tags"`
}

// AddressTaggingInput is an input type that accepts AddressTaggingArgs and AddressTaggingOutput values.
// You can construct a concrete instance of `AddressTaggingInput` via:
//
//	AddressTaggingArgs{...}
type AddressTaggingInput interface {
	pulumi.Input

	ToAddressTaggingOutput() AddressTaggingOutput
	ToAddressTaggingOutputWithContext(context.Context) AddressTaggingOutput
}

type AddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags AddressTaggingTagArrayInput `pulumi:"tags"`
}

func (AddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressTagging)(nil)).Elem()
}

func (i AddressTaggingArgs) ToAddressTaggingOutput() AddressTaggingOutput {
	return i.ToAddressTaggingOutputWithContext(context.Background())
}

func (i AddressTaggingArgs) ToAddressTaggingOutputWithContext(ctx context.Context) AddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressTaggingOutput)
}

// AddressTaggingArrayInput is an input type that accepts AddressTaggingArray and AddressTaggingArrayOutput values.
// You can construct a concrete instance of `AddressTaggingArrayInput` via:
//
//	AddressTaggingArray{ AddressTaggingArgs{...} }
type AddressTaggingArrayInput interface {
	pulumi.Input

	ToAddressTaggingArrayOutput() AddressTaggingArrayOutput
	ToAddressTaggingArrayOutputWithContext(context.Context) AddressTaggingArrayOutput
}

type AddressTaggingArray []AddressTaggingInput

func (AddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressTagging)(nil)).Elem()
}

func (i AddressTaggingArray) ToAddressTaggingArrayOutput() AddressTaggingArrayOutput {
	return i.ToAddressTaggingArrayOutputWithContext(context.Background())
}

func (i AddressTaggingArray) ToAddressTaggingArrayOutputWithContext(ctx context.Context) AddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressTaggingArrayOutput)
}

type AddressTaggingOutput struct{ *pulumi.OutputState }

func (AddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressTagging)(nil)).Elem()
}

func (o AddressTaggingOutput) ToAddressTaggingOutput() AddressTaggingOutput {
	return o
}

func (o AddressTaggingOutput) ToAddressTaggingOutputWithContext(ctx context.Context) AddressTaggingOutput {
	return o
}

// Tag category.
func (o AddressTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o AddressTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o AddressTaggingOutput) Tags() AddressTaggingTagArrayOutput {
	return o.ApplyT(func(v AddressTagging) []AddressTaggingTag { return v.Tags }).(AddressTaggingTagArrayOutput)
}

type AddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (AddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressTagging)(nil)).Elem()
}

func (o AddressTaggingArrayOutput) ToAddressTaggingArrayOutput() AddressTaggingArrayOutput {
	return o
}

func (o AddressTaggingArrayOutput) ToAddressTaggingArrayOutputWithContext(ctx context.Context) AddressTaggingArrayOutput {
	return o
}

func (o AddressTaggingArrayOutput) Index(i pulumi.IntInput) AddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressTagging {
		return vs[0].([]AddressTagging)[vs[1].(int)]
	}).(AddressTaggingOutput)
}

type AddressTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// AddressTaggingTagInput is an input type that accepts AddressTaggingTagArgs and AddressTaggingTagOutput values.
// You can construct a concrete instance of `AddressTaggingTagInput` via:
//
//	AddressTaggingTagArgs{...}
type AddressTaggingTagInput interface {
	pulumi.Input

	ToAddressTaggingTagOutput() AddressTaggingTagOutput
	ToAddressTaggingTagOutputWithContext(context.Context) AddressTaggingTagOutput
}

type AddressTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressTaggingTag)(nil)).Elem()
}

func (i AddressTaggingTagArgs) ToAddressTaggingTagOutput() AddressTaggingTagOutput {
	return i.ToAddressTaggingTagOutputWithContext(context.Background())
}

func (i AddressTaggingTagArgs) ToAddressTaggingTagOutputWithContext(ctx context.Context) AddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressTaggingTagOutput)
}

// AddressTaggingTagArrayInput is an input type that accepts AddressTaggingTagArray and AddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `AddressTaggingTagArrayInput` via:
//
//	AddressTaggingTagArray{ AddressTaggingTagArgs{...} }
type AddressTaggingTagArrayInput interface {
	pulumi.Input

	ToAddressTaggingTagArrayOutput() AddressTaggingTagArrayOutput
	ToAddressTaggingTagArrayOutputWithContext(context.Context) AddressTaggingTagArrayOutput
}

type AddressTaggingTagArray []AddressTaggingTagInput

func (AddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressTaggingTag)(nil)).Elem()
}

func (i AddressTaggingTagArray) ToAddressTaggingTagArrayOutput() AddressTaggingTagArrayOutput {
	return i.ToAddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i AddressTaggingTagArray) ToAddressTaggingTagArrayOutputWithContext(ctx context.Context) AddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressTaggingTagArrayOutput)
}

type AddressTaggingTagOutput struct{ *pulumi.OutputState }

func (AddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressTaggingTag)(nil)).Elem()
}

func (o AddressTaggingTagOutput) ToAddressTaggingTagOutput() AddressTaggingTagOutput {
	return o
}

func (o AddressTaggingTagOutput) ToAddressTaggingTagOutputWithContext(ctx context.Context) AddressTaggingTagOutput {
	return o
}

// Tag name.
func (o AddressTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (AddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressTaggingTag)(nil)).Elem()
}

func (o AddressTaggingTagArrayOutput) ToAddressTaggingTagArrayOutput() AddressTaggingTagArrayOutput {
	return o
}

func (o AddressTaggingTagArrayOutput) ToAddressTaggingTagArrayOutputWithContext(ctx context.Context) AddressTaggingTagArrayOutput {
	return o
}

func (o AddressTaggingTagArrayOutput) Index(i pulumi.IntInput) AddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressTaggingTag {
		return vs[0].([]AddressTaggingTag)[vs[1].(int)]
	}).(AddressTaggingTagOutput)
}

type Addrgrp6ExcludeMember struct {
	// Address6 name.
	Name *string `pulumi:"name"`
}

// Addrgrp6ExcludeMemberInput is an input type that accepts Addrgrp6ExcludeMemberArgs and Addrgrp6ExcludeMemberOutput values.
// You can construct a concrete instance of `Addrgrp6ExcludeMemberInput` via:
//
//	Addrgrp6ExcludeMemberArgs{...}
type Addrgrp6ExcludeMemberInput interface {
	pulumi.Input

	ToAddrgrp6ExcludeMemberOutput() Addrgrp6ExcludeMemberOutput
	ToAddrgrp6ExcludeMemberOutputWithContext(context.Context) Addrgrp6ExcludeMemberOutput
}

type Addrgrp6ExcludeMemberArgs struct {
	// Address6 name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Addrgrp6ExcludeMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Addrgrp6ExcludeMember)(nil)).Elem()
}

func (i Addrgrp6ExcludeMemberArgs) ToAddrgrp6ExcludeMemberOutput() Addrgrp6ExcludeMemberOutput {
	return i.ToAddrgrp6ExcludeMemberOutputWithContext(context.Background())
}

func (i Addrgrp6ExcludeMemberArgs) ToAddrgrp6ExcludeMemberOutputWithContext(ctx context.Context) Addrgrp6ExcludeMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Addrgrp6ExcludeMemberOutput)
}

// Addrgrp6ExcludeMemberArrayInput is an input type that accepts Addrgrp6ExcludeMemberArray and Addrgrp6ExcludeMemberArrayOutput values.
// You can construct a concrete instance of `Addrgrp6ExcludeMemberArrayInput` via:
//
//	Addrgrp6ExcludeMemberArray{ Addrgrp6ExcludeMemberArgs{...} }
type Addrgrp6ExcludeMemberArrayInput interface {
	pulumi.Input

	ToAddrgrp6ExcludeMemberArrayOutput() Addrgrp6ExcludeMemberArrayOutput
	ToAddrgrp6ExcludeMemberArrayOutputWithContext(context.Context) Addrgrp6ExcludeMemberArrayOutput
}

type Addrgrp6ExcludeMemberArray []Addrgrp6ExcludeMemberInput

func (Addrgrp6ExcludeMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Addrgrp6ExcludeMember)(nil)).Elem()
}

func (i Addrgrp6ExcludeMemberArray) ToAddrgrp6ExcludeMemberArrayOutput() Addrgrp6ExcludeMemberArrayOutput {
	return i.ToAddrgrp6ExcludeMemberArrayOutputWithContext(context.Background())
}

func (i Addrgrp6ExcludeMemberArray) ToAddrgrp6ExcludeMemberArrayOutputWithContext(ctx context.Context) Addrgrp6ExcludeMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Addrgrp6ExcludeMemberArrayOutput)
}

type Addrgrp6ExcludeMemberOutput struct{ *pulumi.OutputState }

func (Addrgrp6ExcludeMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Addrgrp6ExcludeMember)(nil)).Elem()
}

func (o Addrgrp6ExcludeMemberOutput) ToAddrgrp6ExcludeMemberOutput() Addrgrp6ExcludeMemberOutput {
	return o
}

func (o Addrgrp6ExcludeMemberOutput) ToAddrgrp6ExcludeMemberOutputWithContext(ctx context.Context) Addrgrp6ExcludeMemberOutput {
	return o
}

// Address6 name.
func (o Addrgrp6ExcludeMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Addrgrp6ExcludeMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Addrgrp6ExcludeMemberArrayOutput struct{ *pulumi.OutputState }

func (Addrgrp6ExcludeMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Addrgrp6ExcludeMember)(nil)).Elem()
}

func (o Addrgrp6ExcludeMemberArrayOutput) ToAddrgrp6ExcludeMemberArrayOutput() Addrgrp6ExcludeMemberArrayOutput {
	return o
}

func (o Addrgrp6ExcludeMemberArrayOutput) ToAddrgrp6ExcludeMemberArrayOutputWithContext(ctx context.Context) Addrgrp6ExcludeMemberArrayOutput {
	return o
}

func (o Addrgrp6ExcludeMemberArrayOutput) Index(i pulumi.IntInput) Addrgrp6ExcludeMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Addrgrp6ExcludeMember {
		return vs[0].([]Addrgrp6ExcludeMember)[vs[1].(int)]
	}).(Addrgrp6ExcludeMemberOutput)
}

type Addrgrp6Member struct {
	// Address6/addrgrp6 name.
	Name *string `pulumi:"name"`
}

// Addrgrp6MemberInput is an input type that accepts Addrgrp6MemberArgs and Addrgrp6MemberOutput values.
// You can construct a concrete instance of `Addrgrp6MemberInput` via:
//
//	Addrgrp6MemberArgs{...}
type Addrgrp6MemberInput interface {
	pulumi.Input

	ToAddrgrp6MemberOutput() Addrgrp6MemberOutput
	ToAddrgrp6MemberOutputWithContext(context.Context) Addrgrp6MemberOutput
}

type Addrgrp6MemberArgs struct {
	// Address6/addrgrp6 name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Addrgrp6MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Addrgrp6Member)(nil)).Elem()
}

func (i Addrgrp6MemberArgs) ToAddrgrp6MemberOutput() Addrgrp6MemberOutput {
	return i.ToAddrgrp6MemberOutputWithContext(context.Background())
}

func (i Addrgrp6MemberArgs) ToAddrgrp6MemberOutputWithContext(ctx context.Context) Addrgrp6MemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Addrgrp6MemberOutput)
}

// Addrgrp6MemberArrayInput is an input type that accepts Addrgrp6MemberArray and Addrgrp6MemberArrayOutput values.
// You can construct a concrete instance of `Addrgrp6MemberArrayInput` via:
//
//	Addrgrp6MemberArray{ Addrgrp6MemberArgs{...} }
type Addrgrp6MemberArrayInput interface {
	pulumi.Input

	ToAddrgrp6MemberArrayOutput() Addrgrp6MemberArrayOutput
	ToAddrgrp6MemberArrayOutputWithContext(context.Context) Addrgrp6MemberArrayOutput
}

type Addrgrp6MemberArray []Addrgrp6MemberInput

func (Addrgrp6MemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Addrgrp6Member)(nil)).Elem()
}

func (i Addrgrp6MemberArray) ToAddrgrp6MemberArrayOutput() Addrgrp6MemberArrayOutput {
	return i.ToAddrgrp6MemberArrayOutputWithContext(context.Background())
}

func (i Addrgrp6MemberArray) ToAddrgrp6MemberArrayOutputWithContext(ctx context.Context) Addrgrp6MemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Addrgrp6MemberArrayOutput)
}

type Addrgrp6MemberOutput struct{ *pulumi.OutputState }

func (Addrgrp6MemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Addrgrp6Member)(nil)).Elem()
}

func (o Addrgrp6MemberOutput) ToAddrgrp6MemberOutput() Addrgrp6MemberOutput {
	return o
}

func (o Addrgrp6MemberOutput) ToAddrgrp6MemberOutputWithContext(ctx context.Context) Addrgrp6MemberOutput {
	return o
}

// Address6/addrgrp6 name.
func (o Addrgrp6MemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Addrgrp6Member) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Addrgrp6MemberArrayOutput struct{ *pulumi.OutputState }

func (Addrgrp6MemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Addrgrp6Member)(nil)).Elem()
}

func (o Addrgrp6MemberArrayOutput) ToAddrgrp6MemberArrayOutput() Addrgrp6MemberArrayOutput {
	return o
}

func (o Addrgrp6MemberArrayOutput) ToAddrgrp6MemberArrayOutputWithContext(ctx context.Context) Addrgrp6MemberArrayOutput {
	return o
}

func (o Addrgrp6MemberArrayOutput) Index(i pulumi.IntInput) Addrgrp6MemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Addrgrp6Member {
		return vs[0].([]Addrgrp6Member)[vs[1].(int)]
	}).(Addrgrp6MemberOutput)
}

type Addrgrp6Tagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []Addrgrp6TaggingTag `pulumi:"tags"`
}

// Addrgrp6TaggingInput is an input type that accepts Addrgrp6TaggingArgs and Addrgrp6TaggingOutput values.
// You can construct a concrete instance of `Addrgrp6TaggingInput` via:
//
//	Addrgrp6TaggingArgs{...}
type Addrgrp6TaggingInput interface {
	pulumi.Input

	ToAddrgrp6TaggingOutput() Addrgrp6TaggingOutput
	ToAddrgrp6TaggingOutputWithContext(context.Context) Addrgrp6TaggingOutput
}

type Addrgrp6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags Addrgrp6TaggingTagArrayInput `pulumi:"tags"`
}

func (Addrgrp6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Addrgrp6Tagging)(nil)).Elem()
}

func (i Addrgrp6TaggingArgs) ToAddrgrp6TaggingOutput() Addrgrp6TaggingOutput {
	return i.ToAddrgrp6TaggingOutputWithContext(context.Background())
}

func (i Addrgrp6TaggingArgs) ToAddrgrp6TaggingOutputWithContext(ctx context.Context) Addrgrp6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Addrgrp6TaggingOutput)
}

// Addrgrp6TaggingArrayInput is an input type that accepts Addrgrp6TaggingArray and Addrgrp6TaggingArrayOutput values.
// You can construct a concrete instance of `Addrgrp6TaggingArrayInput` via:
//
//	Addrgrp6TaggingArray{ Addrgrp6TaggingArgs{...} }
type Addrgrp6TaggingArrayInput interface {
	pulumi.Input

	ToAddrgrp6TaggingArrayOutput() Addrgrp6TaggingArrayOutput
	ToAddrgrp6TaggingArrayOutputWithContext(context.Context) Addrgrp6TaggingArrayOutput
}

type Addrgrp6TaggingArray []Addrgrp6TaggingInput

func (Addrgrp6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Addrgrp6Tagging)(nil)).Elem()
}

func (i Addrgrp6TaggingArray) ToAddrgrp6TaggingArrayOutput() Addrgrp6TaggingArrayOutput {
	return i.ToAddrgrp6TaggingArrayOutputWithContext(context.Background())
}

func (i Addrgrp6TaggingArray) ToAddrgrp6TaggingArrayOutputWithContext(ctx context.Context) Addrgrp6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Addrgrp6TaggingArrayOutput)
}

type Addrgrp6TaggingOutput struct{ *pulumi.OutputState }

func (Addrgrp6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Addrgrp6Tagging)(nil)).Elem()
}

func (o Addrgrp6TaggingOutput) ToAddrgrp6TaggingOutput() Addrgrp6TaggingOutput {
	return o
}

func (o Addrgrp6TaggingOutput) ToAddrgrp6TaggingOutputWithContext(ctx context.Context) Addrgrp6TaggingOutput {
	return o
}

// Tag category.
func (o Addrgrp6TaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Addrgrp6Tagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o Addrgrp6TaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Addrgrp6Tagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o Addrgrp6TaggingOutput) Tags() Addrgrp6TaggingTagArrayOutput {
	return o.ApplyT(func(v Addrgrp6Tagging) []Addrgrp6TaggingTag { return v.Tags }).(Addrgrp6TaggingTagArrayOutput)
}

type Addrgrp6TaggingArrayOutput struct{ *pulumi.OutputState }

func (Addrgrp6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Addrgrp6Tagging)(nil)).Elem()
}

func (o Addrgrp6TaggingArrayOutput) ToAddrgrp6TaggingArrayOutput() Addrgrp6TaggingArrayOutput {
	return o
}

func (o Addrgrp6TaggingArrayOutput) ToAddrgrp6TaggingArrayOutputWithContext(ctx context.Context) Addrgrp6TaggingArrayOutput {
	return o
}

func (o Addrgrp6TaggingArrayOutput) Index(i pulumi.IntInput) Addrgrp6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Addrgrp6Tagging {
		return vs[0].([]Addrgrp6Tagging)[vs[1].(int)]
	}).(Addrgrp6TaggingOutput)
}

type Addrgrp6TaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// Addrgrp6TaggingTagInput is an input type that accepts Addrgrp6TaggingTagArgs and Addrgrp6TaggingTagOutput values.
// You can construct a concrete instance of `Addrgrp6TaggingTagInput` via:
//
//	Addrgrp6TaggingTagArgs{...}
type Addrgrp6TaggingTagInput interface {
	pulumi.Input

	ToAddrgrp6TaggingTagOutput() Addrgrp6TaggingTagOutput
	ToAddrgrp6TaggingTagOutputWithContext(context.Context) Addrgrp6TaggingTagOutput
}

type Addrgrp6TaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Addrgrp6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Addrgrp6TaggingTag)(nil)).Elem()
}

func (i Addrgrp6TaggingTagArgs) ToAddrgrp6TaggingTagOutput() Addrgrp6TaggingTagOutput {
	return i.ToAddrgrp6TaggingTagOutputWithContext(context.Background())
}

func (i Addrgrp6TaggingTagArgs) ToAddrgrp6TaggingTagOutputWithContext(ctx context.Context) Addrgrp6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Addrgrp6TaggingTagOutput)
}

// Addrgrp6TaggingTagArrayInput is an input type that accepts Addrgrp6TaggingTagArray and Addrgrp6TaggingTagArrayOutput values.
// You can construct a concrete instance of `Addrgrp6TaggingTagArrayInput` via:
//
//	Addrgrp6TaggingTagArray{ Addrgrp6TaggingTagArgs{...} }
type Addrgrp6TaggingTagArrayInput interface {
	pulumi.Input

	ToAddrgrp6TaggingTagArrayOutput() Addrgrp6TaggingTagArrayOutput
	ToAddrgrp6TaggingTagArrayOutputWithContext(context.Context) Addrgrp6TaggingTagArrayOutput
}

type Addrgrp6TaggingTagArray []Addrgrp6TaggingTagInput

func (Addrgrp6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Addrgrp6TaggingTag)(nil)).Elem()
}

func (i Addrgrp6TaggingTagArray) ToAddrgrp6TaggingTagArrayOutput() Addrgrp6TaggingTagArrayOutput {
	return i.ToAddrgrp6TaggingTagArrayOutputWithContext(context.Background())
}

func (i Addrgrp6TaggingTagArray) ToAddrgrp6TaggingTagArrayOutputWithContext(ctx context.Context) Addrgrp6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Addrgrp6TaggingTagArrayOutput)
}

type Addrgrp6TaggingTagOutput struct{ *pulumi.OutputState }

func (Addrgrp6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Addrgrp6TaggingTag)(nil)).Elem()
}

func (o Addrgrp6TaggingTagOutput) ToAddrgrp6TaggingTagOutput() Addrgrp6TaggingTagOutput {
	return o
}

func (o Addrgrp6TaggingTagOutput) ToAddrgrp6TaggingTagOutputWithContext(ctx context.Context) Addrgrp6TaggingTagOutput {
	return o
}

// Tag name.
func (o Addrgrp6TaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Addrgrp6TaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Addrgrp6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (Addrgrp6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Addrgrp6TaggingTag)(nil)).Elem()
}

func (o Addrgrp6TaggingTagArrayOutput) ToAddrgrp6TaggingTagArrayOutput() Addrgrp6TaggingTagArrayOutput {
	return o
}

func (o Addrgrp6TaggingTagArrayOutput) ToAddrgrp6TaggingTagArrayOutputWithContext(ctx context.Context) Addrgrp6TaggingTagArrayOutput {
	return o
}

func (o Addrgrp6TaggingTagArrayOutput) Index(i pulumi.IntInput) Addrgrp6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Addrgrp6TaggingTag {
		return vs[0].([]Addrgrp6TaggingTag)[vs[1].(int)]
	}).(Addrgrp6TaggingTagOutput)
}

type AddrgrpExcludeMember struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// AddrgrpExcludeMemberInput is an input type that accepts AddrgrpExcludeMemberArgs and AddrgrpExcludeMemberOutput values.
// You can construct a concrete instance of `AddrgrpExcludeMemberInput` via:
//
//	AddrgrpExcludeMemberArgs{...}
type AddrgrpExcludeMemberInput interface {
	pulumi.Input

	ToAddrgrpExcludeMemberOutput() AddrgrpExcludeMemberOutput
	ToAddrgrpExcludeMemberOutputWithContext(context.Context) AddrgrpExcludeMemberOutput
}

type AddrgrpExcludeMemberArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AddrgrpExcludeMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddrgrpExcludeMember)(nil)).Elem()
}

func (i AddrgrpExcludeMemberArgs) ToAddrgrpExcludeMemberOutput() AddrgrpExcludeMemberOutput {
	return i.ToAddrgrpExcludeMemberOutputWithContext(context.Background())
}

func (i AddrgrpExcludeMemberArgs) ToAddrgrpExcludeMemberOutputWithContext(ctx context.Context) AddrgrpExcludeMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddrgrpExcludeMemberOutput)
}

// AddrgrpExcludeMemberArrayInput is an input type that accepts AddrgrpExcludeMemberArray and AddrgrpExcludeMemberArrayOutput values.
// You can construct a concrete instance of `AddrgrpExcludeMemberArrayInput` via:
//
//	AddrgrpExcludeMemberArray{ AddrgrpExcludeMemberArgs{...} }
type AddrgrpExcludeMemberArrayInput interface {
	pulumi.Input

	ToAddrgrpExcludeMemberArrayOutput() AddrgrpExcludeMemberArrayOutput
	ToAddrgrpExcludeMemberArrayOutputWithContext(context.Context) AddrgrpExcludeMemberArrayOutput
}

type AddrgrpExcludeMemberArray []AddrgrpExcludeMemberInput

func (AddrgrpExcludeMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddrgrpExcludeMember)(nil)).Elem()
}

func (i AddrgrpExcludeMemberArray) ToAddrgrpExcludeMemberArrayOutput() AddrgrpExcludeMemberArrayOutput {
	return i.ToAddrgrpExcludeMemberArrayOutputWithContext(context.Background())
}

func (i AddrgrpExcludeMemberArray) ToAddrgrpExcludeMemberArrayOutputWithContext(ctx context.Context) AddrgrpExcludeMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddrgrpExcludeMemberArrayOutput)
}

type AddrgrpExcludeMemberOutput struct{ *pulumi.OutputState }

func (AddrgrpExcludeMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddrgrpExcludeMember)(nil)).Elem()
}

func (o AddrgrpExcludeMemberOutput) ToAddrgrpExcludeMemberOutput() AddrgrpExcludeMemberOutput {
	return o
}

func (o AddrgrpExcludeMemberOutput) ToAddrgrpExcludeMemberOutputWithContext(ctx context.Context) AddrgrpExcludeMemberOutput {
	return o
}

// Address name.
func (o AddrgrpExcludeMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddrgrpExcludeMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AddrgrpExcludeMemberArrayOutput struct{ *pulumi.OutputState }

func (AddrgrpExcludeMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddrgrpExcludeMember)(nil)).Elem()
}

func (o AddrgrpExcludeMemberArrayOutput) ToAddrgrpExcludeMemberArrayOutput() AddrgrpExcludeMemberArrayOutput {
	return o
}

func (o AddrgrpExcludeMemberArrayOutput) ToAddrgrpExcludeMemberArrayOutputWithContext(ctx context.Context) AddrgrpExcludeMemberArrayOutput {
	return o
}

func (o AddrgrpExcludeMemberArrayOutput) Index(i pulumi.IntInput) AddrgrpExcludeMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddrgrpExcludeMember {
		return vs[0].([]AddrgrpExcludeMember)[vs[1].(int)]
	}).(AddrgrpExcludeMemberOutput)
}

type AddrgrpMember struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// AddrgrpMemberInput is an input type that accepts AddrgrpMemberArgs and AddrgrpMemberOutput values.
// You can construct a concrete instance of `AddrgrpMemberInput` via:
//
//	AddrgrpMemberArgs{...}
type AddrgrpMemberInput interface {
	pulumi.Input

	ToAddrgrpMemberOutput() AddrgrpMemberOutput
	ToAddrgrpMemberOutputWithContext(context.Context) AddrgrpMemberOutput
}

type AddrgrpMemberArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AddrgrpMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddrgrpMember)(nil)).Elem()
}

func (i AddrgrpMemberArgs) ToAddrgrpMemberOutput() AddrgrpMemberOutput {
	return i.ToAddrgrpMemberOutputWithContext(context.Background())
}

func (i AddrgrpMemberArgs) ToAddrgrpMemberOutputWithContext(ctx context.Context) AddrgrpMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddrgrpMemberOutput)
}

// AddrgrpMemberArrayInput is an input type that accepts AddrgrpMemberArray and AddrgrpMemberArrayOutput values.
// You can construct a concrete instance of `AddrgrpMemberArrayInput` via:
//
//	AddrgrpMemberArray{ AddrgrpMemberArgs{...} }
type AddrgrpMemberArrayInput interface {
	pulumi.Input

	ToAddrgrpMemberArrayOutput() AddrgrpMemberArrayOutput
	ToAddrgrpMemberArrayOutputWithContext(context.Context) AddrgrpMemberArrayOutput
}

type AddrgrpMemberArray []AddrgrpMemberInput

func (AddrgrpMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddrgrpMember)(nil)).Elem()
}

func (i AddrgrpMemberArray) ToAddrgrpMemberArrayOutput() AddrgrpMemberArrayOutput {
	return i.ToAddrgrpMemberArrayOutputWithContext(context.Background())
}

func (i AddrgrpMemberArray) ToAddrgrpMemberArrayOutputWithContext(ctx context.Context) AddrgrpMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddrgrpMemberArrayOutput)
}

type AddrgrpMemberOutput struct{ *pulumi.OutputState }

func (AddrgrpMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddrgrpMember)(nil)).Elem()
}

func (o AddrgrpMemberOutput) ToAddrgrpMemberOutput() AddrgrpMemberOutput {
	return o
}

func (o AddrgrpMemberOutput) ToAddrgrpMemberOutputWithContext(ctx context.Context) AddrgrpMemberOutput {
	return o
}

// Address name.
func (o AddrgrpMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddrgrpMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AddrgrpMemberArrayOutput struct{ *pulumi.OutputState }

func (AddrgrpMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddrgrpMember)(nil)).Elem()
}

func (o AddrgrpMemberArrayOutput) ToAddrgrpMemberArrayOutput() AddrgrpMemberArrayOutput {
	return o
}

func (o AddrgrpMemberArrayOutput) ToAddrgrpMemberArrayOutputWithContext(ctx context.Context) AddrgrpMemberArrayOutput {
	return o
}

func (o AddrgrpMemberArrayOutput) Index(i pulumi.IntInput) AddrgrpMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddrgrpMember {
		return vs[0].([]AddrgrpMember)[vs[1].(int)]
	}).(AddrgrpMemberOutput)
}

type AddrgrpTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []AddrgrpTaggingTag `pulumi:"tags"`
}

// AddrgrpTaggingInput is an input type that accepts AddrgrpTaggingArgs and AddrgrpTaggingOutput values.
// You can construct a concrete instance of `AddrgrpTaggingInput` via:
//
//	AddrgrpTaggingArgs{...}
type AddrgrpTaggingInput interface {
	pulumi.Input

	ToAddrgrpTaggingOutput() AddrgrpTaggingOutput
	ToAddrgrpTaggingOutputWithContext(context.Context) AddrgrpTaggingOutput
}

type AddrgrpTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags AddrgrpTaggingTagArrayInput `pulumi:"tags"`
}

func (AddrgrpTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddrgrpTagging)(nil)).Elem()
}

func (i AddrgrpTaggingArgs) ToAddrgrpTaggingOutput() AddrgrpTaggingOutput {
	return i.ToAddrgrpTaggingOutputWithContext(context.Background())
}

func (i AddrgrpTaggingArgs) ToAddrgrpTaggingOutputWithContext(ctx context.Context) AddrgrpTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddrgrpTaggingOutput)
}

// AddrgrpTaggingArrayInput is an input type that accepts AddrgrpTaggingArray and AddrgrpTaggingArrayOutput values.
// You can construct a concrete instance of `AddrgrpTaggingArrayInput` via:
//
//	AddrgrpTaggingArray{ AddrgrpTaggingArgs{...} }
type AddrgrpTaggingArrayInput interface {
	pulumi.Input

	ToAddrgrpTaggingArrayOutput() AddrgrpTaggingArrayOutput
	ToAddrgrpTaggingArrayOutputWithContext(context.Context) AddrgrpTaggingArrayOutput
}

type AddrgrpTaggingArray []AddrgrpTaggingInput

func (AddrgrpTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddrgrpTagging)(nil)).Elem()
}

func (i AddrgrpTaggingArray) ToAddrgrpTaggingArrayOutput() AddrgrpTaggingArrayOutput {
	return i.ToAddrgrpTaggingArrayOutputWithContext(context.Background())
}

func (i AddrgrpTaggingArray) ToAddrgrpTaggingArrayOutputWithContext(ctx context.Context) AddrgrpTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddrgrpTaggingArrayOutput)
}

type AddrgrpTaggingOutput struct{ *pulumi.OutputState }

func (AddrgrpTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddrgrpTagging)(nil)).Elem()
}

func (o AddrgrpTaggingOutput) ToAddrgrpTaggingOutput() AddrgrpTaggingOutput {
	return o
}

func (o AddrgrpTaggingOutput) ToAddrgrpTaggingOutputWithContext(ctx context.Context) AddrgrpTaggingOutput {
	return o
}

// Tag category.
func (o AddrgrpTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddrgrpTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o AddrgrpTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddrgrpTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o AddrgrpTaggingOutput) Tags() AddrgrpTaggingTagArrayOutput {
	return o.ApplyT(func(v AddrgrpTagging) []AddrgrpTaggingTag { return v.Tags }).(AddrgrpTaggingTagArrayOutput)
}

type AddrgrpTaggingArrayOutput struct{ *pulumi.OutputState }

func (AddrgrpTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddrgrpTagging)(nil)).Elem()
}

func (o AddrgrpTaggingArrayOutput) ToAddrgrpTaggingArrayOutput() AddrgrpTaggingArrayOutput {
	return o
}

func (o AddrgrpTaggingArrayOutput) ToAddrgrpTaggingArrayOutputWithContext(ctx context.Context) AddrgrpTaggingArrayOutput {
	return o
}

func (o AddrgrpTaggingArrayOutput) Index(i pulumi.IntInput) AddrgrpTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddrgrpTagging {
		return vs[0].([]AddrgrpTagging)[vs[1].(int)]
	}).(AddrgrpTaggingOutput)
}

type AddrgrpTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// AddrgrpTaggingTagInput is an input type that accepts AddrgrpTaggingTagArgs and AddrgrpTaggingTagOutput values.
// You can construct a concrete instance of `AddrgrpTaggingTagInput` via:
//
//	AddrgrpTaggingTagArgs{...}
type AddrgrpTaggingTagInput interface {
	pulumi.Input

	ToAddrgrpTaggingTagOutput() AddrgrpTaggingTagOutput
	ToAddrgrpTaggingTagOutputWithContext(context.Context) AddrgrpTaggingTagOutput
}

type AddrgrpTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AddrgrpTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddrgrpTaggingTag)(nil)).Elem()
}

func (i AddrgrpTaggingTagArgs) ToAddrgrpTaggingTagOutput() AddrgrpTaggingTagOutput {
	return i.ToAddrgrpTaggingTagOutputWithContext(context.Background())
}

func (i AddrgrpTaggingTagArgs) ToAddrgrpTaggingTagOutputWithContext(ctx context.Context) AddrgrpTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddrgrpTaggingTagOutput)
}

// AddrgrpTaggingTagArrayInput is an input type that accepts AddrgrpTaggingTagArray and AddrgrpTaggingTagArrayOutput values.
// You can construct a concrete instance of `AddrgrpTaggingTagArrayInput` via:
//
//	AddrgrpTaggingTagArray{ AddrgrpTaggingTagArgs{...} }
type AddrgrpTaggingTagArrayInput interface {
	pulumi.Input

	ToAddrgrpTaggingTagArrayOutput() AddrgrpTaggingTagArrayOutput
	ToAddrgrpTaggingTagArrayOutputWithContext(context.Context) AddrgrpTaggingTagArrayOutput
}

type AddrgrpTaggingTagArray []AddrgrpTaggingTagInput

func (AddrgrpTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddrgrpTaggingTag)(nil)).Elem()
}

func (i AddrgrpTaggingTagArray) ToAddrgrpTaggingTagArrayOutput() AddrgrpTaggingTagArrayOutput {
	return i.ToAddrgrpTaggingTagArrayOutputWithContext(context.Background())
}

func (i AddrgrpTaggingTagArray) ToAddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) AddrgrpTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddrgrpTaggingTagArrayOutput)
}

type AddrgrpTaggingTagOutput struct{ *pulumi.OutputState }

func (AddrgrpTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddrgrpTaggingTag)(nil)).Elem()
}

func (o AddrgrpTaggingTagOutput) ToAddrgrpTaggingTagOutput() AddrgrpTaggingTagOutput {
	return o
}

func (o AddrgrpTaggingTagOutput) ToAddrgrpTaggingTagOutputWithContext(ctx context.Context) AddrgrpTaggingTagOutput {
	return o
}

// Tag name.
func (o AddrgrpTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddrgrpTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AddrgrpTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (AddrgrpTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddrgrpTaggingTag)(nil)).Elem()
}

func (o AddrgrpTaggingTagArrayOutput) ToAddrgrpTaggingTagArrayOutput() AddrgrpTaggingTagArrayOutput {
	return o
}

func (o AddrgrpTaggingTagArrayOutput) ToAddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) AddrgrpTaggingTagArrayOutput {
	return o
}

func (o AddrgrpTaggingTagArrayOutput) Index(i pulumi.IntInput) AddrgrpTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddrgrpTaggingTag {
		return vs[0].([]AddrgrpTaggingTag)[vs[1].(int)]
	}).(AddrgrpTaggingTagOutput)
}

type AuthportalGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// AuthportalGroupInput is an input type that accepts AuthportalGroupArgs and AuthportalGroupOutput values.
// You can construct a concrete instance of `AuthportalGroupInput` via:
//
//	AuthportalGroupArgs{...}
type AuthportalGroupInput interface {
	pulumi.Input

	ToAuthportalGroupOutput() AuthportalGroupOutput
	ToAuthportalGroupOutputWithContext(context.Context) AuthportalGroupOutput
}

type AuthportalGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AuthportalGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthportalGroup)(nil)).Elem()
}

func (i AuthportalGroupArgs) ToAuthportalGroupOutput() AuthportalGroupOutput {
	return i.ToAuthportalGroupOutputWithContext(context.Background())
}

func (i AuthportalGroupArgs) ToAuthportalGroupOutputWithContext(ctx context.Context) AuthportalGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthportalGroupOutput)
}

// AuthportalGroupArrayInput is an input type that accepts AuthportalGroupArray and AuthportalGroupArrayOutput values.
// You can construct a concrete instance of `AuthportalGroupArrayInput` via:
//
//	AuthportalGroupArray{ AuthportalGroupArgs{...} }
type AuthportalGroupArrayInput interface {
	pulumi.Input

	ToAuthportalGroupArrayOutput() AuthportalGroupArrayOutput
	ToAuthportalGroupArrayOutputWithContext(context.Context) AuthportalGroupArrayOutput
}

type AuthportalGroupArray []AuthportalGroupInput

func (AuthportalGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthportalGroup)(nil)).Elem()
}

func (i AuthportalGroupArray) ToAuthportalGroupArrayOutput() AuthportalGroupArrayOutput {
	return i.ToAuthportalGroupArrayOutputWithContext(context.Background())
}

func (i AuthportalGroupArray) ToAuthportalGroupArrayOutputWithContext(ctx context.Context) AuthportalGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthportalGroupArrayOutput)
}

type AuthportalGroupOutput struct{ *pulumi.OutputState }

func (AuthportalGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthportalGroup)(nil)).Elem()
}

func (o AuthportalGroupOutput) ToAuthportalGroupOutput() AuthportalGroupOutput {
	return o
}

func (o AuthportalGroupOutput) ToAuthportalGroupOutputWithContext(ctx context.Context) AuthportalGroupOutput {
	return o
}

// Group name.
func (o AuthportalGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthportalGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AuthportalGroupArrayOutput struct{ *pulumi.OutputState }

func (AuthportalGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthportalGroup)(nil)).Elem()
}

func (o AuthportalGroupArrayOutput) ToAuthportalGroupArrayOutput() AuthportalGroupArrayOutput {
	return o
}

func (o AuthportalGroupArrayOutput) ToAuthportalGroupArrayOutputWithContext(ctx context.Context) AuthportalGroupArrayOutput {
	return o
}

func (o AuthportalGroupArrayOutput) Index(i pulumi.IntInput) AuthportalGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthportalGroup {
		return vs[0].([]AuthportalGroup)[vs[1].(int)]
	}).(AuthportalGroupOutput)
}

type CentralsnatmapDstAddr6 struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// CentralsnatmapDstAddr6Input is an input type that accepts CentralsnatmapDstAddr6Args and CentralsnatmapDstAddr6Output values.
// You can construct a concrete instance of `CentralsnatmapDstAddr6Input` via:
//
//	CentralsnatmapDstAddr6Args{...}
type CentralsnatmapDstAddr6Input interface {
	pulumi.Input

	ToCentralsnatmapDstAddr6Output() CentralsnatmapDstAddr6Output
	ToCentralsnatmapDstAddr6OutputWithContext(context.Context) CentralsnatmapDstAddr6Output
}

type CentralsnatmapDstAddr6Args struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CentralsnatmapDstAddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapDstAddr6)(nil)).Elem()
}

func (i CentralsnatmapDstAddr6Args) ToCentralsnatmapDstAddr6Output() CentralsnatmapDstAddr6Output {
	return i.ToCentralsnatmapDstAddr6OutputWithContext(context.Background())
}

func (i CentralsnatmapDstAddr6Args) ToCentralsnatmapDstAddr6OutputWithContext(ctx context.Context) CentralsnatmapDstAddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapDstAddr6Output)
}

// CentralsnatmapDstAddr6ArrayInput is an input type that accepts CentralsnatmapDstAddr6Array and CentralsnatmapDstAddr6ArrayOutput values.
// You can construct a concrete instance of `CentralsnatmapDstAddr6ArrayInput` via:
//
//	CentralsnatmapDstAddr6Array{ CentralsnatmapDstAddr6Args{...} }
type CentralsnatmapDstAddr6ArrayInput interface {
	pulumi.Input

	ToCentralsnatmapDstAddr6ArrayOutput() CentralsnatmapDstAddr6ArrayOutput
	ToCentralsnatmapDstAddr6ArrayOutputWithContext(context.Context) CentralsnatmapDstAddr6ArrayOutput
}

type CentralsnatmapDstAddr6Array []CentralsnatmapDstAddr6Input

func (CentralsnatmapDstAddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapDstAddr6)(nil)).Elem()
}

func (i CentralsnatmapDstAddr6Array) ToCentralsnatmapDstAddr6ArrayOutput() CentralsnatmapDstAddr6ArrayOutput {
	return i.ToCentralsnatmapDstAddr6ArrayOutputWithContext(context.Background())
}

func (i CentralsnatmapDstAddr6Array) ToCentralsnatmapDstAddr6ArrayOutputWithContext(ctx context.Context) CentralsnatmapDstAddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapDstAddr6ArrayOutput)
}

type CentralsnatmapDstAddr6Output struct{ *pulumi.OutputState }

func (CentralsnatmapDstAddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapDstAddr6)(nil)).Elem()
}

func (o CentralsnatmapDstAddr6Output) ToCentralsnatmapDstAddr6Output() CentralsnatmapDstAddr6Output {
	return o
}

func (o CentralsnatmapDstAddr6Output) ToCentralsnatmapDstAddr6OutputWithContext(ctx context.Context) CentralsnatmapDstAddr6Output {
	return o
}

// Address name.
func (o CentralsnatmapDstAddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralsnatmapDstAddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CentralsnatmapDstAddr6ArrayOutput struct{ *pulumi.OutputState }

func (CentralsnatmapDstAddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapDstAddr6)(nil)).Elem()
}

func (o CentralsnatmapDstAddr6ArrayOutput) ToCentralsnatmapDstAddr6ArrayOutput() CentralsnatmapDstAddr6ArrayOutput {
	return o
}

func (o CentralsnatmapDstAddr6ArrayOutput) ToCentralsnatmapDstAddr6ArrayOutputWithContext(ctx context.Context) CentralsnatmapDstAddr6ArrayOutput {
	return o
}

func (o CentralsnatmapDstAddr6ArrayOutput) Index(i pulumi.IntInput) CentralsnatmapDstAddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CentralsnatmapDstAddr6 {
		return vs[0].([]CentralsnatmapDstAddr6)[vs[1].(int)]
	}).(CentralsnatmapDstAddr6Output)
}

type CentralsnatmapDstAddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// CentralsnatmapDstAddrInput is an input type that accepts CentralsnatmapDstAddrArgs and CentralsnatmapDstAddrOutput values.
// You can construct a concrete instance of `CentralsnatmapDstAddrInput` via:
//
//	CentralsnatmapDstAddrArgs{...}
type CentralsnatmapDstAddrInput interface {
	pulumi.Input

	ToCentralsnatmapDstAddrOutput() CentralsnatmapDstAddrOutput
	ToCentralsnatmapDstAddrOutputWithContext(context.Context) CentralsnatmapDstAddrOutput
}

type CentralsnatmapDstAddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CentralsnatmapDstAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapDstAddr)(nil)).Elem()
}

func (i CentralsnatmapDstAddrArgs) ToCentralsnatmapDstAddrOutput() CentralsnatmapDstAddrOutput {
	return i.ToCentralsnatmapDstAddrOutputWithContext(context.Background())
}

func (i CentralsnatmapDstAddrArgs) ToCentralsnatmapDstAddrOutputWithContext(ctx context.Context) CentralsnatmapDstAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapDstAddrOutput)
}

// CentralsnatmapDstAddrArrayInput is an input type that accepts CentralsnatmapDstAddrArray and CentralsnatmapDstAddrArrayOutput values.
// You can construct a concrete instance of `CentralsnatmapDstAddrArrayInput` via:
//
//	CentralsnatmapDstAddrArray{ CentralsnatmapDstAddrArgs{...} }
type CentralsnatmapDstAddrArrayInput interface {
	pulumi.Input

	ToCentralsnatmapDstAddrArrayOutput() CentralsnatmapDstAddrArrayOutput
	ToCentralsnatmapDstAddrArrayOutputWithContext(context.Context) CentralsnatmapDstAddrArrayOutput
}

type CentralsnatmapDstAddrArray []CentralsnatmapDstAddrInput

func (CentralsnatmapDstAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapDstAddr)(nil)).Elem()
}

func (i CentralsnatmapDstAddrArray) ToCentralsnatmapDstAddrArrayOutput() CentralsnatmapDstAddrArrayOutput {
	return i.ToCentralsnatmapDstAddrArrayOutputWithContext(context.Background())
}

func (i CentralsnatmapDstAddrArray) ToCentralsnatmapDstAddrArrayOutputWithContext(ctx context.Context) CentralsnatmapDstAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapDstAddrArrayOutput)
}

type CentralsnatmapDstAddrOutput struct{ *pulumi.OutputState }

func (CentralsnatmapDstAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapDstAddr)(nil)).Elem()
}

func (o CentralsnatmapDstAddrOutput) ToCentralsnatmapDstAddrOutput() CentralsnatmapDstAddrOutput {
	return o
}

func (o CentralsnatmapDstAddrOutput) ToCentralsnatmapDstAddrOutputWithContext(ctx context.Context) CentralsnatmapDstAddrOutput {
	return o
}

// Address name.
func (o CentralsnatmapDstAddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralsnatmapDstAddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CentralsnatmapDstAddrArrayOutput struct{ *pulumi.OutputState }

func (CentralsnatmapDstAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapDstAddr)(nil)).Elem()
}

func (o CentralsnatmapDstAddrArrayOutput) ToCentralsnatmapDstAddrArrayOutput() CentralsnatmapDstAddrArrayOutput {
	return o
}

func (o CentralsnatmapDstAddrArrayOutput) ToCentralsnatmapDstAddrArrayOutputWithContext(ctx context.Context) CentralsnatmapDstAddrArrayOutput {
	return o
}

func (o CentralsnatmapDstAddrArrayOutput) Index(i pulumi.IntInput) CentralsnatmapDstAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CentralsnatmapDstAddr {
		return vs[0].([]CentralsnatmapDstAddr)[vs[1].(int)]
	}).(CentralsnatmapDstAddrOutput)
}

type CentralsnatmapDstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// CentralsnatmapDstintfInput is an input type that accepts CentralsnatmapDstintfArgs and CentralsnatmapDstintfOutput values.
// You can construct a concrete instance of `CentralsnatmapDstintfInput` via:
//
//	CentralsnatmapDstintfArgs{...}
type CentralsnatmapDstintfInput interface {
	pulumi.Input

	ToCentralsnatmapDstintfOutput() CentralsnatmapDstintfOutput
	ToCentralsnatmapDstintfOutputWithContext(context.Context) CentralsnatmapDstintfOutput
}

type CentralsnatmapDstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CentralsnatmapDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapDstintf)(nil)).Elem()
}

func (i CentralsnatmapDstintfArgs) ToCentralsnatmapDstintfOutput() CentralsnatmapDstintfOutput {
	return i.ToCentralsnatmapDstintfOutputWithContext(context.Background())
}

func (i CentralsnatmapDstintfArgs) ToCentralsnatmapDstintfOutputWithContext(ctx context.Context) CentralsnatmapDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapDstintfOutput)
}

// CentralsnatmapDstintfArrayInput is an input type that accepts CentralsnatmapDstintfArray and CentralsnatmapDstintfArrayOutput values.
// You can construct a concrete instance of `CentralsnatmapDstintfArrayInput` via:
//
//	CentralsnatmapDstintfArray{ CentralsnatmapDstintfArgs{...} }
type CentralsnatmapDstintfArrayInput interface {
	pulumi.Input

	ToCentralsnatmapDstintfArrayOutput() CentralsnatmapDstintfArrayOutput
	ToCentralsnatmapDstintfArrayOutputWithContext(context.Context) CentralsnatmapDstintfArrayOutput
}

type CentralsnatmapDstintfArray []CentralsnatmapDstintfInput

func (CentralsnatmapDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapDstintf)(nil)).Elem()
}

func (i CentralsnatmapDstintfArray) ToCentralsnatmapDstintfArrayOutput() CentralsnatmapDstintfArrayOutput {
	return i.ToCentralsnatmapDstintfArrayOutputWithContext(context.Background())
}

func (i CentralsnatmapDstintfArray) ToCentralsnatmapDstintfArrayOutputWithContext(ctx context.Context) CentralsnatmapDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapDstintfArrayOutput)
}

type CentralsnatmapDstintfOutput struct{ *pulumi.OutputState }

func (CentralsnatmapDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapDstintf)(nil)).Elem()
}

func (o CentralsnatmapDstintfOutput) ToCentralsnatmapDstintfOutput() CentralsnatmapDstintfOutput {
	return o
}

func (o CentralsnatmapDstintfOutput) ToCentralsnatmapDstintfOutputWithContext(ctx context.Context) CentralsnatmapDstintfOutput {
	return o
}

// Interface name.
func (o CentralsnatmapDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralsnatmapDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CentralsnatmapDstintfArrayOutput struct{ *pulumi.OutputState }

func (CentralsnatmapDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapDstintf)(nil)).Elem()
}

func (o CentralsnatmapDstintfArrayOutput) ToCentralsnatmapDstintfArrayOutput() CentralsnatmapDstintfArrayOutput {
	return o
}

func (o CentralsnatmapDstintfArrayOutput) ToCentralsnatmapDstintfArrayOutputWithContext(ctx context.Context) CentralsnatmapDstintfArrayOutput {
	return o
}

func (o CentralsnatmapDstintfArrayOutput) Index(i pulumi.IntInput) CentralsnatmapDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CentralsnatmapDstintf {
		return vs[0].([]CentralsnatmapDstintf)[vs[1].(int)]
	}).(CentralsnatmapDstintfOutput)
}

type CentralsnatmapNatIppool6 struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// CentralsnatmapNatIppool6Input is an input type that accepts CentralsnatmapNatIppool6Args and CentralsnatmapNatIppool6Output values.
// You can construct a concrete instance of `CentralsnatmapNatIppool6Input` via:
//
//	CentralsnatmapNatIppool6Args{...}
type CentralsnatmapNatIppool6Input interface {
	pulumi.Input

	ToCentralsnatmapNatIppool6Output() CentralsnatmapNatIppool6Output
	ToCentralsnatmapNatIppool6OutputWithContext(context.Context) CentralsnatmapNatIppool6Output
}

type CentralsnatmapNatIppool6Args struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CentralsnatmapNatIppool6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapNatIppool6)(nil)).Elem()
}

func (i CentralsnatmapNatIppool6Args) ToCentralsnatmapNatIppool6Output() CentralsnatmapNatIppool6Output {
	return i.ToCentralsnatmapNatIppool6OutputWithContext(context.Background())
}

func (i CentralsnatmapNatIppool6Args) ToCentralsnatmapNatIppool6OutputWithContext(ctx context.Context) CentralsnatmapNatIppool6Output {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapNatIppool6Output)
}

// CentralsnatmapNatIppool6ArrayInput is an input type that accepts CentralsnatmapNatIppool6Array and CentralsnatmapNatIppool6ArrayOutput values.
// You can construct a concrete instance of `CentralsnatmapNatIppool6ArrayInput` via:
//
//	CentralsnatmapNatIppool6Array{ CentralsnatmapNatIppool6Args{...} }
type CentralsnatmapNatIppool6ArrayInput interface {
	pulumi.Input

	ToCentralsnatmapNatIppool6ArrayOutput() CentralsnatmapNatIppool6ArrayOutput
	ToCentralsnatmapNatIppool6ArrayOutputWithContext(context.Context) CentralsnatmapNatIppool6ArrayOutput
}

type CentralsnatmapNatIppool6Array []CentralsnatmapNatIppool6Input

func (CentralsnatmapNatIppool6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapNatIppool6)(nil)).Elem()
}

func (i CentralsnatmapNatIppool6Array) ToCentralsnatmapNatIppool6ArrayOutput() CentralsnatmapNatIppool6ArrayOutput {
	return i.ToCentralsnatmapNatIppool6ArrayOutputWithContext(context.Background())
}

func (i CentralsnatmapNatIppool6Array) ToCentralsnatmapNatIppool6ArrayOutputWithContext(ctx context.Context) CentralsnatmapNatIppool6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapNatIppool6ArrayOutput)
}

type CentralsnatmapNatIppool6Output struct{ *pulumi.OutputState }

func (CentralsnatmapNatIppool6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapNatIppool6)(nil)).Elem()
}

func (o CentralsnatmapNatIppool6Output) ToCentralsnatmapNatIppool6Output() CentralsnatmapNatIppool6Output {
	return o
}

func (o CentralsnatmapNatIppool6Output) ToCentralsnatmapNatIppool6OutputWithContext(ctx context.Context) CentralsnatmapNatIppool6Output {
	return o
}

// Address name.
func (o CentralsnatmapNatIppool6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralsnatmapNatIppool6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CentralsnatmapNatIppool6ArrayOutput struct{ *pulumi.OutputState }

func (CentralsnatmapNatIppool6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapNatIppool6)(nil)).Elem()
}

func (o CentralsnatmapNatIppool6ArrayOutput) ToCentralsnatmapNatIppool6ArrayOutput() CentralsnatmapNatIppool6ArrayOutput {
	return o
}

func (o CentralsnatmapNatIppool6ArrayOutput) ToCentralsnatmapNatIppool6ArrayOutputWithContext(ctx context.Context) CentralsnatmapNatIppool6ArrayOutput {
	return o
}

func (o CentralsnatmapNatIppool6ArrayOutput) Index(i pulumi.IntInput) CentralsnatmapNatIppool6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CentralsnatmapNatIppool6 {
		return vs[0].([]CentralsnatmapNatIppool6)[vs[1].(int)]
	}).(CentralsnatmapNatIppool6Output)
}

type CentralsnatmapNatIppool struct {
	// IPv6 pool name.
	Name *string `pulumi:"name"`
}

// CentralsnatmapNatIppoolInput is an input type that accepts CentralsnatmapNatIppoolArgs and CentralsnatmapNatIppoolOutput values.
// You can construct a concrete instance of `CentralsnatmapNatIppoolInput` via:
//
//	CentralsnatmapNatIppoolArgs{...}
type CentralsnatmapNatIppoolInput interface {
	pulumi.Input

	ToCentralsnatmapNatIppoolOutput() CentralsnatmapNatIppoolOutput
	ToCentralsnatmapNatIppoolOutputWithContext(context.Context) CentralsnatmapNatIppoolOutput
}

type CentralsnatmapNatIppoolArgs struct {
	// IPv6 pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CentralsnatmapNatIppoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapNatIppool)(nil)).Elem()
}

func (i CentralsnatmapNatIppoolArgs) ToCentralsnatmapNatIppoolOutput() CentralsnatmapNatIppoolOutput {
	return i.ToCentralsnatmapNatIppoolOutputWithContext(context.Background())
}

func (i CentralsnatmapNatIppoolArgs) ToCentralsnatmapNatIppoolOutputWithContext(ctx context.Context) CentralsnatmapNatIppoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapNatIppoolOutput)
}

// CentralsnatmapNatIppoolArrayInput is an input type that accepts CentralsnatmapNatIppoolArray and CentralsnatmapNatIppoolArrayOutput values.
// You can construct a concrete instance of `CentralsnatmapNatIppoolArrayInput` via:
//
//	CentralsnatmapNatIppoolArray{ CentralsnatmapNatIppoolArgs{...} }
type CentralsnatmapNatIppoolArrayInput interface {
	pulumi.Input

	ToCentralsnatmapNatIppoolArrayOutput() CentralsnatmapNatIppoolArrayOutput
	ToCentralsnatmapNatIppoolArrayOutputWithContext(context.Context) CentralsnatmapNatIppoolArrayOutput
}

type CentralsnatmapNatIppoolArray []CentralsnatmapNatIppoolInput

func (CentralsnatmapNatIppoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapNatIppool)(nil)).Elem()
}

func (i CentralsnatmapNatIppoolArray) ToCentralsnatmapNatIppoolArrayOutput() CentralsnatmapNatIppoolArrayOutput {
	return i.ToCentralsnatmapNatIppoolArrayOutputWithContext(context.Background())
}

func (i CentralsnatmapNatIppoolArray) ToCentralsnatmapNatIppoolArrayOutputWithContext(ctx context.Context) CentralsnatmapNatIppoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapNatIppoolArrayOutput)
}

type CentralsnatmapNatIppoolOutput struct{ *pulumi.OutputState }

func (CentralsnatmapNatIppoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapNatIppool)(nil)).Elem()
}

func (o CentralsnatmapNatIppoolOutput) ToCentralsnatmapNatIppoolOutput() CentralsnatmapNatIppoolOutput {
	return o
}

func (o CentralsnatmapNatIppoolOutput) ToCentralsnatmapNatIppoolOutputWithContext(ctx context.Context) CentralsnatmapNatIppoolOutput {
	return o
}

// IPv6 pool name.
func (o CentralsnatmapNatIppoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralsnatmapNatIppool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CentralsnatmapNatIppoolArrayOutput struct{ *pulumi.OutputState }

func (CentralsnatmapNatIppoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapNatIppool)(nil)).Elem()
}

func (o CentralsnatmapNatIppoolArrayOutput) ToCentralsnatmapNatIppoolArrayOutput() CentralsnatmapNatIppoolArrayOutput {
	return o
}

func (o CentralsnatmapNatIppoolArrayOutput) ToCentralsnatmapNatIppoolArrayOutputWithContext(ctx context.Context) CentralsnatmapNatIppoolArrayOutput {
	return o
}

func (o CentralsnatmapNatIppoolArrayOutput) Index(i pulumi.IntInput) CentralsnatmapNatIppoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CentralsnatmapNatIppool {
		return vs[0].([]CentralsnatmapNatIppool)[vs[1].(int)]
	}).(CentralsnatmapNatIppoolOutput)
}

type CentralsnatmapOrigAddr6 struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// CentralsnatmapOrigAddr6Input is an input type that accepts CentralsnatmapOrigAddr6Args and CentralsnatmapOrigAddr6Output values.
// You can construct a concrete instance of `CentralsnatmapOrigAddr6Input` via:
//
//	CentralsnatmapOrigAddr6Args{...}
type CentralsnatmapOrigAddr6Input interface {
	pulumi.Input

	ToCentralsnatmapOrigAddr6Output() CentralsnatmapOrigAddr6Output
	ToCentralsnatmapOrigAddr6OutputWithContext(context.Context) CentralsnatmapOrigAddr6Output
}

type CentralsnatmapOrigAddr6Args struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CentralsnatmapOrigAddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapOrigAddr6)(nil)).Elem()
}

func (i CentralsnatmapOrigAddr6Args) ToCentralsnatmapOrigAddr6Output() CentralsnatmapOrigAddr6Output {
	return i.ToCentralsnatmapOrigAddr6OutputWithContext(context.Background())
}

func (i CentralsnatmapOrigAddr6Args) ToCentralsnatmapOrigAddr6OutputWithContext(ctx context.Context) CentralsnatmapOrigAddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapOrigAddr6Output)
}

// CentralsnatmapOrigAddr6ArrayInput is an input type that accepts CentralsnatmapOrigAddr6Array and CentralsnatmapOrigAddr6ArrayOutput values.
// You can construct a concrete instance of `CentralsnatmapOrigAddr6ArrayInput` via:
//
//	CentralsnatmapOrigAddr6Array{ CentralsnatmapOrigAddr6Args{...} }
type CentralsnatmapOrigAddr6ArrayInput interface {
	pulumi.Input

	ToCentralsnatmapOrigAddr6ArrayOutput() CentralsnatmapOrigAddr6ArrayOutput
	ToCentralsnatmapOrigAddr6ArrayOutputWithContext(context.Context) CentralsnatmapOrigAddr6ArrayOutput
}

type CentralsnatmapOrigAddr6Array []CentralsnatmapOrigAddr6Input

func (CentralsnatmapOrigAddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapOrigAddr6)(nil)).Elem()
}

func (i CentralsnatmapOrigAddr6Array) ToCentralsnatmapOrigAddr6ArrayOutput() CentralsnatmapOrigAddr6ArrayOutput {
	return i.ToCentralsnatmapOrigAddr6ArrayOutputWithContext(context.Background())
}

func (i CentralsnatmapOrigAddr6Array) ToCentralsnatmapOrigAddr6ArrayOutputWithContext(ctx context.Context) CentralsnatmapOrigAddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapOrigAddr6ArrayOutput)
}

type CentralsnatmapOrigAddr6Output struct{ *pulumi.OutputState }

func (CentralsnatmapOrigAddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapOrigAddr6)(nil)).Elem()
}

func (o CentralsnatmapOrigAddr6Output) ToCentralsnatmapOrigAddr6Output() CentralsnatmapOrigAddr6Output {
	return o
}

func (o CentralsnatmapOrigAddr6Output) ToCentralsnatmapOrigAddr6OutputWithContext(ctx context.Context) CentralsnatmapOrigAddr6Output {
	return o
}

// Address name.
func (o CentralsnatmapOrigAddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralsnatmapOrigAddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CentralsnatmapOrigAddr6ArrayOutput struct{ *pulumi.OutputState }

func (CentralsnatmapOrigAddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapOrigAddr6)(nil)).Elem()
}

func (o CentralsnatmapOrigAddr6ArrayOutput) ToCentralsnatmapOrigAddr6ArrayOutput() CentralsnatmapOrigAddr6ArrayOutput {
	return o
}

func (o CentralsnatmapOrigAddr6ArrayOutput) ToCentralsnatmapOrigAddr6ArrayOutputWithContext(ctx context.Context) CentralsnatmapOrigAddr6ArrayOutput {
	return o
}

func (o CentralsnatmapOrigAddr6ArrayOutput) Index(i pulumi.IntInput) CentralsnatmapOrigAddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CentralsnatmapOrigAddr6 {
		return vs[0].([]CentralsnatmapOrigAddr6)[vs[1].(int)]
	}).(CentralsnatmapOrigAddr6Output)
}

type CentralsnatmapOrigAddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// CentralsnatmapOrigAddrInput is an input type that accepts CentralsnatmapOrigAddrArgs and CentralsnatmapOrigAddrOutput values.
// You can construct a concrete instance of `CentralsnatmapOrigAddrInput` via:
//
//	CentralsnatmapOrigAddrArgs{...}
type CentralsnatmapOrigAddrInput interface {
	pulumi.Input

	ToCentralsnatmapOrigAddrOutput() CentralsnatmapOrigAddrOutput
	ToCentralsnatmapOrigAddrOutputWithContext(context.Context) CentralsnatmapOrigAddrOutput
}

type CentralsnatmapOrigAddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CentralsnatmapOrigAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapOrigAddr)(nil)).Elem()
}

func (i CentralsnatmapOrigAddrArgs) ToCentralsnatmapOrigAddrOutput() CentralsnatmapOrigAddrOutput {
	return i.ToCentralsnatmapOrigAddrOutputWithContext(context.Background())
}

func (i CentralsnatmapOrigAddrArgs) ToCentralsnatmapOrigAddrOutputWithContext(ctx context.Context) CentralsnatmapOrigAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapOrigAddrOutput)
}

// CentralsnatmapOrigAddrArrayInput is an input type that accepts CentralsnatmapOrigAddrArray and CentralsnatmapOrigAddrArrayOutput values.
// You can construct a concrete instance of `CentralsnatmapOrigAddrArrayInput` via:
//
//	CentralsnatmapOrigAddrArray{ CentralsnatmapOrigAddrArgs{...} }
type CentralsnatmapOrigAddrArrayInput interface {
	pulumi.Input

	ToCentralsnatmapOrigAddrArrayOutput() CentralsnatmapOrigAddrArrayOutput
	ToCentralsnatmapOrigAddrArrayOutputWithContext(context.Context) CentralsnatmapOrigAddrArrayOutput
}

type CentralsnatmapOrigAddrArray []CentralsnatmapOrigAddrInput

func (CentralsnatmapOrigAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapOrigAddr)(nil)).Elem()
}

func (i CentralsnatmapOrigAddrArray) ToCentralsnatmapOrigAddrArrayOutput() CentralsnatmapOrigAddrArrayOutput {
	return i.ToCentralsnatmapOrigAddrArrayOutputWithContext(context.Background())
}

func (i CentralsnatmapOrigAddrArray) ToCentralsnatmapOrigAddrArrayOutputWithContext(ctx context.Context) CentralsnatmapOrigAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapOrigAddrArrayOutput)
}

type CentralsnatmapOrigAddrOutput struct{ *pulumi.OutputState }

func (CentralsnatmapOrigAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapOrigAddr)(nil)).Elem()
}

func (o CentralsnatmapOrigAddrOutput) ToCentralsnatmapOrigAddrOutput() CentralsnatmapOrigAddrOutput {
	return o
}

func (o CentralsnatmapOrigAddrOutput) ToCentralsnatmapOrigAddrOutputWithContext(ctx context.Context) CentralsnatmapOrigAddrOutput {
	return o
}

// Address name.
func (o CentralsnatmapOrigAddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralsnatmapOrigAddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CentralsnatmapOrigAddrArrayOutput struct{ *pulumi.OutputState }

func (CentralsnatmapOrigAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapOrigAddr)(nil)).Elem()
}

func (o CentralsnatmapOrigAddrArrayOutput) ToCentralsnatmapOrigAddrArrayOutput() CentralsnatmapOrigAddrArrayOutput {
	return o
}

func (o CentralsnatmapOrigAddrArrayOutput) ToCentralsnatmapOrigAddrArrayOutputWithContext(ctx context.Context) CentralsnatmapOrigAddrArrayOutput {
	return o
}

func (o CentralsnatmapOrigAddrArrayOutput) Index(i pulumi.IntInput) CentralsnatmapOrigAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CentralsnatmapOrigAddr {
		return vs[0].([]CentralsnatmapOrigAddr)[vs[1].(int)]
	}).(CentralsnatmapOrigAddrOutput)
}

type CentralsnatmapSortStatePolicyList struct {
	Policyid *string `pulumi:"policyid"`
}

// CentralsnatmapSortStatePolicyListInput is an input type that accepts CentralsnatmapSortStatePolicyListArgs and CentralsnatmapSortStatePolicyListOutput values.
// You can construct a concrete instance of `CentralsnatmapSortStatePolicyListInput` via:
//
//	CentralsnatmapSortStatePolicyListArgs{...}
type CentralsnatmapSortStatePolicyListInput interface {
	pulumi.Input

	ToCentralsnatmapSortStatePolicyListOutput() CentralsnatmapSortStatePolicyListOutput
	ToCentralsnatmapSortStatePolicyListOutputWithContext(context.Context) CentralsnatmapSortStatePolicyListOutput
}

type CentralsnatmapSortStatePolicyListArgs struct {
	Policyid pulumi.StringPtrInput `pulumi:"policyid"`
}

func (CentralsnatmapSortStatePolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapSortStatePolicyList)(nil)).Elem()
}

func (i CentralsnatmapSortStatePolicyListArgs) ToCentralsnatmapSortStatePolicyListOutput() CentralsnatmapSortStatePolicyListOutput {
	return i.ToCentralsnatmapSortStatePolicyListOutputWithContext(context.Background())
}

func (i CentralsnatmapSortStatePolicyListArgs) ToCentralsnatmapSortStatePolicyListOutputWithContext(ctx context.Context) CentralsnatmapSortStatePolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapSortStatePolicyListOutput)
}

// CentralsnatmapSortStatePolicyListArrayInput is an input type that accepts CentralsnatmapSortStatePolicyListArray and CentralsnatmapSortStatePolicyListArrayOutput values.
// You can construct a concrete instance of `CentralsnatmapSortStatePolicyListArrayInput` via:
//
//	CentralsnatmapSortStatePolicyListArray{ CentralsnatmapSortStatePolicyListArgs{...} }
type CentralsnatmapSortStatePolicyListArrayInput interface {
	pulumi.Input

	ToCentralsnatmapSortStatePolicyListArrayOutput() CentralsnatmapSortStatePolicyListArrayOutput
	ToCentralsnatmapSortStatePolicyListArrayOutputWithContext(context.Context) CentralsnatmapSortStatePolicyListArrayOutput
}

type CentralsnatmapSortStatePolicyListArray []CentralsnatmapSortStatePolicyListInput

func (CentralsnatmapSortStatePolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapSortStatePolicyList)(nil)).Elem()
}

func (i CentralsnatmapSortStatePolicyListArray) ToCentralsnatmapSortStatePolicyListArrayOutput() CentralsnatmapSortStatePolicyListArrayOutput {
	return i.ToCentralsnatmapSortStatePolicyListArrayOutputWithContext(context.Background())
}

func (i CentralsnatmapSortStatePolicyListArray) ToCentralsnatmapSortStatePolicyListArrayOutputWithContext(ctx context.Context) CentralsnatmapSortStatePolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapSortStatePolicyListArrayOutput)
}

type CentralsnatmapSortStatePolicyListOutput struct{ *pulumi.OutputState }

func (CentralsnatmapSortStatePolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapSortStatePolicyList)(nil)).Elem()
}

func (o CentralsnatmapSortStatePolicyListOutput) ToCentralsnatmapSortStatePolicyListOutput() CentralsnatmapSortStatePolicyListOutput {
	return o
}

func (o CentralsnatmapSortStatePolicyListOutput) ToCentralsnatmapSortStatePolicyListOutputWithContext(ctx context.Context) CentralsnatmapSortStatePolicyListOutput {
	return o
}

func (o CentralsnatmapSortStatePolicyListOutput) Policyid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralsnatmapSortStatePolicyList) *string { return v.Policyid }).(pulumi.StringPtrOutput)
}

type CentralsnatmapSortStatePolicyListArrayOutput struct{ *pulumi.OutputState }

func (CentralsnatmapSortStatePolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapSortStatePolicyList)(nil)).Elem()
}

func (o CentralsnatmapSortStatePolicyListArrayOutput) ToCentralsnatmapSortStatePolicyListArrayOutput() CentralsnatmapSortStatePolicyListArrayOutput {
	return o
}

func (o CentralsnatmapSortStatePolicyListArrayOutput) ToCentralsnatmapSortStatePolicyListArrayOutputWithContext(ctx context.Context) CentralsnatmapSortStatePolicyListArrayOutput {
	return o
}

func (o CentralsnatmapSortStatePolicyListArrayOutput) Index(i pulumi.IntInput) CentralsnatmapSortStatePolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CentralsnatmapSortStatePolicyList {
		return vs[0].([]CentralsnatmapSortStatePolicyList)[vs[1].(int)]
	}).(CentralsnatmapSortStatePolicyListOutput)
}

type CentralsnatmapSrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// CentralsnatmapSrcintfInput is an input type that accepts CentralsnatmapSrcintfArgs and CentralsnatmapSrcintfOutput values.
// You can construct a concrete instance of `CentralsnatmapSrcintfInput` via:
//
//	CentralsnatmapSrcintfArgs{...}
type CentralsnatmapSrcintfInput interface {
	pulumi.Input

	ToCentralsnatmapSrcintfOutput() CentralsnatmapSrcintfOutput
	ToCentralsnatmapSrcintfOutputWithContext(context.Context) CentralsnatmapSrcintfOutput
}

type CentralsnatmapSrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CentralsnatmapSrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapSrcintf)(nil)).Elem()
}

func (i CentralsnatmapSrcintfArgs) ToCentralsnatmapSrcintfOutput() CentralsnatmapSrcintfOutput {
	return i.ToCentralsnatmapSrcintfOutputWithContext(context.Background())
}

func (i CentralsnatmapSrcintfArgs) ToCentralsnatmapSrcintfOutputWithContext(ctx context.Context) CentralsnatmapSrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapSrcintfOutput)
}

// CentralsnatmapSrcintfArrayInput is an input type that accepts CentralsnatmapSrcintfArray and CentralsnatmapSrcintfArrayOutput values.
// You can construct a concrete instance of `CentralsnatmapSrcintfArrayInput` via:
//
//	CentralsnatmapSrcintfArray{ CentralsnatmapSrcintfArgs{...} }
type CentralsnatmapSrcintfArrayInput interface {
	pulumi.Input

	ToCentralsnatmapSrcintfArrayOutput() CentralsnatmapSrcintfArrayOutput
	ToCentralsnatmapSrcintfArrayOutputWithContext(context.Context) CentralsnatmapSrcintfArrayOutput
}

type CentralsnatmapSrcintfArray []CentralsnatmapSrcintfInput

func (CentralsnatmapSrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapSrcintf)(nil)).Elem()
}

func (i CentralsnatmapSrcintfArray) ToCentralsnatmapSrcintfArrayOutput() CentralsnatmapSrcintfArrayOutput {
	return i.ToCentralsnatmapSrcintfArrayOutputWithContext(context.Background())
}

func (i CentralsnatmapSrcintfArray) ToCentralsnatmapSrcintfArrayOutputWithContext(ctx context.Context) CentralsnatmapSrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapSrcintfArrayOutput)
}

type CentralsnatmapSrcintfOutput struct{ *pulumi.OutputState }

func (CentralsnatmapSrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CentralsnatmapSrcintf)(nil)).Elem()
}

func (o CentralsnatmapSrcintfOutput) ToCentralsnatmapSrcintfOutput() CentralsnatmapSrcintfOutput {
	return o
}

func (o CentralsnatmapSrcintfOutput) ToCentralsnatmapSrcintfOutputWithContext(ctx context.Context) CentralsnatmapSrcintfOutput {
	return o
}

// Interface name.
func (o CentralsnatmapSrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CentralsnatmapSrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CentralsnatmapSrcintfArrayOutput struct{ *pulumi.OutputState }

func (CentralsnatmapSrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CentralsnatmapSrcintf)(nil)).Elem()
}

func (o CentralsnatmapSrcintfArrayOutput) ToCentralsnatmapSrcintfArrayOutput() CentralsnatmapSrcintfArrayOutput {
	return o
}

func (o CentralsnatmapSrcintfArrayOutput) ToCentralsnatmapSrcintfArrayOutputWithContext(ctx context.Context) CentralsnatmapSrcintfArrayOutput {
	return o
}

func (o CentralsnatmapSrcintfArrayOutput) Index(i pulumi.IntInput) CentralsnatmapSrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CentralsnatmapSrcintf {
		return vs[0].([]CentralsnatmapSrcintf)[vs[1].(int)]
	}).(CentralsnatmapSrcintfOutput)
}

type CountryRegion struct {
	// Region ID.
	Id *int `pulumi:"id"`
}

// CountryRegionInput is an input type that accepts CountryRegionArgs and CountryRegionOutput values.
// You can construct a concrete instance of `CountryRegionInput` via:
//
//	CountryRegionArgs{...}
type CountryRegionInput interface {
	pulumi.Input

	ToCountryRegionOutput() CountryRegionOutput
	ToCountryRegionOutputWithContext(context.Context) CountryRegionOutput
}

type CountryRegionArgs struct {
	// Region ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (CountryRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CountryRegion)(nil)).Elem()
}

func (i CountryRegionArgs) ToCountryRegionOutput() CountryRegionOutput {
	return i.ToCountryRegionOutputWithContext(context.Background())
}

func (i CountryRegionArgs) ToCountryRegionOutputWithContext(ctx context.Context) CountryRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CountryRegionOutput)
}

// CountryRegionArrayInput is an input type that accepts CountryRegionArray and CountryRegionArrayOutput values.
// You can construct a concrete instance of `CountryRegionArrayInput` via:
//
//	CountryRegionArray{ CountryRegionArgs{...} }
type CountryRegionArrayInput interface {
	pulumi.Input

	ToCountryRegionArrayOutput() CountryRegionArrayOutput
	ToCountryRegionArrayOutputWithContext(context.Context) CountryRegionArrayOutput
}

type CountryRegionArray []CountryRegionInput

func (CountryRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CountryRegion)(nil)).Elem()
}

func (i CountryRegionArray) ToCountryRegionArrayOutput() CountryRegionArrayOutput {
	return i.ToCountryRegionArrayOutputWithContext(context.Background())
}

func (i CountryRegionArray) ToCountryRegionArrayOutputWithContext(ctx context.Context) CountryRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CountryRegionArrayOutput)
}

type CountryRegionOutput struct{ *pulumi.OutputState }

func (CountryRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CountryRegion)(nil)).Elem()
}

func (o CountryRegionOutput) ToCountryRegionOutput() CountryRegionOutput {
	return o
}

func (o CountryRegionOutput) ToCountryRegionOutputWithContext(ctx context.Context) CountryRegionOutput {
	return o
}

// Region ID.
func (o CountryRegionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CountryRegion) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type CountryRegionArrayOutput struct{ *pulumi.OutputState }

func (CountryRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CountryRegion)(nil)).Elem()
}

func (o CountryRegionArrayOutput) ToCountryRegionArrayOutput() CountryRegionArrayOutput {
	return o
}

func (o CountryRegionArrayOutput) ToCountryRegionArrayOutputWithContext(ctx context.Context) CountryRegionArrayOutput {
	return o
}

func (o CountryRegionArrayOutput) Index(i pulumi.IntInput) CountryRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CountryRegion {
		return vs[0].([]CountryRegion)[vs[1].(int)]
	}).(CountryRegionOutput)
}

type DecryptedtrafficmirrorInterface struct {
	// Decrypted traffic mirror interface.
	Name *string `pulumi:"name"`
}

// DecryptedtrafficmirrorInterfaceInput is an input type that accepts DecryptedtrafficmirrorInterfaceArgs and DecryptedtrafficmirrorInterfaceOutput values.
// You can construct a concrete instance of `DecryptedtrafficmirrorInterfaceInput` via:
//
//	DecryptedtrafficmirrorInterfaceArgs{...}
type DecryptedtrafficmirrorInterfaceInput interface {
	pulumi.Input

	ToDecryptedtrafficmirrorInterfaceOutput() DecryptedtrafficmirrorInterfaceOutput
	ToDecryptedtrafficmirrorInterfaceOutputWithContext(context.Context) DecryptedtrafficmirrorInterfaceOutput
}

type DecryptedtrafficmirrorInterfaceArgs struct {
	// Decrypted traffic mirror interface.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DecryptedtrafficmirrorInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DecryptedtrafficmirrorInterface)(nil)).Elem()
}

func (i DecryptedtrafficmirrorInterfaceArgs) ToDecryptedtrafficmirrorInterfaceOutput() DecryptedtrafficmirrorInterfaceOutput {
	return i.ToDecryptedtrafficmirrorInterfaceOutputWithContext(context.Background())
}

func (i DecryptedtrafficmirrorInterfaceArgs) ToDecryptedtrafficmirrorInterfaceOutputWithContext(ctx context.Context) DecryptedtrafficmirrorInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DecryptedtrafficmirrorInterfaceOutput)
}

// DecryptedtrafficmirrorInterfaceArrayInput is an input type that accepts DecryptedtrafficmirrorInterfaceArray and DecryptedtrafficmirrorInterfaceArrayOutput values.
// You can construct a concrete instance of `DecryptedtrafficmirrorInterfaceArrayInput` via:
//
//	DecryptedtrafficmirrorInterfaceArray{ DecryptedtrafficmirrorInterfaceArgs{...} }
type DecryptedtrafficmirrorInterfaceArrayInput interface {
	pulumi.Input

	ToDecryptedtrafficmirrorInterfaceArrayOutput() DecryptedtrafficmirrorInterfaceArrayOutput
	ToDecryptedtrafficmirrorInterfaceArrayOutputWithContext(context.Context) DecryptedtrafficmirrorInterfaceArrayOutput
}

type DecryptedtrafficmirrorInterfaceArray []DecryptedtrafficmirrorInterfaceInput

func (DecryptedtrafficmirrorInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DecryptedtrafficmirrorInterface)(nil)).Elem()
}

func (i DecryptedtrafficmirrorInterfaceArray) ToDecryptedtrafficmirrorInterfaceArrayOutput() DecryptedtrafficmirrorInterfaceArrayOutput {
	return i.ToDecryptedtrafficmirrorInterfaceArrayOutputWithContext(context.Background())
}

func (i DecryptedtrafficmirrorInterfaceArray) ToDecryptedtrafficmirrorInterfaceArrayOutputWithContext(ctx context.Context) DecryptedtrafficmirrorInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DecryptedtrafficmirrorInterfaceArrayOutput)
}

type DecryptedtrafficmirrorInterfaceOutput struct{ *pulumi.OutputState }

func (DecryptedtrafficmirrorInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DecryptedtrafficmirrorInterface)(nil)).Elem()
}

func (o DecryptedtrafficmirrorInterfaceOutput) ToDecryptedtrafficmirrorInterfaceOutput() DecryptedtrafficmirrorInterfaceOutput {
	return o
}

func (o DecryptedtrafficmirrorInterfaceOutput) ToDecryptedtrafficmirrorInterfaceOutputWithContext(ctx context.Context) DecryptedtrafficmirrorInterfaceOutput {
	return o
}

// Decrypted traffic mirror interface.
func (o DecryptedtrafficmirrorInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DecryptedtrafficmirrorInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DecryptedtrafficmirrorInterfaceArrayOutput struct{ *pulumi.OutputState }

func (DecryptedtrafficmirrorInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DecryptedtrafficmirrorInterface)(nil)).Elem()
}

func (o DecryptedtrafficmirrorInterfaceArrayOutput) ToDecryptedtrafficmirrorInterfaceArrayOutput() DecryptedtrafficmirrorInterfaceArrayOutput {
	return o
}

func (o DecryptedtrafficmirrorInterfaceArrayOutput) ToDecryptedtrafficmirrorInterfaceArrayOutputWithContext(ctx context.Context) DecryptedtrafficmirrorInterfaceArrayOutput {
	return o
}

func (o DecryptedtrafficmirrorInterfaceArrayOutput) Index(i pulumi.IntInput) DecryptedtrafficmirrorInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DecryptedtrafficmirrorInterface {
		return vs[0].([]DecryptedtrafficmirrorInterface)[vs[1].(int)]
	}).(DecryptedtrafficmirrorInterfaceOutput)
}

type DoSpolicy6Anomaly struct {
	// Action taken when the threshold is reached.
	Action *string `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Anomaly name.
	Name *string `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine *string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry *string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog *string `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Anomaly threshold. Number of detected instances that triggers the anomaly action. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
	Threshold *int `pulumi:"threshold"`
	// Number of detected instances which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
	Thresholddefault *int `pulumi:"thresholddefault"`
}

// DoSpolicy6AnomalyInput is an input type that accepts DoSpolicy6AnomalyArgs and DoSpolicy6AnomalyOutput values.
// You can construct a concrete instance of `DoSpolicy6AnomalyInput` via:
//
//	DoSpolicy6AnomalyArgs{...}
type DoSpolicy6AnomalyInput interface {
	pulumi.Input

	ToDoSpolicy6AnomalyOutput() DoSpolicy6AnomalyOutput
	ToDoSpolicy6AnomalyOutputWithContext(context.Context) DoSpolicy6AnomalyOutput
}

type DoSpolicy6AnomalyArgs struct {
	// Action taken when the threshold is reached.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Anomaly name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringPtrInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog pulumi.StringPtrInput `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Anomaly threshold. Number of detected instances that triggers the anomaly action. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Number of detected instances which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
	Thresholddefault pulumi.IntPtrInput `pulumi:"thresholddefault"`
}

func (DoSpolicy6AnomalyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicy6Anomaly)(nil)).Elem()
}

func (i DoSpolicy6AnomalyArgs) ToDoSpolicy6AnomalyOutput() DoSpolicy6AnomalyOutput {
	return i.ToDoSpolicy6AnomalyOutputWithContext(context.Background())
}

func (i DoSpolicy6AnomalyArgs) ToDoSpolicy6AnomalyOutputWithContext(ctx context.Context) DoSpolicy6AnomalyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicy6AnomalyOutput)
}

// DoSpolicy6AnomalyArrayInput is an input type that accepts DoSpolicy6AnomalyArray and DoSpolicy6AnomalyArrayOutput values.
// You can construct a concrete instance of `DoSpolicy6AnomalyArrayInput` via:
//
//	DoSpolicy6AnomalyArray{ DoSpolicy6AnomalyArgs{...} }
type DoSpolicy6AnomalyArrayInput interface {
	pulumi.Input

	ToDoSpolicy6AnomalyArrayOutput() DoSpolicy6AnomalyArrayOutput
	ToDoSpolicy6AnomalyArrayOutputWithContext(context.Context) DoSpolicy6AnomalyArrayOutput
}

type DoSpolicy6AnomalyArray []DoSpolicy6AnomalyInput

func (DoSpolicy6AnomalyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicy6Anomaly)(nil)).Elem()
}

func (i DoSpolicy6AnomalyArray) ToDoSpolicy6AnomalyArrayOutput() DoSpolicy6AnomalyArrayOutput {
	return i.ToDoSpolicy6AnomalyArrayOutputWithContext(context.Background())
}

func (i DoSpolicy6AnomalyArray) ToDoSpolicy6AnomalyArrayOutputWithContext(ctx context.Context) DoSpolicy6AnomalyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicy6AnomalyArrayOutput)
}

type DoSpolicy6AnomalyOutput struct{ *pulumi.OutputState }

func (DoSpolicy6AnomalyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicy6Anomaly)(nil)).Elem()
}

func (o DoSpolicy6AnomalyOutput) ToDoSpolicy6AnomalyOutput() DoSpolicy6AnomalyOutput {
	return o
}

func (o DoSpolicy6AnomalyOutput) ToDoSpolicy6AnomalyOutputWithContext(ctx context.Context) DoSpolicy6AnomalyOutput {
	return o
}

// Action taken when the threshold is reached.
func (o DoSpolicy6AnomalyOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Anomaly) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
func (o DoSpolicy6AnomalyOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Anomaly) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Anomaly name.
func (o DoSpolicy6AnomalyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Anomaly) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Quarantine method. Valid values: `none`, `attacker`.
func (o DoSpolicy6AnomalyOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Anomaly) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o DoSpolicy6AnomalyOutput) QuarantineExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Anomaly) *string { return v.QuarantineExpiry }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
func (o DoSpolicy6AnomalyOutput) QuarantineLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Anomaly) *string { return v.QuarantineLog }).(pulumi.StringPtrOutput)
}

// Enable/disable this anomaly. Valid values: `disable`, `enable`.
func (o DoSpolicy6AnomalyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Anomaly) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Anomaly threshold. Number of detected instances that triggers the anomaly action. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
func (o DoSpolicy6AnomalyOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Anomaly) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Number of detected instances which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
func (o DoSpolicy6AnomalyOutput) Thresholddefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Anomaly) *int { return v.Thresholddefault }).(pulumi.IntPtrOutput)
}

type DoSpolicy6AnomalyArrayOutput struct{ *pulumi.OutputState }

func (DoSpolicy6AnomalyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicy6Anomaly)(nil)).Elem()
}

func (o DoSpolicy6AnomalyArrayOutput) ToDoSpolicy6AnomalyArrayOutput() DoSpolicy6AnomalyArrayOutput {
	return o
}

func (o DoSpolicy6AnomalyArrayOutput) ToDoSpolicy6AnomalyArrayOutputWithContext(ctx context.Context) DoSpolicy6AnomalyArrayOutput {
	return o
}

func (o DoSpolicy6AnomalyArrayOutput) Index(i pulumi.IntInput) DoSpolicy6AnomalyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DoSpolicy6Anomaly {
		return vs[0].([]DoSpolicy6Anomaly)[vs[1].(int)]
	}).(DoSpolicy6AnomalyOutput)
}

type DoSpolicy6Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// DoSpolicy6DstaddrInput is an input type that accepts DoSpolicy6DstaddrArgs and DoSpolicy6DstaddrOutput values.
// You can construct a concrete instance of `DoSpolicy6DstaddrInput` via:
//
//	DoSpolicy6DstaddrArgs{...}
type DoSpolicy6DstaddrInput interface {
	pulumi.Input

	ToDoSpolicy6DstaddrOutput() DoSpolicy6DstaddrOutput
	ToDoSpolicy6DstaddrOutputWithContext(context.Context) DoSpolicy6DstaddrOutput
}

type DoSpolicy6DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DoSpolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicy6Dstaddr)(nil)).Elem()
}

func (i DoSpolicy6DstaddrArgs) ToDoSpolicy6DstaddrOutput() DoSpolicy6DstaddrOutput {
	return i.ToDoSpolicy6DstaddrOutputWithContext(context.Background())
}

func (i DoSpolicy6DstaddrArgs) ToDoSpolicy6DstaddrOutputWithContext(ctx context.Context) DoSpolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicy6DstaddrOutput)
}

// DoSpolicy6DstaddrArrayInput is an input type that accepts DoSpolicy6DstaddrArray and DoSpolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `DoSpolicy6DstaddrArrayInput` via:
//
//	DoSpolicy6DstaddrArray{ DoSpolicy6DstaddrArgs{...} }
type DoSpolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToDoSpolicy6DstaddrArrayOutput() DoSpolicy6DstaddrArrayOutput
	ToDoSpolicy6DstaddrArrayOutputWithContext(context.Context) DoSpolicy6DstaddrArrayOutput
}

type DoSpolicy6DstaddrArray []DoSpolicy6DstaddrInput

func (DoSpolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicy6Dstaddr)(nil)).Elem()
}

func (i DoSpolicy6DstaddrArray) ToDoSpolicy6DstaddrArrayOutput() DoSpolicy6DstaddrArrayOutput {
	return i.ToDoSpolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i DoSpolicy6DstaddrArray) ToDoSpolicy6DstaddrArrayOutputWithContext(ctx context.Context) DoSpolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicy6DstaddrArrayOutput)
}

type DoSpolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (DoSpolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicy6Dstaddr)(nil)).Elem()
}

func (o DoSpolicy6DstaddrOutput) ToDoSpolicy6DstaddrOutput() DoSpolicy6DstaddrOutput {
	return o
}

func (o DoSpolicy6DstaddrOutput) ToDoSpolicy6DstaddrOutputWithContext(ctx context.Context) DoSpolicy6DstaddrOutput {
	return o
}

// Address name.
func (o DoSpolicy6DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DoSpolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (DoSpolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicy6Dstaddr)(nil)).Elem()
}

func (o DoSpolicy6DstaddrArrayOutput) ToDoSpolicy6DstaddrArrayOutput() DoSpolicy6DstaddrArrayOutput {
	return o
}

func (o DoSpolicy6DstaddrArrayOutput) ToDoSpolicy6DstaddrArrayOutputWithContext(ctx context.Context) DoSpolicy6DstaddrArrayOutput {
	return o
}

func (o DoSpolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) DoSpolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DoSpolicy6Dstaddr {
		return vs[0].([]DoSpolicy6Dstaddr)[vs[1].(int)]
	}).(DoSpolicy6DstaddrOutput)
}

type DoSpolicy6Service struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// DoSpolicy6ServiceInput is an input type that accepts DoSpolicy6ServiceArgs and DoSpolicy6ServiceOutput values.
// You can construct a concrete instance of `DoSpolicy6ServiceInput` via:
//
//	DoSpolicy6ServiceArgs{...}
type DoSpolicy6ServiceInput interface {
	pulumi.Input

	ToDoSpolicy6ServiceOutput() DoSpolicy6ServiceOutput
	ToDoSpolicy6ServiceOutputWithContext(context.Context) DoSpolicy6ServiceOutput
}

type DoSpolicy6ServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DoSpolicy6ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicy6Service)(nil)).Elem()
}

func (i DoSpolicy6ServiceArgs) ToDoSpolicy6ServiceOutput() DoSpolicy6ServiceOutput {
	return i.ToDoSpolicy6ServiceOutputWithContext(context.Background())
}

func (i DoSpolicy6ServiceArgs) ToDoSpolicy6ServiceOutputWithContext(ctx context.Context) DoSpolicy6ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicy6ServiceOutput)
}

// DoSpolicy6ServiceArrayInput is an input type that accepts DoSpolicy6ServiceArray and DoSpolicy6ServiceArrayOutput values.
// You can construct a concrete instance of `DoSpolicy6ServiceArrayInput` via:
//
//	DoSpolicy6ServiceArray{ DoSpolicy6ServiceArgs{...} }
type DoSpolicy6ServiceArrayInput interface {
	pulumi.Input

	ToDoSpolicy6ServiceArrayOutput() DoSpolicy6ServiceArrayOutput
	ToDoSpolicy6ServiceArrayOutputWithContext(context.Context) DoSpolicy6ServiceArrayOutput
}

type DoSpolicy6ServiceArray []DoSpolicy6ServiceInput

func (DoSpolicy6ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicy6Service)(nil)).Elem()
}

func (i DoSpolicy6ServiceArray) ToDoSpolicy6ServiceArrayOutput() DoSpolicy6ServiceArrayOutput {
	return i.ToDoSpolicy6ServiceArrayOutputWithContext(context.Background())
}

func (i DoSpolicy6ServiceArray) ToDoSpolicy6ServiceArrayOutputWithContext(ctx context.Context) DoSpolicy6ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicy6ServiceArrayOutput)
}

type DoSpolicy6ServiceOutput struct{ *pulumi.OutputState }

func (DoSpolicy6ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicy6Service)(nil)).Elem()
}

func (o DoSpolicy6ServiceOutput) ToDoSpolicy6ServiceOutput() DoSpolicy6ServiceOutput {
	return o
}

func (o DoSpolicy6ServiceOutput) ToDoSpolicy6ServiceOutputWithContext(ctx context.Context) DoSpolicy6ServiceOutput {
	return o
}

// Service name.
func (o DoSpolicy6ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Service) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DoSpolicy6ServiceArrayOutput struct{ *pulumi.OutputState }

func (DoSpolicy6ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicy6Service)(nil)).Elem()
}

func (o DoSpolicy6ServiceArrayOutput) ToDoSpolicy6ServiceArrayOutput() DoSpolicy6ServiceArrayOutput {
	return o
}

func (o DoSpolicy6ServiceArrayOutput) ToDoSpolicy6ServiceArrayOutputWithContext(ctx context.Context) DoSpolicy6ServiceArrayOutput {
	return o
}

func (o DoSpolicy6ServiceArrayOutput) Index(i pulumi.IntInput) DoSpolicy6ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DoSpolicy6Service {
		return vs[0].([]DoSpolicy6Service)[vs[1].(int)]
	}).(DoSpolicy6ServiceOutput)
}

type DoSpolicy6Srcaddr struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// DoSpolicy6SrcaddrInput is an input type that accepts DoSpolicy6SrcaddrArgs and DoSpolicy6SrcaddrOutput values.
// You can construct a concrete instance of `DoSpolicy6SrcaddrInput` via:
//
//	DoSpolicy6SrcaddrArgs{...}
type DoSpolicy6SrcaddrInput interface {
	pulumi.Input

	ToDoSpolicy6SrcaddrOutput() DoSpolicy6SrcaddrOutput
	ToDoSpolicy6SrcaddrOutputWithContext(context.Context) DoSpolicy6SrcaddrOutput
}

type DoSpolicy6SrcaddrArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DoSpolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicy6Srcaddr)(nil)).Elem()
}

func (i DoSpolicy6SrcaddrArgs) ToDoSpolicy6SrcaddrOutput() DoSpolicy6SrcaddrOutput {
	return i.ToDoSpolicy6SrcaddrOutputWithContext(context.Background())
}

func (i DoSpolicy6SrcaddrArgs) ToDoSpolicy6SrcaddrOutputWithContext(ctx context.Context) DoSpolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicy6SrcaddrOutput)
}

// DoSpolicy6SrcaddrArrayInput is an input type that accepts DoSpolicy6SrcaddrArray and DoSpolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `DoSpolicy6SrcaddrArrayInput` via:
//
//	DoSpolicy6SrcaddrArray{ DoSpolicy6SrcaddrArgs{...} }
type DoSpolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToDoSpolicy6SrcaddrArrayOutput() DoSpolicy6SrcaddrArrayOutput
	ToDoSpolicy6SrcaddrArrayOutputWithContext(context.Context) DoSpolicy6SrcaddrArrayOutput
}

type DoSpolicy6SrcaddrArray []DoSpolicy6SrcaddrInput

func (DoSpolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicy6Srcaddr)(nil)).Elem()
}

func (i DoSpolicy6SrcaddrArray) ToDoSpolicy6SrcaddrArrayOutput() DoSpolicy6SrcaddrArrayOutput {
	return i.ToDoSpolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i DoSpolicy6SrcaddrArray) ToDoSpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) DoSpolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicy6SrcaddrArrayOutput)
}

type DoSpolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (DoSpolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicy6Srcaddr)(nil)).Elem()
}

func (o DoSpolicy6SrcaddrOutput) ToDoSpolicy6SrcaddrOutput() DoSpolicy6SrcaddrOutput {
	return o
}

func (o DoSpolicy6SrcaddrOutput) ToDoSpolicy6SrcaddrOutputWithContext(ctx context.Context) DoSpolicy6SrcaddrOutput {
	return o
}

// Service name.
func (o DoSpolicy6SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicy6Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DoSpolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (DoSpolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicy6Srcaddr)(nil)).Elem()
}

func (o DoSpolicy6SrcaddrArrayOutput) ToDoSpolicy6SrcaddrArrayOutput() DoSpolicy6SrcaddrArrayOutput {
	return o
}

func (o DoSpolicy6SrcaddrArrayOutput) ToDoSpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) DoSpolicy6SrcaddrArrayOutput {
	return o
}

func (o DoSpolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) DoSpolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DoSpolicy6Srcaddr {
		return vs[0].([]DoSpolicy6Srcaddr)[vs[1].(int)]
	}).(DoSpolicy6SrcaddrOutput)
}

type DoSpolicyAnomaly struct {
	// Action taken when the threshold is reached.
	Action *string `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Anomaly name.
	Name *string `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine *string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry *string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog *string `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Anomaly threshold. Number of detected instances that triggers the anomaly action. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
	Threshold *int `pulumi:"threshold"`
	// Number of detected instances which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
	Thresholddefault *int `pulumi:"thresholddefault"`
}

// DoSpolicyAnomalyInput is an input type that accepts DoSpolicyAnomalyArgs and DoSpolicyAnomalyOutput values.
// You can construct a concrete instance of `DoSpolicyAnomalyInput` via:
//
//	DoSpolicyAnomalyArgs{...}
type DoSpolicyAnomalyInput interface {
	pulumi.Input

	ToDoSpolicyAnomalyOutput() DoSpolicyAnomalyOutput
	ToDoSpolicyAnomalyOutputWithContext(context.Context) DoSpolicyAnomalyOutput
}

type DoSpolicyAnomalyArgs struct {
	// Action taken when the threshold is reached.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Anomaly name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringPtrInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog pulumi.StringPtrInput `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Anomaly threshold. Number of detected instances that triggers the anomaly action. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Number of detected instances which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
	Thresholddefault pulumi.IntPtrInput `pulumi:"thresholddefault"`
}

func (DoSpolicyAnomalyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicyAnomaly)(nil)).Elem()
}

func (i DoSpolicyAnomalyArgs) ToDoSpolicyAnomalyOutput() DoSpolicyAnomalyOutput {
	return i.ToDoSpolicyAnomalyOutputWithContext(context.Background())
}

func (i DoSpolicyAnomalyArgs) ToDoSpolicyAnomalyOutputWithContext(ctx context.Context) DoSpolicyAnomalyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicyAnomalyOutput)
}

// DoSpolicyAnomalyArrayInput is an input type that accepts DoSpolicyAnomalyArray and DoSpolicyAnomalyArrayOutput values.
// You can construct a concrete instance of `DoSpolicyAnomalyArrayInput` via:
//
//	DoSpolicyAnomalyArray{ DoSpolicyAnomalyArgs{...} }
type DoSpolicyAnomalyArrayInput interface {
	pulumi.Input

	ToDoSpolicyAnomalyArrayOutput() DoSpolicyAnomalyArrayOutput
	ToDoSpolicyAnomalyArrayOutputWithContext(context.Context) DoSpolicyAnomalyArrayOutput
}

type DoSpolicyAnomalyArray []DoSpolicyAnomalyInput

func (DoSpolicyAnomalyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicyAnomaly)(nil)).Elem()
}

func (i DoSpolicyAnomalyArray) ToDoSpolicyAnomalyArrayOutput() DoSpolicyAnomalyArrayOutput {
	return i.ToDoSpolicyAnomalyArrayOutputWithContext(context.Background())
}

func (i DoSpolicyAnomalyArray) ToDoSpolicyAnomalyArrayOutputWithContext(ctx context.Context) DoSpolicyAnomalyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicyAnomalyArrayOutput)
}

type DoSpolicyAnomalyOutput struct{ *pulumi.OutputState }

func (DoSpolicyAnomalyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicyAnomaly)(nil)).Elem()
}

func (o DoSpolicyAnomalyOutput) ToDoSpolicyAnomalyOutput() DoSpolicyAnomalyOutput {
	return o
}

func (o DoSpolicyAnomalyOutput) ToDoSpolicyAnomalyOutputWithContext(ctx context.Context) DoSpolicyAnomalyOutput {
	return o
}

// Action taken when the threshold is reached.
func (o DoSpolicyAnomalyOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicyAnomaly) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
func (o DoSpolicyAnomalyOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicyAnomaly) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Anomaly name.
func (o DoSpolicyAnomalyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicyAnomaly) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Quarantine method. Valid values: `none`, `attacker`.
func (o DoSpolicyAnomalyOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicyAnomaly) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o DoSpolicyAnomalyOutput) QuarantineExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicyAnomaly) *string { return v.QuarantineExpiry }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
func (o DoSpolicyAnomalyOutput) QuarantineLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicyAnomaly) *string { return v.QuarantineLog }).(pulumi.StringPtrOutput)
}

// Enable/disable this anomaly. Valid values: `disable`, `enable`.
func (o DoSpolicyAnomalyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicyAnomaly) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Anomaly threshold. Number of detected instances that triggers the anomaly action. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
func (o DoSpolicyAnomalyOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DoSpolicyAnomaly) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Number of detected instances which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
func (o DoSpolicyAnomalyOutput) Thresholddefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DoSpolicyAnomaly) *int { return v.Thresholddefault }).(pulumi.IntPtrOutput)
}

type DoSpolicyAnomalyArrayOutput struct{ *pulumi.OutputState }

func (DoSpolicyAnomalyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicyAnomaly)(nil)).Elem()
}

func (o DoSpolicyAnomalyArrayOutput) ToDoSpolicyAnomalyArrayOutput() DoSpolicyAnomalyArrayOutput {
	return o
}

func (o DoSpolicyAnomalyArrayOutput) ToDoSpolicyAnomalyArrayOutputWithContext(ctx context.Context) DoSpolicyAnomalyArrayOutput {
	return o
}

func (o DoSpolicyAnomalyArrayOutput) Index(i pulumi.IntInput) DoSpolicyAnomalyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DoSpolicyAnomaly {
		return vs[0].([]DoSpolicyAnomaly)[vs[1].(int)]
	}).(DoSpolicyAnomalyOutput)
}

type DoSpolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// DoSpolicyDstaddrInput is an input type that accepts DoSpolicyDstaddrArgs and DoSpolicyDstaddrOutput values.
// You can construct a concrete instance of `DoSpolicyDstaddrInput` via:
//
//	DoSpolicyDstaddrArgs{...}
type DoSpolicyDstaddrInput interface {
	pulumi.Input

	ToDoSpolicyDstaddrOutput() DoSpolicyDstaddrOutput
	ToDoSpolicyDstaddrOutputWithContext(context.Context) DoSpolicyDstaddrOutput
}

type DoSpolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DoSpolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicyDstaddr)(nil)).Elem()
}

func (i DoSpolicyDstaddrArgs) ToDoSpolicyDstaddrOutput() DoSpolicyDstaddrOutput {
	return i.ToDoSpolicyDstaddrOutputWithContext(context.Background())
}

func (i DoSpolicyDstaddrArgs) ToDoSpolicyDstaddrOutputWithContext(ctx context.Context) DoSpolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicyDstaddrOutput)
}

// DoSpolicyDstaddrArrayInput is an input type that accepts DoSpolicyDstaddrArray and DoSpolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `DoSpolicyDstaddrArrayInput` via:
//
//	DoSpolicyDstaddrArray{ DoSpolicyDstaddrArgs{...} }
type DoSpolicyDstaddrArrayInput interface {
	pulumi.Input

	ToDoSpolicyDstaddrArrayOutput() DoSpolicyDstaddrArrayOutput
	ToDoSpolicyDstaddrArrayOutputWithContext(context.Context) DoSpolicyDstaddrArrayOutput
}

type DoSpolicyDstaddrArray []DoSpolicyDstaddrInput

func (DoSpolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicyDstaddr)(nil)).Elem()
}

func (i DoSpolicyDstaddrArray) ToDoSpolicyDstaddrArrayOutput() DoSpolicyDstaddrArrayOutput {
	return i.ToDoSpolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i DoSpolicyDstaddrArray) ToDoSpolicyDstaddrArrayOutputWithContext(ctx context.Context) DoSpolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicyDstaddrArrayOutput)
}

type DoSpolicyDstaddrOutput struct{ *pulumi.OutputState }

func (DoSpolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicyDstaddr)(nil)).Elem()
}

func (o DoSpolicyDstaddrOutput) ToDoSpolicyDstaddrOutput() DoSpolicyDstaddrOutput {
	return o
}

func (o DoSpolicyDstaddrOutput) ToDoSpolicyDstaddrOutputWithContext(ctx context.Context) DoSpolicyDstaddrOutput {
	return o
}

// Address name.
func (o DoSpolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DoSpolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (DoSpolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicyDstaddr)(nil)).Elem()
}

func (o DoSpolicyDstaddrArrayOutput) ToDoSpolicyDstaddrArrayOutput() DoSpolicyDstaddrArrayOutput {
	return o
}

func (o DoSpolicyDstaddrArrayOutput) ToDoSpolicyDstaddrArrayOutputWithContext(ctx context.Context) DoSpolicyDstaddrArrayOutput {
	return o
}

func (o DoSpolicyDstaddrArrayOutput) Index(i pulumi.IntInput) DoSpolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DoSpolicyDstaddr {
		return vs[0].([]DoSpolicyDstaddr)[vs[1].(int)]
	}).(DoSpolicyDstaddrOutput)
}

type DoSpolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// DoSpolicyServiceInput is an input type that accepts DoSpolicyServiceArgs and DoSpolicyServiceOutput values.
// You can construct a concrete instance of `DoSpolicyServiceInput` via:
//
//	DoSpolicyServiceArgs{...}
type DoSpolicyServiceInput interface {
	pulumi.Input

	ToDoSpolicyServiceOutput() DoSpolicyServiceOutput
	ToDoSpolicyServiceOutputWithContext(context.Context) DoSpolicyServiceOutput
}

type DoSpolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DoSpolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicyService)(nil)).Elem()
}

func (i DoSpolicyServiceArgs) ToDoSpolicyServiceOutput() DoSpolicyServiceOutput {
	return i.ToDoSpolicyServiceOutputWithContext(context.Background())
}

func (i DoSpolicyServiceArgs) ToDoSpolicyServiceOutputWithContext(ctx context.Context) DoSpolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicyServiceOutput)
}

// DoSpolicyServiceArrayInput is an input type that accepts DoSpolicyServiceArray and DoSpolicyServiceArrayOutput values.
// You can construct a concrete instance of `DoSpolicyServiceArrayInput` via:
//
//	DoSpolicyServiceArray{ DoSpolicyServiceArgs{...} }
type DoSpolicyServiceArrayInput interface {
	pulumi.Input

	ToDoSpolicyServiceArrayOutput() DoSpolicyServiceArrayOutput
	ToDoSpolicyServiceArrayOutputWithContext(context.Context) DoSpolicyServiceArrayOutput
}

type DoSpolicyServiceArray []DoSpolicyServiceInput

func (DoSpolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicyService)(nil)).Elem()
}

func (i DoSpolicyServiceArray) ToDoSpolicyServiceArrayOutput() DoSpolicyServiceArrayOutput {
	return i.ToDoSpolicyServiceArrayOutputWithContext(context.Background())
}

func (i DoSpolicyServiceArray) ToDoSpolicyServiceArrayOutputWithContext(ctx context.Context) DoSpolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicyServiceArrayOutput)
}

type DoSpolicyServiceOutput struct{ *pulumi.OutputState }

func (DoSpolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicyService)(nil)).Elem()
}

func (o DoSpolicyServiceOutput) ToDoSpolicyServiceOutput() DoSpolicyServiceOutput {
	return o
}

func (o DoSpolicyServiceOutput) ToDoSpolicyServiceOutputWithContext(ctx context.Context) DoSpolicyServiceOutput {
	return o
}

// Service name.
func (o DoSpolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DoSpolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (DoSpolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicyService)(nil)).Elem()
}

func (o DoSpolicyServiceArrayOutput) ToDoSpolicyServiceArrayOutput() DoSpolicyServiceArrayOutput {
	return o
}

func (o DoSpolicyServiceArrayOutput) ToDoSpolicyServiceArrayOutputWithContext(ctx context.Context) DoSpolicyServiceArrayOutput {
	return o
}

func (o DoSpolicyServiceArrayOutput) Index(i pulumi.IntInput) DoSpolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DoSpolicyService {
		return vs[0].([]DoSpolicyService)[vs[1].(int)]
	}).(DoSpolicyServiceOutput)
}

type DoSpolicySrcaddr struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// DoSpolicySrcaddrInput is an input type that accepts DoSpolicySrcaddrArgs and DoSpolicySrcaddrOutput values.
// You can construct a concrete instance of `DoSpolicySrcaddrInput` via:
//
//	DoSpolicySrcaddrArgs{...}
type DoSpolicySrcaddrInput interface {
	pulumi.Input

	ToDoSpolicySrcaddrOutput() DoSpolicySrcaddrOutput
	ToDoSpolicySrcaddrOutputWithContext(context.Context) DoSpolicySrcaddrOutput
}

type DoSpolicySrcaddrArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DoSpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicySrcaddr)(nil)).Elem()
}

func (i DoSpolicySrcaddrArgs) ToDoSpolicySrcaddrOutput() DoSpolicySrcaddrOutput {
	return i.ToDoSpolicySrcaddrOutputWithContext(context.Background())
}

func (i DoSpolicySrcaddrArgs) ToDoSpolicySrcaddrOutputWithContext(ctx context.Context) DoSpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicySrcaddrOutput)
}

// DoSpolicySrcaddrArrayInput is an input type that accepts DoSpolicySrcaddrArray and DoSpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `DoSpolicySrcaddrArrayInput` via:
//
//	DoSpolicySrcaddrArray{ DoSpolicySrcaddrArgs{...} }
type DoSpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToDoSpolicySrcaddrArrayOutput() DoSpolicySrcaddrArrayOutput
	ToDoSpolicySrcaddrArrayOutputWithContext(context.Context) DoSpolicySrcaddrArrayOutput
}

type DoSpolicySrcaddrArray []DoSpolicySrcaddrInput

func (DoSpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicySrcaddr)(nil)).Elem()
}

func (i DoSpolicySrcaddrArray) ToDoSpolicySrcaddrArrayOutput() DoSpolicySrcaddrArrayOutput {
	return i.ToDoSpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i DoSpolicySrcaddrArray) ToDoSpolicySrcaddrArrayOutputWithContext(ctx context.Context) DoSpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoSpolicySrcaddrArrayOutput)
}

type DoSpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (DoSpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DoSpolicySrcaddr)(nil)).Elem()
}

func (o DoSpolicySrcaddrOutput) ToDoSpolicySrcaddrOutput() DoSpolicySrcaddrOutput {
	return o
}

func (o DoSpolicySrcaddrOutput) ToDoSpolicySrcaddrOutputWithContext(ctx context.Context) DoSpolicySrcaddrOutput {
	return o
}

// Service name.
func (o DoSpolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DoSpolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DoSpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (DoSpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DoSpolicySrcaddr)(nil)).Elem()
}

func (o DoSpolicySrcaddrArrayOutput) ToDoSpolicySrcaddrArrayOutput() DoSpolicySrcaddrArrayOutput {
	return o
}

func (o DoSpolicySrcaddrArrayOutput) ToDoSpolicySrcaddrArrayOutputWithContext(ctx context.Context) DoSpolicySrcaddrArrayOutput {
	return o
}

func (o DoSpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) DoSpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DoSpolicySrcaddr {
		return vs[0].([]DoSpolicySrcaddr)[vs[1].(int)]
	}).(DoSpolicySrcaddrOutput)
}

type IdentitybasedrouteRule struct {
	// Outgoing interface for the rule.
	Device *string `pulumi:"device"`
	// IPv4 address of the gateway (Format: xxx.xxx.xxx.xxx , Default: 0.0.0.0).
	Gateway *string `pulumi:"gateway"`
	// Select one or more group(s) from available groups that are allowed to use this route. Separate group names with a space. The structure of `groups` block is documented below.
	Groups []IdentitybasedrouteRuleGroup `pulumi:"groups"`
	// Rule ID.
	Id *int `pulumi:"id"`
}

// IdentitybasedrouteRuleInput is an input type that accepts IdentitybasedrouteRuleArgs and IdentitybasedrouteRuleOutput values.
// You can construct a concrete instance of `IdentitybasedrouteRuleInput` via:
//
//	IdentitybasedrouteRuleArgs{...}
type IdentitybasedrouteRuleInput interface {
	pulumi.Input

	ToIdentitybasedrouteRuleOutput() IdentitybasedrouteRuleOutput
	ToIdentitybasedrouteRuleOutputWithContext(context.Context) IdentitybasedrouteRuleOutput
}

type IdentitybasedrouteRuleArgs struct {
	// Outgoing interface for the rule.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// IPv4 address of the gateway (Format: xxx.xxx.xxx.xxx , Default: 0.0.0.0).
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// Select one or more group(s) from available groups that are allowed to use this route. Separate group names with a space. The structure of `groups` block is documented below.
	Groups IdentitybasedrouteRuleGroupArrayInput `pulumi:"groups"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (IdentitybasedrouteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitybasedrouteRule)(nil)).Elem()
}

func (i IdentitybasedrouteRuleArgs) ToIdentitybasedrouteRuleOutput() IdentitybasedrouteRuleOutput {
	return i.ToIdentitybasedrouteRuleOutputWithContext(context.Background())
}

func (i IdentitybasedrouteRuleArgs) ToIdentitybasedrouteRuleOutputWithContext(ctx context.Context) IdentitybasedrouteRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitybasedrouteRuleOutput)
}

// IdentitybasedrouteRuleArrayInput is an input type that accepts IdentitybasedrouteRuleArray and IdentitybasedrouteRuleArrayOutput values.
// You can construct a concrete instance of `IdentitybasedrouteRuleArrayInput` via:
//
//	IdentitybasedrouteRuleArray{ IdentitybasedrouteRuleArgs{...} }
type IdentitybasedrouteRuleArrayInput interface {
	pulumi.Input

	ToIdentitybasedrouteRuleArrayOutput() IdentitybasedrouteRuleArrayOutput
	ToIdentitybasedrouteRuleArrayOutputWithContext(context.Context) IdentitybasedrouteRuleArrayOutput
}

type IdentitybasedrouteRuleArray []IdentitybasedrouteRuleInput

func (IdentitybasedrouteRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitybasedrouteRule)(nil)).Elem()
}

func (i IdentitybasedrouteRuleArray) ToIdentitybasedrouteRuleArrayOutput() IdentitybasedrouteRuleArrayOutput {
	return i.ToIdentitybasedrouteRuleArrayOutputWithContext(context.Background())
}

func (i IdentitybasedrouteRuleArray) ToIdentitybasedrouteRuleArrayOutputWithContext(ctx context.Context) IdentitybasedrouteRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitybasedrouteRuleArrayOutput)
}

type IdentitybasedrouteRuleOutput struct{ *pulumi.OutputState }

func (IdentitybasedrouteRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitybasedrouteRule)(nil)).Elem()
}

func (o IdentitybasedrouteRuleOutput) ToIdentitybasedrouteRuleOutput() IdentitybasedrouteRuleOutput {
	return o
}

func (o IdentitybasedrouteRuleOutput) ToIdentitybasedrouteRuleOutputWithContext(ctx context.Context) IdentitybasedrouteRuleOutput {
	return o
}

// Outgoing interface for the rule.
func (o IdentitybasedrouteRuleOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitybasedrouteRule) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// IPv4 address of the gateway (Format: xxx.xxx.xxx.xxx , Default: 0.0.0.0).
func (o IdentitybasedrouteRuleOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitybasedrouteRule) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// Select one or more group(s) from available groups that are allowed to use this route. Separate group names with a space. The structure of `groups` block is documented below.
func (o IdentitybasedrouteRuleOutput) Groups() IdentitybasedrouteRuleGroupArrayOutput {
	return o.ApplyT(func(v IdentitybasedrouteRule) []IdentitybasedrouteRuleGroup { return v.Groups }).(IdentitybasedrouteRuleGroupArrayOutput)
}

// Rule ID.
func (o IdentitybasedrouteRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IdentitybasedrouteRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type IdentitybasedrouteRuleArrayOutput struct{ *pulumi.OutputState }

func (IdentitybasedrouteRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitybasedrouteRule)(nil)).Elem()
}

func (o IdentitybasedrouteRuleArrayOutput) ToIdentitybasedrouteRuleArrayOutput() IdentitybasedrouteRuleArrayOutput {
	return o
}

func (o IdentitybasedrouteRuleArrayOutput) ToIdentitybasedrouteRuleArrayOutputWithContext(ctx context.Context) IdentitybasedrouteRuleArrayOutput {
	return o
}

func (o IdentitybasedrouteRuleArrayOutput) Index(i pulumi.IntInput) IdentitybasedrouteRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitybasedrouteRule {
		return vs[0].([]IdentitybasedrouteRule)[vs[1].(int)]
	}).(IdentitybasedrouteRuleOutput)
}

type IdentitybasedrouteRuleGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// IdentitybasedrouteRuleGroupInput is an input type that accepts IdentitybasedrouteRuleGroupArgs and IdentitybasedrouteRuleGroupOutput values.
// You can construct a concrete instance of `IdentitybasedrouteRuleGroupInput` via:
//
//	IdentitybasedrouteRuleGroupArgs{...}
type IdentitybasedrouteRuleGroupInput interface {
	pulumi.Input

	ToIdentitybasedrouteRuleGroupOutput() IdentitybasedrouteRuleGroupOutput
	ToIdentitybasedrouteRuleGroupOutputWithContext(context.Context) IdentitybasedrouteRuleGroupOutput
}

type IdentitybasedrouteRuleGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IdentitybasedrouteRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitybasedrouteRuleGroup)(nil)).Elem()
}

func (i IdentitybasedrouteRuleGroupArgs) ToIdentitybasedrouteRuleGroupOutput() IdentitybasedrouteRuleGroupOutput {
	return i.ToIdentitybasedrouteRuleGroupOutputWithContext(context.Background())
}

func (i IdentitybasedrouteRuleGroupArgs) ToIdentitybasedrouteRuleGroupOutputWithContext(ctx context.Context) IdentitybasedrouteRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitybasedrouteRuleGroupOutput)
}

// IdentitybasedrouteRuleGroupArrayInput is an input type that accepts IdentitybasedrouteRuleGroupArray and IdentitybasedrouteRuleGroupArrayOutput values.
// You can construct a concrete instance of `IdentitybasedrouteRuleGroupArrayInput` via:
//
//	IdentitybasedrouteRuleGroupArray{ IdentitybasedrouteRuleGroupArgs{...} }
type IdentitybasedrouteRuleGroupArrayInput interface {
	pulumi.Input

	ToIdentitybasedrouteRuleGroupArrayOutput() IdentitybasedrouteRuleGroupArrayOutput
	ToIdentitybasedrouteRuleGroupArrayOutputWithContext(context.Context) IdentitybasedrouteRuleGroupArrayOutput
}

type IdentitybasedrouteRuleGroupArray []IdentitybasedrouteRuleGroupInput

func (IdentitybasedrouteRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitybasedrouteRuleGroup)(nil)).Elem()
}

func (i IdentitybasedrouteRuleGroupArray) ToIdentitybasedrouteRuleGroupArrayOutput() IdentitybasedrouteRuleGroupArrayOutput {
	return i.ToIdentitybasedrouteRuleGroupArrayOutputWithContext(context.Background())
}

func (i IdentitybasedrouteRuleGroupArray) ToIdentitybasedrouteRuleGroupArrayOutputWithContext(ctx context.Context) IdentitybasedrouteRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitybasedrouteRuleGroupArrayOutput)
}

type IdentitybasedrouteRuleGroupOutput struct{ *pulumi.OutputState }

func (IdentitybasedrouteRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitybasedrouteRuleGroup)(nil)).Elem()
}

func (o IdentitybasedrouteRuleGroupOutput) ToIdentitybasedrouteRuleGroupOutput() IdentitybasedrouteRuleGroupOutput {
	return o
}

func (o IdentitybasedrouteRuleGroupOutput) ToIdentitybasedrouteRuleGroupOutputWithContext(ctx context.Context) IdentitybasedrouteRuleGroupOutput {
	return o
}

// Group name.
func (o IdentitybasedrouteRuleGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitybasedrouteRuleGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IdentitybasedrouteRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (IdentitybasedrouteRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitybasedrouteRuleGroup)(nil)).Elem()
}

func (o IdentitybasedrouteRuleGroupArrayOutput) ToIdentitybasedrouteRuleGroupArrayOutput() IdentitybasedrouteRuleGroupArrayOutput {
	return o
}

func (o IdentitybasedrouteRuleGroupArrayOutput) ToIdentitybasedrouteRuleGroupArrayOutputWithContext(ctx context.Context) IdentitybasedrouteRuleGroupArrayOutput {
	return o
}

func (o IdentitybasedrouteRuleGroupArrayOutput) Index(i pulumi.IntInput) IdentitybasedrouteRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitybasedrouteRuleGroup {
		return vs[0].([]IdentitybasedrouteRuleGroup)[vs[1].(int)]
	}).(IdentitybasedrouteRuleGroupOutput)
}

type Interfacepolicy6Dstaddr6 struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Interfacepolicy6Dstaddr6Input is an input type that accepts Interfacepolicy6Dstaddr6Args and Interfacepolicy6Dstaddr6Output values.
// You can construct a concrete instance of `Interfacepolicy6Dstaddr6Input` via:
//
//	Interfacepolicy6Dstaddr6Args{...}
type Interfacepolicy6Dstaddr6Input interface {
	pulumi.Input

	ToInterfacepolicy6Dstaddr6Output() Interfacepolicy6Dstaddr6Output
	ToInterfacepolicy6Dstaddr6OutputWithContext(context.Context) Interfacepolicy6Dstaddr6Output
}

type Interfacepolicy6Dstaddr6Args struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Interfacepolicy6Dstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*Interfacepolicy6Dstaddr6)(nil)).Elem()
}

func (i Interfacepolicy6Dstaddr6Args) ToInterfacepolicy6Dstaddr6Output() Interfacepolicy6Dstaddr6Output {
	return i.ToInterfacepolicy6Dstaddr6OutputWithContext(context.Background())
}

func (i Interfacepolicy6Dstaddr6Args) ToInterfacepolicy6Dstaddr6OutputWithContext(ctx context.Context) Interfacepolicy6Dstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(Interfacepolicy6Dstaddr6Output)
}

// Interfacepolicy6Dstaddr6ArrayInput is an input type that accepts Interfacepolicy6Dstaddr6Array and Interfacepolicy6Dstaddr6ArrayOutput values.
// You can construct a concrete instance of `Interfacepolicy6Dstaddr6ArrayInput` via:
//
//	Interfacepolicy6Dstaddr6Array{ Interfacepolicy6Dstaddr6Args{...} }
type Interfacepolicy6Dstaddr6ArrayInput interface {
	pulumi.Input

	ToInterfacepolicy6Dstaddr6ArrayOutput() Interfacepolicy6Dstaddr6ArrayOutput
	ToInterfacepolicy6Dstaddr6ArrayOutputWithContext(context.Context) Interfacepolicy6Dstaddr6ArrayOutput
}

type Interfacepolicy6Dstaddr6Array []Interfacepolicy6Dstaddr6Input

func (Interfacepolicy6Dstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Interfacepolicy6Dstaddr6)(nil)).Elem()
}

func (i Interfacepolicy6Dstaddr6Array) ToInterfacepolicy6Dstaddr6ArrayOutput() Interfacepolicy6Dstaddr6ArrayOutput {
	return i.ToInterfacepolicy6Dstaddr6ArrayOutputWithContext(context.Background())
}

func (i Interfacepolicy6Dstaddr6Array) ToInterfacepolicy6Dstaddr6ArrayOutputWithContext(ctx context.Context) Interfacepolicy6Dstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Interfacepolicy6Dstaddr6ArrayOutput)
}

type Interfacepolicy6Dstaddr6Output struct{ *pulumi.OutputState }

func (Interfacepolicy6Dstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*Interfacepolicy6Dstaddr6)(nil)).Elem()
}

func (o Interfacepolicy6Dstaddr6Output) ToInterfacepolicy6Dstaddr6Output() Interfacepolicy6Dstaddr6Output {
	return o
}

func (o Interfacepolicy6Dstaddr6Output) ToInterfacepolicy6Dstaddr6OutputWithContext(ctx context.Context) Interfacepolicy6Dstaddr6Output {
	return o
}

// Address name.
func (o Interfacepolicy6Dstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Interfacepolicy6Dstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Interfacepolicy6Dstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (Interfacepolicy6Dstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Interfacepolicy6Dstaddr6)(nil)).Elem()
}

func (o Interfacepolicy6Dstaddr6ArrayOutput) ToInterfacepolicy6Dstaddr6ArrayOutput() Interfacepolicy6Dstaddr6ArrayOutput {
	return o
}

func (o Interfacepolicy6Dstaddr6ArrayOutput) ToInterfacepolicy6Dstaddr6ArrayOutputWithContext(ctx context.Context) Interfacepolicy6Dstaddr6ArrayOutput {
	return o
}

func (o Interfacepolicy6Dstaddr6ArrayOutput) Index(i pulumi.IntInput) Interfacepolicy6Dstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Interfacepolicy6Dstaddr6 {
		return vs[0].([]Interfacepolicy6Dstaddr6)[vs[1].(int)]
	}).(Interfacepolicy6Dstaddr6Output)
}

type Interfacepolicy6Service6 struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Interfacepolicy6Service6Input is an input type that accepts Interfacepolicy6Service6Args and Interfacepolicy6Service6Output values.
// You can construct a concrete instance of `Interfacepolicy6Service6Input` via:
//
//	Interfacepolicy6Service6Args{...}
type Interfacepolicy6Service6Input interface {
	pulumi.Input

	ToInterfacepolicy6Service6Output() Interfacepolicy6Service6Output
	ToInterfacepolicy6Service6OutputWithContext(context.Context) Interfacepolicy6Service6Output
}

type Interfacepolicy6Service6Args struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Interfacepolicy6Service6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*Interfacepolicy6Service6)(nil)).Elem()
}

func (i Interfacepolicy6Service6Args) ToInterfacepolicy6Service6Output() Interfacepolicy6Service6Output {
	return i.ToInterfacepolicy6Service6OutputWithContext(context.Background())
}

func (i Interfacepolicy6Service6Args) ToInterfacepolicy6Service6OutputWithContext(ctx context.Context) Interfacepolicy6Service6Output {
	return pulumi.ToOutputWithContext(ctx, i).(Interfacepolicy6Service6Output)
}

// Interfacepolicy6Service6ArrayInput is an input type that accepts Interfacepolicy6Service6Array and Interfacepolicy6Service6ArrayOutput values.
// You can construct a concrete instance of `Interfacepolicy6Service6ArrayInput` via:
//
//	Interfacepolicy6Service6Array{ Interfacepolicy6Service6Args{...} }
type Interfacepolicy6Service6ArrayInput interface {
	pulumi.Input

	ToInterfacepolicy6Service6ArrayOutput() Interfacepolicy6Service6ArrayOutput
	ToInterfacepolicy6Service6ArrayOutputWithContext(context.Context) Interfacepolicy6Service6ArrayOutput
}

type Interfacepolicy6Service6Array []Interfacepolicy6Service6Input

func (Interfacepolicy6Service6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Interfacepolicy6Service6)(nil)).Elem()
}

func (i Interfacepolicy6Service6Array) ToInterfacepolicy6Service6ArrayOutput() Interfacepolicy6Service6ArrayOutput {
	return i.ToInterfacepolicy6Service6ArrayOutputWithContext(context.Background())
}

func (i Interfacepolicy6Service6Array) ToInterfacepolicy6Service6ArrayOutputWithContext(ctx context.Context) Interfacepolicy6Service6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Interfacepolicy6Service6ArrayOutput)
}

type Interfacepolicy6Service6Output struct{ *pulumi.OutputState }

func (Interfacepolicy6Service6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*Interfacepolicy6Service6)(nil)).Elem()
}

func (o Interfacepolicy6Service6Output) ToInterfacepolicy6Service6Output() Interfacepolicy6Service6Output {
	return o
}

func (o Interfacepolicy6Service6Output) ToInterfacepolicy6Service6OutputWithContext(ctx context.Context) Interfacepolicy6Service6Output {
	return o
}

// Address name.
func (o Interfacepolicy6Service6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Interfacepolicy6Service6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Interfacepolicy6Service6ArrayOutput struct{ *pulumi.OutputState }

func (Interfacepolicy6Service6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Interfacepolicy6Service6)(nil)).Elem()
}

func (o Interfacepolicy6Service6ArrayOutput) ToInterfacepolicy6Service6ArrayOutput() Interfacepolicy6Service6ArrayOutput {
	return o
}

func (o Interfacepolicy6Service6ArrayOutput) ToInterfacepolicy6Service6ArrayOutputWithContext(ctx context.Context) Interfacepolicy6Service6ArrayOutput {
	return o
}

func (o Interfacepolicy6Service6ArrayOutput) Index(i pulumi.IntInput) Interfacepolicy6Service6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Interfacepolicy6Service6 {
		return vs[0].([]Interfacepolicy6Service6)[vs[1].(int)]
	}).(Interfacepolicy6Service6Output)
}

type Interfacepolicy6Srcaddr6 struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Interfacepolicy6Srcaddr6Input is an input type that accepts Interfacepolicy6Srcaddr6Args and Interfacepolicy6Srcaddr6Output values.
// You can construct a concrete instance of `Interfacepolicy6Srcaddr6Input` via:
//
//	Interfacepolicy6Srcaddr6Args{...}
type Interfacepolicy6Srcaddr6Input interface {
	pulumi.Input

	ToInterfacepolicy6Srcaddr6Output() Interfacepolicy6Srcaddr6Output
	ToInterfacepolicy6Srcaddr6OutputWithContext(context.Context) Interfacepolicy6Srcaddr6Output
}

type Interfacepolicy6Srcaddr6Args struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Interfacepolicy6Srcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*Interfacepolicy6Srcaddr6)(nil)).Elem()
}

func (i Interfacepolicy6Srcaddr6Args) ToInterfacepolicy6Srcaddr6Output() Interfacepolicy6Srcaddr6Output {
	return i.ToInterfacepolicy6Srcaddr6OutputWithContext(context.Background())
}

func (i Interfacepolicy6Srcaddr6Args) ToInterfacepolicy6Srcaddr6OutputWithContext(ctx context.Context) Interfacepolicy6Srcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(Interfacepolicy6Srcaddr6Output)
}

// Interfacepolicy6Srcaddr6ArrayInput is an input type that accepts Interfacepolicy6Srcaddr6Array and Interfacepolicy6Srcaddr6ArrayOutput values.
// You can construct a concrete instance of `Interfacepolicy6Srcaddr6ArrayInput` via:
//
//	Interfacepolicy6Srcaddr6Array{ Interfacepolicy6Srcaddr6Args{...} }
type Interfacepolicy6Srcaddr6ArrayInput interface {
	pulumi.Input

	ToInterfacepolicy6Srcaddr6ArrayOutput() Interfacepolicy6Srcaddr6ArrayOutput
	ToInterfacepolicy6Srcaddr6ArrayOutputWithContext(context.Context) Interfacepolicy6Srcaddr6ArrayOutput
}

type Interfacepolicy6Srcaddr6Array []Interfacepolicy6Srcaddr6Input

func (Interfacepolicy6Srcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Interfacepolicy6Srcaddr6)(nil)).Elem()
}

func (i Interfacepolicy6Srcaddr6Array) ToInterfacepolicy6Srcaddr6ArrayOutput() Interfacepolicy6Srcaddr6ArrayOutput {
	return i.ToInterfacepolicy6Srcaddr6ArrayOutputWithContext(context.Background())
}

func (i Interfacepolicy6Srcaddr6Array) ToInterfacepolicy6Srcaddr6ArrayOutputWithContext(ctx context.Context) Interfacepolicy6Srcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Interfacepolicy6Srcaddr6ArrayOutput)
}

type Interfacepolicy6Srcaddr6Output struct{ *pulumi.OutputState }

func (Interfacepolicy6Srcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*Interfacepolicy6Srcaddr6)(nil)).Elem()
}

func (o Interfacepolicy6Srcaddr6Output) ToInterfacepolicy6Srcaddr6Output() Interfacepolicy6Srcaddr6Output {
	return o
}

func (o Interfacepolicy6Srcaddr6Output) ToInterfacepolicy6Srcaddr6OutputWithContext(ctx context.Context) Interfacepolicy6Srcaddr6Output {
	return o
}

// Address name.
func (o Interfacepolicy6Srcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Interfacepolicy6Srcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Interfacepolicy6Srcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (Interfacepolicy6Srcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Interfacepolicy6Srcaddr6)(nil)).Elem()
}

func (o Interfacepolicy6Srcaddr6ArrayOutput) ToInterfacepolicy6Srcaddr6ArrayOutput() Interfacepolicy6Srcaddr6ArrayOutput {
	return o
}

func (o Interfacepolicy6Srcaddr6ArrayOutput) ToInterfacepolicy6Srcaddr6ArrayOutputWithContext(ctx context.Context) Interfacepolicy6Srcaddr6ArrayOutput {
	return o
}

func (o Interfacepolicy6Srcaddr6ArrayOutput) Index(i pulumi.IntInput) Interfacepolicy6Srcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Interfacepolicy6Srcaddr6 {
		return vs[0].([]Interfacepolicy6Srcaddr6)[vs[1].(int)]
	}).(Interfacepolicy6Srcaddr6Output)
}

type InterfacepolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// InterfacepolicyDstaddrInput is an input type that accepts InterfacepolicyDstaddrArgs and InterfacepolicyDstaddrOutput values.
// You can construct a concrete instance of `InterfacepolicyDstaddrInput` via:
//
//	InterfacepolicyDstaddrArgs{...}
type InterfacepolicyDstaddrInput interface {
	pulumi.Input

	ToInterfacepolicyDstaddrOutput() InterfacepolicyDstaddrOutput
	ToInterfacepolicyDstaddrOutputWithContext(context.Context) InterfacepolicyDstaddrOutput
}

type InterfacepolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InterfacepolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfacepolicyDstaddr)(nil)).Elem()
}

func (i InterfacepolicyDstaddrArgs) ToInterfacepolicyDstaddrOutput() InterfacepolicyDstaddrOutput {
	return i.ToInterfacepolicyDstaddrOutputWithContext(context.Background())
}

func (i InterfacepolicyDstaddrArgs) ToInterfacepolicyDstaddrOutputWithContext(ctx context.Context) InterfacepolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfacepolicyDstaddrOutput)
}

// InterfacepolicyDstaddrArrayInput is an input type that accepts InterfacepolicyDstaddrArray and InterfacepolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `InterfacepolicyDstaddrArrayInput` via:
//
//	InterfacepolicyDstaddrArray{ InterfacepolicyDstaddrArgs{...} }
type InterfacepolicyDstaddrArrayInput interface {
	pulumi.Input

	ToInterfacepolicyDstaddrArrayOutput() InterfacepolicyDstaddrArrayOutput
	ToInterfacepolicyDstaddrArrayOutputWithContext(context.Context) InterfacepolicyDstaddrArrayOutput
}

type InterfacepolicyDstaddrArray []InterfacepolicyDstaddrInput

func (InterfacepolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfacepolicyDstaddr)(nil)).Elem()
}

func (i InterfacepolicyDstaddrArray) ToInterfacepolicyDstaddrArrayOutput() InterfacepolicyDstaddrArrayOutput {
	return i.ToInterfacepolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i InterfacepolicyDstaddrArray) ToInterfacepolicyDstaddrArrayOutputWithContext(ctx context.Context) InterfacepolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfacepolicyDstaddrArrayOutput)
}

type InterfacepolicyDstaddrOutput struct{ *pulumi.OutputState }

func (InterfacepolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfacepolicyDstaddr)(nil)).Elem()
}

func (o InterfacepolicyDstaddrOutput) ToInterfacepolicyDstaddrOutput() InterfacepolicyDstaddrOutput {
	return o
}

func (o InterfacepolicyDstaddrOutput) ToInterfacepolicyDstaddrOutputWithContext(ctx context.Context) InterfacepolicyDstaddrOutput {
	return o
}

// Address name.
func (o InterfacepolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfacepolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InterfacepolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (InterfacepolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfacepolicyDstaddr)(nil)).Elem()
}

func (o InterfacepolicyDstaddrArrayOutput) ToInterfacepolicyDstaddrArrayOutput() InterfacepolicyDstaddrArrayOutput {
	return o
}

func (o InterfacepolicyDstaddrArrayOutput) ToInterfacepolicyDstaddrArrayOutputWithContext(ctx context.Context) InterfacepolicyDstaddrArrayOutput {
	return o
}

func (o InterfacepolicyDstaddrArrayOutput) Index(i pulumi.IntInput) InterfacepolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfacepolicyDstaddr {
		return vs[0].([]InterfacepolicyDstaddr)[vs[1].(int)]
	}).(InterfacepolicyDstaddrOutput)
}

type InterfacepolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// InterfacepolicyServiceInput is an input type that accepts InterfacepolicyServiceArgs and InterfacepolicyServiceOutput values.
// You can construct a concrete instance of `InterfacepolicyServiceInput` via:
//
//	InterfacepolicyServiceArgs{...}
type InterfacepolicyServiceInput interface {
	pulumi.Input

	ToInterfacepolicyServiceOutput() InterfacepolicyServiceOutput
	ToInterfacepolicyServiceOutputWithContext(context.Context) InterfacepolicyServiceOutput
}

type InterfacepolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InterfacepolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfacepolicyService)(nil)).Elem()
}

func (i InterfacepolicyServiceArgs) ToInterfacepolicyServiceOutput() InterfacepolicyServiceOutput {
	return i.ToInterfacepolicyServiceOutputWithContext(context.Background())
}

func (i InterfacepolicyServiceArgs) ToInterfacepolicyServiceOutputWithContext(ctx context.Context) InterfacepolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfacepolicyServiceOutput)
}

// InterfacepolicyServiceArrayInput is an input type that accepts InterfacepolicyServiceArray and InterfacepolicyServiceArrayOutput values.
// You can construct a concrete instance of `InterfacepolicyServiceArrayInput` via:
//
//	InterfacepolicyServiceArray{ InterfacepolicyServiceArgs{...} }
type InterfacepolicyServiceArrayInput interface {
	pulumi.Input

	ToInterfacepolicyServiceArrayOutput() InterfacepolicyServiceArrayOutput
	ToInterfacepolicyServiceArrayOutputWithContext(context.Context) InterfacepolicyServiceArrayOutput
}

type InterfacepolicyServiceArray []InterfacepolicyServiceInput

func (InterfacepolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfacepolicyService)(nil)).Elem()
}

func (i InterfacepolicyServiceArray) ToInterfacepolicyServiceArrayOutput() InterfacepolicyServiceArrayOutput {
	return i.ToInterfacepolicyServiceArrayOutputWithContext(context.Background())
}

func (i InterfacepolicyServiceArray) ToInterfacepolicyServiceArrayOutputWithContext(ctx context.Context) InterfacepolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfacepolicyServiceArrayOutput)
}

type InterfacepolicyServiceOutput struct{ *pulumi.OutputState }

func (InterfacepolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfacepolicyService)(nil)).Elem()
}

func (o InterfacepolicyServiceOutput) ToInterfacepolicyServiceOutput() InterfacepolicyServiceOutput {
	return o
}

func (o InterfacepolicyServiceOutput) ToInterfacepolicyServiceOutputWithContext(ctx context.Context) InterfacepolicyServiceOutput {
	return o
}

// Service name.
func (o InterfacepolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfacepolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InterfacepolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (InterfacepolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfacepolicyService)(nil)).Elem()
}

func (o InterfacepolicyServiceArrayOutput) ToInterfacepolicyServiceArrayOutput() InterfacepolicyServiceArrayOutput {
	return o
}

func (o InterfacepolicyServiceArrayOutput) ToInterfacepolicyServiceArrayOutputWithContext(ctx context.Context) InterfacepolicyServiceArrayOutput {
	return o
}

func (o InterfacepolicyServiceArrayOutput) Index(i pulumi.IntInput) InterfacepolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfacepolicyService {
		return vs[0].([]InterfacepolicyService)[vs[1].(int)]
	}).(InterfacepolicyServiceOutput)
}

type InterfacepolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// InterfacepolicySrcaddrInput is an input type that accepts InterfacepolicySrcaddrArgs and InterfacepolicySrcaddrOutput values.
// You can construct a concrete instance of `InterfacepolicySrcaddrInput` via:
//
//	InterfacepolicySrcaddrArgs{...}
type InterfacepolicySrcaddrInput interface {
	pulumi.Input

	ToInterfacepolicySrcaddrOutput() InterfacepolicySrcaddrOutput
	ToInterfacepolicySrcaddrOutputWithContext(context.Context) InterfacepolicySrcaddrOutput
}

type InterfacepolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InterfacepolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfacepolicySrcaddr)(nil)).Elem()
}

func (i InterfacepolicySrcaddrArgs) ToInterfacepolicySrcaddrOutput() InterfacepolicySrcaddrOutput {
	return i.ToInterfacepolicySrcaddrOutputWithContext(context.Background())
}

func (i InterfacepolicySrcaddrArgs) ToInterfacepolicySrcaddrOutputWithContext(ctx context.Context) InterfacepolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfacepolicySrcaddrOutput)
}

// InterfacepolicySrcaddrArrayInput is an input type that accepts InterfacepolicySrcaddrArray and InterfacepolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `InterfacepolicySrcaddrArrayInput` via:
//
//	InterfacepolicySrcaddrArray{ InterfacepolicySrcaddrArgs{...} }
type InterfacepolicySrcaddrArrayInput interface {
	pulumi.Input

	ToInterfacepolicySrcaddrArrayOutput() InterfacepolicySrcaddrArrayOutput
	ToInterfacepolicySrcaddrArrayOutputWithContext(context.Context) InterfacepolicySrcaddrArrayOutput
}

type InterfacepolicySrcaddrArray []InterfacepolicySrcaddrInput

func (InterfacepolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfacepolicySrcaddr)(nil)).Elem()
}

func (i InterfacepolicySrcaddrArray) ToInterfacepolicySrcaddrArrayOutput() InterfacepolicySrcaddrArrayOutput {
	return i.ToInterfacepolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i InterfacepolicySrcaddrArray) ToInterfacepolicySrcaddrArrayOutputWithContext(ctx context.Context) InterfacepolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfacepolicySrcaddrArrayOutput)
}

type InterfacepolicySrcaddrOutput struct{ *pulumi.OutputState }

func (InterfacepolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfacepolicySrcaddr)(nil)).Elem()
}

func (o InterfacepolicySrcaddrOutput) ToInterfacepolicySrcaddrOutput() InterfacepolicySrcaddrOutput {
	return o
}

func (o InterfacepolicySrcaddrOutput) ToInterfacepolicySrcaddrOutputWithContext(ctx context.Context) InterfacepolicySrcaddrOutput {
	return o
}

// Address name.
func (o InterfacepolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfacepolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InterfacepolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (InterfacepolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfacepolicySrcaddr)(nil)).Elem()
}

func (o InterfacepolicySrcaddrArrayOutput) ToInterfacepolicySrcaddrArrayOutput() InterfacepolicySrcaddrArrayOutput {
	return o
}

func (o InterfacepolicySrcaddrArrayOutput) ToInterfacepolicySrcaddrArrayOutputWithContext(ctx context.Context) InterfacepolicySrcaddrArrayOutput {
	return o
}

func (o InterfacepolicySrcaddrArrayOutput) Index(i pulumi.IntInput) InterfacepolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfacepolicySrcaddr {
		return vs[0].([]InterfacepolicySrcaddr)[vs[1].(int)]
	}).(InterfacepolicySrcaddrOutput)
}

type InternetserviceadditionEntry struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Entry ID(1-255).
	Id *int `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges []InternetserviceadditionEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol *int `pulumi:"protocol"`
}

// InternetserviceadditionEntryInput is an input type that accepts InternetserviceadditionEntryArgs and InternetserviceadditionEntryOutput values.
// You can construct a concrete instance of `InternetserviceadditionEntryInput` via:
//
//	InternetserviceadditionEntryArgs{...}
type InternetserviceadditionEntryInput interface {
	pulumi.Input

	ToInternetserviceadditionEntryOutput() InternetserviceadditionEntryOutput
	ToInternetserviceadditionEntryOutputWithContext(context.Context) InternetserviceadditionEntryOutput
}

type InternetserviceadditionEntryArgs struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Entry ID(1-255).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges InternetserviceadditionEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
}

func (InternetserviceadditionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceadditionEntry)(nil)).Elem()
}

func (i InternetserviceadditionEntryArgs) ToInternetserviceadditionEntryOutput() InternetserviceadditionEntryOutput {
	return i.ToInternetserviceadditionEntryOutputWithContext(context.Background())
}

func (i InternetserviceadditionEntryArgs) ToInternetserviceadditionEntryOutputWithContext(ctx context.Context) InternetserviceadditionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceadditionEntryOutput)
}

// InternetserviceadditionEntryArrayInput is an input type that accepts InternetserviceadditionEntryArray and InternetserviceadditionEntryArrayOutput values.
// You can construct a concrete instance of `InternetserviceadditionEntryArrayInput` via:
//
//	InternetserviceadditionEntryArray{ InternetserviceadditionEntryArgs{...} }
type InternetserviceadditionEntryArrayInput interface {
	pulumi.Input

	ToInternetserviceadditionEntryArrayOutput() InternetserviceadditionEntryArrayOutput
	ToInternetserviceadditionEntryArrayOutputWithContext(context.Context) InternetserviceadditionEntryArrayOutput
}

type InternetserviceadditionEntryArray []InternetserviceadditionEntryInput

func (InternetserviceadditionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceadditionEntry)(nil)).Elem()
}

func (i InternetserviceadditionEntryArray) ToInternetserviceadditionEntryArrayOutput() InternetserviceadditionEntryArrayOutput {
	return i.ToInternetserviceadditionEntryArrayOutputWithContext(context.Background())
}

func (i InternetserviceadditionEntryArray) ToInternetserviceadditionEntryArrayOutputWithContext(ctx context.Context) InternetserviceadditionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceadditionEntryArrayOutput)
}

type InternetserviceadditionEntryOutput struct{ *pulumi.OutputState }

func (InternetserviceadditionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceadditionEntry)(nil)).Elem()
}

func (o InternetserviceadditionEntryOutput) ToInternetserviceadditionEntryOutput() InternetserviceadditionEntryOutput {
	return o
}

func (o InternetserviceadditionEntryOutput) ToInternetserviceadditionEntryOutputWithContext(ctx context.Context) InternetserviceadditionEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
func (o InternetserviceadditionEntryOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetserviceadditionEntry) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Entry ID(1-255).
func (o InternetserviceadditionEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceadditionEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Port ranges in the custom entry. The structure of `portRange` block is documented below.
func (o InternetserviceadditionEntryOutput) PortRanges() InternetserviceadditionEntryPortRangeArrayOutput {
	return o.ApplyT(func(v InternetserviceadditionEntry) []InternetserviceadditionEntryPortRange { return v.PortRanges }).(InternetserviceadditionEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o InternetserviceadditionEntryOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceadditionEntry) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

type InternetserviceadditionEntryArrayOutput struct{ *pulumi.OutputState }

func (InternetserviceadditionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceadditionEntry)(nil)).Elem()
}

func (o InternetserviceadditionEntryArrayOutput) ToInternetserviceadditionEntryArrayOutput() InternetserviceadditionEntryArrayOutput {
	return o
}

func (o InternetserviceadditionEntryArrayOutput) ToInternetserviceadditionEntryArrayOutputWithContext(ctx context.Context) InternetserviceadditionEntryArrayOutput {
	return o
}

func (o InternetserviceadditionEntryArrayOutput) Index(i pulumi.IntInput) InternetserviceadditionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetserviceadditionEntry {
		return vs[0].([]InternetserviceadditionEntry)[vs[1].(int)]
	}).(InternetserviceadditionEntryOutput)
}

type InternetserviceadditionEntryPortRange struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort *int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id *int `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort *int `pulumi:"startPort"`
}

// InternetserviceadditionEntryPortRangeInput is an input type that accepts InternetserviceadditionEntryPortRangeArgs and InternetserviceadditionEntryPortRangeOutput values.
// You can construct a concrete instance of `InternetserviceadditionEntryPortRangeInput` via:
//
//	InternetserviceadditionEntryPortRangeArgs{...}
type InternetserviceadditionEntryPortRangeInput interface {
	pulumi.Input

	ToInternetserviceadditionEntryPortRangeOutput() InternetserviceadditionEntryPortRangeOutput
	ToInternetserviceadditionEntryPortRangeOutputWithContext(context.Context) InternetserviceadditionEntryPortRangeOutput
}

type InternetserviceadditionEntryPortRangeArgs struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (InternetserviceadditionEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceadditionEntryPortRange)(nil)).Elem()
}

func (i InternetserviceadditionEntryPortRangeArgs) ToInternetserviceadditionEntryPortRangeOutput() InternetserviceadditionEntryPortRangeOutput {
	return i.ToInternetserviceadditionEntryPortRangeOutputWithContext(context.Background())
}

func (i InternetserviceadditionEntryPortRangeArgs) ToInternetserviceadditionEntryPortRangeOutputWithContext(ctx context.Context) InternetserviceadditionEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceadditionEntryPortRangeOutput)
}

// InternetserviceadditionEntryPortRangeArrayInput is an input type that accepts InternetserviceadditionEntryPortRangeArray and InternetserviceadditionEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `InternetserviceadditionEntryPortRangeArrayInput` via:
//
//	InternetserviceadditionEntryPortRangeArray{ InternetserviceadditionEntryPortRangeArgs{...} }
type InternetserviceadditionEntryPortRangeArrayInput interface {
	pulumi.Input

	ToInternetserviceadditionEntryPortRangeArrayOutput() InternetserviceadditionEntryPortRangeArrayOutput
	ToInternetserviceadditionEntryPortRangeArrayOutputWithContext(context.Context) InternetserviceadditionEntryPortRangeArrayOutput
}

type InternetserviceadditionEntryPortRangeArray []InternetserviceadditionEntryPortRangeInput

func (InternetserviceadditionEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceadditionEntryPortRange)(nil)).Elem()
}

func (i InternetserviceadditionEntryPortRangeArray) ToInternetserviceadditionEntryPortRangeArrayOutput() InternetserviceadditionEntryPortRangeArrayOutput {
	return i.ToInternetserviceadditionEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i InternetserviceadditionEntryPortRangeArray) ToInternetserviceadditionEntryPortRangeArrayOutputWithContext(ctx context.Context) InternetserviceadditionEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceadditionEntryPortRangeArrayOutput)
}

type InternetserviceadditionEntryPortRangeOutput struct{ *pulumi.OutputState }

func (InternetserviceadditionEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceadditionEntryPortRange)(nil)).Elem()
}

func (o InternetserviceadditionEntryPortRangeOutput) ToInternetserviceadditionEntryPortRangeOutput() InternetserviceadditionEntryPortRangeOutput {
	return o
}

func (o InternetserviceadditionEntryPortRangeOutput) ToInternetserviceadditionEntryPortRangeOutputWithContext(ctx context.Context) InternetserviceadditionEntryPortRangeOutput {
	return o
}

// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
func (o InternetserviceadditionEntryPortRangeOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceadditionEntryPortRange) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Custom entry port range ID.
func (o InternetserviceadditionEntryPortRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceadditionEntryPortRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
func (o InternetserviceadditionEntryPortRangeOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceadditionEntryPortRange) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type InternetserviceadditionEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (InternetserviceadditionEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceadditionEntryPortRange)(nil)).Elem()
}

func (o InternetserviceadditionEntryPortRangeArrayOutput) ToInternetserviceadditionEntryPortRangeArrayOutput() InternetserviceadditionEntryPortRangeArrayOutput {
	return o
}

func (o InternetserviceadditionEntryPortRangeArrayOutput) ToInternetserviceadditionEntryPortRangeArrayOutputWithContext(ctx context.Context) InternetserviceadditionEntryPortRangeArrayOutput {
	return o
}

func (o InternetserviceadditionEntryPortRangeArrayOutput) Index(i pulumi.IntInput) InternetserviceadditionEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetserviceadditionEntryPortRange {
		return vs[0].([]InternetserviceadditionEntryPortRange)[vs[1].(int)]
	}).(InternetserviceadditionEntryPortRangeOutput)
}

type InternetservicecustomEntry struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s []InternetservicecustomEntryDst6 `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts []InternetservicecustomEntryDst `pulumi:"dsts"`
	// Entry ID(1-255).
	Id *int `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges []InternetservicecustomEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol *int `pulumi:"protocol"`
}

// InternetservicecustomEntryInput is an input type that accepts InternetservicecustomEntryArgs and InternetservicecustomEntryOutput values.
// You can construct a concrete instance of `InternetservicecustomEntryInput` via:
//
//	InternetservicecustomEntryArgs{...}
type InternetservicecustomEntryInput interface {
	pulumi.Input

	ToInternetservicecustomEntryOutput() InternetservicecustomEntryOutput
	ToInternetservicecustomEntryOutputWithContext(context.Context) InternetservicecustomEntryOutput
}

type InternetservicecustomEntryArgs struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s InternetservicecustomEntryDst6ArrayInput `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts InternetservicecustomEntryDstArrayInput `pulumi:"dsts"`
	// Entry ID(1-255).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges InternetservicecustomEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
}

func (InternetservicecustomEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicecustomEntry)(nil)).Elem()
}

func (i InternetservicecustomEntryArgs) ToInternetservicecustomEntryOutput() InternetservicecustomEntryOutput {
	return i.ToInternetservicecustomEntryOutputWithContext(context.Background())
}

func (i InternetservicecustomEntryArgs) ToInternetservicecustomEntryOutputWithContext(ctx context.Context) InternetservicecustomEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicecustomEntryOutput)
}

// InternetservicecustomEntryArrayInput is an input type that accepts InternetservicecustomEntryArray and InternetservicecustomEntryArrayOutput values.
// You can construct a concrete instance of `InternetservicecustomEntryArrayInput` via:
//
//	InternetservicecustomEntryArray{ InternetservicecustomEntryArgs{...} }
type InternetservicecustomEntryArrayInput interface {
	pulumi.Input

	ToInternetservicecustomEntryArrayOutput() InternetservicecustomEntryArrayOutput
	ToInternetservicecustomEntryArrayOutputWithContext(context.Context) InternetservicecustomEntryArrayOutput
}

type InternetservicecustomEntryArray []InternetservicecustomEntryInput

func (InternetservicecustomEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicecustomEntry)(nil)).Elem()
}

func (i InternetservicecustomEntryArray) ToInternetservicecustomEntryArrayOutput() InternetservicecustomEntryArrayOutput {
	return i.ToInternetservicecustomEntryArrayOutputWithContext(context.Background())
}

func (i InternetservicecustomEntryArray) ToInternetservicecustomEntryArrayOutputWithContext(ctx context.Context) InternetservicecustomEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicecustomEntryArrayOutput)
}

type InternetservicecustomEntryOutput struct{ *pulumi.OutputState }

func (InternetservicecustomEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicecustomEntry)(nil)).Elem()
}

func (o InternetservicecustomEntryOutput) ToInternetservicecustomEntryOutput() InternetservicecustomEntryOutput {
	return o
}

func (o InternetservicecustomEntryOutput) ToInternetservicecustomEntryOutputWithContext(ctx context.Context) InternetservicecustomEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
func (o InternetservicecustomEntryOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetservicecustomEntry) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
func (o InternetservicecustomEntryOutput) Dst6s() InternetservicecustomEntryDst6ArrayOutput {
	return o.ApplyT(func(v InternetservicecustomEntry) []InternetservicecustomEntryDst6 { return v.Dst6s }).(InternetservicecustomEntryDst6ArrayOutput)
}

// Destination address or address group name. The structure of `dst` block is documented below.
func (o InternetservicecustomEntryOutput) Dsts() InternetservicecustomEntryDstArrayOutput {
	return o.ApplyT(func(v InternetservicecustomEntry) []InternetservicecustomEntryDst { return v.Dsts }).(InternetservicecustomEntryDstArrayOutput)
}

// Entry ID(1-255).
func (o InternetservicecustomEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicecustomEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Port ranges in the custom entry. The structure of `portRange` block is documented below.
func (o InternetservicecustomEntryOutput) PortRanges() InternetservicecustomEntryPortRangeArrayOutput {
	return o.ApplyT(func(v InternetservicecustomEntry) []InternetservicecustomEntryPortRange { return v.PortRanges }).(InternetservicecustomEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o InternetservicecustomEntryOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicecustomEntry) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

type InternetservicecustomEntryArrayOutput struct{ *pulumi.OutputState }

func (InternetservicecustomEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicecustomEntry)(nil)).Elem()
}

func (o InternetservicecustomEntryArrayOutput) ToInternetservicecustomEntryArrayOutput() InternetservicecustomEntryArrayOutput {
	return o
}

func (o InternetservicecustomEntryArrayOutput) ToInternetservicecustomEntryArrayOutputWithContext(ctx context.Context) InternetservicecustomEntryArrayOutput {
	return o
}

func (o InternetservicecustomEntryArrayOutput) Index(i pulumi.IntInput) InternetservicecustomEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetservicecustomEntry {
		return vs[0].([]InternetservicecustomEntry)[vs[1].(int)]
	}).(InternetservicecustomEntryOutput)
}

type InternetservicecustomEntryDst6 struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// InternetservicecustomEntryDst6Input is an input type that accepts InternetservicecustomEntryDst6Args and InternetservicecustomEntryDst6Output values.
// You can construct a concrete instance of `InternetservicecustomEntryDst6Input` via:
//
//	InternetservicecustomEntryDst6Args{...}
type InternetservicecustomEntryDst6Input interface {
	pulumi.Input

	ToInternetservicecustomEntryDst6Output() InternetservicecustomEntryDst6Output
	ToInternetservicecustomEntryDst6OutputWithContext(context.Context) InternetservicecustomEntryDst6Output
}

type InternetservicecustomEntryDst6Args struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InternetservicecustomEntryDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicecustomEntryDst6)(nil)).Elem()
}

func (i InternetservicecustomEntryDst6Args) ToInternetservicecustomEntryDst6Output() InternetservicecustomEntryDst6Output {
	return i.ToInternetservicecustomEntryDst6OutputWithContext(context.Background())
}

func (i InternetservicecustomEntryDst6Args) ToInternetservicecustomEntryDst6OutputWithContext(ctx context.Context) InternetservicecustomEntryDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicecustomEntryDst6Output)
}

// InternetservicecustomEntryDst6ArrayInput is an input type that accepts InternetservicecustomEntryDst6Array and InternetservicecustomEntryDst6ArrayOutput values.
// You can construct a concrete instance of `InternetservicecustomEntryDst6ArrayInput` via:
//
//	InternetservicecustomEntryDst6Array{ InternetservicecustomEntryDst6Args{...} }
type InternetservicecustomEntryDst6ArrayInput interface {
	pulumi.Input

	ToInternetservicecustomEntryDst6ArrayOutput() InternetservicecustomEntryDst6ArrayOutput
	ToInternetservicecustomEntryDst6ArrayOutputWithContext(context.Context) InternetservicecustomEntryDst6ArrayOutput
}

type InternetservicecustomEntryDst6Array []InternetservicecustomEntryDst6Input

func (InternetservicecustomEntryDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicecustomEntryDst6)(nil)).Elem()
}

func (i InternetservicecustomEntryDst6Array) ToInternetservicecustomEntryDst6ArrayOutput() InternetservicecustomEntryDst6ArrayOutput {
	return i.ToInternetservicecustomEntryDst6ArrayOutputWithContext(context.Background())
}

func (i InternetservicecustomEntryDst6Array) ToInternetservicecustomEntryDst6ArrayOutputWithContext(ctx context.Context) InternetservicecustomEntryDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicecustomEntryDst6ArrayOutput)
}

type InternetservicecustomEntryDst6Output struct{ *pulumi.OutputState }

func (InternetservicecustomEntryDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicecustomEntryDst6)(nil)).Elem()
}

func (o InternetservicecustomEntryDst6Output) ToInternetservicecustomEntryDst6Output() InternetservicecustomEntryDst6Output {
	return o
}

func (o InternetservicecustomEntryDst6Output) ToInternetservicecustomEntryDst6OutputWithContext(ctx context.Context) InternetservicecustomEntryDst6Output {
	return o
}

// Internet Service name.
func (o InternetservicecustomEntryDst6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetservicecustomEntryDst6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InternetservicecustomEntryDst6ArrayOutput struct{ *pulumi.OutputState }

func (InternetservicecustomEntryDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicecustomEntryDst6)(nil)).Elem()
}

func (o InternetservicecustomEntryDst6ArrayOutput) ToInternetservicecustomEntryDst6ArrayOutput() InternetservicecustomEntryDst6ArrayOutput {
	return o
}

func (o InternetservicecustomEntryDst6ArrayOutput) ToInternetservicecustomEntryDst6ArrayOutputWithContext(ctx context.Context) InternetservicecustomEntryDst6ArrayOutput {
	return o
}

func (o InternetservicecustomEntryDst6ArrayOutput) Index(i pulumi.IntInput) InternetservicecustomEntryDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetservicecustomEntryDst6 {
		return vs[0].([]InternetservicecustomEntryDst6)[vs[1].(int)]
	}).(InternetservicecustomEntryDst6Output)
}

type InternetservicecustomEntryDst struct {
	// Select the destination address6 or address group object from available options.
	Name *string `pulumi:"name"`
}

// InternetservicecustomEntryDstInput is an input type that accepts InternetservicecustomEntryDstArgs and InternetservicecustomEntryDstOutput values.
// You can construct a concrete instance of `InternetservicecustomEntryDstInput` via:
//
//	InternetservicecustomEntryDstArgs{...}
type InternetservicecustomEntryDstInput interface {
	pulumi.Input

	ToInternetservicecustomEntryDstOutput() InternetservicecustomEntryDstOutput
	ToInternetservicecustomEntryDstOutputWithContext(context.Context) InternetservicecustomEntryDstOutput
}

type InternetservicecustomEntryDstArgs struct {
	// Select the destination address6 or address group object from available options.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InternetservicecustomEntryDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicecustomEntryDst)(nil)).Elem()
}

func (i InternetservicecustomEntryDstArgs) ToInternetservicecustomEntryDstOutput() InternetservicecustomEntryDstOutput {
	return i.ToInternetservicecustomEntryDstOutputWithContext(context.Background())
}

func (i InternetservicecustomEntryDstArgs) ToInternetservicecustomEntryDstOutputWithContext(ctx context.Context) InternetservicecustomEntryDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicecustomEntryDstOutput)
}

// InternetservicecustomEntryDstArrayInput is an input type that accepts InternetservicecustomEntryDstArray and InternetservicecustomEntryDstArrayOutput values.
// You can construct a concrete instance of `InternetservicecustomEntryDstArrayInput` via:
//
//	InternetservicecustomEntryDstArray{ InternetservicecustomEntryDstArgs{...} }
type InternetservicecustomEntryDstArrayInput interface {
	pulumi.Input

	ToInternetservicecustomEntryDstArrayOutput() InternetservicecustomEntryDstArrayOutput
	ToInternetservicecustomEntryDstArrayOutputWithContext(context.Context) InternetservicecustomEntryDstArrayOutput
}

type InternetservicecustomEntryDstArray []InternetservicecustomEntryDstInput

func (InternetservicecustomEntryDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicecustomEntryDst)(nil)).Elem()
}

func (i InternetservicecustomEntryDstArray) ToInternetservicecustomEntryDstArrayOutput() InternetservicecustomEntryDstArrayOutput {
	return i.ToInternetservicecustomEntryDstArrayOutputWithContext(context.Background())
}

func (i InternetservicecustomEntryDstArray) ToInternetservicecustomEntryDstArrayOutputWithContext(ctx context.Context) InternetservicecustomEntryDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicecustomEntryDstArrayOutput)
}

type InternetservicecustomEntryDstOutput struct{ *pulumi.OutputState }

func (InternetservicecustomEntryDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicecustomEntryDst)(nil)).Elem()
}

func (o InternetservicecustomEntryDstOutput) ToInternetservicecustomEntryDstOutput() InternetservicecustomEntryDstOutput {
	return o
}

func (o InternetservicecustomEntryDstOutput) ToInternetservicecustomEntryDstOutputWithContext(ctx context.Context) InternetservicecustomEntryDstOutput {
	return o
}

// Select the destination address6 or address group object from available options.
func (o InternetservicecustomEntryDstOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetservicecustomEntryDst) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InternetservicecustomEntryDstArrayOutput struct{ *pulumi.OutputState }

func (InternetservicecustomEntryDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicecustomEntryDst)(nil)).Elem()
}

func (o InternetservicecustomEntryDstArrayOutput) ToInternetservicecustomEntryDstArrayOutput() InternetservicecustomEntryDstArrayOutput {
	return o
}

func (o InternetservicecustomEntryDstArrayOutput) ToInternetservicecustomEntryDstArrayOutputWithContext(ctx context.Context) InternetservicecustomEntryDstArrayOutput {
	return o
}

func (o InternetservicecustomEntryDstArrayOutput) Index(i pulumi.IntInput) InternetservicecustomEntryDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetservicecustomEntryDst {
		return vs[0].([]InternetservicecustomEntryDst)[vs[1].(int)]
	}).(InternetservicecustomEntryDstOutput)
}

type InternetservicecustomEntryPortRange struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort *int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id *int `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort *int `pulumi:"startPort"`
}

// InternetservicecustomEntryPortRangeInput is an input type that accepts InternetservicecustomEntryPortRangeArgs and InternetservicecustomEntryPortRangeOutput values.
// You can construct a concrete instance of `InternetservicecustomEntryPortRangeInput` via:
//
//	InternetservicecustomEntryPortRangeArgs{...}
type InternetservicecustomEntryPortRangeInput interface {
	pulumi.Input

	ToInternetservicecustomEntryPortRangeOutput() InternetservicecustomEntryPortRangeOutput
	ToInternetservicecustomEntryPortRangeOutputWithContext(context.Context) InternetservicecustomEntryPortRangeOutput
}

type InternetservicecustomEntryPortRangeArgs struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (InternetservicecustomEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicecustomEntryPortRange)(nil)).Elem()
}

func (i InternetservicecustomEntryPortRangeArgs) ToInternetservicecustomEntryPortRangeOutput() InternetservicecustomEntryPortRangeOutput {
	return i.ToInternetservicecustomEntryPortRangeOutputWithContext(context.Background())
}

func (i InternetservicecustomEntryPortRangeArgs) ToInternetservicecustomEntryPortRangeOutputWithContext(ctx context.Context) InternetservicecustomEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicecustomEntryPortRangeOutput)
}

// InternetservicecustomEntryPortRangeArrayInput is an input type that accepts InternetservicecustomEntryPortRangeArray and InternetservicecustomEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `InternetservicecustomEntryPortRangeArrayInput` via:
//
//	InternetservicecustomEntryPortRangeArray{ InternetservicecustomEntryPortRangeArgs{...} }
type InternetservicecustomEntryPortRangeArrayInput interface {
	pulumi.Input

	ToInternetservicecustomEntryPortRangeArrayOutput() InternetservicecustomEntryPortRangeArrayOutput
	ToInternetservicecustomEntryPortRangeArrayOutputWithContext(context.Context) InternetservicecustomEntryPortRangeArrayOutput
}

type InternetservicecustomEntryPortRangeArray []InternetservicecustomEntryPortRangeInput

func (InternetservicecustomEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicecustomEntryPortRange)(nil)).Elem()
}

func (i InternetservicecustomEntryPortRangeArray) ToInternetservicecustomEntryPortRangeArrayOutput() InternetservicecustomEntryPortRangeArrayOutput {
	return i.ToInternetservicecustomEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i InternetservicecustomEntryPortRangeArray) ToInternetservicecustomEntryPortRangeArrayOutputWithContext(ctx context.Context) InternetservicecustomEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicecustomEntryPortRangeArrayOutput)
}

type InternetservicecustomEntryPortRangeOutput struct{ *pulumi.OutputState }

func (InternetservicecustomEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicecustomEntryPortRange)(nil)).Elem()
}

func (o InternetservicecustomEntryPortRangeOutput) ToInternetservicecustomEntryPortRangeOutput() InternetservicecustomEntryPortRangeOutput {
	return o
}

func (o InternetservicecustomEntryPortRangeOutput) ToInternetservicecustomEntryPortRangeOutputWithContext(ctx context.Context) InternetservicecustomEntryPortRangeOutput {
	return o
}

// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
func (o InternetservicecustomEntryPortRangeOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicecustomEntryPortRange) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Custom entry port range ID.
func (o InternetservicecustomEntryPortRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicecustomEntryPortRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
func (o InternetservicecustomEntryPortRangeOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicecustomEntryPortRange) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type InternetservicecustomEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (InternetservicecustomEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicecustomEntryPortRange)(nil)).Elem()
}

func (o InternetservicecustomEntryPortRangeArrayOutput) ToInternetservicecustomEntryPortRangeArrayOutput() InternetservicecustomEntryPortRangeArrayOutput {
	return o
}

func (o InternetservicecustomEntryPortRangeArrayOutput) ToInternetservicecustomEntryPortRangeArrayOutputWithContext(ctx context.Context) InternetservicecustomEntryPortRangeArrayOutput {
	return o
}

func (o InternetservicecustomEntryPortRangeArrayOutput) Index(i pulumi.IntInput) InternetservicecustomEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetservicecustomEntryPortRange {
		return vs[0].([]InternetservicecustomEntryPortRange)[vs[1].(int)]
	}).(InternetservicecustomEntryPortRangeOutput)
}

type InternetservicecustomgroupMember struct {
	// Group member name.
	Name *string `pulumi:"name"`
}

// InternetservicecustomgroupMemberInput is an input type that accepts InternetservicecustomgroupMemberArgs and InternetservicecustomgroupMemberOutput values.
// You can construct a concrete instance of `InternetservicecustomgroupMemberInput` via:
//
//	InternetservicecustomgroupMemberArgs{...}
type InternetservicecustomgroupMemberInput interface {
	pulumi.Input

	ToInternetservicecustomgroupMemberOutput() InternetservicecustomgroupMemberOutput
	ToInternetservicecustomgroupMemberOutputWithContext(context.Context) InternetservicecustomgroupMemberOutput
}

type InternetservicecustomgroupMemberArgs struct {
	// Group member name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InternetservicecustomgroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicecustomgroupMember)(nil)).Elem()
}

func (i InternetservicecustomgroupMemberArgs) ToInternetservicecustomgroupMemberOutput() InternetservicecustomgroupMemberOutput {
	return i.ToInternetservicecustomgroupMemberOutputWithContext(context.Background())
}

func (i InternetservicecustomgroupMemberArgs) ToInternetservicecustomgroupMemberOutputWithContext(ctx context.Context) InternetservicecustomgroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicecustomgroupMemberOutput)
}

// InternetservicecustomgroupMemberArrayInput is an input type that accepts InternetservicecustomgroupMemberArray and InternetservicecustomgroupMemberArrayOutput values.
// You can construct a concrete instance of `InternetservicecustomgroupMemberArrayInput` via:
//
//	InternetservicecustomgroupMemberArray{ InternetservicecustomgroupMemberArgs{...} }
type InternetservicecustomgroupMemberArrayInput interface {
	pulumi.Input

	ToInternetservicecustomgroupMemberArrayOutput() InternetservicecustomgroupMemberArrayOutput
	ToInternetservicecustomgroupMemberArrayOutputWithContext(context.Context) InternetservicecustomgroupMemberArrayOutput
}

type InternetservicecustomgroupMemberArray []InternetservicecustomgroupMemberInput

func (InternetservicecustomgroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicecustomgroupMember)(nil)).Elem()
}

func (i InternetservicecustomgroupMemberArray) ToInternetservicecustomgroupMemberArrayOutput() InternetservicecustomgroupMemberArrayOutput {
	return i.ToInternetservicecustomgroupMemberArrayOutputWithContext(context.Background())
}

func (i InternetservicecustomgroupMemberArray) ToInternetservicecustomgroupMemberArrayOutputWithContext(ctx context.Context) InternetservicecustomgroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicecustomgroupMemberArrayOutput)
}

type InternetservicecustomgroupMemberOutput struct{ *pulumi.OutputState }

func (InternetservicecustomgroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicecustomgroupMember)(nil)).Elem()
}

func (o InternetservicecustomgroupMemberOutput) ToInternetservicecustomgroupMemberOutput() InternetservicecustomgroupMemberOutput {
	return o
}

func (o InternetservicecustomgroupMemberOutput) ToInternetservicecustomgroupMemberOutputWithContext(ctx context.Context) InternetservicecustomgroupMemberOutput {
	return o
}

// Group member name.
func (o InternetservicecustomgroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetservicecustomgroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InternetservicecustomgroupMemberArrayOutput struct{ *pulumi.OutputState }

func (InternetservicecustomgroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicecustomgroupMember)(nil)).Elem()
}

func (o InternetservicecustomgroupMemberArrayOutput) ToInternetservicecustomgroupMemberArrayOutput() InternetservicecustomgroupMemberArrayOutput {
	return o
}

func (o InternetservicecustomgroupMemberArrayOutput) ToInternetservicecustomgroupMemberArrayOutputWithContext(ctx context.Context) InternetservicecustomgroupMemberArrayOutput {
	return o
}

func (o InternetservicecustomgroupMemberArrayOutput) Index(i pulumi.IntInput) InternetservicecustomgroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetservicecustomgroupMember {
		return vs[0].([]InternetservicecustomgroupMember)[vs[1].(int)]
	}).(InternetservicecustomgroupMemberOutput)
}

type InternetservicedefinitionEntry struct {
	// Internet Service category ID.
	CategoryId *int `pulumi:"categoryId"`
	// Internet Service name.
	Name *string `pulumi:"name"`
	// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
	Port *int `pulumi:"port"`
	// Port ranges in the definition entry. The structure of `portRange` block is documented below.
	PortRanges []InternetservicedefinitionEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol *int `pulumi:"protocol"`
	// Entry sequence number.
	SeqNum *int `pulumi:"seqNum"`
}

// InternetservicedefinitionEntryInput is an input type that accepts InternetservicedefinitionEntryArgs and InternetservicedefinitionEntryOutput values.
// You can construct a concrete instance of `InternetservicedefinitionEntryInput` via:
//
//	InternetservicedefinitionEntryArgs{...}
type InternetservicedefinitionEntryInput interface {
	pulumi.Input

	ToInternetservicedefinitionEntryOutput() InternetservicedefinitionEntryOutput
	ToInternetservicedefinitionEntryOutputWithContext(context.Context) InternetservicedefinitionEntryOutput
}

type InternetservicedefinitionEntryArgs struct {
	// Internet Service category ID.
	CategoryId pulumi.IntPtrInput `pulumi:"categoryId"`
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Port ranges in the definition entry. The structure of `portRange` block is documented below.
	PortRanges InternetservicedefinitionEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
	// Entry sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (InternetservicedefinitionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicedefinitionEntry)(nil)).Elem()
}

func (i InternetservicedefinitionEntryArgs) ToInternetservicedefinitionEntryOutput() InternetservicedefinitionEntryOutput {
	return i.ToInternetservicedefinitionEntryOutputWithContext(context.Background())
}

func (i InternetservicedefinitionEntryArgs) ToInternetservicedefinitionEntryOutputWithContext(ctx context.Context) InternetservicedefinitionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicedefinitionEntryOutput)
}

// InternetservicedefinitionEntryArrayInput is an input type that accepts InternetservicedefinitionEntryArray and InternetservicedefinitionEntryArrayOutput values.
// You can construct a concrete instance of `InternetservicedefinitionEntryArrayInput` via:
//
//	InternetservicedefinitionEntryArray{ InternetservicedefinitionEntryArgs{...} }
type InternetservicedefinitionEntryArrayInput interface {
	pulumi.Input

	ToInternetservicedefinitionEntryArrayOutput() InternetservicedefinitionEntryArrayOutput
	ToInternetservicedefinitionEntryArrayOutputWithContext(context.Context) InternetservicedefinitionEntryArrayOutput
}

type InternetservicedefinitionEntryArray []InternetservicedefinitionEntryInput

func (InternetservicedefinitionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicedefinitionEntry)(nil)).Elem()
}

func (i InternetservicedefinitionEntryArray) ToInternetservicedefinitionEntryArrayOutput() InternetservicedefinitionEntryArrayOutput {
	return i.ToInternetservicedefinitionEntryArrayOutputWithContext(context.Background())
}

func (i InternetservicedefinitionEntryArray) ToInternetservicedefinitionEntryArrayOutputWithContext(ctx context.Context) InternetservicedefinitionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicedefinitionEntryArrayOutput)
}

type InternetservicedefinitionEntryOutput struct{ *pulumi.OutputState }

func (InternetservicedefinitionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicedefinitionEntry)(nil)).Elem()
}

func (o InternetservicedefinitionEntryOutput) ToInternetservicedefinitionEntryOutput() InternetservicedefinitionEntryOutput {
	return o
}

func (o InternetservicedefinitionEntryOutput) ToInternetservicedefinitionEntryOutputWithContext(ctx context.Context) InternetservicedefinitionEntryOutput {
	return o
}

// Internet Service category ID.
func (o InternetservicedefinitionEntryOutput) CategoryId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicedefinitionEntry) *int { return v.CategoryId }).(pulumi.IntPtrOutput)
}

// Internet Service name.
func (o InternetservicedefinitionEntryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetservicedefinitionEntry) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
func (o InternetservicedefinitionEntryOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicedefinitionEntry) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Port ranges in the definition entry. The structure of `portRange` block is documented below.
func (o InternetservicedefinitionEntryOutput) PortRanges() InternetservicedefinitionEntryPortRangeArrayOutput {
	return o.ApplyT(func(v InternetservicedefinitionEntry) []InternetservicedefinitionEntryPortRange { return v.PortRanges }).(InternetservicedefinitionEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o InternetservicedefinitionEntryOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicedefinitionEntry) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

// Entry sequence number.
func (o InternetservicedefinitionEntryOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicedefinitionEntry) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type InternetservicedefinitionEntryArrayOutput struct{ *pulumi.OutputState }

func (InternetservicedefinitionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicedefinitionEntry)(nil)).Elem()
}

func (o InternetservicedefinitionEntryArrayOutput) ToInternetservicedefinitionEntryArrayOutput() InternetservicedefinitionEntryArrayOutput {
	return o
}

func (o InternetservicedefinitionEntryArrayOutput) ToInternetservicedefinitionEntryArrayOutputWithContext(ctx context.Context) InternetservicedefinitionEntryArrayOutput {
	return o
}

func (o InternetservicedefinitionEntryArrayOutput) Index(i pulumi.IntInput) InternetservicedefinitionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetservicedefinitionEntry {
		return vs[0].([]InternetservicedefinitionEntry)[vs[1].(int)]
	}).(InternetservicedefinitionEntryOutput)
}

type InternetservicedefinitionEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort *int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id *int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort *int `pulumi:"startPort"`
}

// InternetservicedefinitionEntryPortRangeInput is an input type that accepts InternetservicedefinitionEntryPortRangeArgs and InternetservicedefinitionEntryPortRangeOutput values.
// You can construct a concrete instance of `InternetservicedefinitionEntryPortRangeInput` via:
//
//	InternetservicedefinitionEntryPortRangeArgs{...}
type InternetservicedefinitionEntryPortRangeInput interface {
	pulumi.Input

	ToInternetservicedefinitionEntryPortRangeOutput() InternetservicedefinitionEntryPortRangeOutput
	ToInternetservicedefinitionEntryPortRangeOutputWithContext(context.Context) InternetservicedefinitionEntryPortRangeOutput
}

type InternetservicedefinitionEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (InternetservicedefinitionEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (i InternetservicedefinitionEntryPortRangeArgs) ToInternetservicedefinitionEntryPortRangeOutput() InternetservicedefinitionEntryPortRangeOutput {
	return i.ToInternetservicedefinitionEntryPortRangeOutputWithContext(context.Background())
}

func (i InternetservicedefinitionEntryPortRangeArgs) ToInternetservicedefinitionEntryPortRangeOutputWithContext(ctx context.Context) InternetservicedefinitionEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicedefinitionEntryPortRangeOutput)
}

// InternetservicedefinitionEntryPortRangeArrayInput is an input type that accepts InternetservicedefinitionEntryPortRangeArray and InternetservicedefinitionEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `InternetservicedefinitionEntryPortRangeArrayInput` via:
//
//	InternetservicedefinitionEntryPortRangeArray{ InternetservicedefinitionEntryPortRangeArgs{...} }
type InternetservicedefinitionEntryPortRangeArrayInput interface {
	pulumi.Input

	ToInternetservicedefinitionEntryPortRangeArrayOutput() InternetservicedefinitionEntryPortRangeArrayOutput
	ToInternetservicedefinitionEntryPortRangeArrayOutputWithContext(context.Context) InternetservicedefinitionEntryPortRangeArrayOutput
}

type InternetservicedefinitionEntryPortRangeArray []InternetservicedefinitionEntryPortRangeInput

func (InternetservicedefinitionEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (i InternetservicedefinitionEntryPortRangeArray) ToInternetservicedefinitionEntryPortRangeArrayOutput() InternetservicedefinitionEntryPortRangeArrayOutput {
	return i.ToInternetservicedefinitionEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i InternetservicedefinitionEntryPortRangeArray) ToInternetservicedefinitionEntryPortRangeArrayOutputWithContext(ctx context.Context) InternetservicedefinitionEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicedefinitionEntryPortRangeArrayOutput)
}

type InternetservicedefinitionEntryPortRangeOutput struct{ *pulumi.OutputState }

func (InternetservicedefinitionEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (o InternetservicedefinitionEntryPortRangeOutput) ToInternetservicedefinitionEntryPortRangeOutput() InternetservicedefinitionEntryPortRangeOutput {
	return o
}

func (o InternetservicedefinitionEntryPortRangeOutput) ToInternetservicedefinitionEntryPortRangeOutputWithContext(ctx context.Context) InternetservicedefinitionEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o InternetservicedefinitionEntryPortRangeOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicedefinitionEntryPortRange) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Custom entry port range ID.
func (o InternetservicedefinitionEntryPortRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicedefinitionEntryPortRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o InternetservicedefinitionEntryPortRangeOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicedefinitionEntryPortRange) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type InternetservicedefinitionEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (InternetservicedefinitionEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (o InternetservicedefinitionEntryPortRangeArrayOutput) ToInternetservicedefinitionEntryPortRangeArrayOutput() InternetservicedefinitionEntryPortRangeArrayOutput {
	return o
}

func (o InternetservicedefinitionEntryPortRangeArrayOutput) ToInternetservicedefinitionEntryPortRangeArrayOutputWithContext(ctx context.Context) InternetservicedefinitionEntryPortRangeArrayOutput {
	return o
}

func (o InternetservicedefinitionEntryPortRangeArrayOutput) Index(i pulumi.IntInput) InternetservicedefinitionEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetservicedefinitionEntryPortRange {
		return vs[0].([]InternetservicedefinitionEntryPortRange)[vs[1].(int)]
	}).(InternetservicedefinitionEntryPortRangeOutput)
}

type InternetserviceextensionDisableEntry struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Disable entry ID.
	Id *int `pulumi:"id"`
	// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
	Ip6Ranges []InternetserviceextensionDisableEntryIp6Range `pulumi:"ip6Ranges"`
	// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
	IpRanges []InternetserviceextensionDisableEntryIpRange `pulumi:"ipRanges"`
	// Integer value for the TCP/IP port (0 - 65535).
	Port *int `pulumi:"port"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges []InternetserviceextensionDisableEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol *int `pulumi:"protocol"`
}

// InternetserviceextensionDisableEntryInput is an input type that accepts InternetserviceextensionDisableEntryArgs and InternetserviceextensionDisableEntryOutput values.
// You can construct a concrete instance of `InternetserviceextensionDisableEntryInput` via:
//
//	InternetserviceextensionDisableEntryArgs{...}
type InternetserviceextensionDisableEntryInput interface {
	pulumi.Input

	ToInternetserviceextensionDisableEntryOutput() InternetserviceextensionDisableEntryOutput
	ToInternetserviceextensionDisableEntryOutputWithContext(context.Context) InternetserviceextensionDisableEntryOutput
}

type InternetserviceextensionDisableEntryArgs struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Disable entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
	Ip6Ranges InternetserviceextensionDisableEntryIp6RangeArrayInput `pulumi:"ip6Ranges"`
	// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
	IpRanges InternetserviceextensionDisableEntryIpRangeArrayInput `pulumi:"ipRanges"`
	// Integer value for the TCP/IP port (0 - 65535).
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges InternetserviceextensionDisableEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
}

func (InternetserviceextensionDisableEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionDisableEntry)(nil)).Elem()
}

func (i InternetserviceextensionDisableEntryArgs) ToInternetserviceextensionDisableEntryOutput() InternetserviceextensionDisableEntryOutput {
	return i.ToInternetserviceextensionDisableEntryOutputWithContext(context.Background())
}

func (i InternetserviceextensionDisableEntryArgs) ToInternetserviceextensionDisableEntryOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionDisableEntryOutput)
}

// InternetserviceextensionDisableEntryArrayInput is an input type that accepts InternetserviceextensionDisableEntryArray and InternetserviceextensionDisableEntryArrayOutput values.
// You can construct a concrete instance of `InternetserviceextensionDisableEntryArrayInput` via:
//
//	InternetserviceextensionDisableEntryArray{ InternetserviceextensionDisableEntryArgs{...} }
type InternetserviceextensionDisableEntryArrayInput interface {
	pulumi.Input

	ToInternetserviceextensionDisableEntryArrayOutput() InternetserviceextensionDisableEntryArrayOutput
	ToInternetserviceextensionDisableEntryArrayOutputWithContext(context.Context) InternetserviceextensionDisableEntryArrayOutput
}

type InternetserviceextensionDisableEntryArray []InternetserviceextensionDisableEntryInput

func (InternetserviceextensionDisableEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionDisableEntry)(nil)).Elem()
}

func (i InternetserviceextensionDisableEntryArray) ToInternetserviceextensionDisableEntryArrayOutput() InternetserviceextensionDisableEntryArrayOutput {
	return i.ToInternetserviceextensionDisableEntryArrayOutputWithContext(context.Background())
}

func (i InternetserviceextensionDisableEntryArray) ToInternetserviceextensionDisableEntryArrayOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionDisableEntryArrayOutput)
}

type InternetserviceextensionDisableEntryOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionDisableEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionDisableEntry)(nil)).Elem()
}

func (o InternetserviceextensionDisableEntryOutput) ToInternetserviceextensionDisableEntryOutput() InternetserviceextensionDisableEntryOutput {
	return o
}

func (o InternetserviceextensionDisableEntryOutput) ToInternetserviceextensionDisableEntryOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
func (o InternetserviceextensionDisableEntryOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntry) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Disable entry ID.
func (o InternetserviceextensionDisableEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
func (o InternetserviceextensionDisableEntryOutput) Ip6Ranges() InternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntry) []InternetserviceextensionDisableEntryIp6Range {
		return v.Ip6Ranges
	}).(InternetserviceextensionDisableEntryIp6RangeArrayOutput)
}

// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
func (o InternetserviceextensionDisableEntryOutput) IpRanges() InternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntry) []InternetserviceextensionDisableEntryIpRange {
		return v.IpRanges
	}).(InternetserviceextensionDisableEntryIpRangeArrayOutput)
}

// Integer value for the TCP/IP port (0 - 65535).
func (o InternetserviceextensionDisableEntryOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntry) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Port ranges in the disable entry. The structure of `portRange` block is documented below.
func (o InternetserviceextensionDisableEntryOutput) PortRanges() InternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntry) []InternetserviceextensionDisableEntryPortRange {
		return v.PortRanges
	}).(InternetserviceextensionDisableEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o InternetserviceextensionDisableEntryOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntry) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

type InternetserviceextensionDisableEntryArrayOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionDisableEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionDisableEntry)(nil)).Elem()
}

func (o InternetserviceextensionDisableEntryArrayOutput) ToInternetserviceextensionDisableEntryArrayOutput() InternetserviceextensionDisableEntryArrayOutput {
	return o
}

func (o InternetserviceextensionDisableEntryArrayOutput) ToInternetserviceextensionDisableEntryArrayOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryArrayOutput {
	return o
}

func (o InternetserviceextensionDisableEntryArrayOutput) Index(i pulumi.IntInput) InternetserviceextensionDisableEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetserviceextensionDisableEntry {
		return vs[0].([]InternetserviceextensionDisableEntry)[vs[1].(int)]
	}).(InternetserviceextensionDisableEntryOutput)
}

type InternetserviceextensionDisableEntryIp6Range struct {
	// End IPv6 address.
	EndIp6 *string `pulumi:"endIp6"`
	// Disable entry ID.
	Id *int `pulumi:"id"`
	// Start IPv6 address.
	StartIp6 *string `pulumi:"startIp6"`
}

// InternetserviceextensionDisableEntryIp6RangeInput is an input type that accepts InternetserviceextensionDisableEntryIp6RangeArgs and InternetserviceextensionDisableEntryIp6RangeOutput values.
// You can construct a concrete instance of `InternetserviceextensionDisableEntryIp6RangeInput` via:
//
//	InternetserviceextensionDisableEntryIp6RangeArgs{...}
type InternetserviceextensionDisableEntryIp6RangeInput interface {
	pulumi.Input

	ToInternetserviceextensionDisableEntryIp6RangeOutput() InternetserviceextensionDisableEntryIp6RangeOutput
	ToInternetserviceextensionDisableEntryIp6RangeOutputWithContext(context.Context) InternetserviceextensionDisableEntryIp6RangeOutput
}

type InternetserviceextensionDisableEntryIp6RangeArgs struct {
	// End IPv6 address.
	EndIp6 pulumi.StringPtrInput `pulumi:"endIp6"`
	// Disable entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start IPv6 address.
	StartIp6 pulumi.StringPtrInput `pulumi:"startIp6"`
}

func (InternetserviceextensionDisableEntryIp6RangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (i InternetserviceextensionDisableEntryIp6RangeArgs) ToInternetserviceextensionDisableEntryIp6RangeOutput() InternetserviceextensionDisableEntryIp6RangeOutput {
	return i.ToInternetserviceextensionDisableEntryIp6RangeOutputWithContext(context.Background())
}

func (i InternetserviceextensionDisableEntryIp6RangeArgs) ToInternetserviceextensionDisableEntryIp6RangeOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryIp6RangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionDisableEntryIp6RangeOutput)
}

// InternetserviceextensionDisableEntryIp6RangeArrayInput is an input type that accepts InternetserviceextensionDisableEntryIp6RangeArray and InternetserviceextensionDisableEntryIp6RangeArrayOutput values.
// You can construct a concrete instance of `InternetserviceextensionDisableEntryIp6RangeArrayInput` via:
//
//	InternetserviceextensionDisableEntryIp6RangeArray{ InternetserviceextensionDisableEntryIp6RangeArgs{...} }
type InternetserviceextensionDisableEntryIp6RangeArrayInput interface {
	pulumi.Input

	ToInternetserviceextensionDisableEntryIp6RangeArrayOutput() InternetserviceextensionDisableEntryIp6RangeArrayOutput
	ToInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(context.Context) InternetserviceextensionDisableEntryIp6RangeArrayOutput
}

type InternetserviceextensionDisableEntryIp6RangeArray []InternetserviceextensionDisableEntryIp6RangeInput

func (InternetserviceextensionDisableEntryIp6RangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (i InternetserviceextensionDisableEntryIp6RangeArray) ToInternetserviceextensionDisableEntryIp6RangeArrayOutput() InternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return i.ToInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(context.Background())
}

func (i InternetserviceextensionDisableEntryIp6RangeArray) ToInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionDisableEntryIp6RangeArrayOutput)
}

type InternetserviceextensionDisableEntryIp6RangeOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionDisableEntryIp6RangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (o InternetserviceextensionDisableEntryIp6RangeOutput) ToInternetserviceextensionDisableEntryIp6RangeOutput() InternetserviceextensionDisableEntryIp6RangeOutput {
	return o
}

func (o InternetserviceextensionDisableEntryIp6RangeOutput) ToInternetserviceextensionDisableEntryIp6RangeOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryIp6RangeOutput {
	return o
}

// End IPv6 address.
func (o InternetserviceextensionDisableEntryIp6RangeOutput) EndIp6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntryIp6Range) *string { return v.EndIp6 }).(pulumi.StringPtrOutput)
}

// Disable entry ID.
func (o InternetserviceextensionDisableEntryIp6RangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntryIp6Range) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start IPv6 address.
func (o InternetserviceextensionDisableEntryIp6RangeOutput) StartIp6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntryIp6Range) *string { return v.StartIp6 }).(pulumi.StringPtrOutput)
}

type InternetserviceextensionDisableEntryIp6RangeArrayOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionDisableEntryIp6RangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (o InternetserviceextensionDisableEntryIp6RangeArrayOutput) ToInternetserviceextensionDisableEntryIp6RangeArrayOutput() InternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o
}

func (o InternetserviceextensionDisableEntryIp6RangeArrayOutput) ToInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o
}

func (o InternetserviceextensionDisableEntryIp6RangeArrayOutput) Index(i pulumi.IntInput) InternetserviceextensionDisableEntryIp6RangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetserviceextensionDisableEntryIp6Range {
		return vs[0].([]InternetserviceextensionDisableEntryIp6Range)[vs[1].(int)]
	}).(InternetserviceextensionDisableEntryIp6RangeOutput)
}

type InternetserviceextensionDisableEntryIpRange struct {
	// End IP address.
	//
	// The `ip6Range` block supports:
	EndIp *string `pulumi:"endIp"`
	// Disable entry range ID.
	Id *int `pulumi:"id"`
	// Start IP address.
	StartIp *string `pulumi:"startIp"`
}

// InternetserviceextensionDisableEntryIpRangeInput is an input type that accepts InternetserviceextensionDisableEntryIpRangeArgs and InternetserviceextensionDisableEntryIpRangeOutput values.
// You can construct a concrete instance of `InternetserviceextensionDisableEntryIpRangeInput` via:
//
//	InternetserviceextensionDisableEntryIpRangeArgs{...}
type InternetserviceextensionDisableEntryIpRangeInput interface {
	pulumi.Input

	ToInternetserviceextensionDisableEntryIpRangeOutput() InternetserviceextensionDisableEntryIpRangeOutput
	ToInternetserviceextensionDisableEntryIpRangeOutputWithContext(context.Context) InternetserviceextensionDisableEntryIpRangeOutput
}

type InternetserviceextensionDisableEntryIpRangeArgs struct {
	// End IP address.
	//
	// The `ip6Range` block supports:
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// Disable entry range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start IP address.
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (InternetserviceextensionDisableEntryIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (i InternetserviceextensionDisableEntryIpRangeArgs) ToInternetserviceextensionDisableEntryIpRangeOutput() InternetserviceextensionDisableEntryIpRangeOutput {
	return i.ToInternetserviceextensionDisableEntryIpRangeOutputWithContext(context.Background())
}

func (i InternetserviceextensionDisableEntryIpRangeArgs) ToInternetserviceextensionDisableEntryIpRangeOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionDisableEntryIpRangeOutput)
}

// InternetserviceextensionDisableEntryIpRangeArrayInput is an input type that accepts InternetserviceextensionDisableEntryIpRangeArray and InternetserviceextensionDisableEntryIpRangeArrayOutput values.
// You can construct a concrete instance of `InternetserviceextensionDisableEntryIpRangeArrayInput` via:
//
//	InternetserviceextensionDisableEntryIpRangeArray{ InternetserviceextensionDisableEntryIpRangeArgs{...} }
type InternetserviceextensionDisableEntryIpRangeArrayInput interface {
	pulumi.Input

	ToInternetserviceextensionDisableEntryIpRangeArrayOutput() InternetserviceextensionDisableEntryIpRangeArrayOutput
	ToInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(context.Context) InternetserviceextensionDisableEntryIpRangeArrayOutput
}

type InternetserviceextensionDisableEntryIpRangeArray []InternetserviceextensionDisableEntryIpRangeInput

func (InternetserviceextensionDisableEntryIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (i InternetserviceextensionDisableEntryIpRangeArray) ToInternetserviceextensionDisableEntryIpRangeArrayOutput() InternetserviceextensionDisableEntryIpRangeArrayOutput {
	return i.ToInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(context.Background())
}

func (i InternetserviceextensionDisableEntryIpRangeArray) ToInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionDisableEntryIpRangeArrayOutput)
}

type InternetserviceextensionDisableEntryIpRangeOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionDisableEntryIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (o InternetserviceextensionDisableEntryIpRangeOutput) ToInternetserviceextensionDisableEntryIpRangeOutput() InternetserviceextensionDisableEntryIpRangeOutput {
	return o
}

func (o InternetserviceextensionDisableEntryIpRangeOutput) ToInternetserviceextensionDisableEntryIpRangeOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryIpRangeOutput {
	return o
}

// End IP address.
//
// The `ip6Range` block supports:
func (o InternetserviceextensionDisableEntryIpRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntryIpRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// Disable entry range ID.
func (o InternetserviceextensionDisableEntryIpRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntryIpRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start IP address.
func (o InternetserviceextensionDisableEntryIpRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntryIpRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type InternetserviceextensionDisableEntryIpRangeArrayOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionDisableEntryIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (o InternetserviceextensionDisableEntryIpRangeArrayOutput) ToInternetserviceextensionDisableEntryIpRangeArrayOutput() InternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o
}

func (o InternetserviceextensionDisableEntryIpRangeArrayOutput) ToInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o
}

func (o InternetserviceextensionDisableEntryIpRangeArrayOutput) Index(i pulumi.IntInput) InternetserviceextensionDisableEntryIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetserviceextensionDisableEntryIpRange {
		return vs[0].([]InternetserviceextensionDisableEntryIpRange)[vs[1].(int)]
	}).(InternetserviceextensionDisableEntryIpRangeOutput)
}

type InternetserviceextensionDisableEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort *int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id *int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort *int `pulumi:"startPort"`
}

// InternetserviceextensionDisableEntryPortRangeInput is an input type that accepts InternetserviceextensionDisableEntryPortRangeArgs and InternetserviceextensionDisableEntryPortRangeOutput values.
// You can construct a concrete instance of `InternetserviceextensionDisableEntryPortRangeInput` via:
//
//	InternetserviceextensionDisableEntryPortRangeArgs{...}
type InternetserviceextensionDisableEntryPortRangeInput interface {
	pulumi.Input

	ToInternetserviceextensionDisableEntryPortRangeOutput() InternetserviceextensionDisableEntryPortRangeOutput
	ToInternetserviceextensionDisableEntryPortRangeOutputWithContext(context.Context) InternetserviceextensionDisableEntryPortRangeOutput
}

type InternetserviceextensionDisableEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (InternetserviceextensionDisableEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (i InternetserviceextensionDisableEntryPortRangeArgs) ToInternetserviceextensionDisableEntryPortRangeOutput() InternetserviceextensionDisableEntryPortRangeOutput {
	return i.ToInternetserviceextensionDisableEntryPortRangeOutputWithContext(context.Background())
}

func (i InternetserviceextensionDisableEntryPortRangeArgs) ToInternetserviceextensionDisableEntryPortRangeOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionDisableEntryPortRangeOutput)
}

// InternetserviceextensionDisableEntryPortRangeArrayInput is an input type that accepts InternetserviceextensionDisableEntryPortRangeArray and InternetserviceextensionDisableEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `InternetserviceextensionDisableEntryPortRangeArrayInput` via:
//
//	InternetserviceextensionDisableEntryPortRangeArray{ InternetserviceextensionDisableEntryPortRangeArgs{...} }
type InternetserviceextensionDisableEntryPortRangeArrayInput interface {
	pulumi.Input

	ToInternetserviceextensionDisableEntryPortRangeArrayOutput() InternetserviceextensionDisableEntryPortRangeArrayOutput
	ToInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(context.Context) InternetserviceextensionDisableEntryPortRangeArrayOutput
}

type InternetserviceextensionDisableEntryPortRangeArray []InternetserviceextensionDisableEntryPortRangeInput

func (InternetserviceextensionDisableEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (i InternetserviceextensionDisableEntryPortRangeArray) ToInternetserviceextensionDisableEntryPortRangeArrayOutput() InternetserviceextensionDisableEntryPortRangeArrayOutput {
	return i.ToInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i InternetserviceextensionDisableEntryPortRangeArray) ToInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionDisableEntryPortRangeArrayOutput)
}

type InternetserviceextensionDisableEntryPortRangeOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionDisableEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (o InternetserviceextensionDisableEntryPortRangeOutput) ToInternetserviceextensionDisableEntryPortRangeOutput() InternetserviceextensionDisableEntryPortRangeOutput {
	return o
}

func (o InternetserviceextensionDisableEntryPortRangeOutput) ToInternetserviceextensionDisableEntryPortRangeOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o InternetserviceextensionDisableEntryPortRangeOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntryPortRange) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Custom entry port range ID.
func (o InternetserviceextensionDisableEntryPortRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntryPortRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o InternetserviceextensionDisableEntryPortRangeOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionDisableEntryPortRange) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type InternetserviceextensionDisableEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionDisableEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (o InternetserviceextensionDisableEntryPortRangeArrayOutput) ToInternetserviceextensionDisableEntryPortRangeArrayOutput() InternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o
}

func (o InternetserviceextensionDisableEntryPortRangeArrayOutput) ToInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(ctx context.Context) InternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o
}

func (o InternetserviceextensionDisableEntryPortRangeArrayOutput) Index(i pulumi.IntInput) InternetserviceextensionDisableEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetserviceextensionDisableEntryPortRange {
		return vs[0].([]InternetserviceextensionDisableEntryPortRange)[vs[1].(int)]
	}).(InternetserviceextensionDisableEntryPortRangeOutput)
}

type InternetserviceextensionEntry struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s []InternetserviceextensionEntryDst6 `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts []InternetserviceextensionEntryDst `pulumi:"dsts"`
	// Entry ID(1-255).
	Id *int `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges []InternetserviceextensionEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol *int `pulumi:"protocol"`
}

// InternetserviceextensionEntryInput is an input type that accepts InternetserviceextensionEntryArgs and InternetserviceextensionEntryOutput values.
// You can construct a concrete instance of `InternetserviceextensionEntryInput` via:
//
//	InternetserviceextensionEntryArgs{...}
type InternetserviceextensionEntryInput interface {
	pulumi.Input

	ToInternetserviceextensionEntryOutput() InternetserviceextensionEntryOutput
	ToInternetserviceextensionEntryOutputWithContext(context.Context) InternetserviceextensionEntryOutput
}

type InternetserviceextensionEntryArgs struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s InternetserviceextensionEntryDst6ArrayInput `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts InternetserviceextensionEntryDstArrayInput `pulumi:"dsts"`
	// Entry ID(1-255).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges InternetserviceextensionEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
}

func (InternetserviceextensionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionEntry)(nil)).Elem()
}

func (i InternetserviceextensionEntryArgs) ToInternetserviceextensionEntryOutput() InternetserviceextensionEntryOutput {
	return i.ToInternetserviceextensionEntryOutputWithContext(context.Background())
}

func (i InternetserviceextensionEntryArgs) ToInternetserviceextensionEntryOutputWithContext(ctx context.Context) InternetserviceextensionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionEntryOutput)
}

// InternetserviceextensionEntryArrayInput is an input type that accepts InternetserviceextensionEntryArray and InternetserviceextensionEntryArrayOutput values.
// You can construct a concrete instance of `InternetserviceextensionEntryArrayInput` via:
//
//	InternetserviceextensionEntryArray{ InternetserviceextensionEntryArgs{...} }
type InternetserviceextensionEntryArrayInput interface {
	pulumi.Input

	ToInternetserviceextensionEntryArrayOutput() InternetserviceextensionEntryArrayOutput
	ToInternetserviceextensionEntryArrayOutputWithContext(context.Context) InternetserviceextensionEntryArrayOutput
}

type InternetserviceextensionEntryArray []InternetserviceextensionEntryInput

func (InternetserviceextensionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionEntry)(nil)).Elem()
}

func (i InternetserviceextensionEntryArray) ToInternetserviceextensionEntryArrayOutput() InternetserviceextensionEntryArrayOutput {
	return i.ToInternetserviceextensionEntryArrayOutputWithContext(context.Background())
}

func (i InternetserviceextensionEntryArray) ToInternetserviceextensionEntryArrayOutputWithContext(ctx context.Context) InternetserviceextensionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionEntryArrayOutput)
}

type InternetserviceextensionEntryOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionEntry)(nil)).Elem()
}

func (o InternetserviceextensionEntryOutput) ToInternetserviceextensionEntryOutput() InternetserviceextensionEntryOutput {
	return o
}

func (o InternetserviceextensionEntryOutput) ToInternetserviceextensionEntryOutputWithContext(ctx context.Context) InternetserviceextensionEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
func (o InternetserviceextensionEntryOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionEntry) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
func (o InternetserviceextensionEntryOutput) Dst6s() InternetserviceextensionEntryDst6ArrayOutput {
	return o.ApplyT(func(v InternetserviceextensionEntry) []InternetserviceextensionEntryDst6 { return v.Dst6s }).(InternetserviceextensionEntryDst6ArrayOutput)
}

// Destination address or address group name. The structure of `dst` block is documented below.
func (o InternetserviceextensionEntryOutput) Dsts() InternetserviceextensionEntryDstArrayOutput {
	return o.ApplyT(func(v InternetserviceextensionEntry) []InternetserviceextensionEntryDst { return v.Dsts }).(InternetserviceextensionEntryDstArrayOutput)
}

// Entry ID(1-255).
func (o InternetserviceextensionEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Port ranges in the custom entry. The structure of `portRange` block is documented below.
func (o InternetserviceextensionEntryOutput) PortRanges() InternetserviceextensionEntryPortRangeArrayOutput {
	return o.ApplyT(func(v InternetserviceextensionEntry) []InternetserviceextensionEntryPortRange { return v.PortRanges }).(InternetserviceextensionEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o InternetserviceextensionEntryOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionEntry) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

type InternetserviceextensionEntryArrayOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionEntry)(nil)).Elem()
}

func (o InternetserviceextensionEntryArrayOutput) ToInternetserviceextensionEntryArrayOutput() InternetserviceextensionEntryArrayOutput {
	return o
}

func (o InternetserviceextensionEntryArrayOutput) ToInternetserviceextensionEntryArrayOutputWithContext(ctx context.Context) InternetserviceextensionEntryArrayOutput {
	return o
}

func (o InternetserviceextensionEntryArrayOutput) Index(i pulumi.IntInput) InternetserviceextensionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetserviceextensionEntry {
		return vs[0].([]InternetserviceextensionEntry)[vs[1].(int)]
	}).(InternetserviceextensionEntryOutput)
}

type InternetserviceextensionEntryDst6 struct {
	// Select the destination address6 or address group object from available options.
	Name *string `pulumi:"name"`
}

// InternetserviceextensionEntryDst6Input is an input type that accepts InternetserviceextensionEntryDst6Args and InternetserviceextensionEntryDst6Output values.
// You can construct a concrete instance of `InternetserviceextensionEntryDst6Input` via:
//
//	InternetserviceextensionEntryDst6Args{...}
type InternetserviceextensionEntryDst6Input interface {
	pulumi.Input

	ToInternetserviceextensionEntryDst6Output() InternetserviceextensionEntryDst6Output
	ToInternetserviceextensionEntryDst6OutputWithContext(context.Context) InternetserviceextensionEntryDst6Output
}

type InternetserviceextensionEntryDst6Args struct {
	// Select the destination address6 or address group object from available options.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InternetserviceextensionEntryDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionEntryDst6)(nil)).Elem()
}

func (i InternetserviceextensionEntryDst6Args) ToInternetserviceextensionEntryDst6Output() InternetserviceextensionEntryDst6Output {
	return i.ToInternetserviceextensionEntryDst6OutputWithContext(context.Background())
}

func (i InternetserviceextensionEntryDst6Args) ToInternetserviceextensionEntryDst6OutputWithContext(ctx context.Context) InternetserviceextensionEntryDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionEntryDst6Output)
}

// InternetserviceextensionEntryDst6ArrayInput is an input type that accepts InternetserviceextensionEntryDst6Array and InternetserviceextensionEntryDst6ArrayOutput values.
// You can construct a concrete instance of `InternetserviceextensionEntryDst6ArrayInput` via:
//
//	InternetserviceextensionEntryDst6Array{ InternetserviceextensionEntryDst6Args{...} }
type InternetserviceextensionEntryDst6ArrayInput interface {
	pulumi.Input

	ToInternetserviceextensionEntryDst6ArrayOutput() InternetserviceextensionEntryDst6ArrayOutput
	ToInternetserviceextensionEntryDst6ArrayOutputWithContext(context.Context) InternetserviceextensionEntryDst6ArrayOutput
}

type InternetserviceextensionEntryDst6Array []InternetserviceextensionEntryDst6Input

func (InternetserviceextensionEntryDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionEntryDst6)(nil)).Elem()
}

func (i InternetserviceextensionEntryDst6Array) ToInternetserviceextensionEntryDst6ArrayOutput() InternetserviceextensionEntryDst6ArrayOutput {
	return i.ToInternetserviceextensionEntryDst6ArrayOutputWithContext(context.Background())
}

func (i InternetserviceextensionEntryDst6Array) ToInternetserviceextensionEntryDst6ArrayOutputWithContext(ctx context.Context) InternetserviceextensionEntryDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionEntryDst6ArrayOutput)
}

type InternetserviceextensionEntryDst6Output struct{ *pulumi.OutputState }

func (InternetserviceextensionEntryDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionEntryDst6)(nil)).Elem()
}

func (o InternetserviceextensionEntryDst6Output) ToInternetserviceextensionEntryDst6Output() InternetserviceextensionEntryDst6Output {
	return o
}

func (o InternetserviceextensionEntryDst6Output) ToInternetserviceextensionEntryDst6OutputWithContext(ctx context.Context) InternetserviceextensionEntryDst6Output {
	return o
}

// Select the destination address6 or address group object from available options.
func (o InternetserviceextensionEntryDst6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionEntryDst6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InternetserviceextensionEntryDst6ArrayOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionEntryDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionEntryDst6)(nil)).Elem()
}

func (o InternetserviceextensionEntryDst6ArrayOutput) ToInternetserviceextensionEntryDst6ArrayOutput() InternetserviceextensionEntryDst6ArrayOutput {
	return o
}

func (o InternetserviceextensionEntryDst6ArrayOutput) ToInternetserviceextensionEntryDst6ArrayOutputWithContext(ctx context.Context) InternetserviceextensionEntryDst6ArrayOutput {
	return o
}

func (o InternetserviceextensionEntryDst6ArrayOutput) Index(i pulumi.IntInput) InternetserviceextensionEntryDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetserviceextensionEntryDst6 {
		return vs[0].([]InternetserviceextensionEntryDst6)[vs[1].(int)]
	}).(InternetserviceextensionEntryDst6Output)
}

type InternetserviceextensionEntryDst struct {
	// Select the destination address6 or address group object from available options.
	Name *string `pulumi:"name"`
}

// InternetserviceextensionEntryDstInput is an input type that accepts InternetserviceextensionEntryDstArgs and InternetserviceextensionEntryDstOutput values.
// You can construct a concrete instance of `InternetserviceextensionEntryDstInput` via:
//
//	InternetserviceextensionEntryDstArgs{...}
type InternetserviceextensionEntryDstInput interface {
	pulumi.Input

	ToInternetserviceextensionEntryDstOutput() InternetserviceextensionEntryDstOutput
	ToInternetserviceextensionEntryDstOutputWithContext(context.Context) InternetserviceextensionEntryDstOutput
}

type InternetserviceextensionEntryDstArgs struct {
	// Select the destination address6 or address group object from available options.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InternetserviceextensionEntryDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionEntryDst)(nil)).Elem()
}

func (i InternetserviceextensionEntryDstArgs) ToInternetserviceextensionEntryDstOutput() InternetserviceextensionEntryDstOutput {
	return i.ToInternetserviceextensionEntryDstOutputWithContext(context.Background())
}

func (i InternetserviceextensionEntryDstArgs) ToInternetserviceextensionEntryDstOutputWithContext(ctx context.Context) InternetserviceextensionEntryDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionEntryDstOutput)
}

// InternetserviceextensionEntryDstArrayInput is an input type that accepts InternetserviceextensionEntryDstArray and InternetserviceextensionEntryDstArrayOutput values.
// You can construct a concrete instance of `InternetserviceextensionEntryDstArrayInput` via:
//
//	InternetserviceextensionEntryDstArray{ InternetserviceextensionEntryDstArgs{...} }
type InternetserviceextensionEntryDstArrayInput interface {
	pulumi.Input

	ToInternetserviceextensionEntryDstArrayOutput() InternetserviceextensionEntryDstArrayOutput
	ToInternetserviceextensionEntryDstArrayOutputWithContext(context.Context) InternetserviceextensionEntryDstArrayOutput
}

type InternetserviceextensionEntryDstArray []InternetserviceextensionEntryDstInput

func (InternetserviceextensionEntryDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionEntryDst)(nil)).Elem()
}

func (i InternetserviceextensionEntryDstArray) ToInternetserviceextensionEntryDstArrayOutput() InternetserviceextensionEntryDstArrayOutput {
	return i.ToInternetserviceextensionEntryDstArrayOutputWithContext(context.Background())
}

func (i InternetserviceextensionEntryDstArray) ToInternetserviceextensionEntryDstArrayOutputWithContext(ctx context.Context) InternetserviceextensionEntryDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionEntryDstArrayOutput)
}

type InternetserviceextensionEntryDstOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionEntryDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionEntryDst)(nil)).Elem()
}

func (o InternetserviceextensionEntryDstOutput) ToInternetserviceextensionEntryDstOutput() InternetserviceextensionEntryDstOutput {
	return o
}

func (o InternetserviceextensionEntryDstOutput) ToInternetserviceextensionEntryDstOutputWithContext(ctx context.Context) InternetserviceextensionEntryDstOutput {
	return o
}

// Select the destination address6 or address group object from available options.
func (o InternetserviceextensionEntryDstOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionEntryDst) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InternetserviceextensionEntryDstArrayOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionEntryDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionEntryDst)(nil)).Elem()
}

func (o InternetserviceextensionEntryDstArrayOutput) ToInternetserviceextensionEntryDstArrayOutput() InternetserviceextensionEntryDstArrayOutput {
	return o
}

func (o InternetserviceextensionEntryDstArrayOutput) ToInternetserviceextensionEntryDstArrayOutputWithContext(ctx context.Context) InternetserviceextensionEntryDstArrayOutput {
	return o
}

func (o InternetserviceextensionEntryDstArrayOutput) Index(i pulumi.IntInput) InternetserviceextensionEntryDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetserviceextensionEntryDst {
		return vs[0].([]InternetserviceextensionEntryDst)[vs[1].(int)]
	}).(InternetserviceextensionEntryDstOutput)
}

type InternetserviceextensionEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort *int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id *int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort *int `pulumi:"startPort"`
}

// InternetserviceextensionEntryPortRangeInput is an input type that accepts InternetserviceextensionEntryPortRangeArgs and InternetserviceextensionEntryPortRangeOutput values.
// You can construct a concrete instance of `InternetserviceextensionEntryPortRangeInput` via:
//
//	InternetserviceextensionEntryPortRangeArgs{...}
type InternetserviceextensionEntryPortRangeInput interface {
	pulumi.Input

	ToInternetserviceextensionEntryPortRangeOutput() InternetserviceextensionEntryPortRangeOutput
	ToInternetserviceextensionEntryPortRangeOutputWithContext(context.Context) InternetserviceextensionEntryPortRangeOutput
}

type InternetserviceextensionEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (InternetserviceextensionEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (i InternetserviceextensionEntryPortRangeArgs) ToInternetserviceextensionEntryPortRangeOutput() InternetserviceextensionEntryPortRangeOutput {
	return i.ToInternetserviceextensionEntryPortRangeOutputWithContext(context.Background())
}

func (i InternetserviceextensionEntryPortRangeArgs) ToInternetserviceextensionEntryPortRangeOutputWithContext(ctx context.Context) InternetserviceextensionEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionEntryPortRangeOutput)
}

// InternetserviceextensionEntryPortRangeArrayInput is an input type that accepts InternetserviceextensionEntryPortRangeArray and InternetserviceextensionEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `InternetserviceextensionEntryPortRangeArrayInput` via:
//
//	InternetserviceextensionEntryPortRangeArray{ InternetserviceextensionEntryPortRangeArgs{...} }
type InternetserviceextensionEntryPortRangeArrayInput interface {
	pulumi.Input

	ToInternetserviceextensionEntryPortRangeArrayOutput() InternetserviceextensionEntryPortRangeArrayOutput
	ToInternetserviceextensionEntryPortRangeArrayOutputWithContext(context.Context) InternetserviceextensionEntryPortRangeArrayOutput
}

type InternetserviceextensionEntryPortRangeArray []InternetserviceextensionEntryPortRangeInput

func (InternetserviceextensionEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (i InternetserviceextensionEntryPortRangeArray) ToInternetserviceextensionEntryPortRangeArrayOutput() InternetserviceextensionEntryPortRangeArrayOutput {
	return i.ToInternetserviceextensionEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i InternetserviceextensionEntryPortRangeArray) ToInternetserviceextensionEntryPortRangeArrayOutputWithContext(ctx context.Context) InternetserviceextensionEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetserviceextensionEntryPortRangeArrayOutput)
}

type InternetserviceextensionEntryPortRangeOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (o InternetserviceextensionEntryPortRangeOutput) ToInternetserviceextensionEntryPortRangeOutput() InternetserviceextensionEntryPortRangeOutput {
	return o
}

func (o InternetserviceextensionEntryPortRangeOutput) ToInternetserviceextensionEntryPortRangeOutputWithContext(ctx context.Context) InternetserviceextensionEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o InternetserviceextensionEntryPortRangeOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionEntryPortRange) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Custom entry port range ID.
func (o InternetserviceextensionEntryPortRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionEntryPortRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o InternetserviceextensionEntryPortRangeOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetserviceextensionEntryPortRange) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type InternetserviceextensionEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (InternetserviceextensionEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (o InternetserviceextensionEntryPortRangeArrayOutput) ToInternetserviceextensionEntryPortRangeArrayOutput() InternetserviceextensionEntryPortRangeArrayOutput {
	return o
}

func (o InternetserviceextensionEntryPortRangeArrayOutput) ToInternetserviceextensionEntryPortRangeArrayOutputWithContext(ctx context.Context) InternetserviceextensionEntryPortRangeArrayOutput {
	return o
}

func (o InternetserviceextensionEntryPortRangeArrayOutput) Index(i pulumi.IntInput) InternetserviceextensionEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetserviceextensionEntryPortRange {
		return vs[0].([]InternetserviceextensionEntryPortRange)[vs[1].(int)]
	}).(InternetserviceextensionEntryPortRangeOutput)
}

type InternetservicegroupMember struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// InternetservicegroupMemberInput is an input type that accepts InternetservicegroupMemberArgs and InternetservicegroupMemberOutput values.
// You can construct a concrete instance of `InternetservicegroupMemberInput` via:
//
//	InternetservicegroupMemberArgs{...}
type InternetservicegroupMemberInput interface {
	pulumi.Input

	ToInternetservicegroupMemberOutput() InternetservicegroupMemberOutput
	ToInternetservicegroupMemberOutputWithContext(context.Context) InternetservicegroupMemberOutput
}

type InternetservicegroupMemberArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InternetservicegroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicegroupMember)(nil)).Elem()
}

func (i InternetservicegroupMemberArgs) ToInternetservicegroupMemberOutput() InternetservicegroupMemberOutput {
	return i.ToInternetservicegroupMemberOutputWithContext(context.Background())
}

func (i InternetservicegroupMemberArgs) ToInternetservicegroupMemberOutputWithContext(ctx context.Context) InternetservicegroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicegroupMemberOutput)
}

// InternetservicegroupMemberArrayInput is an input type that accepts InternetservicegroupMemberArray and InternetservicegroupMemberArrayOutput values.
// You can construct a concrete instance of `InternetservicegroupMemberArrayInput` via:
//
//	InternetservicegroupMemberArray{ InternetservicegroupMemberArgs{...} }
type InternetservicegroupMemberArrayInput interface {
	pulumi.Input

	ToInternetservicegroupMemberArrayOutput() InternetservicegroupMemberArrayOutput
	ToInternetservicegroupMemberArrayOutputWithContext(context.Context) InternetservicegroupMemberArrayOutput
}

type InternetservicegroupMemberArray []InternetservicegroupMemberInput

func (InternetservicegroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicegroupMember)(nil)).Elem()
}

func (i InternetservicegroupMemberArray) ToInternetservicegroupMemberArrayOutput() InternetservicegroupMemberArrayOutput {
	return i.ToInternetservicegroupMemberArrayOutputWithContext(context.Background())
}

func (i InternetservicegroupMemberArray) ToInternetservicegroupMemberArrayOutputWithContext(ctx context.Context) InternetservicegroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicegroupMemberArrayOutput)
}

type InternetservicegroupMemberOutput struct{ *pulumi.OutputState }

func (InternetservicegroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicegroupMember)(nil)).Elem()
}

func (o InternetservicegroupMemberOutput) ToInternetservicegroupMemberOutput() InternetservicegroupMemberOutput {
	return o
}

func (o InternetservicegroupMemberOutput) ToInternetservicegroupMemberOutputWithContext(ctx context.Context) InternetservicegroupMemberOutput {
	return o
}

// Internet Service ID.
func (o InternetservicegroupMemberOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicegroupMember) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Internet Service name.
func (o InternetservicegroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetservicegroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InternetservicegroupMemberArrayOutput struct{ *pulumi.OutputState }

func (InternetservicegroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicegroupMember)(nil)).Elem()
}

func (o InternetservicegroupMemberArrayOutput) ToInternetservicegroupMemberArrayOutput() InternetservicegroupMemberArrayOutput {
	return o
}

func (o InternetservicegroupMemberArrayOutput) ToInternetservicegroupMemberArrayOutputWithContext(ctx context.Context) InternetservicegroupMemberArrayOutput {
	return o
}

func (o InternetservicegroupMemberArrayOutput) Index(i pulumi.IntInput) InternetservicegroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetservicegroupMember {
		return vs[0].([]InternetservicegroupMember)[vs[1].(int)]
	}).(InternetservicegroupMemberOutput)
}

type InternetservicesubappSubApp struct {
	// Subapp ID.
	Id *int `pulumi:"id"`
}

// InternetservicesubappSubAppInput is an input type that accepts InternetservicesubappSubAppArgs and InternetservicesubappSubAppOutput values.
// You can construct a concrete instance of `InternetservicesubappSubAppInput` via:
//
//	InternetservicesubappSubAppArgs{...}
type InternetservicesubappSubAppInput interface {
	pulumi.Input

	ToInternetservicesubappSubAppOutput() InternetservicesubappSubAppOutput
	ToInternetservicesubappSubAppOutputWithContext(context.Context) InternetservicesubappSubAppOutput
}

type InternetservicesubappSubAppArgs struct {
	// Subapp ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (InternetservicesubappSubAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicesubappSubApp)(nil)).Elem()
}

func (i InternetservicesubappSubAppArgs) ToInternetservicesubappSubAppOutput() InternetservicesubappSubAppOutput {
	return i.ToInternetservicesubappSubAppOutputWithContext(context.Background())
}

func (i InternetservicesubappSubAppArgs) ToInternetservicesubappSubAppOutputWithContext(ctx context.Context) InternetservicesubappSubAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicesubappSubAppOutput)
}

// InternetservicesubappSubAppArrayInput is an input type that accepts InternetservicesubappSubAppArray and InternetservicesubappSubAppArrayOutput values.
// You can construct a concrete instance of `InternetservicesubappSubAppArrayInput` via:
//
//	InternetservicesubappSubAppArray{ InternetservicesubappSubAppArgs{...} }
type InternetservicesubappSubAppArrayInput interface {
	pulumi.Input

	ToInternetservicesubappSubAppArrayOutput() InternetservicesubappSubAppArrayOutput
	ToInternetservicesubappSubAppArrayOutputWithContext(context.Context) InternetservicesubappSubAppArrayOutput
}

type InternetservicesubappSubAppArray []InternetservicesubappSubAppInput

func (InternetservicesubappSubAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicesubappSubApp)(nil)).Elem()
}

func (i InternetservicesubappSubAppArray) ToInternetservicesubappSubAppArrayOutput() InternetservicesubappSubAppArrayOutput {
	return i.ToInternetservicesubappSubAppArrayOutputWithContext(context.Background())
}

func (i InternetservicesubappSubAppArray) ToInternetservicesubappSubAppArrayOutputWithContext(ctx context.Context) InternetservicesubappSubAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicesubappSubAppArrayOutput)
}

type InternetservicesubappSubAppOutput struct{ *pulumi.OutputState }

func (InternetservicesubappSubAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetservicesubappSubApp)(nil)).Elem()
}

func (o InternetservicesubappSubAppOutput) ToInternetservicesubappSubAppOutput() InternetservicesubappSubAppOutput {
	return o
}

func (o InternetservicesubappSubAppOutput) ToInternetservicesubappSubAppOutputWithContext(ctx context.Context) InternetservicesubappSubAppOutput {
	return o
}

// Subapp ID.
func (o InternetservicesubappSubAppOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InternetservicesubappSubApp) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type InternetservicesubappSubAppArrayOutput struct{ *pulumi.OutputState }

func (InternetservicesubappSubAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InternetservicesubappSubApp)(nil)).Elem()
}

func (o InternetservicesubappSubAppArrayOutput) ToInternetservicesubappSubAppArrayOutput() InternetservicesubappSubAppArrayOutput {
	return o
}

func (o InternetservicesubappSubAppArrayOutput) ToInternetservicesubappSubAppArrayOutputWithContext(ctx context.Context) InternetservicesubappSubAppArrayOutput {
	return o
}

func (o InternetservicesubappSubAppArrayOutput) Index(i pulumi.IntInput) InternetservicesubappSubAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InternetservicesubappSubApp {
		return vs[0].([]InternetservicesubappSubApp)[vs[1].(int)]
	}).(InternetservicesubappSubAppOutput)
}

type Localinpolicy6Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Localinpolicy6DstaddrInput is an input type that accepts Localinpolicy6DstaddrArgs and Localinpolicy6DstaddrOutput values.
// You can construct a concrete instance of `Localinpolicy6DstaddrInput` via:
//
//	Localinpolicy6DstaddrArgs{...}
type Localinpolicy6DstaddrInput interface {
	pulumi.Input

	ToLocalinpolicy6DstaddrOutput() Localinpolicy6DstaddrOutput
	ToLocalinpolicy6DstaddrOutputWithContext(context.Context) Localinpolicy6DstaddrOutput
}

type Localinpolicy6DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Localinpolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Localinpolicy6Dstaddr)(nil)).Elem()
}

func (i Localinpolicy6DstaddrArgs) ToLocalinpolicy6DstaddrOutput() Localinpolicy6DstaddrOutput {
	return i.ToLocalinpolicy6DstaddrOutputWithContext(context.Background())
}

func (i Localinpolicy6DstaddrArgs) ToLocalinpolicy6DstaddrOutputWithContext(ctx context.Context) Localinpolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Localinpolicy6DstaddrOutput)
}

// Localinpolicy6DstaddrArrayInput is an input type that accepts Localinpolicy6DstaddrArray and Localinpolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `Localinpolicy6DstaddrArrayInput` via:
//
//	Localinpolicy6DstaddrArray{ Localinpolicy6DstaddrArgs{...} }
type Localinpolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToLocalinpolicy6DstaddrArrayOutput() Localinpolicy6DstaddrArrayOutput
	ToLocalinpolicy6DstaddrArrayOutputWithContext(context.Context) Localinpolicy6DstaddrArrayOutput
}

type Localinpolicy6DstaddrArray []Localinpolicy6DstaddrInput

func (Localinpolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Localinpolicy6Dstaddr)(nil)).Elem()
}

func (i Localinpolicy6DstaddrArray) ToLocalinpolicy6DstaddrArrayOutput() Localinpolicy6DstaddrArrayOutput {
	return i.ToLocalinpolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i Localinpolicy6DstaddrArray) ToLocalinpolicy6DstaddrArrayOutputWithContext(ctx context.Context) Localinpolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Localinpolicy6DstaddrArrayOutput)
}

type Localinpolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (Localinpolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Localinpolicy6Dstaddr)(nil)).Elem()
}

func (o Localinpolicy6DstaddrOutput) ToLocalinpolicy6DstaddrOutput() Localinpolicy6DstaddrOutput {
	return o
}

func (o Localinpolicy6DstaddrOutput) ToLocalinpolicy6DstaddrOutputWithContext(ctx context.Context) Localinpolicy6DstaddrOutput {
	return o
}

// Address name.
func (o Localinpolicy6DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Localinpolicy6Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Localinpolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (Localinpolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Localinpolicy6Dstaddr)(nil)).Elem()
}

func (o Localinpolicy6DstaddrArrayOutput) ToLocalinpolicy6DstaddrArrayOutput() Localinpolicy6DstaddrArrayOutput {
	return o
}

func (o Localinpolicy6DstaddrArrayOutput) ToLocalinpolicy6DstaddrArrayOutputWithContext(ctx context.Context) Localinpolicy6DstaddrArrayOutput {
	return o
}

func (o Localinpolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) Localinpolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Localinpolicy6Dstaddr {
		return vs[0].([]Localinpolicy6Dstaddr)[vs[1].(int)]
	}).(Localinpolicy6DstaddrOutput)
}

type Localinpolicy6Service struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// Localinpolicy6ServiceInput is an input type that accepts Localinpolicy6ServiceArgs and Localinpolicy6ServiceOutput values.
// You can construct a concrete instance of `Localinpolicy6ServiceInput` via:
//
//	Localinpolicy6ServiceArgs{...}
type Localinpolicy6ServiceInput interface {
	pulumi.Input

	ToLocalinpolicy6ServiceOutput() Localinpolicy6ServiceOutput
	ToLocalinpolicy6ServiceOutputWithContext(context.Context) Localinpolicy6ServiceOutput
}

type Localinpolicy6ServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Localinpolicy6ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Localinpolicy6Service)(nil)).Elem()
}

func (i Localinpolicy6ServiceArgs) ToLocalinpolicy6ServiceOutput() Localinpolicy6ServiceOutput {
	return i.ToLocalinpolicy6ServiceOutputWithContext(context.Background())
}

func (i Localinpolicy6ServiceArgs) ToLocalinpolicy6ServiceOutputWithContext(ctx context.Context) Localinpolicy6ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Localinpolicy6ServiceOutput)
}

// Localinpolicy6ServiceArrayInput is an input type that accepts Localinpolicy6ServiceArray and Localinpolicy6ServiceArrayOutput values.
// You can construct a concrete instance of `Localinpolicy6ServiceArrayInput` via:
//
//	Localinpolicy6ServiceArray{ Localinpolicy6ServiceArgs{...} }
type Localinpolicy6ServiceArrayInput interface {
	pulumi.Input

	ToLocalinpolicy6ServiceArrayOutput() Localinpolicy6ServiceArrayOutput
	ToLocalinpolicy6ServiceArrayOutputWithContext(context.Context) Localinpolicy6ServiceArrayOutput
}

type Localinpolicy6ServiceArray []Localinpolicy6ServiceInput

func (Localinpolicy6ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Localinpolicy6Service)(nil)).Elem()
}

func (i Localinpolicy6ServiceArray) ToLocalinpolicy6ServiceArrayOutput() Localinpolicy6ServiceArrayOutput {
	return i.ToLocalinpolicy6ServiceArrayOutputWithContext(context.Background())
}

func (i Localinpolicy6ServiceArray) ToLocalinpolicy6ServiceArrayOutputWithContext(ctx context.Context) Localinpolicy6ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Localinpolicy6ServiceArrayOutput)
}

type Localinpolicy6ServiceOutput struct{ *pulumi.OutputState }

func (Localinpolicy6ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Localinpolicy6Service)(nil)).Elem()
}

func (o Localinpolicy6ServiceOutput) ToLocalinpolicy6ServiceOutput() Localinpolicy6ServiceOutput {
	return o
}

func (o Localinpolicy6ServiceOutput) ToLocalinpolicy6ServiceOutputWithContext(ctx context.Context) Localinpolicy6ServiceOutput {
	return o
}

// Service name.
func (o Localinpolicy6ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Localinpolicy6Service) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Localinpolicy6ServiceArrayOutput struct{ *pulumi.OutputState }

func (Localinpolicy6ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Localinpolicy6Service)(nil)).Elem()
}

func (o Localinpolicy6ServiceArrayOutput) ToLocalinpolicy6ServiceArrayOutput() Localinpolicy6ServiceArrayOutput {
	return o
}

func (o Localinpolicy6ServiceArrayOutput) ToLocalinpolicy6ServiceArrayOutputWithContext(ctx context.Context) Localinpolicy6ServiceArrayOutput {
	return o
}

func (o Localinpolicy6ServiceArrayOutput) Index(i pulumi.IntInput) Localinpolicy6ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Localinpolicy6Service {
		return vs[0].([]Localinpolicy6Service)[vs[1].(int)]
	}).(Localinpolicy6ServiceOutput)
}

type Localinpolicy6Srcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Localinpolicy6SrcaddrInput is an input type that accepts Localinpolicy6SrcaddrArgs and Localinpolicy6SrcaddrOutput values.
// You can construct a concrete instance of `Localinpolicy6SrcaddrInput` via:
//
//	Localinpolicy6SrcaddrArgs{...}
type Localinpolicy6SrcaddrInput interface {
	pulumi.Input

	ToLocalinpolicy6SrcaddrOutput() Localinpolicy6SrcaddrOutput
	ToLocalinpolicy6SrcaddrOutputWithContext(context.Context) Localinpolicy6SrcaddrOutput
}

type Localinpolicy6SrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Localinpolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Localinpolicy6Srcaddr)(nil)).Elem()
}

func (i Localinpolicy6SrcaddrArgs) ToLocalinpolicy6SrcaddrOutput() Localinpolicy6SrcaddrOutput {
	return i.ToLocalinpolicy6SrcaddrOutputWithContext(context.Background())
}

func (i Localinpolicy6SrcaddrArgs) ToLocalinpolicy6SrcaddrOutputWithContext(ctx context.Context) Localinpolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Localinpolicy6SrcaddrOutput)
}

// Localinpolicy6SrcaddrArrayInput is an input type that accepts Localinpolicy6SrcaddrArray and Localinpolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `Localinpolicy6SrcaddrArrayInput` via:
//
//	Localinpolicy6SrcaddrArray{ Localinpolicy6SrcaddrArgs{...} }
type Localinpolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToLocalinpolicy6SrcaddrArrayOutput() Localinpolicy6SrcaddrArrayOutput
	ToLocalinpolicy6SrcaddrArrayOutputWithContext(context.Context) Localinpolicy6SrcaddrArrayOutput
}

type Localinpolicy6SrcaddrArray []Localinpolicy6SrcaddrInput

func (Localinpolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Localinpolicy6Srcaddr)(nil)).Elem()
}

func (i Localinpolicy6SrcaddrArray) ToLocalinpolicy6SrcaddrArrayOutput() Localinpolicy6SrcaddrArrayOutput {
	return i.ToLocalinpolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i Localinpolicy6SrcaddrArray) ToLocalinpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) Localinpolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Localinpolicy6SrcaddrArrayOutput)
}

type Localinpolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (Localinpolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Localinpolicy6Srcaddr)(nil)).Elem()
}

func (o Localinpolicy6SrcaddrOutput) ToLocalinpolicy6SrcaddrOutput() Localinpolicy6SrcaddrOutput {
	return o
}

func (o Localinpolicy6SrcaddrOutput) ToLocalinpolicy6SrcaddrOutputWithContext(ctx context.Context) Localinpolicy6SrcaddrOutput {
	return o
}

// Address name.
func (o Localinpolicy6SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Localinpolicy6Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Localinpolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (Localinpolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Localinpolicy6Srcaddr)(nil)).Elem()
}

func (o Localinpolicy6SrcaddrArrayOutput) ToLocalinpolicy6SrcaddrArrayOutput() Localinpolicy6SrcaddrArrayOutput {
	return o
}

func (o Localinpolicy6SrcaddrArrayOutput) ToLocalinpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) Localinpolicy6SrcaddrArrayOutput {
	return o
}

func (o Localinpolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) Localinpolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Localinpolicy6Srcaddr {
		return vs[0].([]Localinpolicy6Srcaddr)[vs[1].(int)]
	}).(Localinpolicy6SrcaddrOutput)
}

type LocalinpolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// LocalinpolicyDstaddrInput is an input type that accepts LocalinpolicyDstaddrArgs and LocalinpolicyDstaddrOutput values.
// You can construct a concrete instance of `LocalinpolicyDstaddrInput` via:
//
//	LocalinpolicyDstaddrArgs{...}
type LocalinpolicyDstaddrInput interface {
	pulumi.Input

	ToLocalinpolicyDstaddrOutput() LocalinpolicyDstaddrOutput
	ToLocalinpolicyDstaddrOutputWithContext(context.Context) LocalinpolicyDstaddrOutput
}

type LocalinpolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LocalinpolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalinpolicyDstaddr)(nil)).Elem()
}

func (i LocalinpolicyDstaddrArgs) ToLocalinpolicyDstaddrOutput() LocalinpolicyDstaddrOutput {
	return i.ToLocalinpolicyDstaddrOutputWithContext(context.Background())
}

func (i LocalinpolicyDstaddrArgs) ToLocalinpolicyDstaddrOutputWithContext(ctx context.Context) LocalinpolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalinpolicyDstaddrOutput)
}

// LocalinpolicyDstaddrArrayInput is an input type that accepts LocalinpolicyDstaddrArray and LocalinpolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `LocalinpolicyDstaddrArrayInput` via:
//
//	LocalinpolicyDstaddrArray{ LocalinpolicyDstaddrArgs{...} }
type LocalinpolicyDstaddrArrayInput interface {
	pulumi.Input

	ToLocalinpolicyDstaddrArrayOutput() LocalinpolicyDstaddrArrayOutput
	ToLocalinpolicyDstaddrArrayOutputWithContext(context.Context) LocalinpolicyDstaddrArrayOutput
}

type LocalinpolicyDstaddrArray []LocalinpolicyDstaddrInput

func (LocalinpolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalinpolicyDstaddr)(nil)).Elem()
}

func (i LocalinpolicyDstaddrArray) ToLocalinpolicyDstaddrArrayOutput() LocalinpolicyDstaddrArrayOutput {
	return i.ToLocalinpolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i LocalinpolicyDstaddrArray) ToLocalinpolicyDstaddrArrayOutputWithContext(ctx context.Context) LocalinpolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalinpolicyDstaddrArrayOutput)
}

type LocalinpolicyDstaddrOutput struct{ *pulumi.OutputState }

func (LocalinpolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalinpolicyDstaddr)(nil)).Elem()
}

func (o LocalinpolicyDstaddrOutput) ToLocalinpolicyDstaddrOutput() LocalinpolicyDstaddrOutput {
	return o
}

func (o LocalinpolicyDstaddrOutput) ToLocalinpolicyDstaddrOutputWithContext(ctx context.Context) LocalinpolicyDstaddrOutput {
	return o
}

// Address name.
func (o LocalinpolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalinpolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LocalinpolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (LocalinpolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalinpolicyDstaddr)(nil)).Elem()
}

func (o LocalinpolicyDstaddrArrayOutput) ToLocalinpolicyDstaddrArrayOutput() LocalinpolicyDstaddrArrayOutput {
	return o
}

func (o LocalinpolicyDstaddrArrayOutput) ToLocalinpolicyDstaddrArrayOutputWithContext(ctx context.Context) LocalinpolicyDstaddrArrayOutput {
	return o
}

func (o LocalinpolicyDstaddrArrayOutput) Index(i pulumi.IntInput) LocalinpolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocalinpolicyDstaddr {
		return vs[0].([]LocalinpolicyDstaddr)[vs[1].(int)]
	}).(LocalinpolicyDstaddrOutput)
}

type LocalinpolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// LocalinpolicyServiceInput is an input type that accepts LocalinpolicyServiceArgs and LocalinpolicyServiceOutput values.
// You can construct a concrete instance of `LocalinpolicyServiceInput` via:
//
//	LocalinpolicyServiceArgs{...}
type LocalinpolicyServiceInput interface {
	pulumi.Input

	ToLocalinpolicyServiceOutput() LocalinpolicyServiceOutput
	ToLocalinpolicyServiceOutputWithContext(context.Context) LocalinpolicyServiceOutput
}

type LocalinpolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LocalinpolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalinpolicyService)(nil)).Elem()
}

func (i LocalinpolicyServiceArgs) ToLocalinpolicyServiceOutput() LocalinpolicyServiceOutput {
	return i.ToLocalinpolicyServiceOutputWithContext(context.Background())
}

func (i LocalinpolicyServiceArgs) ToLocalinpolicyServiceOutputWithContext(ctx context.Context) LocalinpolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalinpolicyServiceOutput)
}

// LocalinpolicyServiceArrayInput is an input type that accepts LocalinpolicyServiceArray and LocalinpolicyServiceArrayOutput values.
// You can construct a concrete instance of `LocalinpolicyServiceArrayInput` via:
//
//	LocalinpolicyServiceArray{ LocalinpolicyServiceArgs{...} }
type LocalinpolicyServiceArrayInput interface {
	pulumi.Input

	ToLocalinpolicyServiceArrayOutput() LocalinpolicyServiceArrayOutput
	ToLocalinpolicyServiceArrayOutputWithContext(context.Context) LocalinpolicyServiceArrayOutput
}

type LocalinpolicyServiceArray []LocalinpolicyServiceInput

func (LocalinpolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalinpolicyService)(nil)).Elem()
}

func (i LocalinpolicyServiceArray) ToLocalinpolicyServiceArrayOutput() LocalinpolicyServiceArrayOutput {
	return i.ToLocalinpolicyServiceArrayOutputWithContext(context.Background())
}

func (i LocalinpolicyServiceArray) ToLocalinpolicyServiceArrayOutputWithContext(ctx context.Context) LocalinpolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalinpolicyServiceArrayOutput)
}

type LocalinpolicyServiceOutput struct{ *pulumi.OutputState }

func (LocalinpolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalinpolicyService)(nil)).Elem()
}

func (o LocalinpolicyServiceOutput) ToLocalinpolicyServiceOutput() LocalinpolicyServiceOutput {
	return o
}

func (o LocalinpolicyServiceOutput) ToLocalinpolicyServiceOutputWithContext(ctx context.Context) LocalinpolicyServiceOutput {
	return o
}

// Service name.
func (o LocalinpolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalinpolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LocalinpolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (LocalinpolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalinpolicyService)(nil)).Elem()
}

func (o LocalinpolicyServiceArrayOutput) ToLocalinpolicyServiceArrayOutput() LocalinpolicyServiceArrayOutput {
	return o
}

func (o LocalinpolicyServiceArrayOutput) ToLocalinpolicyServiceArrayOutputWithContext(ctx context.Context) LocalinpolicyServiceArrayOutput {
	return o
}

func (o LocalinpolicyServiceArrayOutput) Index(i pulumi.IntInput) LocalinpolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocalinpolicyService {
		return vs[0].([]LocalinpolicyService)[vs[1].(int)]
	}).(LocalinpolicyServiceOutput)
}

type LocalinpolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// LocalinpolicySrcaddrInput is an input type that accepts LocalinpolicySrcaddrArgs and LocalinpolicySrcaddrOutput values.
// You can construct a concrete instance of `LocalinpolicySrcaddrInput` via:
//
//	LocalinpolicySrcaddrArgs{...}
type LocalinpolicySrcaddrInput interface {
	pulumi.Input

	ToLocalinpolicySrcaddrOutput() LocalinpolicySrcaddrOutput
	ToLocalinpolicySrcaddrOutputWithContext(context.Context) LocalinpolicySrcaddrOutput
}

type LocalinpolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LocalinpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalinpolicySrcaddr)(nil)).Elem()
}

func (i LocalinpolicySrcaddrArgs) ToLocalinpolicySrcaddrOutput() LocalinpolicySrcaddrOutput {
	return i.ToLocalinpolicySrcaddrOutputWithContext(context.Background())
}

func (i LocalinpolicySrcaddrArgs) ToLocalinpolicySrcaddrOutputWithContext(ctx context.Context) LocalinpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalinpolicySrcaddrOutput)
}

// LocalinpolicySrcaddrArrayInput is an input type that accepts LocalinpolicySrcaddrArray and LocalinpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `LocalinpolicySrcaddrArrayInput` via:
//
//	LocalinpolicySrcaddrArray{ LocalinpolicySrcaddrArgs{...} }
type LocalinpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToLocalinpolicySrcaddrArrayOutput() LocalinpolicySrcaddrArrayOutput
	ToLocalinpolicySrcaddrArrayOutputWithContext(context.Context) LocalinpolicySrcaddrArrayOutput
}

type LocalinpolicySrcaddrArray []LocalinpolicySrcaddrInput

func (LocalinpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalinpolicySrcaddr)(nil)).Elem()
}

func (i LocalinpolicySrcaddrArray) ToLocalinpolicySrcaddrArrayOutput() LocalinpolicySrcaddrArrayOutput {
	return i.ToLocalinpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i LocalinpolicySrcaddrArray) ToLocalinpolicySrcaddrArrayOutputWithContext(ctx context.Context) LocalinpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalinpolicySrcaddrArrayOutput)
}

type LocalinpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (LocalinpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalinpolicySrcaddr)(nil)).Elem()
}

func (o LocalinpolicySrcaddrOutput) ToLocalinpolicySrcaddrOutput() LocalinpolicySrcaddrOutput {
	return o
}

func (o LocalinpolicySrcaddrOutput) ToLocalinpolicySrcaddrOutputWithContext(ctx context.Context) LocalinpolicySrcaddrOutput {
	return o
}

// Address name.
func (o LocalinpolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalinpolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LocalinpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (LocalinpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalinpolicySrcaddr)(nil)).Elem()
}

func (o LocalinpolicySrcaddrArrayOutput) ToLocalinpolicySrcaddrArrayOutput() LocalinpolicySrcaddrArrayOutput {
	return o
}

func (o LocalinpolicySrcaddrArrayOutput) ToLocalinpolicySrcaddrArrayOutputWithContext(ctx context.Context) LocalinpolicySrcaddrArrayOutput {
	return o
}

func (o LocalinpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) LocalinpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocalinpolicySrcaddr {
		return vs[0].([]LocalinpolicySrcaddr)[vs[1].(int)]
	}).(LocalinpolicySrcaddrOutput)
}

type Multicastaddress6Tagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []Multicastaddress6TaggingTag `pulumi:"tags"`
}

// Multicastaddress6TaggingInput is an input type that accepts Multicastaddress6TaggingArgs and Multicastaddress6TaggingOutput values.
// You can construct a concrete instance of `Multicastaddress6TaggingInput` via:
//
//	Multicastaddress6TaggingArgs{...}
type Multicastaddress6TaggingInput interface {
	pulumi.Input

	ToMulticastaddress6TaggingOutput() Multicastaddress6TaggingOutput
	ToMulticastaddress6TaggingOutputWithContext(context.Context) Multicastaddress6TaggingOutput
}

type Multicastaddress6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags Multicastaddress6TaggingTagArrayInput `pulumi:"tags"`
}

func (Multicastaddress6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicastaddress6Tagging)(nil)).Elem()
}

func (i Multicastaddress6TaggingArgs) ToMulticastaddress6TaggingOutput() Multicastaddress6TaggingOutput {
	return i.ToMulticastaddress6TaggingOutputWithContext(context.Background())
}

func (i Multicastaddress6TaggingArgs) ToMulticastaddress6TaggingOutputWithContext(ctx context.Context) Multicastaddress6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicastaddress6TaggingOutput)
}

// Multicastaddress6TaggingArrayInput is an input type that accepts Multicastaddress6TaggingArray and Multicastaddress6TaggingArrayOutput values.
// You can construct a concrete instance of `Multicastaddress6TaggingArrayInput` via:
//
//	Multicastaddress6TaggingArray{ Multicastaddress6TaggingArgs{...} }
type Multicastaddress6TaggingArrayInput interface {
	pulumi.Input

	ToMulticastaddress6TaggingArrayOutput() Multicastaddress6TaggingArrayOutput
	ToMulticastaddress6TaggingArrayOutputWithContext(context.Context) Multicastaddress6TaggingArrayOutput
}

type Multicastaddress6TaggingArray []Multicastaddress6TaggingInput

func (Multicastaddress6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicastaddress6Tagging)(nil)).Elem()
}

func (i Multicastaddress6TaggingArray) ToMulticastaddress6TaggingArrayOutput() Multicastaddress6TaggingArrayOutput {
	return i.ToMulticastaddress6TaggingArrayOutputWithContext(context.Background())
}

func (i Multicastaddress6TaggingArray) ToMulticastaddress6TaggingArrayOutputWithContext(ctx context.Context) Multicastaddress6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicastaddress6TaggingArrayOutput)
}

type Multicastaddress6TaggingOutput struct{ *pulumi.OutputState }

func (Multicastaddress6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicastaddress6Tagging)(nil)).Elem()
}

func (o Multicastaddress6TaggingOutput) ToMulticastaddress6TaggingOutput() Multicastaddress6TaggingOutput {
	return o
}

func (o Multicastaddress6TaggingOutput) ToMulticastaddress6TaggingOutputWithContext(ctx context.Context) Multicastaddress6TaggingOutput {
	return o
}

// Tag category.
func (o Multicastaddress6TaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Multicastaddress6Tagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o Multicastaddress6TaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Multicastaddress6Tagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o Multicastaddress6TaggingOutput) Tags() Multicastaddress6TaggingTagArrayOutput {
	return o.ApplyT(func(v Multicastaddress6Tagging) []Multicastaddress6TaggingTag { return v.Tags }).(Multicastaddress6TaggingTagArrayOutput)
}

type Multicastaddress6TaggingArrayOutput struct{ *pulumi.OutputState }

func (Multicastaddress6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicastaddress6Tagging)(nil)).Elem()
}

func (o Multicastaddress6TaggingArrayOutput) ToMulticastaddress6TaggingArrayOutput() Multicastaddress6TaggingArrayOutput {
	return o
}

func (o Multicastaddress6TaggingArrayOutput) ToMulticastaddress6TaggingArrayOutputWithContext(ctx context.Context) Multicastaddress6TaggingArrayOutput {
	return o
}

func (o Multicastaddress6TaggingArrayOutput) Index(i pulumi.IntInput) Multicastaddress6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Multicastaddress6Tagging {
		return vs[0].([]Multicastaddress6Tagging)[vs[1].(int)]
	}).(Multicastaddress6TaggingOutput)
}

type Multicastaddress6TaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// Multicastaddress6TaggingTagInput is an input type that accepts Multicastaddress6TaggingTagArgs and Multicastaddress6TaggingTagOutput values.
// You can construct a concrete instance of `Multicastaddress6TaggingTagInput` via:
//
//	Multicastaddress6TaggingTagArgs{...}
type Multicastaddress6TaggingTagInput interface {
	pulumi.Input

	ToMulticastaddress6TaggingTagOutput() Multicastaddress6TaggingTagOutput
	ToMulticastaddress6TaggingTagOutputWithContext(context.Context) Multicastaddress6TaggingTagOutput
}

type Multicastaddress6TaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Multicastaddress6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicastaddress6TaggingTag)(nil)).Elem()
}

func (i Multicastaddress6TaggingTagArgs) ToMulticastaddress6TaggingTagOutput() Multicastaddress6TaggingTagOutput {
	return i.ToMulticastaddress6TaggingTagOutputWithContext(context.Background())
}

func (i Multicastaddress6TaggingTagArgs) ToMulticastaddress6TaggingTagOutputWithContext(ctx context.Context) Multicastaddress6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicastaddress6TaggingTagOutput)
}

// Multicastaddress6TaggingTagArrayInput is an input type that accepts Multicastaddress6TaggingTagArray and Multicastaddress6TaggingTagArrayOutput values.
// You can construct a concrete instance of `Multicastaddress6TaggingTagArrayInput` via:
//
//	Multicastaddress6TaggingTagArray{ Multicastaddress6TaggingTagArgs{...} }
type Multicastaddress6TaggingTagArrayInput interface {
	pulumi.Input

	ToMulticastaddress6TaggingTagArrayOutput() Multicastaddress6TaggingTagArrayOutput
	ToMulticastaddress6TaggingTagArrayOutputWithContext(context.Context) Multicastaddress6TaggingTagArrayOutput
}

type Multicastaddress6TaggingTagArray []Multicastaddress6TaggingTagInput

func (Multicastaddress6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicastaddress6TaggingTag)(nil)).Elem()
}

func (i Multicastaddress6TaggingTagArray) ToMulticastaddress6TaggingTagArrayOutput() Multicastaddress6TaggingTagArrayOutput {
	return i.ToMulticastaddress6TaggingTagArrayOutputWithContext(context.Background())
}

func (i Multicastaddress6TaggingTagArray) ToMulticastaddress6TaggingTagArrayOutputWithContext(ctx context.Context) Multicastaddress6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicastaddress6TaggingTagArrayOutput)
}

type Multicastaddress6TaggingTagOutput struct{ *pulumi.OutputState }

func (Multicastaddress6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicastaddress6TaggingTag)(nil)).Elem()
}

func (o Multicastaddress6TaggingTagOutput) ToMulticastaddress6TaggingTagOutput() Multicastaddress6TaggingTagOutput {
	return o
}

func (o Multicastaddress6TaggingTagOutput) ToMulticastaddress6TaggingTagOutputWithContext(ctx context.Context) Multicastaddress6TaggingTagOutput {
	return o
}

// Tag name.
func (o Multicastaddress6TaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Multicastaddress6TaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Multicastaddress6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (Multicastaddress6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicastaddress6TaggingTag)(nil)).Elem()
}

func (o Multicastaddress6TaggingTagArrayOutput) ToMulticastaddress6TaggingTagArrayOutput() Multicastaddress6TaggingTagArrayOutput {
	return o
}

func (o Multicastaddress6TaggingTagArrayOutput) ToMulticastaddress6TaggingTagArrayOutputWithContext(ctx context.Context) Multicastaddress6TaggingTagArrayOutput {
	return o
}

func (o Multicastaddress6TaggingTagArrayOutput) Index(i pulumi.IntInput) Multicastaddress6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Multicastaddress6TaggingTag {
		return vs[0].([]Multicastaddress6TaggingTag)[vs[1].(int)]
	}).(Multicastaddress6TaggingTagOutput)
}

type MulticastaddressTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []MulticastaddressTaggingTag `pulumi:"tags"`
}

// MulticastaddressTaggingInput is an input type that accepts MulticastaddressTaggingArgs and MulticastaddressTaggingOutput values.
// You can construct a concrete instance of `MulticastaddressTaggingInput` via:
//
//	MulticastaddressTaggingArgs{...}
type MulticastaddressTaggingInput interface {
	pulumi.Input

	ToMulticastaddressTaggingOutput() MulticastaddressTaggingOutput
	ToMulticastaddressTaggingOutputWithContext(context.Context) MulticastaddressTaggingOutput
}

type MulticastaddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags MulticastaddressTaggingTagArrayInput `pulumi:"tags"`
}

func (MulticastaddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastaddressTagging)(nil)).Elem()
}

func (i MulticastaddressTaggingArgs) ToMulticastaddressTaggingOutput() MulticastaddressTaggingOutput {
	return i.ToMulticastaddressTaggingOutputWithContext(context.Background())
}

func (i MulticastaddressTaggingArgs) ToMulticastaddressTaggingOutputWithContext(ctx context.Context) MulticastaddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastaddressTaggingOutput)
}

// MulticastaddressTaggingArrayInput is an input type that accepts MulticastaddressTaggingArray and MulticastaddressTaggingArrayOutput values.
// You can construct a concrete instance of `MulticastaddressTaggingArrayInput` via:
//
//	MulticastaddressTaggingArray{ MulticastaddressTaggingArgs{...} }
type MulticastaddressTaggingArrayInput interface {
	pulumi.Input

	ToMulticastaddressTaggingArrayOutput() MulticastaddressTaggingArrayOutput
	ToMulticastaddressTaggingArrayOutputWithContext(context.Context) MulticastaddressTaggingArrayOutput
}

type MulticastaddressTaggingArray []MulticastaddressTaggingInput

func (MulticastaddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastaddressTagging)(nil)).Elem()
}

func (i MulticastaddressTaggingArray) ToMulticastaddressTaggingArrayOutput() MulticastaddressTaggingArrayOutput {
	return i.ToMulticastaddressTaggingArrayOutputWithContext(context.Background())
}

func (i MulticastaddressTaggingArray) ToMulticastaddressTaggingArrayOutputWithContext(ctx context.Context) MulticastaddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastaddressTaggingArrayOutput)
}

type MulticastaddressTaggingOutput struct{ *pulumi.OutputState }

func (MulticastaddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastaddressTagging)(nil)).Elem()
}

func (o MulticastaddressTaggingOutput) ToMulticastaddressTaggingOutput() MulticastaddressTaggingOutput {
	return o
}

func (o MulticastaddressTaggingOutput) ToMulticastaddressTaggingOutputWithContext(ctx context.Context) MulticastaddressTaggingOutput {
	return o
}

// Tag category.
func (o MulticastaddressTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastaddressTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o MulticastaddressTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastaddressTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o MulticastaddressTaggingOutput) Tags() MulticastaddressTaggingTagArrayOutput {
	return o.ApplyT(func(v MulticastaddressTagging) []MulticastaddressTaggingTag { return v.Tags }).(MulticastaddressTaggingTagArrayOutput)
}

type MulticastaddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (MulticastaddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastaddressTagging)(nil)).Elem()
}

func (o MulticastaddressTaggingArrayOutput) ToMulticastaddressTaggingArrayOutput() MulticastaddressTaggingArrayOutput {
	return o
}

func (o MulticastaddressTaggingArrayOutput) ToMulticastaddressTaggingArrayOutputWithContext(ctx context.Context) MulticastaddressTaggingArrayOutput {
	return o
}

func (o MulticastaddressTaggingArrayOutput) Index(i pulumi.IntInput) MulticastaddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MulticastaddressTagging {
		return vs[0].([]MulticastaddressTagging)[vs[1].(int)]
	}).(MulticastaddressTaggingOutput)
}

type MulticastaddressTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// MulticastaddressTaggingTagInput is an input type that accepts MulticastaddressTaggingTagArgs and MulticastaddressTaggingTagOutput values.
// You can construct a concrete instance of `MulticastaddressTaggingTagInput` via:
//
//	MulticastaddressTaggingTagArgs{...}
type MulticastaddressTaggingTagInput interface {
	pulumi.Input

	ToMulticastaddressTaggingTagOutput() MulticastaddressTaggingTagOutput
	ToMulticastaddressTaggingTagOutputWithContext(context.Context) MulticastaddressTaggingTagOutput
}

type MulticastaddressTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MulticastaddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastaddressTaggingTag)(nil)).Elem()
}

func (i MulticastaddressTaggingTagArgs) ToMulticastaddressTaggingTagOutput() MulticastaddressTaggingTagOutput {
	return i.ToMulticastaddressTaggingTagOutputWithContext(context.Background())
}

func (i MulticastaddressTaggingTagArgs) ToMulticastaddressTaggingTagOutputWithContext(ctx context.Context) MulticastaddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastaddressTaggingTagOutput)
}

// MulticastaddressTaggingTagArrayInput is an input type that accepts MulticastaddressTaggingTagArray and MulticastaddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `MulticastaddressTaggingTagArrayInput` via:
//
//	MulticastaddressTaggingTagArray{ MulticastaddressTaggingTagArgs{...} }
type MulticastaddressTaggingTagArrayInput interface {
	pulumi.Input

	ToMulticastaddressTaggingTagArrayOutput() MulticastaddressTaggingTagArrayOutput
	ToMulticastaddressTaggingTagArrayOutputWithContext(context.Context) MulticastaddressTaggingTagArrayOutput
}

type MulticastaddressTaggingTagArray []MulticastaddressTaggingTagInput

func (MulticastaddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastaddressTaggingTag)(nil)).Elem()
}

func (i MulticastaddressTaggingTagArray) ToMulticastaddressTaggingTagArrayOutput() MulticastaddressTaggingTagArrayOutput {
	return i.ToMulticastaddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i MulticastaddressTaggingTagArray) ToMulticastaddressTaggingTagArrayOutputWithContext(ctx context.Context) MulticastaddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastaddressTaggingTagArrayOutput)
}

type MulticastaddressTaggingTagOutput struct{ *pulumi.OutputState }

func (MulticastaddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastaddressTaggingTag)(nil)).Elem()
}

func (o MulticastaddressTaggingTagOutput) ToMulticastaddressTaggingTagOutput() MulticastaddressTaggingTagOutput {
	return o
}

func (o MulticastaddressTaggingTagOutput) ToMulticastaddressTaggingTagOutputWithContext(ctx context.Context) MulticastaddressTaggingTagOutput {
	return o
}

// Tag name.
func (o MulticastaddressTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastaddressTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MulticastaddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (MulticastaddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastaddressTaggingTag)(nil)).Elem()
}

func (o MulticastaddressTaggingTagArrayOutput) ToMulticastaddressTaggingTagArrayOutput() MulticastaddressTaggingTagArrayOutput {
	return o
}

func (o MulticastaddressTaggingTagArrayOutput) ToMulticastaddressTaggingTagArrayOutputWithContext(ctx context.Context) MulticastaddressTaggingTagArrayOutput {
	return o
}

func (o MulticastaddressTaggingTagArrayOutput) Index(i pulumi.IntInput) MulticastaddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MulticastaddressTaggingTag {
		return vs[0].([]MulticastaddressTaggingTag)[vs[1].(int)]
	}).(MulticastaddressTaggingTagOutput)
}

type Multicastpolicy6Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Multicastpolicy6DstaddrInput is an input type that accepts Multicastpolicy6DstaddrArgs and Multicastpolicy6DstaddrOutput values.
// You can construct a concrete instance of `Multicastpolicy6DstaddrInput` via:
//
//	Multicastpolicy6DstaddrArgs{...}
type Multicastpolicy6DstaddrInput interface {
	pulumi.Input

	ToMulticastpolicy6DstaddrOutput() Multicastpolicy6DstaddrOutput
	ToMulticastpolicy6DstaddrOutputWithContext(context.Context) Multicastpolicy6DstaddrOutput
}

type Multicastpolicy6DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Multicastpolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicastpolicy6Dstaddr)(nil)).Elem()
}

func (i Multicastpolicy6DstaddrArgs) ToMulticastpolicy6DstaddrOutput() Multicastpolicy6DstaddrOutput {
	return i.ToMulticastpolicy6DstaddrOutputWithContext(context.Background())
}

func (i Multicastpolicy6DstaddrArgs) ToMulticastpolicy6DstaddrOutputWithContext(ctx context.Context) Multicastpolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicastpolicy6DstaddrOutput)
}

// Multicastpolicy6DstaddrArrayInput is an input type that accepts Multicastpolicy6DstaddrArray and Multicastpolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `Multicastpolicy6DstaddrArrayInput` via:
//
//	Multicastpolicy6DstaddrArray{ Multicastpolicy6DstaddrArgs{...} }
type Multicastpolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToMulticastpolicy6DstaddrArrayOutput() Multicastpolicy6DstaddrArrayOutput
	ToMulticastpolicy6DstaddrArrayOutputWithContext(context.Context) Multicastpolicy6DstaddrArrayOutput
}

type Multicastpolicy6DstaddrArray []Multicastpolicy6DstaddrInput

func (Multicastpolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicastpolicy6Dstaddr)(nil)).Elem()
}

func (i Multicastpolicy6DstaddrArray) ToMulticastpolicy6DstaddrArrayOutput() Multicastpolicy6DstaddrArrayOutput {
	return i.ToMulticastpolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i Multicastpolicy6DstaddrArray) ToMulticastpolicy6DstaddrArrayOutputWithContext(ctx context.Context) Multicastpolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicastpolicy6DstaddrArrayOutput)
}

type Multicastpolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (Multicastpolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicastpolicy6Dstaddr)(nil)).Elem()
}

func (o Multicastpolicy6DstaddrOutput) ToMulticastpolicy6DstaddrOutput() Multicastpolicy6DstaddrOutput {
	return o
}

func (o Multicastpolicy6DstaddrOutput) ToMulticastpolicy6DstaddrOutputWithContext(ctx context.Context) Multicastpolicy6DstaddrOutput {
	return o
}

// Address name.
func (o Multicastpolicy6DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Multicastpolicy6Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Multicastpolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (Multicastpolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicastpolicy6Dstaddr)(nil)).Elem()
}

func (o Multicastpolicy6DstaddrArrayOutput) ToMulticastpolicy6DstaddrArrayOutput() Multicastpolicy6DstaddrArrayOutput {
	return o
}

func (o Multicastpolicy6DstaddrArrayOutput) ToMulticastpolicy6DstaddrArrayOutputWithContext(ctx context.Context) Multicastpolicy6DstaddrArrayOutput {
	return o
}

func (o Multicastpolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) Multicastpolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Multicastpolicy6Dstaddr {
		return vs[0].([]Multicastpolicy6Dstaddr)[vs[1].(int)]
	}).(Multicastpolicy6DstaddrOutput)
}

type Multicastpolicy6Srcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Multicastpolicy6SrcaddrInput is an input type that accepts Multicastpolicy6SrcaddrArgs and Multicastpolicy6SrcaddrOutput values.
// You can construct a concrete instance of `Multicastpolicy6SrcaddrInput` via:
//
//	Multicastpolicy6SrcaddrArgs{...}
type Multicastpolicy6SrcaddrInput interface {
	pulumi.Input

	ToMulticastpolicy6SrcaddrOutput() Multicastpolicy6SrcaddrOutput
	ToMulticastpolicy6SrcaddrOutputWithContext(context.Context) Multicastpolicy6SrcaddrOutput
}

type Multicastpolicy6SrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Multicastpolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicastpolicy6Srcaddr)(nil)).Elem()
}

func (i Multicastpolicy6SrcaddrArgs) ToMulticastpolicy6SrcaddrOutput() Multicastpolicy6SrcaddrOutput {
	return i.ToMulticastpolicy6SrcaddrOutputWithContext(context.Background())
}

func (i Multicastpolicy6SrcaddrArgs) ToMulticastpolicy6SrcaddrOutputWithContext(ctx context.Context) Multicastpolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicastpolicy6SrcaddrOutput)
}

// Multicastpolicy6SrcaddrArrayInput is an input type that accepts Multicastpolicy6SrcaddrArray and Multicastpolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `Multicastpolicy6SrcaddrArrayInput` via:
//
//	Multicastpolicy6SrcaddrArray{ Multicastpolicy6SrcaddrArgs{...} }
type Multicastpolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToMulticastpolicy6SrcaddrArrayOutput() Multicastpolicy6SrcaddrArrayOutput
	ToMulticastpolicy6SrcaddrArrayOutputWithContext(context.Context) Multicastpolicy6SrcaddrArrayOutput
}

type Multicastpolicy6SrcaddrArray []Multicastpolicy6SrcaddrInput

func (Multicastpolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicastpolicy6Srcaddr)(nil)).Elem()
}

func (i Multicastpolicy6SrcaddrArray) ToMulticastpolicy6SrcaddrArrayOutput() Multicastpolicy6SrcaddrArrayOutput {
	return i.ToMulticastpolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i Multicastpolicy6SrcaddrArray) ToMulticastpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) Multicastpolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Multicastpolicy6SrcaddrArrayOutput)
}

type Multicastpolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (Multicastpolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Multicastpolicy6Srcaddr)(nil)).Elem()
}

func (o Multicastpolicy6SrcaddrOutput) ToMulticastpolicy6SrcaddrOutput() Multicastpolicy6SrcaddrOutput {
	return o
}

func (o Multicastpolicy6SrcaddrOutput) ToMulticastpolicy6SrcaddrOutputWithContext(ctx context.Context) Multicastpolicy6SrcaddrOutput {
	return o
}

// Address name.
func (o Multicastpolicy6SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Multicastpolicy6Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Multicastpolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (Multicastpolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Multicastpolicy6Srcaddr)(nil)).Elem()
}

func (o Multicastpolicy6SrcaddrArrayOutput) ToMulticastpolicy6SrcaddrArrayOutput() Multicastpolicy6SrcaddrArrayOutput {
	return o
}

func (o Multicastpolicy6SrcaddrArrayOutput) ToMulticastpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) Multicastpolicy6SrcaddrArrayOutput {
	return o
}

func (o Multicastpolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) Multicastpolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Multicastpolicy6Srcaddr {
		return vs[0].([]Multicastpolicy6Srcaddr)[vs[1].(int)]
	}).(Multicastpolicy6SrcaddrOutput)
}

type MulticastpolicyDstaddr struct {
	// Destination address objects.
	Name *string `pulumi:"name"`
}

// MulticastpolicyDstaddrInput is an input type that accepts MulticastpolicyDstaddrArgs and MulticastpolicyDstaddrOutput values.
// You can construct a concrete instance of `MulticastpolicyDstaddrInput` via:
//
//	MulticastpolicyDstaddrArgs{...}
type MulticastpolicyDstaddrInput interface {
	pulumi.Input

	ToMulticastpolicyDstaddrOutput() MulticastpolicyDstaddrOutput
	ToMulticastpolicyDstaddrOutputWithContext(context.Context) MulticastpolicyDstaddrOutput
}

type MulticastpolicyDstaddrArgs struct {
	// Destination address objects.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MulticastpolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastpolicyDstaddr)(nil)).Elem()
}

func (i MulticastpolicyDstaddrArgs) ToMulticastpolicyDstaddrOutput() MulticastpolicyDstaddrOutput {
	return i.ToMulticastpolicyDstaddrOutputWithContext(context.Background())
}

func (i MulticastpolicyDstaddrArgs) ToMulticastpolicyDstaddrOutputWithContext(ctx context.Context) MulticastpolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastpolicyDstaddrOutput)
}

// MulticastpolicyDstaddrArrayInput is an input type that accepts MulticastpolicyDstaddrArray and MulticastpolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `MulticastpolicyDstaddrArrayInput` via:
//
//	MulticastpolicyDstaddrArray{ MulticastpolicyDstaddrArgs{...} }
type MulticastpolicyDstaddrArrayInput interface {
	pulumi.Input

	ToMulticastpolicyDstaddrArrayOutput() MulticastpolicyDstaddrArrayOutput
	ToMulticastpolicyDstaddrArrayOutputWithContext(context.Context) MulticastpolicyDstaddrArrayOutput
}

type MulticastpolicyDstaddrArray []MulticastpolicyDstaddrInput

func (MulticastpolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastpolicyDstaddr)(nil)).Elem()
}

func (i MulticastpolicyDstaddrArray) ToMulticastpolicyDstaddrArrayOutput() MulticastpolicyDstaddrArrayOutput {
	return i.ToMulticastpolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i MulticastpolicyDstaddrArray) ToMulticastpolicyDstaddrArrayOutputWithContext(ctx context.Context) MulticastpolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastpolicyDstaddrArrayOutput)
}

type MulticastpolicyDstaddrOutput struct{ *pulumi.OutputState }

func (MulticastpolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastpolicyDstaddr)(nil)).Elem()
}

func (o MulticastpolicyDstaddrOutput) ToMulticastpolicyDstaddrOutput() MulticastpolicyDstaddrOutput {
	return o
}

func (o MulticastpolicyDstaddrOutput) ToMulticastpolicyDstaddrOutputWithContext(ctx context.Context) MulticastpolicyDstaddrOutput {
	return o
}

// Destination address objects.
func (o MulticastpolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastpolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MulticastpolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (MulticastpolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastpolicyDstaddr)(nil)).Elem()
}

func (o MulticastpolicyDstaddrArrayOutput) ToMulticastpolicyDstaddrArrayOutput() MulticastpolicyDstaddrArrayOutput {
	return o
}

func (o MulticastpolicyDstaddrArrayOutput) ToMulticastpolicyDstaddrArrayOutputWithContext(ctx context.Context) MulticastpolicyDstaddrArrayOutput {
	return o
}

func (o MulticastpolicyDstaddrArrayOutput) Index(i pulumi.IntInput) MulticastpolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MulticastpolicyDstaddr {
		return vs[0].([]MulticastpolicyDstaddr)[vs[1].(int)]
	}).(MulticastpolicyDstaddrOutput)
}

type MulticastpolicySrcaddr struct {
	// Source address objects.
	Name *string `pulumi:"name"`
}

// MulticastpolicySrcaddrInput is an input type that accepts MulticastpolicySrcaddrArgs and MulticastpolicySrcaddrOutput values.
// You can construct a concrete instance of `MulticastpolicySrcaddrInput` via:
//
//	MulticastpolicySrcaddrArgs{...}
type MulticastpolicySrcaddrInput interface {
	pulumi.Input

	ToMulticastpolicySrcaddrOutput() MulticastpolicySrcaddrOutput
	ToMulticastpolicySrcaddrOutputWithContext(context.Context) MulticastpolicySrcaddrOutput
}

type MulticastpolicySrcaddrArgs struct {
	// Source address objects.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MulticastpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastpolicySrcaddr)(nil)).Elem()
}

func (i MulticastpolicySrcaddrArgs) ToMulticastpolicySrcaddrOutput() MulticastpolicySrcaddrOutput {
	return i.ToMulticastpolicySrcaddrOutputWithContext(context.Background())
}

func (i MulticastpolicySrcaddrArgs) ToMulticastpolicySrcaddrOutputWithContext(ctx context.Context) MulticastpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastpolicySrcaddrOutput)
}

// MulticastpolicySrcaddrArrayInput is an input type that accepts MulticastpolicySrcaddrArray and MulticastpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `MulticastpolicySrcaddrArrayInput` via:
//
//	MulticastpolicySrcaddrArray{ MulticastpolicySrcaddrArgs{...} }
type MulticastpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToMulticastpolicySrcaddrArrayOutput() MulticastpolicySrcaddrArrayOutput
	ToMulticastpolicySrcaddrArrayOutputWithContext(context.Context) MulticastpolicySrcaddrArrayOutput
}

type MulticastpolicySrcaddrArray []MulticastpolicySrcaddrInput

func (MulticastpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastpolicySrcaddr)(nil)).Elem()
}

func (i MulticastpolicySrcaddrArray) ToMulticastpolicySrcaddrArrayOutput() MulticastpolicySrcaddrArrayOutput {
	return i.ToMulticastpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i MulticastpolicySrcaddrArray) ToMulticastpolicySrcaddrArrayOutputWithContext(ctx context.Context) MulticastpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MulticastpolicySrcaddrArrayOutput)
}

type MulticastpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (MulticastpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastpolicySrcaddr)(nil)).Elem()
}

func (o MulticastpolicySrcaddrOutput) ToMulticastpolicySrcaddrOutput() MulticastpolicySrcaddrOutput {
	return o
}

func (o MulticastpolicySrcaddrOutput) ToMulticastpolicySrcaddrOutputWithContext(ctx context.Context) MulticastpolicySrcaddrOutput {
	return o
}

// Source address objects.
func (o MulticastpolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MulticastpolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MulticastpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (MulticastpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MulticastpolicySrcaddr)(nil)).Elem()
}

func (o MulticastpolicySrcaddrArrayOutput) ToMulticastpolicySrcaddrArrayOutput() MulticastpolicySrcaddrArrayOutput {
	return o
}

func (o MulticastpolicySrcaddrArrayOutput) ToMulticastpolicySrcaddrArrayOutputWithContext(ctx context.Context) MulticastpolicySrcaddrArrayOutput {
	return o
}

func (o MulticastpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) MulticastpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MulticastpolicySrcaddr {
		return vs[0].([]MulticastpolicySrcaddr)[vs[1].(int)]
	}).(MulticastpolicySrcaddrOutput)
}

type Policy46Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Policy46DstaddrInput is an input type that accepts Policy46DstaddrArgs and Policy46DstaddrOutput values.
// You can construct a concrete instance of `Policy46DstaddrInput` via:
//
//	Policy46DstaddrArgs{...}
type Policy46DstaddrInput interface {
	pulumi.Input

	ToPolicy46DstaddrOutput() Policy46DstaddrOutput
	ToPolicy46DstaddrOutputWithContext(context.Context) Policy46DstaddrOutput
}

type Policy46DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy46DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy46Dstaddr)(nil)).Elem()
}

func (i Policy46DstaddrArgs) ToPolicy46DstaddrOutput() Policy46DstaddrOutput {
	return i.ToPolicy46DstaddrOutputWithContext(context.Background())
}

func (i Policy46DstaddrArgs) ToPolicy46DstaddrOutputWithContext(ctx context.Context) Policy46DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy46DstaddrOutput)
}

// Policy46DstaddrArrayInput is an input type that accepts Policy46DstaddrArray and Policy46DstaddrArrayOutput values.
// You can construct a concrete instance of `Policy46DstaddrArrayInput` via:
//
//	Policy46DstaddrArray{ Policy46DstaddrArgs{...} }
type Policy46DstaddrArrayInput interface {
	pulumi.Input

	ToPolicy46DstaddrArrayOutput() Policy46DstaddrArrayOutput
	ToPolicy46DstaddrArrayOutputWithContext(context.Context) Policy46DstaddrArrayOutput
}

type Policy46DstaddrArray []Policy46DstaddrInput

func (Policy46DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy46Dstaddr)(nil)).Elem()
}

func (i Policy46DstaddrArray) ToPolicy46DstaddrArrayOutput() Policy46DstaddrArrayOutput {
	return i.ToPolicy46DstaddrArrayOutputWithContext(context.Background())
}

func (i Policy46DstaddrArray) ToPolicy46DstaddrArrayOutputWithContext(ctx context.Context) Policy46DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy46DstaddrArrayOutput)
}

type Policy46DstaddrOutput struct{ *pulumi.OutputState }

func (Policy46DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy46Dstaddr)(nil)).Elem()
}

func (o Policy46DstaddrOutput) ToPolicy46DstaddrOutput() Policy46DstaddrOutput {
	return o
}

func (o Policy46DstaddrOutput) ToPolicy46DstaddrOutputWithContext(ctx context.Context) Policy46DstaddrOutput {
	return o
}

// Address name.
func (o Policy46DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy46Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy46DstaddrArrayOutput struct{ *pulumi.OutputState }

func (Policy46DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy46Dstaddr)(nil)).Elem()
}

func (o Policy46DstaddrArrayOutput) ToPolicy46DstaddrArrayOutput() Policy46DstaddrArrayOutput {
	return o
}

func (o Policy46DstaddrArrayOutput) ToPolicy46DstaddrArrayOutputWithContext(ctx context.Context) Policy46DstaddrArrayOutput {
	return o
}

func (o Policy46DstaddrArrayOutput) Index(i pulumi.IntInput) Policy46DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy46Dstaddr {
		return vs[0].([]Policy46Dstaddr)[vs[1].(int)]
	}).(Policy46DstaddrOutput)
}

type Policy46Poolname struct {
	// IP pool name.
	Name *string `pulumi:"name"`
}

// Policy46PoolnameInput is an input type that accepts Policy46PoolnameArgs and Policy46PoolnameOutput values.
// You can construct a concrete instance of `Policy46PoolnameInput` via:
//
//	Policy46PoolnameArgs{...}
type Policy46PoolnameInput interface {
	pulumi.Input

	ToPolicy46PoolnameOutput() Policy46PoolnameOutput
	ToPolicy46PoolnameOutputWithContext(context.Context) Policy46PoolnameOutput
}

type Policy46PoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy46PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy46Poolname)(nil)).Elem()
}

func (i Policy46PoolnameArgs) ToPolicy46PoolnameOutput() Policy46PoolnameOutput {
	return i.ToPolicy46PoolnameOutputWithContext(context.Background())
}

func (i Policy46PoolnameArgs) ToPolicy46PoolnameOutputWithContext(ctx context.Context) Policy46PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy46PoolnameOutput)
}

// Policy46PoolnameArrayInput is an input type that accepts Policy46PoolnameArray and Policy46PoolnameArrayOutput values.
// You can construct a concrete instance of `Policy46PoolnameArrayInput` via:
//
//	Policy46PoolnameArray{ Policy46PoolnameArgs{...} }
type Policy46PoolnameArrayInput interface {
	pulumi.Input

	ToPolicy46PoolnameArrayOutput() Policy46PoolnameArrayOutput
	ToPolicy46PoolnameArrayOutputWithContext(context.Context) Policy46PoolnameArrayOutput
}

type Policy46PoolnameArray []Policy46PoolnameInput

func (Policy46PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy46Poolname)(nil)).Elem()
}

func (i Policy46PoolnameArray) ToPolicy46PoolnameArrayOutput() Policy46PoolnameArrayOutput {
	return i.ToPolicy46PoolnameArrayOutputWithContext(context.Background())
}

func (i Policy46PoolnameArray) ToPolicy46PoolnameArrayOutputWithContext(ctx context.Context) Policy46PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy46PoolnameArrayOutput)
}

type Policy46PoolnameOutput struct{ *pulumi.OutputState }

func (Policy46PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy46Poolname)(nil)).Elem()
}

func (o Policy46PoolnameOutput) ToPolicy46PoolnameOutput() Policy46PoolnameOutput {
	return o
}

func (o Policy46PoolnameOutput) ToPolicy46PoolnameOutputWithContext(ctx context.Context) Policy46PoolnameOutput {
	return o
}

// IP pool name.
func (o Policy46PoolnameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy46Poolname) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy46PoolnameArrayOutput struct{ *pulumi.OutputState }

func (Policy46PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy46Poolname)(nil)).Elem()
}

func (o Policy46PoolnameArrayOutput) ToPolicy46PoolnameArrayOutput() Policy46PoolnameArrayOutput {
	return o
}

func (o Policy46PoolnameArrayOutput) ToPolicy46PoolnameArrayOutputWithContext(ctx context.Context) Policy46PoolnameArrayOutput {
	return o
}

func (o Policy46PoolnameArrayOutput) Index(i pulumi.IntInput) Policy46PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy46Poolname {
		return vs[0].([]Policy46Poolname)[vs[1].(int)]
	}).(Policy46PoolnameOutput)
}

type Policy46Service struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// Policy46ServiceInput is an input type that accepts Policy46ServiceArgs and Policy46ServiceOutput values.
// You can construct a concrete instance of `Policy46ServiceInput` via:
//
//	Policy46ServiceArgs{...}
type Policy46ServiceInput interface {
	pulumi.Input

	ToPolicy46ServiceOutput() Policy46ServiceOutput
	ToPolicy46ServiceOutputWithContext(context.Context) Policy46ServiceOutput
}

type Policy46ServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy46ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy46Service)(nil)).Elem()
}

func (i Policy46ServiceArgs) ToPolicy46ServiceOutput() Policy46ServiceOutput {
	return i.ToPolicy46ServiceOutputWithContext(context.Background())
}

func (i Policy46ServiceArgs) ToPolicy46ServiceOutputWithContext(ctx context.Context) Policy46ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy46ServiceOutput)
}

// Policy46ServiceArrayInput is an input type that accepts Policy46ServiceArray and Policy46ServiceArrayOutput values.
// You can construct a concrete instance of `Policy46ServiceArrayInput` via:
//
//	Policy46ServiceArray{ Policy46ServiceArgs{...} }
type Policy46ServiceArrayInput interface {
	pulumi.Input

	ToPolicy46ServiceArrayOutput() Policy46ServiceArrayOutput
	ToPolicy46ServiceArrayOutputWithContext(context.Context) Policy46ServiceArrayOutput
}

type Policy46ServiceArray []Policy46ServiceInput

func (Policy46ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy46Service)(nil)).Elem()
}

func (i Policy46ServiceArray) ToPolicy46ServiceArrayOutput() Policy46ServiceArrayOutput {
	return i.ToPolicy46ServiceArrayOutputWithContext(context.Background())
}

func (i Policy46ServiceArray) ToPolicy46ServiceArrayOutputWithContext(ctx context.Context) Policy46ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy46ServiceArrayOutput)
}

type Policy46ServiceOutput struct{ *pulumi.OutputState }

func (Policy46ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy46Service)(nil)).Elem()
}

func (o Policy46ServiceOutput) ToPolicy46ServiceOutput() Policy46ServiceOutput {
	return o
}

func (o Policy46ServiceOutput) ToPolicy46ServiceOutputWithContext(ctx context.Context) Policy46ServiceOutput {
	return o
}

// Service name.
func (o Policy46ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy46Service) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy46ServiceArrayOutput struct{ *pulumi.OutputState }

func (Policy46ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy46Service)(nil)).Elem()
}

func (o Policy46ServiceArrayOutput) ToPolicy46ServiceArrayOutput() Policy46ServiceArrayOutput {
	return o
}

func (o Policy46ServiceArrayOutput) ToPolicy46ServiceArrayOutputWithContext(ctx context.Context) Policy46ServiceArrayOutput {
	return o
}

func (o Policy46ServiceArrayOutput) Index(i pulumi.IntInput) Policy46ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy46Service {
		return vs[0].([]Policy46Service)[vs[1].(int)]
	}).(Policy46ServiceOutput)
}

type Policy46Srcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Policy46SrcaddrInput is an input type that accepts Policy46SrcaddrArgs and Policy46SrcaddrOutput values.
// You can construct a concrete instance of `Policy46SrcaddrInput` via:
//
//	Policy46SrcaddrArgs{...}
type Policy46SrcaddrInput interface {
	pulumi.Input

	ToPolicy46SrcaddrOutput() Policy46SrcaddrOutput
	ToPolicy46SrcaddrOutputWithContext(context.Context) Policy46SrcaddrOutput
}

type Policy46SrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy46SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy46Srcaddr)(nil)).Elem()
}

func (i Policy46SrcaddrArgs) ToPolicy46SrcaddrOutput() Policy46SrcaddrOutput {
	return i.ToPolicy46SrcaddrOutputWithContext(context.Background())
}

func (i Policy46SrcaddrArgs) ToPolicy46SrcaddrOutputWithContext(ctx context.Context) Policy46SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy46SrcaddrOutput)
}

// Policy46SrcaddrArrayInput is an input type that accepts Policy46SrcaddrArray and Policy46SrcaddrArrayOutput values.
// You can construct a concrete instance of `Policy46SrcaddrArrayInput` via:
//
//	Policy46SrcaddrArray{ Policy46SrcaddrArgs{...} }
type Policy46SrcaddrArrayInput interface {
	pulumi.Input

	ToPolicy46SrcaddrArrayOutput() Policy46SrcaddrArrayOutput
	ToPolicy46SrcaddrArrayOutputWithContext(context.Context) Policy46SrcaddrArrayOutput
}

type Policy46SrcaddrArray []Policy46SrcaddrInput

func (Policy46SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy46Srcaddr)(nil)).Elem()
}

func (i Policy46SrcaddrArray) ToPolicy46SrcaddrArrayOutput() Policy46SrcaddrArrayOutput {
	return i.ToPolicy46SrcaddrArrayOutputWithContext(context.Background())
}

func (i Policy46SrcaddrArray) ToPolicy46SrcaddrArrayOutputWithContext(ctx context.Context) Policy46SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy46SrcaddrArrayOutput)
}

type Policy46SrcaddrOutput struct{ *pulumi.OutputState }

func (Policy46SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy46Srcaddr)(nil)).Elem()
}

func (o Policy46SrcaddrOutput) ToPolicy46SrcaddrOutput() Policy46SrcaddrOutput {
	return o
}

func (o Policy46SrcaddrOutput) ToPolicy46SrcaddrOutputWithContext(ctx context.Context) Policy46SrcaddrOutput {
	return o
}

// Address name.
func (o Policy46SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy46Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy46SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (Policy46SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy46Srcaddr)(nil)).Elem()
}

func (o Policy46SrcaddrArrayOutput) ToPolicy46SrcaddrArrayOutput() Policy46SrcaddrArrayOutput {
	return o
}

func (o Policy46SrcaddrArrayOutput) ToPolicy46SrcaddrArrayOutputWithContext(ctx context.Context) Policy46SrcaddrArrayOutput {
	return o
}

func (o Policy46SrcaddrArrayOutput) Index(i pulumi.IntInput) Policy46SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy46Srcaddr {
		return vs[0].([]Policy46Srcaddr)[vs[1].(int)]
	}).(Policy46SrcaddrOutput)
}

type Policy64Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Policy64DstaddrInput is an input type that accepts Policy64DstaddrArgs and Policy64DstaddrOutput values.
// You can construct a concrete instance of `Policy64DstaddrInput` via:
//
//	Policy64DstaddrArgs{...}
type Policy64DstaddrInput interface {
	pulumi.Input

	ToPolicy64DstaddrOutput() Policy64DstaddrOutput
	ToPolicy64DstaddrOutputWithContext(context.Context) Policy64DstaddrOutput
}

type Policy64DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy64DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy64Dstaddr)(nil)).Elem()
}

func (i Policy64DstaddrArgs) ToPolicy64DstaddrOutput() Policy64DstaddrOutput {
	return i.ToPolicy64DstaddrOutputWithContext(context.Background())
}

func (i Policy64DstaddrArgs) ToPolicy64DstaddrOutputWithContext(ctx context.Context) Policy64DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy64DstaddrOutput)
}

// Policy64DstaddrArrayInput is an input type that accepts Policy64DstaddrArray and Policy64DstaddrArrayOutput values.
// You can construct a concrete instance of `Policy64DstaddrArrayInput` via:
//
//	Policy64DstaddrArray{ Policy64DstaddrArgs{...} }
type Policy64DstaddrArrayInput interface {
	pulumi.Input

	ToPolicy64DstaddrArrayOutput() Policy64DstaddrArrayOutput
	ToPolicy64DstaddrArrayOutputWithContext(context.Context) Policy64DstaddrArrayOutput
}

type Policy64DstaddrArray []Policy64DstaddrInput

func (Policy64DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy64Dstaddr)(nil)).Elem()
}

func (i Policy64DstaddrArray) ToPolicy64DstaddrArrayOutput() Policy64DstaddrArrayOutput {
	return i.ToPolicy64DstaddrArrayOutputWithContext(context.Background())
}

func (i Policy64DstaddrArray) ToPolicy64DstaddrArrayOutputWithContext(ctx context.Context) Policy64DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy64DstaddrArrayOutput)
}

type Policy64DstaddrOutput struct{ *pulumi.OutputState }

func (Policy64DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy64Dstaddr)(nil)).Elem()
}

func (o Policy64DstaddrOutput) ToPolicy64DstaddrOutput() Policy64DstaddrOutput {
	return o
}

func (o Policy64DstaddrOutput) ToPolicy64DstaddrOutputWithContext(ctx context.Context) Policy64DstaddrOutput {
	return o
}

// Address name.
func (o Policy64DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy64Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy64DstaddrArrayOutput struct{ *pulumi.OutputState }

func (Policy64DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy64Dstaddr)(nil)).Elem()
}

func (o Policy64DstaddrArrayOutput) ToPolicy64DstaddrArrayOutput() Policy64DstaddrArrayOutput {
	return o
}

func (o Policy64DstaddrArrayOutput) ToPolicy64DstaddrArrayOutputWithContext(ctx context.Context) Policy64DstaddrArrayOutput {
	return o
}

func (o Policy64DstaddrArrayOutput) Index(i pulumi.IntInput) Policy64DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy64Dstaddr {
		return vs[0].([]Policy64Dstaddr)[vs[1].(int)]
	}).(Policy64DstaddrOutput)
}

type Policy64Poolname struct {
	// IP pool name.
	Name *string `pulumi:"name"`
}

// Policy64PoolnameInput is an input type that accepts Policy64PoolnameArgs and Policy64PoolnameOutput values.
// You can construct a concrete instance of `Policy64PoolnameInput` via:
//
//	Policy64PoolnameArgs{...}
type Policy64PoolnameInput interface {
	pulumi.Input

	ToPolicy64PoolnameOutput() Policy64PoolnameOutput
	ToPolicy64PoolnameOutputWithContext(context.Context) Policy64PoolnameOutput
}

type Policy64PoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy64PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy64Poolname)(nil)).Elem()
}

func (i Policy64PoolnameArgs) ToPolicy64PoolnameOutput() Policy64PoolnameOutput {
	return i.ToPolicy64PoolnameOutputWithContext(context.Background())
}

func (i Policy64PoolnameArgs) ToPolicy64PoolnameOutputWithContext(ctx context.Context) Policy64PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy64PoolnameOutput)
}

// Policy64PoolnameArrayInput is an input type that accepts Policy64PoolnameArray and Policy64PoolnameArrayOutput values.
// You can construct a concrete instance of `Policy64PoolnameArrayInput` via:
//
//	Policy64PoolnameArray{ Policy64PoolnameArgs{...} }
type Policy64PoolnameArrayInput interface {
	pulumi.Input

	ToPolicy64PoolnameArrayOutput() Policy64PoolnameArrayOutput
	ToPolicy64PoolnameArrayOutputWithContext(context.Context) Policy64PoolnameArrayOutput
}

type Policy64PoolnameArray []Policy64PoolnameInput

func (Policy64PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy64Poolname)(nil)).Elem()
}

func (i Policy64PoolnameArray) ToPolicy64PoolnameArrayOutput() Policy64PoolnameArrayOutput {
	return i.ToPolicy64PoolnameArrayOutputWithContext(context.Background())
}

func (i Policy64PoolnameArray) ToPolicy64PoolnameArrayOutputWithContext(ctx context.Context) Policy64PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy64PoolnameArrayOutput)
}

type Policy64PoolnameOutput struct{ *pulumi.OutputState }

func (Policy64PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy64Poolname)(nil)).Elem()
}

func (o Policy64PoolnameOutput) ToPolicy64PoolnameOutput() Policy64PoolnameOutput {
	return o
}

func (o Policy64PoolnameOutput) ToPolicy64PoolnameOutputWithContext(ctx context.Context) Policy64PoolnameOutput {
	return o
}

// IP pool name.
func (o Policy64PoolnameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy64Poolname) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy64PoolnameArrayOutput struct{ *pulumi.OutputState }

func (Policy64PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy64Poolname)(nil)).Elem()
}

func (o Policy64PoolnameArrayOutput) ToPolicy64PoolnameArrayOutput() Policy64PoolnameArrayOutput {
	return o
}

func (o Policy64PoolnameArrayOutput) ToPolicy64PoolnameArrayOutputWithContext(ctx context.Context) Policy64PoolnameArrayOutput {
	return o
}

func (o Policy64PoolnameArrayOutput) Index(i pulumi.IntInput) Policy64PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy64Poolname {
		return vs[0].([]Policy64Poolname)[vs[1].(int)]
	}).(Policy64PoolnameOutput)
}

type Policy64Service struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Policy64ServiceInput is an input type that accepts Policy64ServiceArgs and Policy64ServiceOutput values.
// You can construct a concrete instance of `Policy64ServiceInput` via:
//
//	Policy64ServiceArgs{...}
type Policy64ServiceInput interface {
	pulumi.Input

	ToPolicy64ServiceOutput() Policy64ServiceOutput
	ToPolicy64ServiceOutputWithContext(context.Context) Policy64ServiceOutput
}

type Policy64ServiceArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy64ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy64Service)(nil)).Elem()
}

func (i Policy64ServiceArgs) ToPolicy64ServiceOutput() Policy64ServiceOutput {
	return i.ToPolicy64ServiceOutputWithContext(context.Background())
}

func (i Policy64ServiceArgs) ToPolicy64ServiceOutputWithContext(ctx context.Context) Policy64ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy64ServiceOutput)
}

// Policy64ServiceArrayInput is an input type that accepts Policy64ServiceArray and Policy64ServiceArrayOutput values.
// You can construct a concrete instance of `Policy64ServiceArrayInput` via:
//
//	Policy64ServiceArray{ Policy64ServiceArgs{...} }
type Policy64ServiceArrayInput interface {
	pulumi.Input

	ToPolicy64ServiceArrayOutput() Policy64ServiceArrayOutput
	ToPolicy64ServiceArrayOutputWithContext(context.Context) Policy64ServiceArrayOutput
}

type Policy64ServiceArray []Policy64ServiceInput

func (Policy64ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy64Service)(nil)).Elem()
}

func (i Policy64ServiceArray) ToPolicy64ServiceArrayOutput() Policy64ServiceArrayOutput {
	return i.ToPolicy64ServiceArrayOutputWithContext(context.Background())
}

func (i Policy64ServiceArray) ToPolicy64ServiceArrayOutputWithContext(ctx context.Context) Policy64ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy64ServiceArrayOutput)
}

type Policy64ServiceOutput struct{ *pulumi.OutputState }

func (Policy64ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy64Service)(nil)).Elem()
}

func (o Policy64ServiceOutput) ToPolicy64ServiceOutput() Policy64ServiceOutput {
	return o
}

func (o Policy64ServiceOutput) ToPolicy64ServiceOutputWithContext(ctx context.Context) Policy64ServiceOutput {
	return o
}

// Address name.
func (o Policy64ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy64Service) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy64ServiceArrayOutput struct{ *pulumi.OutputState }

func (Policy64ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy64Service)(nil)).Elem()
}

func (o Policy64ServiceArrayOutput) ToPolicy64ServiceArrayOutput() Policy64ServiceArrayOutput {
	return o
}

func (o Policy64ServiceArrayOutput) ToPolicy64ServiceArrayOutputWithContext(ctx context.Context) Policy64ServiceArrayOutput {
	return o
}

func (o Policy64ServiceArrayOutput) Index(i pulumi.IntInput) Policy64ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy64Service {
		return vs[0].([]Policy64Service)[vs[1].(int)]
	}).(Policy64ServiceOutput)
}

type Policy64Srcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Policy64SrcaddrInput is an input type that accepts Policy64SrcaddrArgs and Policy64SrcaddrOutput values.
// You can construct a concrete instance of `Policy64SrcaddrInput` via:
//
//	Policy64SrcaddrArgs{...}
type Policy64SrcaddrInput interface {
	pulumi.Input

	ToPolicy64SrcaddrOutput() Policy64SrcaddrOutput
	ToPolicy64SrcaddrOutputWithContext(context.Context) Policy64SrcaddrOutput
}

type Policy64SrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy64SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy64Srcaddr)(nil)).Elem()
}

func (i Policy64SrcaddrArgs) ToPolicy64SrcaddrOutput() Policy64SrcaddrOutput {
	return i.ToPolicy64SrcaddrOutputWithContext(context.Background())
}

func (i Policy64SrcaddrArgs) ToPolicy64SrcaddrOutputWithContext(ctx context.Context) Policy64SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy64SrcaddrOutput)
}

// Policy64SrcaddrArrayInput is an input type that accepts Policy64SrcaddrArray and Policy64SrcaddrArrayOutput values.
// You can construct a concrete instance of `Policy64SrcaddrArrayInput` via:
//
//	Policy64SrcaddrArray{ Policy64SrcaddrArgs{...} }
type Policy64SrcaddrArrayInput interface {
	pulumi.Input

	ToPolicy64SrcaddrArrayOutput() Policy64SrcaddrArrayOutput
	ToPolicy64SrcaddrArrayOutputWithContext(context.Context) Policy64SrcaddrArrayOutput
}

type Policy64SrcaddrArray []Policy64SrcaddrInput

func (Policy64SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy64Srcaddr)(nil)).Elem()
}

func (i Policy64SrcaddrArray) ToPolicy64SrcaddrArrayOutput() Policy64SrcaddrArrayOutput {
	return i.ToPolicy64SrcaddrArrayOutputWithContext(context.Background())
}

func (i Policy64SrcaddrArray) ToPolicy64SrcaddrArrayOutputWithContext(ctx context.Context) Policy64SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy64SrcaddrArrayOutput)
}

type Policy64SrcaddrOutput struct{ *pulumi.OutputState }

func (Policy64SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy64Srcaddr)(nil)).Elem()
}

func (o Policy64SrcaddrOutput) ToPolicy64SrcaddrOutput() Policy64SrcaddrOutput {
	return o
}

func (o Policy64SrcaddrOutput) ToPolicy64SrcaddrOutputWithContext(ctx context.Context) Policy64SrcaddrOutput {
	return o
}

// Address name.
func (o Policy64SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy64Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy64SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (Policy64SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy64Srcaddr)(nil)).Elem()
}

func (o Policy64SrcaddrArrayOutput) ToPolicy64SrcaddrArrayOutput() Policy64SrcaddrArrayOutput {
	return o
}

func (o Policy64SrcaddrArrayOutput) ToPolicy64SrcaddrArrayOutputWithContext(ctx context.Context) Policy64SrcaddrArrayOutput {
	return o
}

func (o Policy64SrcaddrArrayOutput) Index(i pulumi.IntInput) Policy64SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy64Srcaddr {
		return vs[0].([]Policy64Srcaddr)[vs[1].(int)]
	}).(Policy64SrcaddrOutput)
}

type Policy6AppCategory struct {
	// Category IDs.
	Id *int `pulumi:"id"`
}

// Policy6AppCategoryInput is an input type that accepts Policy6AppCategoryArgs and Policy6AppCategoryOutput values.
// You can construct a concrete instance of `Policy6AppCategoryInput` via:
//
//	Policy6AppCategoryArgs{...}
type Policy6AppCategoryInput interface {
	pulumi.Input

	ToPolicy6AppCategoryOutput() Policy6AppCategoryOutput
	ToPolicy6AppCategoryOutputWithContext(context.Context) Policy6AppCategoryOutput
}

type Policy6AppCategoryArgs struct {
	// Category IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Policy6AppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6AppCategory)(nil)).Elem()
}

func (i Policy6AppCategoryArgs) ToPolicy6AppCategoryOutput() Policy6AppCategoryOutput {
	return i.ToPolicy6AppCategoryOutputWithContext(context.Background())
}

func (i Policy6AppCategoryArgs) ToPolicy6AppCategoryOutputWithContext(ctx context.Context) Policy6AppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6AppCategoryOutput)
}

// Policy6AppCategoryArrayInput is an input type that accepts Policy6AppCategoryArray and Policy6AppCategoryArrayOutput values.
// You can construct a concrete instance of `Policy6AppCategoryArrayInput` via:
//
//	Policy6AppCategoryArray{ Policy6AppCategoryArgs{...} }
type Policy6AppCategoryArrayInput interface {
	pulumi.Input

	ToPolicy6AppCategoryArrayOutput() Policy6AppCategoryArrayOutput
	ToPolicy6AppCategoryArrayOutputWithContext(context.Context) Policy6AppCategoryArrayOutput
}

type Policy6AppCategoryArray []Policy6AppCategoryInput

func (Policy6AppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6AppCategory)(nil)).Elem()
}

func (i Policy6AppCategoryArray) ToPolicy6AppCategoryArrayOutput() Policy6AppCategoryArrayOutput {
	return i.ToPolicy6AppCategoryArrayOutputWithContext(context.Background())
}

func (i Policy6AppCategoryArray) ToPolicy6AppCategoryArrayOutputWithContext(ctx context.Context) Policy6AppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6AppCategoryArrayOutput)
}

type Policy6AppCategoryOutput struct{ *pulumi.OutputState }

func (Policy6AppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6AppCategory)(nil)).Elem()
}

func (o Policy6AppCategoryOutput) ToPolicy6AppCategoryOutput() Policy6AppCategoryOutput {
	return o
}

func (o Policy6AppCategoryOutput) ToPolicy6AppCategoryOutputWithContext(ctx context.Context) Policy6AppCategoryOutput {
	return o
}

// Category IDs.
func (o Policy6AppCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Policy6AppCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Policy6AppCategoryArrayOutput struct{ *pulumi.OutputState }

func (Policy6AppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6AppCategory)(nil)).Elem()
}

func (o Policy6AppCategoryArrayOutput) ToPolicy6AppCategoryArrayOutput() Policy6AppCategoryArrayOutput {
	return o
}

func (o Policy6AppCategoryArrayOutput) ToPolicy6AppCategoryArrayOutputWithContext(ctx context.Context) Policy6AppCategoryArrayOutput {
	return o
}

func (o Policy6AppCategoryArrayOutput) Index(i pulumi.IntInput) Policy6AppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6AppCategory {
		return vs[0].([]Policy6AppCategory)[vs[1].(int)]
	}).(Policy6AppCategoryOutput)
}

type Policy6AppGroup struct {
	// Application group names.
	Name *string `pulumi:"name"`
}

// Policy6AppGroupInput is an input type that accepts Policy6AppGroupArgs and Policy6AppGroupOutput values.
// You can construct a concrete instance of `Policy6AppGroupInput` via:
//
//	Policy6AppGroupArgs{...}
type Policy6AppGroupInput interface {
	pulumi.Input

	ToPolicy6AppGroupOutput() Policy6AppGroupOutput
	ToPolicy6AppGroupOutputWithContext(context.Context) Policy6AppGroupOutput
}

type Policy6AppGroupArgs struct {
	// Application group names.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6AppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6AppGroup)(nil)).Elem()
}

func (i Policy6AppGroupArgs) ToPolicy6AppGroupOutput() Policy6AppGroupOutput {
	return i.ToPolicy6AppGroupOutputWithContext(context.Background())
}

func (i Policy6AppGroupArgs) ToPolicy6AppGroupOutputWithContext(ctx context.Context) Policy6AppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6AppGroupOutput)
}

// Policy6AppGroupArrayInput is an input type that accepts Policy6AppGroupArray and Policy6AppGroupArrayOutput values.
// You can construct a concrete instance of `Policy6AppGroupArrayInput` via:
//
//	Policy6AppGroupArray{ Policy6AppGroupArgs{...} }
type Policy6AppGroupArrayInput interface {
	pulumi.Input

	ToPolicy6AppGroupArrayOutput() Policy6AppGroupArrayOutput
	ToPolicy6AppGroupArrayOutputWithContext(context.Context) Policy6AppGroupArrayOutput
}

type Policy6AppGroupArray []Policy6AppGroupInput

func (Policy6AppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6AppGroup)(nil)).Elem()
}

func (i Policy6AppGroupArray) ToPolicy6AppGroupArrayOutput() Policy6AppGroupArrayOutput {
	return i.ToPolicy6AppGroupArrayOutputWithContext(context.Background())
}

func (i Policy6AppGroupArray) ToPolicy6AppGroupArrayOutputWithContext(ctx context.Context) Policy6AppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6AppGroupArrayOutput)
}

type Policy6AppGroupOutput struct{ *pulumi.OutputState }

func (Policy6AppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6AppGroup)(nil)).Elem()
}

func (o Policy6AppGroupOutput) ToPolicy6AppGroupOutput() Policy6AppGroupOutput {
	return o
}

func (o Policy6AppGroupOutput) ToPolicy6AppGroupOutputWithContext(ctx context.Context) Policy6AppGroupOutput {
	return o
}

// Application group names.
func (o Policy6AppGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6AppGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6AppGroupArrayOutput struct{ *pulumi.OutputState }

func (Policy6AppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6AppGroup)(nil)).Elem()
}

func (o Policy6AppGroupArrayOutput) ToPolicy6AppGroupArrayOutput() Policy6AppGroupArrayOutput {
	return o
}

func (o Policy6AppGroupArrayOutput) ToPolicy6AppGroupArrayOutputWithContext(ctx context.Context) Policy6AppGroupArrayOutput {
	return o
}

func (o Policy6AppGroupArrayOutput) Index(i pulumi.IntInput) Policy6AppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6AppGroup {
		return vs[0].([]Policy6AppGroup)[vs[1].(int)]
	}).(Policy6AppGroupOutput)
}

type Policy6Application struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// Policy6ApplicationInput is an input type that accepts Policy6ApplicationArgs and Policy6ApplicationOutput values.
// You can construct a concrete instance of `Policy6ApplicationInput` via:
//
//	Policy6ApplicationArgs{...}
type Policy6ApplicationInput interface {
	pulumi.Input

	ToPolicy6ApplicationOutput() Policy6ApplicationOutput
	ToPolicy6ApplicationOutputWithContext(context.Context) Policy6ApplicationOutput
}

type Policy6ApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Policy6ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Application)(nil)).Elem()
}

func (i Policy6ApplicationArgs) ToPolicy6ApplicationOutput() Policy6ApplicationOutput {
	return i.ToPolicy6ApplicationOutputWithContext(context.Background())
}

func (i Policy6ApplicationArgs) ToPolicy6ApplicationOutputWithContext(ctx context.Context) Policy6ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6ApplicationOutput)
}

// Policy6ApplicationArrayInput is an input type that accepts Policy6ApplicationArray and Policy6ApplicationArrayOutput values.
// You can construct a concrete instance of `Policy6ApplicationArrayInput` via:
//
//	Policy6ApplicationArray{ Policy6ApplicationArgs{...} }
type Policy6ApplicationArrayInput interface {
	pulumi.Input

	ToPolicy6ApplicationArrayOutput() Policy6ApplicationArrayOutput
	ToPolicy6ApplicationArrayOutputWithContext(context.Context) Policy6ApplicationArrayOutput
}

type Policy6ApplicationArray []Policy6ApplicationInput

func (Policy6ApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Application)(nil)).Elem()
}

func (i Policy6ApplicationArray) ToPolicy6ApplicationArrayOutput() Policy6ApplicationArrayOutput {
	return i.ToPolicy6ApplicationArrayOutputWithContext(context.Background())
}

func (i Policy6ApplicationArray) ToPolicy6ApplicationArrayOutputWithContext(ctx context.Context) Policy6ApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6ApplicationArrayOutput)
}

type Policy6ApplicationOutput struct{ *pulumi.OutputState }

func (Policy6ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Application)(nil)).Elem()
}

func (o Policy6ApplicationOutput) ToPolicy6ApplicationOutput() Policy6ApplicationOutput {
	return o
}

func (o Policy6ApplicationOutput) ToPolicy6ApplicationOutputWithContext(ctx context.Context) Policy6ApplicationOutput {
	return o
}

// Application IDs.
func (o Policy6ApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Policy6Application) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Policy6ApplicationArrayOutput struct{ *pulumi.OutputState }

func (Policy6ApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Application)(nil)).Elem()
}

func (o Policy6ApplicationArrayOutput) ToPolicy6ApplicationArrayOutput() Policy6ApplicationArrayOutput {
	return o
}

func (o Policy6ApplicationArrayOutput) ToPolicy6ApplicationArrayOutputWithContext(ctx context.Context) Policy6ApplicationArrayOutput {
	return o
}

func (o Policy6ApplicationArrayOutput) Index(i pulumi.IntInput) Policy6ApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6Application {
		return vs[0].([]Policy6Application)[vs[1].(int)]
	}).(Policy6ApplicationOutput)
}

type Policy6CustomLogField struct {
	// Custom log field.
	FieldId *string `pulumi:"fieldId"`
}

// Policy6CustomLogFieldInput is an input type that accepts Policy6CustomLogFieldArgs and Policy6CustomLogFieldOutput values.
// You can construct a concrete instance of `Policy6CustomLogFieldInput` via:
//
//	Policy6CustomLogFieldArgs{...}
type Policy6CustomLogFieldInput interface {
	pulumi.Input

	ToPolicy6CustomLogFieldOutput() Policy6CustomLogFieldOutput
	ToPolicy6CustomLogFieldOutputWithContext(context.Context) Policy6CustomLogFieldOutput
}

type Policy6CustomLogFieldArgs struct {
	// Custom log field.
	FieldId pulumi.StringPtrInput `pulumi:"fieldId"`
}

func (Policy6CustomLogFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6CustomLogField)(nil)).Elem()
}

func (i Policy6CustomLogFieldArgs) ToPolicy6CustomLogFieldOutput() Policy6CustomLogFieldOutput {
	return i.ToPolicy6CustomLogFieldOutputWithContext(context.Background())
}

func (i Policy6CustomLogFieldArgs) ToPolicy6CustomLogFieldOutputWithContext(ctx context.Context) Policy6CustomLogFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6CustomLogFieldOutput)
}

// Policy6CustomLogFieldArrayInput is an input type that accepts Policy6CustomLogFieldArray and Policy6CustomLogFieldArrayOutput values.
// You can construct a concrete instance of `Policy6CustomLogFieldArrayInput` via:
//
//	Policy6CustomLogFieldArray{ Policy6CustomLogFieldArgs{...} }
type Policy6CustomLogFieldArrayInput interface {
	pulumi.Input

	ToPolicy6CustomLogFieldArrayOutput() Policy6CustomLogFieldArrayOutput
	ToPolicy6CustomLogFieldArrayOutputWithContext(context.Context) Policy6CustomLogFieldArrayOutput
}

type Policy6CustomLogFieldArray []Policy6CustomLogFieldInput

func (Policy6CustomLogFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6CustomLogField)(nil)).Elem()
}

func (i Policy6CustomLogFieldArray) ToPolicy6CustomLogFieldArrayOutput() Policy6CustomLogFieldArrayOutput {
	return i.ToPolicy6CustomLogFieldArrayOutputWithContext(context.Background())
}

func (i Policy6CustomLogFieldArray) ToPolicy6CustomLogFieldArrayOutputWithContext(ctx context.Context) Policy6CustomLogFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6CustomLogFieldArrayOutput)
}

type Policy6CustomLogFieldOutput struct{ *pulumi.OutputState }

func (Policy6CustomLogFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6CustomLogField)(nil)).Elem()
}

func (o Policy6CustomLogFieldOutput) ToPolicy6CustomLogFieldOutput() Policy6CustomLogFieldOutput {
	return o
}

func (o Policy6CustomLogFieldOutput) ToPolicy6CustomLogFieldOutputWithContext(ctx context.Context) Policy6CustomLogFieldOutput {
	return o
}

// Custom log field.
func (o Policy6CustomLogFieldOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6CustomLogField) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

type Policy6CustomLogFieldArrayOutput struct{ *pulumi.OutputState }

func (Policy6CustomLogFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6CustomLogField)(nil)).Elem()
}

func (o Policy6CustomLogFieldArrayOutput) ToPolicy6CustomLogFieldArrayOutput() Policy6CustomLogFieldArrayOutput {
	return o
}

func (o Policy6CustomLogFieldArrayOutput) ToPolicy6CustomLogFieldArrayOutputWithContext(ctx context.Context) Policy6CustomLogFieldArrayOutput {
	return o
}

func (o Policy6CustomLogFieldArrayOutput) Index(i pulumi.IntInput) Policy6CustomLogFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6CustomLogField {
		return vs[0].([]Policy6CustomLogField)[vs[1].(int)]
	}).(Policy6CustomLogFieldOutput)
}

type Policy6Device struct {
	// Device or group name.
	Name *string `pulumi:"name"`
}

// Policy6DeviceInput is an input type that accepts Policy6DeviceArgs and Policy6DeviceOutput values.
// You can construct a concrete instance of `Policy6DeviceInput` via:
//
//	Policy6DeviceArgs{...}
type Policy6DeviceInput interface {
	pulumi.Input

	ToPolicy6DeviceOutput() Policy6DeviceOutput
	ToPolicy6DeviceOutputWithContext(context.Context) Policy6DeviceOutput
}

type Policy6DeviceArgs struct {
	// Device or group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6DeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Device)(nil)).Elem()
}

func (i Policy6DeviceArgs) ToPolicy6DeviceOutput() Policy6DeviceOutput {
	return i.ToPolicy6DeviceOutputWithContext(context.Background())
}

func (i Policy6DeviceArgs) ToPolicy6DeviceOutputWithContext(ctx context.Context) Policy6DeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6DeviceOutput)
}

// Policy6DeviceArrayInput is an input type that accepts Policy6DeviceArray and Policy6DeviceArrayOutput values.
// You can construct a concrete instance of `Policy6DeviceArrayInput` via:
//
//	Policy6DeviceArray{ Policy6DeviceArgs{...} }
type Policy6DeviceArrayInput interface {
	pulumi.Input

	ToPolicy6DeviceArrayOutput() Policy6DeviceArrayOutput
	ToPolicy6DeviceArrayOutputWithContext(context.Context) Policy6DeviceArrayOutput
}

type Policy6DeviceArray []Policy6DeviceInput

func (Policy6DeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Device)(nil)).Elem()
}

func (i Policy6DeviceArray) ToPolicy6DeviceArrayOutput() Policy6DeviceArrayOutput {
	return i.ToPolicy6DeviceArrayOutputWithContext(context.Background())
}

func (i Policy6DeviceArray) ToPolicy6DeviceArrayOutputWithContext(ctx context.Context) Policy6DeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6DeviceArrayOutput)
}

type Policy6DeviceOutput struct{ *pulumi.OutputState }

func (Policy6DeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Device)(nil)).Elem()
}

func (o Policy6DeviceOutput) ToPolicy6DeviceOutput() Policy6DeviceOutput {
	return o
}

func (o Policy6DeviceOutput) ToPolicy6DeviceOutputWithContext(ctx context.Context) Policy6DeviceOutput {
	return o
}

// Device or group name.
func (o Policy6DeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6Device) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6DeviceArrayOutput struct{ *pulumi.OutputState }

func (Policy6DeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Device)(nil)).Elem()
}

func (o Policy6DeviceArrayOutput) ToPolicy6DeviceArrayOutput() Policy6DeviceArrayOutput {
	return o
}

func (o Policy6DeviceArrayOutput) ToPolicy6DeviceArrayOutputWithContext(ctx context.Context) Policy6DeviceArrayOutput {
	return o
}

func (o Policy6DeviceArrayOutput) Index(i pulumi.IntInput) Policy6DeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6Device {
		return vs[0].([]Policy6Device)[vs[1].(int)]
	}).(Policy6DeviceOutput)
}

type Policy6Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Policy6DstaddrInput is an input type that accepts Policy6DstaddrArgs and Policy6DstaddrOutput values.
// You can construct a concrete instance of `Policy6DstaddrInput` via:
//
//	Policy6DstaddrArgs{...}
type Policy6DstaddrInput interface {
	pulumi.Input

	ToPolicy6DstaddrOutput() Policy6DstaddrOutput
	ToPolicy6DstaddrOutputWithContext(context.Context) Policy6DstaddrOutput
}

type Policy6DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Dstaddr)(nil)).Elem()
}

func (i Policy6DstaddrArgs) ToPolicy6DstaddrOutput() Policy6DstaddrOutput {
	return i.ToPolicy6DstaddrOutputWithContext(context.Background())
}

func (i Policy6DstaddrArgs) ToPolicy6DstaddrOutputWithContext(ctx context.Context) Policy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6DstaddrOutput)
}

// Policy6DstaddrArrayInput is an input type that accepts Policy6DstaddrArray and Policy6DstaddrArrayOutput values.
// You can construct a concrete instance of `Policy6DstaddrArrayInput` via:
//
//	Policy6DstaddrArray{ Policy6DstaddrArgs{...} }
type Policy6DstaddrArrayInput interface {
	pulumi.Input

	ToPolicy6DstaddrArrayOutput() Policy6DstaddrArrayOutput
	ToPolicy6DstaddrArrayOutputWithContext(context.Context) Policy6DstaddrArrayOutput
}

type Policy6DstaddrArray []Policy6DstaddrInput

func (Policy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Dstaddr)(nil)).Elem()
}

func (i Policy6DstaddrArray) ToPolicy6DstaddrArrayOutput() Policy6DstaddrArrayOutput {
	return i.ToPolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i Policy6DstaddrArray) ToPolicy6DstaddrArrayOutputWithContext(ctx context.Context) Policy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6DstaddrArrayOutput)
}

type Policy6DstaddrOutput struct{ *pulumi.OutputState }

func (Policy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Dstaddr)(nil)).Elem()
}

func (o Policy6DstaddrOutput) ToPolicy6DstaddrOutput() Policy6DstaddrOutput {
	return o
}

func (o Policy6DstaddrOutput) ToPolicy6DstaddrOutputWithContext(ctx context.Context) Policy6DstaddrOutput {
	return o
}

// Address name.
func (o Policy6DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (Policy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Dstaddr)(nil)).Elem()
}

func (o Policy6DstaddrArrayOutput) ToPolicy6DstaddrArrayOutput() Policy6DstaddrArrayOutput {
	return o
}

func (o Policy6DstaddrArrayOutput) ToPolicy6DstaddrArrayOutputWithContext(ctx context.Context) Policy6DstaddrArrayOutput {
	return o
}

func (o Policy6DstaddrArrayOutput) Index(i pulumi.IntInput) Policy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6Dstaddr {
		return vs[0].([]Policy6Dstaddr)[vs[1].(int)]
	}).(Policy6DstaddrOutput)
}

type Policy6Dstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// Policy6DstintfInput is an input type that accepts Policy6DstintfArgs and Policy6DstintfOutput values.
// You can construct a concrete instance of `Policy6DstintfInput` via:
//
//	Policy6DstintfArgs{...}
type Policy6DstintfInput interface {
	pulumi.Input

	ToPolicy6DstintfOutput() Policy6DstintfOutput
	ToPolicy6DstintfOutputWithContext(context.Context) Policy6DstintfOutput
}

type Policy6DstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6DstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Dstintf)(nil)).Elem()
}

func (i Policy6DstintfArgs) ToPolicy6DstintfOutput() Policy6DstintfOutput {
	return i.ToPolicy6DstintfOutputWithContext(context.Background())
}

func (i Policy6DstintfArgs) ToPolicy6DstintfOutputWithContext(ctx context.Context) Policy6DstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6DstintfOutput)
}

// Policy6DstintfArrayInput is an input type that accepts Policy6DstintfArray and Policy6DstintfArrayOutput values.
// You can construct a concrete instance of `Policy6DstintfArrayInput` via:
//
//	Policy6DstintfArray{ Policy6DstintfArgs{...} }
type Policy6DstintfArrayInput interface {
	pulumi.Input

	ToPolicy6DstintfArrayOutput() Policy6DstintfArrayOutput
	ToPolicy6DstintfArrayOutputWithContext(context.Context) Policy6DstintfArrayOutput
}

type Policy6DstintfArray []Policy6DstintfInput

func (Policy6DstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Dstintf)(nil)).Elem()
}

func (i Policy6DstintfArray) ToPolicy6DstintfArrayOutput() Policy6DstintfArrayOutput {
	return i.ToPolicy6DstintfArrayOutputWithContext(context.Background())
}

func (i Policy6DstintfArray) ToPolicy6DstintfArrayOutputWithContext(ctx context.Context) Policy6DstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6DstintfArrayOutput)
}

type Policy6DstintfOutput struct{ *pulumi.OutputState }

func (Policy6DstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Dstintf)(nil)).Elem()
}

func (o Policy6DstintfOutput) ToPolicy6DstintfOutput() Policy6DstintfOutput {
	return o
}

func (o Policy6DstintfOutput) ToPolicy6DstintfOutputWithContext(ctx context.Context) Policy6DstintfOutput {
	return o
}

// Interface name.
func (o Policy6DstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6Dstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6DstintfArrayOutput struct{ *pulumi.OutputState }

func (Policy6DstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Dstintf)(nil)).Elem()
}

func (o Policy6DstintfArrayOutput) ToPolicy6DstintfArrayOutput() Policy6DstintfArrayOutput {
	return o
}

func (o Policy6DstintfArrayOutput) ToPolicy6DstintfArrayOutputWithContext(ctx context.Context) Policy6DstintfArrayOutput {
	return o
}

func (o Policy6DstintfArrayOutput) Index(i pulumi.IntInput) Policy6DstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6Dstintf {
		return vs[0].([]Policy6Dstintf)[vs[1].(int)]
	}).(Policy6DstintfOutput)
}

type Policy6FssoGroup struct {
	// Names of FSSO groups.
	Name *string `pulumi:"name"`
}

// Policy6FssoGroupInput is an input type that accepts Policy6FssoGroupArgs and Policy6FssoGroupOutput values.
// You can construct a concrete instance of `Policy6FssoGroupInput` via:
//
//	Policy6FssoGroupArgs{...}
type Policy6FssoGroupInput interface {
	pulumi.Input

	ToPolicy6FssoGroupOutput() Policy6FssoGroupOutput
	ToPolicy6FssoGroupOutputWithContext(context.Context) Policy6FssoGroupOutput
}

type Policy6FssoGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6FssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6FssoGroup)(nil)).Elem()
}

func (i Policy6FssoGroupArgs) ToPolicy6FssoGroupOutput() Policy6FssoGroupOutput {
	return i.ToPolicy6FssoGroupOutputWithContext(context.Background())
}

func (i Policy6FssoGroupArgs) ToPolicy6FssoGroupOutputWithContext(ctx context.Context) Policy6FssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6FssoGroupOutput)
}

// Policy6FssoGroupArrayInput is an input type that accepts Policy6FssoGroupArray and Policy6FssoGroupArrayOutput values.
// You can construct a concrete instance of `Policy6FssoGroupArrayInput` via:
//
//	Policy6FssoGroupArray{ Policy6FssoGroupArgs{...} }
type Policy6FssoGroupArrayInput interface {
	pulumi.Input

	ToPolicy6FssoGroupArrayOutput() Policy6FssoGroupArrayOutput
	ToPolicy6FssoGroupArrayOutputWithContext(context.Context) Policy6FssoGroupArrayOutput
}

type Policy6FssoGroupArray []Policy6FssoGroupInput

func (Policy6FssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6FssoGroup)(nil)).Elem()
}

func (i Policy6FssoGroupArray) ToPolicy6FssoGroupArrayOutput() Policy6FssoGroupArrayOutput {
	return i.ToPolicy6FssoGroupArrayOutputWithContext(context.Background())
}

func (i Policy6FssoGroupArray) ToPolicy6FssoGroupArrayOutputWithContext(ctx context.Context) Policy6FssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6FssoGroupArrayOutput)
}

type Policy6FssoGroupOutput struct{ *pulumi.OutputState }

func (Policy6FssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6FssoGroup)(nil)).Elem()
}

func (o Policy6FssoGroupOutput) ToPolicy6FssoGroupOutput() Policy6FssoGroupOutput {
	return o
}

func (o Policy6FssoGroupOutput) ToPolicy6FssoGroupOutputWithContext(ctx context.Context) Policy6FssoGroupOutput {
	return o
}

// Names of FSSO groups.
func (o Policy6FssoGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6FssoGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6FssoGroupArrayOutput struct{ *pulumi.OutputState }

func (Policy6FssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6FssoGroup)(nil)).Elem()
}

func (o Policy6FssoGroupArrayOutput) ToPolicy6FssoGroupArrayOutput() Policy6FssoGroupArrayOutput {
	return o
}

func (o Policy6FssoGroupArrayOutput) ToPolicy6FssoGroupArrayOutputWithContext(ctx context.Context) Policy6FssoGroupArrayOutput {
	return o
}

func (o Policy6FssoGroupArrayOutput) Index(i pulumi.IntInput) Policy6FssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6FssoGroup {
		return vs[0].([]Policy6FssoGroup)[vs[1].(int)]
	}).(Policy6FssoGroupOutput)
}

type Policy6Group struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// Policy6GroupInput is an input type that accepts Policy6GroupArgs and Policy6GroupOutput values.
// You can construct a concrete instance of `Policy6GroupInput` via:
//
//	Policy6GroupArgs{...}
type Policy6GroupInput interface {
	pulumi.Input

	ToPolicy6GroupOutput() Policy6GroupOutput
	ToPolicy6GroupOutputWithContext(context.Context) Policy6GroupOutput
}

type Policy6GroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Group)(nil)).Elem()
}

func (i Policy6GroupArgs) ToPolicy6GroupOutput() Policy6GroupOutput {
	return i.ToPolicy6GroupOutputWithContext(context.Background())
}

func (i Policy6GroupArgs) ToPolicy6GroupOutputWithContext(ctx context.Context) Policy6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6GroupOutput)
}

// Policy6GroupArrayInput is an input type that accepts Policy6GroupArray and Policy6GroupArrayOutput values.
// You can construct a concrete instance of `Policy6GroupArrayInput` via:
//
//	Policy6GroupArray{ Policy6GroupArgs{...} }
type Policy6GroupArrayInput interface {
	pulumi.Input

	ToPolicy6GroupArrayOutput() Policy6GroupArrayOutput
	ToPolicy6GroupArrayOutputWithContext(context.Context) Policy6GroupArrayOutput
}

type Policy6GroupArray []Policy6GroupInput

func (Policy6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Group)(nil)).Elem()
}

func (i Policy6GroupArray) ToPolicy6GroupArrayOutput() Policy6GroupArrayOutput {
	return i.ToPolicy6GroupArrayOutputWithContext(context.Background())
}

func (i Policy6GroupArray) ToPolicy6GroupArrayOutputWithContext(ctx context.Context) Policy6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6GroupArrayOutput)
}

type Policy6GroupOutput struct{ *pulumi.OutputState }

func (Policy6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Group)(nil)).Elem()
}

func (o Policy6GroupOutput) ToPolicy6GroupOutput() Policy6GroupOutput {
	return o
}

func (o Policy6GroupOutput) ToPolicy6GroupOutputWithContext(ctx context.Context) Policy6GroupOutput {
	return o
}

// Group name.
func (o Policy6GroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6Group) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6GroupArrayOutput struct{ *pulumi.OutputState }

func (Policy6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Group)(nil)).Elem()
}

func (o Policy6GroupArrayOutput) ToPolicy6GroupArrayOutput() Policy6GroupArrayOutput {
	return o
}

func (o Policy6GroupArrayOutput) ToPolicy6GroupArrayOutputWithContext(ctx context.Context) Policy6GroupArrayOutput {
	return o
}

func (o Policy6GroupArrayOutput) Index(i pulumi.IntInput) Policy6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6Group {
		return vs[0].([]Policy6Group)[vs[1].(int)]
	}).(Policy6GroupOutput)
}

type Policy6Poolname struct {
	// IP pool name.
	Name *string `pulumi:"name"`
}

// Policy6PoolnameInput is an input type that accepts Policy6PoolnameArgs and Policy6PoolnameOutput values.
// You can construct a concrete instance of `Policy6PoolnameInput` via:
//
//	Policy6PoolnameArgs{...}
type Policy6PoolnameInput interface {
	pulumi.Input

	ToPolicy6PoolnameOutput() Policy6PoolnameOutput
	ToPolicy6PoolnameOutputWithContext(context.Context) Policy6PoolnameOutput
}

type Policy6PoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Poolname)(nil)).Elem()
}

func (i Policy6PoolnameArgs) ToPolicy6PoolnameOutput() Policy6PoolnameOutput {
	return i.ToPolicy6PoolnameOutputWithContext(context.Background())
}

func (i Policy6PoolnameArgs) ToPolicy6PoolnameOutputWithContext(ctx context.Context) Policy6PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6PoolnameOutput)
}

// Policy6PoolnameArrayInput is an input type that accepts Policy6PoolnameArray and Policy6PoolnameArrayOutput values.
// You can construct a concrete instance of `Policy6PoolnameArrayInput` via:
//
//	Policy6PoolnameArray{ Policy6PoolnameArgs{...} }
type Policy6PoolnameArrayInput interface {
	pulumi.Input

	ToPolicy6PoolnameArrayOutput() Policy6PoolnameArrayOutput
	ToPolicy6PoolnameArrayOutputWithContext(context.Context) Policy6PoolnameArrayOutput
}

type Policy6PoolnameArray []Policy6PoolnameInput

func (Policy6PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Poolname)(nil)).Elem()
}

func (i Policy6PoolnameArray) ToPolicy6PoolnameArrayOutput() Policy6PoolnameArrayOutput {
	return i.ToPolicy6PoolnameArrayOutputWithContext(context.Background())
}

func (i Policy6PoolnameArray) ToPolicy6PoolnameArrayOutputWithContext(ctx context.Context) Policy6PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6PoolnameArrayOutput)
}

type Policy6PoolnameOutput struct{ *pulumi.OutputState }

func (Policy6PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Poolname)(nil)).Elem()
}

func (o Policy6PoolnameOutput) ToPolicy6PoolnameOutput() Policy6PoolnameOutput {
	return o
}

func (o Policy6PoolnameOutput) ToPolicy6PoolnameOutputWithContext(ctx context.Context) Policy6PoolnameOutput {
	return o
}

// IP pool name.
func (o Policy6PoolnameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6Poolname) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6PoolnameArrayOutput struct{ *pulumi.OutputState }

func (Policy6PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Poolname)(nil)).Elem()
}

func (o Policy6PoolnameArrayOutput) ToPolicy6PoolnameArrayOutput() Policy6PoolnameArrayOutput {
	return o
}

func (o Policy6PoolnameArrayOutput) ToPolicy6PoolnameArrayOutputWithContext(ctx context.Context) Policy6PoolnameArrayOutput {
	return o
}

func (o Policy6PoolnameArrayOutput) Index(i pulumi.IntInput) Policy6PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6Poolname {
		return vs[0].([]Policy6Poolname)[vs[1].(int)]
	}).(Policy6PoolnameOutput)
}

type Policy6Service struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Policy6ServiceInput is an input type that accepts Policy6ServiceArgs and Policy6ServiceOutput values.
// You can construct a concrete instance of `Policy6ServiceInput` via:
//
//	Policy6ServiceArgs{...}
type Policy6ServiceInput interface {
	pulumi.Input

	ToPolicy6ServiceOutput() Policy6ServiceOutput
	ToPolicy6ServiceOutputWithContext(context.Context) Policy6ServiceOutput
}

type Policy6ServiceArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Service)(nil)).Elem()
}

func (i Policy6ServiceArgs) ToPolicy6ServiceOutput() Policy6ServiceOutput {
	return i.ToPolicy6ServiceOutputWithContext(context.Background())
}

func (i Policy6ServiceArgs) ToPolicy6ServiceOutputWithContext(ctx context.Context) Policy6ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6ServiceOutput)
}

// Policy6ServiceArrayInput is an input type that accepts Policy6ServiceArray and Policy6ServiceArrayOutput values.
// You can construct a concrete instance of `Policy6ServiceArrayInput` via:
//
//	Policy6ServiceArray{ Policy6ServiceArgs{...} }
type Policy6ServiceArrayInput interface {
	pulumi.Input

	ToPolicy6ServiceArrayOutput() Policy6ServiceArrayOutput
	ToPolicy6ServiceArrayOutputWithContext(context.Context) Policy6ServiceArrayOutput
}

type Policy6ServiceArray []Policy6ServiceInput

func (Policy6ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Service)(nil)).Elem()
}

func (i Policy6ServiceArray) ToPolicy6ServiceArrayOutput() Policy6ServiceArrayOutput {
	return i.ToPolicy6ServiceArrayOutputWithContext(context.Background())
}

func (i Policy6ServiceArray) ToPolicy6ServiceArrayOutputWithContext(ctx context.Context) Policy6ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6ServiceArrayOutput)
}

type Policy6ServiceOutput struct{ *pulumi.OutputState }

func (Policy6ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Service)(nil)).Elem()
}

func (o Policy6ServiceOutput) ToPolicy6ServiceOutput() Policy6ServiceOutput {
	return o
}

func (o Policy6ServiceOutput) ToPolicy6ServiceOutputWithContext(ctx context.Context) Policy6ServiceOutput {
	return o
}

// Address name.
func (o Policy6ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6Service) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6ServiceArrayOutput struct{ *pulumi.OutputState }

func (Policy6ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Service)(nil)).Elem()
}

func (o Policy6ServiceArrayOutput) ToPolicy6ServiceArrayOutput() Policy6ServiceArrayOutput {
	return o
}

func (o Policy6ServiceArrayOutput) ToPolicy6ServiceArrayOutputWithContext(ctx context.Context) Policy6ServiceArrayOutput {
	return o
}

func (o Policy6ServiceArrayOutput) Index(i pulumi.IntInput) Policy6ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6Service {
		return vs[0].([]Policy6Service)[vs[1].(int)]
	}).(Policy6ServiceOutput)
}

type Policy6Srcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// Policy6SrcaddrInput is an input type that accepts Policy6SrcaddrArgs and Policy6SrcaddrOutput values.
// You can construct a concrete instance of `Policy6SrcaddrInput` via:
//
//	Policy6SrcaddrArgs{...}
type Policy6SrcaddrInput interface {
	pulumi.Input

	ToPolicy6SrcaddrOutput() Policy6SrcaddrOutput
	ToPolicy6SrcaddrOutputWithContext(context.Context) Policy6SrcaddrOutput
}

type Policy6SrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Srcaddr)(nil)).Elem()
}

func (i Policy6SrcaddrArgs) ToPolicy6SrcaddrOutput() Policy6SrcaddrOutput {
	return i.ToPolicy6SrcaddrOutputWithContext(context.Background())
}

func (i Policy6SrcaddrArgs) ToPolicy6SrcaddrOutputWithContext(ctx context.Context) Policy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6SrcaddrOutput)
}

// Policy6SrcaddrArrayInput is an input type that accepts Policy6SrcaddrArray and Policy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `Policy6SrcaddrArrayInput` via:
//
//	Policy6SrcaddrArray{ Policy6SrcaddrArgs{...} }
type Policy6SrcaddrArrayInput interface {
	pulumi.Input

	ToPolicy6SrcaddrArrayOutput() Policy6SrcaddrArrayOutput
	ToPolicy6SrcaddrArrayOutputWithContext(context.Context) Policy6SrcaddrArrayOutput
}

type Policy6SrcaddrArray []Policy6SrcaddrInput

func (Policy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Srcaddr)(nil)).Elem()
}

func (i Policy6SrcaddrArray) ToPolicy6SrcaddrArrayOutput() Policy6SrcaddrArrayOutput {
	return i.ToPolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i Policy6SrcaddrArray) ToPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) Policy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6SrcaddrArrayOutput)
}

type Policy6SrcaddrOutput struct{ *pulumi.OutputState }

func (Policy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Srcaddr)(nil)).Elem()
}

func (o Policy6SrcaddrOutput) ToPolicy6SrcaddrOutput() Policy6SrcaddrOutput {
	return o
}

func (o Policy6SrcaddrOutput) ToPolicy6SrcaddrOutputWithContext(ctx context.Context) Policy6SrcaddrOutput {
	return o
}

// Address name.
func (o Policy6SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (Policy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Srcaddr)(nil)).Elem()
}

func (o Policy6SrcaddrArrayOutput) ToPolicy6SrcaddrArrayOutput() Policy6SrcaddrArrayOutput {
	return o
}

func (o Policy6SrcaddrArrayOutput) ToPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) Policy6SrcaddrArrayOutput {
	return o
}

func (o Policy6SrcaddrArrayOutput) Index(i pulumi.IntInput) Policy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6Srcaddr {
		return vs[0].([]Policy6Srcaddr)[vs[1].(int)]
	}).(Policy6SrcaddrOutput)
}

type Policy6Srcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// Policy6SrcintfInput is an input type that accepts Policy6SrcintfArgs and Policy6SrcintfOutput values.
// You can construct a concrete instance of `Policy6SrcintfInput` via:
//
//	Policy6SrcintfArgs{...}
type Policy6SrcintfInput interface {
	pulumi.Input

	ToPolicy6SrcintfOutput() Policy6SrcintfOutput
	ToPolicy6SrcintfOutputWithContext(context.Context) Policy6SrcintfOutput
}

type Policy6SrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6SrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Srcintf)(nil)).Elem()
}

func (i Policy6SrcintfArgs) ToPolicy6SrcintfOutput() Policy6SrcintfOutput {
	return i.ToPolicy6SrcintfOutputWithContext(context.Background())
}

func (i Policy6SrcintfArgs) ToPolicy6SrcintfOutputWithContext(ctx context.Context) Policy6SrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6SrcintfOutput)
}

// Policy6SrcintfArrayInput is an input type that accepts Policy6SrcintfArray and Policy6SrcintfArrayOutput values.
// You can construct a concrete instance of `Policy6SrcintfArrayInput` via:
//
//	Policy6SrcintfArray{ Policy6SrcintfArgs{...} }
type Policy6SrcintfArrayInput interface {
	pulumi.Input

	ToPolicy6SrcintfArrayOutput() Policy6SrcintfArrayOutput
	ToPolicy6SrcintfArrayOutputWithContext(context.Context) Policy6SrcintfArrayOutput
}

type Policy6SrcintfArray []Policy6SrcintfInput

func (Policy6SrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Srcintf)(nil)).Elem()
}

func (i Policy6SrcintfArray) ToPolicy6SrcintfArrayOutput() Policy6SrcintfArrayOutput {
	return i.ToPolicy6SrcintfArrayOutputWithContext(context.Background())
}

func (i Policy6SrcintfArray) ToPolicy6SrcintfArrayOutputWithContext(ctx context.Context) Policy6SrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6SrcintfArrayOutput)
}

type Policy6SrcintfOutput struct{ *pulumi.OutputState }

func (Policy6SrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6Srcintf)(nil)).Elem()
}

func (o Policy6SrcintfOutput) ToPolicy6SrcintfOutput() Policy6SrcintfOutput {
	return o
}

func (o Policy6SrcintfOutput) ToPolicy6SrcintfOutputWithContext(ctx context.Context) Policy6SrcintfOutput {
	return o
}

// Interface name.
func (o Policy6SrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6Srcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6SrcintfArrayOutput struct{ *pulumi.OutputState }

func (Policy6SrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6Srcintf)(nil)).Elem()
}

func (o Policy6SrcintfArrayOutput) ToPolicy6SrcintfArrayOutput() Policy6SrcintfArrayOutput {
	return o
}

func (o Policy6SrcintfArrayOutput) ToPolicy6SrcintfArrayOutputWithContext(ctx context.Context) Policy6SrcintfArrayOutput {
	return o
}

func (o Policy6SrcintfArrayOutput) Index(i pulumi.IntInput) Policy6SrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6Srcintf {
		return vs[0].([]Policy6Srcintf)[vs[1].(int)]
	}).(Policy6SrcintfOutput)
}

type Policy6SslMirrorIntf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// Policy6SslMirrorIntfInput is an input type that accepts Policy6SslMirrorIntfArgs and Policy6SslMirrorIntfOutput values.
// You can construct a concrete instance of `Policy6SslMirrorIntfInput` via:
//
//	Policy6SslMirrorIntfArgs{...}
type Policy6SslMirrorIntfInput interface {
	pulumi.Input

	ToPolicy6SslMirrorIntfOutput() Policy6SslMirrorIntfOutput
	ToPolicy6SslMirrorIntfOutputWithContext(context.Context) Policy6SslMirrorIntfOutput
}

type Policy6SslMirrorIntfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6SslMirrorIntfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6SslMirrorIntf)(nil)).Elem()
}

func (i Policy6SslMirrorIntfArgs) ToPolicy6SslMirrorIntfOutput() Policy6SslMirrorIntfOutput {
	return i.ToPolicy6SslMirrorIntfOutputWithContext(context.Background())
}

func (i Policy6SslMirrorIntfArgs) ToPolicy6SslMirrorIntfOutputWithContext(ctx context.Context) Policy6SslMirrorIntfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6SslMirrorIntfOutput)
}

// Policy6SslMirrorIntfArrayInput is an input type that accepts Policy6SslMirrorIntfArray and Policy6SslMirrorIntfArrayOutput values.
// You can construct a concrete instance of `Policy6SslMirrorIntfArrayInput` via:
//
//	Policy6SslMirrorIntfArray{ Policy6SslMirrorIntfArgs{...} }
type Policy6SslMirrorIntfArrayInput interface {
	pulumi.Input

	ToPolicy6SslMirrorIntfArrayOutput() Policy6SslMirrorIntfArrayOutput
	ToPolicy6SslMirrorIntfArrayOutputWithContext(context.Context) Policy6SslMirrorIntfArrayOutput
}

type Policy6SslMirrorIntfArray []Policy6SslMirrorIntfInput

func (Policy6SslMirrorIntfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6SslMirrorIntf)(nil)).Elem()
}

func (i Policy6SslMirrorIntfArray) ToPolicy6SslMirrorIntfArrayOutput() Policy6SslMirrorIntfArrayOutput {
	return i.ToPolicy6SslMirrorIntfArrayOutputWithContext(context.Background())
}

func (i Policy6SslMirrorIntfArray) ToPolicy6SslMirrorIntfArrayOutputWithContext(ctx context.Context) Policy6SslMirrorIntfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6SslMirrorIntfArrayOutput)
}

type Policy6SslMirrorIntfOutput struct{ *pulumi.OutputState }

func (Policy6SslMirrorIntfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6SslMirrorIntf)(nil)).Elem()
}

func (o Policy6SslMirrorIntfOutput) ToPolicy6SslMirrorIntfOutput() Policy6SslMirrorIntfOutput {
	return o
}

func (o Policy6SslMirrorIntfOutput) ToPolicy6SslMirrorIntfOutputWithContext(ctx context.Context) Policy6SslMirrorIntfOutput {
	return o
}

// Interface name.
func (o Policy6SslMirrorIntfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6SslMirrorIntf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6SslMirrorIntfArrayOutput struct{ *pulumi.OutputState }

func (Policy6SslMirrorIntfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6SslMirrorIntf)(nil)).Elem()
}

func (o Policy6SslMirrorIntfArrayOutput) ToPolicy6SslMirrorIntfArrayOutput() Policy6SslMirrorIntfArrayOutput {
	return o
}

func (o Policy6SslMirrorIntfArrayOutput) ToPolicy6SslMirrorIntfArrayOutputWithContext(ctx context.Context) Policy6SslMirrorIntfArrayOutput {
	return o
}

func (o Policy6SslMirrorIntfArrayOutput) Index(i pulumi.IntInput) Policy6SslMirrorIntfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6SslMirrorIntf {
		return vs[0].([]Policy6SslMirrorIntf)[vs[1].(int)]
	}).(Policy6SslMirrorIntfOutput)
}

type Policy6UrlCategory struct {
	// URL category ID.
	Id *int `pulumi:"id"`
}

// Policy6UrlCategoryInput is an input type that accepts Policy6UrlCategoryArgs and Policy6UrlCategoryOutput values.
// You can construct a concrete instance of `Policy6UrlCategoryInput` via:
//
//	Policy6UrlCategoryArgs{...}
type Policy6UrlCategoryInput interface {
	pulumi.Input

	ToPolicy6UrlCategoryOutput() Policy6UrlCategoryOutput
	ToPolicy6UrlCategoryOutputWithContext(context.Context) Policy6UrlCategoryOutput
}

type Policy6UrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Policy6UrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6UrlCategory)(nil)).Elem()
}

func (i Policy6UrlCategoryArgs) ToPolicy6UrlCategoryOutput() Policy6UrlCategoryOutput {
	return i.ToPolicy6UrlCategoryOutputWithContext(context.Background())
}

func (i Policy6UrlCategoryArgs) ToPolicy6UrlCategoryOutputWithContext(ctx context.Context) Policy6UrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6UrlCategoryOutput)
}

// Policy6UrlCategoryArrayInput is an input type that accepts Policy6UrlCategoryArray and Policy6UrlCategoryArrayOutput values.
// You can construct a concrete instance of `Policy6UrlCategoryArrayInput` via:
//
//	Policy6UrlCategoryArray{ Policy6UrlCategoryArgs{...} }
type Policy6UrlCategoryArrayInput interface {
	pulumi.Input

	ToPolicy6UrlCategoryArrayOutput() Policy6UrlCategoryArrayOutput
	ToPolicy6UrlCategoryArrayOutputWithContext(context.Context) Policy6UrlCategoryArrayOutput
}

type Policy6UrlCategoryArray []Policy6UrlCategoryInput

func (Policy6UrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6UrlCategory)(nil)).Elem()
}

func (i Policy6UrlCategoryArray) ToPolicy6UrlCategoryArrayOutput() Policy6UrlCategoryArrayOutput {
	return i.ToPolicy6UrlCategoryArrayOutputWithContext(context.Background())
}

func (i Policy6UrlCategoryArray) ToPolicy6UrlCategoryArrayOutputWithContext(ctx context.Context) Policy6UrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6UrlCategoryArrayOutput)
}

type Policy6UrlCategoryOutput struct{ *pulumi.OutputState }

func (Policy6UrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6UrlCategory)(nil)).Elem()
}

func (o Policy6UrlCategoryOutput) ToPolicy6UrlCategoryOutput() Policy6UrlCategoryOutput {
	return o
}

func (o Policy6UrlCategoryOutput) ToPolicy6UrlCategoryOutputWithContext(ctx context.Context) Policy6UrlCategoryOutput {
	return o
}

// URL category ID.
func (o Policy6UrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Policy6UrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Policy6UrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (Policy6UrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6UrlCategory)(nil)).Elem()
}

func (o Policy6UrlCategoryArrayOutput) ToPolicy6UrlCategoryArrayOutput() Policy6UrlCategoryArrayOutput {
	return o
}

func (o Policy6UrlCategoryArrayOutput) ToPolicy6UrlCategoryArrayOutputWithContext(ctx context.Context) Policy6UrlCategoryArrayOutput {
	return o
}

func (o Policy6UrlCategoryArrayOutput) Index(i pulumi.IntInput) Policy6UrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6UrlCategory {
		return vs[0].([]Policy6UrlCategory)[vs[1].(int)]
	}).(Policy6UrlCategoryOutput)
}

type Policy6User struct {
	// Names of individual users that can authenticate with this policy.
	Name *string `pulumi:"name"`
}

// Policy6UserInput is an input type that accepts Policy6UserArgs and Policy6UserOutput values.
// You can construct a concrete instance of `Policy6UserInput` via:
//
//	Policy6UserArgs{...}
type Policy6UserInput interface {
	pulumi.Input

	ToPolicy6UserOutput() Policy6UserOutput
	ToPolicy6UserOutputWithContext(context.Context) Policy6UserOutput
}

type Policy6UserArgs struct {
	// Names of individual users that can authenticate with this policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Policy6UserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6User)(nil)).Elem()
}

func (i Policy6UserArgs) ToPolicy6UserOutput() Policy6UserOutput {
	return i.ToPolicy6UserOutputWithContext(context.Background())
}

func (i Policy6UserArgs) ToPolicy6UserOutputWithContext(ctx context.Context) Policy6UserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6UserOutput)
}

// Policy6UserArrayInput is an input type that accepts Policy6UserArray and Policy6UserArrayOutput values.
// You can construct a concrete instance of `Policy6UserArrayInput` via:
//
//	Policy6UserArray{ Policy6UserArgs{...} }
type Policy6UserArrayInput interface {
	pulumi.Input

	ToPolicy6UserArrayOutput() Policy6UserArrayOutput
	ToPolicy6UserArrayOutputWithContext(context.Context) Policy6UserArrayOutput
}

type Policy6UserArray []Policy6UserInput

func (Policy6UserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6User)(nil)).Elem()
}

func (i Policy6UserArray) ToPolicy6UserArrayOutput() Policy6UserArrayOutput {
	return i.ToPolicy6UserArrayOutputWithContext(context.Background())
}

func (i Policy6UserArray) ToPolicy6UserArrayOutputWithContext(ctx context.Context) Policy6UserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Policy6UserArrayOutput)
}

type Policy6UserOutput struct{ *pulumi.OutputState }

func (Policy6UserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy6User)(nil)).Elem()
}

func (o Policy6UserOutput) ToPolicy6UserOutput() Policy6UserOutput {
	return o
}

func (o Policy6UserOutput) ToPolicy6UserOutputWithContext(ctx context.Context) Policy6UserOutput {
	return o
}

// Names of individual users that can authenticate with this policy.
func (o Policy6UserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy6User) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Policy6UserArrayOutput struct{ *pulumi.OutputState }

func (Policy6UserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy6User)(nil)).Elem()
}

func (o Policy6UserArrayOutput) ToPolicy6UserArrayOutput() Policy6UserArrayOutput {
	return o
}

func (o Policy6UserArrayOutput) ToPolicy6UserArrayOutputWithContext(ctx context.Context) Policy6UserArrayOutput {
	return o
}

func (o Policy6UserArrayOutput) Index(i pulumi.IntInput) Policy6UserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy6User {
		return vs[0].([]Policy6User)[vs[1].(int)]
	}).(Policy6UserOutput)
}

type PolicyAppCategory struct {
	// Category IDs.
	Id *int `pulumi:"id"`
}

// PolicyAppCategoryInput is an input type that accepts PolicyAppCategoryArgs and PolicyAppCategoryOutput values.
// You can construct a concrete instance of `PolicyAppCategoryInput` via:
//
//	PolicyAppCategoryArgs{...}
type PolicyAppCategoryInput interface {
	pulumi.Input

	ToPolicyAppCategoryOutput() PolicyAppCategoryOutput
	ToPolicyAppCategoryOutputWithContext(context.Context) PolicyAppCategoryOutput
}

type PolicyAppCategoryArgs struct {
	// Category IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAppCategory)(nil)).Elem()
}

func (i PolicyAppCategoryArgs) ToPolicyAppCategoryOutput() PolicyAppCategoryOutput {
	return i.ToPolicyAppCategoryOutputWithContext(context.Background())
}

func (i PolicyAppCategoryArgs) ToPolicyAppCategoryOutputWithContext(ctx context.Context) PolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAppCategoryOutput)
}

// PolicyAppCategoryArrayInput is an input type that accepts PolicyAppCategoryArray and PolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `PolicyAppCategoryArrayInput` via:
//
//	PolicyAppCategoryArray{ PolicyAppCategoryArgs{...} }
type PolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToPolicyAppCategoryArrayOutput() PolicyAppCategoryArrayOutput
	ToPolicyAppCategoryArrayOutputWithContext(context.Context) PolicyAppCategoryArrayOutput
}

type PolicyAppCategoryArray []PolicyAppCategoryInput

func (PolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAppCategory)(nil)).Elem()
}

func (i PolicyAppCategoryArray) ToPolicyAppCategoryArrayOutput() PolicyAppCategoryArrayOutput {
	return i.ToPolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i PolicyAppCategoryArray) ToPolicyAppCategoryArrayOutputWithContext(ctx context.Context) PolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAppCategoryArrayOutput)
}

type PolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (PolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAppCategory)(nil)).Elem()
}

func (o PolicyAppCategoryOutput) ToPolicyAppCategoryOutput() PolicyAppCategoryOutput {
	return o
}

func (o PolicyAppCategoryOutput) ToPolicyAppCategoryOutputWithContext(ctx context.Context) PolicyAppCategoryOutput {
	return o
}

// Category IDs.
func (o PolicyAppCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyAppCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (PolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAppCategory)(nil)).Elem()
}

func (o PolicyAppCategoryArrayOutput) ToPolicyAppCategoryArrayOutput() PolicyAppCategoryArrayOutput {
	return o
}

func (o PolicyAppCategoryArrayOutput) ToPolicyAppCategoryArrayOutputWithContext(ctx context.Context) PolicyAppCategoryArrayOutput {
	return o
}

func (o PolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) PolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAppCategory {
		return vs[0].([]PolicyAppCategory)[vs[1].(int)]
	}).(PolicyAppCategoryOutput)
}

type PolicyAppGroup struct {
	// Application group names.
	Name *string `pulumi:"name"`
}

// PolicyAppGroupInput is an input type that accepts PolicyAppGroupArgs and PolicyAppGroupOutput values.
// You can construct a concrete instance of `PolicyAppGroupInput` via:
//
//	PolicyAppGroupArgs{...}
type PolicyAppGroupInput interface {
	pulumi.Input

	ToPolicyAppGroupOutput() PolicyAppGroupOutput
	ToPolicyAppGroupOutputWithContext(context.Context) PolicyAppGroupOutput
}

type PolicyAppGroupArgs struct {
	// Application group names.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAppGroup)(nil)).Elem()
}

func (i PolicyAppGroupArgs) ToPolicyAppGroupOutput() PolicyAppGroupOutput {
	return i.ToPolicyAppGroupOutputWithContext(context.Background())
}

func (i PolicyAppGroupArgs) ToPolicyAppGroupOutputWithContext(ctx context.Context) PolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAppGroupOutput)
}

// PolicyAppGroupArrayInput is an input type that accepts PolicyAppGroupArray and PolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `PolicyAppGroupArrayInput` via:
//
//	PolicyAppGroupArray{ PolicyAppGroupArgs{...} }
type PolicyAppGroupArrayInput interface {
	pulumi.Input

	ToPolicyAppGroupArrayOutput() PolicyAppGroupArrayOutput
	ToPolicyAppGroupArrayOutputWithContext(context.Context) PolicyAppGroupArrayOutput
}

type PolicyAppGroupArray []PolicyAppGroupInput

func (PolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAppGroup)(nil)).Elem()
}

func (i PolicyAppGroupArray) ToPolicyAppGroupArrayOutput() PolicyAppGroupArrayOutput {
	return i.ToPolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i PolicyAppGroupArray) ToPolicyAppGroupArrayOutputWithContext(ctx context.Context) PolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAppGroupArrayOutput)
}

type PolicyAppGroupOutput struct{ *pulumi.OutputState }

func (PolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAppGroup)(nil)).Elem()
}

func (o PolicyAppGroupOutput) ToPolicyAppGroupOutput() PolicyAppGroupOutput {
	return o
}

func (o PolicyAppGroupOutput) ToPolicyAppGroupOutputWithContext(ctx context.Context) PolicyAppGroupOutput {
	return o
}

// Application group names.
func (o PolicyAppGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAppGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAppGroup)(nil)).Elem()
}

func (o PolicyAppGroupArrayOutput) ToPolicyAppGroupArrayOutput() PolicyAppGroupArrayOutput {
	return o
}

func (o PolicyAppGroupArrayOutput) ToPolicyAppGroupArrayOutputWithContext(ctx context.Context) PolicyAppGroupArrayOutput {
	return o
}

func (o PolicyAppGroupArrayOutput) Index(i pulumi.IntInput) PolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAppGroup {
		return vs[0].([]PolicyAppGroup)[vs[1].(int)]
	}).(PolicyAppGroupOutput)
}

type PolicyApplication struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// PolicyApplicationInput is an input type that accepts PolicyApplicationArgs and PolicyApplicationOutput values.
// You can construct a concrete instance of `PolicyApplicationInput` via:
//
//	PolicyApplicationArgs{...}
type PolicyApplicationInput interface {
	pulumi.Input

	ToPolicyApplicationOutput() PolicyApplicationOutput
	ToPolicyApplicationOutputWithContext(context.Context) PolicyApplicationOutput
}

type PolicyApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyApplication)(nil)).Elem()
}

func (i PolicyApplicationArgs) ToPolicyApplicationOutput() PolicyApplicationOutput {
	return i.ToPolicyApplicationOutputWithContext(context.Background())
}

func (i PolicyApplicationArgs) ToPolicyApplicationOutputWithContext(ctx context.Context) PolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyApplicationOutput)
}

// PolicyApplicationArrayInput is an input type that accepts PolicyApplicationArray and PolicyApplicationArrayOutput values.
// You can construct a concrete instance of `PolicyApplicationArrayInput` via:
//
//	PolicyApplicationArray{ PolicyApplicationArgs{...} }
type PolicyApplicationArrayInput interface {
	pulumi.Input

	ToPolicyApplicationArrayOutput() PolicyApplicationArrayOutput
	ToPolicyApplicationArrayOutputWithContext(context.Context) PolicyApplicationArrayOutput
}

type PolicyApplicationArray []PolicyApplicationInput

func (PolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyApplication)(nil)).Elem()
}

func (i PolicyApplicationArray) ToPolicyApplicationArrayOutput() PolicyApplicationArrayOutput {
	return i.ToPolicyApplicationArrayOutputWithContext(context.Background())
}

func (i PolicyApplicationArray) ToPolicyApplicationArrayOutputWithContext(ctx context.Context) PolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyApplicationArrayOutput)
}

type PolicyApplicationOutput struct{ *pulumi.OutputState }

func (PolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyApplication)(nil)).Elem()
}

func (o PolicyApplicationOutput) ToPolicyApplicationOutput() PolicyApplicationOutput {
	return o
}

func (o PolicyApplicationOutput) ToPolicyApplicationOutputWithContext(ctx context.Context) PolicyApplicationOutput {
	return o
}

// Application IDs.
func (o PolicyApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (PolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyApplication)(nil)).Elem()
}

func (o PolicyApplicationArrayOutput) ToPolicyApplicationArrayOutput() PolicyApplicationArrayOutput {
	return o
}

func (o PolicyApplicationArrayOutput) ToPolicyApplicationArrayOutputWithContext(ctx context.Context) PolicyApplicationArrayOutput {
	return o
}

func (o PolicyApplicationArrayOutput) Index(i pulumi.IntInput) PolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyApplication {
		return vs[0].([]PolicyApplication)[vs[1].(int)]
	}).(PolicyApplicationOutput)
}

type PolicyCustomLogField struct {
	// Custom log field.
	FieldId *string `pulumi:"fieldId"`
}

// PolicyCustomLogFieldInput is an input type that accepts PolicyCustomLogFieldArgs and PolicyCustomLogFieldOutput values.
// You can construct a concrete instance of `PolicyCustomLogFieldInput` via:
//
//	PolicyCustomLogFieldArgs{...}
type PolicyCustomLogFieldInput interface {
	pulumi.Input

	ToPolicyCustomLogFieldOutput() PolicyCustomLogFieldOutput
	ToPolicyCustomLogFieldOutputWithContext(context.Context) PolicyCustomLogFieldOutput
}

type PolicyCustomLogFieldArgs struct {
	// Custom log field.
	FieldId pulumi.StringPtrInput `pulumi:"fieldId"`
}

func (PolicyCustomLogFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomLogField)(nil)).Elem()
}

func (i PolicyCustomLogFieldArgs) ToPolicyCustomLogFieldOutput() PolicyCustomLogFieldOutput {
	return i.ToPolicyCustomLogFieldOutputWithContext(context.Background())
}

func (i PolicyCustomLogFieldArgs) ToPolicyCustomLogFieldOutputWithContext(ctx context.Context) PolicyCustomLogFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomLogFieldOutput)
}

// PolicyCustomLogFieldArrayInput is an input type that accepts PolicyCustomLogFieldArray and PolicyCustomLogFieldArrayOutput values.
// You can construct a concrete instance of `PolicyCustomLogFieldArrayInput` via:
//
//	PolicyCustomLogFieldArray{ PolicyCustomLogFieldArgs{...} }
type PolicyCustomLogFieldArrayInput interface {
	pulumi.Input

	ToPolicyCustomLogFieldArrayOutput() PolicyCustomLogFieldArrayOutput
	ToPolicyCustomLogFieldArrayOutputWithContext(context.Context) PolicyCustomLogFieldArrayOutput
}

type PolicyCustomLogFieldArray []PolicyCustomLogFieldInput

func (PolicyCustomLogFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomLogField)(nil)).Elem()
}

func (i PolicyCustomLogFieldArray) ToPolicyCustomLogFieldArrayOutput() PolicyCustomLogFieldArrayOutput {
	return i.ToPolicyCustomLogFieldArrayOutputWithContext(context.Background())
}

func (i PolicyCustomLogFieldArray) ToPolicyCustomLogFieldArrayOutputWithContext(ctx context.Context) PolicyCustomLogFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomLogFieldArrayOutput)
}

type PolicyCustomLogFieldOutput struct{ *pulumi.OutputState }

func (PolicyCustomLogFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomLogField)(nil)).Elem()
}

func (o PolicyCustomLogFieldOutput) ToPolicyCustomLogFieldOutput() PolicyCustomLogFieldOutput {
	return o
}

func (o PolicyCustomLogFieldOutput) ToPolicyCustomLogFieldOutputWithContext(ctx context.Context) PolicyCustomLogFieldOutput {
	return o
}

// Custom log field.
func (o PolicyCustomLogFieldOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyCustomLogField) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

type PolicyCustomLogFieldArrayOutput struct{ *pulumi.OutputState }

func (PolicyCustomLogFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomLogField)(nil)).Elem()
}

func (o PolicyCustomLogFieldArrayOutput) ToPolicyCustomLogFieldArrayOutput() PolicyCustomLogFieldArrayOutput {
	return o
}

func (o PolicyCustomLogFieldArrayOutput) ToPolicyCustomLogFieldArrayOutputWithContext(ctx context.Context) PolicyCustomLogFieldArrayOutput {
	return o
}

func (o PolicyCustomLogFieldArrayOutput) Index(i pulumi.IntInput) PolicyCustomLogFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyCustomLogField {
		return vs[0].([]PolicyCustomLogField)[vs[1].(int)]
	}).(PolicyCustomLogFieldOutput)
}

type PolicyDevice struct {
	// Device or group name.
	Name *string `pulumi:"name"`
}

// PolicyDeviceInput is an input type that accepts PolicyDeviceArgs and PolicyDeviceOutput values.
// You can construct a concrete instance of `PolicyDeviceInput` via:
//
//	PolicyDeviceArgs{...}
type PolicyDeviceInput interface {
	pulumi.Input

	ToPolicyDeviceOutput() PolicyDeviceOutput
	ToPolicyDeviceOutputWithContext(context.Context) PolicyDeviceOutput
}

type PolicyDeviceArgs struct {
	// Device or group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDevice)(nil)).Elem()
}

func (i PolicyDeviceArgs) ToPolicyDeviceOutput() PolicyDeviceOutput {
	return i.ToPolicyDeviceOutputWithContext(context.Background())
}

func (i PolicyDeviceArgs) ToPolicyDeviceOutputWithContext(ctx context.Context) PolicyDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDeviceOutput)
}

// PolicyDeviceArrayInput is an input type that accepts PolicyDeviceArray and PolicyDeviceArrayOutput values.
// You can construct a concrete instance of `PolicyDeviceArrayInput` via:
//
//	PolicyDeviceArray{ PolicyDeviceArgs{...} }
type PolicyDeviceArrayInput interface {
	pulumi.Input

	ToPolicyDeviceArrayOutput() PolicyDeviceArrayOutput
	ToPolicyDeviceArrayOutputWithContext(context.Context) PolicyDeviceArrayOutput
}

type PolicyDeviceArray []PolicyDeviceInput

func (PolicyDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDevice)(nil)).Elem()
}

func (i PolicyDeviceArray) ToPolicyDeviceArrayOutput() PolicyDeviceArrayOutput {
	return i.ToPolicyDeviceArrayOutputWithContext(context.Background())
}

func (i PolicyDeviceArray) ToPolicyDeviceArrayOutputWithContext(ctx context.Context) PolicyDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDeviceArrayOutput)
}

type PolicyDeviceOutput struct{ *pulumi.OutputState }

func (PolicyDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDevice)(nil)).Elem()
}

func (o PolicyDeviceOutput) ToPolicyDeviceOutput() PolicyDeviceOutput {
	return o
}

func (o PolicyDeviceOutput) ToPolicyDeviceOutputWithContext(ctx context.Context) PolicyDeviceOutput {
	return o
}

// Device or group name.
func (o PolicyDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyDeviceArrayOutput struct{ *pulumi.OutputState }

func (PolicyDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDevice)(nil)).Elem()
}

func (o PolicyDeviceArrayOutput) ToPolicyDeviceArrayOutput() PolicyDeviceArrayOutput {
	return o
}

func (o PolicyDeviceArrayOutput) ToPolicyDeviceArrayOutputWithContext(ctx context.Context) PolicyDeviceArrayOutput {
	return o
}

func (o PolicyDeviceArrayOutput) Index(i pulumi.IntInput) PolicyDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDevice {
		return vs[0].([]PolicyDevice)[vs[1].(int)]
	}).(PolicyDeviceOutput)
}

type PolicyDstaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyDstaddr6Input is an input type that accepts PolicyDstaddr6Args and PolicyDstaddr6Output values.
// You can construct a concrete instance of `PolicyDstaddr6Input` via:
//
//	PolicyDstaddr6Args{...}
type PolicyDstaddr6Input interface {
	pulumi.Input

	ToPolicyDstaddr6Output() PolicyDstaddr6Output
	ToPolicyDstaddr6OutputWithContext(context.Context) PolicyDstaddr6Output
}

type PolicyDstaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstaddr6)(nil)).Elem()
}

func (i PolicyDstaddr6Args) ToPolicyDstaddr6Output() PolicyDstaddr6Output {
	return i.ToPolicyDstaddr6OutputWithContext(context.Background())
}

func (i PolicyDstaddr6Args) ToPolicyDstaddr6OutputWithContext(ctx context.Context) PolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstaddr6Output)
}

// PolicyDstaddr6ArrayInput is an input type that accepts PolicyDstaddr6Array and PolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `PolicyDstaddr6ArrayInput` via:
//
//	PolicyDstaddr6Array{ PolicyDstaddr6Args{...} }
type PolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToPolicyDstaddr6ArrayOutput() PolicyDstaddr6ArrayOutput
	ToPolicyDstaddr6ArrayOutputWithContext(context.Context) PolicyDstaddr6ArrayOutput
}

type PolicyDstaddr6Array []PolicyDstaddr6Input

func (PolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstaddr6)(nil)).Elem()
}

func (i PolicyDstaddr6Array) ToPolicyDstaddr6ArrayOutput() PolicyDstaddr6ArrayOutput {
	return i.ToPolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i PolicyDstaddr6Array) ToPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) PolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstaddr6ArrayOutput)
}

type PolicyDstaddr6Output struct{ *pulumi.OutputState }

func (PolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstaddr6)(nil)).Elem()
}

func (o PolicyDstaddr6Output) ToPolicyDstaddr6Output() PolicyDstaddr6Output {
	return o
}

func (o PolicyDstaddr6Output) ToPolicyDstaddr6OutputWithContext(ctx context.Context) PolicyDstaddr6Output {
	return o
}

// Policy name.
func (o PolicyDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (PolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstaddr6)(nil)).Elem()
}

func (o PolicyDstaddr6ArrayOutput) ToPolicyDstaddr6ArrayOutput() PolicyDstaddr6ArrayOutput {
	return o
}

func (o PolicyDstaddr6ArrayOutput) ToPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) PolicyDstaddr6ArrayOutput {
	return o
}

func (o PolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) PolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDstaddr6 {
		return vs[0].([]PolicyDstaddr6)[vs[1].(int)]
	}).(PolicyDstaddr6Output)
}

type PolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// PolicyDstaddrInput is an input type that accepts PolicyDstaddrArgs and PolicyDstaddrOutput values.
// You can construct a concrete instance of `PolicyDstaddrInput` via:
//
//	PolicyDstaddrArgs{...}
type PolicyDstaddrInput interface {
	pulumi.Input

	ToPolicyDstaddrOutput() PolicyDstaddrOutput
	ToPolicyDstaddrOutputWithContext(context.Context) PolicyDstaddrOutput
}

type PolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstaddr)(nil)).Elem()
}

func (i PolicyDstaddrArgs) ToPolicyDstaddrOutput() PolicyDstaddrOutput {
	return i.ToPolicyDstaddrOutputWithContext(context.Background())
}

func (i PolicyDstaddrArgs) ToPolicyDstaddrOutputWithContext(ctx context.Context) PolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstaddrOutput)
}

// PolicyDstaddrArrayInput is an input type that accepts PolicyDstaddrArray and PolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `PolicyDstaddrArrayInput` via:
//
//	PolicyDstaddrArray{ PolicyDstaddrArgs{...} }
type PolicyDstaddrArrayInput interface {
	pulumi.Input

	ToPolicyDstaddrArrayOutput() PolicyDstaddrArrayOutput
	ToPolicyDstaddrArrayOutputWithContext(context.Context) PolicyDstaddrArrayOutput
}

type PolicyDstaddrArray []PolicyDstaddrInput

func (PolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstaddr)(nil)).Elem()
}

func (i PolicyDstaddrArray) ToPolicyDstaddrArrayOutput() PolicyDstaddrArrayOutput {
	return i.ToPolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i PolicyDstaddrArray) ToPolicyDstaddrArrayOutputWithContext(ctx context.Context) PolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstaddrArrayOutput)
}

type PolicyDstaddrOutput struct{ *pulumi.OutputState }

func (PolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstaddr)(nil)).Elem()
}

func (o PolicyDstaddrOutput) ToPolicyDstaddrOutput() PolicyDstaddrOutput {
	return o
}

func (o PolicyDstaddrOutput) ToPolicyDstaddrOutputWithContext(ctx context.Context) PolicyDstaddrOutput {
	return o
}

// Address name.
func (o PolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (PolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstaddr)(nil)).Elem()
}

func (o PolicyDstaddrArrayOutput) ToPolicyDstaddrArrayOutput() PolicyDstaddrArrayOutput {
	return o
}

func (o PolicyDstaddrArrayOutput) ToPolicyDstaddrArrayOutputWithContext(ctx context.Context) PolicyDstaddrArrayOutput {
	return o
}

func (o PolicyDstaddrArrayOutput) Index(i pulumi.IntInput) PolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDstaddr {
		return vs[0].([]PolicyDstaddr)[vs[1].(int)]
	}).(PolicyDstaddrOutput)
}

type PolicyDstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// PolicyDstintfInput is an input type that accepts PolicyDstintfArgs and PolicyDstintfOutput values.
// You can construct a concrete instance of `PolicyDstintfInput` via:
//
//	PolicyDstintfArgs{...}
type PolicyDstintfInput interface {
	pulumi.Input

	ToPolicyDstintfOutput() PolicyDstintfOutput
	ToPolicyDstintfOutputWithContext(context.Context) PolicyDstintfOutput
}

type PolicyDstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstintf)(nil)).Elem()
}

func (i PolicyDstintfArgs) ToPolicyDstintfOutput() PolicyDstintfOutput {
	return i.ToPolicyDstintfOutputWithContext(context.Background())
}

func (i PolicyDstintfArgs) ToPolicyDstintfOutputWithContext(ctx context.Context) PolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstintfOutput)
}

// PolicyDstintfArrayInput is an input type that accepts PolicyDstintfArray and PolicyDstintfArrayOutput values.
// You can construct a concrete instance of `PolicyDstintfArrayInput` via:
//
//	PolicyDstintfArray{ PolicyDstintfArgs{...} }
type PolicyDstintfArrayInput interface {
	pulumi.Input

	ToPolicyDstintfArrayOutput() PolicyDstintfArrayOutput
	ToPolicyDstintfArrayOutputWithContext(context.Context) PolicyDstintfArrayOutput
}

type PolicyDstintfArray []PolicyDstintfInput

func (PolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstintf)(nil)).Elem()
}

func (i PolicyDstintfArray) ToPolicyDstintfArrayOutput() PolicyDstintfArrayOutput {
	return i.ToPolicyDstintfArrayOutputWithContext(context.Background())
}

func (i PolicyDstintfArray) ToPolicyDstintfArrayOutputWithContext(ctx context.Context) PolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstintfArrayOutput)
}

type PolicyDstintfOutput struct{ *pulumi.OutputState }

func (PolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstintf)(nil)).Elem()
}

func (o PolicyDstintfOutput) ToPolicyDstintfOutput() PolicyDstintfOutput {
	return o
}

func (o PolicyDstintfOutput) ToPolicyDstintfOutputWithContext(ctx context.Context) PolicyDstintfOutput {
	return o
}

// Interface name.
func (o PolicyDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (PolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstintf)(nil)).Elem()
}

func (o PolicyDstintfArrayOutput) ToPolicyDstintfArrayOutput() PolicyDstintfArrayOutput {
	return o
}

func (o PolicyDstintfArrayOutput) ToPolicyDstintfArrayOutputWithContext(ctx context.Context) PolicyDstintfArrayOutput {
	return o
}

func (o PolicyDstintfArrayOutput) Index(i pulumi.IntInput) PolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDstintf {
		return vs[0].([]PolicyDstintf)[vs[1].(int)]
	}).(PolicyDstintfOutput)
}

type PolicyFssoGroup struct {
	// Names of FSSO groups.
	Name *string `pulumi:"name"`
}

// PolicyFssoGroupInput is an input type that accepts PolicyFssoGroupArgs and PolicyFssoGroupOutput values.
// You can construct a concrete instance of `PolicyFssoGroupInput` via:
//
//	PolicyFssoGroupArgs{...}
type PolicyFssoGroupInput interface {
	pulumi.Input

	ToPolicyFssoGroupOutput() PolicyFssoGroupOutput
	ToPolicyFssoGroupOutputWithContext(context.Context) PolicyFssoGroupOutput
}

type PolicyFssoGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyFssoGroup)(nil)).Elem()
}

func (i PolicyFssoGroupArgs) ToPolicyFssoGroupOutput() PolicyFssoGroupOutput {
	return i.ToPolicyFssoGroupOutputWithContext(context.Background())
}

func (i PolicyFssoGroupArgs) ToPolicyFssoGroupOutputWithContext(ctx context.Context) PolicyFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyFssoGroupOutput)
}

// PolicyFssoGroupArrayInput is an input type that accepts PolicyFssoGroupArray and PolicyFssoGroupArrayOutput values.
// You can construct a concrete instance of `PolicyFssoGroupArrayInput` via:
//
//	PolicyFssoGroupArray{ PolicyFssoGroupArgs{...} }
type PolicyFssoGroupArrayInput interface {
	pulumi.Input

	ToPolicyFssoGroupArrayOutput() PolicyFssoGroupArrayOutput
	ToPolicyFssoGroupArrayOutputWithContext(context.Context) PolicyFssoGroupArrayOutput
}

type PolicyFssoGroupArray []PolicyFssoGroupInput

func (PolicyFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyFssoGroup)(nil)).Elem()
}

func (i PolicyFssoGroupArray) ToPolicyFssoGroupArrayOutput() PolicyFssoGroupArrayOutput {
	return i.ToPolicyFssoGroupArrayOutputWithContext(context.Background())
}

func (i PolicyFssoGroupArray) ToPolicyFssoGroupArrayOutputWithContext(ctx context.Context) PolicyFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyFssoGroupArrayOutput)
}

type PolicyFssoGroupOutput struct{ *pulumi.OutputState }

func (PolicyFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyFssoGroup)(nil)).Elem()
}

func (o PolicyFssoGroupOutput) ToPolicyFssoGroupOutput() PolicyFssoGroupOutput {
	return o
}

func (o PolicyFssoGroupOutput) ToPolicyFssoGroupOutputWithContext(ctx context.Context) PolicyFssoGroupOutput {
	return o
}

// Names of FSSO groups.
func (o PolicyFssoGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyFssoGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyFssoGroup)(nil)).Elem()
}

func (o PolicyFssoGroupArrayOutput) ToPolicyFssoGroupArrayOutput() PolicyFssoGroupArrayOutput {
	return o
}

func (o PolicyFssoGroupArrayOutput) ToPolicyFssoGroupArrayOutputWithContext(ctx context.Context) PolicyFssoGroupArrayOutput {
	return o
}

func (o PolicyFssoGroupArrayOutput) Index(i pulumi.IntInput) PolicyFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyFssoGroup {
		return vs[0].([]PolicyFssoGroup)[vs[1].(int)]
	}).(PolicyFssoGroupOutput)
}

type PolicyGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// PolicyGroupInput is an input type that accepts PolicyGroupArgs and PolicyGroupOutput values.
// You can construct a concrete instance of `PolicyGroupInput` via:
//
//	PolicyGroupArgs{...}
type PolicyGroupInput interface {
	pulumi.Input

	ToPolicyGroupOutput() PolicyGroupOutput
	ToPolicyGroupOutputWithContext(context.Context) PolicyGroupOutput
}

type PolicyGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroup)(nil)).Elem()
}

func (i PolicyGroupArgs) ToPolicyGroupOutput() PolicyGroupOutput {
	return i.ToPolicyGroupOutputWithContext(context.Background())
}

func (i PolicyGroupArgs) ToPolicyGroupOutputWithContext(ctx context.Context) PolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupOutput)
}

// PolicyGroupArrayInput is an input type that accepts PolicyGroupArray and PolicyGroupArrayOutput values.
// You can construct a concrete instance of `PolicyGroupArrayInput` via:
//
//	PolicyGroupArray{ PolicyGroupArgs{...} }
type PolicyGroupArrayInput interface {
	pulumi.Input

	ToPolicyGroupArrayOutput() PolicyGroupArrayOutput
	ToPolicyGroupArrayOutputWithContext(context.Context) PolicyGroupArrayOutput
}

type PolicyGroupArray []PolicyGroupInput

func (PolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroup)(nil)).Elem()
}

func (i PolicyGroupArray) ToPolicyGroupArrayOutput() PolicyGroupArrayOutput {
	return i.ToPolicyGroupArrayOutputWithContext(context.Background())
}

func (i PolicyGroupArray) ToPolicyGroupArrayOutputWithContext(ctx context.Context) PolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupArrayOutput)
}

type PolicyGroupOutput struct{ *pulumi.OutputState }

func (PolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroup)(nil)).Elem()
}

func (o PolicyGroupOutput) ToPolicyGroupOutput() PolicyGroupOutput {
	return o
}

func (o PolicyGroupOutput) ToPolicyGroupOutputWithContext(ctx context.Context) PolicyGroupOutput {
	return o
}

// Group name.
func (o PolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroup)(nil)).Elem()
}

func (o PolicyGroupArrayOutput) ToPolicyGroupArrayOutput() PolicyGroupArrayOutput {
	return o
}

func (o PolicyGroupArrayOutput) ToPolicyGroupArrayOutputWithContext(ctx context.Context) PolicyGroupArrayOutput {
	return o
}

func (o PolicyGroupArrayOutput) Index(i pulumi.IntInput) PolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroup {
		return vs[0].([]PolicyGroup)[vs[1].(int)]
	}).(PolicyGroupOutput)
}

type PolicyInternetService6Custom struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyInternetService6CustomInput is an input type that accepts PolicyInternetService6CustomArgs and PolicyInternetService6CustomOutput values.
// You can construct a concrete instance of `PolicyInternetService6CustomInput` via:
//
//	PolicyInternetService6CustomArgs{...}
type PolicyInternetService6CustomInput interface {
	pulumi.Input

	ToPolicyInternetService6CustomOutput() PolicyInternetService6CustomOutput
	ToPolicyInternetService6CustomOutputWithContext(context.Context) PolicyInternetService6CustomOutput
}

type PolicyInternetService6CustomArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetService6CustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6Custom)(nil)).Elem()
}

func (i PolicyInternetService6CustomArgs) ToPolicyInternetService6CustomOutput() PolicyInternetService6CustomOutput {
	return i.ToPolicyInternetService6CustomOutputWithContext(context.Background())
}

func (i PolicyInternetService6CustomArgs) ToPolicyInternetService6CustomOutputWithContext(ctx context.Context) PolicyInternetService6CustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6CustomOutput)
}

// PolicyInternetService6CustomArrayInput is an input type that accepts PolicyInternetService6CustomArray and PolicyInternetService6CustomArrayOutput values.
// You can construct a concrete instance of `PolicyInternetService6CustomArrayInput` via:
//
//	PolicyInternetService6CustomArray{ PolicyInternetService6CustomArgs{...} }
type PolicyInternetService6CustomArrayInput interface {
	pulumi.Input

	ToPolicyInternetService6CustomArrayOutput() PolicyInternetService6CustomArrayOutput
	ToPolicyInternetService6CustomArrayOutputWithContext(context.Context) PolicyInternetService6CustomArrayOutput
}

type PolicyInternetService6CustomArray []PolicyInternetService6CustomInput

func (PolicyInternetService6CustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6Custom)(nil)).Elem()
}

func (i PolicyInternetService6CustomArray) ToPolicyInternetService6CustomArrayOutput() PolicyInternetService6CustomArrayOutput {
	return i.ToPolicyInternetService6CustomArrayOutputWithContext(context.Background())
}

func (i PolicyInternetService6CustomArray) ToPolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) PolicyInternetService6CustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6CustomArrayOutput)
}

type PolicyInternetService6CustomOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6CustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6Custom)(nil)).Elem()
}

func (o PolicyInternetService6CustomOutput) ToPolicyInternetService6CustomOutput() PolicyInternetService6CustomOutput {
	return o
}

func (o PolicyInternetService6CustomOutput) ToPolicyInternetService6CustomOutputWithContext(ctx context.Context) PolicyInternetService6CustomOutput {
	return o
}

// Policy name.
func (o PolicyInternetService6CustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetService6Custom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetService6CustomArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6CustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6Custom)(nil)).Elem()
}

func (o PolicyInternetService6CustomArrayOutput) ToPolicyInternetService6CustomArrayOutput() PolicyInternetService6CustomArrayOutput {
	return o
}

func (o PolicyInternetService6CustomArrayOutput) ToPolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) PolicyInternetService6CustomArrayOutput {
	return o
}

func (o PolicyInternetService6CustomArrayOutput) Index(i pulumi.IntInput) PolicyInternetService6CustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetService6Custom {
		return vs[0].([]PolicyInternetService6Custom)[vs[1].(int)]
	}).(PolicyInternetService6CustomOutput)
}

type PolicyInternetService6CustomGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyInternetService6CustomGroupInput is an input type that accepts PolicyInternetService6CustomGroupArgs and PolicyInternetService6CustomGroupOutput values.
// You can construct a concrete instance of `PolicyInternetService6CustomGroupInput` via:
//
//	PolicyInternetService6CustomGroupArgs{...}
type PolicyInternetService6CustomGroupInput interface {
	pulumi.Input

	ToPolicyInternetService6CustomGroupOutput() PolicyInternetService6CustomGroupOutput
	ToPolicyInternetService6CustomGroupOutputWithContext(context.Context) PolicyInternetService6CustomGroupOutput
}

type PolicyInternetService6CustomGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetService6CustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i PolicyInternetService6CustomGroupArgs) ToPolicyInternetService6CustomGroupOutput() PolicyInternetService6CustomGroupOutput {
	return i.ToPolicyInternetService6CustomGroupOutputWithContext(context.Background())
}

func (i PolicyInternetService6CustomGroupArgs) ToPolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) PolicyInternetService6CustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6CustomGroupOutput)
}

// PolicyInternetService6CustomGroupArrayInput is an input type that accepts PolicyInternetService6CustomGroupArray and PolicyInternetService6CustomGroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetService6CustomGroupArrayInput` via:
//
//	PolicyInternetService6CustomGroupArray{ PolicyInternetService6CustomGroupArgs{...} }
type PolicyInternetService6CustomGroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetService6CustomGroupArrayOutput() PolicyInternetService6CustomGroupArrayOutput
	ToPolicyInternetService6CustomGroupArrayOutputWithContext(context.Context) PolicyInternetService6CustomGroupArrayOutput
}

type PolicyInternetService6CustomGroupArray []PolicyInternetService6CustomGroupInput

func (PolicyInternetService6CustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i PolicyInternetService6CustomGroupArray) ToPolicyInternetService6CustomGroupArrayOutput() PolicyInternetService6CustomGroupArrayOutput {
	return i.ToPolicyInternetService6CustomGroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetService6CustomGroupArray) ToPolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetService6CustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6CustomGroupArrayOutput)
}

type PolicyInternetService6CustomGroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6CustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o PolicyInternetService6CustomGroupOutput) ToPolicyInternetService6CustomGroupOutput() PolicyInternetService6CustomGroupOutput {
	return o
}

func (o PolicyInternetService6CustomGroupOutput) ToPolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) PolicyInternetService6CustomGroupOutput {
	return o
}

// Policy name.
func (o PolicyInternetService6CustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetService6CustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetService6CustomGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6CustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o PolicyInternetService6CustomGroupArrayOutput) ToPolicyInternetService6CustomGroupArrayOutput() PolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o PolicyInternetService6CustomGroupArrayOutput) ToPolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o PolicyInternetService6CustomGroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetService6CustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetService6CustomGroup {
		return vs[0].([]PolicyInternetService6CustomGroup)[vs[1].(int)]
	}).(PolicyInternetService6CustomGroupOutput)
}

type PolicyInternetService6Group struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyInternetService6GroupInput is an input type that accepts PolicyInternetService6GroupArgs and PolicyInternetService6GroupOutput values.
// You can construct a concrete instance of `PolicyInternetService6GroupInput` via:
//
//	PolicyInternetService6GroupArgs{...}
type PolicyInternetService6GroupInput interface {
	pulumi.Input

	ToPolicyInternetService6GroupOutput() PolicyInternetService6GroupOutput
	ToPolicyInternetService6GroupOutputWithContext(context.Context) PolicyInternetService6GroupOutput
}

type PolicyInternetService6GroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetService6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6Group)(nil)).Elem()
}

func (i PolicyInternetService6GroupArgs) ToPolicyInternetService6GroupOutput() PolicyInternetService6GroupOutput {
	return i.ToPolicyInternetService6GroupOutputWithContext(context.Background())
}

func (i PolicyInternetService6GroupArgs) ToPolicyInternetService6GroupOutputWithContext(ctx context.Context) PolicyInternetService6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6GroupOutput)
}

// PolicyInternetService6GroupArrayInput is an input type that accepts PolicyInternetService6GroupArray and PolicyInternetService6GroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetService6GroupArrayInput` via:
//
//	PolicyInternetService6GroupArray{ PolicyInternetService6GroupArgs{...} }
type PolicyInternetService6GroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetService6GroupArrayOutput() PolicyInternetService6GroupArrayOutput
	ToPolicyInternetService6GroupArrayOutputWithContext(context.Context) PolicyInternetService6GroupArrayOutput
}

type PolicyInternetService6GroupArray []PolicyInternetService6GroupInput

func (PolicyInternetService6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6Group)(nil)).Elem()
}

func (i PolicyInternetService6GroupArray) ToPolicyInternetService6GroupArrayOutput() PolicyInternetService6GroupArrayOutput {
	return i.ToPolicyInternetService6GroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetService6GroupArray) ToPolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) PolicyInternetService6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6GroupArrayOutput)
}

type PolicyInternetService6GroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6Group)(nil)).Elem()
}

func (o PolicyInternetService6GroupOutput) ToPolicyInternetService6GroupOutput() PolicyInternetService6GroupOutput {
	return o
}

func (o PolicyInternetService6GroupOutput) ToPolicyInternetService6GroupOutputWithContext(ctx context.Context) PolicyInternetService6GroupOutput {
	return o
}

// Policy name.
func (o PolicyInternetService6GroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetService6Group) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetService6GroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6Group)(nil)).Elem()
}

func (o PolicyInternetService6GroupArrayOutput) ToPolicyInternetService6GroupArrayOutput() PolicyInternetService6GroupArrayOutput {
	return o
}

func (o PolicyInternetService6GroupArrayOutput) ToPolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) PolicyInternetService6GroupArrayOutput {
	return o
}

func (o PolicyInternetService6GroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetService6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetService6Group {
		return vs[0].([]PolicyInternetService6Group)[vs[1].(int)]
	}).(PolicyInternetService6GroupOutput)
}

type PolicyInternetService6Name struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyInternetService6NameInput is an input type that accepts PolicyInternetService6NameArgs and PolicyInternetService6NameOutput values.
// You can construct a concrete instance of `PolicyInternetService6NameInput` via:
//
//	PolicyInternetService6NameArgs{...}
type PolicyInternetService6NameInput interface {
	pulumi.Input

	ToPolicyInternetService6NameOutput() PolicyInternetService6NameOutput
	ToPolicyInternetService6NameOutputWithContext(context.Context) PolicyInternetService6NameOutput
}

type PolicyInternetService6NameArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetService6NameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6Name)(nil)).Elem()
}

func (i PolicyInternetService6NameArgs) ToPolicyInternetService6NameOutput() PolicyInternetService6NameOutput {
	return i.ToPolicyInternetService6NameOutputWithContext(context.Background())
}

func (i PolicyInternetService6NameArgs) ToPolicyInternetService6NameOutputWithContext(ctx context.Context) PolicyInternetService6NameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6NameOutput)
}

// PolicyInternetService6NameArrayInput is an input type that accepts PolicyInternetService6NameArray and PolicyInternetService6NameArrayOutput values.
// You can construct a concrete instance of `PolicyInternetService6NameArrayInput` via:
//
//	PolicyInternetService6NameArray{ PolicyInternetService6NameArgs{...} }
type PolicyInternetService6NameArrayInput interface {
	pulumi.Input

	ToPolicyInternetService6NameArrayOutput() PolicyInternetService6NameArrayOutput
	ToPolicyInternetService6NameArrayOutputWithContext(context.Context) PolicyInternetService6NameArrayOutput
}

type PolicyInternetService6NameArray []PolicyInternetService6NameInput

func (PolicyInternetService6NameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6Name)(nil)).Elem()
}

func (i PolicyInternetService6NameArray) ToPolicyInternetService6NameArrayOutput() PolicyInternetService6NameArrayOutput {
	return i.ToPolicyInternetService6NameArrayOutputWithContext(context.Background())
}

func (i PolicyInternetService6NameArray) ToPolicyInternetService6NameArrayOutputWithContext(ctx context.Context) PolicyInternetService6NameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6NameArrayOutput)
}

type PolicyInternetService6NameOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6NameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6Name)(nil)).Elem()
}

func (o PolicyInternetService6NameOutput) ToPolicyInternetService6NameOutput() PolicyInternetService6NameOutput {
	return o
}

func (o PolicyInternetService6NameOutput) ToPolicyInternetService6NameOutputWithContext(ctx context.Context) PolicyInternetService6NameOutput {
	return o
}

// Policy name.
func (o PolicyInternetService6NameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetService6Name) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetService6NameArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6NameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6Name)(nil)).Elem()
}

func (o PolicyInternetService6NameArrayOutput) ToPolicyInternetService6NameArrayOutput() PolicyInternetService6NameArrayOutput {
	return o
}

func (o PolicyInternetService6NameArrayOutput) ToPolicyInternetService6NameArrayOutputWithContext(ctx context.Context) PolicyInternetService6NameArrayOutput {
	return o
}

func (o PolicyInternetService6NameArrayOutput) Index(i pulumi.IntInput) PolicyInternetService6NameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetService6Name {
		return vs[0].([]PolicyInternetService6Name)[vs[1].(int)]
	}).(PolicyInternetService6NameOutput)
}

type PolicyInternetService6SrcCustom struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyInternetService6SrcCustomInput is an input type that accepts PolicyInternetService6SrcCustomArgs and PolicyInternetService6SrcCustomOutput values.
// You can construct a concrete instance of `PolicyInternetService6SrcCustomInput` via:
//
//	PolicyInternetService6SrcCustomArgs{...}
type PolicyInternetService6SrcCustomInput interface {
	pulumi.Input

	ToPolicyInternetService6SrcCustomOutput() PolicyInternetService6SrcCustomOutput
	ToPolicyInternetService6SrcCustomOutputWithContext(context.Context) PolicyInternetService6SrcCustomOutput
}

type PolicyInternetService6SrcCustomArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetService6SrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i PolicyInternetService6SrcCustomArgs) ToPolicyInternetService6SrcCustomOutput() PolicyInternetService6SrcCustomOutput {
	return i.ToPolicyInternetService6SrcCustomOutputWithContext(context.Background())
}

func (i PolicyInternetService6SrcCustomArgs) ToPolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) PolicyInternetService6SrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6SrcCustomOutput)
}

// PolicyInternetService6SrcCustomArrayInput is an input type that accepts PolicyInternetService6SrcCustomArray and PolicyInternetService6SrcCustomArrayOutput values.
// You can construct a concrete instance of `PolicyInternetService6SrcCustomArrayInput` via:
//
//	PolicyInternetService6SrcCustomArray{ PolicyInternetService6SrcCustomArgs{...} }
type PolicyInternetService6SrcCustomArrayInput interface {
	pulumi.Input

	ToPolicyInternetService6SrcCustomArrayOutput() PolicyInternetService6SrcCustomArrayOutput
	ToPolicyInternetService6SrcCustomArrayOutputWithContext(context.Context) PolicyInternetService6SrcCustomArrayOutput
}

type PolicyInternetService6SrcCustomArray []PolicyInternetService6SrcCustomInput

func (PolicyInternetService6SrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i PolicyInternetService6SrcCustomArray) ToPolicyInternetService6SrcCustomArrayOutput() PolicyInternetService6SrcCustomArrayOutput {
	return i.ToPolicyInternetService6SrcCustomArrayOutputWithContext(context.Background())
}

func (i PolicyInternetService6SrcCustomArray) ToPolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) PolicyInternetService6SrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6SrcCustomArrayOutput)
}

type PolicyInternetService6SrcCustomOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6SrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o PolicyInternetService6SrcCustomOutput) ToPolicyInternetService6SrcCustomOutput() PolicyInternetService6SrcCustomOutput {
	return o
}

func (o PolicyInternetService6SrcCustomOutput) ToPolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) PolicyInternetService6SrcCustomOutput {
	return o
}

// Policy name.
func (o PolicyInternetService6SrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetService6SrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetService6SrcCustomArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6SrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o PolicyInternetService6SrcCustomArrayOutput) ToPolicyInternetService6SrcCustomArrayOutput() PolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o PolicyInternetService6SrcCustomArrayOutput) ToPolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) PolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o PolicyInternetService6SrcCustomArrayOutput) Index(i pulumi.IntInput) PolicyInternetService6SrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetService6SrcCustom {
		return vs[0].([]PolicyInternetService6SrcCustom)[vs[1].(int)]
	}).(PolicyInternetService6SrcCustomOutput)
}

type PolicyInternetService6SrcCustomGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyInternetService6SrcCustomGroupInput is an input type that accepts PolicyInternetService6SrcCustomGroupArgs and PolicyInternetService6SrcCustomGroupOutput values.
// You can construct a concrete instance of `PolicyInternetService6SrcCustomGroupInput` via:
//
//	PolicyInternetService6SrcCustomGroupArgs{...}
type PolicyInternetService6SrcCustomGroupInput interface {
	pulumi.Input

	ToPolicyInternetService6SrcCustomGroupOutput() PolicyInternetService6SrcCustomGroupOutput
	ToPolicyInternetService6SrcCustomGroupOutputWithContext(context.Context) PolicyInternetService6SrcCustomGroupOutput
}

type PolicyInternetService6SrcCustomGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetService6SrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i PolicyInternetService6SrcCustomGroupArgs) ToPolicyInternetService6SrcCustomGroupOutput() PolicyInternetService6SrcCustomGroupOutput {
	return i.ToPolicyInternetService6SrcCustomGroupOutputWithContext(context.Background())
}

func (i PolicyInternetService6SrcCustomGroupArgs) ToPolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) PolicyInternetService6SrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6SrcCustomGroupOutput)
}

// PolicyInternetService6SrcCustomGroupArrayInput is an input type that accepts PolicyInternetService6SrcCustomGroupArray and PolicyInternetService6SrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetService6SrcCustomGroupArrayInput` via:
//
//	PolicyInternetService6SrcCustomGroupArray{ PolicyInternetService6SrcCustomGroupArgs{...} }
type PolicyInternetService6SrcCustomGroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetService6SrcCustomGroupArrayOutput() PolicyInternetService6SrcCustomGroupArrayOutput
	ToPolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Context) PolicyInternetService6SrcCustomGroupArrayOutput
}

type PolicyInternetService6SrcCustomGroupArray []PolicyInternetService6SrcCustomGroupInput

func (PolicyInternetService6SrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i PolicyInternetService6SrcCustomGroupArray) ToPolicyInternetService6SrcCustomGroupArrayOutput() PolicyInternetService6SrcCustomGroupArrayOutput {
	return i.ToPolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetService6SrcCustomGroupArray) ToPolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetService6SrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6SrcCustomGroupArrayOutput)
}

type PolicyInternetService6SrcCustomGroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6SrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o PolicyInternetService6SrcCustomGroupOutput) ToPolicyInternetService6SrcCustomGroupOutput() PolicyInternetService6SrcCustomGroupOutput {
	return o
}

func (o PolicyInternetService6SrcCustomGroupOutput) ToPolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) PolicyInternetService6SrcCustomGroupOutput {
	return o
}

// Policy name.
func (o PolicyInternetService6SrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetService6SrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetService6SrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6SrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o PolicyInternetService6SrcCustomGroupArrayOutput) ToPolicyInternetService6SrcCustomGroupArrayOutput() PolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o PolicyInternetService6SrcCustomGroupArrayOutput) ToPolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o PolicyInternetService6SrcCustomGroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetService6SrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetService6SrcCustomGroup {
		return vs[0].([]PolicyInternetService6SrcCustomGroup)[vs[1].(int)]
	}).(PolicyInternetService6SrcCustomGroupOutput)
}

type PolicyInternetService6SrcGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyInternetService6SrcGroupInput is an input type that accepts PolicyInternetService6SrcGroupArgs and PolicyInternetService6SrcGroupOutput values.
// You can construct a concrete instance of `PolicyInternetService6SrcGroupInput` via:
//
//	PolicyInternetService6SrcGroupArgs{...}
type PolicyInternetService6SrcGroupInput interface {
	pulumi.Input

	ToPolicyInternetService6SrcGroupOutput() PolicyInternetService6SrcGroupOutput
	ToPolicyInternetService6SrcGroupOutputWithContext(context.Context) PolicyInternetService6SrcGroupOutput
}

type PolicyInternetService6SrcGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetService6SrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i PolicyInternetService6SrcGroupArgs) ToPolicyInternetService6SrcGroupOutput() PolicyInternetService6SrcGroupOutput {
	return i.ToPolicyInternetService6SrcGroupOutputWithContext(context.Background())
}

func (i PolicyInternetService6SrcGroupArgs) ToPolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) PolicyInternetService6SrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6SrcGroupOutput)
}

// PolicyInternetService6SrcGroupArrayInput is an input type that accepts PolicyInternetService6SrcGroupArray and PolicyInternetService6SrcGroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetService6SrcGroupArrayInput` via:
//
//	PolicyInternetService6SrcGroupArray{ PolicyInternetService6SrcGroupArgs{...} }
type PolicyInternetService6SrcGroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetService6SrcGroupArrayOutput() PolicyInternetService6SrcGroupArrayOutput
	ToPolicyInternetService6SrcGroupArrayOutputWithContext(context.Context) PolicyInternetService6SrcGroupArrayOutput
}

type PolicyInternetService6SrcGroupArray []PolicyInternetService6SrcGroupInput

func (PolicyInternetService6SrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i PolicyInternetService6SrcGroupArray) ToPolicyInternetService6SrcGroupArrayOutput() PolicyInternetService6SrcGroupArrayOutput {
	return i.ToPolicyInternetService6SrcGroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetService6SrcGroupArray) ToPolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) PolicyInternetService6SrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6SrcGroupArrayOutput)
}

type PolicyInternetService6SrcGroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6SrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o PolicyInternetService6SrcGroupOutput) ToPolicyInternetService6SrcGroupOutput() PolicyInternetService6SrcGroupOutput {
	return o
}

func (o PolicyInternetService6SrcGroupOutput) ToPolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) PolicyInternetService6SrcGroupOutput {
	return o
}

// Policy name.
func (o PolicyInternetService6SrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetService6SrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetService6SrcGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6SrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o PolicyInternetService6SrcGroupArrayOutput) ToPolicyInternetService6SrcGroupArrayOutput() PolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o PolicyInternetService6SrcGroupArrayOutput) ToPolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) PolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o PolicyInternetService6SrcGroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetService6SrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetService6SrcGroup {
		return vs[0].([]PolicyInternetService6SrcGroup)[vs[1].(int)]
	}).(PolicyInternetService6SrcGroupOutput)
}

type PolicyInternetService6SrcName struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyInternetService6SrcNameInput is an input type that accepts PolicyInternetService6SrcNameArgs and PolicyInternetService6SrcNameOutput values.
// You can construct a concrete instance of `PolicyInternetService6SrcNameInput` via:
//
//	PolicyInternetService6SrcNameArgs{...}
type PolicyInternetService6SrcNameInput interface {
	pulumi.Input

	ToPolicyInternetService6SrcNameOutput() PolicyInternetService6SrcNameOutput
	ToPolicyInternetService6SrcNameOutputWithContext(context.Context) PolicyInternetService6SrcNameOutput
}

type PolicyInternetService6SrcNameArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetService6SrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6SrcName)(nil)).Elem()
}

func (i PolicyInternetService6SrcNameArgs) ToPolicyInternetService6SrcNameOutput() PolicyInternetService6SrcNameOutput {
	return i.ToPolicyInternetService6SrcNameOutputWithContext(context.Background())
}

func (i PolicyInternetService6SrcNameArgs) ToPolicyInternetService6SrcNameOutputWithContext(ctx context.Context) PolicyInternetService6SrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6SrcNameOutput)
}

// PolicyInternetService6SrcNameArrayInput is an input type that accepts PolicyInternetService6SrcNameArray and PolicyInternetService6SrcNameArrayOutput values.
// You can construct a concrete instance of `PolicyInternetService6SrcNameArrayInput` via:
//
//	PolicyInternetService6SrcNameArray{ PolicyInternetService6SrcNameArgs{...} }
type PolicyInternetService6SrcNameArrayInput interface {
	pulumi.Input

	ToPolicyInternetService6SrcNameArrayOutput() PolicyInternetService6SrcNameArrayOutput
	ToPolicyInternetService6SrcNameArrayOutputWithContext(context.Context) PolicyInternetService6SrcNameArrayOutput
}

type PolicyInternetService6SrcNameArray []PolicyInternetService6SrcNameInput

func (PolicyInternetService6SrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6SrcName)(nil)).Elem()
}

func (i PolicyInternetService6SrcNameArray) ToPolicyInternetService6SrcNameArrayOutput() PolicyInternetService6SrcNameArrayOutput {
	return i.ToPolicyInternetService6SrcNameArrayOutputWithContext(context.Background())
}

func (i PolicyInternetService6SrcNameArray) ToPolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) PolicyInternetService6SrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetService6SrcNameArrayOutput)
}

type PolicyInternetService6SrcNameOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6SrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetService6SrcName)(nil)).Elem()
}

func (o PolicyInternetService6SrcNameOutput) ToPolicyInternetService6SrcNameOutput() PolicyInternetService6SrcNameOutput {
	return o
}

func (o PolicyInternetService6SrcNameOutput) ToPolicyInternetService6SrcNameOutputWithContext(ctx context.Context) PolicyInternetService6SrcNameOutput {
	return o
}

// Policy name.
func (o PolicyInternetService6SrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetService6SrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetService6SrcNameArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetService6SrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetService6SrcName)(nil)).Elem()
}

func (o PolicyInternetService6SrcNameArrayOutput) ToPolicyInternetService6SrcNameArrayOutput() PolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o PolicyInternetService6SrcNameArrayOutput) ToPolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) PolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o PolicyInternetService6SrcNameArrayOutput) Index(i pulumi.IntInput) PolicyInternetService6SrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetService6SrcName {
		return vs[0].([]PolicyInternetService6SrcName)[vs[1].(int)]
	}).(PolicyInternetService6SrcNameOutput)
}

type PolicyInternetServiceCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceCustomInput is an input type that accepts PolicyInternetServiceCustomArgs and PolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `PolicyInternetServiceCustomInput` via:
//
//	PolicyInternetServiceCustomArgs{...}
type PolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToPolicyInternetServiceCustomOutput() PolicyInternetServiceCustomOutput
	ToPolicyInternetServiceCustomOutputWithContext(context.Context) PolicyInternetServiceCustomOutput
}

type PolicyInternetServiceCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceCustom)(nil)).Elem()
}

func (i PolicyInternetServiceCustomArgs) ToPolicyInternetServiceCustomOutput() PolicyInternetServiceCustomOutput {
	return i.ToPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i PolicyInternetServiceCustomArgs) ToPolicyInternetServiceCustomOutputWithContext(ctx context.Context) PolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceCustomOutput)
}

// PolicyInternetServiceCustomArrayInput is an input type that accepts PolicyInternetServiceCustomArray and PolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceCustomArrayInput` via:
//
//	PolicyInternetServiceCustomArray{ PolicyInternetServiceCustomArgs{...} }
type PolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceCustomArrayOutput() PolicyInternetServiceCustomArrayOutput
	ToPolicyInternetServiceCustomArrayOutputWithContext(context.Context) PolicyInternetServiceCustomArrayOutput
}

type PolicyInternetServiceCustomArray []PolicyInternetServiceCustomInput

func (PolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceCustom)(nil)).Elem()
}

func (i PolicyInternetServiceCustomArray) ToPolicyInternetServiceCustomArrayOutput() PolicyInternetServiceCustomArrayOutput {
	return i.ToPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceCustomArray) ToPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) PolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceCustomArrayOutput)
}

type PolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceCustom)(nil)).Elem()
}

func (o PolicyInternetServiceCustomOutput) ToPolicyInternetServiceCustomOutput() PolicyInternetServiceCustomOutput {
	return o
}

func (o PolicyInternetServiceCustomOutput) ToPolicyInternetServiceCustomOutputWithContext(ctx context.Context) PolicyInternetServiceCustomOutput {
	return o
}

// Custom Internet Service name.
func (o PolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceCustom)(nil)).Elem()
}

func (o PolicyInternetServiceCustomArrayOutput) ToPolicyInternetServiceCustomArrayOutput() PolicyInternetServiceCustomArrayOutput {
	return o
}

func (o PolicyInternetServiceCustomArrayOutput) ToPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) PolicyInternetServiceCustomArrayOutput {
	return o
}

func (o PolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceCustom {
		return vs[0].([]PolicyInternetServiceCustom)[vs[1].(int)]
	}).(PolicyInternetServiceCustomOutput)
}

type PolicyInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceCustomGroupInput is an input type that accepts PolicyInternetServiceCustomGroupArgs and PolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `PolicyInternetServiceCustomGroupInput` via:
//
//	PolicyInternetServiceCustomGroupArgs{...}
type PolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToPolicyInternetServiceCustomGroupOutput() PolicyInternetServiceCustomGroupOutput
	ToPolicyInternetServiceCustomGroupOutputWithContext(context.Context) PolicyInternetServiceCustomGroupOutput
}

type PolicyInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i PolicyInternetServiceCustomGroupArgs) ToPolicyInternetServiceCustomGroupOutput() PolicyInternetServiceCustomGroupOutput {
	return i.ToPolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i PolicyInternetServiceCustomGroupArgs) ToPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) PolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceCustomGroupOutput)
}

// PolicyInternetServiceCustomGroupArrayInput is an input type that accepts PolicyInternetServiceCustomGroupArray and PolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceCustomGroupArrayInput` via:
//
//	PolicyInternetServiceCustomGroupArray{ PolicyInternetServiceCustomGroupArgs{...} }
type PolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceCustomGroupArrayOutput() PolicyInternetServiceCustomGroupArrayOutput
	ToPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) PolicyInternetServiceCustomGroupArrayOutput
}

type PolicyInternetServiceCustomGroupArray []PolicyInternetServiceCustomGroupInput

func (PolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i PolicyInternetServiceCustomGroupArray) ToPolicyInternetServiceCustomGroupArrayOutput() PolicyInternetServiceCustomGroupArrayOutput {
	return i.ToPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceCustomGroupArray) ToPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceCustomGroupArrayOutput)
}

type PolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o PolicyInternetServiceCustomGroupOutput) ToPolicyInternetServiceCustomGroupOutput() PolicyInternetServiceCustomGroupOutput {
	return o
}

func (o PolicyInternetServiceCustomGroupOutput) ToPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) PolicyInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o PolicyInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o PolicyInternetServiceCustomGroupArrayOutput) ToPolicyInternetServiceCustomGroupArrayOutput() PolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceCustomGroupArrayOutput) ToPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceCustomGroup {
		return vs[0].([]PolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(PolicyInternetServiceCustomGroupOutput)
}

type PolicyInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceGroupInput is an input type that accepts PolicyInternetServiceGroupArgs and PolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `PolicyInternetServiceGroupInput` via:
//
//	PolicyInternetServiceGroupArgs{...}
type PolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToPolicyInternetServiceGroupOutput() PolicyInternetServiceGroupOutput
	ToPolicyInternetServiceGroupOutputWithContext(context.Context) PolicyInternetServiceGroupOutput
}

type PolicyInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceGroup)(nil)).Elem()
}

func (i PolicyInternetServiceGroupArgs) ToPolicyInternetServiceGroupOutput() PolicyInternetServiceGroupOutput {
	return i.ToPolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i PolicyInternetServiceGroupArgs) ToPolicyInternetServiceGroupOutputWithContext(ctx context.Context) PolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceGroupOutput)
}

// PolicyInternetServiceGroupArrayInput is an input type that accepts PolicyInternetServiceGroupArray and PolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceGroupArrayInput` via:
//
//	PolicyInternetServiceGroupArray{ PolicyInternetServiceGroupArgs{...} }
type PolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceGroupArrayOutput() PolicyInternetServiceGroupArrayOutput
	ToPolicyInternetServiceGroupArrayOutputWithContext(context.Context) PolicyInternetServiceGroupArrayOutput
}

type PolicyInternetServiceGroupArray []PolicyInternetServiceGroupInput

func (PolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceGroup)(nil)).Elem()
}

func (i PolicyInternetServiceGroupArray) ToPolicyInternetServiceGroupArrayOutput() PolicyInternetServiceGroupArrayOutput {
	return i.ToPolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceGroupArray) ToPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceGroupArrayOutput)
}

type PolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceGroup)(nil)).Elem()
}

func (o PolicyInternetServiceGroupOutput) ToPolicyInternetServiceGroupOutput() PolicyInternetServiceGroupOutput {
	return o
}

func (o PolicyInternetServiceGroupOutput) ToPolicyInternetServiceGroupOutputWithContext(ctx context.Context) PolicyInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o PolicyInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceGroup)(nil)).Elem()
}

func (o PolicyInternetServiceGroupArrayOutput) ToPolicyInternetServiceGroupArrayOutput() PolicyInternetServiceGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceGroupArrayOutput) ToPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceGroup {
		return vs[0].([]PolicyInternetServiceGroup)[vs[1].(int)]
	}).(PolicyInternetServiceGroupOutput)
}

type PolicyInternetServiceId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// PolicyInternetServiceIdInput is an input type that accepts PolicyInternetServiceIdArgs and PolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `PolicyInternetServiceIdInput` via:
//
//	PolicyInternetServiceIdArgs{...}
type PolicyInternetServiceIdInput interface {
	pulumi.Input

	ToPolicyInternetServiceIdOutput() PolicyInternetServiceIdOutput
	ToPolicyInternetServiceIdOutputWithContext(context.Context) PolicyInternetServiceIdOutput
}

type PolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceId)(nil)).Elem()
}

func (i PolicyInternetServiceIdArgs) ToPolicyInternetServiceIdOutput() PolicyInternetServiceIdOutput {
	return i.ToPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i PolicyInternetServiceIdArgs) ToPolicyInternetServiceIdOutputWithContext(ctx context.Context) PolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceIdOutput)
}

// PolicyInternetServiceIdArrayInput is an input type that accepts PolicyInternetServiceIdArray and PolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceIdArrayInput` via:
//
//	PolicyInternetServiceIdArray{ PolicyInternetServiceIdArgs{...} }
type PolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceIdArrayOutput() PolicyInternetServiceIdArrayOutput
	ToPolicyInternetServiceIdArrayOutputWithContext(context.Context) PolicyInternetServiceIdArrayOutput
}

type PolicyInternetServiceIdArray []PolicyInternetServiceIdInput

func (PolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceId)(nil)).Elem()
}

func (i PolicyInternetServiceIdArray) ToPolicyInternetServiceIdArrayOutput() PolicyInternetServiceIdArrayOutput {
	return i.ToPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceIdArray) ToPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) PolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceIdArrayOutput)
}

type PolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceId)(nil)).Elem()
}

func (o PolicyInternetServiceIdOutput) ToPolicyInternetServiceIdOutput() PolicyInternetServiceIdOutput {
	return o
}

func (o PolicyInternetServiceIdOutput) ToPolicyInternetServiceIdOutputWithContext(ctx context.Context) PolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o PolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceId)(nil)).Elem()
}

func (o PolicyInternetServiceIdArrayOutput) ToPolicyInternetServiceIdArrayOutput() PolicyInternetServiceIdArrayOutput {
	return o
}

func (o PolicyInternetServiceIdArrayOutput) ToPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) PolicyInternetServiceIdArrayOutput {
	return o
}

func (o PolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceId {
		return vs[0].([]PolicyInternetServiceId)[vs[1].(int)]
	}).(PolicyInternetServiceIdOutput)
}

type PolicyInternetServiceName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceNameInput is an input type that accepts PolicyInternetServiceNameArgs and PolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `PolicyInternetServiceNameInput` via:
//
//	PolicyInternetServiceNameArgs{...}
type PolicyInternetServiceNameInput interface {
	pulumi.Input

	ToPolicyInternetServiceNameOutput() PolicyInternetServiceNameOutput
	ToPolicyInternetServiceNameOutputWithContext(context.Context) PolicyInternetServiceNameOutput
}

type PolicyInternetServiceNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceName)(nil)).Elem()
}

func (i PolicyInternetServiceNameArgs) ToPolicyInternetServiceNameOutput() PolicyInternetServiceNameOutput {
	return i.ToPolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i PolicyInternetServiceNameArgs) ToPolicyInternetServiceNameOutputWithContext(ctx context.Context) PolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceNameOutput)
}

// PolicyInternetServiceNameArrayInput is an input type that accepts PolicyInternetServiceNameArray and PolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceNameArrayInput` via:
//
//	PolicyInternetServiceNameArray{ PolicyInternetServiceNameArgs{...} }
type PolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceNameArrayOutput() PolicyInternetServiceNameArrayOutput
	ToPolicyInternetServiceNameArrayOutputWithContext(context.Context) PolicyInternetServiceNameArrayOutput
}

type PolicyInternetServiceNameArray []PolicyInternetServiceNameInput

func (PolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceName)(nil)).Elem()
}

func (i PolicyInternetServiceNameArray) ToPolicyInternetServiceNameArrayOutput() PolicyInternetServiceNameArrayOutput {
	return i.ToPolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceNameArray) ToPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) PolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceNameArrayOutput)
}

type PolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceName)(nil)).Elem()
}

func (o PolicyInternetServiceNameOutput) ToPolicyInternetServiceNameOutput() PolicyInternetServiceNameOutput {
	return o
}

func (o PolicyInternetServiceNameOutput) ToPolicyInternetServiceNameOutputWithContext(ctx context.Context) PolicyInternetServiceNameOutput {
	return o
}

// Internet Service name.
func (o PolicyInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceName)(nil)).Elem()
}

func (o PolicyInternetServiceNameArrayOutput) ToPolicyInternetServiceNameArrayOutput() PolicyInternetServiceNameArrayOutput {
	return o
}

func (o PolicyInternetServiceNameArrayOutput) ToPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) PolicyInternetServiceNameArrayOutput {
	return o
}

func (o PolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceName {
		return vs[0].([]PolicyInternetServiceName)[vs[1].(int)]
	}).(PolicyInternetServiceNameOutput)
}

type PolicyInternetServiceSrcCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceSrcCustomInput is an input type that accepts PolicyInternetServiceSrcCustomArgs and PolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcCustomInput` via:
//
//	PolicyInternetServiceSrcCustomArgs{...}
type PolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcCustomOutput() PolicyInternetServiceSrcCustomOutput
	ToPolicyInternetServiceSrcCustomOutputWithContext(context.Context) PolicyInternetServiceSrcCustomOutput
}

type PolicyInternetServiceSrcCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i PolicyInternetServiceSrcCustomArgs) ToPolicyInternetServiceSrcCustomOutput() PolicyInternetServiceSrcCustomOutput {
	return i.ToPolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcCustomArgs) ToPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcCustomOutput)
}

// PolicyInternetServiceSrcCustomArrayInput is an input type that accepts PolicyInternetServiceSrcCustomArray and PolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcCustomArrayInput` via:
//
//	PolicyInternetServiceSrcCustomArray{ PolicyInternetServiceSrcCustomArgs{...} }
type PolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcCustomArrayOutput() PolicyInternetServiceSrcCustomArrayOutput
	ToPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) PolicyInternetServiceSrcCustomArrayOutput
}

type PolicyInternetServiceSrcCustomArray []PolicyInternetServiceSrcCustomInput

func (PolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i PolicyInternetServiceSrcCustomArray) ToPolicyInternetServiceSrcCustomArrayOutput() PolicyInternetServiceSrcCustomArrayOutput {
	return i.ToPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcCustomArray) ToPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcCustomArrayOutput)
}

type PolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o PolicyInternetServiceSrcCustomOutput) ToPolicyInternetServiceSrcCustomOutput() PolicyInternetServiceSrcCustomOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomOutput) ToPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomOutput {
	return o
}

// Custom Internet Service name.
func (o PolicyInternetServiceSrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceSrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o PolicyInternetServiceSrcCustomArrayOutput) ToPolicyInternetServiceSrcCustomArrayOutput() PolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomArrayOutput) ToPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceSrcCustom {
		return vs[0].([]PolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(PolicyInternetServiceSrcCustomOutput)
}

type PolicyInternetServiceSrcCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceSrcCustomGroupInput is an input type that accepts PolicyInternetServiceSrcCustomGroupArgs and PolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcCustomGroupInput` via:
//
//	PolicyInternetServiceSrcCustomGroupArgs{...}
type PolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcCustomGroupOutput() PolicyInternetServiceSrcCustomGroupOutput
	ToPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) PolicyInternetServiceSrcCustomGroupOutput
}

type PolicyInternetServiceSrcCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i PolicyInternetServiceSrcCustomGroupArgs) ToPolicyInternetServiceSrcCustomGroupOutput() PolicyInternetServiceSrcCustomGroupOutput {
	return i.ToPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcCustomGroupArgs) ToPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcCustomGroupOutput)
}

// PolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts PolicyInternetServiceSrcCustomGroupArray and PolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	PolicyInternetServiceSrcCustomGroupArray{ PolicyInternetServiceSrcCustomGroupArgs{...} }
type PolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcCustomGroupArrayOutput() PolicyInternetServiceSrcCustomGroupArrayOutput
	ToPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) PolicyInternetServiceSrcCustomGroupArrayOutput
}

type PolicyInternetServiceSrcCustomGroupArray []PolicyInternetServiceSrcCustomGroupInput

func (PolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i PolicyInternetServiceSrcCustomGroupArray) ToPolicyInternetServiceSrcCustomGroupArrayOutput() PolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcCustomGroupArray) ToPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcCustomGroupArrayOutput)
}

type PolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o PolicyInternetServiceSrcCustomGroupOutput) ToPolicyInternetServiceSrcCustomGroupOutput() PolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomGroupOutput) ToPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o PolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceSrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o PolicyInternetServiceSrcCustomGroupArrayOutput) ToPolicyInternetServiceSrcCustomGroupArrayOutput() PolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomGroupArrayOutput) ToPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceSrcCustomGroup {
		return vs[0].([]PolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(PolicyInternetServiceSrcCustomGroupOutput)
}

type PolicyInternetServiceSrcGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceSrcGroupInput is an input type that accepts PolicyInternetServiceSrcGroupArgs and PolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcGroupInput` via:
//
//	PolicyInternetServiceSrcGroupArgs{...}
type PolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcGroupOutput() PolicyInternetServiceSrcGroupOutput
	ToPolicyInternetServiceSrcGroupOutputWithContext(context.Context) PolicyInternetServiceSrcGroupOutput
}

type PolicyInternetServiceSrcGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i PolicyInternetServiceSrcGroupArgs) ToPolicyInternetServiceSrcGroupOutput() PolicyInternetServiceSrcGroupOutput {
	return i.ToPolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcGroupArgs) ToPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) PolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcGroupOutput)
}

// PolicyInternetServiceSrcGroupArrayInput is an input type that accepts PolicyInternetServiceSrcGroupArray and PolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcGroupArrayInput` via:
//
//	PolicyInternetServiceSrcGroupArray{ PolicyInternetServiceSrcGroupArgs{...} }
type PolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcGroupArrayOutput() PolicyInternetServiceSrcGroupArrayOutput
	ToPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) PolicyInternetServiceSrcGroupArrayOutput
}

type PolicyInternetServiceSrcGroupArray []PolicyInternetServiceSrcGroupInput

func (PolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i PolicyInternetServiceSrcGroupArray) ToPolicyInternetServiceSrcGroupArrayOutput() PolicyInternetServiceSrcGroupArrayOutput {
	return i.ToPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcGroupArray) ToPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcGroupArrayOutput)
}

type PolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o PolicyInternetServiceSrcGroupOutput) ToPolicyInternetServiceSrcGroupOutput() PolicyInternetServiceSrcGroupOutput {
	return o
}

func (o PolicyInternetServiceSrcGroupOutput) ToPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) PolicyInternetServiceSrcGroupOutput {
	return o
}

// Internet Service group name.
func (o PolicyInternetServiceSrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceSrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o PolicyInternetServiceSrcGroupArrayOutput) ToPolicyInternetServiceSrcGroupArrayOutput() PolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcGroupArrayOutput) ToPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceSrcGroup {
		return vs[0].([]PolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(PolicyInternetServiceSrcGroupOutput)
}

type PolicyInternetServiceSrcId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// PolicyInternetServiceSrcIdInput is an input type that accepts PolicyInternetServiceSrcIdArgs and PolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcIdInput` via:
//
//	PolicyInternetServiceSrcIdArgs{...}
type PolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcIdOutput() PolicyInternetServiceSrcIdOutput
	ToPolicyInternetServiceSrcIdOutputWithContext(context.Context) PolicyInternetServiceSrcIdOutput
}

type PolicyInternetServiceSrcIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcId)(nil)).Elem()
}

func (i PolicyInternetServiceSrcIdArgs) ToPolicyInternetServiceSrcIdOutput() PolicyInternetServiceSrcIdOutput {
	return i.ToPolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcIdArgs) ToPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) PolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcIdOutput)
}

// PolicyInternetServiceSrcIdArrayInput is an input type that accepts PolicyInternetServiceSrcIdArray and PolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcIdArrayInput` via:
//
//	PolicyInternetServiceSrcIdArray{ PolicyInternetServiceSrcIdArgs{...} }
type PolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcIdArrayOutput() PolicyInternetServiceSrcIdArrayOutput
	ToPolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) PolicyInternetServiceSrcIdArrayOutput
}

type PolicyInternetServiceSrcIdArray []PolicyInternetServiceSrcIdInput

func (PolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcId)(nil)).Elem()
}

func (i PolicyInternetServiceSrcIdArray) ToPolicyInternetServiceSrcIdArrayOutput() PolicyInternetServiceSrcIdArrayOutput {
	return i.ToPolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcIdArray) ToPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcIdArrayOutput)
}

type PolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcId)(nil)).Elem()
}

func (o PolicyInternetServiceSrcIdOutput) ToPolicyInternetServiceSrcIdOutput() PolicyInternetServiceSrcIdOutput {
	return o
}

func (o PolicyInternetServiceSrcIdOutput) ToPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) PolicyInternetServiceSrcIdOutput {
	return o
}

// Internet Service ID.
func (o PolicyInternetServiceSrcIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceSrcId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcId)(nil)).Elem()
}

func (o PolicyInternetServiceSrcIdArrayOutput) ToPolicyInternetServiceSrcIdArrayOutput() PolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcIdArrayOutput) ToPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceSrcId {
		return vs[0].([]PolicyInternetServiceSrcId)[vs[1].(int)]
	}).(PolicyInternetServiceSrcIdOutput)
}

type PolicyInternetServiceSrcName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceSrcNameInput is an input type that accepts PolicyInternetServiceSrcNameArgs and PolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcNameInput` via:
//
//	PolicyInternetServiceSrcNameArgs{...}
type PolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcNameOutput() PolicyInternetServiceSrcNameOutput
	ToPolicyInternetServiceSrcNameOutputWithContext(context.Context) PolicyInternetServiceSrcNameOutput
}

type PolicyInternetServiceSrcNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcName)(nil)).Elem()
}

func (i PolicyInternetServiceSrcNameArgs) ToPolicyInternetServiceSrcNameOutput() PolicyInternetServiceSrcNameOutput {
	return i.ToPolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcNameArgs) ToPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) PolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcNameOutput)
}

// PolicyInternetServiceSrcNameArrayInput is an input type that accepts PolicyInternetServiceSrcNameArray and PolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcNameArrayInput` via:
//
//	PolicyInternetServiceSrcNameArray{ PolicyInternetServiceSrcNameArgs{...} }
type PolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcNameArrayOutput() PolicyInternetServiceSrcNameArrayOutput
	ToPolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) PolicyInternetServiceSrcNameArrayOutput
}

type PolicyInternetServiceSrcNameArray []PolicyInternetServiceSrcNameInput

func (PolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcName)(nil)).Elem()
}

func (i PolicyInternetServiceSrcNameArray) ToPolicyInternetServiceSrcNameArrayOutput() PolicyInternetServiceSrcNameArrayOutput {
	return i.ToPolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcNameArray) ToPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcNameArrayOutput)
}

type PolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcName)(nil)).Elem()
}

func (o PolicyInternetServiceSrcNameOutput) ToPolicyInternetServiceSrcNameOutput() PolicyInternetServiceSrcNameOutput {
	return o
}

func (o PolicyInternetServiceSrcNameOutput) ToPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) PolicyInternetServiceSrcNameOutput {
	return o
}

// Internet Service name.
func (o PolicyInternetServiceSrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceSrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcName)(nil)).Elem()
}

func (o PolicyInternetServiceSrcNameArrayOutput) ToPolicyInternetServiceSrcNameArrayOutput() PolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcNameArrayOutput) ToPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceSrcName {
		return vs[0].([]PolicyInternetServiceSrcName)[vs[1].(int)]
	}).(PolicyInternetServiceSrcNameOutput)
}

type PolicyNetworkServiceDynamic struct {
	// Dynamic Network Service name.
	Name *string `pulumi:"name"`
}

// PolicyNetworkServiceDynamicInput is an input type that accepts PolicyNetworkServiceDynamicArgs and PolicyNetworkServiceDynamicOutput values.
// You can construct a concrete instance of `PolicyNetworkServiceDynamicInput` via:
//
//	PolicyNetworkServiceDynamicArgs{...}
type PolicyNetworkServiceDynamicInput interface {
	pulumi.Input

	ToPolicyNetworkServiceDynamicOutput() PolicyNetworkServiceDynamicOutput
	ToPolicyNetworkServiceDynamicOutputWithContext(context.Context) PolicyNetworkServiceDynamicOutput
}

type PolicyNetworkServiceDynamicArgs struct {
	// Dynamic Network Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyNetworkServiceDynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkServiceDynamic)(nil)).Elem()
}

func (i PolicyNetworkServiceDynamicArgs) ToPolicyNetworkServiceDynamicOutput() PolicyNetworkServiceDynamicOutput {
	return i.ToPolicyNetworkServiceDynamicOutputWithContext(context.Background())
}

func (i PolicyNetworkServiceDynamicArgs) ToPolicyNetworkServiceDynamicOutputWithContext(ctx context.Context) PolicyNetworkServiceDynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkServiceDynamicOutput)
}

// PolicyNetworkServiceDynamicArrayInput is an input type that accepts PolicyNetworkServiceDynamicArray and PolicyNetworkServiceDynamicArrayOutput values.
// You can construct a concrete instance of `PolicyNetworkServiceDynamicArrayInput` via:
//
//	PolicyNetworkServiceDynamicArray{ PolicyNetworkServiceDynamicArgs{...} }
type PolicyNetworkServiceDynamicArrayInput interface {
	pulumi.Input

	ToPolicyNetworkServiceDynamicArrayOutput() PolicyNetworkServiceDynamicArrayOutput
	ToPolicyNetworkServiceDynamicArrayOutputWithContext(context.Context) PolicyNetworkServiceDynamicArrayOutput
}

type PolicyNetworkServiceDynamicArray []PolicyNetworkServiceDynamicInput

func (PolicyNetworkServiceDynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetworkServiceDynamic)(nil)).Elem()
}

func (i PolicyNetworkServiceDynamicArray) ToPolicyNetworkServiceDynamicArrayOutput() PolicyNetworkServiceDynamicArrayOutput {
	return i.ToPolicyNetworkServiceDynamicArrayOutputWithContext(context.Background())
}

func (i PolicyNetworkServiceDynamicArray) ToPolicyNetworkServiceDynamicArrayOutputWithContext(ctx context.Context) PolicyNetworkServiceDynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkServiceDynamicArrayOutput)
}

type PolicyNetworkServiceDynamicOutput struct{ *pulumi.OutputState }

func (PolicyNetworkServiceDynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkServiceDynamic)(nil)).Elem()
}

func (o PolicyNetworkServiceDynamicOutput) ToPolicyNetworkServiceDynamicOutput() PolicyNetworkServiceDynamicOutput {
	return o
}

func (o PolicyNetworkServiceDynamicOutput) ToPolicyNetworkServiceDynamicOutputWithContext(ctx context.Context) PolicyNetworkServiceDynamicOutput {
	return o
}

// Dynamic Network Service name.
func (o PolicyNetworkServiceDynamicOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNetworkServiceDynamic) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyNetworkServiceDynamicArrayOutput struct{ *pulumi.OutputState }

func (PolicyNetworkServiceDynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetworkServiceDynamic)(nil)).Elem()
}

func (o PolicyNetworkServiceDynamicArrayOutput) ToPolicyNetworkServiceDynamicArrayOutput() PolicyNetworkServiceDynamicArrayOutput {
	return o
}

func (o PolicyNetworkServiceDynamicArrayOutput) ToPolicyNetworkServiceDynamicArrayOutputWithContext(ctx context.Context) PolicyNetworkServiceDynamicArrayOutput {
	return o
}

func (o PolicyNetworkServiceDynamicArrayOutput) Index(i pulumi.IntInput) PolicyNetworkServiceDynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyNetworkServiceDynamic {
		return vs[0].([]PolicyNetworkServiceDynamic)[vs[1].(int)]
	}).(PolicyNetworkServiceDynamicOutput)
}

type PolicyNetworkServiceSrcDynamic struct {
	// Dynamic Network Service name.
	Name *string `pulumi:"name"`
}

// PolicyNetworkServiceSrcDynamicInput is an input type that accepts PolicyNetworkServiceSrcDynamicArgs and PolicyNetworkServiceSrcDynamicOutput values.
// You can construct a concrete instance of `PolicyNetworkServiceSrcDynamicInput` via:
//
//	PolicyNetworkServiceSrcDynamicArgs{...}
type PolicyNetworkServiceSrcDynamicInput interface {
	pulumi.Input

	ToPolicyNetworkServiceSrcDynamicOutput() PolicyNetworkServiceSrcDynamicOutput
	ToPolicyNetworkServiceSrcDynamicOutputWithContext(context.Context) PolicyNetworkServiceSrcDynamicOutput
}

type PolicyNetworkServiceSrcDynamicArgs struct {
	// Dynamic Network Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyNetworkServiceSrcDynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (i PolicyNetworkServiceSrcDynamicArgs) ToPolicyNetworkServiceSrcDynamicOutput() PolicyNetworkServiceSrcDynamicOutput {
	return i.ToPolicyNetworkServiceSrcDynamicOutputWithContext(context.Background())
}

func (i PolicyNetworkServiceSrcDynamicArgs) ToPolicyNetworkServiceSrcDynamicOutputWithContext(ctx context.Context) PolicyNetworkServiceSrcDynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkServiceSrcDynamicOutput)
}

// PolicyNetworkServiceSrcDynamicArrayInput is an input type that accepts PolicyNetworkServiceSrcDynamicArray and PolicyNetworkServiceSrcDynamicArrayOutput values.
// You can construct a concrete instance of `PolicyNetworkServiceSrcDynamicArrayInput` via:
//
//	PolicyNetworkServiceSrcDynamicArray{ PolicyNetworkServiceSrcDynamicArgs{...} }
type PolicyNetworkServiceSrcDynamicArrayInput interface {
	pulumi.Input

	ToPolicyNetworkServiceSrcDynamicArrayOutput() PolicyNetworkServiceSrcDynamicArrayOutput
	ToPolicyNetworkServiceSrcDynamicArrayOutputWithContext(context.Context) PolicyNetworkServiceSrcDynamicArrayOutput
}

type PolicyNetworkServiceSrcDynamicArray []PolicyNetworkServiceSrcDynamicInput

func (PolicyNetworkServiceSrcDynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (i PolicyNetworkServiceSrcDynamicArray) ToPolicyNetworkServiceSrcDynamicArrayOutput() PolicyNetworkServiceSrcDynamicArrayOutput {
	return i.ToPolicyNetworkServiceSrcDynamicArrayOutputWithContext(context.Background())
}

func (i PolicyNetworkServiceSrcDynamicArray) ToPolicyNetworkServiceSrcDynamicArrayOutputWithContext(ctx context.Context) PolicyNetworkServiceSrcDynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkServiceSrcDynamicArrayOutput)
}

type PolicyNetworkServiceSrcDynamicOutput struct{ *pulumi.OutputState }

func (PolicyNetworkServiceSrcDynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (o PolicyNetworkServiceSrcDynamicOutput) ToPolicyNetworkServiceSrcDynamicOutput() PolicyNetworkServiceSrcDynamicOutput {
	return o
}

func (o PolicyNetworkServiceSrcDynamicOutput) ToPolicyNetworkServiceSrcDynamicOutputWithContext(ctx context.Context) PolicyNetworkServiceSrcDynamicOutput {
	return o
}

// Dynamic Network Service name.
func (o PolicyNetworkServiceSrcDynamicOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNetworkServiceSrcDynamic) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyNetworkServiceSrcDynamicArrayOutput struct{ *pulumi.OutputState }

func (PolicyNetworkServiceSrcDynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (o PolicyNetworkServiceSrcDynamicArrayOutput) ToPolicyNetworkServiceSrcDynamicArrayOutput() PolicyNetworkServiceSrcDynamicArrayOutput {
	return o
}

func (o PolicyNetworkServiceSrcDynamicArrayOutput) ToPolicyNetworkServiceSrcDynamicArrayOutputWithContext(ctx context.Context) PolicyNetworkServiceSrcDynamicArrayOutput {
	return o
}

func (o PolicyNetworkServiceSrcDynamicArrayOutput) Index(i pulumi.IntInput) PolicyNetworkServiceSrcDynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyNetworkServiceSrcDynamic {
		return vs[0].([]PolicyNetworkServiceSrcDynamic)[vs[1].(int)]
	}).(PolicyNetworkServiceSrcDynamicOutput)
}

type PolicyNtlmEnabledBrowser struct {
	// User agent string.
	UserAgentString *string `pulumi:"userAgentString"`
}

// PolicyNtlmEnabledBrowserInput is an input type that accepts PolicyNtlmEnabledBrowserArgs and PolicyNtlmEnabledBrowserOutput values.
// You can construct a concrete instance of `PolicyNtlmEnabledBrowserInput` via:
//
//	PolicyNtlmEnabledBrowserArgs{...}
type PolicyNtlmEnabledBrowserInput interface {
	pulumi.Input

	ToPolicyNtlmEnabledBrowserOutput() PolicyNtlmEnabledBrowserOutput
	ToPolicyNtlmEnabledBrowserOutputWithContext(context.Context) PolicyNtlmEnabledBrowserOutput
}

type PolicyNtlmEnabledBrowserArgs struct {
	// User agent string.
	UserAgentString pulumi.StringPtrInput `pulumi:"userAgentString"`
}

func (PolicyNtlmEnabledBrowserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (i PolicyNtlmEnabledBrowserArgs) ToPolicyNtlmEnabledBrowserOutput() PolicyNtlmEnabledBrowserOutput {
	return i.ToPolicyNtlmEnabledBrowserOutputWithContext(context.Background())
}

func (i PolicyNtlmEnabledBrowserArgs) ToPolicyNtlmEnabledBrowserOutputWithContext(ctx context.Context) PolicyNtlmEnabledBrowserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNtlmEnabledBrowserOutput)
}

// PolicyNtlmEnabledBrowserArrayInput is an input type that accepts PolicyNtlmEnabledBrowserArray and PolicyNtlmEnabledBrowserArrayOutput values.
// You can construct a concrete instance of `PolicyNtlmEnabledBrowserArrayInput` via:
//
//	PolicyNtlmEnabledBrowserArray{ PolicyNtlmEnabledBrowserArgs{...} }
type PolicyNtlmEnabledBrowserArrayInput interface {
	pulumi.Input

	ToPolicyNtlmEnabledBrowserArrayOutput() PolicyNtlmEnabledBrowserArrayOutput
	ToPolicyNtlmEnabledBrowserArrayOutputWithContext(context.Context) PolicyNtlmEnabledBrowserArrayOutput
}

type PolicyNtlmEnabledBrowserArray []PolicyNtlmEnabledBrowserInput

func (PolicyNtlmEnabledBrowserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (i PolicyNtlmEnabledBrowserArray) ToPolicyNtlmEnabledBrowserArrayOutput() PolicyNtlmEnabledBrowserArrayOutput {
	return i.ToPolicyNtlmEnabledBrowserArrayOutputWithContext(context.Background())
}

func (i PolicyNtlmEnabledBrowserArray) ToPolicyNtlmEnabledBrowserArrayOutputWithContext(ctx context.Context) PolicyNtlmEnabledBrowserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNtlmEnabledBrowserArrayOutput)
}

type PolicyNtlmEnabledBrowserOutput struct{ *pulumi.OutputState }

func (PolicyNtlmEnabledBrowserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (o PolicyNtlmEnabledBrowserOutput) ToPolicyNtlmEnabledBrowserOutput() PolicyNtlmEnabledBrowserOutput {
	return o
}

func (o PolicyNtlmEnabledBrowserOutput) ToPolicyNtlmEnabledBrowserOutputWithContext(ctx context.Context) PolicyNtlmEnabledBrowserOutput {
	return o
}

// User agent string.
func (o PolicyNtlmEnabledBrowserOutput) UserAgentString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNtlmEnabledBrowser) *string { return v.UserAgentString }).(pulumi.StringPtrOutput)
}

type PolicyNtlmEnabledBrowserArrayOutput struct{ *pulumi.OutputState }

func (PolicyNtlmEnabledBrowserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (o PolicyNtlmEnabledBrowserArrayOutput) ToPolicyNtlmEnabledBrowserArrayOutput() PolicyNtlmEnabledBrowserArrayOutput {
	return o
}

func (o PolicyNtlmEnabledBrowserArrayOutput) ToPolicyNtlmEnabledBrowserArrayOutputWithContext(ctx context.Context) PolicyNtlmEnabledBrowserArrayOutput {
	return o
}

func (o PolicyNtlmEnabledBrowserArrayOutput) Index(i pulumi.IntInput) PolicyNtlmEnabledBrowserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyNtlmEnabledBrowser {
		return vs[0].([]PolicyNtlmEnabledBrowser)[vs[1].(int)]
	}).(PolicyNtlmEnabledBrowserOutput)
}

type PolicyPcpPoolname struct {
	// PCP pool name.
	Name *string `pulumi:"name"`
}

// PolicyPcpPoolnameInput is an input type that accepts PolicyPcpPoolnameArgs and PolicyPcpPoolnameOutput values.
// You can construct a concrete instance of `PolicyPcpPoolnameInput` via:
//
//	PolicyPcpPoolnameArgs{...}
type PolicyPcpPoolnameInput interface {
	pulumi.Input

	ToPolicyPcpPoolnameOutput() PolicyPcpPoolnameOutput
	ToPolicyPcpPoolnameOutputWithContext(context.Context) PolicyPcpPoolnameOutput
}

type PolicyPcpPoolnameArgs struct {
	// PCP pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyPcpPoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPcpPoolname)(nil)).Elem()
}

func (i PolicyPcpPoolnameArgs) ToPolicyPcpPoolnameOutput() PolicyPcpPoolnameOutput {
	return i.ToPolicyPcpPoolnameOutputWithContext(context.Background())
}

func (i PolicyPcpPoolnameArgs) ToPolicyPcpPoolnameOutputWithContext(ctx context.Context) PolicyPcpPoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPcpPoolnameOutput)
}

// PolicyPcpPoolnameArrayInput is an input type that accepts PolicyPcpPoolnameArray and PolicyPcpPoolnameArrayOutput values.
// You can construct a concrete instance of `PolicyPcpPoolnameArrayInput` via:
//
//	PolicyPcpPoolnameArray{ PolicyPcpPoolnameArgs{...} }
type PolicyPcpPoolnameArrayInput interface {
	pulumi.Input

	ToPolicyPcpPoolnameArrayOutput() PolicyPcpPoolnameArrayOutput
	ToPolicyPcpPoolnameArrayOutputWithContext(context.Context) PolicyPcpPoolnameArrayOutput
}

type PolicyPcpPoolnameArray []PolicyPcpPoolnameInput

func (PolicyPcpPoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPcpPoolname)(nil)).Elem()
}

func (i PolicyPcpPoolnameArray) ToPolicyPcpPoolnameArrayOutput() PolicyPcpPoolnameArrayOutput {
	return i.ToPolicyPcpPoolnameArrayOutputWithContext(context.Background())
}

func (i PolicyPcpPoolnameArray) ToPolicyPcpPoolnameArrayOutputWithContext(ctx context.Context) PolicyPcpPoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPcpPoolnameArrayOutput)
}

type PolicyPcpPoolnameOutput struct{ *pulumi.OutputState }

func (PolicyPcpPoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPcpPoolname)(nil)).Elem()
}

func (o PolicyPcpPoolnameOutput) ToPolicyPcpPoolnameOutput() PolicyPcpPoolnameOutput {
	return o
}

func (o PolicyPcpPoolnameOutput) ToPolicyPcpPoolnameOutputWithContext(ctx context.Context) PolicyPcpPoolnameOutput {
	return o
}

// PCP pool name.
func (o PolicyPcpPoolnameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPcpPoolname) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyPcpPoolnameArrayOutput struct{ *pulumi.OutputState }

func (PolicyPcpPoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPcpPoolname)(nil)).Elem()
}

func (o PolicyPcpPoolnameArrayOutput) ToPolicyPcpPoolnameArrayOutput() PolicyPcpPoolnameArrayOutput {
	return o
}

func (o PolicyPcpPoolnameArrayOutput) ToPolicyPcpPoolnameArrayOutputWithContext(ctx context.Context) PolicyPcpPoolnameArrayOutput {
	return o
}

func (o PolicyPcpPoolnameArrayOutput) Index(i pulumi.IntInput) PolicyPcpPoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPcpPoolname {
		return vs[0].([]PolicyPcpPoolname)[vs[1].(int)]
	}).(PolicyPcpPoolnameOutput)
}

type PolicyPoolname6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyPoolname6Input is an input type that accepts PolicyPoolname6Args and PolicyPoolname6Output values.
// You can construct a concrete instance of `PolicyPoolname6Input` via:
//
//	PolicyPoolname6Args{...}
type PolicyPoolname6Input interface {
	pulumi.Input

	ToPolicyPoolname6Output() PolicyPoolname6Output
	ToPolicyPoolname6OutputWithContext(context.Context) PolicyPoolname6Output
}

type PolicyPoolname6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyPoolname6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPoolname6)(nil)).Elem()
}

func (i PolicyPoolname6Args) ToPolicyPoolname6Output() PolicyPoolname6Output {
	return i.ToPolicyPoolname6OutputWithContext(context.Background())
}

func (i PolicyPoolname6Args) ToPolicyPoolname6OutputWithContext(ctx context.Context) PolicyPoolname6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPoolname6Output)
}

// PolicyPoolname6ArrayInput is an input type that accepts PolicyPoolname6Array and PolicyPoolname6ArrayOutput values.
// You can construct a concrete instance of `PolicyPoolname6ArrayInput` via:
//
//	PolicyPoolname6Array{ PolicyPoolname6Args{...} }
type PolicyPoolname6ArrayInput interface {
	pulumi.Input

	ToPolicyPoolname6ArrayOutput() PolicyPoolname6ArrayOutput
	ToPolicyPoolname6ArrayOutputWithContext(context.Context) PolicyPoolname6ArrayOutput
}

type PolicyPoolname6Array []PolicyPoolname6Input

func (PolicyPoolname6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPoolname6)(nil)).Elem()
}

func (i PolicyPoolname6Array) ToPolicyPoolname6ArrayOutput() PolicyPoolname6ArrayOutput {
	return i.ToPolicyPoolname6ArrayOutputWithContext(context.Background())
}

func (i PolicyPoolname6Array) ToPolicyPoolname6ArrayOutputWithContext(ctx context.Context) PolicyPoolname6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPoolname6ArrayOutput)
}

type PolicyPoolname6Output struct{ *pulumi.OutputState }

func (PolicyPoolname6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPoolname6)(nil)).Elem()
}

func (o PolicyPoolname6Output) ToPolicyPoolname6Output() PolicyPoolname6Output {
	return o
}

func (o PolicyPoolname6Output) ToPolicyPoolname6OutputWithContext(ctx context.Context) PolicyPoolname6Output {
	return o
}

// Policy name.
func (o PolicyPoolname6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPoolname6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyPoolname6ArrayOutput struct{ *pulumi.OutputState }

func (PolicyPoolname6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPoolname6)(nil)).Elem()
}

func (o PolicyPoolname6ArrayOutput) ToPolicyPoolname6ArrayOutput() PolicyPoolname6ArrayOutput {
	return o
}

func (o PolicyPoolname6ArrayOutput) ToPolicyPoolname6ArrayOutputWithContext(ctx context.Context) PolicyPoolname6ArrayOutput {
	return o
}

func (o PolicyPoolname6ArrayOutput) Index(i pulumi.IntInput) PolicyPoolname6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPoolname6 {
		return vs[0].([]PolicyPoolname6)[vs[1].(int)]
	}).(PolicyPoolname6Output)
}

type PolicyPoolname struct {
	// IPv6 pool name.
	Name *string `pulumi:"name"`
}

// PolicyPoolnameInput is an input type that accepts PolicyPoolnameArgs and PolicyPoolnameOutput values.
// You can construct a concrete instance of `PolicyPoolnameInput` via:
//
//	PolicyPoolnameArgs{...}
type PolicyPoolnameInput interface {
	pulumi.Input

	ToPolicyPoolnameOutput() PolicyPoolnameOutput
	ToPolicyPoolnameOutputWithContext(context.Context) PolicyPoolnameOutput
}

type PolicyPoolnameArgs struct {
	// IPv6 pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyPoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPoolname)(nil)).Elem()
}

func (i PolicyPoolnameArgs) ToPolicyPoolnameOutput() PolicyPoolnameOutput {
	return i.ToPolicyPoolnameOutputWithContext(context.Background())
}

func (i PolicyPoolnameArgs) ToPolicyPoolnameOutputWithContext(ctx context.Context) PolicyPoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPoolnameOutput)
}

// PolicyPoolnameArrayInput is an input type that accepts PolicyPoolnameArray and PolicyPoolnameArrayOutput values.
// You can construct a concrete instance of `PolicyPoolnameArrayInput` via:
//
//	PolicyPoolnameArray{ PolicyPoolnameArgs{...} }
type PolicyPoolnameArrayInput interface {
	pulumi.Input

	ToPolicyPoolnameArrayOutput() PolicyPoolnameArrayOutput
	ToPolicyPoolnameArrayOutputWithContext(context.Context) PolicyPoolnameArrayOutput
}

type PolicyPoolnameArray []PolicyPoolnameInput

func (PolicyPoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPoolname)(nil)).Elem()
}

func (i PolicyPoolnameArray) ToPolicyPoolnameArrayOutput() PolicyPoolnameArrayOutput {
	return i.ToPolicyPoolnameArrayOutputWithContext(context.Background())
}

func (i PolicyPoolnameArray) ToPolicyPoolnameArrayOutputWithContext(ctx context.Context) PolicyPoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPoolnameArrayOutput)
}

type PolicyPoolnameOutput struct{ *pulumi.OutputState }

func (PolicyPoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPoolname)(nil)).Elem()
}

func (o PolicyPoolnameOutput) ToPolicyPoolnameOutput() PolicyPoolnameOutput {
	return o
}

func (o PolicyPoolnameOutput) ToPolicyPoolnameOutputWithContext(ctx context.Context) PolicyPoolnameOutput {
	return o
}

// IPv6 pool name.
func (o PolicyPoolnameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPoolname) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyPoolnameArrayOutput struct{ *pulumi.OutputState }

func (PolicyPoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPoolname)(nil)).Elem()
}

func (o PolicyPoolnameArrayOutput) ToPolicyPoolnameArrayOutput() PolicyPoolnameArrayOutput {
	return o
}

func (o PolicyPoolnameArrayOutput) ToPolicyPoolnameArrayOutputWithContext(ctx context.Context) PolicyPoolnameArrayOutput {
	return o
}

func (o PolicyPoolnameArrayOutput) Index(i pulumi.IntInput) PolicyPoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPoolname {
		return vs[0].([]PolicyPoolname)[vs[1].(int)]
	}).(PolicyPoolnameOutput)
}

type PolicyRtpAddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// PolicyRtpAddrInput is an input type that accepts PolicyRtpAddrArgs and PolicyRtpAddrOutput values.
// You can construct a concrete instance of `PolicyRtpAddrInput` via:
//
//	PolicyRtpAddrArgs{...}
type PolicyRtpAddrInput interface {
	pulumi.Input

	ToPolicyRtpAddrOutput() PolicyRtpAddrOutput
	ToPolicyRtpAddrOutputWithContext(context.Context) PolicyRtpAddrOutput
}

type PolicyRtpAddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyRtpAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRtpAddr)(nil)).Elem()
}

func (i PolicyRtpAddrArgs) ToPolicyRtpAddrOutput() PolicyRtpAddrOutput {
	return i.ToPolicyRtpAddrOutputWithContext(context.Background())
}

func (i PolicyRtpAddrArgs) ToPolicyRtpAddrOutputWithContext(ctx context.Context) PolicyRtpAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRtpAddrOutput)
}

// PolicyRtpAddrArrayInput is an input type that accepts PolicyRtpAddrArray and PolicyRtpAddrArrayOutput values.
// You can construct a concrete instance of `PolicyRtpAddrArrayInput` via:
//
//	PolicyRtpAddrArray{ PolicyRtpAddrArgs{...} }
type PolicyRtpAddrArrayInput interface {
	pulumi.Input

	ToPolicyRtpAddrArrayOutput() PolicyRtpAddrArrayOutput
	ToPolicyRtpAddrArrayOutputWithContext(context.Context) PolicyRtpAddrArrayOutput
}

type PolicyRtpAddrArray []PolicyRtpAddrInput

func (PolicyRtpAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyRtpAddr)(nil)).Elem()
}

func (i PolicyRtpAddrArray) ToPolicyRtpAddrArrayOutput() PolicyRtpAddrArrayOutput {
	return i.ToPolicyRtpAddrArrayOutputWithContext(context.Background())
}

func (i PolicyRtpAddrArray) ToPolicyRtpAddrArrayOutputWithContext(ctx context.Context) PolicyRtpAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRtpAddrArrayOutput)
}

type PolicyRtpAddrOutput struct{ *pulumi.OutputState }

func (PolicyRtpAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRtpAddr)(nil)).Elem()
}

func (o PolicyRtpAddrOutput) ToPolicyRtpAddrOutput() PolicyRtpAddrOutput {
	return o
}

func (o PolicyRtpAddrOutput) ToPolicyRtpAddrOutputWithContext(ctx context.Context) PolicyRtpAddrOutput {
	return o
}

// Address name.
func (o PolicyRtpAddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyRtpAddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyRtpAddrArrayOutput struct{ *pulumi.OutputState }

func (PolicyRtpAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyRtpAddr)(nil)).Elem()
}

func (o PolicyRtpAddrArrayOutput) ToPolicyRtpAddrArrayOutput() PolicyRtpAddrArrayOutput {
	return o
}

func (o PolicyRtpAddrArrayOutput) ToPolicyRtpAddrArrayOutputWithContext(ctx context.Context) PolicyRtpAddrArrayOutput {
	return o
}

func (o PolicyRtpAddrArrayOutput) Index(i pulumi.IntInput) PolicyRtpAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyRtpAddr {
		return vs[0].([]PolicyRtpAddr)[vs[1].(int)]
	}).(PolicyRtpAddrOutput)
}

type PolicyService struct {
	// Service and service group names.
	Name *string `pulumi:"name"`
}

// PolicyServiceInput is an input type that accepts PolicyServiceArgs and PolicyServiceOutput values.
// You can construct a concrete instance of `PolicyServiceInput` via:
//
//	PolicyServiceArgs{...}
type PolicyServiceInput interface {
	pulumi.Input

	ToPolicyServiceOutput() PolicyServiceOutput
	ToPolicyServiceOutputWithContext(context.Context) PolicyServiceOutput
}

type PolicyServiceArgs struct {
	// Service and service group names.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyService)(nil)).Elem()
}

func (i PolicyServiceArgs) ToPolicyServiceOutput() PolicyServiceOutput {
	return i.ToPolicyServiceOutputWithContext(context.Background())
}

func (i PolicyServiceArgs) ToPolicyServiceOutputWithContext(ctx context.Context) PolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceOutput)
}

// PolicyServiceArrayInput is an input type that accepts PolicyServiceArray and PolicyServiceArrayOutput values.
// You can construct a concrete instance of `PolicyServiceArrayInput` via:
//
//	PolicyServiceArray{ PolicyServiceArgs{...} }
type PolicyServiceArrayInput interface {
	pulumi.Input

	ToPolicyServiceArrayOutput() PolicyServiceArrayOutput
	ToPolicyServiceArrayOutputWithContext(context.Context) PolicyServiceArrayOutput
}

type PolicyServiceArray []PolicyServiceInput

func (PolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyService)(nil)).Elem()
}

func (i PolicyServiceArray) ToPolicyServiceArrayOutput() PolicyServiceArrayOutput {
	return i.ToPolicyServiceArrayOutputWithContext(context.Background())
}

func (i PolicyServiceArray) ToPolicyServiceArrayOutputWithContext(ctx context.Context) PolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceArrayOutput)
}

type PolicyServiceOutput struct{ *pulumi.OutputState }

func (PolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyService)(nil)).Elem()
}

func (o PolicyServiceOutput) ToPolicyServiceOutput() PolicyServiceOutput {
	return o
}

func (o PolicyServiceOutput) ToPolicyServiceOutputWithContext(ctx context.Context) PolicyServiceOutput {
	return o
}

// Service and service group names.
func (o PolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (PolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyService)(nil)).Elem()
}

func (o PolicyServiceArrayOutput) ToPolicyServiceArrayOutput() PolicyServiceArrayOutput {
	return o
}

func (o PolicyServiceArrayOutput) ToPolicyServiceArrayOutputWithContext(ctx context.Context) PolicyServiceArrayOutput {
	return o
}

func (o PolicyServiceArrayOutput) Index(i pulumi.IntInput) PolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyService {
		return vs[0].([]PolicyService)[vs[1].(int)]
	}).(PolicyServiceOutput)
}

type PolicySgt struct {
	// Security group tag.
	Id *int `pulumi:"id"`
}

// PolicySgtInput is an input type that accepts PolicySgtArgs and PolicySgtOutput values.
// You can construct a concrete instance of `PolicySgtInput` via:
//
//	PolicySgtArgs{...}
type PolicySgtInput interface {
	pulumi.Input

	ToPolicySgtOutput() PolicySgtOutput
	ToPolicySgtOutputWithContext(context.Context) PolicySgtOutput
}

type PolicySgtArgs struct {
	// Security group tag.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicySgtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySgt)(nil)).Elem()
}

func (i PolicySgtArgs) ToPolicySgtOutput() PolicySgtOutput {
	return i.ToPolicySgtOutputWithContext(context.Background())
}

func (i PolicySgtArgs) ToPolicySgtOutputWithContext(ctx context.Context) PolicySgtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySgtOutput)
}

// PolicySgtArrayInput is an input type that accepts PolicySgtArray and PolicySgtArrayOutput values.
// You can construct a concrete instance of `PolicySgtArrayInput` via:
//
//	PolicySgtArray{ PolicySgtArgs{...} }
type PolicySgtArrayInput interface {
	pulumi.Input

	ToPolicySgtArrayOutput() PolicySgtArrayOutput
	ToPolicySgtArrayOutputWithContext(context.Context) PolicySgtArrayOutput
}

type PolicySgtArray []PolicySgtInput

func (PolicySgtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySgt)(nil)).Elem()
}

func (i PolicySgtArray) ToPolicySgtArrayOutput() PolicySgtArrayOutput {
	return i.ToPolicySgtArrayOutputWithContext(context.Background())
}

func (i PolicySgtArray) ToPolicySgtArrayOutputWithContext(ctx context.Context) PolicySgtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySgtArrayOutput)
}

type PolicySgtOutput struct{ *pulumi.OutputState }

func (PolicySgtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySgt)(nil)).Elem()
}

func (o PolicySgtOutput) ToPolicySgtOutput() PolicySgtOutput {
	return o
}

func (o PolicySgtOutput) ToPolicySgtOutputWithContext(ctx context.Context) PolicySgtOutput {
	return o
}

// Security group tag.
func (o PolicySgtOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySgt) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicySgtArrayOutput struct{ *pulumi.OutputState }

func (PolicySgtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySgt)(nil)).Elem()
}

func (o PolicySgtArrayOutput) ToPolicySgtArrayOutput() PolicySgtArrayOutput {
	return o
}

func (o PolicySgtArrayOutput) ToPolicySgtArrayOutputWithContext(ctx context.Context) PolicySgtArrayOutput {
	return o
}

func (o PolicySgtArrayOutput) Index(i pulumi.IntInput) PolicySgtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySgt {
		return vs[0].([]PolicySgt)[vs[1].(int)]
	}).(PolicySgtOutput)
}

type PolicySortStatePolicyList struct {
	Action   *string `pulumi:"action"`
	Name     *string `pulumi:"name"`
	Policyid *string `pulumi:"policyid"`
}

// PolicySortStatePolicyListInput is an input type that accepts PolicySortStatePolicyListArgs and PolicySortStatePolicyListOutput values.
// You can construct a concrete instance of `PolicySortStatePolicyListInput` via:
//
//	PolicySortStatePolicyListArgs{...}
type PolicySortStatePolicyListInput interface {
	pulumi.Input

	ToPolicySortStatePolicyListOutput() PolicySortStatePolicyListOutput
	ToPolicySortStatePolicyListOutputWithContext(context.Context) PolicySortStatePolicyListOutput
}

type PolicySortStatePolicyListArgs struct {
	Action   pulumi.StringPtrInput `pulumi:"action"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Policyid pulumi.StringPtrInput `pulumi:"policyid"`
}

func (PolicySortStatePolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySortStatePolicyList)(nil)).Elem()
}

func (i PolicySortStatePolicyListArgs) ToPolicySortStatePolicyListOutput() PolicySortStatePolicyListOutput {
	return i.ToPolicySortStatePolicyListOutputWithContext(context.Background())
}

func (i PolicySortStatePolicyListArgs) ToPolicySortStatePolicyListOutputWithContext(ctx context.Context) PolicySortStatePolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySortStatePolicyListOutput)
}

// PolicySortStatePolicyListArrayInput is an input type that accepts PolicySortStatePolicyListArray and PolicySortStatePolicyListArrayOutput values.
// You can construct a concrete instance of `PolicySortStatePolicyListArrayInput` via:
//
//	PolicySortStatePolicyListArray{ PolicySortStatePolicyListArgs{...} }
type PolicySortStatePolicyListArrayInput interface {
	pulumi.Input

	ToPolicySortStatePolicyListArrayOutput() PolicySortStatePolicyListArrayOutput
	ToPolicySortStatePolicyListArrayOutputWithContext(context.Context) PolicySortStatePolicyListArrayOutput
}

type PolicySortStatePolicyListArray []PolicySortStatePolicyListInput

func (PolicySortStatePolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySortStatePolicyList)(nil)).Elem()
}

func (i PolicySortStatePolicyListArray) ToPolicySortStatePolicyListArrayOutput() PolicySortStatePolicyListArrayOutput {
	return i.ToPolicySortStatePolicyListArrayOutputWithContext(context.Background())
}

func (i PolicySortStatePolicyListArray) ToPolicySortStatePolicyListArrayOutputWithContext(ctx context.Context) PolicySortStatePolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySortStatePolicyListArrayOutput)
}

type PolicySortStatePolicyListOutput struct{ *pulumi.OutputState }

func (PolicySortStatePolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySortStatePolicyList)(nil)).Elem()
}

func (o PolicySortStatePolicyListOutput) ToPolicySortStatePolicyListOutput() PolicySortStatePolicyListOutput {
	return o
}

func (o PolicySortStatePolicyListOutput) ToPolicySortStatePolicyListOutputWithContext(ctx context.Context) PolicySortStatePolicyListOutput {
	return o
}

func (o PolicySortStatePolicyListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySortStatePolicyList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o PolicySortStatePolicyListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySortStatePolicyList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PolicySortStatePolicyListOutput) Policyid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySortStatePolicyList) *string { return v.Policyid }).(pulumi.StringPtrOutput)
}

type PolicySortStatePolicyListArrayOutput struct{ *pulumi.OutputState }

func (PolicySortStatePolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySortStatePolicyList)(nil)).Elem()
}

func (o PolicySortStatePolicyListArrayOutput) ToPolicySortStatePolicyListArrayOutput() PolicySortStatePolicyListArrayOutput {
	return o
}

func (o PolicySortStatePolicyListArrayOutput) ToPolicySortStatePolicyListArrayOutputWithContext(ctx context.Context) PolicySortStatePolicyListArrayOutput {
	return o
}

func (o PolicySortStatePolicyListArrayOutput) Index(i pulumi.IntInput) PolicySortStatePolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySortStatePolicyList {
		return vs[0].([]PolicySortStatePolicyList)[vs[1].(int)]
	}).(PolicySortStatePolicyListOutput)
}

type PolicySrcVendorMac struct {
	// Vendor MAC ID.
	//
	// The `internetService6Name` block supports:
	Id *int `pulumi:"id"`
}

// PolicySrcVendorMacInput is an input type that accepts PolicySrcVendorMacArgs and PolicySrcVendorMacOutput values.
// You can construct a concrete instance of `PolicySrcVendorMacInput` via:
//
//	PolicySrcVendorMacArgs{...}
type PolicySrcVendorMacInput interface {
	pulumi.Input

	ToPolicySrcVendorMacOutput() PolicySrcVendorMacOutput
	ToPolicySrcVendorMacOutputWithContext(context.Context) PolicySrcVendorMacOutput
}

type PolicySrcVendorMacArgs struct {
	// Vendor MAC ID.
	//
	// The `internetService6Name` block supports:
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicySrcVendorMacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcVendorMac)(nil)).Elem()
}

func (i PolicySrcVendorMacArgs) ToPolicySrcVendorMacOutput() PolicySrcVendorMacOutput {
	return i.ToPolicySrcVendorMacOutputWithContext(context.Background())
}

func (i PolicySrcVendorMacArgs) ToPolicySrcVendorMacOutputWithContext(ctx context.Context) PolicySrcVendorMacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcVendorMacOutput)
}

// PolicySrcVendorMacArrayInput is an input type that accepts PolicySrcVendorMacArray and PolicySrcVendorMacArrayOutput values.
// You can construct a concrete instance of `PolicySrcVendorMacArrayInput` via:
//
//	PolicySrcVendorMacArray{ PolicySrcVendorMacArgs{...} }
type PolicySrcVendorMacArrayInput interface {
	pulumi.Input

	ToPolicySrcVendorMacArrayOutput() PolicySrcVendorMacArrayOutput
	ToPolicySrcVendorMacArrayOutputWithContext(context.Context) PolicySrcVendorMacArrayOutput
}

type PolicySrcVendorMacArray []PolicySrcVendorMacInput

func (PolicySrcVendorMacArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcVendorMac)(nil)).Elem()
}

func (i PolicySrcVendorMacArray) ToPolicySrcVendorMacArrayOutput() PolicySrcVendorMacArrayOutput {
	return i.ToPolicySrcVendorMacArrayOutputWithContext(context.Background())
}

func (i PolicySrcVendorMacArray) ToPolicySrcVendorMacArrayOutputWithContext(ctx context.Context) PolicySrcVendorMacArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcVendorMacArrayOutput)
}

type PolicySrcVendorMacOutput struct{ *pulumi.OutputState }

func (PolicySrcVendorMacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcVendorMac)(nil)).Elem()
}

func (o PolicySrcVendorMacOutput) ToPolicySrcVendorMacOutput() PolicySrcVendorMacOutput {
	return o
}

func (o PolicySrcVendorMacOutput) ToPolicySrcVendorMacOutputWithContext(ctx context.Context) PolicySrcVendorMacOutput {
	return o
}

// Vendor MAC ID.
//
// The `internetService6Name` block supports:
func (o PolicySrcVendorMacOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySrcVendorMac) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicySrcVendorMacArrayOutput struct{ *pulumi.OutputState }

func (PolicySrcVendorMacArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcVendorMac)(nil)).Elem()
}

func (o PolicySrcVendorMacArrayOutput) ToPolicySrcVendorMacArrayOutput() PolicySrcVendorMacArrayOutput {
	return o
}

func (o PolicySrcVendorMacArrayOutput) ToPolicySrcVendorMacArrayOutputWithContext(ctx context.Context) PolicySrcVendorMacArrayOutput {
	return o
}

func (o PolicySrcVendorMacArrayOutput) Index(i pulumi.IntInput) PolicySrcVendorMacOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySrcVendorMac {
		return vs[0].([]PolicySrcVendorMac)[vs[1].(int)]
	}).(PolicySrcVendorMacOutput)
}

type PolicySrcaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicySrcaddr6Input is an input type that accepts PolicySrcaddr6Args and PolicySrcaddr6Output values.
// You can construct a concrete instance of `PolicySrcaddr6Input` via:
//
//	PolicySrcaddr6Args{...}
type PolicySrcaddr6Input interface {
	pulumi.Input

	ToPolicySrcaddr6Output() PolicySrcaddr6Output
	ToPolicySrcaddr6OutputWithContext(context.Context) PolicySrcaddr6Output
}

type PolicySrcaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcaddr6)(nil)).Elem()
}

func (i PolicySrcaddr6Args) ToPolicySrcaddr6Output() PolicySrcaddr6Output {
	return i.ToPolicySrcaddr6OutputWithContext(context.Background())
}

func (i PolicySrcaddr6Args) ToPolicySrcaddr6OutputWithContext(ctx context.Context) PolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcaddr6Output)
}

// PolicySrcaddr6ArrayInput is an input type that accepts PolicySrcaddr6Array and PolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `PolicySrcaddr6ArrayInput` via:
//
//	PolicySrcaddr6Array{ PolicySrcaddr6Args{...} }
type PolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToPolicySrcaddr6ArrayOutput() PolicySrcaddr6ArrayOutput
	ToPolicySrcaddr6ArrayOutputWithContext(context.Context) PolicySrcaddr6ArrayOutput
}

type PolicySrcaddr6Array []PolicySrcaddr6Input

func (PolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcaddr6)(nil)).Elem()
}

func (i PolicySrcaddr6Array) ToPolicySrcaddr6ArrayOutput() PolicySrcaddr6ArrayOutput {
	return i.ToPolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i PolicySrcaddr6Array) ToPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) PolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcaddr6ArrayOutput)
}

type PolicySrcaddr6Output struct{ *pulumi.OutputState }

func (PolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcaddr6)(nil)).Elem()
}

func (o PolicySrcaddr6Output) ToPolicySrcaddr6Output() PolicySrcaddr6Output {
	return o
}

func (o PolicySrcaddr6Output) ToPolicySrcaddr6OutputWithContext(ctx context.Context) PolicySrcaddr6Output {
	return o
}

// Policy name.
func (o PolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (PolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcaddr6)(nil)).Elem()
}

func (o PolicySrcaddr6ArrayOutput) ToPolicySrcaddr6ArrayOutput() PolicySrcaddr6ArrayOutput {
	return o
}

func (o PolicySrcaddr6ArrayOutput) ToPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) PolicySrcaddr6ArrayOutput {
	return o
}

func (o PolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) PolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySrcaddr6 {
		return vs[0].([]PolicySrcaddr6)[vs[1].(int)]
	}).(PolicySrcaddr6Output)
}

type PolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// PolicySrcaddrInput is an input type that accepts PolicySrcaddrArgs and PolicySrcaddrOutput values.
// You can construct a concrete instance of `PolicySrcaddrInput` via:
//
//	PolicySrcaddrArgs{...}
type PolicySrcaddrInput interface {
	pulumi.Input

	ToPolicySrcaddrOutput() PolicySrcaddrOutput
	ToPolicySrcaddrOutputWithContext(context.Context) PolicySrcaddrOutput
}

type PolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcaddr)(nil)).Elem()
}

func (i PolicySrcaddrArgs) ToPolicySrcaddrOutput() PolicySrcaddrOutput {
	return i.ToPolicySrcaddrOutputWithContext(context.Background())
}

func (i PolicySrcaddrArgs) ToPolicySrcaddrOutputWithContext(ctx context.Context) PolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcaddrOutput)
}

// PolicySrcaddrArrayInput is an input type that accepts PolicySrcaddrArray and PolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `PolicySrcaddrArrayInput` via:
//
//	PolicySrcaddrArray{ PolicySrcaddrArgs{...} }
type PolicySrcaddrArrayInput interface {
	pulumi.Input

	ToPolicySrcaddrArrayOutput() PolicySrcaddrArrayOutput
	ToPolicySrcaddrArrayOutputWithContext(context.Context) PolicySrcaddrArrayOutput
}

type PolicySrcaddrArray []PolicySrcaddrInput

func (PolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcaddr)(nil)).Elem()
}

func (i PolicySrcaddrArray) ToPolicySrcaddrArrayOutput() PolicySrcaddrArrayOutput {
	return i.ToPolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i PolicySrcaddrArray) ToPolicySrcaddrArrayOutputWithContext(ctx context.Context) PolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcaddrArrayOutput)
}

type PolicySrcaddrOutput struct{ *pulumi.OutputState }

func (PolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcaddr)(nil)).Elem()
}

func (o PolicySrcaddrOutput) ToPolicySrcaddrOutput() PolicySrcaddrOutput {
	return o
}

func (o PolicySrcaddrOutput) ToPolicySrcaddrOutputWithContext(ctx context.Context) PolicySrcaddrOutput {
	return o
}

// Address name.
func (o PolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (PolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcaddr)(nil)).Elem()
}

func (o PolicySrcaddrArrayOutput) ToPolicySrcaddrArrayOutput() PolicySrcaddrArrayOutput {
	return o
}

func (o PolicySrcaddrArrayOutput) ToPolicySrcaddrArrayOutputWithContext(ctx context.Context) PolicySrcaddrArrayOutput {
	return o
}

func (o PolicySrcaddrArrayOutput) Index(i pulumi.IntInput) PolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySrcaddr {
		return vs[0].([]PolicySrcaddr)[vs[1].(int)]
	}).(PolicySrcaddrOutput)
}

type PolicySrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// PolicySrcintfInput is an input type that accepts PolicySrcintfArgs and PolicySrcintfOutput values.
// You can construct a concrete instance of `PolicySrcintfInput` via:
//
//	PolicySrcintfArgs{...}
type PolicySrcintfInput interface {
	pulumi.Input

	ToPolicySrcintfOutput() PolicySrcintfOutput
	ToPolicySrcintfOutputWithContext(context.Context) PolicySrcintfOutput
}

type PolicySrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcintf)(nil)).Elem()
}

func (i PolicySrcintfArgs) ToPolicySrcintfOutput() PolicySrcintfOutput {
	return i.ToPolicySrcintfOutputWithContext(context.Background())
}

func (i PolicySrcintfArgs) ToPolicySrcintfOutputWithContext(ctx context.Context) PolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcintfOutput)
}

// PolicySrcintfArrayInput is an input type that accepts PolicySrcintfArray and PolicySrcintfArrayOutput values.
// You can construct a concrete instance of `PolicySrcintfArrayInput` via:
//
//	PolicySrcintfArray{ PolicySrcintfArgs{...} }
type PolicySrcintfArrayInput interface {
	pulumi.Input

	ToPolicySrcintfArrayOutput() PolicySrcintfArrayOutput
	ToPolicySrcintfArrayOutputWithContext(context.Context) PolicySrcintfArrayOutput
}

type PolicySrcintfArray []PolicySrcintfInput

func (PolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcintf)(nil)).Elem()
}

func (i PolicySrcintfArray) ToPolicySrcintfArrayOutput() PolicySrcintfArrayOutput {
	return i.ToPolicySrcintfArrayOutputWithContext(context.Background())
}

func (i PolicySrcintfArray) ToPolicySrcintfArrayOutputWithContext(ctx context.Context) PolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcintfArrayOutput)
}

type PolicySrcintfOutput struct{ *pulumi.OutputState }

func (PolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcintf)(nil)).Elem()
}

func (o PolicySrcintfOutput) ToPolicySrcintfOutput() PolicySrcintfOutput {
	return o
}

func (o PolicySrcintfOutput) ToPolicySrcintfOutputWithContext(ctx context.Context) PolicySrcintfOutput {
	return o
}

// Interface name.
func (o PolicySrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (PolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcintf)(nil)).Elem()
}

func (o PolicySrcintfArrayOutput) ToPolicySrcintfArrayOutput() PolicySrcintfArrayOutput {
	return o
}

func (o PolicySrcintfArrayOutput) ToPolicySrcintfArrayOutputWithContext(ctx context.Context) PolicySrcintfArrayOutput {
	return o
}

func (o PolicySrcintfArrayOutput) Index(i pulumi.IntInput) PolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySrcintf {
		return vs[0].([]PolicySrcintf)[vs[1].(int)]
	}).(PolicySrcintfOutput)
}

type PolicySslMirrorIntf struct {
	// Mirror Interface name.
	Name *string `pulumi:"name"`
}

// PolicySslMirrorIntfInput is an input type that accepts PolicySslMirrorIntfArgs and PolicySslMirrorIntfOutput values.
// You can construct a concrete instance of `PolicySslMirrorIntfInput` via:
//
//	PolicySslMirrorIntfArgs{...}
type PolicySslMirrorIntfInput interface {
	pulumi.Input

	ToPolicySslMirrorIntfOutput() PolicySslMirrorIntfOutput
	ToPolicySslMirrorIntfOutputWithContext(context.Context) PolicySslMirrorIntfOutput
}

type PolicySslMirrorIntfArgs struct {
	// Mirror Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicySslMirrorIntfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySslMirrorIntf)(nil)).Elem()
}

func (i PolicySslMirrorIntfArgs) ToPolicySslMirrorIntfOutput() PolicySslMirrorIntfOutput {
	return i.ToPolicySslMirrorIntfOutputWithContext(context.Background())
}

func (i PolicySslMirrorIntfArgs) ToPolicySslMirrorIntfOutputWithContext(ctx context.Context) PolicySslMirrorIntfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySslMirrorIntfOutput)
}

// PolicySslMirrorIntfArrayInput is an input type that accepts PolicySslMirrorIntfArray and PolicySslMirrorIntfArrayOutput values.
// You can construct a concrete instance of `PolicySslMirrorIntfArrayInput` via:
//
//	PolicySslMirrorIntfArray{ PolicySslMirrorIntfArgs{...} }
type PolicySslMirrorIntfArrayInput interface {
	pulumi.Input

	ToPolicySslMirrorIntfArrayOutput() PolicySslMirrorIntfArrayOutput
	ToPolicySslMirrorIntfArrayOutputWithContext(context.Context) PolicySslMirrorIntfArrayOutput
}

type PolicySslMirrorIntfArray []PolicySslMirrorIntfInput

func (PolicySslMirrorIntfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySslMirrorIntf)(nil)).Elem()
}

func (i PolicySslMirrorIntfArray) ToPolicySslMirrorIntfArrayOutput() PolicySslMirrorIntfArrayOutput {
	return i.ToPolicySslMirrorIntfArrayOutputWithContext(context.Background())
}

func (i PolicySslMirrorIntfArray) ToPolicySslMirrorIntfArrayOutputWithContext(ctx context.Context) PolicySslMirrorIntfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySslMirrorIntfArrayOutput)
}

type PolicySslMirrorIntfOutput struct{ *pulumi.OutputState }

func (PolicySslMirrorIntfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySslMirrorIntf)(nil)).Elem()
}

func (o PolicySslMirrorIntfOutput) ToPolicySslMirrorIntfOutput() PolicySslMirrorIntfOutput {
	return o
}

func (o PolicySslMirrorIntfOutput) ToPolicySslMirrorIntfOutputWithContext(ctx context.Context) PolicySslMirrorIntfOutput {
	return o
}

// Mirror Interface name.
func (o PolicySslMirrorIntfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySslMirrorIntf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicySslMirrorIntfArrayOutput struct{ *pulumi.OutputState }

func (PolicySslMirrorIntfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySslMirrorIntf)(nil)).Elem()
}

func (o PolicySslMirrorIntfArrayOutput) ToPolicySslMirrorIntfArrayOutput() PolicySslMirrorIntfArrayOutput {
	return o
}

func (o PolicySslMirrorIntfArrayOutput) ToPolicySslMirrorIntfArrayOutputWithContext(ctx context.Context) PolicySslMirrorIntfArrayOutput {
	return o
}

func (o PolicySslMirrorIntfArrayOutput) Index(i pulumi.IntInput) PolicySslMirrorIntfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySslMirrorIntf {
		return vs[0].([]PolicySslMirrorIntf)[vs[1].(int)]
	}).(PolicySslMirrorIntfOutput)
}

type PolicyUrlCategory struct {
	// URL category ID.
	Id *int `pulumi:"id"`
}

// PolicyUrlCategoryInput is an input type that accepts PolicyUrlCategoryArgs and PolicyUrlCategoryOutput values.
// You can construct a concrete instance of `PolicyUrlCategoryInput` via:
//
//	PolicyUrlCategoryArgs{...}
type PolicyUrlCategoryInput interface {
	pulumi.Input

	ToPolicyUrlCategoryOutput() PolicyUrlCategoryOutput
	ToPolicyUrlCategoryOutputWithContext(context.Context) PolicyUrlCategoryOutput
}

type PolicyUrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyUrlCategory)(nil)).Elem()
}

func (i PolicyUrlCategoryArgs) ToPolicyUrlCategoryOutput() PolicyUrlCategoryOutput {
	return i.ToPolicyUrlCategoryOutputWithContext(context.Background())
}

func (i PolicyUrlCategoryArgs) ToPolicyUrlCategoryOutputWithContext(ctx context.Context) PolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyUrlCategoryOutput)
}

// PolicyUrlCategoryArrayInput is an input type that accepts PolicyUrlCategoryArray and PolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `PolicyUrlCategoryArrayInput` via:
//
//	PolicyUrlCategoryArray{ PolicyUrlCategoryArgs{...} }
type PolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToPolicyUrlCategoryArrayOutput() PolicyUrlCategoryArrayOutput
	ToPolicyUrlCategoryArrayOutputWithContext(context.Context) PolicyUrlCategoryArrayOutput
}

type PolicyUrlCategoryArray []PolicyUrlCategoryInput

func (PolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyUrlCategory)(nil)).Elem()
}

func (i PolicyUrlCategoryArray) ToPolicyUrlCategoryArrayOutput() PolicyUrlCategoryArrayOutput {
	return i.ToPolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i PolicyUrlCategoryArray) ToPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) PolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyUrlCategoryArrayOutput)
}

type PolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (PolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyUrlCategory)(nil)).Elem()
}

func (o PolicyUrlCategoryOutput) ToPolicyUrlCategoryOutput() PolicyUrlCategoryOutput {
	return o
}

func (o PolicyUrlCategoryOutput) ToPolicyUrlCategoryOutputWithContext(ctx context.Context) PolicyUrlCategoryOutput {
	return o
}

// URL category ID.
func (o PolicyUrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyUrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (PolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyUrlCategory)(nil)).Elem()
}

func (o PolicyUrlCategoryArrayOutput) ToPolicyUrlCategoryArrayOutput() PolicyUrlCategoryArrayOutput {
	return o
}

func (o PolicyUrlCategoryArrayOutput) ToPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) PolicyUrlCategoryArrayOutput {
	return o
}

func (o PolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) PolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyUrlCategory {
		return vs[0].([]PolicyUrlCategory)[vs[1].(int)]
	}).(PolicyUrlCategoryOutput)
}

type PolicyUser struct {
	// Names of individual users that can authenticate with this policy.
	Name *string `pulumi:"name"`
}

// PolicyUserInput is an input type that accepts PolicyUserArgs and PolicyUserOutput values.
// You can construct a concrete instance of `PolicyUserInput` via:
//
//	PolicyUserArgs{...}
type PolicyUserInput interface {
	pulumi.Input

	ToPolicyUserOutput() PolicyUserOutput
	ToPolicyUserOutputWithContext(context.Context) PolicyUserOutput
}

type PolicyUserArgs struct {
	// Names of individual users that can authenticate with this policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyUser)(nil)).Elem()
}

func (i PolicyUserArgs) ToPolicyUserOutput() PolicyUserOutput {
	return i.ToPolicyUserOutputWithContext(context.Background())
}

func (i PolicyUserArgs) ToPolicyUserOutputWithContext(ctx context.Context) PolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyUserOutput)
}

// PolicyUserArrayInput is an input type that accepts PolicyUserArray and PolicyUserArrayOutput values.
// You can construct a concrete instance of `PolicyUserArrayInput` via:
//
//	PolicyUserArray{ PolicyUserArgs{...} }
type PolicyUserArrayInput interface {
	pulumi.Input

	ToPolicyUserArrayOutput() PolicyUserArrayOutput
	ToPolicyUserArrayOutputWithContext(context.Context) PolicyUserArrayOutput
}

type PolicyUserArray []PolicyUserInput

func (PolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyUser)(nil)).Elem()
}

func (i PolicyUserArray) ToPolicyUserArrayOutput() PolicyUserArrayOutput {
	return i.ToPolicyUserArrayOutputWithContext(context.Background())
}

func (i PolicyUserArray) ToPolicyUserArrayOutputWithContext(ctx context.Context) PolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyUserArrayOutput)
}

type PolicyUserOutput struct{ *pulumi.OutputState }

func (PolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyUser)(nil)).Elem()
}

func (o PolicyUserOutput) ToPolicyUserOutput() PolicyUserOutput {
	return o
}

func (o PolicyUserOutput) ToPolicyUserOutputWithContext(ctx context.Context) PolicyUserOutput {
	return o
}

// Names of individual users that can authenticate with this policy.
func (o PolicyUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyUserArrayOutput struct{ *pulumi.OutputState }

func (PolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyUser)(nil)).Elem()
}

func (o PolicyUserArrayOutput) ToPolicyUserArrayOutput() PolicyUserArrayOutput {
	return o
}

func (o PolicyUserArrayOutput) ToPolicyUserArrayOutputWithContext(ctx context.Context) PolicyUserArrayOutput {
	return o
}

func (o PolicyUserArrayOutput) Index(i pulumi.IntInput) PolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyUser {
		return vs[0].([]PolicyUser)[vs[1].(int)]
	}).(PolicyUserOutput)
}

type PolicyZtnaEmsTag struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// PolicyZtnaEmsTagInput is an input type that accepts PolicyZtnaEmsTagArgs and PolicyZtnaEmsTagOutput values.
// You can construct a concrete instance of `PolicyZtnaEmsTagInput` via:
//
//	PolicyZtnaEmsTagArgs{...}
type PolicyZtnaEmsTagInput interface {
	pulumi.Input

	ToPolicyZtnaEmsTagOutput() PolicyZtnaEmsTagOutput
	ToPolicyZtnaEmsTagOutputWithContext(context.Context) PolicyZtnaEmsTagOutput
}

type PolicyZtnaEmsTagArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyZtnaEmsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyZtnaEmsTag)(nil)).Elem()
}

func (i PolicyZtnaEmsTagArgs) ToPolicyZtnaEmsTagOutput() PolicyZtnaEmsTagOutput {
	return i.ToPolicyZtnaEmsTagOutputWithContext(context.Background())
}

func (i PolicyZtnaEmsTagArgs) ToPolicyZtnaEmsTagOutputWithContext(ctx context.Context) PolicyZtnaEmsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyZtnaEmsTagOutput)
}

// PolicyZtnaEmsTagArrayInput is an input type that accepts PolicyZtnaEmsTagArray and PolicyZtnaEmsTagArrayOutput values.
// You can construct a concrete instance of `PolicyZtnaEmsTagArrayInput` via:
//
//	PolicyZtnaEmsTagArray{ PolicyZtnaEmsTagArgs{...} }
type PolicyZtnaEmsTagArrayInput interface {
	pulumi.Input

	ToPolicyZtnaEmsTagArrayOutput() PolicyZtnaEmsTagArrayOutput
	ToPolicyZtnaEmsTagArrayOutputWithContext(context.Context) PolicyZtnaEmsTagArrayOutput
}

type PolicyZtnaEmsTagArray []PolicyZtnaEmsTagInput

func (PolicyZtnaEmsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyZtnaEmsTag)(nil)).Elem()
}

func (i PolicyZtnaEmsTagArray) ToPolicyZtnaEmsTagArrayOutput() PolicyZtnaEmsTagArrayOutput {
	return i.ToPolicyZtnaEmsTagArrayOutputWithContext(context.Background())
}

func (i PolicyZtnaEmsTagArray) ToPolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) PolicyZtnaEmsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyZtnaEmsTagArrayOutput)
}

type PolicyZtnaEmsTagOutput struct{ *pulumi.OutputState }

func (PolicyZtnaEmsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyZtnaEmsTag)(nil)).Elem()
}

func (o PolicyZtnaEmsTagOutput) ToPolicyZtnaEmsTagOutput() PolicyZtnaEmsTagOutput {
	return o
}

func (o PolicyZtnaEmsTagOutput) ToPolicyZtnaEmsTagOutputWithContext(ctx context.Context) PolicyZtnaEmsTagOutput {
	return o
}

// Address name.
func (o PolicyZtnaEmsTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyZtnaEmsTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyZtnaEmsTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyZtnaEmsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyZtnaEmsTag)(nil)).Elem()
}

func (o PolicyZtnaEmsTagArrayOutput) ToPolicyZtnaEmsTagArrayOutput() PolicyZtnaEmsTagArrayOutput {
	return o
}

func (o PolicyZtnaEmsTagArrayOutput) ToPolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) PolicyZtnaEmsTagArrayOutput {
	return o
}

func (o PolicyZtnaEmsTagArrayOutput) Index(i pulumi.IntInput) PolicyZtnaEmsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyZtnaEmsTag {
		return vs[0].([]PolicyZtnaEmsTag)[vs[1].(int)]
	}).(PolicyZtnaEmsTagOutput)
}

type PolicyZtnaEmsTagSecondary struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// PolicyZtnaEmsTagSecondaryInput is an input type that accepts PolicyZtnaEmsTagSecondaryArgs and PolicyZtnaEmsTagSecondaryOutput values.
// You can construct a concrete instance of `PolicyZtnaEmsTagSecondaryInput` via:
//
//	PolicyZtnaEmsTagSecondaryArgs{...}
type PolicyZtnaEmsTagSecondaryInput interface {
	pulumi.Input

	ToPolicyZtnaEmsTagSecondaryOutput() PolicyZtnaEmsTagSecondaryOutput
	ToPolicyZtnaEmsTagSecondaryOutputWithContext(context.Context) PolicyZtnaEmsTagSecondaryOutput
}

type PolicyZtnaEmsTagSecondaryArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyZtnaEmsTagSecondaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyZtnaEmsTagSecondary)(nil)).Elem()
}

func (i PolicyZtnaEmsTagSecondaryArgs) ToPolicyZtnaEmsTagSecondaryOutput() PolicyZtnaEmsTagSecondaryOutput {
	return i.ToPolicyZtnaEmsTagSecondaryOutputWithContext(context.Background())
}

func (i PolicyZtnaEmsTagSecondaryArgs) ToPolicyZtnaEmsTagSecondaryOutputWithContext(ctx context.Context) PolicyZtnaEmsTagSecondaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyZtnaEmsTagSecondaryOutput)
}

// PolicyZtnaEmsTagSecondaryArrayInput is an input type that accepts PolicyZtnaEmsTagSecondaryArray and PolicyZtnaEmsTagSecondaryArrayOutput values.
// You can construct a concrete instance of `PolicyZtnaEmsTagSecondaryArrayInput` via:
//
//	PolicyZtnaEmsTagSecondaryArray{ PolicyZtnaEmsTagSecondaryArgs{...} }
type PolicyZtnaEmsTagSecondaryArrayInput interface {
	pulumi.Input

	ToPolicyZtnaEmsTagSecondaryArrayOutput() PolicyZtnaEmsTagSecondaryArrayOutput
	ToPolicyZtnaEmsTagSecondaryArrayOutputWithContext(context.Context) PolicyZtnaEmsTagSecondaryArrayOutput
}

type PolicyZtnaEmsTagSecondaryArray []PolicyZtnaEmsTagSecondaryInput

func (PolicyZtnaEmsTagSecondaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyZtnaEmsTagSecondary)(nil)).Elem()
}

func (i PolicyZtnaEmsTagSecondaryArray) ToPolicyZtnaEmsTagSecondaryArrayOutput() PolicyZtnaEmsTagSecondaryArrayOutput {
	return i.ToPolicyZtnaEmsTagSecondaryArrayOutputWithContext(context.Background())
}

func (i PolicyZtnaEmsTagSecondaryArray) ToPolicyZtnaEmsTagSecondaryArrayOutputWithContext(ctx context.Context) PolicyZtnaEmsTagSecondaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyZtnaEmsTagSecondaryArrayOutput)
}

type PolicyZtnaEmsTagSecondaryOutput struct{ *pulumi.OutputState }

func (PolicyZtnaEmsTagSecondaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyZtnaEmsTagSecondary)(nil)).Elem()
}

func (o PolicyZtnaEmsTagSecondaryOutput) ToPolicyZtnaEmsTagSecondaryOutput() PolicyZtnaEmsTagSecondaryOutput {
	return o
}

func (o PolicyZtnaEmsTagSecondaryOutput) ToPolicyZtnaEmsTagSecondaryOutputWithContext(ctx context.Context) PolicyZtnaEmsTagSecondaryOutput {
	return o
}

// Address name.
func (o PolicyZtnaEmsTagSecondaryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyZtnaEmsTagSecondary) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyZtnaEmsTagSecondaryArrayOutput struct{ *pulumi.OutputState }

func (PolicyZtnaEmsTagSecondaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyZtnaEmsTagSecondary)(nil)).Elem()
}

func (o PolicyZtnaEmsTagSecondaryArrayOutput) ToPolicyZtnaEmsTagSecondaryArrayOutput() PolicyZtnaEmsTagSecondaryArrayOutput {
	return o
}

func (o PolicyZtnaEmsTagSecondaryArrayOutput) ToPolicyZtnaEmsTagSecondaryArrayOutputWithContext(ctx context.Context) PolicyZtnaEmsTagSecondaryArrayOutput {
	return o
}

func (o PolicyZtnaEmsTagSecondaryArrayOutput) Index(i pulumi.IntInput) PolicyZtnaEmsTagSecondaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyZtnaEmsTagSecondary {
		return vs[0].([]PolicyZtnaEmsTagSecondary)[vs[1].(int)]
	}).(PolicyZtnaEmsTagSecondaryOutput)
}

type PolicyZtnaGeoTag struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// PolicyZtnaGeoTagInput is an input type that accepts PolicyZtnaGeoTagArgs and PolicyZtnaGeoTagOutput values.
// You can construct a concrete instance of `PolicyZtnaGeoTagInput` via:
//
//	PolicyZtnaGeoTagArgs{...}
type PolicyZtnaGeoTagInput interface {
	pulumi.Input

	ToPolicyZtnaGeoTagOutput() PolicyZtnaGeoTagOutput
	ToPolicyZtnaGeoTagOutputWithContext(context.Context) PolicyZtnaGeoTagOutput
}

type PolicyZtnaGeoTagArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyZtnaGeoTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyZtnaGeoTag)(nil)).Elem()
}

func (i PolicyZtnaGeoTagArgs) ToPolicyZtnaGeoTagOutput() PolicyZtnaGeoTagOutput {
	return i.ToPolicyZtnaGeoTagOutputWithContext(context.Background())
}

func (i PolicyZtnaGeoTagArgs) ToPolicyZtnaGeoTagOutputWithContext(ctx context.Context) PolicyZtnaGeoTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyZtnaGeoTagOutput)
}

// PolicyZtnaGeoTagArrayInput is an input type that accepts PolicyZtnaGeoTagArray and PolicyZtnaGeoTagArrayOutput values.
// You can construct a concrete instance of `PolicyZtnaGeoTagArrayInput` via:
//
//	PolicyZtnaGeoTagArray{ PolicyZtnaGeoTagArgs{...} }
type PolicyZtnaGeoTagArrayInput interface {
	pulumi.Input

	ToPolicyZtnaGeoTagArrayOutput() PolicyZtnaGeoTagArrayOutput
	ToPolicyZtnaGeoTagArrayOutputWithContext(context.Context) PolicyZtnaGeoTagArrayOutput
}

type PolicyZtnaGeoTagArray []PolicyZtnaGeoTagInput

func (PolicyZtnaGeoTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyZtnaGeoTag)(nil)).Elem()
}

func (i PolicyZtnaGeoTagArray) ToPolicyZtnaGeoTagArrayOutput() PolicyZtnaGeoTagArrayOutput {
	return i.ToPolicyZtnaGeoTagArrayOutputWithContext(context.Background())
}

func (i PolicyZtnaGeoTagArray) ToPolicyZtnaGeoTagArrayOutputWithContext(ctx context.Context) PolicyZtnaGeoTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyZtnaGeoTagArrayOutput)
}

type PolicyZtnaGeoTagOutput struct{ *pulumi.OutputState }

func (PolicyZtnaGeoTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyZtnaGeoTag)(nil)).Elem()
}

func (o PolicyZtnaGeoTagOutput) ToPolicyZtnaGeoTagOutput() PolicyZtnaGeoTagOutput {
	return o
}

func (o PolicyZtnaGeoTagOutput) ToPolicyZtnaGeoTagOutputWithContext(ctx context.Context) PolicyZtnaGeoTagOutput {
	return o
}

// Address name.
func (o PolicyZtnaGeoTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyZtnaGeoTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyZtnaGeoTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyZtnaGeoTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyZtnaGeoTag)(nil)).Elem()
}

func (o PolicyZtnaGeoTagArrayOutput) ToPolicyZtnaGeoTagArrayOutput() PolicyZtnaGeoTagArrayOutput {
	return o
}

func (o PolicyZtnaGeoTagArrayOutput) ToPolicyZtnaGeoTagArrayOutputWithContext(ctx context.Context) PolicyZtnaGeoTagArrayOutput {
	return o
}

func (o PolicyZtnaGeoTagArrayOutput) Index(i pulumi.IntInput) PolicyZtnaGeoTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyZtnaGeoTag {
		return vs[0].([]PolicyZtnaGeoTag)[vs[1].(int)]
	}).(PolicyZtnaGeoTagOutput)
}

type ProfileprotocoloptionsCifs struct {
	// Domain for which to decrypt CIFS traffic.
	DomainController *string `pulumi:"domainController"`
	// One or more options that can be applied to the session. Valid values: `oversize`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports *int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// CIFS server credential type. Valid values: `none`, `credential-replication`, `credential-keytab`.
	ServerCredentialType *string `pulumi:"serverCredentialType"`
	// Server keytab. The structure of `serverKeytab` block is documented below.
	ServerKeytabs []ProfileprotocoloptionsCifsServerKeytab `pulumi:"serverKeytabs"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum *int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum *int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize *int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType *string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// ProfileprotocoloptionsCifsInput is an input type that accepts ProfileprotocoloptionsCifsArgs and ProfileprotocoloptionsCifsOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsCifsInput` via:
//
//	ProfileprotocoloptionsCifsArgs{...}
type ProfileprotocoloptionsCifsInput interface {
	pulumi.Input

	ToProfileprotocoloptionsCifsOutput() ProfileprotocoloptionsCifsOutput
	ToProfileprotocoloptionsCifsOutputWithContext(context.Context) ProfileprotocoloptionsCifsOutput
}

type ProfileprotocoloptionsCifsArgs struct {
	// Domain for which to decrypt CIFS traffic.
	DomainController pulumi.StringPtrInput `pulumi:"domainController"`
	// One or more options that can be applied to the session. Valid values: `oversize`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// CIFS server credential type. Valid values: `none`, `credential-replication`, `credential-keytab`.
	ServerCredentialType pulumi.StringPtrInput `pulumi:"serverCredentialType"`
	// Server keytab. The structure of `serverKeytab` block is documented below.
	ServerKeytabs ProfileprotocoloptionsCifsServerKeytabArrayInput `pulumi:"serverKeytabs"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum pulumi.IntPtrInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum pulumi.IntPtrInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize pulumi.IntPtrInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringPtrInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (ProfileprotocoloptionsCifsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsCifs)(nil)).Elem()
}

func (i ProfileprotocoloptionsCifsArgs) ToProfileprotocoloptionsCifsOutput() ProfileprotocoloptionsCifsOutput {
	return i.ToProfileprotocoloptionsCifsOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsCifsArgs) ToProfileprotocoloptionsCifsOutputWithContext(ctx context.Context) ProfileprotocoloptionsCifsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsCifsOutput)
}

func (i ProfileprotocoloptionsCifsArgs) ToProfileprotocoloptionsCifsPtrOutput() ProfileprotocoloptionsCifsPtrOutput {
	return i.ToProfileprotocoloptionsCifsPtrOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsCifsArgs) ToProfileprotocoloptionsCifsPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsCifsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsCifsOutput).ToProfileprotocoloptionsCifsPtrOutputWithContext(ctx)
}

// ProfileprotocoloptionsCifsPtrInput is an input type that accepts ProfileprotocoloptionsCifsArgs, ProfileprotocoloptionsCifsPtr and ProfileprotocoloptionsCifsPtrOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsCifsPtrInput` via:
//
//	        ProfileprotocoloptionsCifsArgs{...}
//
//	or:
//
//	        nil
type ProfileprotocoloptionsCifsPtrInput interface {
	pulumi.Input

	ToProfileprotocoloptionsCifsPtrOutput() ProfileprotocoloptionsCifsPtrOutput
	ToProfileprotocoloptionsCifsPtrOutputWithContext(context.Context) ProfileprotocoloptionsCifsPtrOutput
}

type profileprotocoloptionsCifsPtrType ProfileprotocoloptionsCifsArgs

func ProfileprotocoloptionsCifsPtr(v *ProfileprotocoloptionsCifsArgs) ProfileprotocoloptionsCifsPtrInput {
	return (*profileprotocoloptionsCifsPtrType)(v)
}

func (*profileprotocoloptionsCifsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsCifs)(nil)).Elem()
}

func (i *profileprotocoloptionsCifsPtrType) ToProfileprotocoloptionsCifsPtrOutput() ProfileprotocoloptionsCifsPtrOutput {
	return i.ToProfileprotocoloptionsCifsPtrOutputWithContext(context.Background())
}

func (i *profileprotocoloptionsCifsPtrType) ToProfileprotocoloptionsCifsPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsCifsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsCifsPtrOutput)
}

type ProfileprotocoloptionsCifsOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsCifsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsCifs)(nil)).Elem()
}

func (o ProfileprotocoloptionsCifsOutput) ToProfileprotocoloptionsCifsOutput() ProfileprotocoloptionsCifsOutput {
	return o
}

func (o ProfileprotocoloptionsCifsOutput) ToProfileprotocoloptionsCifsOutputWithContext(ctx context.Context) ProfileprotocoloptionsCifsOutput {
	return o
}

func (o ProfileprotocoloptionsCifsOutput) ToProfileprotocoloptionsCifsPtrOutput() ProfileprotocoloptionsCifsPtrOutput {
	return o.ToProfileprotocoloptionsCifsPtrOutputWithContext(context.Background())
}

func (o ProfileprotocoloptionsCifsOutput) ToProfileprotocoloptionsCifsPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsCifsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileprotocoloptionsCifs) *ProfileprotocoloptionsCifs {
		return &v
	}).(ProfileprotocoloptionsCifsPtrOutput)
}

// Domain for which to decrypt CIFS traffic.
func (o ProfileprotocoloptionsCifsOutput) DomainController() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *string { return v.DomainController }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`.
func (o ProfileprotocoloptionsCifsOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsCifsOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o ProfileprotocoloptionsCifsOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsCifsOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// CIFS server credential type. Valid values: `none`, `credential-replication`, `credential-keytab`.
func (o ProfileprotocoloptionsCifsOutput) ServerCredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *string { return v.ServerCredentialType }).(pulumi.StringPtrOutput)
}

// Server keytab. The structure of `serverKeytab` block is documented below.
func (o ProfileprotocoloptionsCifsOutput) ServerKeytabs() ProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) []ProfileprotocoloptionsCifsServerKeytab { return v.ServerKeytabs }).(ProfileprotocoloptionsCifsServerKeytabArrayOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsCifsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum dynamic TCP window size.
func (o ProfileprotocoloptionsCifsOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *int { return v.TcpWindowMaximum }).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o ProfileprotocoloptionsCifsOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *int { return v.TcpWindowMinimum }).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o ProfileprotocoloptionsCifsOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *int { return v.TcpWindowSize }).(pulumi.IntPtrOutput)
}

// Specify type of TCP window to use for this protocol.
func (o ProfileprotocoloptionsCifsOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *string { return v.TcpWindowType }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsCifsOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsCifsOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifs) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsCifsPtrOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsCifsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsCifs)(nil)).Elem()
}

func (o ProfileprotocoloptionsCifsPtrOutput) ToProfileprotocoloptionsCifsPtrOutput() ProfileprotocoloptionsCifsPtrOutput {
	return o
}

func (o ProfileprotocoloptionsCifsPtrOutput) ToProfileprotocoloptionsCifsPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsCifsPtrOutput {
	return o
}

func (o ProfileprotocoloptionsCifsPtrOutput) Elem() ProfileprotocoloptionsCifsOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) ProfileprotocoloptionsCifs {
		if v != nil {
			return *v
		}
		var ret ProfileprotocoloptionsCifs
		return ret
	}).(ProfileprotocoloptionsCifsOutput)
}

// Domain for which to decrypt CIFS traffic.
func (o ProfileprotocoloptionsCifsPtrOutput) DomainController() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.DomainController
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`.
func (o ProfileprotocoloptionsCifsPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsCifsPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o ProfileprotocoloptionsCifsPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsCifsPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// CIFS server credential type. Valid values: `none`, `credential-replication`, `credential-keytab`.
func (o ProfileprotocoloptionsCifsPtrOutput) ServerCredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.ServerCredentialType
	}).(pulumi.StringPtrOutput)
}

// Server keytab. The structure of `serverKeytab` block is documented below.
func (o ProfileprotocoloptionsCifsPtrOutput) ServerKeytabs() ProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) []ProfileprotocoloptionsCifsServerKeytab {
		if v == nil {
			return nil
		}
		return v.ServerKeytabs
	}).(ProfileprotocoloptionsCifsServerKeytabArrayOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsCifsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum dynamic TCP window size.
func (o ProfileprotocoloptionsCifsPtrOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMaximum
	}).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o ProfileprotocoloptionsCifsPtrOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMinimum
	}).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o ProfileprotocoloptionsCifsPtrOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowSize
	}).(pulumi.IntPtrOutput)
}

// Specify type of TCP window to use for this protocol.
func (o ProfileprotocoloptionsCifsPtrOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.TcpWindowType
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsCifsPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsCifsPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsCifsServerKeytab struct {
	// Base64 encoded keytab file containing credential of the server.
	Keytab *string `pulumi:"keytab"`
	// Service principal.  For example, "host/cifsserver.example.com@example.com".
	Principal *string `pulumi:"principal"`
}

// ProfileprotocoloptionsCifsServerKeytabInput is an input type that accepts ProfileprotocoloptionsCifsServerKeytabArgs and ProfileprotocoloptionsCifsServerKeytabOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsCifsServerKeytabInput` via:
//
//	ProfileprotocoloptionsCifsServerKeytabArgs{...}
type ProfileprotocoloptionsCifsServerKeytabInput interface {
	pulumi.Input

	ToProfileprotocoloptionsCifsServerKeytabOutput() ProfileprotocoloptionsCifsServerKeytabOutput
	ToProfileprotocoloptionsCifsServerKeytabOutputWithContext(context.Context) ProfileprotocoloptionsCifsServerKeytabOutput
}

type ProfileprotocoloptionsCifsServerKeytabArgs struct {
	// Base64 encoded keytab file containing credential of the server.
	Keytab pulumi.StringPtrInput `pulumi:"keytab"`
	// Service principal.  For example, "host/cifsserver.example.com@example.com".
	Principal pulumi.StringPtrInput `pulumi:"principal"`
}

func (ProfileprotocoloptionsCifsServerKeytabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsCifsServerKeytab)(nil)).Elem()
}

func (i ProfileprotocoloptionsCifsServerKeytabArgs) ToProfileprotocoloptionsCifsServerKeytabOutput() ProfileprotocoloptionsCifsServerKeytabOutput {
	return i.ToProfileprotocoloptionsCifsServerKeytabOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsCifsServerKeytabArgs) ToProfileprotocoloptionsCifsServerKeytabOutputWithContext(ctx context.Context) ProfileprotocoloptionsCifsServerKeytabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsCifsServerKeytabOutput)
}

// ProfileprotocoloptionsCifsServerKeytabArrayInput is an input type that accepts ProfileprotocoloptionsCifsServerKeytabArray and ProfileprotocoloptionsCifsServerKeytabArrayOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsCifsServerKeytabArrayInput` via:
//
//	ProfileprotocoloptionsCifsServerKeytabArray{ ProfileprotocoloptionsCifsServerKeytabArgs{...} }
type ProfileprotocoloptionsCifsServerKeytabArrayInput interface {
	pulumi.Input

	ToProfileprotocoloptionsCifsServerKeytabArrayOutput() ProfileprotocoloptionsCifsServerKeytabArrayOutput
	ToProfileprotocoloptionsCifsServerKeytabArrayOutputWithContext(context.Context) ProfileprotocoloptionsCifsServerKeytabArrayOutput
}

type ProfileprotocoloptionsCifsServerKeytabArray []ProfileprotocoloptionsCifsServerKeytabInput

func (ProfileprotocoloptionsCifsServerKeytabArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileprotocoloptionsCifsServerKeytab)(nil)).Elem()
}

func (i ProfileprotocoloptionsCifsServerKeytabArray) ToProfileprotocoloptionsCifsServerKeytabArrayOutput() ProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return i.ToProfileprotocoloptionsCifsServerKeytabArrayOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsCifsServerKeytabArray) ToProfileprotocoloptionsCifsServerKeytabArrayOutputWithContext(ctx context.Context) ProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsCifsServerKeytabArrayOutput)
}

type ProfileprotocoloptionsCifsServerKeytabOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsCifsServerKeytabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsCifsServerKeytab)(nil)).Elem()
}

func (o ProfileprotocoloptionsCifsServerKeytabOutput) ToProfileprotocoloptionsCifsServerKeytabOutput() ProfileprotocoloptionsCifsServerKeytabOutput {
	return o
}

func (o ProfileprotocoloptionsCifsServerKeytabOutput) ToProfileprotocoloptionsCifsServerKeytabOutputWithContext(ctx context.Context) ProfileprotocoloptionsCifsServerKeytabOutput {
	return o
}

// Base64 encoded keytab file containing credential of the server.
func (o ProfileprotocoloptionsCifsServerKeytabOutput) Keytab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifsServerKeytab) *string { return v.Keytab }).(pulumi.StringPtrOutput)
}

// Service principal.  For example, "host/cifsserver.example.com@example.com".
func (o ProfileprotocoloptionsCifsServerKeytabOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsCifsServerKeytab) *string { return v.Principal }).(pulumi.StringPtrOutput)
}

type ProfileprotocoloptionsCifsServerKeytabArrayOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsCifsServerKeytabArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileprotocoloptionsCifsServerKeytab)(nil)).Elem()
}

func (o ProfileprotocoloptionsCifsServerKeytabArrayOutput) ToProfileprotocoloptionsCifsServerKeytabArrayOutput() ProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return o
}

func (o ProfileprotocoloptionsCifsServerKeytabArrayOutput) ToProfileprotocoloptionsCifsServerKeytabArrayOutputWithContext(ctx context.Context) ProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return o
}

func (o ProfileprotocoloptionsCifsServerKeytabArrayOutput) Index(i pulumi.IntInput) ProfileprotocoloptionsCifsServerKeytabOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileprotocoloptionsCifsServerKeytab {
		return vs[0].([]ProfileprotocoloptionsCifsServerKeytab)[vs[1].(int)]
	}).(ProfileprotocoloptionsCifsServerKeytabOutput)
}

type ProfileprotocoloptionsDns struct {
	// Ports to scan for content (1 - 65535, default = 53).
	Ports *int `pulumi:"ports"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// ProfileprotocoloptionsDnsInput is an input type that accepts ProfileprotocoloptionsDnsArgs and ProfileprotocoloptionsDnsOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsDnsInput` via:
//
//	ProfileprotocoloptionsDnsArgs{...}
type ProfileprotocoloptionsDnsInput interface {
	pulumi.Input

	ToProfileprotocoloptionsDnsOutput() ProfileprotocoloptionsDnsOutput
	ToProfileprotocoloptionsDnsOutputWithContext(context.Context) ProfileprotocoloptionsDnsOutput
}

type ProfileprotocoloptionsDnsArgs struct {
	// Ports to scan for content (1 - 65535, default = 53).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ProfileprotocoloptionsDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsDns)(nil)).Elem()
}

func (i ProfileprotocoloptionsDnsArgs) ToProfileprotocoloptionsDnsOutput() ProfileprotocoloptionsDnsOutput {
	return i.ToProfileprotocoloptionsDnsOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsDnsArgs) ToProfileprotocoloptionsDnsOutputWithContext(ctx context.Context) ProfileprotocoloptionsDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsDnsOutput)
}

func (i ProfileprotocoloptionsDnsArgs) ToProfileprotocoloptionsDnsPtrOutput() ProfileprotocoloptionsDnsPtrOutput {
	return i.ToProfileprotocoloptionsDnsPtrOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsDnsArgs) ToProfileprotocoloptionsDnsPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsDnsOutput).ToProfileprotocoloptionsDnsPtrOutputWithContext(ctx)
}

// ProfileprotocoloptionsDnsPtrInput is an input type that accepts ProfileprotocoloptionsDnsArgs, ProfileprotocoloptionsDnsPtr and ProfileprotocoloptionsDnsPtrOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsDnsPtrInput` via:
//
//	        ProfileprotocoloptionsDnsArgs{...}
//
//	or:
//
//	        nil
type ProfileprotocoloptionsDnsPtrInput interface {
	pulumi.Input

	ToProfileprotocoloptionsDnsPtrOutput() ProfileprotocoloptionsDnsPtrOutput
	ToProfileprotocoloptionsDnsPtrOutputWithContext(context.Context) ProfileprotocoloptionsDnsPtrOutput
}

type profileprotocoloptionsDnsPtrType ProfileprotocoloptionsDnsArgs

func ProfileprotocoloptionsDnsPtr(v *ProfileprotocoloptionsDnsArgs) ProfileprotocoloptionsDnsPtrInput {
	return (*profileprotocoloptionsDnsPtrType)(v)
}

func (*profileprotocoloptionsDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsDns)(nil)).Elem()
}

func (i *profileprotocoloptionsDnsPtrType) ToProfileprotocoloptionsDnsPtrOutput() ProfileprotocoloptionsDnsPtrOutput {
	return i.ToProfileprotocoloptionsDnsPtrOutputWithContext(context.Background())
}

func (i *profileprotocoloptionsDnsPtrType) ToProfileprotocoloptionsDnsPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsDnsPtrOutput)
}

type ProfileprotocoloptionsDnsOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsDns)(nil)).Elem()
}

func (o ProfileprotocoloptionsDnsOutput) ToProfileprotocoloptionsDnsOutput() ProfileprotocoloptionsDnsOutput {
	return o
}

func (o ProfileprotocoloptionsDnsOutput) ToProfileprotocoloptionsDnsOutputWithContext(ctx context.Context) ProfileprotocoloptionsDnsOutput {
	return o
}

func (o ProfileprotocoloptionsDnsOutput) ToProfileprotocoloptionsDnsPtrOutput() ProfileprotocoloptionsDnsPtrOutput {
	return o.ToProfileprotocoloptionsDnsPtrOutputWithContext(context.Background())
}

func (o ProfileprotocoloptionsDnsOutput) ToProfileprotocoloptionsDnsPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileprotocoloptionsDns) *ProfileprotocoloptionsDns {
		return &v
	}).(ProfileprotocoloptionsDnsPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 53).
func (o ProfileprotocoloptionsDnsOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsDns) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsDnsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsDns) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ProfileprotocoloptionsDnsPtrOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsDns)(nil)).Elem()
}

func (o ProfileprotocoloptionsDnsPtrOutput) ToProfileprotocoloptionsDnsPtrOutput() ProfileprotocoloptionsDnsPtrOutput {
	return o
}

func (o ProfileprotocoloptionsDnsPtrOutput) ToProfileprotocoloptionsDnsPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsDnsPtrOutput {
	return o
}

func (o ProfileprotocoloptionsDnsPtrOutput) Elem() ProfileprotocoloptionsDnsOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsDns) ProfileprotocoloptionsDns {
		if v != nil {
			return *v
		}
		var ret ProfileprotocoloptionsDns
		return ret
	}).(ProfileprotocoloptionsDnsOutput)
}

// Ports to scan for content (1 - 65535, default = 53).
func (o ProfileprotocoloptionsDnsPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsDns) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsDnsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsDns) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ProfileprotocoloptionsFtp struct {
	// Number of bytes to send in each transmission for client comforting (bytes). On FortiOS versions 6.2.0: 1 - 10240 bytes, default = 1. On FortiOS versions 6.2.4-7.2.3: 1 - 65535 bytes, default = 1.
	ComfortAmount *int `pulumi:"comfortAmount"`
	// Interval between successive transmissions of data for client comforting (seconds).
	ComfortInterval *int `pulumi:"comfortInterval"`
	// Enable/disable FTP redirection for explicit FTPS. Valid values: `enable`, `disable`.
	ExplicitFtpTls *string `pulumi:"explicitFtpTls"`
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `clientcomfort`, `oversize`, `splice`, `bypass-rest-command`, `bypass-mode-command`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 21).
	Ports *int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
	StreamBasedUncompressedLimit *int `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum *int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum *int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize *int `pulumi:"tcpWindowSize"`
	// TCP window type to use for this protocol.
	TcpWindowType *string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// ProfileprotocoloptionsFtpInput is an input type that accepts ProfileprotocoloptionsFtpArgs and ProfileprotocoloptionsFtpOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsFtpInput` via:
//
//	ProfileprotocoloptionsFtpArgs{...}
type ProfileprotocoloptionsFtpInput interface {
	pulumi.Input

	ToProfileprotocoloptionsFtpOutput() ProfileprotocoloptionsFtpOutput
	ToProfileprotocoloptionsFtpOutputWithContext(context.Context) ProfileprotocoloptionsFtpOutput
}

type ProfileprotocoloptionsFtpArgs struct {
	// Number of bytes to send in each transmission for client comforting (bytes). On FortiOS versions 6.2.0: 1 - 10240 bytes, default = 1. On FortiOS versions 6.2.4-7.2.3: 1 - 65535 bytes, default = 1.
	ComfortAmount pulumi.IntPtrInput `pulumi:"comfortAmount"`
	// Interval between successive transmissions of data for client comforting (seconds).
	ComfortInterval pulumi.IntPtrInput `pulumi:"comfortInterval"`
	// Enable/disable FTP redirection for explicit FTPS. Valid values: `enable`, `disable`.
	ExplicitFtpTls pulumi.StringPtrInput `pulumi:"explicitFtpTls"`
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `clientcomfort`, `oversize`, `splice`, `bypass-rest-command`, `bypass-mode-command`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 21).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
	StreamBasedUncompressedLimit pulumi.IntPtrInput `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum pulumi.IntPtrInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum pulumi.IntPtrInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize pulumi.IntPtrInput `pulumi:"tcpWindowSize"`
	// TCP window type to use for this protocol.
	TcpWindowType pulumi.StringPtrInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (ProfileprotocoloptionsFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsFtp)(nil)).Elem()
}

func (i ProfileprotocoloptionsFtpArgs) ToProfileprotocoloptionsFtpOutput() ProfileprotocoloptionsFtpOutput {
	return i.ToProfileprotocoloptionsFtpOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsFtpArgs) ToProfileprotocoloptionsFtpOutputWithContext(ctx context.Context) ProfileprotocoloptionsFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsFtpOutput)
}

func (i ProfileprotocoloptionsFtpArgs) ToProfileprotocoloptionsFtpPtrOutput() ProfileprotocoloptionsFtpPtrOutput {
	return i.ToProfileprotocoloptionsFtpPtrOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsFtpArgs) ToProfileprotocoloptionsFtpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsFtpOutput).ToProfileprotocoloptionsFtpPtrOutputWithContext(ctx)
}

// ProfileprotocoloptionsFtpPtrInput is an input type that accepts ProfileprotocoloptionsFtpArgs, ProfileprotocoloptionsFtpPtr and ProfileprotocoloptionsFtpPtrOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsFtpPtrInput` via:
//
//	        ProfileprotocoloptionsFtpArgs{...}
//
//	or:
//
//	        nil
type ProfileprotocoloptionsFtpPtrInput interface {
	pulumi.Input

	ToProfileprotocoloptionsFtpPtrOutput() ProfileprotocoloptionsFtpPtrOutput
	ToProfileprotocoloptionsFtpPtrOutputWithContext(context.Context) ProfileprotocoloptionsFtpPtrOutput
}

type profileprotocoloptionsFtpPtrType ProfileprotocoloptionsFtpArgs

func ProfileprotocoloptionsFtpPtr(v *ProfileprotocoloptionsFtpArgs) ProfileprotocoloptionsFtpPtrInput {
	return (*profileprotocoloptionsFtpPtrType)(v)
}

func (*profileprotocoloptionsFtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsFtp)(nil)).Elem()
}

func (i *profileprotocoloptionsFtpPtrType) ToProfileprotocoloptionsFtpPtrOutput() ProfileprotocoloptionsFtpPtrOutput {
	return i.ToProfileprotocoloptionsFtpPtrOutputWithContext(context.Background())
}

func (i *profileprotocoloptionsFtpPtrType) ToProfileprotocoloptionsFtpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsFtpPtrOutput)
}

type ProfileprotocoloptionsFtpOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsFtp)(nil)).Elem()
}

func (o ProfileprotocoloptionsFtpOutput) ToProfileprotocoloptionsFtpOutput() ProfileprotocoloptionsFtpOutput {
	return o
}

func (o ProfileprotocoloptionsFtpOutput) ToProfileprotocoloptionsFtpOutputWithContext(ctx context.Context) ProfileprotocoloptionsFtpOutput {
	return o
}

func (o ProfileprotocoloptionsFtpOutput) ToProfileprotocoloptionsFtpPtrOutput() ProfileprotocoloptionsFtpPtrOutput {
	return o.ToProfileprotocoloptionsFtpPtrOutputWithContext(context.Background())
}

func (o ProfileprotocoloptionsFtpOutput) ToProfileprotocoloptionsFtpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsFtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileprotocoloptionsFtp) *ProfileprotocoloptionsFtp {
		return &v
	}).(ProfileprotocoloptionsFtpPtrOutput)
}

// Number of bytes to send in each transmission for client comforting (bytes). On FortiOS versions 6.2.0: 1 - 10240 bytes, default = 1. On FortiOS versions 6.2.4-7.2.3: 1 - 65535 bytes, default = 1.
func (o ProfileprotocoloptionsFtpOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *int { return v.ComfortAmount }).(pulumi.IntPtrOutput)
}

// Interval between successive transmissions of data for client comforting (seconds).
func (o ProfileprotocoloptionsFtpOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *int { return v.ComfortInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable FTP redirection for explicit FTPS. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsFtpOutput) ExplicitFtpTls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *string { return v.ExplicitFtpTls }).(pulumi.StringPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsFtpOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `clientcomfort`, `oversize`, `splice`, `bypass-rest-command`, `bypass-mode-command`.
func (o ProfileprotocoloptionsFtpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsFtpOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 21).
func (o ProfileprotocoloptionsFtpOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsFtpOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsFtpOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsFtpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
func (o ProfileprotocoloptionsFtpOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *int { return v.StreamBasedUncompressedLimit }).(pulumi.IntPtrOutput)
}

// Maximum dynamic TCP window size.
func (o ProfileprotocoloptionsFtpOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *int { return v.TcpWindowMaximum }).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o ProfileprotocoloptionsFtpOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *int { return v.TcpWindowMinimum }).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o ProfileprotocoloptionsFtpOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *int { return v.TcpWindowSize }).(pulumi.IntPtrOutput)
}

// TCP window type to use for this protocol.
func (o ProfileprotocoloptionsFtpOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *string { return v.TcpWindowType }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsFtpOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsFtpOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsFtp) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsFtpPtrOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsFtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsFtp)(nil)).Elem()
}

func (o ProfileprotocoloptionsFtpPtrOutput) ToProfileprotocoloptionsFtpPtrOutput() ProfileprotocoloptionsFtpPtrOutput {
	return o
}

func (o ProfileprotocoloptionsFtpPtrOutput) ToProfileprotocoloptionsFtpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsFtpPtrOutput {
	return o
}

func (o ProfileprotocoloptionsFtpPtrOutput) Elem() ProfileprotocoloptionsFtpOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) ProfileprotocoloptionsFtp {
		if v != nil {
			return *v
		}
		var ret ProfileprotocoloptionsFtp
		return ret
	}).(ProfileprotocoloptionsFtpOutput)
}

// Number of bytes to send in each transmission for client comforting (bytes). On FortiOS versions 6.2.0: 1 - 10240 bytes, default = 1. On FortiOS versions 6.2.4-7.2.3: 1 - 65535 bytes, default = 1.
func (o ProfileprotocoloptionsFtpPtrOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.ComfortAmount
	}).(pulumi.IntPtrOutput)
}

// Interval between successive transmissions of data for client comforting (seconds).
func (o ProfileprotocoloptionsFtpPtrOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.ComfortInterval
	}).(pulumi.IntPtrOutput)
}

// Enable/disable FTP redirection for explicit FTPS. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsFtpPtrOutput) ExplicitFtpTls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.ExplicitFtpTls
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsFtpPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `clientcomfort`, `oversize`, `splice`, `bypass-rest-command`, `bypass-mode-command`.
func (o ProfileprotocoloptionsFtpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsFtpPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 21).
func (o ProfileprotocoloptionsFtpPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsFtpPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsFtpPtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsFtpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
func (o ProfileprotocoloptionsFtpPtrOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.StreamBasedUncompressedLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum dynamic TCP window size.
func (o ProfileprotocoloptionsFtpPtrOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMaximum
	}).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o ProfileprotocoloptionsFtpPtrOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMinimum
	}).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o ProfileprotocoloptionsFtpPtrOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowSize
	}).(pulumi.IntPtrOutput)
}

// TCP window type to use for this protocol.
func (o ProfileprotocoloptionsFtpPtrOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.TcpWindowType
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsFtpPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsFtpPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsHttp struct {
	// Enable/disable IP based URL rating. Valid values: `enable`, `disable`.
	AddressIpRating *string `pulumi:"addressIpRating"`
	// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
	BlockPageStatusCode *int `pulumi:"blockPageStatusCode"`
	// Amount of data to send in a transmission for client comforting. On FortiOS versions 6.2.0: 1 - 10240 bytes, default = 1. On FortiOS versions 6.2.4-7.2.3: 1 - 65535 bytes, default = 1.
	ComfortAmount *int `pulumi:"comfortAmount"`
	// Interval between successive transmissions of data for client comforting (seconds).
	ComfortInterval *int `pulumi:"comfortInterval"`
	// Enable/disable Fortinet bar on HTML content. Valid values: `enable`, `disable`.
	FortinetBar *string `pulumi:"fortinetBar"`
	// Port for use by Fortinet Bar (1 - 65535, default = 8011).
	FortinetBarPort *int `pulumi:"fortinetBarPort"`
	// Enable/disable h2c HTTP connection upgrade. Valid values: `enable`, `disable`.
	H2c *string `pulumi:"h2c"`
	// Enable/disable HTTP policy check. Valid values: `disable`, `enable`.
	HttpPolicy *string `pulumi:"httpPolicy"`
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB). On FortiOS versions 6.2.0-7.2.3: 1 - 383 MB, default = 10.
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 80).
	Ports *int `pulumi:"ports"`
	// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets). Valid values: `jisx0201`, `jisx0208`, `jisx0212`, `gb2312`, `ksc5601-ex`, `euc-jp`, `sjis`, `iso2022-jp`, `iso2022-jp-1`, `iso2022-jp-2`, `euc-cn`, `ces-gbk`, `hz`, `ces-big5`, `euc-kr`, `iso2022-jp-3`, `iso8859-1`, `tis620`, `cp874`, `cp1252`, `cp1251`.
	PostLang *string `pulumi:"postLang"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable blocking of partial downloads. Valid values: `disable`, `enable`.
	RangeBlock *string `pulumi:"rangeBlock"`
	// Number of attempts to retry HTTP connection (0 - 100, default = 0).
	RetryCount *int `pulumi:"retryCount"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
	StreamBasedUncompressedLimit *int `pulumi:"streamBasedUncompressedLimit"`
	// Enable/disable bypassing of streaming content from buffering. Valid values: `enable`, `disable`.
	StreamingContentBypass *string `pulumi:"streamingContentBypass"`
	// Enable/disable stripping of HTTP X-Forwarded-For header. Valid values: `disable`, `enable`.
	StripXForwardedFor *string `pulumi:"stripXForwardedFor"`
	// Bypass from scanning, or block a connection that attempts to switch protocol. Valid values: `bypass`, `block`.
	SwitchingProtocols *string `pulumi:"switchingProtocols"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum *int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum *int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize *int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType *string `pulumi:"tcpWindowType"`
	// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
	TunnelNonHttp *string `pulumi:"tunnelNonHttp"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
	// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
	UnknownContentEncoding *string `pulumi:"unknownContentEncoding"`
	// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion *string `pulumi:"unknownHttpVersion"`
	// Enable/disable verification of DNS for policy matching. Valid values: `enable`, `disable`.
	VerifyDnsForPolicyMatching *string `pulumi:"verifyDnsForPolicyMatching"`
}

// ProfileprotocoloptionsHttpInput is an input type that accepts ProfileprotocoloptionsHttpArgs and ProfileprotocoloptionsHttpOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsHttpInput` via:
//
//	ProfileprotocoloptionsHttpArgs{...}
type ProfileprotocoloptionsHttpInput interface {
	pulumi.Input

	ToProfileprotocoloptionsHttpOutput() ProfileprotocoloptionsHttpOutput
	ToProfileprotocoloptionsHttpOutputWithContext(context.Context) ProfileprotocoloptionsHttpOutput
}

type ProfileprotocoloptionsHttpArgs struct {
	// Enable/disable IP based URL rating. Valid values: `enable`, `disable`.
	AddressIpRating pulumi.StringPtrInput `pulumi:"addressIpRating"`
	// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
	BlockPageStatusCode pulumi.IntPtrInput `pulumi:"blockPageStatusCode"`
	// Amount of data to send in a transmission for client comforting. On FortiOS versions 6.2.0: 1 - 10240 bytes, default = 1. On FortiOS versions 6.2.4-7.2.3: 1 - 65535 bytes, default = 1.
	ComfortAmount pulumi.IntPtrInput `pulumi:"comfortAmount"`
	// Interval between successive transmissions of data for client comforting (seconds).
	ComfortInterval pulumi.IntPtrInput `pulumi:"comfortInterval"`
	// Enable/disable Fortinet bar on HTML content. Valid values: `enable`, `disable`.
	FortinetBar pulumi.StringPtrInput `pulumi:"fortinetBar"`
	// Port for use by Fortinet Bar (1 - 65535, default = 8011).
	FortinetBarPort pulumi.IntPtrInput `pulumi:"fortinetBarPort"`
	// Enable/disable h2c HTTP connection upgrade. Valid values: `enable`, `disable`.
	H2c pulumi.StringPtrInput `pulumi:"h2c"`
	// Enable/disable HTTP policy check. Valid values: `disable`, `enable`.
	HttpPolicy pulumi.StringPtrInput `pulumi:"httpPolicy"`
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB). On FortiOS versions 6.2.0-7.2.3: 1 - 383 MB, default = 10.
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 80).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets). Valid values: `jisx0201`, `jisx0208`, `jisx0212`, `gb2312`, `ksc5601-ex`, `euc-jp`, `sjis`, `iso2022-jp`, `iso2022-jp-1`, `iso2022-jp-2`, `euc-cn`, `ces-gbk`, `hz`, `ces-big5`, `euc-kr`, `iso2022-jp-3`, `iso8859-1`, `tis620`, `cp874`, `cp1252`, `cp1251`.
	PostLang pulumi.StringPtrInput `pulumi:"postLang"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable blocking of partial downloads. Valid values: `disable`, `enable`.
	RangeBlock pulumi.StringPtrInput `pulumi:"rangeBlock"`
	// Number of attempts to retry HTTP connection (0 - 100, default = 0).
	RetryCount pulumi.IntPtrInput `pulumi:"retryCount"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
	StreamBasedUncompressedLimit pulumi.IntPtrInput `pulumi:"streamBasedUncompressedLimit"`
	// Enable/disable bypassing of streaming content from buffering. Valid values: `enable`, `disable`.
	StreamingContentBypass pulumi.StringPtrInput `pulumi:"streamingContentBypass"`
	// Enable/disable stripping of HTTP X-Forwarded-For header. Valid values: `disable`, `enable`.
	StripXForwardedFor pulumi.StringPtrInput `pulumi:"stripXForwardedFor"`
	// Bypass from scanning, or block a connection that attempts to switch protocol. Valid values: `bypass`, `block`.
	SwitchingProtocols pulumi.StringPtrInput `pulumi:"switchingProtocols"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum pulumi.IntPtrInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum pulumi.IntPtrInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize pulumi.IntPtrInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringPtrInput `pulumi:"tcpWindowType"`
	// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
	TunnelNonHttp pulumi.StringPtrInput `pulumi:"tunnelNonHttp"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
	// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
	UnknownContentEncoding pulumi.StringPtrInput `pulumi:"unknownContentEncoding"`
	// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion pulumi.StringPtrInput `pulumi:"unknownHttpVersion"`
	// Enable/disable verification of DNS for policy matching. Valid values: `enable`, `disable`.
	VerifyDnsForPolicyMatching pulumi.StringPtrInput `pulumi:"verifyDnsForPolicyMatching"`
}

func (ProfileprotocoloptionsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsHttp)(nil)).Elem()
}

func (i ProfileprotocoloptionsHttpArgs) ToProfileprotocoloptionsHttpOutput() ProfileprotocoloptionsHttpOutput {
	return i.ToProfileprotocoloptionsHttpOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsHttpArgs) ToProfileprotocoloptionsHttpOutputWithContext(ctx context.Context) ProfileprotocoloptionsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsHttpOutput)
}

func (i ProfileprotocoloptionsHttpArgs) ToProfileprotocoloptionsHttpPtrOutput() ProfileprotocoloptionsHttpPtrOutput {
	return i.ToProfileprotocoloptionsHttpPtrOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsHttpArgs) ToProfileprotocoloptionsHttpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsHttpOutput).ToProfileprotocoloptionsHttpPtrOutputWithContext(ctx)
}

// ProfileprotocoloptionsHttpPtrInput is an input type that accepts ProfileprotocoloptionsHttpArgs, ProfileprotocoloptionsHttpPtr and ProfileprotocoloptionsHttpPtrOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsHttpPtrInput` via:
//
//	        ProfileprotocoloptionsHttpArgs{...}
//
//	or:
//
//	        nil
type ProfileprotocoloptionsHttpPtrInput interface {
	pulumi.Input

	ToProfileprotocoloptionsHttpPtrOutput() ProfileprotocoloptionsHttpPtrOutput
	ToProfileprotocoloptionsHttpPtrOutputWithContext(context.Context) ProfileprotocoloptionsHttpPtrOutput
}

type profileprotocoloptionsHttpPtrType ProfileprotocoloptionsHttpArgs

func ProfileprotocoloptionsHttpPtr(v *ProfileprotocoloptionsHttpArgs) ProfileprotocoloptionsHttpPtrInput {
	return (*profileprotocoloptionsHttpPtrType)(v)
}

func (*profileprotocoloptionsHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsHttp)(nil)).Elem()
}

func (i *profileprotocoloptionsHttpPtrType) ToProfileprotocoloptionsHttpPtrOutput() ProfileprotocoloptionsHttpPtrOutput {
	return i.ToProfileprotocoloptionsHttpPtrOutputWithContext(context.Background())
}

func (i *profileprotocoloptionsHttpPtrType) ToProfileprotocoloptionsHttpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsHttpPtrOutput)
}

type ProfileprotocoloptionsHttpOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsHttp)(nil)).Elem()
}

func (o ProfileprotocoloptionsHttpOutput) ToProfileprotocoloptionsHttpOutput() ProfileprotocoloptionsHttpOutput {
	return o
}

func (o ProfileprotocoloptionsHttpOutput) ToProfileprotocoloptionsHttpOutputWithContext(ctx context.Context) ProfileprotocoloptionsHttpOutput {
	return o
}

func (o ProfileprotocoloptionsHttpOutput) ToProfileprotocoloptionsHttpPtrOutput() ProfileprotocoloptionsHttpPtrOutput {
	return o.ToProfileprotocoloptionsHttpPtrOutputWithContext(context.Background())
}

func (o ProfileprotocoloptionsHttpOutput) ToProfileprotocoloptionsHttpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileprotocoloptionsHttp) *ProfileprotocoloptionsHttp {
		return &v
	}).(ProfileprotocoloptionsHttpPtrOutput)
}

// Enable/disable IP based URL rating. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpOutput) AddressIpRating() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.AddressIpRating }).(pulumi.StringPtrOutput)
}

// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
func (o ProfileprotocoloptionsHttpOutput) BlockPageStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.BlockPageStatusCode }).(pulumi.IntPtrOutput)
}

// Amount of data to send in a transmission for client comforting. On FortiOS versions 6.2.0: 1 - 10240 bytes, default = 1. On FortiOS versions 6.2.4-7.2.3: 1 - 65535 bytes, default = 1.
func (o ProfileprotocoloptionsHttpOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.ComfortAmount }).(pulumi.IntPtrOutput)
}

// Interval between successive transmissions of data for client comforting (seconds).
func (o ProfileprotocoloptionsHttpOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.ComfortInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable Fortinet bar on HTML content. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpOutput) FortinetBar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.FortinetBar }).(pulumi.StringPtrOutput)
}

// Port for use by Fortinet Bar (1 - 65535, default = 8011).
func (o ProfileprotocoloptionsHttpOutput) FortinetBarPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.FortinetBarPort }).(pulumi.IntPtrOutput)
}

// Enable/disable h2c HTTP connection upgrade. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpOutput) H2c() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.H2c }).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP policy check. Valid values: `disable`, `enable`.
func (o ProfileprotocoloptionsHttpOutput) HttpPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.HttpPolicy }).(pulumi.StringPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
func (o ProfileprotocoloptionsHttpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB). On FortiOS versions 6.2.0-7.2.3: 1 - 383 MB, default = 10.
func (o ProfileprotocoloptionsHttpOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 80).
func (o ProfileprotocoloptionsHttpOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets). Valid values: `jisx0201`, `jisx0208`, `jisx0212`, `gb2312`, `ksc5601-ex`, `euc-jp`, `sjis`, `iso2022-jp`, `iso2022-jp-1`, `iso2022-jp-2`, `euc-cn`, `ces-gbk`, `hz`, `ces-big5`, `euc-kr`, `iso2022-jp-3`, `iso8859-1`, `tis620`, `cp874`, `cp1252`, `cp1251`.
func (o ProfileprotocoloptionsHttpOutput) PostLang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.PostLang }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Enable/disable blocking of partial downloads. Valid values: `disable`, `enable`.
func (o ProfileprotocoloptionsHttpOutput) RangeBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.RangeBlock }).(pulumi.StringPtrOutput)
}

// Number of attempts to retry HTTP connection (0 - 100, default = 0).
func (o ProfileprotocoloptionsHttpOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsHttpOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
func (o ProfileprotocoloptionsHttpOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.StreamBasedUncompressedLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable bypassing of streaming content from buffering. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpOutput) StreamingContentBypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.StreamingContentBypass }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of HTTP X-Forwarded-For header. Valid values: `disable`, `enable`.
func (o ProfileprotocoloptionsHttpOutput) StripXForwardedFor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.StripXForwardedFor }).(pulumi.StringPtrOutput)
}

// Bypass from scanning, or block a connection that attempts to switch protocol. Valid values: `bypass`, `block`.
func (o ProfileprotocoloptionsHttpOutput) SwitchingProtocols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.SwitchingProtocols }).(pulumi.StringPtrOutput)
}

// Maximum dynamic TCP window size.
func (o ProfileprotocoloptionsHttpOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.TcpWindowMaximum }).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o ProfileprotocoloptionsHttpOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.TcpWindowMinimum }).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o ProfileprotocoloptionsHttpOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.TcpWindowSize }).(pulumi.IntPtrOutput)
}

// Specify type of TCP window to use for this protocol.
func (o ProfileprotocoloptionsHttpOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.TcpWindowType }).(pulumi.StringPtrOutput)
}

// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpOutput) TunnelNonHttp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.TunnelNonHttp }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsHttpOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsHttpOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
func (o ProfileprotocoloptionsHttpOutput) UnknownContentEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.UnknownContentEncoding }).(pulumi.StringPtrOutput)
}

// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
func (o ProfileprotocoloptionsHttpOutput) UnknownHttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.UnknownHttpVersion }).(pulumi.StringPtrOutput)
}

// Enable/disable verification of DNS for policy matching. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpOutput) VerifyDnsForPolicyMatching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsHttp) *string { return v.VerifyDnsForPolicyMatching }).(pulumi.StringPtrOutput)
}

type ProfileprotocoloptionsHttpPtrOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsHttp)(nil)).Elem()
}

func (o ProfileprotocoloptionsHttpPtrOutput) ToProfileprotocoloptionsHttpPtrOutput() ProfileprotocoloptionsHttpPtrOutput {
	return o
}

func (o ProfileprotocoloptionsHttpPtrOutput) ToProfileprotocoloptionsHttpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsHttpPtrOutput {
	return o
}

func (o ProfileprotocoloptionsHttpPtrOutput) Elem() ProfileprotocoloptionsHttpOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) ProfileprotocoloptionsHttp {
		if v != nil {
			return *v
		}
		var ret ProfileprotocoloptionsHttp
		return ret
	}).(ProfileprotocoloptionsHttpOutput)
}

// Enable/disable IP based URL rating. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpPtrOutput) AddressIpRating() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.AddressIpRating
	}).(pulumi.StringPtrOutput)
}

// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
func (o ProfileprotocoloptionsHttpPtrOutput) BlockPageStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.BlockPageStatusCode
	}).(pulumi.IntPtrOutput)
}

// Amount of data to send in a transmission for client comforting. On FortiOS versions 6.2.0: 1 - 10240 bytes, default = 1. On FortiOS versions 6.2.4-7.2.3: 1 - 65535 bytes, default = 1.
func (o ProfileprotocoloptionsHttpPtrOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.ComfortAmount
	}).(pulumi.IntPtrOutput)
}

// Interval between successive transmissions of data for client comforting (seconds).
func (o ProfileprotocoloptionsHttpPtrOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.ComfortInterval
	}).(pulumi.IntPtrOutput)
}

// Enable/disable Fortinet bar on HTML content. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpPtrOutput) FortinetBar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.FortinetBar
	}).(pulumi.StringPtrOutput)
}

// Port for use by Fortinet Bar (1 - 65535, default = 8011).
func (o ProfileprotocoloptionsHttpPtrOutput) FortinetBarPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.FortinetBarPort
	}).(pulumi.IntPtrOutput)
}

// Enable/disable h2c HTTP connection upgrade. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpPtrOutput) H2c() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.H2c
	}).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP policy check. Valid values: `disable`, `enable`.
func (o ProfileprotocoloptionsHttpPtrOutput) HttpPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.HttpPolicy
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
func (o ProfileprotocoloptionsHttpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB). On FortiOS versions 6.2.0-7.2.3: 1 - 383 MB, default = 10.
func (o ProfileprotocoloptionsHttpPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 80).
func (o ProfileprotocoloptionsHttpPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets). Valid values: `jisx0201`, `jisx0208`, `jisx0212`, `gb2312`, `ksc5601-ex`, `euc-jp`, `sjis`, `iso2022-jp`, `iso2022-jp-1`, `iso2022-jp-2`, `euc-cn`, `ces-gbk`, `hz`, `ces-big5`, `euc-kr`, `iso2022-jp-3`, `iso8859-1`, `tis620`, `cp874`, `cp1252`, `cp1251`.
func (o ProfileprotocoloptionsHttpPtrOutput) PostLang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.PostLang
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Enable/disable blocking of partial downloads. Valid values: `disable`, `enable`.
func (o ProfileprotocoloptionsHttpPtrOutput) RangeBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.RangeBlock
	}).(pulumi.StringPtrOutput)
}

// Number of attempts to retry HTTP connection (0 - 100, default = 0).
func (o ProfileprotocoloptionsHttpPtrOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.RetryCount
	}).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsHttpPtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
func (o ProfileprotocoloptionsHttpPtrOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.StreamBasedUncompressedLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable bypassing of streaming content from buffering. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpPtrOutput) StreamingContentBypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.StreamingContentBypass
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of HTTP X-Forwarded-For header. Valid values: `disable`, `enable`.
func (o ProfileprotocoloptionsHttpPtrOutput) StripXForwardedFor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.StripXForwardedFor
	}).(pulumi.StringPtrOutput)
}

// Bypass from scanning, or block a connection that attempts to switch protocol. Valid values: `bypass`, `block`.
func (o ProfileprotocoloptionsHttpPtrOutput) SwitchingProtocols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.SwitchingProtocols
	}).(pulumi.StringPtrOutput)
}

// Maximum dynamic TCP window size.
func (o ProfileprotocoloptionsHttpPtrOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMaximum
	}).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o ProfileprotocoloptionsHttpPtrOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMinimum
	}).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o ProfileprotocoloptionsHttpPtrOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowSize
	}).(pulumi.IntPtrOutput)
}

// Specify type of TCP window to use for this protocol.
func (o ProfileprotocoloptionsHttpPtrOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.TcpWindowType
	}).(pulumi.StringPtrOutput)
}

// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpPtrOutput) TunnelNonHttp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.TunnelNonHttp
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsHttpPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsHttpPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
func (o ProfileprotocoloptionsHttpPtrOutput) UnknownContentEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.UnknownContentEncoding
	}).(pulumi.StringPtrOutput)
}

// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
func (o ProfileprotocoloptionsHttpPtrOutput) UnknownHttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.UnknownHttpVersion
	}).(pulumi.StringPtrOutput)
}

// Enable/disable verification of DNS for policy matching. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsHttpPtrOutput) VerifyDnsForPolicyMatching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.VerifyDnsForPolicyMatching
	}).(pulumi.StringPtrOutput)
}

type ProfileprotocoloptionsImap struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 143).
	Ports *int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// ProfileprotocoloptionsImapInput is an input type that accepts ProfileprotocoloptionsImapArgs and ProfileprotocoloptionsImapOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsImapInput` via:
//
//	ProfileprotocoloptionsImapArgs{...}
type ProfileprotocoloptionsImapInput interface {
	pulumi.Input

	ToProfileprotocoloptionsImapOutput() ProfileprotocoloptionsImapOutput
	ToProfileprotocoloptionsImapOutputWithContext(context.Context) ProfileprotocoloptionsImapOutput
}

type ProfileprotocoloptionsImapArgs struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 143).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (ProfileprotocoloptionsImapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsImap)(nil)).Elem()
}

func (i ProfileprotocoloptionsImapArgs) ToProfileprotocoloptionsImapOutput() ProfileprotocoloptionsImapOutput {
	return i.ToProfileprotocoloptionsImapOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsImapArgs) ToProfileprotocoloptionsImapOutputWithContext(ctx context.Context) ProfileprotocoloptionsImapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsImapOutput)
}

func (i ProfileprotocoloptionsImapArgs) ToProfileprotocoloptionsImapPtrOutput() ProfileprotocoloptionsImapPtrOutput {
	return i.ToProfileprotocoloptionsImapPtrOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsImapArgs) ToProfileprotocoloptionsImapPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsImapOutput).ToProfileprotocoloptionsImapPtrOutputWithContext(ctx)
}

// ProfileprotocoloptionsImapPtrInput is an input type that accepts ProfileprotocoloptionsImapArgs, ProfileprotocoloptionsImapPtr and ProfileprotocoloptionsImapPtrOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsImapPtrInput` via:
//
//	        ProfileprotocoloptionsImapArgs{...}
//
//	or:
//
//	        nil
type ProfileprotocoloptionsImapPtrInput interface {
	pulumi.Input

	ToProfileprotocoloptionsImapPtrOutput() ProfileprotocoloptionsImapPtrOutput
	ToProfileprotocoloptionsImapPtrOutputWithContext(context.Context) ProfileprotocoloptionsImapPtrOutput
}

type profileprotocoloptionsImapPtrType ProfileprotocoloptionsImapArgs

func ProfileprotocoloptionsImapPtr(v *ProfileprotocoloptionsImapArgs) ProfileprotocoloptionsImapPtrInput {
	return (*profileprotocoloptionsImapPtrType)(v)
}

func (*profileprotocoloptionsImapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsImap)(nil)).Elem()
}

func (i *profileprotocoloptionsImapPtrType) ToProfileprotocoloptionsImapPtrOutput() ProfileprotocoloptionsImapPtrOutput {
	return i.ToProfileprotocoloptionsImapPtrOutputWithContext(context.Background())
}

func (i *profileprotocoloptionsImapPtrType) ToProfileprotocoloptionsImapPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsImapPtrOutput)
}

type ProfileprotocoloptionsImapOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsImapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsImap)(nil)).Elem()
}

func (o ProfileprotocoloptionsImapOutput) ToProfileprotocoloptionsImapOutput() ProfileprotocoloptionsImapOutput {
	return o
}

func (o ProfileprotocoloptionsImapOutput) ToProfileprotocoloptionsImapOutputWithContext(ctx context.Context) ProfileprotocoloptionsImapOutput {
	return o
}

func (o ProfileprotocoloptionsImapOutput) ToProfileprotocoloptionsImapPtrOutput() ProfileprotocoloptionsImapPtrOutput {
	return o.ToProfileprotocoloptionsImapPtrOutputWithContext(context.Background())
}

func (o ProfileprotocoloptionsImapOutput) ToProfileprotocoloptionsImapPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsImapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileprotocoloptionsImap) *ProfileprotocoloptionsImap {
		return &v
	}).(ProfileprotocoloptionsImapPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsImapOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsImap) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
func (o ProfileprotocoloptionsImapOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsImap) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsImapOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsImap) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 143).
func (o ProfileprotocoloptionsImapOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsImap) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsImapOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsImap) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsImapOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsImap) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsImapOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsImap) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsImapOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsImap) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsImapOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsImap) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsImapOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsImap) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsImapPtrOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsImapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsImap)(nil)).Elem()
}

func (o ProfileprotocoloptionsImapPtrOutput) ToProfileprotocoloptionsImapPtrOutput() ProfileprotocoloptionsImapPtrOutput {
	return o
}

func (o ProfileprotocoloptionsImapPtrOutput) ToProfileprotocoloptionsImapPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsImapPtrOutput {
	return o
}

func (o ProfileprotocoloptionsImapPtrOutput) Elem() ProfileprotocoloptionsImapOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsImap) ProfileprotocoloptionsImap {
		if v != nil {
			return *v
		}
		var ret ProfileprotocoloptionsImap
		return ret
	}).(ProfileprotocoloptionsImapOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsImapPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
func (o ProfileprotocoloptionsImapPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsImapPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsImap) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 143).
func (o ProfileprotocoloptionsImapPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsImap) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsImapPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsImapPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsImapPtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsImapPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsImapPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsImap) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsImapPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsImap) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsMailSignature struct {
	// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
	Signature *string `pulumi:"signature"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ProfileprotocoloptionsMailSignatureInput is an input type that accepts ProfileprotocoloptionsMailSignatureArgs and ProfileprotocoloptionsMailSignatureOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsMailSignatureInput` via:
//
//	ProfileprotocoloptionsMailSignatureArgs{...}
type ProfileprotocoloptionsMailSignatureInput interface {
	pulumi.Input

	ToProfileprotocoloptionsMailSignatureOutput() ProfileprotocoloptionsMailSignatureOutput
	ToProfileprotocoloptionsMailSignatureOutputWithContext(context.Context) ProfileprotocoloptionsMailSignatureOutput
}

type ProfileprotocoloptionsMailSignatureArgs struct {
	// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
	Signature pulumi.StringPtrInput `pulumi:"signature"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ProfileprotocoloptionsMailSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (i ProfileprotocoloptionsMailSignatureArgs) ToProfileprotocoloptionsMailSignatureOutput() ProfileprotocoloptionsMailSignatureOutput {
	return i.ToProfileprotocoloptionsMailSignatureOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsMailSignatureArgs) ToProfileprotocoloptionsMailSignatureOutputWithContext(ctx context.Context) ProfileprotocoloptionsMailSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsMailSignatureOutput)
}

func (i ProfileprotocoloptionsMailSignatureArgs) ToProfileprotocoloptionsMailSignaturePtrOutput() ProfileprotocoloptionsMailSignaturePtrOutput {
	return i.ToProfileprotocoloptionsMailSignaturePtrOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsMailSignatureArgs) ToProfileprotocoloptionsMailSignaturePtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsMailSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsMailSignatureOutput).ToProfileprotocoloptionsMailSignaturePtrOutputWithContext(ctx)
}

// ProfileprotocoloptionsMailSignaturePtrInput is an input type that accepts ProfileprotocoloptionsMailSignatureArgs, ProfileprotocoloptionsMailSignaturePtr and ProfileprotocoloptionsMailSignaturePtrOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsMailSignaturePtrInput` via:
//
//	        ProfileprotocoloptionsMailSignatureArgs{...}
//
//	or:
//
//	        nil
type ProfileprotocoloptionsMailSignaturePtrInput interface {
	pulumi.Input

	ToProfileprotocoloptionsMailSignaturePtrOutput() ProfileprotocoloptionsMailSignaturePtrOutput
	ToProfileprotocoloptionsMailSignaturePtrOutputWithContext(context.Context) ProfileprotocoloptionsMailSignaturePtrOutput
}

type profileprotocoloptionsMailSignaturePtrType ProfileprotocoloptionsMailSignatureArgs

func ProfileprotocoloptionsMailSignaturePtr(v *ProfileprotocoloptionsMailSignatureArgs) ProfileprotocoloptionsMailSignaturePtrInput {
	return (*profileprotocoloptionsMailSignaturePtrType)(v)
}

func (*profileprotocoloptionsMailSignaturePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (i *profileprotocoloptionsMailSignaturePtrType) ToProfileprotocoloptionsMailSignaturePtrOutput() ProfileprotocoloptionsMailSignaturePtrOutput {
	return i.ToProfileprotocoloptionsMailSignaturePtrOutputWithContext(context.Background())
}

func (i *profileprotocoloptionsMailSignaturePtrType) ToProfileprotocoloptionsMailSignaturePtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsMailSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsMailSignaturePtrOutput)
}

type ProfileprotocoloptionsMailSignatureOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsMailSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (o ProfileprotocoloptionsMailSignatureOutput) ToProfileprotocoloptionsMailSignatureOutput() ProfileprotocoloptionsMailSignatureOutput {
	return o
}

func (o ProfileprotocoloptionsMailSignatureOutput) ToProfileprotocoloptionsMailSignatureOutputWithContext(ctx context.Context) ProfileprotocoloptionsMailSignatureOutput {
	return o
}

func (o ProfileprotocoloptionsMailSignatureOutput) ToProfileprotocoloptionsMailSignaturePtrOutput() ProfileprotocoloptionsMailSignaturePtrOutput {
	return o.ToProfileprotocoloptionsMailSignaturePtrOutputWithContext(context.Background())
}

func (o ProfileprotocoloptionsMailSignatureOutput) ToProfileprotocoloptionsMailSignaturePtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsMailSignaturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileprotocoloptionsMailSignature) *ProfileprotocoloptionsMailSignature {
		return &v
	}).(ProfileprotocoloptionsMailSignaturePtrOutput)
}

// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
func (o ProfileprotocoloptionsMailSignatureOutput) Signature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsMailSignature) *string { return v.Signature }).(pulumi.StringPtrOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate. Valid values: `disable`, `enable`.
func (o ProfileprotocoloptionsMailSignatureOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsMailSignature) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ProfileprotocoloptionsMailSignaturePtrOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsMailSignaturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (o ProfileprotocoloptionsMailSignaturePtrOutput) ToProfileprotocoloptionsMailSignaturePtrOutput() ProfileprotocoloptionsMailSignaturePtrOutput {
	return o
}

func (o ProfileprotocoloptionsMailSignaturePtrOutput) ToProfileprotocoloptionsMailSignaturePtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsMailSignaturePtrOutput {
	return o
}

func (o ProfileprotocoloptionsMailSignaturePtrOutput) Elem() ProfileprotocoloptionsMailSignatureOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsMailSignature) ProfileprotocoloptionsMailSignature {
		if v != nil {
			return *v
		}
		var ret ProfileprotocoloptionsMailSignature
		return ret
	}).(ProfileprotocoloptionsMailSignatureOutput)
}

// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
func (o ProfileprotocoloptionsMailSignaturePtrOutput) Signature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsMailSignature) *string {
		if v == nil {
			return nil
		}
		return v.Signature
	}).(pulumi.StringPtrOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate. Valid values: `disable`, `enable`.
func (o ProfileprotocoloptionsMailSignaturePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsMailSignature) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ProfileprotocoloptionsMapi struct {
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 110).
	Ports *int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// ProfileprotocoloptionsMapiInput is an input type that accepts ProfileprotocoloptionsMapiArgs and ProfileprotocoloptionsMapiOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsMapiInput` via:
//
//	ProfileprotocoloptionsMapiArgs{...}
type ProfileprotocoloptionsMapiInput interface {
	pulumi.Input

	ToProfileprotocoloptionsMapiOutput() ProfileprotocoloptionsMapiOutput
	ToProfileprotocoloptionsMapiOutputWithContext(context.Context) ProfileprotocoloptionsMapiOutput
}

type ProfileprotocoloptionsMapiArgs struct {
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 110).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (ProfileprotocoloptionsMapiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsMapi)(nil)).Elem()
}

func (i ProfileprotocoloptionsMapiArgs) ToProfileprotocoloptionsMapiOutput() ProfileprotocoloptionsMapiOutput {
	return i.ToProfileprotocoloptionsMapiOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsMapiArgs) ToProfileprotocoloptionsMapiOutputWithContext(ctx context.Context) ProfileprotocoloptionsMapiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsMapiOutput)
}

func (i ProfileprotocoloptionsMapiArgs) ToProfileprotocoloptionsMapiPtrOutput() ProfileprotocoloptionsMapiPtrOutput {
	return i.ToProfileprotocoloptionsMapiPtrOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsMapiArgs) ToProfileprotocoloptionsMapiPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsMapiOutput).ToProfileprotocoloptionsMapiPtrOutputWithContext(ctx)
}

// ProfileprotocoloptionsMapiPtrInput is an input type that accepts ProfileprotocoloptionsMapiArgs, ProfileprotocoloptionsMapiPtr and ProfileprotocoloptionsMapiPtrOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsMapiPtrInput` via:
//
//	        ProfileprotocoloptionsMapiArgs{...}
//
//	or:
//
//	        nil
type ProfileprotocoloptionsMapiPtrInput interface {
	pulumi.Input

	ToProfileprotocoloptionsMapiPtrOutput() ProfileprotocoloptionsMapiPtrOutput
	ToProfileprotocoloptionsMapiPtrOutputWithContext(context.Context) ProfileprotocoloptionsMapiPtrOutput
}

type profileprotocoloptionsMapiPtrType ProfileprotocoloptionsMapiArgs

func ProfileprotocoloptionsMapiPtr(v *ProfileprotocoloptionsMapiArgs) ProfileprotocoloptionsMapiPtrInput {
	return (*profileprotocoloptionsMapiPtrType)(v)
}

func (*profileprotocoloptionsMapiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsMapi)(nil)).Elem()
}

func (i *profileprotocoloptionsMapiPtrType) ToProfileprotocoloptionsMapiPtrOutput() ProfileprotocoloptionsMapiPtrOutput {
	return i.ToProfileprotocoloptionsMapiPtrOutputWithContext(context.Background())
}

func (i *profileprotocoloptionsMapiPtrType) ToProfileprotocoloptionsMapiPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsMapiPtrOutput)
}

type ProfileprotocoloptionsMapiOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsMapiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsMapi)(nil)).Elem()
}

func (o ProfileprotocoloptionsMapiOutput) ToProfileprotocoloptionsMapiOutput() ProfileprotocoloptionsMapiOutput {
	return o
}

func (o ProfileprotocoloptionsMapiOutput) ToProfileprotocoloptionsMapiOutputWithContext(ctx context.Context) ProfileprotocoloptionsMapiOutput {
	return o
}

func (o ProfileprotocoloptionsMapiOutput) ToProfileprotocoloptionsMapiPtrOutput() ProfileprotocoloptionsMapiPtrOutput {
	return o.ToProfileprotocoloptionsMapiPtrOutputWithContext(context.Background())
}

func (o ProfileprotocoloptionsMapiOutput) ToProfileprotocoloptionsMapiPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsMapiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileprotocoloptionsMapi) *ProfileprotocoloptionsMapi {
		return &v
	}).(ProfileprotocoloptionsMapiPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
func (o ProfileprotocoloptionsMapiOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsMapi) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsMapiOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsMapi) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 110).
func (o ProfileprotocoloptionsMapiOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsMapi) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsMapiOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsMapi) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsMapiOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsMapi) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsMapiOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsMapi) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsMapiOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsMapi) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsMapiPtrOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsMapiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsMapi)(nil)).Elem()
}

func (o ProfileprotocoloptionsMapiPtrOutput) ToProfileprotocoloptionsMapiPtrOutput() ProfileprotocoloptionsMapiPtrOutput {
	return o
}

func (o ProfileprotocoloptionsMapiPtrOutput) ToProfileprotocoloptionsMapiPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsMapiPtrOutput {
	return o
}

func (o ProfileprotocoloptionsMapiPtrOutput) Elem() ProfileprotocoloptionsMapiOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsMapi) ProfileprotocoloptionsMapi {
		if v != nil {
			return *v
		}
		var ret ProfileprotocoloptionsMapi
		return ret
	}).(ProfileprotocoloptionsMapiOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
func (o ProfileprotocoloptionsMapiPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsMapi) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsMapiPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsMapi) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 110).
func (o ProfileprotocoloptionsMapiPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsMapi) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsMapiPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsMapi) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsMapiPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsMapi) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsMapiPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsMapi) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsMapiPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsMapi) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsNntp struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `oversize`, `splice`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 119).
	Ports *int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// ProfileprotocoloptionsNntpInput is an input type that accepts ProfileprotocoloptionsNntpArgs and ProfileprotocoloptionsNntpOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsNntpInput` via:
//
//	ProfileprotocoloptionsNntpArgs{...}
type ProfileprotocoloptionsNntpInput interface {
	pulumi.Input

	ToProfileprotocoloptionsNntpOutput() ProfileprotocoloptionsNntpOutput
	ToProfileprotocoloptionsNntpOutputWithContext(context.Context) ProfileprotocoloptionsNntpOutput
}

type ProfileprotocoloptionsNntpArgs struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `oversize`, `splice`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 119).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (ProfileprotocoloptionsNntpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsNntp)(nil)).Elem()
}

func (i ProfileprotocoloptionsNntpArgs) ToProfileprotocoloptionsNntpOutput() ProfileprotocoloptionsNntpOutput {
	return i.ToProfileprotocoloptionsNntpOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsNntpArgs) ToProfileprotocoloptionsNntpOutputWithContext(ctx context.Context) ProfileprotocoloptionsNntpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsNntpOutput)
}

func (i ProfileprotocoloptionsNntpArgs) ToProfileprotocoloptionsNntpPtrOutput() ProfileprotocoloptionsNntpPtrOutput {
	return i.ToProfileprotocoloptionsNntpPtrOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsNntpArgs) ToProfileprotocoloptionsNntpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsNntpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsNntpOutput).ToProfileprotocoloptionsNntpPtrOutputWithContext(ctx)
}

// ProfileprotocoloptionsNntpPtrInput is an input type that accepts ProfileprotocoloptionsNntpArgs, ProfileprotocoloptionsNntpPtr and ProfileprotocoloptionsNntpPtrOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsNntpPtrInput` via:
//
//	        ProfileprotocoloptionsNntpArgs{...}
//
//	or:
//
//	        nil
type ProfileprotocoloptionsNntpPtrInput interface {
	pulumi.Input

	ToProfileprotocoloptionsNntpPtrOutput() ProfileprotocoloptionsNntpPtrOutput
	ToProfileprotocoloptionsNntpPtrOutputWithContext(context.Context) ProfileprotocoloptionsNntpPtrOutput
}

type profileprotocoloptionsNntpPtrType ProfileprotocoloptionsNntpArgs

func ProfileprotocoloptionsNntpPtr(v *ProfileprotocoloptionsNntpArgs) ProfileprotocoloptionsNntpPtrInput {
	return (*profileprotocoloptionsNntpPtrType)(v)
}

func (*profileprotocoloptionsNntpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsNntp)(nil)).Elem()
}

func (i *profileprotocoloptionsNntpPtrType) ToProfileprotocoloptionsNntpPtrOutput() ProfileprotocoloptionsNntpPtrOutput {
	return i.ToProfileprotocoloptionsNntpPtrOutputWithContext(context.Background())
}

func (i *profileprotocoloptionsNntpPtrType) ToProfileprotocoloptionsNntpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsNntpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsNntpPtrOutput)
}

type ProfileprotocoloptionsNntpOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsNntpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsNntp)(nil)).Elem()
}

func (o ProfileprotocoloptionsNntpOutput) ToProfileprotocoloptionsNntpOutput() ProfileprotocoloptionsNntpOutput {
	return o
}

func (o ProfileprotocoloptionsNntpOutput) ToProfileprotocoloptionsNntpOutputWithContext(ctx context.Context) ProfileprotocoloptionsNntpOutput {
	return o
}

func (o ProfileprotocoloptionsNntpOutput) ToProfileprotocoloptionsNntpPtrOutput() ProfileprotocoloptionsNntpPtrOutput {
	return o.ToProfileprotocoloptionsNntpPtrOutputWithContext(context.Background())
}

func (o ProfileprotocoloptionsNntpOutput) ToProfileprotocoloptionsNntpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsNntpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileprotocoloptionsNntp) *ProfileprotocoloptionsNntp {
		return &v
	}).(ProfileprotocoloptionsNntpPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsNntpOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsNntp) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`, `splice`.
func (o ProfileprotocoloptionsNntpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsNntp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsNntpOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsNntp) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 119).
func (o ProfileprotocoloptionsNntpOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsNntp) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsNntpOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsNntp) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsNntpOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsNntp) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsNntpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsNntp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsNntpOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsNntp) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsNntpOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsNntp) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsNntpPtrOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsNntpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsNntp)(nil)).Elem()
}

func (o ProfileprotocoloptionsNntpPtrOutput) ToProfileprotocoloptionsNntpPtrOutput() ProfileprotocoloptionsNntpPtrOutput {
	return o
}

func (o ProfileprotocoloptionsNntpPtrOutput) ToProfileprotocoloptionsNntpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsNntpPtrOutput {
	return o
}

func (o ProfileprotocoloptionsNntpPtrOutput) Elem() ProfileprotocoloptionsNntpOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsNntp) ProfileprotocoloptionsNntp {
		if v != nil {
			return *v
		}
		var ret ProfileprotocoloptionsNntp
		return ret
	}).(ProfileprotocoloptionsNntpOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsNntpPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsNntp) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`, `splice`.
func (o ProfileprotocoloptionsNntpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsNntp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsNntpPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsNntp) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 119).
func (o ProfileprotocoloptionsNntpPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsNntp) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsNntpPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsNntp) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsNntpPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsNntp) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsNntpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsNntp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsNntpPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsNntp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsNntpPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsNntp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsPop3 struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `oversize`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports *int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// ProfileprotocoloptionsPop3Input is an input type that accepts ProfileprotocoloptionsPop3Args and ProfileprotocoloptionsPop3Output values.
// You can construct a concrete instance of `ProfileprotocoloptionsPop3Input` via:
//
//	ProfileprotocoloptionsPop3Args{...}
type ProfileprotocoloptionsPop3Input interface {
	pulumi.Input

	ToProfileprotocoloptionsPop3Output() ProfileprotocoloptionsPop3Output
	ToProfileprotocoloptionsPop3OutputWithContext(context.Context) ProfileprotocoloptionsPop3Output
}

type ProfileprotocoloptionsPop3Args struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `oversize`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (ProfileprotocoloptionsPop3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsPop3)(nil)).Elem()
}

func (i ProfileprotocoloptionsPop3Args) ToProfileprotocoloptionsPop3Output() ProfileprotocoloptionsPop3Output {
	return i.ToProfileprotocoloptionsPop3OutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsPop3Args) ToProfileprotocoloptionsPop3OutputWithContext(ctx context.Context) ProfileprotocoloptionsPop3Output {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsPop3Output)
}

func (i ProfileprotocoloptionsPop3Args) ToProfileprotocoloptionsPop3PtrOutput() ProfileprotocoloptionsPop3PtrOutput {
	return i.ToProfileprotocoloptionsPop3PtrOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsPop3Args) ToProfileprotocoloptionsPop3PtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsPop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsPop3Output).ToProfileprotocoloptionsPop3PtrOutputWithContext(ctx)
}

// ProfileprotocoloptionsPop3PtrInput is an input type that accepts ProfileprotocoloptionsPop3Args, ProfileprotocoloptionsPop3Ptr and ProfileprotocoloptionsPop3PtrOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsPop3PtrInput` via:
//
//	        ProfileprotocoloptionsPop3Args{...}
//
//	or:
//
//	        nil
type ProfileprotocoloptionsPop3PtrInput interface {
	pulumi.Input

	ToProfileprotocoloptionsPop3PtrOutput() ProfileprotocoloptionsPop3PtrOutput
	ToProfileprotocoloptionsPop3PtrOutputWithContext(context.Context) ProfileprotocoloptionsPop3PtrOutput
}

type profileprotocoloptionsPop3PtrType ProfileprotocoloptionsPop3Args

func ProfileprotocoloptionsPop3Ptr(v *ProfileprotocoloptionsPop3Args) ProfileprotocoloptionsPop3PtrInput {
	return (*profileprotocoloptionsPop3PtrType)(v)
}

func (*profileprotocoloptionsPop3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsPop3)(nil)).Elem()
}

func (i *profileprotocoloptionsPop3PtrType) ToProfileprotocoloptionsPop3PtrOutput() ProfileprotocoloptionsPop3PtrOutput {
	return i.ToProfileprotocoloptionsPop3PtrOutputWithContext(context.Background())
}

func (i *profileprotocoloptionsPop3PtrType) ToProfileprotocoloptionsPop3PtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsPop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsPop3PtrOutput)
}

type ProfileprotocoloptionsPop3Output struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsPop3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsPop3)(nil)).Elem()
}

func (o ProfileprotocoloptionsPop3Output) ToProfileprotocoloptionsPop3Output() ProfileprotocoloptionsPop3Output {
	return o
}

func (o ProfileprotocoloptionsPop3Output) ToProfileprotocoloptionsPop3OutputWithContext(ctx context.Context) ProfileprotocoloptionsPop3Output {
	return o
}

func (o ProfileprotocoloptionsPop3Output) ToProfileprotocoloptionsPop3PtrOutput() ProfileprotocoloptionsPop3PtrOutput {
	return o.ToProfileprotocoloptionsPop3PtrOutputWithContext(context.Background())
}

func (o ProfileprotocoloptionsPop3Output) ToProfileprotocoloptionsPop3PtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsPop3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileprotocoloptionsPop3) *ProfileprotocoloptionsPop3 {
		return &v
	}).(ProfileprotocoloptionsPop3PtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsPop3Output) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsPop3) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`.
func (o ProfileprotocoloptionsPop3Output) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsPop3) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsPop3Output) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsPop3) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o ProfileprotocoloptionsPop3Output) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsPop3) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsPop3Output) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsPop3) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsPop3Output) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsPop3) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsPop3Output) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsPop3) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsPop3Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsPop3) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsPop3Output) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsPop3) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsPop3Output) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsPop3) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsPop3PtrOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsPop3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsPop3)(nil)).Elem()
}

func (o ProfileprotocoloptionsPop3PtrOutput) ToProfileprotocoloptionsPop3PtrOutput() ProfileprotocoloptionsPop3PtrOutput {
	return o
}

func (o ProfileprotocoloptionsPop3PtrOutput) ToProfileprotocoloptionsPop3PtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsPop3PtrOutput {
	return o
}

func (o ProfileprotocoloptionsPop3PtrOutput) Elem() ProfileprotocoloptionsPop3Output {
	return o.ApplyT(func(v *ProfileprotocoloptionsPop3) ProfileprotocoloptionsPop3 {
		if v != nil {
			return *v
		}
		var ret ProfileprotocoloptionsPop3
		return ret
	}).(ProfileprotocoloptionsPop3Output)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsPop3PtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`.
func (o ProfileprotocoloptionsPop3PtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsPop3PtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsPop3) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o ProfileprotocoloptionsPop3PtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsPop3) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsPop3PtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsPop3PtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsPop3PtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsPop3PtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsPop3PtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsPop3) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsPop3PtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsPop3) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsSmtp struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`, `splice`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 25).
	Ports *int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// Enable/disable SMTP server busy when server not available. Valid values: `enable`, `disable`.
	ServerBusy *string `pulumi:"serverBusy"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// ProfileprotocoloptionsSmtpInput is an input type that accepts ProfileprotocoloptionsSmtpArgs and ProfileprotocoloptionsSmtpOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsSmtpInput` via:
//
//	ProfileprotocoloptionsSmtpArgs{...}
type ProfileprotocoloptionsSmtpInput interface {
	pulumi.Input

	ToProfileprotocoloptionsSmtpOutput() ProfileprotocoloptionsSmtpOutput
	ToProfileprotocoloptionsSmtpOutputWithContext(context.Context) ProfileprotocoloptionsSmtpOutput
}

type ProfileprotocoloptionsSmtpArgs struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`, `splice`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 25).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// Enable/disable SMTP server busy when server not available. Valid values: `enable`, `disable`.
	ServerBusy pulumi.StringPtrInput `pulumi:"serverBusy"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (ProfileprotocoloptionsSmtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (i ProfileprotocoloptionsSmtpArgs) ToProfileprotocoloptionsSmtpOutput() ProfileprotocoloptionsSmtpOutput {
	return i.ToProfileprotocoloptionsSmtpOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsSmtpArgs) ToProfileprotocoloptionsSmtpOutputWithContext(ctx context.Context) ProfileprotocoloptionsSmtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsSmtpOutput)
}

func (i ProfileprotocoloptionsSmtpArgs) ToProfileprotocoloptionsSmtpPtrOutput() ProfileprotocoloptionsSmtpPtrOutput {
	return i.ToProfileprotocoloptionsSmtpPtrOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsSmtpArgs) ToProfileprotocoloptionsSmtpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsSmtpOutput).ToProfileprotocoloptionsSmtpPtrOutputWithContext(ctx)
}

// ProfileprotocoloptionsSmtpPtrInput is an input type that accepts ProfileprotocoloptionsSmtpArgs, ProfileprotocoloptionsSmtpPtr and ProfileprotocoloptionsSmtpPtrOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsSmtpPtrInput` via:
//
//	        ProfileprotocoloptionsSmtpArgs{...}
//
//	or:
//
//	        nil
type ProfileprotocoloptionsSmtpPtrInput interface {
	pulumi.Input

	ToProfileprotocoloptionsSmtpPtrOutput() ProfileprotocoloptionsSmtpPtrOutput
	ToProfileprotocoloptionsSmtpPtrOutputWithContext(context.Context) ProfileprotocoloptionsSmtpPtrOutput
}

type profileprotocoloptionsSmtpPtrType ProfileprotocoloptionsSmtpArgs

func ProfileprotocoloptionsSmtpPtr(v *ProfileprotocoloptionsSmtpArgs) ProfileprotocoloptionsSmtpPtrInput {
	return (*profileprotocoloptionsSmtpPtrType)(v)
}

func (*profileprotocoloptionsSmtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (i *profileprotocoloptionsSmtpPtrType) ToProfileprotocoloptionsSmtpPtrOutput() ProfileprotocoloptionsSmtpPtrOutput {
	return i.ToProfileprotocoloptionsSmtpPtrOutputWithContext(context.Background())
}

func (i *profileprotocoloptionsSmtpPtrType) ToProfileprotocoloptionsSmtpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsSmtpPtrOutput)
}

type ProfileprotocoloptionsSmtpOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsSmtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (o ProfileprotocoloptionsSmtpOutput) ToProfileprotocoloptionsSmtpOutput() ProfileprotocoloptionsSmtpOutput {
	return o
}

func (o ProfileprotocoloptionsSmtpOutput) ToProfileprotocoloptionsSmtpOutputWithContext(ctx context.Context) ProfileprotocoloptionsSmtpOutput {
	return o
}

func (o ProfileprotocoloptionsSmtpOutput) ToProfileprotocoloptionsSmtpPtrOutput() ProfileprotocoloptionsSmtpPtrOutput {
	return o.ToProfileprotocoloptionsSmtpPtrOutputWithContext(context.Background())
}

func (o ProfileprotocoloptionsSmtpOutput) ToProfileprotocoloptionsSmtpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsSmtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileprotocoloptionsSmtp) *ProfileprotocoloptionsSmtp {
		return &v
	}).(ProfileprotocoloptionsSmtpPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSmtpOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSmtp) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`, `splice`.
func (o ProfileprotocoloptionsSmtpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSmtp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsSmtpOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSmtp) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 25).
func (o ProfileprotocoloptionsSmtpOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSmtp) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSmtpOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSmtp) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSmtpOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSmtp) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP server busy when server not available. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSmtpOutput) ServerBusy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSmtp) *string { return v.ServerBusy }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsSmtpOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSmtp) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSmtpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSmtp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsSmtpOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSmtp) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsSmtpOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSmtp) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsSmtpPtrOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsSmtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (o ProfileprotocoloptionsSmtpPtrOutput) ToProfileprotocoloptionsSmtpPtrOutput() ProfileprotocoloptionsSmtpPtrOutput {
	return o
}

func (o ProfileprotocoloptionsSmtpPtrOutput) ToProfileprotocoloptionsSmtpPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsSmtpPtrOutput {
	return o
}

func (o ProfileprotocoloptionsSmtpPtrOutput) Elem() ProfileprotocoloptionsSmtpOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) ProfileprotocoloptionsSmtp {
		if v != nil {
			return *v
		}
		var ret ProfileprotocoloptionsSmtp
		return ret
	}).(ProfileprotocoloptionsSmtpOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSmtpPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`, `splice`.
func (o ProfileprotocoloptionsSmtpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsSmtpPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 25).
func (o ProfileprotocoloptionsSmtpPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSmtpPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSmtpPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP server busy when server not available. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSmtpPtrOutput) ServerBusy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ServerBusy
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsSmtpPtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSmtpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsSmtpPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsSmtpPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSmtp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsSsh struct {
	// Number of bytes to send in each transmission for client comforting (bytes).
	ComfortAmount *int `pulumi:"comfortAmount"`
	// Interval between successive transmissions of data for client comforting (seconds).
	ComfortInterval *int `pulumi:"comfortInterval"`
	// One or more options that can be applied to the session. Valid values: `oversize`, `clientcomfort`, `servercomfort`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
	StreamBasedUncompressedLimit *int `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum *int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum *int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize *int `pulumi:"tcpWindowSize"`
	// TCP window type to use for this protocol.
	TcpWindowType *string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// ProfileprotocoloptionsSshInput is an input type that accepts ProfileprotocoloptionsSshArgs and ProfileprotocoloptionsSshOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsSshInput` via:
//
//	ProfileprotocoloptionsSshArgs{...}
type ProfileprotocoloptionsSshInput interface {
	pulumi.Input

	ToProfileprotocoloptionsSshOutput() ProfileprotocoloptionsSshOutput
	ToProfileprotocoloptionsSshOutputWithContext(context.Context) ProfileprotocoloptionsSshOutput
}

type ProfileprotocoloptionsSshArgs struct {
	// Number of bytes to send in each transmission for client comforting (bytes).
	ComfortAmount pulumi.IntPtrInput `pulumi:"comfortAmount"`
	// Interval between successive transmissions of data for client comforting (seconds).
	ComfortInterval pulumi.IntPtrInput `pulumi:"comfortInterval"`
	// One or more options that can be applied to the session. Valid values: `oversize`, `clientcomfort`, `servercomfort`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (MB).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
	StreamBasedUncompressedLimit pulumi.IntPtrInput `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum pulumi.IntPtrInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum pulumi.IntPtrInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize pulumi.IntPtrInput `pulumi:"tcpWindowSize"`
	// TCP window type to use for this protocol.
	TcpWindowType pulumi.StringPtrInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (MB).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (ProfileprotocoloptionsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsSsh)(nil)).Elem()
}

func (i ProfileprotocoloptionsSshArgs) ToProfileprotocoloptionsSshOutput() ProfileprotocoloptionsSshOutput {
	return i.ToProfileprotocoloptionsSshOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsSshArgs) ToProfileprotocoloptionsSshOutputWithContext(ctx context.Context) ProfileprotocoloptionsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsSshOutput)
}

func (i ProfileprotocoloptionsSshArgs) ToProfileprotocoloptionsSshPtrOutput() ProfileprotocoloptionsSshPtrOutput {
	return i.ToProfileprotocoloptionsSshPtrOutputWithContext(context.Background())
}

func (i ProfileprotocoloptionsSshArgs) ToProfileprotocoloptionsSshPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsSshOutput).ToProfileprotocoloptionsSshPtrOutputWithContext(ctx)
}

// ProfileprotocoloptionsSshPtrInput is an input type that accepts ProfileprotocoloptionsSshArgs, ProfileprotocoloptionsSshPtr and ProfileprotocoloptionsSshPtrOutput values.
// You can construct a concrete instance of `ProfileprotocoloptionsSshPtrInput` via:
//
//	        ProfileprotocoloptionsSshArgs{...}
//
//	or:
//
//	        nil
type ProfileprotocoloptionsSshPtrInput interface {
	pulumi.Input

	ToProfileprotocoloptionsSshPtrOutput() ProfileprotocoloptionsSshPtrOutput
	ToProfileprotocoloptionsSshPtrOutputWithContext(context.Context) ProfileprotocoloptionsSshPtrOutput
}

type profileprotocoloptionsSshPtrType ProfileprotocoloptionsSshArgs

func ProfileprotocoloptionsSshPtr(v *ProfileprotocoloptionsSshArgs) ProfileprotocoloptionsSshPtrInput {
	return (*profileprotocoloptionsSshPtrType)(v)
}

func (*profileprotocoloptionsSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsSsh)(nil)).Elem()
}

func (i *profileprotocoloptionsSshPtrType) ToProfileprotocoloptionsSshPtrOutput() ProfileprotocoloptionsSshPtrOutput {
	return i.ToProfileprotocoloptionsSshPtrOutputWithContext(context.Background())
}

func (i *profileprotocoloptionsSshPtrType) ToProfileprotocoloptionsSshPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileprotocoloptionsSshPtrOutput)
}

type ProfileprotocoloptionsSshOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileprotocoloptionsSsh)(nil)).Elem()
}

func (o ProfileprotocoloptionsSshOutput) ToProfileprotocoloptionsSshOutput() ProfileprotocoloptionsSshOutput {
	return o
}

func (o ProfileprotocoloptionsSshOutput) ToProfileprotocoloptionsSshOutputWithContext(ctx context.Context) ProfileprotocoloptionsSshOutput {
	return o
}

func (o ProfileprotocoloptionsSshOutput) ToProfileprotocoloptionsSshPtrOutput() ProfileprotocoloptionsSshPtrOutput {
	return o.ToProfileprotocoloptionsSshPtrOutputWithContext(context.Background())
}

func (o ProfileprotocoloptionsSshOutput) ToProfileprotocoloptionsSshPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileprotocoloptionsSsh) *ProfileprotocoloptionsSsh {
		return &v
	}).(ProfileprotocoloptionsSshPtrOutput)
}

// Number of bytes to send in each transmission for client comforting (bytes).
func (o ProfileprotocoloptionsSshOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *int { return v.ComfortAmount }).(pulumi.IntPtrOutput)
}

// Interval between successive transmissions of data for client comforting (seconds).
func (o ProfileprotocoloptionsSshOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *int { return v.ComfortInterval }).(pulumi.IntPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`, `clientcomfort`, `servercomfort`.
func (o ProfileprotocoloptionsSshOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsSshOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSshOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsSshOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
func (o ProfileprotocoloptionsSshOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *int { return v.StreamBasedUncompressedLimit }).(pulumi.IntPtrOutput)
}

// Maximum dynamic TCP window size.
func (o ProfileprotocoloptionsSshOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *int { return v.TcpWindowMaximum }).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o ProfileprotocoloptionsSshOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *int { return v.TcpWindowMinimum }).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o ProfileprotocoloptionsSshOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *int { return v.TcpWindowSize }).(pulumi.IntPtrOutput)
}

// TCP window type to use for this protocol.
func (o ProfileprotocoloptionsSshOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *string { return v.TcpWindowType }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsSshOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsSshOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileprotocoloptionsSsh) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type ProfileprotocoloptionsSshPtrOutput struct{ *pulumi.OutputState }

func (ProfileprotocoloptionsSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileprotocoloptionsSsh)(nil)).Elem()
}

func (o ProfileprotocoloptionsSshPtrOutput) ToProfileprotocoloptionsSshPtrOutput() ProfileprotocoloptionsSshPtrOutput {
	return o
}

func (o ProfileprotocoloptionsSshPtrOutput) ToProfileprotocoloptionsSshPtrOutputWithContext(ctx context.Context) ProfileprotocoloptionsSshPtrOutput {
	return o
}

func (o ProfileprotocoloptionsSshPtrOutput) Elem() ProfileprotocoloptionsSshOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) ProfileprotocoloptionsSsh {
		if v != nil {
			return *v
		}
		var ret ProfileprotocoloptionsSsh
		return ret
	}).(ProfileprotocoloptionsSshOutput)
}

// Number of bytes to send in each transmission for client comforting (bytes).
func (o ProfileprotocoloptionsSshPtrOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.ComfortAmount
	}).(pulumi.IntPtrOutput)
}

// Interval between successive transmissions of data for client comforting (seconds).
func (o ProfileprotocoloptionsSshPtrOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.ComfortInterval
	}).(pulumi.IntPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`, `clientcomfort`, `servercomfort`.
func (o ProfileprotocoloptionsSshPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (MB).
func (o ProfileprotocoloptionsSshPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o ProfileprotocoloptionsSshPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o ProfileprotocoloptionsSshPtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned in megabytes. Stream-based uncompression used only under certain conditions (unlimited = 0, default = 0).
func (o ProfileprotocoloptionsSshPtrOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.StreamBasedUncompressedLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum dynamic TCP window size.
func (o ProfileprotocoloptionsSshPtrOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMaximum
	}).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o ProfileprotocoloptionsSshPtrOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMinimum
	}).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o ProfileprotocoloptionsSshPtrOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowSize
	}).(pulumi.IntPtrOutput)
}

// TCP window type to use for this protocol.
func (o ProfileprotocoloptionsSshPtrOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *string {
		if v == nil {
			return nil
		}
		return v.TcpWindowType
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o ProfileprotocoloptionsSshPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (MB).
func (o ProfileprotocoloptionsSshPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type ProxyaddressApplication struct {
	// SaaS applicaton name.
	Name *string `pulumi:"name"`
}

// ProxyaddressApplicationInput is an input type that accepts ProxyaddressApplicationArgs and ProxyaddressApplicationOutput values.
// You can construct a concrete instance of `ProxyaddressApplicationInput` via:
//
//	ProxyaddressApplicationArgs{...}
type ProxyaddressApplicationInput interface {
	pulumi.Input

	ToProxyaddressApplicationOutput() ProxyaddressApplicationOutput
	ToProxyaddressApplicationOutputWithContext(context.Context) ProxyaddressApplicationOutput
}

type ProxyaddressApplicationArgs struct {
	// SaaS applicaton name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxyaddressApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddressApplication)(nil)).Elem()
}

func (i ProxyaddressApplicationArgs) ToProxyaddressApplicationOutput() ProxyaddressApplicationOutput {
	return i.ToProxyaddressApplicationOutputWithContext(context.Background())
}

func (i ProxyaddressApplicationArgs) ToProxyaddressApplicationOutputWithContext(ctx context.Context) ProxyaddressApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddressApplicationOutput)
}

// ProxyaddressApplicationArrayInput is an input type that accepts ProxyaddressApplicationArray and ProxyaddressApplicationArrayOutput values.
// You can construct a concrete instance of `ProxyaddressApplicationArrayInput` via:
//
//	ProxyaddressApplicationArray{ ProxyaddressApplicationArgs{...} }
type ProxyaddressApplicationArrayInput interface {
	pulumi.Input

	ToProxyaddressApplicationArrayOutput() ProxyaddressApplicationArrayOutput
	ToProxyaddressApplicationArrayOutputWithContext(context.Context) ProxyaddressApplicationArrayOutput
}

type ProxyaddressApplicationArray []ProxyaddressApplicationInput

func (ProxyaddressApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddressApplication)(nil)).Elem()
}

func (i ProxyaddressApplicationArray) ToProxyaddressApplicationArrayOutput() ProxyaddressApplicationArrayOutput {
	return i.ToProxyaddressApplicationArrayOutputWithContext(context.Background())
}

func (i ProxyaddressApplicationArray) ToProxyaddressApplicationArrayOutputWithContext(ctx context.Context) ProxyaddressApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddressApplicationArrayOutput)
}

type ProxyaddressApplicationOutput struct{ *pulumi.OutputState }

func (ProxyaddressApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddressApplication)(nil)).Elem()
}

func (o ProxyaddressApplicationOutput) ToProxyaddressApplicationOutput() ProxyaddressApplicationOutput {
	return o
}

func (o ProxyaddressApplicationOutput) ToProxyaddressApplicationOutputWithContext(ctx context.Context) ProxyaddressApplicationOutput {
	return o
}

// SaaS applicaton name.
func (o ProxyaddressApplicationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyaddressApplication) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxyaddressApplicationArrayOutput struct{ *pulumi.OutputState }

func (ProxyaddressApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddressApplication)(nil)).Elem()
}

func (o ProxyaddressApplicationArrayOutput) ToProxyaddressApplicationArrayOutput() ProxyaddressApplicationArrayOutput {
	return o
}

func (o ProxyaddressApplicationArrayOutput) ToProxyaddressApplicationArrayOutputWithContext(ctx context.Context) ProxyaddressApplicationArrayOutput {
	return o
}

func (o ProxyaddressApplicationArrayOutput) Index(i pulumi.IntInput) ProxyaddressApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxyaddressApplication {
		return vs[0].([]ProxyaddressApplication)[vs[1].(int)]
	}).(ProxyaddressApplicationOutput)
}

type ProxyaddressCategory struct {
	// Fortiguard category id.
	Id *int `pulumi:"id"`
}

// ProxyaddressCategoryInput is an input type that accepts ProxyaddressCategoryArgs and ProxyaddressCategoryOutput values.
// You can construct a concrete instance of `ProxyaddressCategoryInput` via:
//
//	ProxyaddressCategoryArgs{...}
type ProxyaddressCategoryInput interface {
	pulumi.Input

	ToProxyaddressCategoryOutput() ProxyaddressCategoryOutput
	ToProxyaddressCategoryOutputWithContext(context.Context) ProxyaddressCategoryOutput
}

type ProxyaddressCategoryArgs struct {
	// Fortiguard category id.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ProxyaddressCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddressCategory)(nil)).Elem()
}

func (i ProxyaddressCategoryArgs) ToProxyaddressCategoryOutput() ProxyaddressCategoryOutput {
	return i.ToProxyaddressCategoryOutputWithContext(context.Background())
}

func (i ProxyaddressCategoryArgs) ToProxyaddressCategoryOutputWithContext(ctx context.Context) ProxyaddressCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddressCategoryOutput)
}

// ProxyaddressCategoryArrayInput is an input type that accepts ProxyaddressCategoryArray and ProxyaddressCategoryArrayOutput values.
// You can construct a concrete instance of `ProxyaddressCategoryArrayInput` via:
//
//	ProxyaddressCategoryArray{ ProxyaddressCategoryArgs{...} }
type ProxyaddressCategoryArrayInput interface {
	pulumi.Input

	ToProxyaddressCategoryArrayOutput() ProxyaddressCategoryArrayOutput
	ToProxyaddressCategoryArrayOutputWithContext(context.Context) ProxyaddressCategoryArrayOutput
}

type ProxyaddressCategoryArray []ProxyaddressCategoryInput

func (ProxyaddressCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddressCategory)(nil)).Elem()
}

func (i ProxyaddressCategoryArray) ToProxyaddressCategoryArrayOutput() ProxyaddressCategoryArrayOutput {
	return i.ToProxyaddressCategoryArrayOutputWithContext(context.Background())
}

func (i ProxyaddressCategoryArray) ToProxyaddressCategoryArrayOutputWithContext(ctx context.Context) ProxyaddressCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddressCategoryArrayOutput)
}

type ProxyaddressCategoryOutput struct{ *pulumi.OutputState }

func (ProxyaddressCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddressCategory)(nil)).Elem()
}

func (o ProxyaddressCategoryOutput) ToProxyaddressCategoryOutput() ProxyaddressCategoryOutput {
	return o
}

func (o ProxyaddressCategoryOutput) ToProxyaddressCategoryOutputWithContext(ctx context.Context) ProxyaddressCategoryOutput {
	return o
}

// Fortiguard category id.
func (o ProxyaddressCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProxyaddressCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ProxyaddressCategoryArrayOutput struct{ *pulumi.OutputState }

func (ProxyaddressCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddressCategory)(nil)).Elem()
}

func (o ProxyaddressCategoryArrayOutput) ToProxyaddressCategoryArrayOutput() ProxyaddressCategoryArrayOutput {
	return o
}

func (o ProxyaddressCategoryArrayOutput) ToProxyaddressCategoryArrayOutputWithContext(ctx context.Context) ProxyaddressCategoryArrayOutput {
	return o
}

func (o ProxyaddressCategoryArrayOutput) Index(i pulumi.IntInput) ProxyaddressCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxyaddressCategory {
		return vs[0].([]ProxyaddressCategory)[vs[1].(int)]
	}).(ProxyaddressCategoryOutput)
}

type ProxyaddressHeaderGroup struct {
	// Case sensitivity in pattern. Valid values: `disable`, `enable`.
	CaseSensitivity *string `pulumi:"caseSensitivity"`
	// HTTP header regular expression.
	Header *string `pulumi:"header"`
	// HTTP header.
	HeaderName *string `pulumi:"headerName"`
	// ID.
	Id *int `pulumi:"id"`
}

// ProxyaddressHeaderGroupInput is an input type that accepts ProxyaddressHeaderGroupArgs and ProxyaddressHeaderGroupOutput values.
// You can construct a concrete instance of `ProxyaddressHeaderGroupInput` via:
//
//	ProxyaddressHeaderGroupArgs{...}
type ProxyaddressHeaderGroupInput interface {
	pulumi.Input

	ToProxyaddressHeaderGroupOutput() ProxyaddressHeaderGroupOutput
	ToProxyaddressHeaderGroupOutputWithContext(context.Context) ProxyaddressHeaderGroupOutput
}

type ProxyaddressHeaderGroupArgs struct {
	// Case sensitivity in pattern. Valid values: `disable`, `enable`.
	CaseSensitivity pulumi.StringPtrInput `pulumi:"caseSensitivity"`
	// HTTP header regular expression.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// HTTP header.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ProxyaddressHeaderGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddressHeaderGroup)(nil)).Elem()
}

func (i ProxyaddressHeaderGroupArgs) ToProxyaddressHeaderGroupOutput() ProxyaddressHeaderGroupOutput {
	return i.ToProxyaddressHeaderGroupOutputWithContext(context.Background())
}

func (i ProxyaddressHeaderGroupArgs) ToProxyaddressHeaderGroupOutputWithContext(ctx context.Context) ProxyaddressHeaderGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddressHeaderGroupOutput)
}

// ProxyaddressHeaderGroupArrayInput is an input type that accepts ProxyaddressHeaderGroupArray and ProxyaddressHeaderGroupArrayOutput values.
// You can construct a concrete instance of `ProxyaddressHeaderGroupArrayInput` via:
//
//	ProxyaddressHeaderGroupArray{ ProxyaddressHeaderGroupArgs{...} }
type ProxyaddressHeaderGroupArrayInput interface {
	pulumi.Input

	ToProxyaddressHeaderGroupArrayOutput() ProxyaddressHeaderGroupArrayOutput
	ToProxyaddressHeaderGroupArrayOutputWithContext(context.Context) ProxyaddressHeaderGroupArrayOutput
}

type ProxyaddressHeaderGroupArray []ProxyaddressHeaderGroupInput

func (ProxyaddressHeaderGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddressHeaderGroup)(nil)).Elem()
}

func (i ProxyaddressHeaderGroupArray) ToProxyaddressHeaderGroupArrayOutput() ProxyaddressHeaderGroupArrayOutput {
	return i.ToProxyaddressHeaderGroupArrayOutputWithContext(context.Background())
}

func (i ProxyaddressHeaderGroupArray) ToProxyaddressHeaderGroupArrayOutputWithContext(ctx context.Context) ProxyaddressHeaderGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddressHeaderGroupArrayOutput)
}

type ProxyaddressHeaderGroupOutput struct{ *pulumi.OutputState }

func (ProxyaddressHeaderGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddressHeaderGroup)(nil)).Elem()
}

func (o ProxyaddressHeaderGroupOutput) ToProxyaddressHeaderGroupOutput() ProxyaddressHeaderGroupOutput {
	return o
}

func (o ProxyaddressHeaderGroupOutput) ToProxyaddressHeaderGroupOutputWithContext(ctx context.Context) ProxyaddressHeaderGroupOutput {
	return o
}

// Case sensitivity in pattern. Valid values: `disable`, `enable`.
func (o ProxyaddressHeaderGroupOutput) CaseSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyaddressHeaderGroup) *string { return v.CaseSensitivity }).(pulumi.StringPtrOutput)
}

// HTTP header regular expression.
func (o ProxyaddressHeaderGroupOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyaddressHeaderGroup) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// HTTP header.
func (o ProxyaddressHeaderGroupOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyaddressHeaderGroup) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// ID.
func (o ProxyaddressHeaderGroupOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProxyaddressHeaderGroup) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ProxyaddressHeaderGroupArrayOutput struct{ *pulumi.OutputState }

func (ProxyaddressHeaderGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddressHeaderGroup)(nil)).Elem()
}

func (o ProxyaddressHeaderGroupArrayOutput) ToProxyaddressHeaderGroupArrayOutput() ProxyaddressHeaderGroupArrayOutput {
	return o
}

func (o ProxyaddressHeaderGroupArrayOutput) ToProxyaddressHeaderGroupArrayOutputWithContext(ctx context.Context) ProxyaddressHeaderGroupArrayOutput {
	return o
}

func (o ProxyaddressHeaderGroupArrayOutput) Index(i pulumi.IntInput) ProxyaddressHeaderGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxyaddressHeaderGroup {
		return vs[0].([]ProxyaddressHeaderGroup)[vs[1].(int)]
	}).(ProxyaddressHeaderGroupOutput)
}

type ProxyaddressTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []ProxyaddressTaggingTag `pulumi:"tags"`
}

// ProxyaddressTaggingInput is an input type that accepts ProxyaddressTaggingArgs and ProxyaddressTaggingOutput values.
// You can construct a concrete instance of `ProxyaddressTaggingInput` via:
//
//	ProxyaddressTaggingArgs{...}
type ProxyaddressTaggingInput interface {
	pulumi.Input

	ToProxyaddressTaggingOutput() ProxyaddressTaggingOutput
	ToProxyaddressTaggingOutputWithContext(context.Context) ProxyaddressTaggingOutput
}

type ProxyaddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags ProxyaddressTaggingTagArrayInput `pulumi:"tags"`
}

func (ProxyaddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddressTagging)(nil)).Elem()
}

func (i ProxyaddressTaggingArgs) ToProxyaddressTaggingOutput() ProxyaddressTaggingOutput {
	return i.ToProxyaddressTaggingOutputWithContext(context.Background())
}

func (i ProxyaddressTaggingArgs) ToProxyaddressTaggingOutputWithContext(ctx context.Context) ProxyaddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddressTaggingOutput)
}

// ProxyaddressTaggingArrayInput is an input type that accepts ProxyaddressTaggingArray and ProxyaddressTaggingArrayOutput values.
// You can construct a concrete instance of `ProxyaddressTaggingArrayInput` via:
//
//	ProxyaddressTaggingArray{ ProxyaddressTaggingArgs{...} }
type ProxyaddressTaggingArrayInput interface {
	pulumi.Input

	ToProxyaddressTaggingArrayOutput() ProxyaddressTaggingArrayOutput
	ToProxyaddressTaggingArrayOutputWithContext(context.Context) ProxyaddressTaggingArrayOutput
}

type ProxyaddressTaggingArray []ProxyaddressTaggingInput

func (ProxyaddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddressTagging)(nil)).Elem()
}

func (i ProxyaddressTaggingArray) ToProxyaddressTaggingArrayOutput() ProxyaddressTaggingArrayOutput {
	return i.ToProxyaddressTaggingArrayOutputWithContext(context.Background())
}

func (i ProxyaddressTaggingArray) ToProxyaddressTaggingArrayOutputWithContext(ctx context.Context) ProxyaddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddressTaggingArrayOutput)
}

type ProxyaddressTaggingOutput struct{ *pulumi.OutputState }

func (ProxyaddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddressTagging)(nil)).Elem()
}

func (o ProxyaddressTaggingOutput) ToProxyaddressTaggingOutput() ProxyaddressTaggingOutput {
	return o
}

func (o ProxyaddressTaggingOutput) ToProxyaddressTaggingOutputWithContext(ctx context.Context) ProxyaddressTaggingOutput {
	return o
}

// Tag category.
func (o ProxyaddressTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyaddressTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o ProxyaddressTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyaddressTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o ProxyaddressTaggingOutput) Tags() ProxyaddressTaggingTagArrayOutput {
	return o.ApplyT(func(v ProxyaddressTagging) []ProxyaddressTaggingTag { return v.Tags }).(ProxyaddressTaggingTagArrayOutput)
}

type ProxyaddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (ProxyaddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddressTagging)(nil)).Elem()
}

func (o ProxyaddressTaggingArrayOutput) ToProxyaddressTaggingArrayOutput() ProxyaddressTaggingArrayOutput {
	return o
}

func (o ProxyaddressTaggingArrayOutput) ToProxyaddressTaggingArrayOutputWithContext(ctx context.Context) ProxyaddressTaggingArrayOutput {
	return o
}

func (o ProxyaddressTaggingArrayOutput) Index(i pulumi.IntInput) ProxyaddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxyaddressTagging {
		return vs[0].([]ProxyaddressTagging)[vs[1].(int)]
	}).(ProxyaddressTaggingOutput)
}

type ProxyaddressTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// ProxyaddressTaggingTagInput is an input type that accepts ProxyaddressTaggingTagArgs and ProxyaddressTaggingTagOutput values.
// You can construct a concrete instance of `ProxyaddressTaggingTagInput` via:
//
//	ProxyaddressTaggingTagArgs{...}
type ProxyaddressTaggingTagInput interface {
	pulumi.Input

	ToProxyaddressTaggingTagOutput() ProxyaddressTaggingTagOutput
	ToProxyaddressTaggingTagOutputWithContext(context.Context) ProxyaddressTaggingTagOutput
}

type ProxyaddressTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxyaddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddressTaggingTag)(nil)).Elem()
}

func (i ProxyaddressTaggingTagArgs) ToProxyaddressTaggingTagOutput() ProxyaddressTaggingTagOutput {
	return i.ToProxyaddressTaggingTagOutputWithContext(context.Background())
}

func (i ProxyaddressTaggingTagArgs) ToProxyaddressTaggingTagOutputWithContext(ctx context.Context) ProxyaddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddressTaggingTagOutput)
}

// ProxyaddressTaggingTagArrayInput is an input type that accepts ProxyaddressTaggingTagArray and ProxyaddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `ProxyaddressTaggingTagArrayInput` via:
//
//	ProxyaddressTaggingTagArray{ ProxyaddressTaggingTagArgs{...} }
type ProxyaddressTaggingTagArrayInput interface {
	pulumi.Input

	ToProxyaddressTaggingTagArrayOutput() ProxyaddressTaggingTagArrayOutput
	ToProxyaddressTaggingTagArrayOutputWithContext(context.Context) ProxyaddressTaggingTagArrayOutput
}

type ProxyaddressTaggingTagArray []ProxyaddressTaggingTagInput

func (ProxyaddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddressTaggingTag)(nil)).Elem()
}

func (i ProxyaddressTaggingTagArray) ToProxyaddressTaggingTagArrayOutput() ProxyaddressTaggingTagArrayOutput {
	return i.ToProxyaddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i ProxyaddressTaggingTagArray) ToProxyaddressTaggingTagArrayOutputWithContext(ctx context.Context) ProxyaddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddressTaggingTagArrayOutput)
}

type ProxyaddressTaggingTagOutput struct{ *pulumi.OutputState }

func (ProxyaddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddressTaggingTag)(nil)).Elem()
}

func (o ProxyaddressTaggingTagOutput) ToProxyaddressTaggingTagOutput() ProxyaddressTaggingTagOutput {
	return o
}

func (o ProxyaddressTaggingTagOutput) ToProxyaddressTaggingTagOutputWithContext(ctx context.Context) ProxyaddressTaggingTagOutput {
	return o
}

// Tag name.
func (o ProxyaddressTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyaddressTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxyaddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (ProxyaddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddressTaggingTag)(nil)).Elem()
}

func (o ProxyaddressTaggingTagArrayOutput) ToProxyaddressTaggingTagArrayOutput() ProxyaddressTaggingTagArrayOutput {
	return o
}

func (o ProxyaddressTaggingTagArrayOutput) ToProxyaddressTaggingTagArrayOutputWithContext(ctx context.Context) ProxyaddressTaggingTagArrayOutput {
	return o
}

func (o ProxyaddressTaggingTagArrayOutput) Index(i pulumi.IntInput) ProxyaddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxyaddressTaggingTag {
		return vs[0].([]ProxyaddressTaggingTag)[vs[1].(int)]
	}).(ProxyaddressTaggingTagOutput)
}

type ProxyaddrgrpMember struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// ProxyaddrgrpMemberInput is an input type that accepts ProxyaddrgrpMemberArgs and ProxyaddrgrpMemberOutput values.
// You can construct a concrete instance of `ProxyaddrgrpMemberInput` via:
//
//	ProxyaddrgrpMemberArgs{...}
type ProxyaddrgrpMemberInput interface {
	pulumi.Input

	ToProxyaddrgrpMemberOutput() ProxyaddrgrpMemberOutput
	ToProxyaddrgrpMemberOutputWithContext(context.Context) ProxyaddrgrpMemberOutput
}

type ProxyaddrgrpMemberArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxyaddrgrpMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddrgrpMember)(nil)).Elem()
}

func (i ProxyaddrgrpMemberArgs) ToProxyaddrgrpMemberOutput() ProxyaddrgrpMemberOutput {
	return i.ToProxyaddrgrpMemberOutputWithContext(context.Background())
}

func (i ProxyaddrgrpMemberArgs) ToProxyaddrgrpMemberOutputWithContext(ctx context.Context) ProxyaddrgrpMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddrgrpMemberOutput)
}

// ProxyaddrgrpMemberArrayInput is an input type that accepts ProxyaddrgrpMemberArray and ProxyaddrgrpMemberArrayOutput values.
// You can construct a concrete instance of `ProxyaddrgrpMemberArrayInput` via:
//
//	ProxyaddrgrpMemberArray{ ProxyaddrgrpMemberArgs{...} }
type ProxyaddrgrpMemberArrayInput interface {
	pulumi.Input

	ToProxyaddrgrpMemberArrayOutput() ProxyaddrgrpMemberArrayOutput
	ToProxyaddrgrpMemberArrayOutputWithContext(context.Context) ProxyaddrgrpMemberArrayOutput
}

type ProxyaddrgrpMemberArray []ProxyaddrgrpMemberInput

func (ProxyaddrgrpMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddrgrpMember)(nil)).Elem()
}

func (i ProxyaddrgrpMemberArray) ToProxyaddrgrpMemberArrayOutput() ProxyaddrgrpMemberArrayOutput {
	return i.ToProxyaddrgrpMemberArrayOutputWithContext(context.Background())
}

func (i ProxyaddrgrpMemberArray) ToProxyaddrgrpMemberArrayOutputWithContext(ctx context.Context) ProxyaddrgrpMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddrgrpMemberArrayOutput)
}

type ProxyaddrgrpMemberOutput struct{ *pulumi.OutputState }

func (ProxyaddrgrpMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddrgrpMember)(nil)).Elem()
}

func (o ProxyaddrgrpMemberOutput) ToProxyaddrgrpMemberOutput() ProxyaddrgrpMemberOutput {
	return o
}

func (o ProxyaddrgrpMemberOutput) ToProxyaddrgrpMemberOutputWithContext(ctx context.Context) ProxyaddrgrpMemberOutput {
	return o
}

// Address name.
func (o ProxyaddrgrpMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyaddrgrpMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxyaddrgrpMemberArrayOutput struct{ *pulumi.OutputState }

func (ProxyaddrgrpMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddrgrpMember)(nil)).Elem()
}

func (o ProxyaddrgrpMemberArrayOutput) ToProxyaddrgrpMemberArrayOutput() ProxyaddrgrpMemberArrayOutput {
	return o
}

func (o ProxyaddrgrpMemberArrayOutput) ToProxyaddrgrpMemberArrayOutputWithContext(ctx context.Context) ProxyaddrgrpMemberArrayOutput {
	return o
}

func (o ProxyaddrgrpMemberArrayOutput) Index(i pulumi.IntInput) ProxyaddrgrpMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxyaddrgrpMember {
		return vs[0].([]ProxyaddrgrpMember)[vs[1].(int)]
	}).(ProxyaddrgrpMemberOutput)
}

type ProxyaddrgrpTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []ProxyaddrgrpTaggingTag `pulumi:"tags"`
}

// ProxyaddrgrpTaggingInput is an input type that accepts ProxyaddrgrpTaggingArgs and ProxyaddrgrpTaggingOutput values.
// You can construct a concrete instance of `ProxyaddrgrpTaggingInput` via:
//
//	ProxyaddrgrpTaggingArgs{...}
type ProxyaddrgrpTaggingInput interface {
	pulumi.Input

	ToProxyaddrgrpTaggingOutput() ProxyaddrgrpTaggingOutput
	ToProxyaddrgrpTaggingOutputWithContext(context.Context) ProxyaddrgrpTaggingOutput
}

type ProxyaddrgrpTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags ProxyaddrgrpTaggingTagArrayInput `pulumi:"tags"`
}

func (ProxyaddrgrpTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddrgrpTagging)(nil)).Elem()
}

func (i ProxyaddrgrpTaggingArgs) ToProxyaddrgrpTaggingOutput() ProxyaddrgrpTaggingOutput {
	return i.ToProxyaddrgrpTaggingOutputWithContext(context.Background())
}

func (i ProxyaddrgrpTaggingArgs) ToProxyaddrgrpTaggingOutputWithContext(ctx context.Context) ProxyaddrgrpTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddrgrpTaggingOutput)
}

// ProxyaddrgrpTaggingArrayInput is an input type that accepts ProxyaddrgrpTaggingArray and ProxyaddrgrpTaggingArrayOutput values.
// You can construct a concrete instance of `ProxyaddrgrpTaggingArrayInput` via:
//
//	ProxyaddrgrpTaggingArray{ ProxyaddrgrpTaggingArgs{...} }
type ProxyaddrgrpTaggingArrayInput interface {
	pulumi.Input

	ToProxyaddrgrpTaggingArrayOutput() ProxyaddrgrpTaggingArrayOutput
	ToProxyaddrgrpTaggingArrayOutputWithContext(context.Context) ProxyaddrgrpTaggingArrayOutput
}

type ProxyaddrgrpTaggingArray []ProxyaddrgrpTaggingInput

func (ProxyaddrgrpTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddrgrpTagging)(nil)).Elem()
}

func (i ProxyaddrgrpTaggingArray) ToProxyaddrgrpTaggingArrayOutput() ProxyaddrgrpTaggingArrayOutput {
	return i.ToProxyaddrgrpTaggingArrayOutputWithContext(context.Background())
}

func (i ProxyaddrgrpTaggingArray) ToProxyaddrgrpTaggingArrayOutputWithContext(ctx context.Context) ProxyaddrgrpTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddrgrpTaggingArrayOutput)
}

type ProxyaddrgrpTaggingOutput struct{ *pulumi.OutputState }

func (ProxyaddrgrpTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddrgrpTagging)(nil)).Elem()
}

func (o ProxyaddrgrpTaggingOutput) ToProxyaddrgrpTaggingOutput() ProxyaddrgrpTaggingOutput {
	return o
}

func (o ProxyaddrgrpTaggingOutput) ToProxyaddrgrpTaggingOutputWithContext(ctx context.Context) ProxyaddrgrpTaggingOutput {
	return o
}

// Tag category.
func (o ProxyaddrgrpTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyaddrgrpTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o ProxyaddrgrpTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyaddrgrpTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o ProxyaddrgrpTaggingOutput) Tags() ProxyaddrgrpTaggingTagArrayOutput {
	return o.ApplyT(func(v ProxyaddrgrpTagging) []ProxyaddrgrpTaggingTag { return v.Tags }).(ProxyaddrgrpTaggingTagArrayOutput)
}

type ProxyaddrgrpTaggingArrayOutput struct{ *pulumi.OutputState }

func (ProxyaddrgrpTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddrgrpTagging)(nil)).Elem()
}

func (o ProxyaddrgrpTaggingArrayOutput) ToProxyaddrgrpTaggingArrayOutput() ProxyaddrgrpTaggingArrayOutput {
	return o
}

func (o ProxyaddrgrpTaggingArrayOutput) ToProxyaddrgrpTaggingArrayOutputWithContext(ctx context.Context) ProxyaddrgrpTaggingArrayOutput {
	return o
}

func (o ProxyaddrgrpTaggingArrayOutput) Index(i pulumi.IntInput) ProxyaddrgrpTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxyaddrgrpTagging {
		return vs[0].([]ProxyaddrgrpTagging)[vs[1].(int)]
	}).(ProxyaddrgrpTaggingOutput)
}

type ProxyaddrgrpTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// ProxyaddrgrpTaggingTagInput is an input type that accepts ProxyaddrgrpTaggingTagArgs and ProxyaddrgrpTaggingTagOutput values.
// You can construct a concrete instance of `ProxyaddrgrpTaggingTagInput` via:
//
//	ProxyaddrgrpTaggingTagArgs{...}
type ProxyaddrgrpTaggingTagInput interface {
	pulumi.Input

	ToProxyaddrgrpTaggingTagOutput() ProxyaddrgrpTaggingTagOutput
	ToProxyaddrgrpTaggingTagOutputWithContext(context.Context) ProxyaddrgrpTaggingTagOutput
}

type ProxyaddrgrpTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxyaddrgrpTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (i ProxyaddrgrpTaggingTagArgs) ToProxyaddrgrpTaggingTagOutput() ProxyaddrgrpTaggingTagOutput {
	return i.ToProxyaddrgrpTaggingTagOutputWithContext(context.Background())
}

func (i ProxyaddrgrpTaggingTagArgs) ToProxyaddrgrpTaggingTagOutputWithContext(ctx context.Context) ProxyaddrgrpTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddrgrpTaggingTagOutput)
}

// ProxyaddrgrpTaggingTagArrayInput is an input type that accepts ProxyaddrgrpTaggingTagArray and ProxyaddrgrpTaggingTagArrayOutput values.
// You can construct a concrete instance of `ProxyaddrgrpTaggingTagArrayInput` via:
//
//	ProxyaddrgrpTaggingTagArray{ ProxyaddrgrpTaggingTagArgs{...} }
type ProxyaddrgrpTaggingTagArrayInput interface {
	pulumi.Input

	ToProxyaddrgrpTaggingTagArrayOutput() ProxyaddrgrpTaggingTagArrayOutput
	ToProxyaddrgrpTaggingTagArrayOutputWithContext(context.Context) ProxyaddrgrpTaggingTagArrayOutput
}

type ProxyaddrgrpTaggingTagArray []ProxyaddrgrpTaggingTagInput

func (ProxyaddrgrpTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (i ProxyaddrgrpTaggingTagArray) ToProxyaddrgrpTaggingTagArrayOutput() ProxyaddrgrpTaggingTagArrayOutput {
	return i.ToProxyaddrgrpTaggingTagArrayOutputWithContext(context.Background())
}

func (i ProxyaddrgrpTaggingTagArray) ToProxyaddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) ProxyaddrgrpTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyaddrgrpTaggingTagArrayOutput)
}

type ProxyaddrgrpTaggingTagOutput struct{ *pulumi.OutputState }

func (ProxyaddrgrpTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (o ProxyaddrgrpTaggingTagOutput) ToProxyaddrgrpTaggingTagOutput() ProxyaddrgrpTaggingTagOutput {
	return o
}

func (o ProxyaddrgrpTaggingTagOutput) ToProxyaddrgrpTaggingTagOutputWithContext(ctx context.Context) ProxyaddrgrpTaggingTagOutput {
	return o
}

// Tag name.
func (o ProxyaddrgrpTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyaddrgrpTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxyaddrgrpTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (ProxyaddrgrpTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (o ProxyaddrgrpTaggingTagArrayOutput) ToProxyaddrgrpTaggingTagArrayOutput() ProxyaddrgrpTaggingTagArrayOutput {
	return o
}

func (o ProxyaddrgrpTaggingTagArrayOutput) ToProxyaddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) ProxyaddrgrpTaggingTagArrayOutput {
	return o
}

func (o ProxyaddrgrpTaggingTagArrayOutput) Index(i pulumi.IntInput) ProxyaddrgrpTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxyaddrgrpTaggingTag {
		return vs[0].([]ProxyaddrgrpTaggingTag)[vs[1].(int)]
	}).(ProxyaddrgrpTaggingTagOutput)
}

type ProxypolicyAccessProxy6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// ProxypolicyAccessProxy6Input is an input type that accepts ProxypolicyAccessProxy6Args and ProxypolicyAccessProxy6Output values.
// You can construct a concrete instance of `ProxypolicyAccessProxy6Input` via:
//
//	ProxypolicyAccessProxy6Args{...}
type ProxypolicyAccessProxy6Input interface {
	pulumi.Input

	ToProxypolicyAccessProxy6Output() ProxypolicyAccessProxy6Output
	ToProxypolicyAccessProxy6OutputWithContext(context.Context) ProxypolicyAccessProxy6Output
}

type ProxypolicyAccessProxy6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyAccessProxy6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyAccessProxy6)(nil)).Elem()
}

func (i ProxypolicyAccessProxy6Args) ToProxypolicyAccessProxy6Output() ProxypolicyAccessProxy6Output {
	return i.ToProxypolicyAccessProxy6OutputWithContext(context.Background())
}

func (i ProxypolicyAccessProxy6Args) ToProxypolicyAccessProxy6OutputWithContext(ctx context.Context) ProxypolicyAccessProxy6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyAccessProxy6Output)
}

// ProxypolicyAccessProxy6ArrayInput is an input type that accepts ProxypolicyAccessProxy6Array and ProxypolicyAccessProxy6ArrayOutput values.
// You can construct a concrete instance of `ProxypolicyAccessProxy6ArrayInput` via:
//
//	ProxypolicyAccessProxy6Array{ ProxypolicyAccessProxy6Args{...} }
type ProxypolicyAccessProxy6ArrayInput interface {
	pulumi.Input

	ToProxypolicyAccessProxy6ArrayOutput() ProxypolicyAccessProxy6ArrayOutput
	ToProxypolicyAccessProxy6ArrayOutputWithContext(context.Context) ProxypolicyAccessProxy6ArrayOutput
}

type ProxypolicyAccessProxy6Array []ProxypolicyAccessProxy6Input

func (ProxypolicyAccessProxy6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyAccessProxy6)(nil)).Elem()
}

func (i ProxypolicyAccessProxy6Array) ToProxypolicyAccessProxy6ArrayOutput() ProxypolicyAccessProxy6ArrayOutput {
	return i.ToProxypolicyAccessProxy6ArrayOutputWithContext(context.Background())
}

func (i ProxypolicyAccessProxy6Array) ToProxypolicyAccessProxy6ArrayOutputWithContext(ctx context.Context) ProxypolicyAccessProxy6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyAccessProxy6ArrayOutput)
}

type ProxypolicyAccessProxy6Output struct{ *pulumi.OutputState }

func (ProxypolicyAccessProxy6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyAccessProxy6)(nil)).Elem()
}

func (o ProxypolicyAccessProxy6Output) ToProxypolicyAccessProxy6Output() ProxypolicyAccessProxy6Output {
	return o
}

func (o ProxypolicyAccessProxy6Output) ToProxypolicyAccessProxy6OutputWithContext(ctx context.Context) ProxypolicyAccessProxy6Output {
	return o
}

// Policy name.
func (o ProxypolicyAccessProxy6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyAccessProxy6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyAccessProxy6ArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyAccessProxy6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyAccessProxy6)(nil)).Elem()
}

func (o ProxypolicyAccessProxy6ArrayOutput) ToProxypolicyAccessProxy6ArrayOutput() ProxypolicyAccessProxy6ArrayOutput {
	return o
}

func (o ProxypolicyAccessProxy6ArrayOutput) ToProxypolicyAccessProxy6ArrayOutputWithContext(ctx context.Context) ProxypolicyAccessProxy6ArrayOutput {
	return o
}

func (o ProxypolicyAccessProxy6ArrayOutput) Index(i pulumi.IntInput) ProxypolicyAccessProxy6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyAccessProxy6 {
		return vs[0].([]ProxypolicyAccessProxy6)[vs[1].(int)]
	}).(ProxypolicyAccessProxy6Output)
}

type ProxypolicyAccessProxy struct {
	// Access proxy name.
	Name *string `pulumi:"name"`
}

// ProxypolicyAccessProxyInput is an input type that accepts ProxypolicyAccessProxyArgs and ProxypolicyAccessProxyOutput values.
// You can construct a concrete instance of `ProxypolicyAccessProxyInput` via:
//
//	ProxypolicyAccessProxyArgs{...}
type ProxypolicyAccessProxyInput interface {
	pulumi.Input

	ToProxypolicyAccessProxyOutput() ProxypolicyAccessProxyOutput
	ToProxypolicyAccessProxyOutputWithContext(context.Context) ProxypolicyAccessProxyOutput
}

type ProxypolicyAccessProxyArgs struct {
	// Access proxy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyAccessProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyAccessProxy)(nil)).Elem()
}

func (i ProxypolicyAccessProxyArgs) ToProxypolicyAccessProxyOutput() ProxypolicyAccessProxyOutput {
	return i.ToProxypolicyAccessProxyOutputWithContext(context.Background())
}

func (i ProxypolicyAccessProxyArgs) ToProxypolicyAccessProxyOutputWithContext(ctx context.Context) ProxypolicyAccessProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyAccessProxyOutput)
}

// ProxypolicyAccessProxyArrayInput is an input type that accepts ProxypolicyAccessProxyArray and ProxypolicyAccessProxyArrayOutput values.
// You can construct a concrete instance of `ProxypolicyAccessProxyArrayInput` via:
//
//	ProxypolicyAccessProxyArray{ ProxypolicyAccessProxyArgs{...} }
type ProxypolicyAccessProxyArrayInput interface {
	pulumi.Input

	ToProxypolicyAccessProxyArrayOutput() ProxypolicyAccessProxyArrayOutput
	ToProxypolicyAccessProxyArrayOutputWithContext(context.Context) ProxypolicyAccessProxyArrayOutput
}

type ProxypolicyAccessProxyArray []ProxypolicyAccessProxyInput

func (ProxypolicyAccessProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyAccessProxy)(nil)).Elem()
}

func (i ProxypolicyAccessProxyArray) ToProxypolicyAccessProxyArrayOutput() ProxypolicyAccessProxyArrayOutput {
	return i.ToProxypolicyAccessProxyArrayOutputWithContext(context.Background())
}

func (i ProxypolicyAccessProxyArray) ToProxypolicyAccessProxyArrayOutputWithContext(ctx context.Context) ProxypolicyAccessProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyAccessProxyArrayOutput)
}

type ProxypolicyAccessProxyOutput struct{ *pulumi.OutputState }

func (ProxypolicyAccessProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyAccessProxy)(nil)).Elem()
}

func (o ProxypolicyAccessProxyOutput) ToProxypolicyAccessProxyOutput() ProxypolicyAccessProxyOutput {
	return o
}

func (o ProxypolicyAccessProxyOutput) ToProxypolicyAccessProxyOutputWithContext(ctx context.Context) ProxypolicyAccessProxyOutput {
	return o
}

// Access proxy name.
func (o ProxypolicyAccessProxyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyAccessProxy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyAccessProxyArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyAccessProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyAccessProxy)(nil)).Elem()
}

func (o ProxypolicyAccessProxyArrayOutput) ToProxypolicyAccessProxyArrayOutput() ProxypolicyAccessProxyArrayOutput {
	return o
}

func (o ProxypolicyAccessProxyArrayOutput) ToProxypolicyAccessProxyArrayOutputWithContext(ctx context.Context) ProxypolicyAccessProxyArrayOutput {
	return o
}

func (o ProxypolicyAccessProxyArrayOutput) Index(i pulumi.IntInput) ProxypolicyAccessProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyAccessProxy {
		return vs[0].([]ProxypolicyAccessProxy)[vs[1].(int)]
	}).(ProxypolicyAccessProxyOutput)
}

type ProxypolicyDstaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// ProxypolicyDstaddr6Input is an input type that accepts ProxypolicyDstaddr6Args and ProxypolicyDstaddr6Output values.
// You can construct a concrete instance of `ProxypolicyDstaddr6Input` via:
//
//	ProxypolicyDstaddr6Args{...}
type ProxypolicyDstaddr6Input interface {
	pulumi.Input

	ToProxypolicyDstaddr6Output() ProxypolicyDstaddr6Output
	ToProxypolicyDstaddr6OutputWithContext(context.Context) ProxypolicyDstaddr6Output
}

type ProxypolicyDstaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyDstaddr6)(nil)).Elem()
}

func (i ProxypolicyDstaddr6Args) ToProxypolicyDstaddr6Output() ProxypolicyDstaddr6Output {
	return i.ToProxypolicyDstaddr6OutputWithContext(context.Background())
}

func (i ProxypolicyDstaddr6Args) ToProxypolicyDstaddr6OutputWithContext(ctx context.Context) ProxypolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyDstaddr6Output)
}

// ProxypolicyDstaddr6ArrayInput is an input type that accepts ProxypolicyDstaddr6Array and ProxypolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `ProxypolicyDstaddr6ArrayInput` via:
//
//	ProxypolicyDstaddr6Array{ ProxypolicyDstaddr6Args{...} }
type ProxypolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToProxypolicyDstaddr6ArrayOutput() ProxypolicyDstaddr6ArrayOutput
	ToProxypolicyDstaddr6ArrayOutputWithContext(context.Context) ProxypolicyDstaddr6ArrayOutput
}

type ProxypolicyDstaddr6Array []ProxypolicyDstaddr6Input

func (ProxypolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyDstaddr6)(nil)).Elem()
}

func (i ProxypolicyDstaddr6Array) ToProxypolicyDstaddr6ArrayOutput() ProxypolicyDstaddr6ArrayOutput {
	return i.ToProxypolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i ProxypolicyDstaddr6Array) ToProxypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) ProxypolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyDstaddr6ArrayOutput)
}

type ProxypolicyDstaddr6Output struct{ *pulumi.OutputState }

func (ProxypolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyDstaddr6)(nil)).Elem()
}

func (o ProxypolicyDstaddr6Output) ToProxypolicyDstaddr6Output() ProxypolicyDstaddr6Output {
	return o
}

func (o ProxypolicyDstaddr6Output) ToProxypolicyDstaddr6OutputWithContext(ctx context.Context) ProxypolicyDstaddr6Output {
	return o
}

// Policy name.
func (o ProxypolicyDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyDstaddr6)(nil)).Elem()
}

func (o ProxypolicyDstaddr6ArrayOutput) ToProxypolicyDstaddr6ArrayOutput() ProxypolicyDstaddr6ArrayOutput {
	return o
}

func (o ProxypolicyDstaddr6ArrayOutput) ToProxypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) ProxypolicyDstaddr6ArrayOutput {
	return o
}

func (o ProxypolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) ProxypolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyDstaddr6 {
		return vs[0].([]ProxypolicyDstaddr6)[vs[1].(int)]
	}).(ProxypolicyDstaddr6Output)
}

type ProxypolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// ProxypolicyDstaddrInput is an input type that accepts ProxypolicyDstaddrArgs and ProxypolicyDstaddrOutput values.
// You can construct a concrete instance of `ProxypolicyDstaddrInput` via:
//
//	ProxypolicyDstaddrArgs{...}
type ProxypolicyDstaddrInput interface {
	pulumi.Input

	ToProxypolicyDstaddrOutput() ProxypolicyDstaddrOutput
	ToProxypolicyDstaddrOutputWithContext(context.Context) ProxypolicyDstaddrOutput
}

type ProxypolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyDstaddr)(nil)).Elem()
}

func (i ProxypolicyDstaddrArgs) ToProxypolicyDstaddrOutput() ProxypolicyDstaddrOutput {
	return i.ToProxypolicyDstaddrOutputWithContext(context.Background())
}

func (i ProxypolicyDstaddrArgs) ToProxypolicyDstaddrOutputWithContext(ctx context.Context) ProxypolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyDstaddrOutput)
}

// ProxypolicyDstaddrArrayInput is an input type that accepts ProxypolicyDstaddrArray and ProxypolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `ProxypolicyDstaddrArrayInput` via:
//
//	ProxypolicyDstaddrArray{ ProxypolicyDstaddrArgs{...} }
type ProxypolicyDstaddrArrayInput interface {
	pulumi.Input

	ToProxypolicyDstaddrArrayOutput() ProxypolicyDstaddrArrayOutput
	ToProxypolicyDstaddrArrayOutputWithContext(context.Context) ProxypolicyDstaddrArrayOutput
}

type ProxypolicyDstaddrArray []ProxypolicyDstaddrInput

func (ProxypolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyDstaddr)(nil)).Elem()
}

func (i ProxypolicyDstaddrArray) ToProxypolicyDstaddrArrayOutput() ProxypolicyDstaddrArrayOutput {
	return i.ToProxypolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i ProxypolicyDstaddrArray) ToProxypolicyDstaddrArrayOutputWithContext(ctx context.Context) ProxypolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyDstaddrArrayOutput)
}

type ProxypolicyDstaddrOutput struct{ *pulumi.OutputState }

func (ProxypolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyDstaddr)(nil)).Elem()
}

func (o ProxypolicyDstaddrOutput) ToProxypolicyDstaddrOutput() ProxypolicyDstaddrOutput {
	return o
}

func (o ProxypolicyDstaddrOutput) ToProxypolicyDstaddrOutputWithContext(ctx context.Context) ProxypolicyDstaddrOutput {
	return o
}

// Address name.
func (o ProxypolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyDstaddr)(nil)).Elem()
}

func (o ProxypolicyDstaddrArrayOutput) ToProxypolicyDstaddrArrayOutput() ProxypolicyDstaddrArrayOutput {
	return o
}

func (o ProxypolicyDstaddrArrayOutput) ToProxypolicyDstaddrArrayOutputWithContext(ctx context.Context) ProxypolicyDstaddrArrayOutput {
	return o
}

func (o ProxypolicyDstaddrArrayOutput) Index(i pulumi.IntInput) ProxypolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyDstaddr {
		return vs[0].([]ProxypolicyDstaddr)[vs[1].(int)]
	}).(ProxypolicyDstaddrOutput)
}

type ProxypolicyDstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// ProxypolicyDstintfInput is an input type that accepts ProxypolicyDstintfArgs and ProxypolicyDstintfOutput values.
// You can construct a concrete instance of `ProxypolicyDstintfInput` via:
//
//	ProxypolicyDstintfArgs{...}
type ProxypolicyDstintfInput interface {
	pulumi.Input

	ToProxypolicyDstintfOutput() ProxypolicyDstintfOutput
	ToProxypolicyDstintfOutputWithContext(context.Context) ProxypolicyDstintfOutput
}

type ProxypolicyDstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyDstintf)(nil)).Elem()
}

func (i ProxypolicyDstintfArgs) ToProxypolicyDstintfOutput() ProxypolicyDstintfOutput {
	return i.ToProxypolicyDstintfOutputWithContext(context.Background())
}

func (i ProxypolicyDstintfArgs) ToProxypolicyDstintfOutputWithContext(ctx context.Context) ProxypolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyDstintfOutput)
}

// ProxypolicyDstintfArrayInput is an input type that accepts ProxypolicyDstintfArray and ProxypolicyDstintfArrayOutput values.
// You can construct a concrete instance of `ProxypolicyDstintfArrayInput` via:
//
//	ProxypolicyDstintfArray{ ProxypolicyDstintfArgs{...} }
type ProxypolicyDstintfArrayInput interface {
	pulumi.Input

	ToProxypolicyDstintfArrayOutput() ProxypolicyDstintfArrayOutput
	ToProxypolicyDstintfArrayOutputWithContext(context.Context) ProxypolicyDstintfArrayOutput
}

type ProxypolicyDstintfArray []ProxypolicyDstintfInput

func (ProxypolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyDstintf)(nil)).Elem()
}

func (i ProxypolicyDstintfArray) ToProxypolicyDstintfArrayOutput() ProxypolicyDstintfArrayOutput {
	return i.ToProxypolicyDstintfArrayOutputWithContext(context.Background())
}

func (i ProxypolicyDstintfArray) ToProxypolicyDstintfArrayOutputWithContext(ctx context.Context) ProxypolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyDstintfArrayOutput)
}

type ProxypolicyDstintfOutput struct{ *pulumi.OutputState }

func (ProxypolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyDstintf)(nil)).Elem()
}

func (o ProxypolicyDstintfOutput) ToProxypolicyDstintfOutput() ProxypolicyDstintfOutput {
	return o
}

func (o ProxypolicyDstintfOutput) ToProxypolicyDstintfOutputWithContext(ctx context.Context) ProxypolicyDstintfOutput {
	return o
}

// Interface name.
func (o ProxypolicyDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyDstintf)(nil)).Elem()
}

func (o ProxypolicyDstintfArrayOutput) ToProxypolicyDstintfArrayOutput() ProxypolicyDstintfArrayOutput {
	return o
}

func (o ProxypolicyDstintfArrayOutput) ToProxypolicyDstintfArrayOutputWithContext(ctx context.Context) ProxypolicyDstintfArrayOutput {
	return o
}

func (o ProxypolicyDstintfArrayOutput) Index(i pulumi.IntInput) ProxypolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyDstintf {
		return vs[0].([]ProxypolicyDstintf)[vs[1].(int)]
	}).(ProxypolicyDstintfOutput)
}

type ProxypolicyGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// ProxypolicyGroupInput is an input type that accepts ProxypolicyGroupArgs and ProxypolicyGroupOutput values.
// You can construct a concrete instance of `ProxypolicyGroupInput` via:
//
//	ProxypolicyGroupArgs{...}
type ProxypolicyGroupInput interface {
	pulumi.Input

	ToProxypolicyGroupOutput() ProxypolicyGroupOutput
	ToProxypolicyGroupOutputWithContext(context.Context) ProxypolicyGroupOutput
}

type ProxypolicyGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyGroup)(nil)).Elem()
}

func (i ProxypolicyGroupArgs) ToProxypolicyGroupOutput() ProxypolicyGroupOutput {
	return i.ToProxypolicyGroupOutputWithContext(context.Background())
}

func (i ProxypolicyGroupArgs) ToProxypolicyGroupOutputWithContext(ctx context.Context) ProxypolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyGroupOutput)
}

// ProxypolicyGroupArrayInput is an input type that accepts ProxypolicyGroupArray and ProxypolicyGroupArrayOutput values.
// You can construct a concrete instance of `ProxypolicyGroupArrayInput` via:
//
//	ProxypolicyGroupArray{ ProxypolicyGroupArgs{...} }
type ProxypolicyGroupArrayInput interface {
	pulumi.Input

	ToProxypolicyGroupArrayOutput() ProxypolicyGroupArrayOutput
	ToProxypolicyGroupArrayOutputWithContext(context.Context) ProxypolicyGroupArrayOutput
}

type ProxypolicyGroupArray []ProxypolicyGroupInput

func (ProxypolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyGroup)(nil)).Elem()
}

func (i ProxypolicyGroupArray) ToProxypolicyGroupArrayOutput() ProxypolicyGroupArrayOutput {
	return i.ToProxypolicyGroupArrayOutputWithContext(context.Background())
}

func (i ProxypolicyGroupArray) ToProxypolicyGroupArrayOutputWithContext(ctx context.Context) ProxypolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyGroupArrayOutput)
}

type ProxypolicyGroupOutput struct{ *pulumi.OutputState }

func (ProxypolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyGroup)(nil)).Elem()
}

func (o ProxypolicyGroupOutput) ToProxypolicyGroupOutput() ProxypolicyGroupOutput {
	return o
}

func (o ProxypolicyGroupOutput) ToProxypolicyGroupOutputWithContext(ctx context.Context) ProxypolicyGroupOutput {
	return o
}

// Group name.
func (o ProxypolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyGroup)(nil)).Elem()
}

func (o ProxypolicyGroupArrayOutput) ToProxypolicyGroupArrayOutput() ProxypolicyGroupArrayOutput {
	return o
}

func (o ProxypolicyGroupArrayOutput) ToProxypolicyGroupArrayOutputWithContext(ctx context.Context) ProxypolicyGroupArrayOutput {
	return o
}

func (o ProxypolicyGroupArrayOutput) Index(i pulumi.IntInput) ProxypolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyGroup {
		return vs[0].([]ProxypolicyGroup)[vs[1].(int)]
	}).(ProxypolicyGroupOutput)
}

type ProxypolicyInternetService6Custom struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// ProxypolicyInternetService6CustomInput is an input type that accepts ProxypolicyInternetService6CustomArgs and ProxypolicyInternetService6CustomOutput values.
// You can construct a concrete instance of `ProxypolicyInternetService6CustomInput` via:
//
//	ProxypolicyInternetService6CustomArgs{...}
type ProxypolicyInternetService6CustomInput interface {
	pulumi.Input

	ToProxypolicyInternetService6CustomOutput() ProxypolicyInternetService6CustomOutput
	ToProxypolicyInternetService6CustomOutputWithContext(context.Context) ProxypolicyInternetService6CustomOutput
}

type ProxypolicyInternetService6CustomArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyInternetService6CustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetService6Custom)(nil)).Elem()
}

func (i ProxypolicyInternetService6CustomArgs) ToProxypolicyInternetService6CustomOutput() ProxypolicyInternetService6CustomOutput {
	return i.ToProxypolicyInternetService6CustomOutputWithContext(context.Background())
}

func (i ProxypolicyInternetService6CustomArgs) ToProxypolicyInternetService6CustomOutputWithContext(ctx context.Context) ProxypolicyInternetService6CustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetService6CustomOutput)
}

// ProxypolicyInternetService6CustomArrayInput is an input type that accepts ProxypolicyInternetService6CustomArray and ProxypolicyInternetService6CustomArrayOutput values.
// You can construct a concrete instance of `ProxypolicyInternetService6CustomArrayInput` via:
//
//	ProxypolicyInternetService6CustomArray{ ProxypolicyInternetService6CustomArgs{...} }
type ProxypolicyInternetService6CustomArrayInput interface {
	pulumi.Input

	ToProxypolicyInternetService6CustomArrayOutput() ProxypolicyInternetService6CustomArrayOutput
	ToProxypolicyInternetService6CustomArrayOutputWithContext(context.Context) ProxypolicyInternetService6CustomArrayOutput
}

type ProxypolicyInternetService6CustomArray []ProxypolicyInternetService6CustomInput

func (ProxypolicyInternetService6CustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetService6Custom)(nil)).Elem()
}

func (i ProxypolicyInternetService6CustomArray) ToProxypolicyInternetService6CustomArrayOutput() ProxypolicyInternetService6CustomArrayOutput {
	return i.ToProxypolicyInternetService6CustomArrayOutputWithContext(context.Background())
}

func (i ProxypolicyInternetService6CustomArray) ToProxypolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) ProxypolicyInternetService6CustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetService6CustomArrayOutput)
}

type ProxypolicyInternetService6CustomOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetService6CustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetService6Custom)(nil)).Elem()
}

func (o ProxypolicyInternetService6CustomOutput) ToProxypolicyInternetService6CustomOutput() ProxypolicyInternetService6CustomOutput {
	return o
}

func (o ProxypolicyInternetService6CustomOutput) ToProxypolicyInternetService6CustomOutputWithContext(ctx context.Context) ProxypolicyInternetService6CustomOutput {
	return o
}

// Policy name.
func (o ProxypolicyInternetService6CustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyInternetService6Custom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyInternetService6CustomArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetService6CustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetService6Custom)(nil)).Elem()
}

func (o ProxypolicyInternetService6CustomArrayOutput) ToProxypolicyInternetService6CustomArrayOutput() ProxypolicyInternetService6CustomArrayOutput {
	return o
}

func (o ProxypolicyInternetService6CustomArrayOutput) ToProxypolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) ProxypolicyInternetService6CustomArrayOutput {
	return o
}

func (o ProxypolicyInternetService6CustomArrayOutput) Index(i pulumi.IntInput) ProxypolicyInternetService6CustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyInternetService6Custom {
		return vs[0].([]ProxypolicyInternetService6Custom)[vs[1].(int)]
	}).(ProxypolicyInternetService6CustomOutput)
}

type ProxypolicyInternetService6CustomGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// ProxypolicyInternetService6CustomGroupInput is an input type that accepts ProxypolicyInternetService6CustomGroupArgs and ProxypolicyInternetService6CustomGroupOutput values.
// You can construct a concrete instance of `ProxypolicyInternetService6CustomGroupInput` via:
//
//	ProxypolicyInternetService6CustomGroupArgs{...}
type ProxypolicyInternetService6CustomGroupInput interface {
	pulumi.Input

	ToProxypolicyInternetService6CustomGroupOutput() ProxypolicyInternetService6CustomGroupOutput
	ToProxypolicyInternetService6CustomGroupOutputWithContext(context.Context) ProxypolicyInternetService6CustomGroupOutput
}

type ProxypolicyInternetService6CustomGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyInternetService6CustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i ProxypolicyInternetService6CustomGroupArgs) ToProxypolicyInternetService6CustomGroupOutput() ProxypolicyInternetService6CustomGroupOutput {
	return i.ToProxypolicyInternetService6CustomGroupOutputWithContext(context.Background())
}

func (i ProxypolicyInternetService6CustomGroupArgs) ToProxypolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) ProxypolicyInternetService6CustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetService6CustomGroupOutput)
}

// ProxypolicyInternetService6CustomGroupArrayInput is an input type that accepts ProxypolicyInternetService6CustomGroupArray and ProxypolicyInternetService6CustomGroupArrayOutput values.
// You can construct a concrete instance of `ProxypolicyInternetService6CustomGroupArrayInput` via:
//
//	ProxypolicyInternetService6CustomGroupArray{ ProxypolicyInternetService6CustomGroupArgs{...} }
type ProxypolicyInternetService6CustomGroupArrayInput interface {
	pulumi.Input

	ToProxypolicyInternetService6CustomGroupArrayOutput() ProxypolicyInternetService6CustomGroupArrayOutput
	ToProxypolicyInternetService6CustomGroupArrayOutputWithContext(context.Context) ProxypolicyInternetService6CustomGroupArrayOutput
}

type ProxypolicyInternetService6CustomGroupArray []ProxypolicyInternetService6CustomGroupInput

func (ProxypolicyInternetService6CustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i ProxypolicyInternetService6CustomGroupArray) ToProxypolicyInternetService6CustomGroupArrayOutput() ProxypolicyInternetService6CustomGroupArrayOutput {
	return i.ToProxypolicyInternetService6CustomGroupArrayOutputWithContext(context.Background())
}

func (i ProxypolicyInternetService6CustomGroupArray) ToProxypolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) ProxypolicyInternetService6CustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetService6CustomGroupArrayOutput)
}

type ProxypolicyInternetService6CustomGroupOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetService6CustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o ProxypolicyInternetService6CustomGroupOutput) ToProxypolicyInternetService6CustomGroupOutput() ProxypolicyInternetService6CustomGroupOutput {
	return o
}

func (o ProxypolicyInternetService6CustomGroupOutput) ToProxypolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) ProxypolicyInternetService6CustomGroupOutput {
	return o
}

// Policy name.
func (o ProxypolicyInternetService6CustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyInternetService6CustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyInternetService6CustomGroupArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetService6CustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o ProxypolicyInternetService6CustomGroupArrayOutput) ToProxypolicyInternetService6CustomGroupArrayOutput() ProxypolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o ProxypolicyInternetService6CustomGroupArrayOutput) ToProxypolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) ProxypolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o ProxypolicyInternetService6CustomGroupArrayOutput) Index(i pulumi.IntInput) ProxypolicyInternetService6CustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyInternetService6CustomGroup {
		return vs[0].([]ProxypolicyInternetService6CustomGroup)[vs[1].(int)]
	}).(ProxypolicyInternetService6CustomGroupOutput)
}

type ProxypolicyInternetService6Group struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// ProxypolicyInternetService6GroupInput is an input type that accepts ProxypolicyInternetService6GroupArgs and ProxypolicyInternetService6GroupOutput values.
// You can construct a concrete instance of `ProxypolicyInternetService6GroupInput` via:
//
//	ProxypolicyInternetService6GroupArgs{...}
type ProxypolicyInternetService6GroupInput interface {
	pulumi.Input

	ToProxypolicyInternetService6GroupOutput() ProxypolicyInternetService6GroupOutput
	ToProxypolicyInternetService6GroupOutputWithContext(context.Context) ProxypolicyInternetService6GroupOutput
}

type ProxypolicyInternetService6GroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyInternetService6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetService6Group)(nil)).Elem()
}

func (i ProxypolicyInternetService6GroupArgs) ToProxypolicyInternetService6GroupOutput() ProxypolicyInternetService6GroupOutput {
	return i.ToProxypolicyInternetService6GroupOutputWithContext(context.Background())
}

func (i ProxypolicyInternetService6GroupArgs) ToProxypolicyInternetService6GroupOutputWithContext(ctx context.Context) ProxypolicyInternetService6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetService6GroupOutput)
}

// ProxypolicyInternetService6GroupArrayInput is an input type that accepts ProxypolicyInternetService6GroupArray and ProxypolicyInternetService6GroupArrayOutput values.
// You can construct a concrete instance of `ProxypolicyInternetService6GroupArrayInput` via:
//
//	ProxypolicyInternetService6GroupArray{ ProxypolicyInternetService6GroupArgs{...} }
type ProxypolicyInternetService6GroupArrayInput interface {
	pulumi.Input

	ToProxypolicyInternetService6GroupArrayOutput() ProxypolicyInternetService6GroupArrayOutput
	ToProxypolicyInternetService6GroupArrayOutputWithContext(context.Context) ProxypolicyInternetService6GroupArrayOutput
}

type ProxypolicyInternetService6GroupArray []ProxypolicyInternetService6GroupInput

func (ProxypolicyInternetService6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetService6Group)(nil)).Elem()
}

func (i ProxypolicyInternetService6GroupArray) ToProxypolicyInternetService6GroupArrayOutput() ProxypolicyInternetService6GroupArrayOutput {
	return i.ToProxypolicyInternetService6GroupArrayOutputWithContext(context.Background())
}

func (i ProxypolicyInternetService6GroupArray) ToProxypolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) ProxypolicyInternetService6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetService6GroupArrayOutput)
}

type ProxypolicyInternetService6GroupOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetService6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetService6Group)(nil)).Elem()
}

func (o ProxypolicyInternetService6GroupOutput) ToProxypolicyInternetService6GroupOutput() ProxypolicyInternetService6GroupOutput {
	return o
}

func (o ProxypolicyInternetService6GroupOutput) ToProxypolicyInternetService6GroupOutputWithContext(ctx context.Context) ProxypolicyInternetService6GroupOutput {
	return o
}

// Policy name.
func (o ProxypolicyInternetService6GroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyInternetService6Group) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyInternetService6GroupArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetService6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetService6Group)(nil)).Elem()
}

func (o ProxypolicyInternetService6GroupArrayOutput) ToProxypolicyInternetService6GroupArrayOutput() ProxypolicyInternetService6GroupArrayOutput {
	return o
}

func (o ProxypolicyInternetService6GroupArrayOutput) ToProxypolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) ProxypolicyInternetService6GroupArrayOutput {
	return o
}

func (o ProxypolicyInternetService6GroupArrayOutput) Index(i pulumi.IntInput) ProxypolicyInternetService6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyInternetService6Group {
		return vs[0].([]ProxypolicyInternetService6Group)[vs[1].(int)]
	}).(ProxypolicyInternetService6GroupOutput)
}

type ProxypolicyInternetService6Name struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// ProxypolicyInternetService6NameInput is an input type that accepts ProxypolicyInternetService6NameArgs and ProxypolicyInternetService6NameOutput values.
// You can construct a concrete instance of `ProxypolicyInternetService6NameInput` via:
//
//	ProxypolicyInternetService6NameArgs{...}
type ProxypolicyInternetService6NameInput interface {
	pulumi.Input

	ToProxypolicyInternetService6NameOutput() ProxypolicyInternetService6NameOutput
	ToProxypolicyInternetService6NameOutputWithContext(context.Context) ProxypolicyInternetService6NameOutput
}

type ProxypolicyInternetService6NameArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyInternetService6NameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetService6Name)(nil)).Elem()
}

func (i ProxypolicyInternetService6NameArgs) ToProxypolicyInternetService6NameOutput() ProxypolicyInternetService6NameOutput {
	return i.ToProxypolicyInternetService6NameOutputWithContext(context.Background())
}

func (i ProxypolicyInternetService6NameArgs) ToProxypolicyInternetService6NameOutputWithContext(ctx context.Context) ProxypolicyInternetService6NameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetService6NameOutput)
}

// ProxypolicyInternetService6NameArrayInput is an input type that accepts ProxypolicyInternetService6NameArray and ProxypolicyInternetService6NameArrayOutput values.
// You can construct a concrete instance of `ProxypolicyInternetService6NameArrayInput` via:
//
//	ProxypolicyInternetService6NameArray{ ProxypolicyInternetService6NameArgs{...} }
type ProxypolicyInternetService6NameArrayInput interface {
	pulumi.Input

	ToProxypolicyInternetService6NameArrayOutput() ProxypolicyInternetService6NameArrayOutput
	ToProxypolicyInternetService6NameArrayOutputWithContext(context.Context) ProxypolicyInternetService6NameArrayOutput
}

type ProxypolicyInternetService6NameArray []ProxypolicyInternetService6NameInput

func (ProxypolicyInternetService6NameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetService6Name)(nil)).Elem()
}

func (i ProxypolicyInternetService6NameArray) ToProxypolicyInternetService6NameArrayOutput() ProxypolicyInternetService6NameArrayOutput {
	return i.ToProxypolicyInternetService6NameArrayOutputWithContext(context.Background())
}

func (i ProxypolicyInternetService6NameArray) ToProxypolicyInternetService6NameArrayOutputWithContext(ctx context.Context) ProxypolicyInternetService6NameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetService6NameArrayOutput)
}

type ProxypolicyInternetService6NameOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetService6NameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetService6Name)(nil)).Elem()
}

func (o ProxypolicyInternetService6NameOutput) ToProxypolicyInternetService6NameOutput() ProxypolicyInternetService6NameOutput {
	return o
}

func (o ProxypolicyInternetService6NameOutput) ToProxypolicyInternetService6NameOutputWithContext(ctx context.Context) ProxypolicyInternetService6NameOutput {
	return o
}

// Policy name.
func (o ProxypolicyInternetService6NameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyInternetService6Name) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyInternetService6NameArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetService6NameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetService6Name)(nil)).Elem()
}

func (o ProxypolicyInternetService6NameArrayOutput) ToProxypolicyInternetService6NameArrayOutput() ProxypolicyInternetService6NameArrayOutput {
	return o
}

func (o ProxypolicyInternetService6NameArrayOutput) ToProxypolicyInternetService6NameArrayOutputWithContext(ctx context.Context) ProxypolicyInternetService6NameArrayOutput {
	return o
}

func (o ProxypolicyInternetService6NameArrayOutput) Index(i pulumi.IntInput) ProxypolicyInternetService6NameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyInternetService6Name {
		return vs[0].([]ProxypolicyInternetService6Name)[vs[1].(int)]
	}).(ProxypolicyInternetService6NameOutput)
}

type ProxypolicyInternetServiceCustom struct {
	// Custom name.
	Name *string `pulumi:"name"`
}

// ProxypolicyInternetServiceCustomInput is an input type that accepts ProxypolicyInternetServiceCustomArgs and ProxypolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `ProxypolicyInternetServiceCustomInput` via:
//
//	ProxypolicyInternetServiceCustomArgs{...}
type ProxypolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToProxypolicyInternetServiceCustomOutput() ProxypolicyInternetServiceCustomOutput
	ToProxypolicyInternetServiceCustomOutputWithContext(context.Context) ProxypolicyInternetServiceCustomOutput
}

type ProxypolicyInternetServiceCustomArgs struct {
	// Custom name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (i ProxypolicyInternetServiceCustomArgs) ToProxypolicyInternetServiceCustomOutput() ProxypolicyInternetServiceCustomOutput {
	return i.ToProxypolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i ProxypolicyInternetServiceCustomArgs) ToProxypolicyInternetServiceCustomOutputWithContext(ctx context.Context) ProxypolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetServiceCustomOutput)
}

// ProxypolicyInternetServiceCustomArrayInput is an input type that accepts ProxypolicyInternetServiceCustomArray and ProxypolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `ProxypolicyInternetServiceCustomArrayInput` via:
//
//	ProxypolicyInternetServiceCustomArray{ ProxypolicyInternetServiceCustomArgs{...} }
type ProxypolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToProxypolicyInternetServiceCustomArrayOutput() ProxypolicyInternetServiceCustomArrayOutput
	ToProxypolicyInternetServiceCustomArrayOutputWithContext(context.Context) ProxypolicyInternetServiceCustomArrayOutput
}

type ProxypolicyInternetServiceCustomArray []ProxypolicyInternetServiceCustomInput

func (ProxypolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (i ProxypolicyInternetServiceCustomArray) ToProxypolicyInternetServiceCustomArrayOutput() ProxypolicyInternetServiceCustomArrayOutput {
	return i.ToProxypolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i ProxypolicyInternetServiceCustomArray) ToProxypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) ProxypolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetServiceCustomArrayOutput)
}

type ProxypolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (o ProxypolicyInternetServiceCustomOutput) ToProxypolicyInternetServiceCustomOutput() ProxypolicyInternetServiceCustomOutput {
	return o
}

func (o ProxypolicyInternetServiceCustomOutput) ToProxypolicyInternetServiceCustomOutputWithContext(ctx context.Context) ProxypolicyInternetServiceCustomOutput {
	return o
}

// Custom name.
func (o ProxypolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (o ProxypolicyInternetServiceCustomArrayOutput) ToProxypolicyInternetServiceCustomArrayOutput() ProxypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o ProxypolicyInternetServiceCustomArrayOutput) ToProxypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) ProxypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o ProxypolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) ProxypolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyInternetServiceCustom {
		return vs[0].([]ProxypolicyInternetServiceCustom)[vs[1].(int)]
	}).(ProxypolicyInternetServiceCustomOutput)
}

type ProxypolicyInternetServiceCustomGroup struct {
	// Custom Internet Service IPv6 group name.
	Name *string `pulumi:"name"`
}

// ProxypolicyInternetServiceCustomGroupInput is an input type that accepts ProxypolicyInternetServiceCustomGroupArgs and ProxypolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `ProxypolicyInternetServiceCustomGroupInput` via:
//
//	ProxypolicyInternetServiceCustomGroupArgs{...}
type ProxypolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToProxypolicyInternetServiceCustomGroupOutput() ProxypolicyInternetServiceCustomGroupOutput
	ToProxypolicyInternetServiceCustomGroupOutputWithContext(context.Context) ProxypolicyInternetServiceCustomGroupOutput
}

type ProxypolicyInternetServiceCustomGroupArgs struct {
	// Custom Internet Service IPv6 group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i ProxypolicyInternetServiceCustomGroupArgs) ToProxypolicyInternetServiceCustomGroupOutput() ProxypolicyInternetServiceCustomGroupOutput {
	return i.ToProxypolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i ProxypolicyInternetServiceCustomGroupArgs) ToProxypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) ProxypolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetServiceCustomGroupOutput)
}

// ProxypolicyInternetServiceCustomGroupArrayInput is an input type that accepts ProxypolicyInternetServiceCustomGroupArray and ProxypolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `ProxypolicyInternetServiceCustomGroupArrayInput` via:
//
//	ProxypolicyInternetServiceCustomGroupArray{ ProxypolicyInternetServiceCustomGroupArgs{...} }
type ProxypolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToProxypolicyInternetServiceCustomGroupArrayOutput() ProxypolicyInternetServiceCustomGroupArrayOutput
	ToProxypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) ProxypolicyInternetServiceCustomGroupArrayOutput
}

type ProxypolicyInternetServiceCustomGroupArray []ProxypolicyInternetServiceCustomGroupInput

func (ProxypolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i ProxypolicyInternetServiceCustomGroupArray) ToProxypolicyInternetServiceCustomGroupArrayOutput() ProxypolicyInternetServiceCustomGroupArrayOutput {
	return i.ToProxypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i ProxypolicyInternetServiceCustomGroupArray) ToProxypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) ProxypolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetServiceCustomGroupArrayOutput)
}

type ProxypolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o ProxypolicyInternetServiceCustomGroupOutput) ToProxypolicyInternetServiceCustomGroupOutput() ProxypolicyInternetServiceCustomGroupOutput {
	return o
}

func (o ProxypolicyInternetServiceCustomGroupOutput) ToProxypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) ProxypolicyInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service IPv6 group name.
func (o ProxypolicyInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o ProxypolicyInternetServiceCustomGroupArrayOutput) ToProxypolicyInternetServiceCustomGroupArrayOutput() ProxypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o ProxypolicyInternetServiceCustomGroupArrayOutput) ToProxypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) ProxypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o ProxypolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) ProxypolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyInternetServiceCustomGroup {
		return vs[0].([]ProxypolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(ProxypolicyInternetServiceCustomGroupOutput)
}

type ProxypolicyInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// ProxypolicyInternetServiceGroupInput is an input type that accepts ProxypolicyInternetServiceGroupArgs and ProxypolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `ProxypolicyInternetServiceGroupInput` via:
//
//	ProxypolicyInternetServiceGroupArgs{...}
type ProxypolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToProxypolicyInternetServiceGroupOutput() ProxypolicyInternetServiceGroupOutput
	ToProxypolicyInternetServiceGroupOutputWithContext(context.Context) ProxypolicyInternetServiceGroupOutput
}

type ProxypolicyInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (i ProxypolicyInternetServiceGroupArgs) ToProxypolicyInternetServiceGroupOutput() ProxypolicyInternetServiceGroupOutput {
	return i.ToProxypolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i ProxypolicyInternetServiceGroupArgs) ToProxypolicyInternetServiceGroupOutputWithContext(ctx context.Context) ProxypolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetServiceGroupOutput)
}

// ProxypolicyInternetServiceGroupArrayInput is an input type that accepts ProxypolicyInternetServiceGroupArray and ProxypolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `ProxypolicyInternetServiceGroupArrayInput` via:
//
//	ProxypolicyInternetServiceGroupArray{ ProxypolicyInternetServiceGroupArgs{...} }
type ProxypolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToProxypolicyInternetServiceGroupArrayOutput() ProxypolicyInternetServiceGroupArrayOutput
	ToProxypolicyInternetServiceGroupArrayOutputWithContext(context.Context) ProxypolicyInternetServiceGroupArrayOutput
}

type ProxypolicyInternetServiceGroupArray []ProxypolicyInternetServiceGroupInput

func (ProxypolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (i ProxypolicyInternetServiceGroupArray) ToProxypolicyInternetServiceGroupArrayOutput() ProxypolicyInternetServiceGroupArrayOutput {
	return i.ToProxypolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i ProxypolicyInternetServiceGroupArray) ToProxypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) ProxypolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetServiceGroupArrayOutput)
}

type ProxypolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (o ProxypolicyInternetServiceGroupOutput) ToProxypolicyInternetServiceGroupOutput() ProxypolicyInternetServiceGroupOutput {
	return o
}

func (o ProxypolicyInternetServiceGroupOutput) ToProxypolicyInternetServiceGroupOutputWithContext(ctx context.Context) ProxypolicyInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o ProxypolicyInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (o ProxypolicyInternetServiceGroupArrayOutput) ToProxypolicyInternetServiceGroupArrayOutput() ProxypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o ProxypolicyInternetServiceGroupArrayOutput) ToProxypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) ProxypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o ProxypolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) ProxypolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyInternetServiceGroup {
		return vs[0].([]ProxypolicyInternetServiceGroup)[vs[1].(int)]
	}).(ProxypolicyInternetServiceGroupOutput)
}

type ProxypolicyInternetServiceId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// ProxypolicyInternetServiceIdInput is an input type that accepts ProxypolicyInternetServiceIdArgs and ProxypolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `ProxypolicyInternetServiceIdInput` via:
//
//	ProxypolicyInternetServiceIdArgs{...}
type ProxypolicyInternetServiceIdInput interface {
	pulumi.Input

	ToProxypolicyInternetServiceIdOutput() ProxypolicyInternetServiceIdOutput
	ToProxypolicyInternetServiceIdOutputWithContext(context.Context) ProxypolicyInternetServiceIdOutput
}

type ProxypolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ProxypolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetServiceId)(nil)).Elem()
}

func (i ProxypolicyInternetServiceIdArgs) ToProxypolicyInternetServiceIdOutput() ProxypolicyInternetServiceIdOutput {
	return i.ToProxypolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i ProxypolicyInternetServiceIdArgs) ToProxypolicyInternetServiceIdOutputWithContext(ctx context.Context) ProxypolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetServiceIdOutput)
}

// ProxypolicyInternetServiceIdArrayInput is an input type that accepts ProxypolicyInternetServiceIdArray and ProxypolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `ProxypolicyInternetServiceIdArrayInput` via:
//
//	ProxypolicyInternetServiceIdArray{ ProxypolicyInternetServiceIdArgs{...} }
type ProxypolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToProxypolicyInternetServiceIdArrayOutput() ProxypolicyInternetServiceIdArrayOutput
	ToProxypolicyInternetServiceIdArrayOutputWithContext(context.Context) ProxypolicyInternetServiceIdArrayOutput
}

type ProxypolicyInternetServiceIdArray []ProxypolicyInternetServiceIdInput

func (ProxypolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetServiceId)(nil)).Elem()
}

func (i ProxypolicyInternetServiceIdArray) ToProxypolicyInternetServiceIdArrayOutput() ProxypolicyInternetServiceIdArrayOutput {
	return i.ToProxypolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i ProxypolicyInternetServiceIdArray) ToProxypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) ProxypolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetServiceIdArrayOutput)
}

type ProxypolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetServiceId)(nil)).Elem()
}

func (o ProxypolicyInternetServiceIdOutput) ToProxypolicyInternetServiceIdOutput() ProxypolicyInternetServiceIdOutput {
	return o
}

func (o ProxypolicyInternetServiceIdOutput) ToProxypolicyInternetServiceIdOutputWithContext(ctx context.Context) ProxypolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o ProxypolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProxypolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ProxypolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetServiceId)(nil)).Elem()
}

func (o ProxypolicyInternetServiceIdArrayOutput) ToProxypolicyInternetServiceIdArrayOutput() ProxypolicyInternetServiceIdArrayOutput {
	return o
}

func (o ProxypolicyInternetServiceIdArrayOutput) ToProxypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) ProxypolicyInternetServiceIdArrayOutput {
	return o
}

func (o ProxypolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) ProxypolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyInternetServiceId {
		return vs[0].([]ProxypolicyInternetServiceId)[vs[1].(int)]
	}).(ProxypolicyInternetServiceIdOutput)
}

type ProxypolicyInternetServiceName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// ProxypolicyInternetServiceNameInput is an input type that accepts ProxypolicyInternetServiceNameArgs and ProxypolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `ProxypolicyInternetServiceNameInput` via:
//
//	ProxypolicyInternetServiceNameArgs{...}
type ProxypolicyInternetServiceNameInput interface {
	pulumi.Input

	ToProxypolicyInternetServiceNameOutput() ProxypolicyInternetServiceNameOutput
	ToProxypolicyInternetServiceNameOutputWithContext(context.Context) ProxypolicyInternetServiceNameOutput
}

type ProxypolicyInternetServiceNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetServiceName)(nil)).Elem()
}

func (i ProxypolicyInternetServiceNameArgs) ToProxypolicyInternetServiceNameOutput() ProxypolicyInternetServiceNameOutput {
	return i.ToProxypolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i ProxypolicyInternetServiceNameArgs) ToProxypolicyInternetServiceNameOutputWithContext(ctx context.Context) ProxypolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetServiceNameOutput)
}

// ProxypolicyInternetServiceNameArrayInput is an input type that accepts ProxypolicyInternetServiceNameArray and ProxypolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `ProxypolicyInternetServiceNameArrayInput` via:
//
//	ProxypolicyInternetServiceNameArray{ ProxypolicyInternetServiceNameArgs{...} }
type ProxypolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToProxypolicyInternetServiceNameArrayOutput() ProxypolicyInternetServiceNameArrayOutput
	ToProxypolicyInternetServiceNameArrayOutputWithContext(context.Context) ProxypolicyInternetServiceNameArrayOutput
}

type ProxypolicyInternetServiceNameArray []ProxypolicyInternetServiceNameInput

func (ProxypolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetServiceName)(nil)).Elem()
}

func (i ProxypolicyInternetServiceNameArray) ToProxypolicyInternetServiceNameArrayOutput() ProxypolicyInternetServiceNameArrayOutput {
	return i.ToProxypolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i ProxypolicyInternetServiceNameArray) ToProxypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) ProxypolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyInternetServiceNameArrayOutput)
}

type ProxypolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyInternetServiceName)(nil)).Elem()
}

func (o ProxypolicyInternetServiceNameOutput) ToProxypolicyInternetServiceNameOutput() ProxypolicyInternetServiceNameOutput {
	return o
}

func (o ProxypolicyInternetServiceNameOutput) ToProxypolicyInternetServiceNameOutputWithContext(ctx context.Context) ProxypolicyInternetServiceNameOutput {
	return o
}

// Internet Service name.
func (o ProxypolicyInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyInternetServiceName)(nil)).Elem()
}

func (o ProxypolicyInternetServiceNameArrayOutput) ToProxypolicyInternetServiceNameArrayOutput() ProxypolicyInternetServiceNameArrayOutput {
	return o
}

func (o ProxypolicyInternetServiceNameArrayOutput) ToProxypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) ProxypolicyInternetServiceNameArrayOutput {
	return o
}

func (o ProxypolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) ProxypolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyInternetServiceName {
		return vs[0].([]ProxypolicyInternetServiceName)[vs[1].(int)]
	}).(ProxypolicyInternetServiceNameOutput)
}

type ProxypolicyPoolname struct {
	// IP pool name.
	Name *string `pulumi:"name"`
}

// ProxypolicyPoolnameInput is an input type that accepts ProxypolicyPoolnameArgs and ProxypolicyPoolnameOutput values.
// You can construct a concrete instance of `ProxypolicyPoolnameInput` via:
//
//	ProxypolicyPoolnameArgs{...}
type ProxypolicyPoolnameInput interface {
	pulumi.Input

	ToProxypolicyPoolnameOutput() ProxypolicyPoolnameOutput
	ToProxypolicyPoolnameOutputWithContext(context.Context) ProxypolicyPoolnameOutput
}

type ProxypolicyPoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyPoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyPoolname)(nil)).Elem()
}

func (i ProxypolicyPoolnameArgs) ToProxypolicyPoolnameOutput() ProxypolicyPoolnameOutput {
	return i.ToProxypolicyPoolnameOutputWithContext(context.Background())
}

func (i ProxypolicyPoolnameArgs) ToProxypolicyPoolnameOutputWithContext(ctx context.Context) ProxypolicyPoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyPoolnameOutput)
}

// ProxypolicyPoolnameArrayInput is an input type that accepts ProxypolicyPoolnameArray and ProxypolicyPoolnameArrayOutput values.
// You can construct a concrete instance of `ProxypolicyPoolnameArrayInput` via:
//
//	ProxypolicyPoolnameArray{ ProxypolicyPoolnameArgs{...} }
type ProxypolicyPoolnameArrayInput interface {
	pulumi.Input

	ToProxypolicyPoolnameArrayOutput() ProxypolicyPoolnameArrayOutput
	ToProxypolicyPoolnameArrayOutputWithContext(context.Context) ProxypolicyPoolnameArrayOutput
}

type ProxypolicyPoolnameArray []ProxypolicyPoolnameInput

func (ProxypolicyPoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyPoolname)(nil)).Elem()
}

func (i ProxypolicyPoolnameArray) ToProxypolicyPoolnameArrayOutput() ProxypolicyPoolnameArrayOutput {
	return i.ToProxypolicyPoolnameArrayOutputWithContext(context.Background())
}

func (i ProxypolicyPoolnameArray) ToProxypolicyPoolnameArrayOutputWithContext(ctx context.Context) ProxypolicyPoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyPoolnameArrayOutput)
}

type ProxypolicyPoolnameOutput struct{ *pulumi.OutputState }

func (ProxypolicyPoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyPoolname)(nil)).Elem()
}

func (o ProxypolicyPoolnameOutput) ToProxypolicyPoolnameOutput() ProxypolicyPoolnameOutput {
	return o
}

func (o ProxypolicyPoolnameOutput) ToProxypolicyPoolnameOutputWithContext(ctx context.Context) ProxypolicyPoolnameOutput {
	return o
}

// IP pool name.
func (o ProxypolicyPoolnameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyPoolname) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyPoolnameArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyPoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyPoolname)(nil)).Elem()
}

func (o ProxypolicyPoolnameArrayOutput) ToProxypolicyPoolnameArrayOutput() ProxypolicyPoolnameArrayOutput {
	return o
}

func (o ProxypolicyPoolnameArrayOutput) ToProxypolicyPoolnameArrayOutputWithContext(ctx context.Context) ProxypolicyPoolnameArrayOutput {
	return o
}

func (o ProxypolicyPoolnameArrayOutput) Index(i pulumi.IntInput) ProxypolicyPoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyPoolname {
		return vs[0].([]ProxypolicyPoolname)[vs[1].(int)]
	}).(ProxypolicyPoolnameOutput)
}

type ProxypolicyService struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// ProxypolicyServiceInput is an input type that accepts ProxypolicyServiceArgs and ProxypolicyServiceOutput values.
// You can construct a concrete instance of `ProxypolicyServiceInput` via:
//
//	ProxypolicyServiceArgs{...}
type ProxypolicyServiceInput interface {
	pulumi.Input

	ToProxypolicyServiceOutput() ProxypolicyServiceOutput
	ToProxypolicyServiceOutputWithContext(context.Context) ProxypolicyServiceOutput
}

type ProxypolicyServiceArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyService)(nil)).Elem()
}

func (i ProxypolicyServiceArgs) ToProxypolicyServiceOutput() ProxypolicyServiceOutput {
	return i.ToProxypolicyServiceOutputWithContext(context.Background())
}

func (i ProxypolicyServiceArgs) ToProxypolicyServiceOutputWithContext(ctx context.Context) ProxypolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyServiceOutput)
}

// ProxypolicyServiceArrayInput is an input type that accepts ProxypolicyServiceArray and ProxypolicyServiceArrayOutput values.
// You can construct a concrete instance of `ProxypolicyServiceArrayInput` via:
//
//	ProxypolicyServiceArray{ ProxypolicyServiceArgs{...} }
type ProxypolicyServiceArrayInput interface {
	pulumi.Input

	ToProxypolicyServiceArrayOutput() ProxypolicyServiceArrayOutput
	ToProxypolicyServiceArrayOutputWithContext(context.Context) ProxypolicyServiceArrayOutput
}

type ProxypolicyServiceArray []ProxypolicyServiceInput

func (ProxypolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyService)(nil)).Elem()
}

func (i ProxypolicyServiceArray) ToProxypolicyServiceArrayOutput() ProxypolicyServiceArrayOutput {
	return i.ToProxypolicyServiceArrayOutputWithContext(context.Background())
}

func (i ProxypolicyServiceArray) ToProxypolicyServiceArrayOutputWithContext(ctx context.Context) ProxypolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyServiceArrayOutput)
}

type ProxypolicyServiceOutput struct{ *pulumi.OutputState }

func (ProxypolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyService)(nil)).Elem()
}

func (o ProxypolicyServiceOutput) ToProxypolicyServiceOutput() ProxypolicyServiceOutput {
	return o
}

func (o ProxypolicyServiceOutput) ToProxypolicyServiceOutputWithContext(ctx context.Context) ProxypolicyServiceOutput {
	return o
}

// Address name.
func (o ProxypolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyService)(nil)).Elem()
}

func (o ProxypolicyServiceArrayOutput) ToProxypolicyServiceArrayOutput() ProxypolicyServiceArrayOutput {
	return o
}

func (o ProxypolicyServiceArrayOutput) ToProxypolicyServiceArrayOutputWithContext(ctx context.Context) ProxypolicyServiceArrayOutput {
	return o
}

func (o ProxypolicyServiceArrayOutput) Index(i pulumi.IntInput) ProxypolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyService {
		return vs[0].([]ProxypolicyService)[vs[1].(int)]
	}).(ProxypolicyServiceOutput)
}

type ProxypolicySortStatePolicyList struct {
	Action   *string `pulumi:"action"`
	Name     *string `pulumi:"name"`
	Policyid *string `pulumi:"policyid"`
}

// ProxypolicySortStatePolicyListInput is an input type that accepts ProxypolicySortStatePolicyListArgs and ProxypolicySortStatePolicyListOutput values.
// You can construct a concrete instance of `ProxypolicySortStatePolicyListInput` via:
//
//	ProxypolicySortStatePolicyListArgs{...}
type ProxypolicySortStatePolicyListInput interface {
	pulumi.Input

	ToProxypolicySortStatePolicyListOutput() ProxypolicySortStatePolicyListOutput
	ToProxypolicySortStatePolicyListOutputWithContext(context.Context) ProxypolicySortStatePolicyListOutput
}

type ProxypolicySortStatePolicyListArgs struct {
	Action   pulumi.StringPtrInput `pulumi:"action"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Policyid pulumi.StringPtrInput `pulumi:"policyid"`
}

func (ProxypolicySortStatePolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicySortStatePolicyList)(nil)).Elem()
}

func (i ProxypolicySortStatePolicyListArgs) ToProxypolicySortStatePolicyListOutput() ProxypolicySortStatePolicyListOutput {
	return i.ToProxypolicySortStatePolicyListOutputWithContext(context.Background())
}

func (i ProxypolicySortStatePolicyListArgs) ToProxypolicySortStatePolicyListOutputWithContext(ctx context.Context) ProxypolicySortStatePolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicySortStatePolicyListOutput)
}

// ProxypolicySortStatePolicyListArrayInput is an input type that accepts ProxypolicySortStatePolicyListArray and ProxypolicySortStatePolicyListArrayOutput values.
// You can construct a concrete instance of `ProxypolicySortStatePolicyListArrayInput` via:
//
//	ProxypolicySortStatePolicyListArray{ ProxypolicySortStatePolicyListArgs{...} }
type ProxypolicySortStatePolicyListArrayInput interface {
	pulumi.Input

	ToProxypolicySortStatePolicyListArrayOutput() ProxypolicySortStatePolicyListArrayOutput
	ToProxypolicySortStatePolicyListArrayOutputWithContext(context.Context) ProxypolicySortStatePolicyListArrayOutput
}

type ProxypolicySortStatePolicyListArray []ProxypolicySortStatePolicyListInput

func (ProxypolicySortStatePolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicySortStatePolicyList)(nil)).Elem()
}

func (i ProxypolicySortStatePolicyListArray) ToProxypolicySortStatePolicyListArrayOutput() ProxypolicySortStatePolicyListArrayOutput {
	return i.ToProxypolicySortStatePolicyListArrayOutputWithContext(context.Background())
}

func (i ProxypolicySortStatePolicyListArray) ToProxypolicySortStatePolicyListArrayOutputWithContext(ctx context.Context) ProxypolicySortStatePolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicySortStatePolicyListArrayOutput)
}

type ProxypolicySortStatePolicyListOutput struct{ *pulumi.OutputState }

func (ProxypolicySortStatePolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicySortStatePolicyList)(nil)).Elem()
}

func (o ProxypolicySortStatePolicyListOutput) ToProxypolicySortStatePolicyListOutput() ProxypolicySortStatePolicyListOutput {
	return o
}

func (o ProxypolicySortStatePolicyListOutput) ToProxypolicySortStatePolicyListOutputWithContext(ctx context.Context) ProxypolicySortStatePolicyListOutput {
	return o
}

func (o ProxypolicySortStatePolicyListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicySortStatePolicyList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o ProxypolicySortStatePolicyListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicySortStatePolicyList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ProxypolicySortStatePolicyListOutput) Policyid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicySortStatePolicyList) *string { return v.Policyid }).(pulumi.StringPtrOutput)
}

type ProxypolicySortStatePolicyListArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicySortStatePolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicySortStatePolicyList)(nil)).Elem()
}

func (o ProxypolicySortStatePolicyListArrayOutput) ToProxypolicySortStatePolicyListArrayOutput() ProxypolicySortStatePolicyListArrayOutput {
	return o
}

func (o ProxypolicySortStatePolicyListArrayOutput) ToProxypolicySortStatePolicyListArrayOutputWithContext(ctx context.Context) ProxypolicySortStatePolicyListArrayOutput {
	return o
}

func (o ProxypolicySortStatePolicyListArrayOutput) Index(i pulumi.IntInput) ProxypolicySortStatePolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicySortStatePolicyList {
		return vs[0].([]ProxypolicySortStatePolicyList)[vs[1].(int)]
	}).(ProxypolicySortStatePolicyListOutput)
}

type ProxypolicySrcaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// ProxypolicySrcaddr6Input is an input type that accepts ProxypolicySrcaddr6Args and ProxypolicySrcaddr6Output values.
// You can construct a concrete instance of `ProxypolicySrcaddr6Input` via:
//
//	ProxypolicySrcaddr6Args{...}
type ProxypolicySrcaddr6Input interface {
	pulumi.Input

	ToProxypolicySrcaddr6Output() ProxypolicySrcaddr6Output
	ToProxypolicySrcaddr6OutputWithContext(context.Context) ProxypolicySrcaddr6Output
}

type ProxypolicySrcaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicySrcaddr6)(nil)).Elem()
}

func (i ProxypolicySrcaddr6Args) ToProxypolicySrcaddr6Output() ProxypolicySrcaddr6Output {
	return i.ToProxypolicySrcaddr6OutputWithContext(context.Background())
}

func (i ProxypolicySrcaddr6Args) ToProxypolicySrcaddr6OutputWithContext(ctx context.Context) ProxypolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicySrcaddr6Output)
}

// ProxypolicySrcaddr6ArrayInput is an input type that accepts ProxypolicySrcaddr6Array and ProxypolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `ProxypolicySrcaddr6ArrayInput` via:
//
//	ProxypolicySrcaddr6Array{ ProxypolicySrcaddr6Args{...} }
type ProxypolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToProxypolicySrcaddr6ArrayOutput() ProxypolicySrcaddr6ArrayOutput
	ToProxypolicySrcaddr6ArrayOutputWithContext(context.Context) ProxypolicySrcaddr6ArrayOutput
}

type ProxypolicySrcaddr6Array []ProxypolicySrcaddr6Input

func (ProxypolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicySrcaddr6)(nil)).Elem()
}

func (i ProxypolicySrcaddr6Array) ToProxypolicySrcaddr6ArrayOutput() ProxypolicySrcaddr6ArrayOutput {
	return i.ToProxypolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i ProxypolicySrcaddr6Array) ToProxypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) ProxypolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicySrcaddr6ArrayOutput)
}

type ProxypolicySrcaddr6Output struct{ *pulumi.OutputState }

func (ProxypolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicySrcaddr6)(nil)).Elem()
}

func (o ProxypolicySrcaddr6Output) ToProxypolicySrcaddr6Output() ProxypolicySrcaddr6Output {
	return o
}

func (o ProxypolicySrcaddr6Output) ToProxypolicySrcaddr6OutputWithContext(ctx context.Context) ProxypolicySrcaddr6Output {
	return o
}

// Policy name.
func (o ProxypolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicySrcaddr6)(nil)).Elem()
}

func (o ProxypolicySrcaddr6ArrayOutput) ToProxypolicySrcaddr6ArrayOutput() ProxypolicySrcaddr6ArrayOutput {
	return o
}

func (o ProxypolicySrcaddr6ArrayOutput) ToProxypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) ProxypolicySrcaddr6ArrayOutput {
	return o
}

func (o ProxypolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) ProxypolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicySrcaddr6 {
		return vs[0].([]ProxypolicySrcaddr6)[vs[1].(int)]
	}).(ProxypolicySrcaddr6Output)
}

type ProxypolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// ProxypolicySrcaddrInput is an input type that accepts ProxypolicySrcaddrArgs and ProxypolicySrcaddrOutput values.
// You can construct a concrete instance of `ProxypolicySrcaddrInput` via:
//
//	ProxypolicySrcaddrArgs{...}
type ProxypolicySrcaddrInput interface {
	pulumi.Input

	ToProxypolicySrcaddrOutput() ProxypolicySrcaddrOutput
	ToProxypolicySrcaddrOutputWithContext(context.Context) ProxypolicySrcaddrOutput
}

type ProxypolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicySrcaddr)(nil)).Elem()
}

func (i ProxypolicySrcaddrArgs) ToProxypolicySrcaddrOutput() ProxypolicySrcaddrOutput {
	return i.ToProxypolicySrcaddrOutputWithContext(context.Background())
}

func (i ProxypolicySrcaddrArgs) ToProxypolicySrcaddrOutputWithContext(ctx context.Context) ProxypolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicySrcaddrOutput)
}

// ProxypolicySrcaddrArrayInput is an input type that accepts ProxypolicySrcaddrArray and ProxypolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `ProxypolicySrcaddrArrayInput` via:
//
//	ProxypolicySrcaddrArray{ ProxypolicySrcaddrArgs{...} }
type ProxypolicySrcaddrArrayInput interface {
	pulumi.Input

	ToProxypolicySrcaddrArrayOutput() ProxypolicySrcaddrArrayOutput
	ToProxypolicySrcaddrArrayOutputWithContext(context.Context) ProxypolicySrcaddrArrayOutput
}

type ProxypolicySrcaddrArray []ProxypolicySrcaddrInput

func (ProxypolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicySrcaddr)(nil)).Elem()
}

func (i ProxypolicySrcaddrArray) ToProxypolicySrcaddrArrayOutput() ProxypolicySrcaddrArrayOutput {
	return i.ToProxypolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i ProxypolicySrcaddrArray) ToProxypolicySrcaddrArrayOutputWithContext(ctx context.Context) ProxypolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicySrcaddrArrayOutput)
}

type ProxypolicySrcaddrOutput struct{ *pulumi.OutputState }

func (ProxypolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicySrcaddr)(nil)).Elem()
}

func (o ProxypolicySrcaddrOutput) ToProxypolicySrcaddrOutput() ProxypolicySrcaddrOutput {
	return o
}

func (o ProxypolicySrcaddrOutput) ToProxypolicySrcaddrOutputWithContext(ctx context.Context) ProxypolicySrcaddrOutput {
	return o
}

// Address name.
func (o ProxypolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicySrcaddr)(nil)).Elem()
}

func (o ProxypolicySrcaddrArrayOutput) ToProxypolicySrcaddrArrayOutput() ProxypolicySrcaddrArrayOutput {
	return o
}

func (o ProxypolicySrcaddrArrayOutput) ToProxypolicySrcaddrArrayOutputWithContext(ctx context.Context) ProxypolicySrcaddrArrayOutput {
	return o
}

func (o ProxypolicySrcaddrArrayOutput) Index(i pulumi.IntInput) ProxypolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicySrcaddr {
		return vs[0].([]ProxypolicySrcaddr)[vs[1].(int)]
	}).(ProxypolicySrcaddrOutput)
}

type ProxypolicySrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// ProxypolicySrcintfInput is an input type that accepts ProxypolicySrcintfArgs and ProxypolicySrcintfOutput values.
// You can construct a concrete instance of `ProxypolicySrcintfInput` via:
//
//	ProxypolicySrcintfArgs{...}
type ProxypolicySrcintfInput interface {
	pulumi.Input

	ToProxypolicySrcintfOutput() ProxypolicySrcintfOutput
	ToProxypolicySrcintfOutputWithContext(context.Context) ProxypolicySrcintfOutput
}

type ProxypolicySrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicySrcintf)(nil)).Elem()
}

func (i ProxypolicySrcintfArgs) ToProxypolicySrcintfOutput() ProxypolicySrcintfOutput {
	return i.ToProxypolicySrcintfOutputWithContext(context.Background())
}

func (i ProxypolicySrcintfArgs) ToProxypolicySrcintfOutputWithContext(ctx context.Context) ProxypolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicySrcintfOutput)
}

// ProxypolicySrcintfArrayInput is an input type that accepts ProxypolicySrcintfArray and ProxypolicySrcintfArrayOutput values.
// You can construct a concrete instance of `ProxypolicySrcintfArrayInput` via:
//
//	ProxypolicySrcintfArray{ ProxypolicySrcintfArgs{...} }
type ProxypolicySrcintfArrayInput interface {
	pulumi.Input

	ToProxypolicySrcintfArrayOutput() ProxypolicySrcintfArrayOutput
	ToProxypolicySrcintfArrayOutputWithContext(context.Context) ProxypolicySrcintfArrayOutput
}

type ProxypolicySrcintfArray []ProxypolicySrcintfInput

func (ProxypolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicySrcintf)(nil)).Elem()
}

func (i ProxypolicySrcintfArray) ToProxypolicySrcintfArrayOutput() ProxypolicySrcintfArrayOutput {
	return i.ToProxypolicySrcintfArrayOutputWithContext(context.Background())
}

func (i ProxypolicySrcintfArray) ToProxypolicySrcintfArrayOutputWithContext(ctx context.Context) ProxypolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicySrcintfArrayOutput)
}

type ProxypolicySrcintfOutput struct{ *pulumi.OutputState }

func (ProxypolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicySrcintf)(nil)).Elem()
}

func (o ProxypolicySrcintfOutput) ToProxypolicySrcintfOutput() ProxypolicySrcintfOutput {
	return o
}

func (o ProxypolicySrcintfOutput) ToProxypolicySrcintfOutputWithContext(ctx context.Context) ProxypolicySrcintfOutput {
	return o
}

// Interface name.
func (o ProxypolicySrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicySrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicySrcintf)(nil)).Elem()
}

func (o ProxypolicySrcintfArrayOutput) ToProxypolicySrcintfArrayOutput() ProxypolicySrcintfArrayOutput {
	return o
}

func (o ProxypolicySrcintfArrayOutput) ToProxypolicySrcintfArrayOutputWithContext(ctx context.Context) ProxypolicySrcintfArrayOutput {
	return o
}

func (o ProxypolicySrcintfArrayOutput) Index(i pulumi.IntInput) ProxypolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicySrcintf {
		return vs[0].([]ProxypolicySrcintf)[vs[1].(int)]
	}).(ProxypolicySrcintfOutput)
}

type ProxypolicyUser struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// ProxypolicyUserInput is an input type that accepts ProxypolicyUserArgs and ProxypolicyUserOutput values.
// You can construct a concrete instance of `ProxypolicyUserInput` via:
//
//	ProxypolicyUserArgs{...}
type ProxypolicyUserInput interface {
	pulumi.Input

	ToProxypolicyUserOutput() ProxypolicyUserOutput
	ToProxypolicyUserOutputWithContext(context.Context) ProxypolicyUserOutput
}

type ProxypolicyUserArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyUser)(nil)).Elem()
}

func (i ProxypolicyUserArgs) ToProxypolicyUserOutput() ProxypolicyUserOutput {
	return i.ToProxypolicyUserOutputWithContext(context.Background())
}

func (i ProxypolicyUserArgs) ToProxypolicyUserOutputWithContext(ctx context.Context) ProxypolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyUserOutput)
}

// ProxypolicyUserArrayInput is an input type that accepts ProxypolicyUserArray and ProxypolicyUserArrayOutput values.
// You can construct a concrete instance of `ProxypolicyUserArrayInput` via:
//
//	ProxypolicyUserArray{ ProxypolicyUserArgs{...} }
type ProxypolicyUserArrayInput interface {
	pulumi.Input

	ToProxypolicyUserArrayOutput() ProxypolicyUserArrayOutput
	ToProxypolicyUserArrayOutputWithContext(context.Context) ProxypolicyUserArrayOutput
}

type ProxypolicyUserArray []ProxypolicyUserInput

func (ProxypolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyUser)(nil)).Elem()
}

func (i ProxypolicyUserArray) ToProxypolicyUserArrayOutput() ProxypolicyUserArrayOutput {
	return i.ToProxypolicyUserArrayOutputWithContext(context.Background())
}

func (i ProxypolicyUserArray) ToProxypolicyUserArrayOutputWithContext(ctx context.Context) ProxypolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyUserArrayOutput)
}

type ProxypolicyUserOutput struct{ *pulumi.OutputState }

func (ProxypolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyUser)(nil)).Elem()
}

func (o ProxypolicyUserOutput) ToProxypolicyUserOutput() ProxypolicyUserOutput {
	return o
}

func (o ProxypolicyUserOutput) ToProxypolicyUserOutputWithContext(ctx context.Context) ProxypolicyUserOutput {
	return o
}

// Group name.
func (o ProxypolicyUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyUserArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyUser)(nil)).Elem()
}

func (o ProxypolicyUserArrayOutput) ToProxypolicyUserArrayOutput() ProxypolicyUserArrayOutput {
	return o
}

func (o ProxypolicyUserArrayOutput) ToProxypolicyUserArrayOutputWithContext(ctx context.Context) ProxypolicyUserArrayOutput {
	return o
}

func (o ProxypolicyUserArrayOutput) Index(i pulumi.IntInput) ProxypolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyUser {
		return vs[0].([]ProxypolicyUser)[vs[1].(int)]
	}).(ProxypolicyUserOutput)
}

type ProxypolicyZtnaEmsTag struct {
	// EMS Tag name.
	Name *string `pulumi:"name"`
}

// ProxypolicyZtnaEmsTagInput is an input type that accepts ProxypolicyZtnaEmsTagArgs and ProxypolicyZtnaEmsTagOutput values.
// You can construct a concrete instance of `ProxypolicyZtnaEmsTagInput` via:
//
//	ProxypolicyZtnaEmsTagArgs{...}
type ProxypolicyZtnaEmsTagInput interface {
	pulumi.Input

	ToProxypolicyZtnaEmsTagOutput() ProxypolicyZtnaEmsTagOutput
	ToProxypolicyZtnaEmsTagOutputWithContext(context.Context) ProxypolicyZtnaEmsTagOutput
}

type ProxypolicyZtnaEmsTagArgs struct {
	// EMS Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProxypolicyZtnaEmsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (i ProxypolicyZtnaEmsTagArgs) ToProxypolicyZtnaEmsTagOutput() ProxypolicyZtnaEmsTagOutput {
	return i.ToProxypolicyZtnaEmsTagOutputWithContext(context.Background())
}

func (i ProxypolicyZtnaEmsTagArgs) ToProxypolicyZtnaEmsTagOutputWithContext(ctx context.Context) ProxypolicyZtnaEmsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyZtnaEmsTagOutput)
}

// ProxypolicyZtnaEmsTagArrayInput is an input type that accepts ProxypolicyZtnaEmsTagArray and ProxypolicyZtnaEmsTagArrayOutput values.
// You can construct a concrete instance of `ProxypolicyZtnaEmsTagArrayInput` via:
//
//	ProxypolicyZtnaEmsTagArray{ ProxypolicyZtnaEmsTagArgs{...} }
type ProxypolicyZtnaEmsTagArrayInput interface {
	pulumi.Input

	ToProxypolicyZtnaEmsTagArrayOutput() ProxypolicyZtnaEmsTagArrayOutput
	ToProxypolicyZtnaEmsTagArrayOutputWithContext(context.Context) ProxypolicyZtnaEmsTagArrayOutput
}

type ProxypolicyZtnaEmsTagArray []ProxypolicyZtnaEmsTagInput

func (ProxypolicyZtnaEmsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (i ProxypolicyZtnaEmsTagArray) ToProxypolicyZtnaEmsTagArrayOutput() ProxypolicyZtnaEmsTagArrayOutput {
	return i.ToProxypolicyZtnaEmsTagArrayOutputWithContext(context.Background())
}

func (i ProxypolicyZtnaEmsTagArray) ToProxypolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) ProxypolicyZtnaEmsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicyZtnaEmsTagArrayOutput)
}

type ProxypolicyZtnaEmsTagOutput struct{ *pulumi.OutputState }

func (ProxypolicyZtnaEmsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (o ProxypolicyZtnaEmsTagOutput) ToProxypolicyZtnaEmsTagOutput() ProxypolicyZtnaEmsTagOutput {
	return o
}

func (o ProxypolicyZtnaEmsTagOutput) ToProxypolicyZtnaEmsTagOutputWithContext(ctx context.Context) ProxypolicyZtnaEmsTagOutput {
	return o
}

// EMS Tag name.
func (o ProxypolicyZtnaEmsTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxypolicyZtnaEmsTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProxypolicyZtnaEmsTagArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicyZtnaEmsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (o ProxypolicyZtnaEmsTagArrayOutput) ToProxypolicyZtnaEmsTagArrayOutput() ProxypolicyZtnaEmsTagArrayOutput {
	return o
}

func (o ProxypolicyZtnaEmsTagArrayOutput) ToProxypolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) ProxypolicyZtnaEmsTagArrayOutput {
	return o
}

func (o ProxypolicyZtnaEmsTagArrayOutput) Index(i pulumi.IntInput) ProxypolicyZtnaEmsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxypolicyZtnaEmsTag {
		return vs[0].([]ProxypolicyZtnaEmsTag)[vs[1].(int)]
	}).(ProxypolicyZtnaEmsTagOutput)
}

type RegionCity struct {
	// City ID.
	Id *int `pulumi:"id"`
}

// RegionCityInput is an input type that accepts RegionCityArgs and RegionCityOutput values.
// You can construct a concrete instance of `RegionCityInput` via:
//
//	RegionCityArgs{...}
type RegionCityInput interface {
	pulumi.Input

	ToRegionCityOutput() RegionCityOutput
	ToRegionCityOutputWithContext(context.Context) RegionCityOutput
}

type RegionCityArgs struct {
	// City ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (RegionCityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionCity)(nil)).Elem()
}

func (i RegionCityArgs) ToRegionCityOutput() RegionCityOutput {
	return i.ToRegionCityOutputWithContext(context.Background())
}

func (i RegionCityArgs) ToRegionCityOutputWithContext(ctx context.Context) RegionCityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionCityOutput)
}

// RegionCityArrayInput is an input type that accepts RegionCityArray and RegionCityArrayOutput values.
// You can construct a concrete instance of `RegionCityArrayInput` via:
//
//	RegionCityArray{ RegionCityArgs{...} }
type RegionCityArrayInput interface {
	pulumi.Input

	ToRegionCityArrayOutput() RegionCityArrayOutput
	ToRegionCityArrayOutputWithContext(context.Context) RegionCityArrayOutput
}

type RegionCityArray []RegionCityInput

func (RegionCityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionCity)(nil)).Elem()
}

func (i RegionCityArray) ToRegionCityArrayOutput() RegionCityArrayOutput {
	return i.ToRegionCityArrayOutputWithContext(context.Background())
}

func (i RegionCityArray) ToRegionCityArrayOutputWithContext(ctx context.Context) RegionCityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionCityArrayOutput)
}

type RegionCityOutput struct{ *pulumi.OutputState }

func (RegionCityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionCity)(nil)).Elem()
}

func (o RegionCityOutput) ToRegionCityOutput() RegionCityOutput {
	return o
}

func (o RegionCityOutput) ToRegionCityOutputWithContext(ctx context.Context) RegionCityOutput {
	return o
}

// City ID.
func (o RegionCityOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegionCity) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type RegionCityArrayOutput struct{ *pulumi.OutputState }

func (RegionCityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionCity)(nil)).Elem()
}

func (o RegionCityArrayOutput) ToRegionCityArrayOutput() RegionCityArrayOutput {
	return o
}

func (o RegionCityArrayOutput) ToRegionCityArrayOutputWithContext(ctx context.Context) RegionCityArrayOutput {
	return o
}

func (o RegionCityArrayOutput) Index(i pulumi.IntInput) RegionCityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegionCity {
		return vs[0].([]RegionCity)[vs[1].(int)]
	}).(RegionCityOutput)
}

type SecurityPolicyseqStatePolicyList struct {
	Action   *string `pulumi:"action"`
	Name     *string `pulumi:"name"`
	Policyid *string `pulumi:"policyid"`
}

// SecurityPolicyseqStatePolicyListInput is an input type that accepts SecurityPolicyseqStatePolicyListArgs and SecurityPolicyseqStatePolicyListOutput values.
// You can construct a concrete instance of `SecurityPolicyseqStatePolicyListInput` via:
//
//	SecurityPolicyseqStatePolicyListArgs{...}
type SecurityPolicyseqStatePolicyListInput interface {
	pulumi.Input

	ToSecurityPolicyseqStatePolicyListOutput() SecurityPolicyseqStatePolicyListOutput
	ToSecurityPolicyseqStatePolicyListOutputWithContext(context.Context) SecurityPolicyseqStatePolicyListOutput
}

type SecurityPolicyseqStatePolicyListArgs struct {
	Action   pulumi.StringPtrInput `pulumi:"action"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Policyid pulumi.StringPtrInput `pulumi:"policyid"`
}

func (SecurityPolicyseqStatePolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyseqStatePolicyList)(nil)).Elem()
}

func (i SecurityPolicyseqStatePolicyListArgs) ToSecurityPolicyseqStatePolicyListOutput() SecurityPolicyseqStatePolicyListOutput {
	return i.ToSecurityPolicyseqStatePolicyListOutputWithContext(context.Background())
}

func (i SecurityPolicyseqStatePolicyListArgs) ToSecurityPolicyseqStatePolicyListOutputWithContext(ctx context.Context) SecurityPolicyseqStatePolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyseqStatePolicyListOutput)
}

// SecurityPolicyseqStatePolicyListArrayInput is an input type that accepts SecurityPolicyseqStatePolicyListArray and SecurityPolicyseqStatePolicyListArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyseqStatePolicyListArrayInput` via:
//
//	SecurityPolicyseqStatePolicyListArray{ SecurityPolicyseqStatePolicyListArgs{...} }
type SecurityPolicyseqStatePolicyListArrayInput interface {
	pulumi.Input

	ToSecurityPolicyseqStatePolicyListArrayOutput() SecurityPolicyseqStatePolicyListArrayOutput
	ToSecurityPolicyseqStatePolicyListArrayOutputWithContext(context.Context) SecurityPolicyseqStatePolicyListArrayOutput
}

type SecurityPolicyseqStatePolicyListArray []SecurityPolicyseqStatePolicyListInput

func (SecurityPolicyseqStatePolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyseqStatePolicyList)(nil)).Elem()
}

func (i SecurityPolicyseqStatePolicyListArray) ToSecurityPolicyseqStatePolicyListArrayOutput() SecurityPolicyseqStatePolicyListArrayOutput {
	return i.ToSecurityPolicyseqStatePolicyListArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyseqStatePolicyListArray) ToSecurityPolicyseqStatePolicyListArrayOutputWithContext(ctx context.Context) SecurityPolicyseqStatePolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyseqStatePolicyListArrayOutput)
}

type SecurityPolicyseqStatePolicyListOutput struct{ *pulumi.OutputState }

func (SecurityPolicyseqStatePolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyseqStatePolicyList)(nil)).Elem()
}

func (o SecurityPolicyseqStatePolicyListOutput) ToSecurityPolicyseqStatePolicyListOutput() SecurityPolicyseqStatePolicyListOutput {
	return o
}

func (o SecurityPolicyseqStatePolicyListOutput) ToSecurityPolicyseqStatePolicyListOutputWithContext(ctx context.Context) SecurityPolicyseqStatePolicyListOutput {
	return o
}

func (o SecurityPolicyseqStatePolicyListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyseqStatePolicyList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SecurityPolicyseqStatePolicyListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyseqStatePolicyList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SecurityPolicyseqStatePolicyListOutput) Policyid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyseqStatePolicyList) *string { return v.Policyid }).(pulumi.StringPtrOutput)
}

type SecurityPolicyseqStatePolicyListArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyseqStatePolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyseqStatePolicyList)(nil)).Elem()
}

func (o SecurityPolicyseqStatePolicyListArrayOutput) ToSecurityPolicyseqStatePolicyListArrayOutput() SecurityPolicyseqStatePolicyListArrayOutput {
	return o
}

func (o SecurityPolicyseqStatePolicyListArrayOutput) ToSecurityPolicyseqStatePolicyListArrayOutputWithContext(ctx context.Context) SecurityPolicyseqStatePolicyListArrayOutput {
	return o
}

func (o SecurityPolicyseqStatePolicyListArrayOutput) Index(i pulumi.IntInput) SecurityPolicyseqStatePolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyseqStatePolicyList {
		return vs[0].([]SecurityPolicyseqStatePolicyList)[vs[1].(int)]
	}).(SecurityPolicyseqStatePolicyListOutput)
}

type SecuritypolicyAppCategory struct {
	// Category IDs.
	Id *int `pulumi:"id"`
}

// SecuritypolicyAppCategoryInput is an input type that accepts SecuritypolicyAppCategoryArgs and SecuritypolicyAppCategoryOutput values.
// You can construct a concrete instance of `SecuritypolicyAppCategoryInput` via:
//
//	SecuritypolicyAppCategoryArgs{...}
type SecuritypolicyAppCategoryInput interface {
	pulumi.Input

	ToSecuritypolicyAppCategoryOutput() SecuritypolicyAppCategoryOutput
	ToSecuritypolicyAppCategoryOutputWithContext(context.Context) SecuritypolicyAppCategoryOutput
}

type SecuritypolicyAppCategoryArgs struct {
	// Category IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SecuritypolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyAppCategory)(nil)).Elem()
}

func (i SecuritypolicyAppCategoryArgs) ToSecuritypolicyAppCategoryOutput() SecuritypolicyAppCategoryOutput {
	return i.ToSecuritypolicyAppCategoryOutputWithContext(context.Background())
}

func (i SecuritypolicyAppCategoryArgs) ToSecuritypolicyAppCategoryOutputWithContext(ctx context.Context) SecuritypolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyAppCategoryOutput)
}

// SecuritypolicyAppCategoryArrayInput is an input type that accepts SecuritypolicyAppCategoryArray and SecuritypolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyAppCategoryArrayInput` via:
//
//	SecuritypolicyAppCategoryArray{ SecuritypolicyAppCategoryArgs{...} }
type SecuritypolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToSecuritypolicyAppCategoryArrayOutput() SecuritypolicyAppCategoryArrayOutput
	ToSecuritypolicyAppCategoryArrayOutputWithContext(context.Context) SecuritypolicyAppCategoryArrayOutput
}

type SecuritypolicyAppCategoryArray []SecuritypolicyAppCategoryInput

func (SecuritypolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyAppCategory)(nil)).Elem()
}

func (i SecuritypolicyAppCategoryArray) ToSecuritypolicyAppCategoryArrayOutput() SecuritypolicyAppCategoryArrayOutput {
	return i.ToSecuritypolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyAppCategoryArray) ToSecuritypolicyAppCategoryArrayOutputWithContext(ctx context.Context) SecuritypolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyAppCategoryArrayOutput)
}

type SecuritypolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (SecuritypolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyAppCategory)(nil)).Elem()
}

func (o SecuritypolicyAppCategoryOutput) ToSecuritypolicyAppCategoryOutput() SecuritypolicyAppCategoryOutput {
	return o
}

func (o SecuritypolicyAppCategoryOutput) ToSecuritypolicyAppCategoryOutputWithContext(ctx context.Context) SecuritypolicyAppCategoryOutput {
	return o
}

// Category IDs.
func (o SecuritypolicyAppCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecuritypolicyAppCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SecuritypolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyAppCategory)(nil)).Elem()
}

func (o SecuritypolicyAppCategoryArrayOutput) ToSecuritypolicyAppCategoryArrayOutput() SecuritypolicyAppCategoryArrayOutput {
	return o
}

func (o SecuritypolicyAppCategoryArrayOutput) ToSecuritypolicyAppCategoryArrayOutputWithContext(ctx context.Context) SecuritypolicyAppCategoryArrayOutput {
	return o
}

func (o SecuritypolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) SecuritypolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyAppCategory {
		return vs[0].([]SecuritypolicyAppCategory)[vs[1].(int)]
	}).(SecuritypolicyAppCategoryOutput)
}

type SecuritypolicyAppGroup struct {
	// Application group names.
	Name *string `pulumi:"name"`
}

// SecuritypolicyAppGroupInput is an input type that accepts SecuritypolicyAppGroupArgs and SecuritypolicyAppGroupOutput values.
// You can construct a concrete instance of `SecuritypolicyAppGroupInput` via:
//
//	SecuritypolicyAppGroupArgs{...}
type SecuritypolicyAppGroupInput interface {
	pulumi.Input

	ToSecuritypolicyAppGroupOutput() SecuritypolicyAppGroupOutput
	ToSecuritypolicyAppGroupOutputWithContext(context.Context) SecuritypolicyAppGroupOutput
}

type SecuritypolicyAppGroupArgs struct {
	// Application group names.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyAppGroup)(nil)).Elem()
}

func (i SecuritypolicyAppGroupArgs) ToSecuritypolicyAppGroupOutput() SecuritypolicyAppGroupOutput {
	return i.ToSecuritypolicyAppGroupOutputWithContext(context.Background())
}

func (i SecuritypolicyAppGroupArgs) ToSecuritypolicyAppGroupOutputWithContext(ctx context.Context) SecuritypolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyAppGroupOutput)
}

// SecuritypolicyAppGroupArrayInput is an input type that accepts SecuritypolicyAppGroupArray and SecuritypolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyAppGroupArrayInput` via:
//
//	SecuritypolicyAppGroupArray{ SecuritypolicyAppGroupArgs{...} }
type SecuritypolicyAppGroupArrayInput interface {
	pulumi.Input

	ToSecuritypolicyAppGroupArrayOutput() SecuritypolicyAppGroupArrayOutput
	ToSecuritypolicyAppGroupArrayOutputWithContext(context.Context) SecuritypolicyAppGroupArrayOutput
}

type SecuritypolicyAppGroupArray []SecuritypolicyAppGroupInput

func (SecuritypolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyAppGroup)(nil)).Elem()
}

func (i SecuritypolicyAppGroupArray) ToSecuritypolicyAppGroupArrayOutput() SecuritypolicyAppGroupArrayOutput {
	return i.ToSecuritypolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyAppGroupArray) ToSecuritypolicyAppGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyAppGroupArrayOutput)
}

type SecuritypolicyAppGroupOutput struct{ *pulumi.OutputState }

func (SecuritypolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyAppGroup)(nil)).Elem()
}

func (o SecuritypolicyAppGroupOutput) ToSecuritypolicyAppGroupOutput() SecuritypolicyAppGroupOutput {
	return o
}

func (o SecuritypolicyAppGroupOutput) ToSecuritypolicyAppGroupOutputWithContext(ctx context.Context) SecuritypolicyAppGroupOutput {
	return o
}

// Application group names.
func (o SecuritypolicyAppGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyAppGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyAppGroup)(nil)).Elem()
}

func (o SecuritypolicyAppGroupArrayOutput) ToSecuritypolicyAppGroupArrayOutput() SecuritypolicyAppGroupArrayOutput {
	return o
}

func (o SecuritypolicyAppGroupArrayOutput) ToSecuritypolicyAppGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyAppGroupArrayOutput {
	return o
}

func (o SecuritypolicyAppGroupArrayOutput) Index(i pulumi.IntInput) SecuritypolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyAppGroup {
		return vs[0].([]SecuritypolicyAppGroup)[vs[1].(int)]
	}).(SecuritypolicyAppGroupOutput)
}

type SecuritypolicyApplication struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// SecuritypolicyApplicationInput is an input type that accepts SecuritypolicyApplicationArgs and SecuritypolicyApplicationOutput values.
// You can construct a concrete instance of `SecuritypolicyApplicationInput` via:
//
//	SecuritypolicyApplicationArgs{...}
type SecuritypolicyApplicationInput interface {
	pulumi.Input

	ToSecuritypolicyApplicationOutput() SecuritypolicyApplicationOutput
	ToSecuritypolicyApplicationOutputWithContext(context.Context) SecuritypolicyApplicationOutput
}

type SecuritypolicyApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SecuritypolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyApplication)(nil)).Elem()
}

func (i SecuritypolicyApplicationArgs) ToSecuritypolicyApplicationOutput() SecuritypolicyApplicationOutput {
	return i.ToSecuritypolicyApplicationOutputWithContext(context.Background())
}

func (i SecuritypolicyApplicationArgs) ToSecuritypolicyApplicationOutputWithContext(ctx context.Context) SecuritypolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyApplicationOutput)
}

// SecuritypolicyApplicationArrayInput is an input type that accepts SecuritypolicyApplicationArray and SecuritypolicyApplicationArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyApplicationArrayInput` via:
//
//	SecuritypolicyApplicationArray{ SecuritypolicyApplicationArgs{...} }
type SecuritypolicyApplicationArrayInput interface {
	pulumi.Input

	ToSecuritypolicyApplicationArrayOutput() SecuritypolicyApplicationArrayOutput
	ToSecuritypolicyApplicationArrayOutputWithContext(context.Context) SecuritypolicyApplicationArrayOutput
}

type SecuritypolicyApplicationArray []SecuritypolicyApplicationInput

func (SecuritypolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyApplication)(nil)).Elem()
}

func (i SecuritypolicyApplicationArray) ToSecuritypolicyApplicationArrayOutput() SecuritypolicyApplicationArrayOutput {
	return i.ToSecuritypolicyApplicationArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyApplicationArray) ToSecuritypolicyApplicationArrayOutputWithContext(ctx context.Context) SecuritypolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyApplicationArrayOutput)
}

type SecuritypolicyApplicationOutput struct{ *pulumi.OutputState }

func (SecuritypolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyApplication)(nil)).Elem()
}

func (o SecuritypolicyApplicationOutput) ToSecuritypolicyApplicationOutput() SecuritypolicyApplicationOutput {
	return o
}

func (o SecuritypolicyApplicationOutput) ToSecuritypolicyApplicationOutputWithContext(ctx context.Context) SecuritypolicyApplicationOutput {
	return o
}

// Application IDs.
func (o SecuritypolicyApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecuritypolicyApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SecuritypolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyApplication)(nil)).Elem()
}

func (o SecuritypolicyApplicationArrayOutput) ToSecuritypolicyApplicationArrayOutput() SecuritypolicyApplicationArrayOutput {
	return o
}

func (o SecuritypolicyApplicationArrayOutput) ToSecuritypolicyApplicationArrayOutputWithContext(ctx context.Context) SecuritypolicyApplicationArrayOutput {
	return o
}

func (o SecuritypolicyApplicationArrayOutput) Index(i pulumi.IntInput) SecuritypolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyApplication {
		return vs[0].([]SecuritypolicyApplication)[vs[1].(int)]
	}).(SecuritypolicyApplicationOutput)
}

type SecuritypolicyDstaddr4 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyDstaddr4Input is an input type that accepts SecuritypolicyDstaddr4Args and SecuritypolicyDstaddr4Output values.
// You can construct a concrete instance of `SecuritypolicyDstaddr4Input` via:
//
//	SecuritypolicyDstaddr4Args{...}
type SecuritypolicyDstaddr4Input interface {
	pulumi.Input

	ToSecuritypolicyDstaddr4Output() SecuritypolicyDstaddr4Output
	ToSecuritypolicyDstaddr4OutputWithContext(context.Context) SecuritypolicyDstaddr4Output
}

type SecuritypolicyDstaddr4Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyDstaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyDstaddr4)(nil)).Elem()
}

func (i SecuritypolicyDstaddr4Args) ToSecuritypolicyDstaddr4Output() SecuritypolicyDstaddr4Output {
	return i.ToSecuritypolicyDstaddr4OutputWithContext(context.Background())
}

func (i SecuritypolicyDstaddr4Args) ToSecuritypolicyDstaddr4OutputWithContext(ctx context.Context) SecuritypolicyDstaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyDstaddr4Output)
}

// SecuritypolicyDstaddr4ArrayInput is an input type that accepts SecuritypolicyDstaddr4Array and SecuritypolicyDstaddr4ArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyDstaddr4ArrayInput` via:
//
//	SecuritypolicyDstaddr4Array{ SecuritypolicyDstaddr4Args{...} }
type SecuritypolicyDstaddr4ArrayInput interface {
	pulumi.Input

	ToSecuritypolicyDstaddr4ArrayOutput() SecuritypolicyDstaddr4ArrayOutput
	ToSecuritypolicyDstaddr4ArrayOutputWithContext(context.Context) SecuritypolicyDstaddr4ArrayOutput
}

type SecuritypolicyDstaddr4Array []SecuritypolicyDstaddr4Input

func (SecuritypolicyDstaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyDstaddr4)(nil)).Elem()
}

func (i SecuritypolicyDstaddr4Array) ToSecuritypolicyDstaddr4ArrayOutput() SecuritypolicyDstaddr4ArrayOutput {
	return i.ToSecuritypolicyDstaddr4ArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyDstaddr4Array) ToSecuritypolicyDstaddr4ArrayOutputWithContext(ctx context.Context) SecuritypolicyDstaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyDstaddr4ArrayOutput)
}

type SecuritypolicyDstaddr4Output struct{ *pulumi.OutputState }

func (SecuritypolicyDstaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyDstaddr4)(nil)).Elem()
}

func (o SecuritypolicyDstaddr4Output) ToSecuritypolicyDstaddr4Output() SecuritypolicyDstaddr4Output {
	return o
}

func (o SecuritypolicyDstaddr4Output) ToSecuritypolicyDstaddr4OutputWithContext(ctx context.Context) SecuritypolicyDstaddr4Output {
	return o
}

// Policy name.
func (o SecuritypolicyDstaddr4Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyDstaddr4) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyDstaddr4ArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyDstaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyDstaddr4)(nil)).Elem()
}

func (o SecuritypolicyDstaddr4ArrayOutput) ToSecuritypolicyDstaddr4ArrayOutput() SecuritypolicyDstaddr4ArrayOutput {
	return o
}

func (o SecuritypolicyDstaddr4ArrayOutput) ToSecuritypolicyDstaddr4ArrayOutputWithContext(ctx context.Context) SecuritypolicyDstaddr4ArrayOutput {
	return o
}

func (o SecuritypolicyDstaddr4ArrayOutput) Index(i pulumi.IntInput) SecuritypolicyDstaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyDstaddr4 {
		return vs[0].([]SecuritypolicyDstaddr4)[vs[1].(int)]
	}).(SecuritypolicyDstaddr4Output)
}

type SecuritypolicyDstaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyDstaddr6Input is an input type that accepts SecuritypolicyDstaddr6Args and SecuritypolicyDstaddr6Output values.
// You can construct a concrete instance of `SecuritypolicyDstaddr6Input` via:
//
//	SecuritypolicyDstaddr6Args{...}
type SecuritypolicyDstaddr6Input interface {
	pulumi.Input

	ToSecuritypolicyDstaddr6Output() SecuritypolicyDstaddr6Output
	ToSecuritypolicyDstaddr6OutputWithContext(context.Context) SecuritypolicyDstaddr6Output
}

type SecuritypolicyDstaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyDstaddr6)(nil)).Elem()
}

func (i SecuritypolicyDstaddr6Args) ToSecuritypolicyDstaddr6Output() SecuritypolicyDstaddr6Output {
	return i.ToSecuritypolicyDstaddr6OutputWithContext(context.Background())
}

func (i SecuritypolicyDstaddr6Args) ToSecuritypolicyDstaddr6OutputWithContext(ctx context.Context) SecuritypolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyDstaddr6Output)
}

// SecuritypolicyDstaddr6ArrayInput is an input type that accepts SecuritypolicyDstaddr6Array and SecuritypolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyDstaddr6ArrayInput` via:
//
//	SecuritypolicyDstaddr6Array{ SecuritypolicyDstaddr6Args{...} }
type SecuritypolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToSecuritypolicyDstaddr6ArrayOutput() SecuritypolicyDstaddr6ArrayOutput
	ToSecuritypolicyDstaddr6ArrayOutputWithContext(context.Context) SecuritypolicyDstaddr6ArrayOutput
}

type SecuritypolicyDstaddr6Array []SecuritypolicyDstaddr6Input

func (SecuritypolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyDstaddr6)(nil)).Elem()
}

func (i SecuritypolicyDstaddr6Array) ToSecuritypolicyDstaddr6ArrayOutput() SecuritypolicyDstaddr6ArrayOutput {
	return i.ToSecuritypolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyDstaddr6Array) ToSecuritypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) SecuritypolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyDstaddr6ArrayOutput)
}

type SecuritypolicyDstaddr6Output struct{ *pulumi.OutputState }

func (SecuritypolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyDstaddr6)(nil)).Elem()
}

func (o SecuritypolicyDstaddr6Output) ToSecuritypolicyDstaddr6Output() SecuritypolicyDstaddr6Output {
	return o
}

func (o SecuritypolicyDstaddr6Output) ToSecuritypolicyDstaddr6OutputWithContext(ctx context.Context) SecuritypolicyDstaddr6Output {
	return o
}

// Policy name.
func (o SecuritypolicyDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyDstaddr6)(nil)).Elem()
}

func (o SecuritypolicyDstaddr6ArrayOutput) ToSecuritypolicyDstaddr6ArrayOutput() SecuritypolicyDstaddr6ArrayOutput {
	return o
}

func (o SecuritypolicyDstaddr6ArrayOutput) ToSecuritypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) SecuritypolicyDstaddr6ArrayOutput {
	return o
}

func (o SecuritypolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) SecuritypolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyDstaddr6 {
		return vs[0].([]SecuritypolicyDstaddr6)[vs[1].(int)]
	}).(SecuritypolicyDstaddr6Output)
}

type SecuritypolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyDstaddrInput is an input type that accepts SecuritypolicyDstaddrArgs and SecuritypolicyDstaddrOutput values.
// You can construct a concrete instance of `SecuritypolicyDstaddrInput` via:
//
//	SecuritypolicyDstaddrArgs{...}
type SecuritypolicyDstaddrInput interface {
	pulumi.Input

	ToSecuritypolicyDstaddrOutput() SecuritypolicyDstaddrOutput
	ToSecuritypolicyDstaddrOutputWithContext(context.Context) SecuritypolicyDstaddrOutput
}

type SecuritypolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyDstaddr)(nil)).Elem()
}

func (i SecuritypolicyDstaddrArgs) ToSecuritypolicyDstaddrOutput() SecuritypolicyDstaddrOutput {
	return i.ToSecuritypolicyDstaddrOutputWithContext(context.Background())
}

func (i SecuritypolicyDstaddrArgs) ToSecuritypolicyDstaddrOutputWithContext(ctx context.Context) SecuritypolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyDstaddrOutput)
}

// SecuritypolicyDstaddrArrayInput is an input type that accepts SecuritypolicyDstaddrArray and SecuritypolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyDstaddrArrayInput` via:
//
//	SecuritypolicyDstaddrArray{ SecuritypolicyDstaddrArgs{...} }
type SecuritypolicyDstaddrArrayInput interface {
	pulumi.Input

	ToSecuritypolicyDstaddrArrayOutput() SecuritypolicyDstaddrArrayOutput
	ToSecuritypolicyDstaddrArrayOutputWithContext(context.Context) SecuritypolicyDstaddrArrayOutput
}

type SecuritypolicyDstaddrArray []SecuritypolicyDstaddrInput

func (SecuritypolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyDstaddr)(nil)).Elem()
}

func (i SecuritypolicyDstaddrArray) ToSecuritypolicyDstaddrArrayOutput() SecuritypolicyDstaddrArrayOutput {
	return i.ToSecuritypolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyDstaddrArray) ToSecuritypolicyDstaddrArrayOutputWithContext(ctx context.Context) SecuritypolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyDstaddrArrayOutput)
}

type SecuritypolicyDstaddrOutput struct{ *pulumi.OutputState }

func (SecuritypolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyDstaddr)(nil)).Elem()
}

func (o SecuritypolicyDstaddrOutput) ToSecuritypolicyDstaddrOutput() SecuritypolicyDstaddrOutput {
	return o
}

func (o SecuritypolicyDstaddrOutput) ToSecuritypolicyDstaddrOutputWithContext(ctx context.Context) SecuritypolicyDstaddrOutput {
	return o
}

// Address name.
func (o SecuritypolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyDstaddr)(nil)).Elem()
}

func (o SecuritypolicyDstaddrArrayOutput) ToSecuritypolicyDstaddrArrayOutput() SecuritypolicyDstaddrArrayOutput {
	return o
}

func (o SecuritypolicyDstaddrArrayOutput) ToSecuritypolicyDstaddrArrayOutputWithContext(ctx context.Context) SecuritypolicyDstaddrArrayOutput {
	return o
}

func (o SecuritypolicyDstaddrArrayOutput) Index(i pulumi.IntInput) SecuritypolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyDstaddr {
		return vs[0].([]SecuritypolicyDstaddr)[vs[1].(int)]
	}).(SecuritypolicyDstaddrOutput)
}

type SecuritypolicyDstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyDstintfInput is an input type that accepts SecuritypolicyDstintfArgs and SecuritypolicyDstintfOutput values.
// You can construct a concrete instance of `SecuritypolicyDstintfInput` via:
//
//	SecuritypolicyDstintfArgs{...}
type SecuritypolicyDstintfInput interface {
	pulumi.Input

	ToSecuritypolicyDstintfOutput() SecuritypolicyDstintfOutput
	ToSecuritypolicyDstintfOutputWithContext(context.Context) SecuritypolicyDstintfOutput
}

type SecuritypolicyDstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyDstintf)(nil)).Elem()
}

func (i SecuritypolicyDstintfArgs) ToSecuritypolicyDstintfOutput() SecuritypolicyDstintfOutput {
	return i.ToSecuritypolicyDstintfOutputWithContext(context.Background())
}

func (i SecuritypolicyDstintfArgs) ToSecuritypolicyDstintfOutputWithContext(ctx context.Context) SecuritypolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyDstintfOutput)
}

// SecuritypolicyDstintfArrayInput is an input type that accepts SecuritypolicyDstintfArray and SecuritypolicyDstintfArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyDstintfArrayInput` via:
//
//	SecuritypolicyDstintfArray{ SecuritypolicyDstintfArgs{...} }
type SecuritypolicyDstintfArrayInput interface {
	pulumi.Input

	ToSecuritypolicyDstintfArrayOutput() SecuritypolicyDstintfArrayOutput
	ToSecuritypolicyDstintfArrayOutputWithContext(context.Context) SecuritypolicyDstintfArrayOutput
}

type SecuritypolicyDstintfArray []SecuritypolicyDstintfInput

func (SecuritypolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyDstintf)(nil)).Elem()
}

func (i SecuritypolicyDstintfArray) ToSecuritypolicyDstintfArrayOutput() SecuritypolicyDstintfArrayOutput {
	return i.ToSecuritypolicyDstintfArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyDstintfArray) ToSecuritypolicyDstintfArrayOutputWithContext(ctx context.Context) SecuritypolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyDstintfArrayOutput)
}

type SecuritypolicyDstintfOutput struct{ *pulumi.OutputState }

func (SecuritypolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyDstintf)(nil)).Elem()
}

func (o SecuritypolicyDstintfOutput) ToSecuritypolicyDstintfOutput() SecuritypolicyDstintfOutput {
	return o
}

func (o SecuritypolicyDstintfOutput) ToSecuritypolicyDstintfOutputWithContext(ctx context.Context) SecuritypolicyDstintfOutput {
	return o
}

// Interface name.
func (o SecuritypolicyDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyDstintf)(nil)).Elem()
}

func (o SecuritypolicyDstintfArrayOutput) ToSecuritypolicyDstintfArrayOutput() SecuritypolicyDstintfArrayOutput {
	return o
}

func (o SecuritypolicyDstintfArrayOutput) ToSecuritypolicyDstintfArrayOutputWithContext(ctx context.Context) SecuritypolicyDstintfArrayOutput {
	return o
}

func (o SecuritypolicyDstintfArrayOutput) Index(i pulumi.IntInput) SecuritypolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyDstintf {
		return vs[0].([]SecuritypolicyDstintf)[vs[1].(int)]
	}).(SecuritypolicyDstintfOutput)
}

type SecuritypolicyFssoGroup struct {
	// Names of FSSO groups.
	Name *string `pulumi:"name"`
}

// SecuritypolicyFssoGroupInput is an input type that accepts SecuritypolicyFssoGroupArgs and SecuritypolicyFssoGroupOutput values.
// You can construct a concrete instance of `SecuritypolicyFssoGroupInput` via:
//
//	SecuritypolicyFssoGroupArgs{...}
type SecuritypolicyFssoGroupInput interface {
	pulumi.Input

	ToSecuritypolicyFssoGroupOutput() SecuritypolicyFssoGroupOutput
	ToSecuritypolicyFssoGroupOutputWithContext(context.Context) SecuritypolicyFssoGroupOutput
}

type SecuritypolicyFssoGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyFssoGroup)(nil)).Elem()
}

func (i SecuritypolicyFssoGroupArgs) ToSecuritypolicyFssoGroupOutput() SecuritypolicyFssoGroupOutput {
	return i.ToSecuritypolicyFssoGroupOutputWithContext(context.Background())
}

func (i SecuritypolicyFssoGroupArgs) ToSecuritypolicyFssoGroupOutputWithContext(ctx context.Context) SecuritypolicyFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyFssoGroupOutput)
}

// SecuritypolicyFssoGroupArrayInput is an input type that accepts SecuritypolicyFssoGroupArray and SecuritypolicyFssoGroupArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyFssoGroupArrayInput` via:
//
//	SecuritypolicyFssoGroupArray{ SecuritypolicyFssoGroupArgs{...} }
type SecuritypolicyFssoGroupArrayInput interface {
	pulumi.Input

	ToSecuritypolicyFssoGroupArrayOutput() SecuritypolicyFssoGroupArrayOutput
	ToSecuritypolicyFssoGroupArrayOutputWithContext(context.Context) SecuritypolicyFssoGroupArrayOutput
}

type SecuritypolicyFssoGroupArray []SecuritypolicyFssoGroupInput

func (SecuritypolicyFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyFssoGroup)(nil)).Elem()
}

func (i SecuritypolicyFssoGroupArray) ToSecuritypolicyFssoGroupArrayOutput() SecuritypolicyFssoGroupArrayOutput {
	return i.ToSecuritypolicyFssoGroupArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyFssoGroupArray) ToSecuritypolicyFssoGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyFssoGroupArrayOutput)
}

type SecuritypolicyFssoGroupOutput struct{ *pulumi.OutputState }

func (SecuritypolicyFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyFssoGroup)(nil)).Elem()
}

func (o SecuritypolicyFssoGroupOutput) ToSecuritypolicyFssoGroupOutput() SecuritypolicyFssoGroupOutput {
	return o
}

func (o SecuritypolicyFssoGroupOutput) ToSecuritypolicyFssoGroupOutputWithContext(ctx context.Context) SecuritypolicyFssoGroupOutput {
	return o
}

// Names of FSSO groups.
func (o SecuritypolicyFssoGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyFssoGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyFssoGroup)(nil)).Elem()
}

func (o SecuritypolicyFssoGroupArrayOutput) ToSecuritypolicyFssoGroupArrayOutput() SecuritypolicyFssoGroupArrayOutput {
	return o
}

func (o SecuritypolicyFssoGroupArrayOutput) ToSecuritypolicyFssoGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyFssoGroupArrayOutput {
	return o
}

func (o SecuritypolicyFssoGroupArrayOutput) Index(i pulumi.IntInput) SecuritypolicyFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyFssoGroup {
		return vs[0].([]SecuritypolicyFssoGroup)[vs[1].(int)]
	}).(SecuritypolicyFssoGroupOutput)
}

type SecuritypolicyGroup struct {
	// User group name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyGroupInput is an input type that accepts SecuritypolicyGroupArgs and SecuritypolicyGroupOutput values.
// You can construct a concrete instance of `SecuritypolicyGroupInput` via:
//
//	SecuritypolicyGroupArgs{...}
type SecuritypolicyGroupInput interface {
	pulumi.Input

	ToSecuritypolicyGroupOutput() SecuritypolicyGroupOutput
	ToSecuritypolicyGroupOutputWithContext(context.Context) SecuritypolicyGroupOutput
}

type SecuritypolicyGroupArgs struct {
	// User group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyGroup)(nil)).Elem()
}

func (i SecuritypolicyGroupArgs) ToSecuritypolicyGroupOutput() SecuritypolicyGroupOutput {
	return i.ToSecuritypolicyGroupOutputWithContext(context.Background())
}

func (i SecuritypolicyGroupArgs) ToSecuritypolicyGroupOutputWithContext(ctx context.Context) SecuritypolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyGroupOutput)
}

// SecuritypolicyGroupArrayInput is an input type that accepts SecuritypolicyGroupArray and SecuritypolicyGroupArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyGroupArrayInput` via:
//
//	SecuritypolicyGroupArray{ SecuritypolicyGroupArgs{...} }
type SecuritypolicyGroupArrayInput interface {
	pulumi.Input

	ToSecuritypolicyGroupArrayOutput() SecuritypolicyGroupArrayOutput
	ToSecuritypolicyGroupArrayOutputWithContext(context.Context) SecuritypolicyGroupArrayOutput
}

type SecuritypolicyGroupArray []SecuritypolicyGroupInput

func (SecuritypolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyGroup)(nil)).Elem()
}

func (i SecuritypolicyGroupArray) ToSecuritypolicyGroupArrayOutput() SecuritypolicyGroupArrayOutput {
	return i.ToSecuritypolicyGroupArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyGroupArray) ToSecuritypolicyGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyGroupArrayOutput)
}

type SecuritypolicyGroupOutput struct{ *pulumi.OutputState }

func (SecuritypolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyGroup)(nil)).Elem()
}

func (o SecuritypolicyGroupOutput) ToSecuritypolicyGroupOutput() SecuritypolicyGroupOutput {
	return o
}

func (o SecuritypolicyGroupOutput) ToSecuritypolicyGroupOutputWithContext(ctx context.Context) SecuritypolicyGroupOutput {
	return o
}

// User group name.
func (o SecuritypolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyGroup)(nil)).Elem()
}

func (o SecuritypolicyGroupArrayOutput) ToSecuritypolicyGroupArrayOutput() SecuritypolicyGroupArrayOutput {
	return o
}

func (o SecuritypolicyGroupArrayOutput) ToSecuritypolicyGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyGroupArrayOutput {
	return o
}

func (o SecuritypolicyGroupArrayOutput) Index(i pulumi.IntInput) SecuritypolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyGroup {
		return vs[0].([]SecuritypolicyGroup)[vs[1].(int)]
	}).(SecuritypolicyGroupOutput)
}

type SecuritypolicyInternetService6Custom struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetService6CustomInput is an input type that accepts SecuritypolicyInternetService6CustomArgs and SecuritypolicyInternetService6CustomOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6CustomInput` via:
//
//	SecuritypolicyInternetService6CustomArgs{...}
type SecuritypolicyInternetService6CustomInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6CustomOutput() SecuritypolicyInternetService6CustomOutput
	ToSecuritypolicyInternetService6CustomOutputWithContext(context.Context) SecuritypolicyInternetService6CustomOutput
}

type SecuritypolicyInternetService6CustomArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetService6CustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6Custom)(nil)).Elem()
}

func (i SecuritypolicyInternetService6CustomArgs) ToSecuritypolicyInternetService6CustomOutput() SecuritypolicyInternetService6CustomOutput {
	return i.ToSecuritypolicyInternetService6CustomOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6CustomArgs) ToSecuritypolicyInternetService6CustomOutputWithContext(ctx context.Context) SecuritypolicyInternetService6CustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6CustomOutput)
}

// SecuritypolicyInternetService6CustomArrayInput is an input type that accepts SecuritypolicyInternetService6CustomArray and SecuritypolicyInternetService6CustomArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6CustomArrayInput` via:
//
//	SecuritypolicyInternetService6CustomArray{ SecuritypolicyInternetService6CustomArgs{...} }
type SecuritypolicyInternetService6CustomArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6CustomArrayOutput() SecuritypolicyInternetService6CustomArrayOutput
	ToSecuritypolicyInternetService6CustomArrayOutputWithContext(context.Context) SecuritypolicyInternetService6CustomArrayOutput
}

type SecuritypolicyInternetService6CustomArray []SecuritypolicyInternetService6CustomInput

func (SecuritypolicyInternetService6CustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6Custom)(nil)).Elem()
}

func (i SecuritypolicyInternetService6CustomArray) ToSecuritypolicyInternetService6CustomArrayOutput() SecuritypolicyInternetService6CustomArrayOutput {
	return i.ToSecuritypolicyInternetService6CustomArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6CustomArray) ToSecuritypolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6CustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6CustomArrayOutput)
}

type SecuritypolicyInternetService6CustomOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6CustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6Custom)(nil)).Elem()
}

func (o SecuritypolicyInternetService6CustomOutput) ToSecuritypolicyInternetService6CustomOutput() SecuritypolicyInternetService6CustomOutput {
	return o
}

func (o SecuritypolicyInternetService6CustomOutput) ToSecuritypolicyInternetService6CustomOutputWithContext(ctx context.Context) SecuritypolicyInternetService6CustomOutput {
	return o
}

// Policy name.
func (o SecuritypolicyInternetService6CustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetService6Custom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetService6CustomArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6CustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6Custom)(nil)).Elem()
}

func (o SecuritypolicyInternetService6CustomArrayOutput) ToSecuritypolicyInternetService6CustomArrayOutput() SecuritypolicyInternetService6CustomArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6CustomArrayOutput) ToSecuritypolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6CustomArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6CustomArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetService6CustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetService6Custom {
		return vs[0].([]SecuritypolicyInternetService6Custom)[vs[1].(int)]
	}).(SecuritypolicyInternetService6CustomOutput)
}

type SecuritypolicyInternetService6CustomGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetService6CustomGroupInput is an input type that accepts SecuritypolicyInternetService6CustomGroupArgs and SecuritypolicyInternetService6CustomGroupOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6CustomGroupInput` via:
//
//	SecuritypolicyInternetService6CustomGroupArgs{...}
type SecuritypolicyInternetService6CustomGroupInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6CustomGroupOutput() SecuritypolicyInternetService6CustomGroupOutput
	ToSecuritypolicyInternetService6CustomGroupOutputWithContext(context.Context) SecuritypolicyInternetService6CustomGroupOutput
}

type SecuritypolicyInternetService6CustomGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetService6CustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetService6CustomGroupArgs) ToSecuritypolicyInternetService6CustomGroupOutput() SecuritypolicyInternetService6CustomGroupOutput {
	return i.ToSecuritypolicyInternetService6CustomGroupOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6CustomGroupArgs) ToSecuritypolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetService6CustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6CustomGroupOutput)
}

// SecuritypolicyInternetService6CustomGroupArrayInput is an input type that accepts SecuritypolicyInternetService6CustomGroupArray and SecuritypolicyInternetService6CustomGroupArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6CustomGroupArrayInput` via:
//
//	SecuritypolicyInternetService6CustomGroupArray{ SecuritypolicyInternetService6CustomGroupArgs{...} }
type SecuritypolicyInternetService6CustomGroupArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6CustomGroupArrayOutput() SecuritypolicyInternetService6CustomGroupArrayOutput
	ToSecuritypolicyInternetService6CustomGroupArrayOutputWithContext(context.Context) SecuritypolicyInternetService6CustomGroupArrayOutput
}

type SecuritypolicyInternetService6CustomGroupArray []SecuritypolicyInternetService6CustomGroupInput

func (SecuritypolicyInternetService6CustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetService6CustomGroupArray) ToSecuritypolicyInternetService6CustomGroupArrayOutput() SecuritypolicyInternetService6CustomGroupArrayOutput {
	return i.ToSecuritypolicyInternetService6CustomGroupArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6CustomGroupArray) ToSecuritypolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6CustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6CustomGroupArrayOutput)
}

type SecuritypolicyInternetService6CustomGroupOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6CustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetService6CustomGroupOutput) ToSecuritypolicyInternetService6CustomGroupOutput() SecuritypolicyInternetService6CustomGroupOutput {
	return o
}

func (o SecuritypolicyInternetService6CustomGroupOutput) ToSecuritypolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetService6CustomGroupOutput {
	return o
}

// Policy name.
func (o SecuritypolicyInternetService6CustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetService6CustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetService6CustomGroupArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6CustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetService6CustomGroupArrayOutput) ToSecuritypolicyInternetService6CustomGroupArrayOutput() SecuritypolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6CustomGroupArrayOutput) ToSecuritypolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6CustomGroupArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetService6CustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetService6CustomGroup {
		return vs[0].([]SecuritypolicyInternetService6CustomGroup)[vs[1].(int)]
	}).(SecuritypolicyInternetService6CustomGroupOutput)
}

type SecuritypolicyInternetService6Group struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetService6GroupInput is an input type that accepts SecuritypolicyInternetService6GroupArgs and SecuritypolicyInternetService6GroupOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6GroupInput` via:
//
//	SecuritypolicyInternetService6GroupArgs{...}
type SecuritypolicyInternetService6GroupInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6GroupOutput() SecuritypolicyInternetService6GroupOutput
	ToSecuritypolicyInternetService6GroupOutputWithContext(context.Context) SecuritypolicyInternetService6GroupOutput
}

type SecuritypolicyInternetService6GroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetService6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6Group)(nil)).Elem()
}

func (i SecuritypolicyInternetService6GroupArgs) ToSecuritypolicyInternetService6GroupOutput() SecuritypolicyInternetService6GroupOutput {
	return i.ToSecuritypolicyInternetService6GroupOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6GroupArgs) ToSecuritypolicyInternetService6GroupOutputWithContext(ctx context.Context) SecuritypolicyInternetService6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6GroupOutput)
}

// SecuritypolicyInternetService6GroupArrayInput is an input type that accepts SecuritypolicyInternetService6GroupArray and SecuritypolicyInternetService6GroupArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6GroupArrayInput` via:
//
//	SecuritypolicyInternetService6GroupArray{ SecuritypolicyInternetService6GroupArgs{...} }
type SecuritypolicyInternetService6GroupArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6GroupArrayOutput() SecuritypolicyInternetService6GroupArrayOutput
	ToSecuritypolicyInternetService6GroupArrayOutputWithContext(context.Context) SecuritypolicyInternetService6GroupArrayOutput
}

type SecuritypolicyInternetService6GroupArray []SecuritypolicyInternetService6GroupInput

func (SecuritypolicyInternetService6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6Group)(nil)).Elem()
}

func (i SecuritypolicyInternetService6GroupArray) ToSecuritypolicyInternetService6GroupArrayOutput() SecuritypolicyInternetService6GroupArrayOutput {
	return i.ToSecuritypolicyInternetService6GroupArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6GroupArray) ToSecuritypolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6GroupArrayOutput)
}

type SecuritypolicyInternetService6GroupOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6Group)(nil)).Elem()
}

func (o SecuritypolicyInternetService6GroupOutput) ToSecuritypolicyInternetService6GroupOutput() SecuritypolicyInternetService6GroupOutput {
	return o
}

func (o SecuritypolicyInternetService6GroupOutput) ToSecuritypolicyInternetService6GroupOutputWithContext(ctx context.Context) SecuritypolicyInternetService6GroupOutput {
	return o
}

// Policy name.
func (o SecuritypolicyInternetService6GroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetService6Group) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetService6GroupArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6Group)(nil)).Elem()
}

func (o SecuritypolicyInternetService6GroupArrayOutput) ToSecuritypolicyInternetService6GroupArrayOutput() SecuritypolicyInternetService6GroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6GroupArrayOutput) ToSecuritypolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6GroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6GroupArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetService6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetService6Group {
		return vs[0].([]SecuritypolicyInternetService6Group)[vs[1].(int)]
	}).(SecuritypolicyInternetService6GroupOutput)
}

type SecuritypolicyInternetService6Name struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetService6NameInput is an input type that accepts SecuritypolicyInternetService6NameArgs and SecuritypolicyInternetService6NameOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6NameInput` via:
//
//	SecuritypolicyInternetService6NameArgs{...}
type SecuritypolicyInternetService6NameInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6NameOutput() SecuritypolicyInternetService6NameOutput
	ToSecuritypolicyInternetService6NameOutputWithContext(context.Context) SecuritypolicyInternetService6NameOutput
}

type SecuritypolicyInternetService6NameArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetService6NameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6Name)(nil)).Elem()
}

func (i SecuritypolicyInternetService6NameArgs) ToSecuritypolicyInternetService6NameOutput() SecuritypolicyInternetService6NameOutput {
	return i.ToSecuritypolicyInternetService6NameOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6NameArgs) ToSecuritypolicyInternetService6NameOutputWithContext(ctx context.Context) SecuritypolicyInternetService6NameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6NameOutput)
}

// SecuritypolicyInternetService6NameArrayInput is an input type that accepts SecuritypolicyInternetService6NameArray and SecuritypolicyInternetService6NameArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6NameArrayInput` via:
//
//	SecuritypolicyInternetService6NameArray{ SecuritypolicyInternetService6NameArgs{...} }
type SecuritypolicyInternetService6NameArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6NameArrayOutput() SecuritypolicyInternetService6NameArrayOutput
	ToSecuritypolicyInternetService6NameArrayOutputWithContext(context.Context) SecuritypolicyInternetService6NameArrayOutput
}

type SecuritypolicyInternetService6NameArray []SecuritypolicyInternetService6NameInput

func (SecuritypolicyInternetService6NameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6Name)(nil)).Elem()
}

func (i SecuritypolicyInternetService6NameArray) ToSecuritypolicyInternetService6NameArrayOutput() SecuritypolicyInternetService6NameArrayOutput {
	return i.ToSecuritypolicyInternetService6NameArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6NameArray) ToSecuritypolicyInternetService6NameArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6NameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6NameArrayOutput)
}

type SecuritypolicyInternetService6NameOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6NameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6Name)(nil)).Elem()
}

func (o SecuritypolicyInternetService6NameOutput) ToSecuritypolicyInternetService6NameOutput() SecuritypolicyInternetService6NameOutput {
	return o
}

func (o SecuritypolicyInternetService6NameOutput) ToSecuritypolicyInternetService6NameOutputWithContext(ctx context.Context) SecuritypolicyInternetService6NameOutput {
	return o
}

// Policy name.
func (o SecuritypolicyInternetService6NameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetService6Name) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetService6NameArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6NameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6Name)(nil)).Elem()
}

func (o SecuritypolicyInternetService6NameArrayOutput) ToSecuritypolicyInternetService6NameArrayOutput() SecuritypolicyInternetService6NameArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6NameArrayOutput) ToSecuritypolicyInternetService6NameArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6NameArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6NameArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetService6NameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetService6Name {
		return vs[0].([]SecuritypolicyInternetService6Name)[vs[1].(int)]
	}).(SecuritypolicyInternetService6NameOutput)
}

type SecuritypolicyInternetService6SrcCustom struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetService6SrcCustomInput is an input type that accepts SecuritypolicyInternetService6SrcCustomArgs and SecuritypolicyInternetService6SrcCustomOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6SrcCustomInput` via:
//
//	SecuritypolicyInternetService6SrcCustomArgs{...}
type SecuritypolicyInternetService6SrcCustomInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6SrcCustomOutput() SecuritypolicyInternetService6SrcCustomOutput
	ToSecuritypolicyInternetService6SrcCustomOutputWithContext(context.Context) SecuritypolicyInternetService6SrcCustomOutput
}

type SecuritypolicyInternetService6SrcCustomArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetService6SrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i SecuritypolicyInternetService6SrcCustomArgs) ToSecuritypolicyInternetService6SrcCustomOutput() SecuritypolicyInternetService6SrcCustomOutput {
	return i.ToSecuritypolicyInternetService6SrcCustomOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6SrcCustomArgs) ToSecuritypolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6SrcCustomOutput)
}

// SecuritypolicyInternetService6SrcCustomArrayInput is an input type that accepts SecuritypolicyInternetService6SrcCustomArray and SecuritypolicyInternetService6SrcCustomArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6SrcCustomArrayInput` via:
//
//	SecuritypolicyInternetService6SrcCustomArray{ SecuritypolicyInternetService6SrcCustomArgs{...} }
type SecuritypolicyInternetService6SrcCustomArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6SrcCustomArrayOutput() SecuritypolicyInternetService6SrcCustomArrayOutput
	ToSecuritypolicyInternetService6SrcCustomArrayOutputWithContext(context.Context) SecuritypolicyInternetService6SrcCustomArrayOutput
}

type SecuritypolicyInternetService6SrcCustomArray []SecuritypolicyInternetService6SrcCustomInput

func (SecuritypolicyInternetService6SrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i SecuritypolicyInternetService6SrcCustomArray) ToSecuritypolicyInternetService6SrcCustomArrayOutput() SecuritypolicyInternetService6SrcCustomArrayOutput {
	return i.ToSecuritypolicyInternetService6SrcCustomArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6SrcCustomArray) ToSecuritypolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6SrcCustomArrayOutput)
}

type SecuritypolicyInternetService6SrcCustomOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6SrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o SecuritypolicyInternetService6SrcCustomOutput) ToSecuritypolicyInternetService6SrcCustomOutput() SecuritypolicyInternetService6SrcCustomOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcCustomOutput) ToSecuritypolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcCustomOutput {
	return o
}

// Policy name.
func (o SecuritypolicyInternetService6SrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetService6SrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetService6SrcCustomArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6SrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o SecuritypolicyInternetService6SrcCustomArrayOutput) ToSecuritypolicyInternetService6SrcCustomArrayOutput() SecuritypolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcCustomArrayOutput) ToSecuritypolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcCustomArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetService6SrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetService6SrcCustom {
		return vs[0].([]SecuritypolicyInternetService6SrcCustom)[vs[1].(int)]
	}).(SecuritypolicyInternetService6SrcCustomOutput)
}

type SecuritypolicyInternetService6SrcCustomGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetService6SrcCustomGroupInput is an input type that accepts SecuritypolicyInternetService6SrcCustomGroupArgs and SecuritypolicyInternetService6SrcCustomGroupOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6SrcCustomGroupInput` via:
//
//	SecuritypolicyInternetService6SrcCustomGroupArgs{...}
type SecuritypolicyInternetService6SrcCustomGroupInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6SrcCustomGroupOutput() SecuritypolicyInternetService6SrcCustomGroupOutput
	ToSecuritypolicyInternetService6SrcCustomGroupOutputWithContext(context.Context) SecuritypolicyInternetService6SrcCustomGroupOutput
}

type SecuritypolicyInternetService6SrcCustomGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetService6SrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetService6SrcCustomGroupArgs) ToSecuritypolicyInternetService6SrcCustomGroupOutput() SecuritypolicyInternetService6SrcCustomGroupOutput {
	return i.ToSecuritypolicyInternetService6SrcCustomGroupOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6SrcCustomGroupArgs) ToSecuritypolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6SrcCustomGroupOutput)
}

// SecuritypolicyInternetService6SrcCustomGroupArrayInput is an input type that accepts SecuritypolicyInternetService6SrcCustomGroupArray and SecuritypolicyInternetService6SrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6SrcCustomGroupArrayInput` via:
//
//	SecuritypolicyInternetService6SrcCustomGroupArray{ SecuritypolicyInternetService6SrcCustomGroupArgs{...} }
type SecuritypolicyInternetService6SrcCustomGroupArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6SrcCustomGroupArrayOutput() SecuritypolicyInternetService6SrcCustomGroupArrayOutput
	ToSecuritypolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Context) SecuritypolicyInternetService6SrcCustomGroupArrayOutput
}

type SecuritypolicyInternetService6SrcCustomGroupArray []SecuritypolicyInternetService6SrcCustomGroupInput

func (SecuritypolicyInternetService6SrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetService6SrcCustomGroupArray) ToSecuritypolicyInternetService6SrcCustomGroupArrayOutput() SecuritypolicyInternetService6SrcCustomGroupArrayOutput {
	return i.ToSecuritypolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6SrcCustomGroupArray) ToSecuritypolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6SrcCustomGroupArrayOutput)
}

type SecuritypolicyInternetService6SrcCustomGroupOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6SrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetService6SrcCustomGroupOutput) ToSecuritypolicyInternetService6SrcCustomGroupOutput() SecuritypolicyInternetService6SrcCustomGroupOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcCustomGroupOutput) ToSecuritypolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcCustomGroupOutput {
	return o
}

// Policy name.
func (o SecuritypolicyInternetService6SrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetService6SrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetService6SrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6SrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetService6SrcCustomGroupArrayOutput) ToSecuritypolicyInternetService6SrcCustomGroupArrayOutput() SecuritypolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcCustomGroupArrayOutput) ToSecuritypolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcCustomGroupArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetService6SrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetService6SrcCustomGroup {
		return vs[0].([]SecuritypolicyInternetService6SrcCustomGroup)[vs[1].(int)]
	}).(SecuritypolicyInternetService6SrcCustomGroupOutput)
}

type SecuritypolicyInternetService6SrcGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetService6SrcGroupInput is an input type that accepts SecuritypolicyInternetService6SrcGroupArgs and SecuritypolicyInternetService6SrcGroupOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6SrcGroupInput` via:
//
//	SecuritypolicyInternetService6SrcGroupArgs{...}
type SecuritypolicyInternetService6SrcGroupInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6SrcGroupOutput() SecuritypolicyInternetService6SrcGroupOutput
	ToSecuritypolicyInternetService6SrcGroupOutputWithContext(context.Context) SecuritypolicyInternetService6SrcGroupOutput
}

type SecuritypolicyInternetService6SrcGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetService6SrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetService6SrcGroupArgs) ToSecuritypolicyInternetService6SrcGroupOutput() SecuritypolicyInternetService6SrcGroupOutput {
	return i.ToSecuritypolicyInternetService6SrcGroupOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6SrcGroupArgs) ToSecuritypolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6SrcGroupOutput)
}

// SecuritypolicyInternetService6SrcGroupArrayInput is an input type that accepts SecuritypolicyInternetService6SrcGroupArray and SecuritypolicyInternetService6SrcGroupArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6SrcGroupArrayInput` via:
//
//	SecuritypolicyInternetService6SrcGroupArray{ SecuritypolicyInternetService6SrcGroupArgs{...} }
type SecuritypolicyInternetService6SrcGroupArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6SrcGroupArrayOutput() SecuritypolicyInternetService6SrcGroupArrayOutput
	ToSecuritypolicyInternetService6SrcGroupArrayOutputWithContext(context.Context) SecuritypolicyInternetService6SrcGroupArrayOutput
}

type SecuritypolicyInternetService6SrcGroupArray []SecuritypolicyInternetService6SrcGroupInput

func (SecuritypolicyInternetService6SrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetService6SrcGroupArray) ToSecuritypolicyInternetService6SrcGroupArrayOutput() SecuritypolicyInternetService6SrcGroupArrayOutput {
	return i.ToSecuritypolicyInternetService6SrcGroupArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6SrcGroupArray) ToSecuritypolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6SrcGroupArrayOutput)
}

type SecuritypolicyInternetService6SrcGroupOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6SrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetService6SrcGroupOutput) ToSecuritypolicyInternetService6SrcGroupOutput() SecuritypolicyInternetService6SrcGroupOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcGroupOutput) ToSecuritypolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcGroupOutput {
	return o
}

// Policy name.
func (o SecuritypolicyInternetService6SrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetService6SrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetService6SrcGroupArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6SrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetService6SrcGroupArrayOutput) ToSecuritypolicyInternetService6SrcGroupArrayOutput() SecuritypolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcGroupArrayOutput) ToSecuritypolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcGroupArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetService6SrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetService6SrcGroup {
		return vs[0].([]SecuritypolicyInternetService6SrcGroup)[vs[1].(int)]
	}).(SecuritypolicyInternetService6SrcGroupOutput)
}

type SecuritypolicyInternetService6SrcName struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetService6SrcNameInput is an input type that accepts SecuritypolicyInternetService6SrcNameArgs and SecuritypolicyInternetService6SrcNameOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6SrcNameInput` via:
//
//	SecuritypolicyInternetService6SrcNameArgs{...}
type SecuritypolicyInternetService6SrcNameInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6SrcNameOutput() SecuritypolicyInternetService6SrcNameOutput
	ToSecuritypolicyInternetService6SrcNameOutputWithContext(context.Context) SecuritypolicyInternetService6SrcNameOutput
}

type SecuritypolicyInternetService6SrcNameArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetService6SrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6SrcName)(nil)).Elem()
}

func (i SecuritypolicyInternetService6SrcNameArgs) ToSecuritypolicyInternetService6SrcNameOutput() SecuritypolicyInternetService6SrcNameOutput {
	return i.ToSecuritypolicyInternetService6SrcNameOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6SrcNameArgs) ToSecuritypolicyInternetService6SrcNameOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6SrcNameOutput)
}

// SecuritypolicyInternetService6SrcNameArrayInput is an input type that accepts SecuritypolicyInternetService6SrcNameArray and SecuritypolicyInternetService6SrcNameArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetService6SrcNameArrayInput` via:
//
//	SecuritypolicyInternetService6SrcNameArray{ SecuritypolicyInternetService6SrcNameArgs{...} }
type SecuritypolicyInternetService6SrcNameArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetService6SrcNameArrayOutput() SecuritypolicyInternetService6SrcNameArrayOutput
	ToSecuritypolicyInternetService6SrcNameArrayOutputWithContext(context.Context) SecuritypolicyInternetService6SrcNameArrayOutput
}

type SecuritypolicyInternetService6SrcNameArray []SecuritypolicyInternetService6SrcNameInput

func (SecuritypolicyInternetService6SrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6SrcName)(nil)).Elem()
}

func (i SecuritypolicyInternetService6SrcNameArray) ToSecuritypolicyInternetService6SrcNameArrayOutput() SecuritypolicyInternetService6SrcNameArrayOutput {
	return i.ToSecuritypolicyInternetService6SrcNameArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetService6SrcNameArray) ToSecuritypolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetService6SrcNameArrayOutput)
}

type SecuritypolicyInternetService6SrcNameOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6SrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetService6SrcName)(nil)).Elem()
}

func (o SecuritypolicyInternetService6SrcNameOutput) ToSecuritypolicyInternetService6SrcNameOutput() SecuritypolicyInternetService6SrcNameOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcNameOutput) ToSecuritypolicyInternetService6SrcNameOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcNameOutput {
	return o
}

// Policy name.
func (o SecuritypolicyInternetService6SrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetService6SrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetService6SrcNameArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetService6SrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetService6SrcName)(nil)).Elem()
}

func (o SecuritypolicyInternetService6SrcNameArrayOutput) ToSecuritypolicyInternetService6SrcNameArrayOutput() SecuritypolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcNameArrayOutput) ToSecuritypolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o SecuritypolicyInternetService6SrcNameArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetService6SrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetService6SrcName {
		return vs[0].([]SecuritypolicyInternetService6SrcName)[vs[1].(int)]
	}).(SecuritypolicyInternetService6SrcNameOutput)
}

type SecuritypolicyInternetServiceCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetServiceCustomInput is an input type that accepts SecuritypolicyInternetServiceCustomArgs and SecuritypolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceCustomInput` via:
//
//	SecuritypolicyInternetServiceCustomArgs{...}
type SecuritypolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceCustomOutput() SecuritypolicyInternetServiceCustomOutput
	ToSecuritypolicyInternetServiceCustomOutputWithContext(context.Context) SecuritypolicyInternetServiceCustomOutput
}

type SecuritypolicyInternetServiceCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceCustom)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceCustomArgs) ToSecuritypolicyInternetServiceCustomOutput() SecuritypolicyInternetServiceCustomOutput {
	return i.ToSecuritypolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceCustomArgs) ToSecuritypolicyInternetServiceCustomOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceCustomOutput)
}

// SecuritypolicyInternetServiceCustomArrayInput is an input type that accepts SecuritypolicyInternetServiceCustomArray and SecuritypolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceCustomArrayInput` via:
//
//	SecuritypolicyInternetServiceCustomArray{ SecuritypolicyInternetServiceCustomArgs{...} }
type SecuritypolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceCustomArrayOutput() SecuritypolicyInternetServiceCustomArrayOutput
	ToSecuritypolicyInternetServiceCustomArrayOutputWithContext(context.Context) SecuritypolicyInternetServiceCustomArrayOutput
}

type SecuritypolicyInternetServiceCustomArray []SecuritypolicyInternetServiceCustomInput

func (SecuritypolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceCustom)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceCustomArray) ToSecuritypolicyInternetServiceCustomArrayOutput() SecuritypolicyInternetServiceCustomArrayOutput {
	return i.ToSecuritypolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceCustomArray) ToSecuritypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceCustomArrayOutput)
}

type SecuritypolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceCustom)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceCustomOutput) ToSecuritypolicyInternetServiceCustomOutput() SecuritypolicyInternetServiceCustomOutput {
	return o
}

func (o SecuritypolicyInternetServiceCustomOutput) ToSecuritypolicyInternetServiceCustomOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceCustomOutput {
	return o
}

// Custom Internet Service name.
func (o SecuritypolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceCustom)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceCustomArrayOutput) ToSecuritypolicyInternetServiceCustomArrayOutput() SecuritypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceCustomArrayOutput) ToSecuritypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetServiceCustom {
		return vs[0].([]SecuritypolicyInternetServiceCustom)[vs[1].(int)]
	}).(SecuritypolicyInternetServiceCustomOutput)
}

type SecuritypolicyInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetServiceCustomGroupInput is an input type that accepts SecuritypolicyInternetServiceCustomGroupArgs and SecuritypolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceCustomGroupInput` via:
//
//	SecuritypolicyInternetServiceCustomGroupArgs{...}
type SecuritypolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceCustomGroupOutput() SecuritypolicyInternetServiceCustomGroupOutput
	ToSecuritypolicyInternetServiceCustomGroupOutputWithContext(context.Context) SecuritypolicyInternetServiceCustomGroupOutput
}

type SecuritypolicyInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceCustomGroupArgs) ToSecuritypolicyInternetServiceCustomGroupOutput() SecuritypolicyInternetServiceCustomGroupOutput {
	return i.ToSecuritypolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceCustomGroupArgs) ToSecuritypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceCustomGroupOutput)
}

// SecuritypolicyInternetServiceCustomGroupArrayInput is an input type that accepts SecuritypolicyInternetServiceCustomGroupArray and SecuritypolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceCustomGroupArrayInput` via:
//
//	SecuritypolicyInternetServiceCustomGroupArray{ SecuritypolicyInternetServiceCustomGroupArgs{...} }
type SecuritypolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceCustomGroupArrayOutput() SecuritypolicyInternetServiceCustomGroupArrayOutput
	ToSecuritypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) SecuritypolicyInternetServiceCustomGroupArrayOutput
}

type SecuritypolicyInternetServiceCustomGroupArray []SecuritypolicyInternetServiceCustomGroupInput

func (SecuritypolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceCustomGroupArray) ToSecuritypolicyInternetServiceCustomGroupArrayOutput() SecuritypolicyInternetServiceCustomGroupArrayOutput {
	return i.ToSecuritypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceCustomGroupArray) ToSecuritypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceCustomGroupArrayOutput)
}

type SecuritypolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceCustomGroupOutput) ToSecuritypolicyInternetServiceCustomGroupOutput() SecuritypolicyInternetServiceCustomGroupOutput {
	return o
}

func (o SecuritypolicyInternetServiceCustomGroupOutput) ToSecuritypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o SecuritypolicyInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceCustomGroupArrayOutput) ToSecuritypolicyInternetServiceCustomGroupArrayOutput() SecuritypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceCustomGroupArrayOutput) ToSecuritypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetServiceCustomGroup {
		return vs[0].([]SecuritypolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(SecuritypolicyInternetServiceCustomGroupOutput)
}

type SecuritypolicyInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetServiceGroupInput is an input type that accepts SecuritypolicyInternetServiceGroupArgs and SecuritypolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceGroupInput` via:
//
//	SecuritypolicyInternetServiceGroupArgs{...}
type SecuritypolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceGroupOutput() SecuritypolicyInternetServiceGroupOutput
	ToSecuritypolicyInternetServiceGroupOutputWithContext(context.Context) SecuritypolicyInternetServiceGroupOutput
}

type SecuritypolicyInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceGroupArgs) ToSecuritypolicyInternetServiceGroupOutput() SecuritypolicyInternetServiceGroupOutput {
	return i.ToSecuritypolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceGroupArgs) ToSecuritypolicyInternetServiceGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceGroupOutput)
}

// SecuritypolicyInternetServiceGroupArrayInput is an input type that accepts SecuritypolicyInternetServiceGroupArray and SecuritypolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceGroupArrayInput` via:
//
//	SecuritypolicyInternetServiceGroupArray{ SecuritypolicyInternetServiceGroupArgs{...} }
type SecuritypolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceGroupArrayOutput() SecuritypolicyInternetServiceGroupArrayOutput
	ToSecuritypolicyInternetServiceGroupArrayOutputWithContext(context.Context) SecuritypolicyInternetServiceGroupArrayOutput
}

type SecuritypolicyInternetServiceGroupArray []SecuritypolicyInternetServiceGroupInput

func (SecuritypolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceGroupArray) ToSecuritypolicyInternetServiceGroupArrayOutput() SecuritypolicyInternetServiceGroupArrayOutput {
	return i.ToSecuritypolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceGroupArray) ToSecuritypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceGroupArrayOutput)
}

type SecuritypolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceGroupOutput) ToSecuritypolicyInternetServiceGroupOutput() SecuritypolicyInternetServiceGroupOutput {
	return o
}

func (o SecuritypolicyInternetServiceGroupOutput) ToSecuritypolicyInternetServiceGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o SecuritypolicyInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceGroupArrayOutput) ToSecuritypolicyInternetServiceGroupArrayOutput() SecuritypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceGroupArrayOutput) ToSecuritypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetServiceGroup {
		return vs[0].([]SecuritypolicyInternetServiceGroup)[vs[1].(int)]
	}).(SecuritypolicyInternetServiceGroupOutput)
}

type SecuritypolicyInternetServiceId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// SecuritypolicyInternetServiceIdInput is an input type that accepts SecuritypolicyInternetServiceIdArgs and SecuritypolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceIdInput` via:
//
//	SecuritypolicyInternetServiceIdArgs{...}
type SecuritypolicyInternetServiceIdInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceIdOutput() SecuritypolicyInternetServiceIdOutput
	ToSecuritypolicyInternetServiceIdOutputWithContext(context.Context) SecuritypolicyInternetServiceIdOutput
}

type SecuritypolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SecuritypolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceId)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceIdArgs) ToSecuritypolicyInternetServiceIdOutput() SecuritypolicyInternetServiceIdOutput {
	return i.ToSecuritypolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceIdArgs) ToSecuritypolicyInternetServiceIdOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceIdOutput)
}

// SecuritypolicyInternetServiceIdArrayInput is an input type that accepts SecuritypolicyInternetServiceIdArray and SecuritypolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceIdArrayInput` via:
//
//	SecuritypolicyInternetServiceIdArray{ SecuritypolicyInternetServiceIdArgs{...} }
type SecuritypolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceIdArrayOutput() SecuritypolicyInternetServiceIdArrayOutput
	ToSecuritypolicyInternetServiceIdArrayOutputWithContext(context.Context) SecuritypolicyInternetServiceIdArrayOutput
}

type SecuritypolicyInternetServiceIdArray []SecuritypolicyInternetServiceIdInput

func (SecuritypolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceId)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceIdArray) ToSecuritypolicyInternetServiceIdArrayOutput() SecuritypolicyInternetServiceIdArrayOutput {
	return i.ToSecuritypolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceIdArray) ToSecuritypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceIdArrayOutput)
}

type SecuritypolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceId)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceIdOutput) ToSecuritypolicyInternetServiceIdOutput() SecuritypolicyInternetServiceIdOutput {
	return o
}

func (o SecuritypolicyInternetServiceIdOutput) ToSecuritypolicyInternetServiceIdOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o SecuritypolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SecuritypolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceId)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceIdArrayOutput) ToSecuritypolicyInternetServiceIdArrayOutput() SecuritypolicyInternetServiceIdArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceIdArrayOutput) ToSecuritypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceIdArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetServiceId {
		return vs[0].([]SecuritypolicyInternetServiceId)[vs[1].(int)]
	}).(SecuritypolicyInternetServiceIdOutput)
}

type SecuritypolicyInternetServiceName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetServiceNameInput is an input type that accepts SecuritypolicyInternetServiceNameArgs and SecuritypolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceNameInput` via:
//
//	SecuritypolicyInternetServiceNameArgs{...}
type SecuritypolicyInternetServiceNameInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceNameOutput() SecuritypolicyInternetServiceNameOutput
	ToSecuritypolicyInternetServiceNameOutputWithContext(context.Context) SecuritypolicyInternetServiceNameOutput
}

type SecuritypolicyInternetServiceNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceName)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceNameArgs) ToSecuritypolicyInternetServiceNameOutput() SecuritypolicyInternetServiceNameOutput {
	return i.ToSecuritypolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceNameArgs) ToSecuritypolicyInternetServiceNameOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceNameOutput)
}

// SecuritypolicyInternetServiceNameArrayInput is an input type that accepts SecuritypolicyInternetServiceNameArray and SecuritypolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceNameArrayInput` via:
//
//	SecuritypolicyInternetServiceNameArray{ SecuritypolicyInternetServiceNameArgs{...} }
type SecuritypolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceNameArrayOutput() SecuritypolicyInternetServiceNameArrayOutput
	ToSecuritypolicyInternetServiceNameArrayOutputWithContext(context.Context) SecuritypolicyInternetServiceNameArrayOutput
}

type SecuritypolicyInternetServiceNameArray []SecuritypolicyInternetServiceNameInput

func (SecuritypolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceName)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceNameArray) ToSecuritypolicyInternetServiceNameArrayOutput() SecuritypolicyInternetServiceNameArrayOutput {
	return i.ToSecuritypolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceNameArray) ToSecuritypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceNameArrayOutput)
}

type SecuritypolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceName)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceNameOutput) ToSecuritypolicyInternetServiceNameOutput() SecuritypolicyInternetServiceNameOutput {
	return o
}

func (o SecuritypolicyInternetServiceNameOutput) ToSecuritypolicyInternetServiceNameOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceNameOutput {
	return o
}

// Internet Service name.
func (o SecuritypolicyInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceName)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceNameArrayOutput) ToSecuritypolicyInternetServiceNameArrayOutput() SecuritypolicyInternetServiceNameArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceNameArrayOutput) ToSecuritypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceNameArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetServiceName {
		return vs[0].([]SecuritypolicyInternetServiceName)[vs[1].(int)]
	}).(SecuritypolicyInternetServiceNameOutput)
}

type SecuritypolicyInternetServiceSrcCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetServiceSrcCustomInput is an input type that accepts SecuritypolicyInternetServiceSrcCustomArgs and SecuritypolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceSrcCustomInput` via:
//
//	SecuritypolicyInternetServiceSrcCustomArgs{...}
type SecuritypolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceSrcCustomOutput() SecuritypolicyInternetServiceSrcCustomOutput
	ToSecuritypolicyInternetServiceSrcCustomOutputWithContext(context.Context) SecuritypolicyInternetServiceSrcCustomOutput
}

type SecuritypolicyInternetServiceSrcCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceSrcCustomArgs) ToSecuritypolicyInternetServiceSrcCustomOutput() SecuritypolicyInternetServiceSrcCustomOutput {
	return i.ToSecuritypolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceSrcCustomArgs) ToSecuritypolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceSrcCustomOutput)
}

// SecuritypolicyInternetServiceSrcCustomArrayInput is an input type that accepts SecuritypolicyInternetServiceSrcCustomArray and SecuritypolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceSrcCustomArrayInput` via:
//
//	SecuritypolicyInternetServiceSrcCustomArray{ SecuritypolicyInternetServiceSrcCustomArgs{...} }
type SecuritypolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceSrcCustomArrayOutput() SecuritypolicyInternetServiceSrcCustomArrayOutput
	ToSecuritypolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) SecuritypolicyInternetServiceSrcCustomArrayOutput
}

type SecuritypolicyInternetServiceSrcCustomArray []SecuritypolicyInternetServiceSrcCustomInput

func (SecuritypolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceSrcCustomArray) ToSecuritypolicyInternetServiceSrcCustomArrayOutput() SecuritypolicyInternetServiceSrcCustomArrayOutput {
	return i.ToSecuritypolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceSrcCustomArray) ToSecuritypolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceSrcCustomArrayOutput)
}

type SecuritypolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceSrcCustomOutput) ToSecuritypolicyInternetServiceSrcCustomOutput() SecuritypolicyInternetServiceSrcCustomOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcCustomOutput) ToSecuritypolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcCustomOutput {
	return o
}

// Custom Internet Service name.
func (o SecuritypolicyInternetServiceSrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetServiceSrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceSrcCustomArrayOutput) ToSecuritypolicyInternetServiceSrcCustomArrayOutput() SecuritypolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcCustomArrayOutput) ToSecuritypolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetServiceSrcCustom {
		return vs[0].([]SecuritypolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(SecuritypolicyInternetServiceSrcCustomOutput)
}

type SecuritypolicyInternetServiceSrcCustomGroup struct {
	// Custom Internet Service6 group name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetServiceSrcCustomGroupInput is an input type that accepts SecuritypolicyInternetServiceSrcCustomGroupArgs and SecuritypolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceSrcCustomGroupInput` via:
//
//	SecuritypolicyInternetServiceSrcCustomGroupArgs{...}
type SecuritypolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceSrcCustomGroupOutput() SecuritypolicyInternetServiceSrcCustomGroupOutput
	ToSecuritypolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) SecuritypolicyInternetServiceSrcCustomGroupOutput
}

type SecuritypolicyInternetServiceSrcCustomGroupArgs struct {
	// Custom Internet Service6 group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceSrcCustomGroupArgs) ToSecuritypolicyInternetServiceSrcCustomGroupOutput() SecuritypolicyInternetServiceSrcCustomGroupOutput {
	return i.ToSecuritypolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceSrcCustomGroupArgs) ToSecuritypolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceSrcCustomGroupOutput)
}

// SecuritypolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts SecuritypolicyInternetServiceSrcCustomGroupArray and SecuritypolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	SecuritypolicyInternetServiceSrcCustomGroupArray{ SecuritypolicyInternetServiceSrcCustomGroupArgs{...} }
type SecuritypolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceSrcCustomGroupArrayOutput() SecuritypolicyInternetServiceSrcCustomGroupArrayOutput
	ToSecuritypolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) SecuritypolicyInternetServiceSrcCustomGroupArrayOutput
}

type SecuritypolicyInternetServiceSrcCustomGroupArray []SecuritypolicyInternetServiceSrcCustomGroupInput

func (SecuritypolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceSrcCustomGroupArray) ToSecuritypolicyInternetServiceSrcCustomGroupArrayOutput() SecuritypolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToSecuritypolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceSrcCustomGroupArray) ToSecuritypolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceSrcCustomGroupArrayOutput)
}

type SecuritypolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceSrcCustomGroupOutput) ToSecuritypolicyInternetServiceSrcCustomGroupOutput() SecuritypolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcCustomGroupOutput) ToSecuritypolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Custom Internet Service6 group name.
func (o SecuritypolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetServiceSrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceSrcCustomGroupArrayOutput) ToSecuritypolicyInternetServiceSrcCustomGroupArrayOutput() SecuritypolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcCustomGroupArrayOutput) ToSecuritypolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetServiceSrcCustomGroup {
		return vs[0].([]SecuritypolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(SecuritypolicyInternetServiceSrcCustomGroupOutput)
}

type SecuritypolicyInternetServiceSrcGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetServiceSrcGroupInput is an input type that accepts SecuritypolicyInternetServiceSrcGroupArgs and SecuritypolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceSrcGroupInput` via:
//
//	SecuritypolicyInternetServiceSrcGroupArgs{...}
type SecuritypolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceSrcGroupOutput() SecuritypolicyInternetServiceSrcGroupOutput
	ToSecuritypolicyInternetServiceSrcGroupOutputWithContext(context.Context) SecuritypolicyInternetServiceSrcGroupOutput
}

type SecuritypolicyInternetServiceSrcGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceSrcGroupArgs) ToSecuritypolicyInternetServiceSrcGroupOutput() SecuritypolicyInternetServiceSrcGroupOutput {
	return i.ToSecuritypolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceSrcGroupArgs) ToSecuritypolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceSrcGroupOutput)
}

// SecuritypolicyInternetServiceSrcGroupArrayInput is an input type that accepts SecuritypolicyInternetServiceSrcGroupArray and SecuritypolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceSrcGroupArrayInput` via:
//
//	SecuritypolicyInternetServiceSrcGroupArray{ SecuritypolicyInternetServiceSrcGroupArgs{...} }
type SecuritypolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceSrcGroupArrayOutput() SecuritypolicyInternetServiceSrcGroupArrayOutput
	ToSecuritypolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) SecuritypolicyInternetServiceSrcGroupArrayOutput
}

type SecuritypolicyInternetServiceSrcGroupArray []SecuritypolicyInternetServiceSrcGroupInput

func (SecuritypolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceSrcGroupArray) ToSecuritypolicyInternetServiceSrcGroupArrayOutput() SecuritypolicyInternetServiceSrcGroupArrayOutput {
	return i.ToSecuritypolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceSrcGroupArray) ToSecuritypolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceSrcGroupArrayOutput)
}

type SecuritypolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceSrcGroupOutput) ToSecuritypolicyInternetServiceSrcGroupOutput() SecuritypolicyInternetServiceSrcGroupOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcGroupOutput) ToSecuritypolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcGroupOutput {
	return o
}

// Internet Service group name.
func (o SecuritypolicyInternetServiceSrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetServiceSrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceSrcGroupArrayOutput) ToSecuritypolicyInternetServiceSrcGroupArrayOutput() SecuritypolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcGroupArrayOutput) ToSecuritypolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetServiceSrcGroup {
		return vs[0].([]SecuritypolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(SecuritypolicyInternetServiceSrcGroupOutput)
}

type SecuritypolicyInternetServiceSrcId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// SecuritypolicyInternetServiceSrcIdInput is an input type that accepts SecuritypolicyInternetServiceSrcIdArgs and SecuritypolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceSrcIdInput` via:
//
//	SecuritypolicyInternetServiceSrcIdArgs{...}
type SecuritypolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceSrcIdOutput() SecuritypolicyInternetServiceSrcIdOutput
	ToSecuritypolicyInternetServiceSrcIdOutputWithContext(context.Context) SecuritypolicyInternetServiceSrcIdOutput
}

type SecuritypolicyInternetServiceSrcIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SecuritypolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceSrcId)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceSrcIdArgs) ToSecuritypolicyInternetServiceSrcIdOutput() SecuritypolicyInternetServiceSrcIdOutput {
	return i.ToSecuritypolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceSrcIdArgs) ToSecuritypolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceSrcIdOutput)
}

// SecuritypolicyInternetServiceSrcIdArrayInput is an input type that accepts SecuritypolicyInternetServiceSrcIdArray and SecuritypolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceSrcIdArrayInput` via:
//
//	SecuritypolicyInternetServiceSrcIdArray{ SecuritypolicyInternetServiceSrcIdArgs{...} }
type SecuritypolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceSrcIdArrayOutput() SecuritypolicyInternetServiceSrcIdArrayOutput
	ToSecuritypolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) SecuritypolicyInternetServiceSrcIdArrayOutput
}

type SecuritypolicyInternetServiceSrcIdArray []SecuritypolicyInternetServiceSrcIdInput

func (SecuritypolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceSrcId)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceSrcIdArray) ToSecuritypolicyInternetServiceSrcIdArrayOutput() SecuritypolicyInternetServiceSrcIdArrayOutput {
	return i.ToSecuritypolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceSrcIdArray) ToSecuritypolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceSrcIdArrayOutput)
}

type SecuritypolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceSrcId)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceSrcIdOutput) ToSecuritypolicyInternetServiceSrcIdOutput() SecuritypolicyInternetServiceSrcIdOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcIdOutput) ToSecuritypolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcIdOutput {
	return o
}

// Internet Service ID.
func (o SecuritypolicyInternetServiceSrcIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetServiceSrcId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SecuritypolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceSrcId)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceSrcIdArrayOutput) ToSecuritypolicyInternetServiceSrcIdArrayOutput() SecuritypolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcIdArrayOutput) ToSecuritypolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetServiceSrcId {
		return vs[0].([]SecuritypolicyInternetServiceSrcId)[vs[1].(int)]
	}).(SecuritypolicyInternetServiceSrcIdOutput)
}

type SecuritypolicyInternetServiceSrcName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyInternetServiceSrcNameInput is an input type that accepts SecuritypolicyInternetServiceSrcNameArgs and SecuritypolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceSrcNameInput` via:
//
//	SecuritypolicyInternetServiceSrcNameArgs{...}
type SecuritypolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceSrcNameOutput() SecuritypolicyInternetServiceSrcNameOutput
	ToSecuritypolicyInternetServiceSrcNameOutputWithContext(context.Context) SecuritypolicyInternetServiceSrcNameOutput
}

type SecuritypolicyInternetServiceSrcNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceSrcName)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceSrcNameArgs) ToSecuritypolicyInternetServiceSrcNameOutput() SecuritypolicyInternetServiceSrcNameOutput {
	return i.ToSecuritypolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceSrcNameArgs) ToSecuritypolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceSrcNameOutput)
}

// SecuritypolicyInternetServiceSrcNameArrayInput is an input type that accepts SecuritypolicyInternetServiceSrcNameArray and SecuritypolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyInternetServiceSrcNameArrayInput` via:
//
//	SecuritypolicyInternetServiceSrcNameArray{ SecuritypolicyInternetServiceSrcNameArgs{...} }
type SecuritypolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToSecuritypolicyInternetServiceSrcNameArrayOutput() SecuritypolicyInternetServiceSrcNameArrayOutput
	ToSecuritypolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) SecuritypolicyInternetServiceSrcNameArrayOutput
}

type SecuritypolicyInternetServiceSrcNameArray []SecuritypolicyInternetServiceSrcNameInput

func (SecuritypolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceSrcName)(nil)).Elem()
}

func (i SecuritypolicyInternetServiceSrcNameArray) ToSecuritypolicyInternetServiceSrcNameArrayOutput() SecuritypolicyInternetServiceSrcNameArrayOutput {
	return i.ToSecuritypolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyInternetServiceSrcNameArray) ToSecuritypolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyInternetServiceSrcNameArrayOutput)
}

type SecuritypolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyInternetServiceSrcName)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceSrcNameOutput) ToSecuritypolicyInternetServiceSrcNameOutput() SecuritypolicyInternetServiceSrcNameOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcNameOutput) ToSecuritypolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcNameOutput {
	return o
}

// Internet Service name.
func (o SecuritypolicyInternetServiceSrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyInternetServiceSrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyInternetServiceSrcName)(nil)).Elem()
}

func (o SecuritypolicyInternetServiceSrcNameArrayOutput) ToSecuritypolicyInternetServiceSrcNameArrayOutput() SecuritypolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcNameArrayOutput) ToSecuritypolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) SecuritypolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o SecuritypolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) SecuritypolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyInternetServiceSrcName {
		return vs[0].([]SecuritypolicyInternetServiceSrcName)[vs[1].(int)]
	}).(SecuritypolicyInternetServiceSrcNameOutput)
}

type SecuritypolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyServiceInput is an input type that accepts SecuritypolicyServiceArgs and SecuritypolicyServiceOutput values.
// You can construct a concrete instance of `SecuritypolicyServiceInput` via:
//
//	SecuritypolicyServiceArgs{...}
type SecuritypolicyServiceInput interface {
	pulumi.Input

	ToSecuritypolicyServiceOutput() SecuritypolicyServiceOutput
	ToSecuritypolicyServiceOutputWithContext(context.Context) SecuritypolicyServiceOutput
}

type SecuritypolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyService)(nil)).Elem()
}

func (i SecuritypolicyServiceArgs) ToSecuritypolicyServiceOutput() SecuritypolicyServiceOutput {
	return i.ToSecuritypolicyServiceOutputWithContext(context.Background())
}

func (i SecuritypolicyServiceArgs) ToSecuritypolicyServiceOutputWithContext(ctx context.Context) SecuritypolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyServiceOutput)
}

// SecuritypolicyServiceArrayInput is an input type that accepts SecuritypolicyServiceArray and SecuritypolicyServiceArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyServiceArrayInput` via:
//
//	SecuritypolicyServiceArray{ SecuritypolicyServiceArgs{...} }
type SecuritypolicyServiceArrayInput interface {
	pulumi.Input

	ToSecuritypolicyServiceArrayOutput() SecuritypolicyServiceArrayOutput
	ToSecuritypolicyServiceArrayOutputWithContext(context.Context) SecuritypolicyServiceArrayOutput
}

type SecuritypolicyServiceArray []SecuritypolicyServiceInput

func (SecuritypolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyService)(nil)).Elem()
}

func (i SecuritypolicyServiceArray) ToSecuritypolicyServiceArrayOutput() SecuritypolicyServiceArrayOutput {
	return i.ToSecuritypolicyServiceArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyServiceArray) ToSecuritypolicyServiceArrayOutputWithContext(ctx context.Context) SecuritypolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyServiceArrayOutput)
}

type SecuritypolicyServiceOutput struct{ *pulumi.OutputState }

func (SecuritypolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyService)(nil)).Elem()
}

func (o SecuritypolicyServiceOutput) ToSecuritypolicyServiceOutput() SecuritypolicyServiceOutput {
	return o
}

func (o SecuritypolicyServiceOutput) ToSecuritypolicyServiceOutputWithContext(ctx context.Context) SecuritypolicyServiceOutput {
	return o
}

// Service name.
func (o SecuritypolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyService)(nil)).Elem()
}

func (o SecuritypolicyServiceArrayOutput) ToSecuritypolicyServiceArrayOutput() SecuritypolicyServiceArrayOutput {
	return o
}

func (o SecuritypolicyServiceArrayOutput) ToSecuritypolicyServiceArrayOutputWithContext(ctx context.Context) SecuritypolicyServiceArrayOutput {
	return o
}

func (o SecuritypolicyServiceArrayOutput) Index(i pulumi.IntInput) SecuritypolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyService {
		return vs[0].([]SecuritypolicyService)[vs[1].(int)]
	}).(SecuritypolicyServiceOutput)
}

type SecuritypolicySortStatePolicyList struct {
	Action   *string `pulumi:"action"`
	Name     *string `pulumi:"name"`
	Policyid *string `pulumi:"policyid"`
}

// SecuritypolicySortStatePolicyListInput is an input type that accepts SecuritypolicySortStatePolicyListArgs and SecuritypolicySortStatePolicyListOutput values.
// You can construct a concrete instance of `SecuritypolicySortStatePolicyListInput` via:
//
//	SecuritypolicySortStatePolicyListArgs{...}
type SecuritypolicySortStatePolicyListInput interface {
	pulumi.Input

	ToSecuritypolicySortStatePolicyListOutput() SecuritypolicySortStatePolicyListOutput
	ToSecuritypolicySortStatePolicyListOutputWithContext(context.Context) SecuritypolicySortStatePolicyListOutput
}

type SecuritypolicySortStatePolicyListArgs struct {
	Action   pulumi.StringPtrInput `pulumi:"action"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Policyid pulumi.StringPtrInput `pulumi:"policyid"`
}

func (SecuritypolicySortStatePolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicySortStatePolicyList)(nil)).Elem()
}

func (i SecuritypolicySortStatePolicyListArgs) ToSecuritypolicySortStatePolicyListOutput() SecuritypolicySortStatePolicyListOutput {
	return i.ToSecuritypolicySortStatePolicyListOutputWithContext(context.Background())
}

func (i SecuritypolicySortStatePolicyListArgs) ToSecuritypolicySortStatePolicyListOutputWithContext(ctx context.Context) SecuritypolicySortStatePolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySortStatePolicyListOutput)
}

// SecuritypolicySortStatePolicyListArrayInput is an input type that accepts SecuritypolicySortStatePolicyListArray and SecuritypolicySortStatePolicyListArrayOutput values.
// You can construct a concrete instance of `SecuritypolicySortStatePolicyListArrayInput` via:
//
//	SecuritypolicySortStatePolicyListArray{ SecuritypolicySortStatePolicyListArgs{...} }
type SecuritypolicySortStatePolicyListArrayInput interface {
	pulumi.Input

	ToSecuritypolicySortStatePolicyListArrayOutput() SecuritypolicySortStatePolicyListArrayOutput
	ToSecuritypolicySortStatePolicyListArrayOutputWithContext(context.Context) SecuritypolicySortStatePolicyListArrayOutput
}

type SecuritypolicySortStatePolicyListArray []SecuritypolicySortStatePolicyListInput

func (SecuritypolicySortStatePolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicySortStatePolicyList)(nil)).Elem()
}

func (i SecuritypolicySortStatePolicyListArray) ToSecuritypolicySortStatePolicyListArrayOutput() SecuritypolicySortStatePolicyListArrayOutput {
	return i.ToSecuritypolicySortStatePolicyListArrayOutputWithContext(context.Background())
}

func (i SecuritypolicySortStatePolicyListArray) ToSecuritypolicySortStatePolicyListArrayOutputWithContext(ctx context.Context) SecuritypolicySortStatePolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySortStatePolicyListArrayOutput)
}

type SecuritypolicySortStatePolicyListOutput struct{ *pulumi.OutputState }

func (SecuritypolicySortStatePolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicySortStatePolicyList)(nil)).Elem()
}

func (o SecuritypolicySortStatePolicyListOutput) ToSecuritypolicySortStatePolicyListOutput() SecuritypolicySortStatePolicyListOutput {
	return o
}

func (o SecuritypolicySortStatePolicyListOutput) ToSecuritypolicySortStatePolicyListOutputWithContext(ctx context.Context) SecuritypolicySortStatePolicyListOutput {
	return o
}

func (o SecuritypolicySortStatePolicyListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicySortStatePolicyList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SecuritypolicySortStatePolicyListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicySortStatePolicyList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SecuritypolicySortStatePolicyListOutput) Policyid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicySortStatePolicyList) *string { return v.Policyid }).(pulumi.StringPtrOutput)
}

type SecuritypolicySortStatePolicyListArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicySortStatePolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicySortStatePolicyList)(nil)).Elem()
}

func (o SecuritypolicySortStatePolicyListArrayOutput) ToSecuritypolicySortStatePolicyListArrayOutput() SecuritypolicySortStatePolicyListArrayOutput {
	return o
}

func (o SecuritypolicySortStatePolicyListArrayOutput) ToSecuritypolicySortStatePolicyListArrayOutputWithContext(ctx context.Context) SecuritypolicySortStatePolicyListArrayOutput {
	return o
}

func (o SecuritypolicySortStatePolicyListArrayOutput) Index(i pulumi.IntInput) SecuritypolicySortStatePolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicySortStatePolicyList {
		return vs[0].([]SecuritypolicySortStatePolicyList)[vs[1].(int)]
	}).(SecuritypolicySortStatePolicyListOutput)
}

type SecuritypolicySrcaddr4 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicySrcaddr4Input is an input type that accepts SecuritypolicySrcaddr4Args and SecuritypolicySrcaddr4Output values.
// You can construct a concrete instance of `SecuritypolicySrcaddr4Input` via:
//
//	SecuritypolicySrcaddr4Args{...}
type SecuritypolicySrcaddr4Input interface {
	pulumi.Input

	ToSecuritypolicySrcaddr4Output() SecuritypolicySrcaddr4Output
	ToSecuritypolicySrcaddr4OutputWithContext(context.Context) SecuritypolicySrcaddr4Output
}

type SecuritypolicySrcaddr4Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicySrcaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicySrcaddr4)(nil)).Elem()
}

func (i SecuritypolicySrcaddr4Args) ToSecuritypolicySrcaddr4Output() SecuritypolicySrcaddr4Output {
	return i.ToSecuritypolicySrcaddr4OutputWithContext(context.Background())
}

func (i SecuritypolicySrcaddr4Args) ToSecuritypolicySrcaddr4OutputWithContext(ctx context.Context) SecuritypolicySrcaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySrcaddr4Output)
}

// SecuritypolicySrcaddr4ArrayInput is an input type that accepts SecuritypolicySrcaddr4Array and SecuritypolicySrcaddr4ArrayOutput values.
// You can construct a concrete instance of `SecuritypolicySrcaddr4ArrayInput` via:
//
//	SecuritypolicySrcaddr4Array{ SecuritypolicySrcaddr4Args{...} }
type SecuritypolicySrcaddr4ArrayInput interface {
	pulumi.Input

	ToSecuritypolicySrcaddr4ArrayOutput() SecuritypolicySrcaddr4ArrayOutput
	ToSecuritypolicySrcaddr4ArrayOutputWithContext(context.Context) SecuritypolicySrcaddr4ArrayOutput
}

type SecuritypolicySrcaddr4Array []SecuritypolicySrcaddr4Input

func (SecuritypolicySrcaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicySrcaddr4)(nil)).Elem()
}

func (i SecuritypolicySrcaddr4Array) ToSecuritypolicySrcaddr4ArrayOutput() SecuritypolicySrcaddr4ArrayOutput {
	return i.ToSecuritypolicySrcaddr4ArrayOutputWithContext(context.Background())
}

func (i SecuritypolicySrcaddr4Array) ToSecuritypolicySrcaddr4ArrayOutputWithContext(ctx context.Context) SecuritypolicySrcaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySrcaddr4ArrayOutput)
}

type SecuritypolicySrcaddr4Output struct{ *pulumi.OutputState }

func (SecuritypolicySrcaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicySrcaddr4)(nil)).Elem()
}

func (o SecuritypolicySrcaddr4Output) ToSecuritypolicySrcaddr4Output() SecuritypolicySrcaddr4Output {
	return o
}

func (o SecuritypolicySrcaddr4Output) ToSecuritypolicySrcaddr4OutputWithContext(ctx context.Context) SecuritypolicySrcaddr4Output {
	return o
}

// Policy name.
func (o SecuritypolicySrcaddr4Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicySrcaddr4) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicySrcaddr4ArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicySrcaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicySrcaddr4)(nil)).Elem()
}

func (o SecuritypolicySrcaddr4ArrayOutput) ToSecuritypolicySrcaddr4ArrayOutput() SecuritypolicySrcaddr4ArrayOutput {
	return o
}

func (o SecuritypolicySrcaddr4ArrayOutput) ToSecuritypolicySrcaddr4ArrayOutputWithContext(ctx context.Context) SecuritypolicySrcaddr4ArrayOutput {
	return o
}

func (o SecuritypolicySrcaddr4ArrayOutput) Index(i pulumi.IntInput) SecuritypolicySrcaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicySrcaddr4 {
		return vs[0].([]SecuritypolicySrcaddr4)[vs[1].(int)]
	}).(SecuritypolicySrcaddr4Output)
}

type SecuritypolicySrcaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// SecuritypolicySrcaddr6Input is an input type that accepts SecuritypolicySrcaddr6Args and SecuritypolicySrcaddr6Output values.
// You can construct a concrete instance of `SecuritypolicySrcaddr6Input` via:
//
//	SecuritypolicySrcaddr6Args{...}
type SecuritypolicySrcaddr6Input interface {
	pulumi.Input

	ToSecuritypolicySrcaddr6Output() SecuritypolicySrcaddr6Output
	ToSecuritypolicySrcaddr6OutputWithContext(context.Context) SecuritypolicySrcaddr6Output
}

type SecuritypolicySrcaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicySrcaddr6)(nil)).Elem()
}

func (i SecuritypolicySrcaddr6Args) ToSecuritypolicySrcaddr6Output() SecuritypolicySrcaddr6Output {
	return i.ToSecuritypolicySrcaddr6OutputWithContext(context.Background())
}

func (i SecuritypolicySrcaddr6Args) ToSecuritypolicySrcaddr6OutputWithContext(ctx context.Context) SecuritypolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySrcaddr6Output)
}

// SecuritypolicySrcaddr6ArrayInput is an input type that accepts SecuritypolicySrcaddr6Array and SecuritypolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `SecuritypolicySrcaddr6ArrayInput` via:
//
//	SecuritypolicySrcaddr6Array{ SecuritypolicySrcaddr6Args{...} }
type SecuritypolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToSecuritypolicySrcaddr6ArrayOutput() SecuritypolicySrcaddr6ArrayOutput
	ToSecuritypolicySrcaddr6ArrayOutputWithContext(context.Context) SecuritypolicySrcaddr6ArrayOutput
}

type SecuritypolicySrcaddr6Array []SecuritypolicySrcaddr6Input

func (SecuritypolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicySrcaddr6)(nil)).Elem()
}

func (i SecuritypolicySrcaddr6Array) ToSecuritypolicySrcaddr6ArrayOutput() SecuritypolicySrcaddr6ArrayOutput {
	return i.ToSecuritypolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i SecuritypolicySrcaddr6Array) ToSecuritypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) SecuritypolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySrcaddr6ArrayOutput)
}

type SecuritypolicySrcaddr6Output struct{ *pulumi.OutputState }

func (SecuritypolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicySrcaddr6)(nil)).Elem()
}

func (o SecuritypolicySrcaddr6Output) ToSecuritypolicySrcaddr6Output() SecuritypolicySrcaddr6Output {
	return o
}

func (o SecuritypolicySrcaddr6Output) ToSecuritypolicySrcaddr6OutputWithContext(ctx context.Context) SecuritypolicySrcaddr6Output {
	return o
}

// Policy name.
func (o SecuritypolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicySrcaddr6)(nil)).Elem()
}

func (o SecuritypolicySrcaddr6ArrayOutput) ToSecuritypolicySrcaddr6ArrayOutput() SecuritypolicySrcaddr6ArrayOutput {
	return o
}

func (o SecuritypolicySrcaddr6ArrayOutput) ToSecuritypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) SecuritypolicySrcaddr6ArrayOutput {
	return o
}

func (o SecuritypolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) SecuritypolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicySrcaddr6 {
		return vs[0].([]SecuritypolicySrcaddr6)[vs[1].(int)]
	}).(SecuritypolicySrcaddr6Output)
}

type SecuritypolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// SecuritypolicySrcaddrInput is an input type that accepts SecuritypolicySrcaddrArgs and SecuritypolicySrcaddrOutput values.
// You can construct a concrete instance of `SecuritypolicySrcaddrInput` via:
//
//	SecuritypolicySrcaddrArgs{...}
type SecuritypolicySrcaddrInput interface {
	pulumi.Input

	ToSecuritypolicySrcaddrOutput() SecuritypolicySrcaddrOutput
	ToSecuritypolicySrcaddrOutputWithContext(context.Context) SecuritypolicySrcaddrOutput
}

type SecuritypolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicySrcaddr)(nil)).Elem()
}

func (i SecuritypolicySrcaddrArgs) ToSecuritypolicySrcaddrOutput() SecuritypolicySrcaddrOutput {
	return i.ToSecuritypolicySrcaddrOutputWithContext(context.Background())
}

func (i SecuritypolicySrcaddrArgs) ToSecuritypolicySrcaddrOutputWithContext(ctx context.Context) SecuritypolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySrcaddrOutput)
}

// SecuritypolicySrcaddrArrayInput is an input type that accepts SecuritypolicySrcaddrArray and SecuritypolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `SecuritypolicySrcaddrArrayInput` via:
//
//	SecuritypolicySrcaddrArray{ SecuritypolicySrcaddrArgs{...} }
type SecuritypolicySrcaddrArrayInput interface {
	pulumi.Input

	ToSecuritypolicySrcaddrArrayOutput() SecuritypolicySrcaddrArrayOutput
	ToSecuritypolicySrcaddrArrayOutputWithContext(context.Context) SecuritypolicySrcaddrArrayOutput
}

type SecuritypolicySrcaddrArray []SecuritypolicySrcaddrInput

func (SecuritypolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicySrcaddr)(nil)).Elem()
}

func (i SecuritypolicySrcaddrArray) ToSecuritypolicySrcaddrArrayOutput() SecuritypolicySrcaddrArrayOutput {
	return i.ToSecuritypolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i SecuritypolicySrcaddrArray) ToSecuritypolicySrcaddrArrayOutputWithContext(ctx context.Context) SecuritypolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySrcaddrArrayOutput)
}

type SecuritypolicySrcaddrOutput struct{ *pulumi.OutputState }

func (SecuritypolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicySrcaddr)(nil)).Elem()
}

func (o SecuritypolicySrcaddrOutput) ToSecuritypolicySrcaddrOutput() SecuritypolicySrcaddrOutput {
	return o
}

func (o SecuritypolicySrcaddrOutput) ToSecuritypolicySrcaddrOutputWithContext(ctx context.Context) SecuritypolicySrcaddrOutput {
	return o
}

// Address name.
func (o SecuritypolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicySrcaddr)(nil)).Elem()
}

func (o SecuritypolicySrcaddrArrayOutput) ToSecuritypolicySrcaddrArrayOutput() SecuritypolicySrcaddrArrayOutput {
	return o
}

func (o SecuritypolicySrcaddrArrayOutput) ToSecuritypolicySrcaddrArrayOutputWithContext(ctx context.Context) SecuritypolicySrcaddrArrayOutput {
	return o
}

func (o SecuritypolicySrcaddrArrayOutput) Index(i pulumi.IntInput) SecuritypolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicySrcaddr {
		return vs[0].([]SecuritypolicySrcaddr)[vs[1].(int)]
	}).(SecuritypolicySrcaddrOutput)
}

type SecuritypolicySrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// SecuritypolicySrcintfInput is an input type that accepts SecuritypolicySrcintfArgs and SecuritypolicySrcintfOutput values.
// You can construct a concrete instance of `SecuritypolicySrcintfInput` via:
//
//	SecuritypolicySrcintfArgs{...}
type SecuritypolicySrcintfInput interface {
	pulumi.Input

	ToSecuritypolicySrcintfOutput() SecuritypolicySrcintfOutput
	ToSecuritypolicySrcintfOutputWithContext(context.Context) SecuritypolicySrcintfOutput
}

type SecuritypolicySrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicySrcintf)(nil)).Elem()
}

func (i SecuritypolicySrcintfArgs) ToSecuritypolicySrcintfOutput() SecuritypolicySrcintfOutput {
	return i.ToSecuritypolicySrcintfOutputWithContext(context.Background())
}

func (i SecuritypolicySrcintfArgs) ToSecuritypolicySrcintfOutputWithContext(ctx context.Context) SecuritypolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySrcintfOutput)
}

// SecuritypolicySrcintfArrayInput is an input type that accepts SecuritypolicySrcintfArray and SecuritypolicySrcintfArrayOutput values.
// You can construct a concrete instance of `SecuritypolicySrcintfArrayInput` via:
//
//	SecuritypolicySrcintfArray{ SecuritypolicySrcintfArgs{...} }
type SecuritypolicySrcintfArrayInput interface {
	pulumi.Input

	ToSecuritypolicySrcintfArrayOutput() SecuritypolicySrcintfArrayOutput
	ToSecuritypolicySrcintfArrayOutputWithContext(context.Context) SecuritypolicySrcintfArrayOutput
}

type SecuritypolicySrcintfArray []SecuritypolicySrcintfInput

func (SecuritypolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicySrcintf)(nil)).Elem()
}

func (i SecuritypolicySrcintfArray) ToSecuritypolicySrcintfArrayOutput() SecuritypolicySrcintfArrayOutput {
	return i.ToSecuritypolicySrcintfArrayOutputWithContext(context.Background())
}

func (i SecuritypolicySrcintfArray) ToSecuritypolicySrcintfArrayOutputWithContext(ctx context.Context) SecuritypolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySrcintfArrayOutput)
}

type SecuritypolicySrcintfOutput struct{ *pulumi.OutputState }

func (SecuritypolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicySrcintf)(nil)).Elem()
}

func (o SecuritypolicySrcintfOutput) ToSecuritypolicySrcintfOutput() SecuritypolicySrcintfOutput {
	return o
}

func (o SecuritypolicySrcintfOutput) ToSecuritypolicySrcintfOutputWithContext(ctx context.Context) SecuritypolicySrcintfOutput {
	return o
}

// Interface name.
func (o SecuritypolicySrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicySrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicySrcintf)(nil)).Elem()
}

func (o SecuritypolicySrcintfArrayOutput) ToSecuritypolicySrcintfArrayOutput() SecuritypolicySrcintfArrayOutput {
	return o
}

func (o SecuritypolicySrcintfArrayOutput) ToSecuritypolicySrcintfArrayOutputWithContext(ctx context.Context) SecuritypolicySrcintfArrayOutput {
	return o
}

func (o SecuritypolicySrcintfArrayOutput) Index(i pulumi.IntInput) SecuritypolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicySrcintf {
		return vs[0].([]SecuritypolicySrcintf)[vs[1].(int)]
	}).(SecuritypolicySrcintfOutput)
}

type SecuritypolicyUrlCategory struct {
	// URL category ID.
	Id *int `pulumi:"id"`
}

// SecuritypolicyUrlCategoryInput is an input type that accepts SecuritypolicyUrlCategoryArgs and SecuritypolicyUrlCategoryOutput values.
// You can construct a concrete instance of `SecuritypolicyUrlCategoryInput` via:
//
//	SecuritypolicyUrlCategoryArgs{...}
type SecuritypolicyUrlCategoryInput interface {
	pulumi.Input

	ToSecuritypolicyUrlCategoryOutput() SecuritypolicyUrlCategoryOutput
	ToSecuritypolicyUrlCategoryOutputWithContext(context.Context) SecuritypolicyUrlCategoryOutput
}

type SecuritypolicyUrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SecuritypolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyUrlCategory)(nil)).Elem()
}

func (i SecuritypolicyUrlCategoryArgs) ToSecuritypolicyUrlCategoryOutput() SecuritypolicyUrlCategoryOutput {
	return i.ToSecuritypolicyUrlCategoryOutputWithContext(context.Background())
}

func (i SecuritypolicyUrlCategoryArgs) ToSecuritypolicyUrlCategoryOutputWithContext(ctx context.Context) SecuritypolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyUrlCategoryOutput)
}

// SecuritypolicyUrlCategoryArrayInput is an input type that accepts SecuritypolicyUrlCategoryArray and SecuritypolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyUrlCategoryArrayInput` via:
//
//	SecuritypolicyUrlCategoryArray{ SecuritypolicyUrlCategoryArgs{...} }
type SecuritypolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToSecuritypolicyUrlCategoryArrayOutput() SecuritypolicyUrlCategoryArrayOutput
	ToSecuritypolicyUrlCategoryArrayOutputWithContext(context.Context) SecuritypolicyUrlCategoryArrayOutput
}

type SecuritypolicyUrlCategoryArray []SecuritypolicyUrlCategoryInput

func (SecuritypolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyUrlCategory)(nil)).Elem()
}

func (i SecuritypolicyUrlCategoryArray) ToSecuritypolicyUrlCategoryArrayOutput() SecuritypolicyUrlCategoryArrayOutput {
	return i.ToSecuritypolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyUrlCategoryArray) ToSecuritypolicyUrlCategoryArrayOutputWithContext(ctx context.Context) SecuritypolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyUrlCategoryArrayOutput)
}

type SecuritypolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (SecuritypolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyUrlCategory)(nil)).Elem()
}

func (o SecuritypolicyUrlCategoryOutput) ToSecuritypolicyUrlCategoryOutput() SecuritypolicyUrlCategoryOutput {
	return o
}

func (o SecuritypolicyUrlCategoryOutput) ToSecuritypolicyUrlCategoryOutputWithContext(ctx context.Context) SecuritypolicyUrlCategoryOutput {
	return o
}

// URL category ID.
func (o SecuritypolicyUrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecuritypolicyUrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SecuritypolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyUrlCategory)(nil)).Elem()
}

func (o SecuritypolicyUrlCategoryArrayOutput) ToSecuritypolicyUrlCategoryArrayOutput() SecuritypolicyUrlCategoryArrayOutput {
	return o
}

func (o SecuritypolicyUrlCategoryArrayOutput) ToSecuritypolicyUrlCategoryArrayOutputWithContext(ctx context.Context) SecuritypolicyUrlCategoryArrayOutput {
	return o
}

func (o SecuritypolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) SecuritypolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyUrlCategory {
		return vs[0].([]SecuritypolicyUrlCategory)[vs[1].(int)]
	}).(SecuritypolicyUrlCategoryOutput)
}

type SecuritypolicyUser struct {
	// User name.
	Name *string `pulumi:"name"`
}

// SecuritypolicyUserInput is an input type that accepts SecuritypolicyUserArgs and SecuritypolicyUserOutput values.
// You can construct a concrete instance of `SecuritypolicyUserInput` via:
//
//	SecuritypolicyUserArgs{...}
type SecuritypolicyUserInput interface {
	pulumi.Input

	ToSecuritypolicyUserOutput() SecuritypolicyUserOutput
	ToSecuritypolicyUserOutputWithContext(context.Context) SecuritypolicyUserOutput
}

type SecuritypolicyUserArgs struct {
	// User name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SecuritypolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyUser)(nil)).Elem()
}

func (i SecuritypolicyUserArgs) ToSecuritypolicyUserOutput() SecuritypolicyUserOutput {
	return i.ToSecuritypolicyUserOutputWithContext(context.Background())
}

func (i SecuritypolicyUserArgs) ToSecuritypolicyUserOutputWithContext(ctx context.Context) SecuritypolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyUserOutput)
}

// SecuritypolicyUserArrayInput is an input type that accepts SecuritypolicyUserArray and SecuritypolicyUserArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyUserArrayInput` via:
//
//	SecuritypolicyUserArray{ SecuritypolicyUserArgs{...} }
type SecuritypolicyUserArrayInput interface {
	pulumi.Input

	ToSecuritypolicyUserArrayOutput() SecuritypolicyUserArrayOutput
	ToSecuritypolicyUserArrayOutputWithContext(context.Context) SecuritypolicyUserArrayOutput
}

type SecuritypolicyUserArray []SecuritypolicyUserInput

func (SecuritypolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyUser)(nil)).Elem()
}

func (i SecuritypolicyUserArray) ToSecuritypolicyUserArrayOutput() SecuritypolicyUserArrayOutput {
	return i.ToSecuritypolicyUserArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyUserArray) ToSecuritypolicyUserArrayOutputWithContext(ctx context.Context) SecuritypolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyUserArrayOutput)
}

type SecuritypolicyUserOutput struct{ *pulumi.OutputState }

func (SecuritypolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritypolicyUser)(nil)).Elem()
}

func (o SecuritypolicyUserOutput) ToSecuritypolicyUserOutput() SecuritypolicyUserOutput {
	return o
}

func (o SecuritypolicyUserOutput) ToSecuritypolicyUserOutputWithContext(ctx context.Context) SecuritypolicyUserOutput {
	return o
}

// User name.
func (o SecuritypolicyUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritypolicyUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecuritypolicyUserArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritypolicyUser)(nil)).Elem()
}

func (o SecuritypolicyUserArrayOutput) ToSecuritypolicyUserArrayOutput() SecuritypolicyUserArrayOutput {
	return o
}

func (o SecuritypolicyUserArrayOutput) ToSecuritypolicyUserArrayOutputWithContext(ctx context.Context) SecuritypolicyUserArrayOutput {
	return o
}

func (o SecuritypolicyUserArrayOutput) Index(i pulumi.IntInput) SecuritypolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritypolicyUser {
		return vs[0].([]SecuritypolicyUser)[vs[1].(int)]
	}).(SecuritypolicyUserOutput)
}

type ShapingpolicyAppCategory struct {
	// Category IDs.
	Id *int `pulumi:"id"`
}

// ShapingpolicyAppCategoryInput is an input type that accepts ShapingpolicyAppCategoryArgs and ShapingpolicyAppCategoryOutput values.
// You can construct a concrete instance of `ShapingpolicyAppCategoryInput` via:
//
//	ShapingpolicyAppCategoryArgs{...}
type ShapingpolicyAppCategoryInput interface {
	pulumi.Input

	ToShapingpolicyAppCategoryOutput() ShapingpolicyAppCategoryOutput
	ToShapingpolicyAppCategoryOutputWithContext(context.Context) ShapingpolicyAppCategoryOutput
}

type ShapingpolicyAppCategoryArgs struct {
	// Category IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ShapingpolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyAppCategory)(nil)).Elem()
}

func (i ShapingpolicyAppCategoryArgs) ToShapingpolicyAppCategoryOutput() ShapingpolicyAppCategoryOutput {
	return i.ToShapingpolicyAppCategoryOutputWithContext(context.Background())
}

func (i ShapingpolicyAppCategoryArgs) ToShapingpolicyAppCategoryOutputWithContext(ctx context.Context) ShapingpolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyAppCategoryOutput)
}

// ShapingpolicyAppCategoryArrayInput is an input type that accepts ShapingpolicyAppCategoryArray and ShapingpolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyAppCategoryArrayInput` via:
//
//	ShapingpolicyAppCategoryArray{ ShapingpolicyAppCategoryArgs{...} }
type ShapingpolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToShapingpolicyAppCategoryArrayOutput() ShapingpolicyAppCategoryArrayOutput
	ToShapingpolicyAppCategoryArrayOutputWithContext(context.Context) ShapingpolicyAppCategoryArrayOutput
}

type ShapingpolicyAppCategoryArray []ShapingpolicyAppCategoryInput

func (ShapingpolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyAppCategory)(nil)).Elem()
}

func (i ShapingpolicyAppCategoryArray) ToShapingpolicyAppCategoryArrayOutput() ShapingpolicyAppCategoryArrayOutput {
	return i.ToShapingpolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyAppCategoryArray) ToShapingpolicyAppCategoryArrayOutputWithContext(ctx context.Context) ShapingpolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyAppCategoryArrayOutput)
}

type ShapingpolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (ShapingpolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyAppCategory)(nil)).Elem()
}

func (o ShapingpolicyAppCategoryOutput) ToShapingpolicyAppCategoryOutput() ShapingpolicyAppCategoryOutput {
	return o
}

func (o ShapingpolicyAppCategoryOutput) ToShapingpolicyAppCategoryOutputWithContext(ctx context.Context) ShapingpolicyAppCategoryOutput {
	return o
}

// Category IDs.
func (o ShapingpolicyAppCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingpolicyAppCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ShapingpolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyAppCategory)(nil)).Elem()
}

func (o ShapingpolicyAppCategoryArrayOutput) ToShapingpolicyAppCategoryArrayOutput() ShapingpolicyAppCategoryArrayOutput {
	return o
}

func (o ShapingpolicyAppCategoryArrayOutput) ToShapingpolicyAppCategoryArrayOutputWithContext(ctx context.Context) ShapingpolicyAppCategoryArrayOutput {
	return o
}

func (o ShapingpolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) ShapingpolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyAppCategory {
		return vs[0].([]ShapingpolicyAppCategory)[vs[1].(int)]
	}).(ShapingpolicyAppCategoryOutput)
}

type ShapingpolicyAppGroup struct {
	// Application group name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyAppGroupInput is an input type that accepts ShapingpolicyAppGroupArgs and ShapingpolicyAppGroupOutput values.
// You can construct a concrete instance of `ShapingpolicyAppGroupInput` via:
//
//	ShapingpolicyAppGroupArgs{...}
type ShapingpolicyAppGroupInput interface {
	pulumi.Input

	ToShapingpolicyAppGroupOutput() ShapingpolicyAppGroupOutput
	ToShapingpolicyAppGroupOutputWithContext(context.Context) ShapingpolicyAppGroupOutput
}

type ShapingpolicyAppGroupArgs struct {
	// Application group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyAppGroup)(nil)).Elem()
}

func (i ShapingpolicyAppGroupArgs) ToShapingpolicyAppGroupOutput() ShapingpolicyAppGroupOutput {
	return i.ToShapingpolicyAppGroupOutputWithContext(context.Background())
}

func (i ShapingpolicyAppGroupArgs) ToShapingpolicyAppGroupOutputWithContext(ctx context.Context) ShapingpolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyAppGroupOutput)
}

// ShapingpolicyAppGroupArrayInput is an input type that accepts ShapingpolicyAppGroupArray and ShapingpolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyAppGroupArrayInput` via:
//
//	ShapingpolicyAppGroupArray{ ShapingpolicyAppGroupArgs{...} }
type ShapingpolicyAppGroupArrayInput interface {
	pulumi.Input

	ToShapingpolicyAppGroupArrayOutput() ShapingpolicyAppGroupArrayOutput
	ToShapingpolicyAppGroupArrayOutputWithContext(context.Context) ShapingpolicyAppGroupArrayOutput
}

type ShapingpolicyAppGroupArray []ShapingpolicyAppGroupInput

func (ShapingpolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyAppGroup)(nil)).Elem()
}

func (i ShapingpolicyAppGroupArray) ToShapingpolicyAppGroupArrayOutput() ShapingpolicyAppGroupArrayOutput {
	return i.ToShapingpolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyAppGroupArray) ToShapingpolicyAppGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyAppGroupArrayOutput)
}

type ShapingpolicyAppGroupOutput struct{ *pulumi.OutputState }

func (ShapingpolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyAppGroup)(nil)).Elem()
}

func (o ShapingpolicyAppGroupOutput) ToShapingpolicyAppGroupOutput() ShapingpolicyAppGroupOutput {
	return o
}

func (o ShapingpolicyAppGroupOutput) ToShapingpolicyAppGroupOutputWithContext(ctx context.Context) ShapingpolicyAppGroupOutput {
	return o
}

// Application group name.
func (o ShapingpolicyAppGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyAppGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyAppGroup)(nil)).Elem()
}

func (o ShapingpolicyAppGroupArrayOutput) ToShapingpolicyAppGroupArrayOutput() ShapingpolicyAppGroupArrayOutput {
	return o
}

func (o ShapingpolicyAppGroupArrayOutput) ToShapingpolicyAppGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyAppGroupArrayOutput {
	return o
}

func (o ShapingpolicyAppGroupArrayOutput) Index(i pulumi.IntInput) ShapingpolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyAppGroup {
		return vs[0].([]ShapingpolicyAppGroup)[vs[1].(int)]
	}).(ShapingpolicyAppGroupOutput)
}

type ShapingpolicyApplication struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// ShapingpolicyApplicationInput is an input type that accepts ShapingpolicyApplicationArgs and ShapingpolicyApplicationOutput values.
// You can construct a concrete instance of `ShapingpolicyApplicationInput` via:
//
//	ShapingpolicyApplicationArgs{...}
type ShapingpolicyApplicationInput interface {
	pulumi.Input

	ToShapingpolicyApplicationOutput() ShapingpolicyApplicationOutput
	ToShapingpolicyApplicationOutputWithContext(context.Context) ShapingpolicyApplicationOutput
}

type ShapingpolicyApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ShapingpolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyApplication)(nil)).Elem()
}

func (i ShapingpolicyApplicationArgs) ToShapingpolicyApplicationOutput() ShapingpolicyApplicationOutput {
	return i.ToShapingpolicyApplicationOutputWithContext(context.Background())
}

func (i ShapingpolicyApplicationArgs) ToShapingpolicyApplicationOutputWithContext(ctx context.Context) ShapingpolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyApplicationOutput)
}

// ShapingpolicyApplicationArrayInput is an input type that accepts ShapingpolicyApplicationArray and ShapingpolicyApplicationArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyApplicationArrayInput` via:
//
//	ShapingpolicyApplicationArray{ ShapingpolicyApplicationArgs{...} }
type ShapingpolicyApplicationArrayInput interface {
	pulumi.Input

	ToShapingpolicyApplicationArrayOutput() ShapingpolicyApplicationArrayOutput
	ToShapingpolicyApplicationArrayOutputWithContext(context.Context) ShapingpolicyApplicationArrayOutput
}

type ShapingpolicyApplicationArray []ShapingpolicyApplicationInput

func (ShapingpolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyApplication)(nil)).Elem()
}

func (i ShapingpolicyApplicationArray) ToShapingpolicyApplicationArrayOutput() ShapingpolicyApplicationArrayOutput {
	return i.ToShapingpolicyApplicationArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyApplicationArray) ToShapingpolicyApplicationArrayOutputWithContext(ctx context.Context) ShapingpolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyApplicationArrayOutput)
}

type ShapingpolicyApplicationOutput struct{ *pulumi.OutputState }

func (ShapingpolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyApplication)(nil)).Elem()
}

func (o ShapingpolicyApplicationOutput) ToShapingpolicyApplicationOutput() ShapingpolicyApplicationOutput {
	return o
}

func (o ShapingpolicyApplicationOutput) ToShapingpolicyApplicationOutputWithContext(ctx context.Context) ShapingpolicyApplicationOutput {
	return o
}

// Application IDs.
func (o ShapingpolicyApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingpolicyApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ShapingpolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyApplication)(nil)).Elem()
}

func (o ShapingpolicyApplicationArrayOutput) ToShapingpolicyApplicationArrayOutput() ShapingpolicyApplicationArrayOutput {
	return o
}

func (o ShapingpolicyApplicationArrayOutput) ToShapingpolicyApplicationArrayOutputWithContext(ctx context.Context) ShapingpolicyApplicationArrayOutput {
	return o
}

func (o ShapingpolicyApplicationArrayOutput) Index(i pulumi.IntInput) ShapingpolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyApplication {
		return vs[0].([]ShapingpolicyApplication)[vs[1].(int)]
	}).(ShapingpolicyApplicationOutput)
}

type ShapingpolicyDstaddr6 struct {
	// Shaping policy name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyDstaddr6Input is an input type that accepts ShapingpolicyDstaddr6Args and ShapingpolicyDstaddr6Output values.
// You can construct a concrete instance of `ShapingpolicyDstaddr6Input` via:
//
//	ShapingpolicyDstaddr6Args{...}
type ShapingpolicyDstaddr6Input interface {
	pulumi.Input

	ToShapingpolicyDstaddr6Output() ShapingpolicyDstaddr6Output
	ToShapingpolicyDstaddr6OutputWithContext(context.Context) ShapingpolicyDstaddr6Output
}

type ShapingpolicyDstaddr6Args struct {
	// Shaping policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyDstaddr6)(nil)).Elem()
}

func (i ShapingpolicyDstaddr6Args) ToShapingpolicyDstaddr6Output() ShapingpolicyDstaddr6Output {
	return i.ToShapingpolicyDstaddr6OutputWithContext(context.Background())
}

func (i ShapingpolicyDstaddr6Args) ToShapingpolicyDstaddr6OutputWithContext(ctx context.Context) ShapingpolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyDstaddr6Output)
}

// ShapingpolicyDstaddr6ArrayInput is an input type that accepts ShapingpolicyDstaddr6Array and ShapingpolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyDstaddr6ArrayInput` via:
//
//	ShapingpolicyDstaddr6Array{ ShapingpolicyDstaddr6Args{...} }
type ShapingpolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToShapingpolicyDstaddr6ArrayOutput() ShapingpolicyDstaddr6ArrayOutput
	ToShapingpolicyDstaddr6ArrayOutputWithContext(context.Context) ShapingpolicyDstaddr6ArrayOutput
}

type ShapingpolicyDstaddr6Array []ShapingpolicyDstaddr6Input

func (ShapingpolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyDstaddr6)(nil)).Elem()
}

func (i ShapingpolicyDstaddr6Array) ToShapingpolicyDstaddr6ArrayOutput() ShapingpolicyDstaddr6ArrayOutput {
	return i.ToShapingpolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyDstaddr6Array) ToShapingpolicyDstaddr6ArrayOutputWithContext(ctx context.Context) ShapingpolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyDstaddr6ArrayOutput)
}

type ShapingpolicyDstaddr6Output struct{ *pulumi.OutputState }

func (ShapingpolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyDstaddr6)(nil)).Elem()
}

func (o ShapingpolicyDstaddr6Output) ToShapingpolicyDstaddr6Output() ShapingpolicyDstaddr6Output {
	return o
}

func (o ShapingpolicyDstaddr6Output) ToShapingpolicyDstaddr6OutputWithContext(ctx context.Context) ShapingpolicyDstaddr6Output {
	return o
}

// Shaping policy name.
func (o ShapingpolicyDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyDstaddr6)(nil)).Elem()
}

func (o ShapingpolicyDstaddr6ArrayOutput) ToShapingpolicyDstaddr6ArrayOutput() ShapingpolicyDstaddr6ArrayOutput {
	return o
}

func (o ShapingpolicyDstaddr6ArrayOutput) ToShapingpolicyDstaddr6ArrayOutputWithContext(ctx context.Context) ShapingpolicyDstaddr6ArrayOutput {
	return o
}

func (o ShapingpolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) ShapingpolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyDstaddr6 {
		return vs[0].([]ShapingpolicyDstaddr6)[vs[1].(int)]
	}).(ShapingpolicyDstaddr6Output)
}

type ShapingpolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyDstaddrInput is an input type that accepts ShapingpolicyDstaddrArgs and ShapingpolicyDstaddrOutput values.
// You can construct a concrete instance of `ShapingpolicyDstaddrInput` via:
//
//	ShapingpolicyDstaddrArgs{...}
type ShapingpolicyDstaddrInput interface {
	pulumi.Input

	ToShapingpolicyDstaddrOutput() ShapingpolicyDstaddrOutput
	ToShapingpolicyDstaddrOutputWithContext(context.Context) ShapingpolicyDstaddrOutput
}

type ShapingpolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyDstaddr)(nil)).Elem()
}

func (i ShapingpolicyDstaddrArgs) ToShapingpolicyDstaddrOutput() ShapingpolicyDstaddrOutput {
	return i.ToShapingpolicyDstaddrOutputWithContext(context.Background())
}

func (i ShapingpolicyDstaddrArgs) ToShapingpolicyDstaddrOutputWithContext(ctx context.Context) ShapingpolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyDstaddrOutput)
}

// ShapingpolicyDstaddrArrayInput is an input type that accepts ShapingpolicyDstaddrArray and ShapingpolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyDstaddrArrayInput` via:
//
//	ShapingpolicyDstaddrArray{ ShapingpolicyDstaddrArgs{...} }
type ShapingpolicyDstaddrArrayInput interface {
	pulumi.Input

	ToShapingpolicyDstaddrArrayOutput() ShapingpolicyDstaddrArrayOutput
	ToShapingpolicyDstaddrArrayOutputWithContext(context.Context) ShapingpolicyDstaddrArrayOutput
}

type ShapingpolicyDstaddrArray []ShapingpolicyDstaddrInput

func (ShapingpolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyDstaddr)(nil)).Elem()
}

func (i ShapingpolicyDstaddrArray) ToShapingpolicyDstaddrArrayOutput() ShapingpolicyDstaddrArrayOutput {
	return i.ToShapingpolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyDstaddrArray) ToShapingpolicyDstaddrArrayOutputWithContext(ctx context.Context) ShapingpolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyDstaddrArrayOutput)
}

type ShapingpolicyDstaddrOutput struct{ *pulumi.OutputState }

func (ShapingpolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyDstaddr)(nil)).Elem()
}

func (o ShapingpolicyDstaddrOutput) ToShapingpolicyDstaddrOutput() ShapingpolicyDstaddrOutput {
	return o
}

func (o ShapingpolicyDstaddrOutput) ToShapingpolicyDstaddrOutputWithContext(ctx context.Context) ShapingpolicyDstaddrOutput {
	return o
}

// Address name.
func (o ShapingpolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyDstaddr)(nil)).Elem()
}

func (o ShapingpolicyDstaddrArrayOutput) ToShapingpolicyDstaddrArrayOutput() ShapingpolicyDstaddrArrayOutput {
	return o
}

func (o ShapingpolicyDstaddrArrayOutput) ToShapingpolicyDstaddrArrayOutputWithContext(ctx context.Context) ShapingpolicyDstaddrArrayOutput {
	return o
}

func (o ShapingpolicyDstaddrArrayOutput) Index(i pulumi.IntInput) ShapingpolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyDstaddr {
		return vs[0].([]ShapingpolicyDstaddr)[vs[1].(int)]
	}).(ShapingpolicyDstaddrOutput)
}

type ShapingpolicyDstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyDstintfInput is an input type that accepts ShapingpolicyDstintfArgs and ShapingpolicyDstintfOutput values.
// You can construct a concrete instance of `ShapingpolicyDstintfInput` via:
//
//	ShapingpolicyDstintfArgs{...}
type ShapingpolicyDstintfInput interface {
	pulumi.Input

	ToShapingpolicyDstintfOutput() ShapingpolicyDstintfOutput
	ToShapingpolicyDstintfOutputWithContext(context.Context) ShapingpolicyDstintfOutput
}

type ShapingpolicyDstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyDstintf)(nil)).Elem()
}

func (i ShapingpolicyDstintfArgs) ToShapingpolicyDstintfOutput() ShapingpolicyDstintfOutput {
	return i.ToShapingpolicyDstintfOutputWithContext(context.Background())
}

func (i ShapingpolicyDstintfArgs) ToShapingpolicyDstintfOutputWithContext(ctx context.Context) ShapingpolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyDstintfOutput)
}

// ShapingpolicyDstintfArrayInput is an input type that accepts ShapingpolicyDstintfArray and ShapingpolicyDstintfArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyDstintfArrayInput` via:
//
//	ShapingpolicyDstintfArray{ ShapingpolicyDstintfArgs{...} }
type ShapingpolicyDstintfArrayInput interface {
	pulumi.Input

	ToShapingpolicyDstintfArrayOutput() ShapingpolicyDstintfArrayOutput
	ToShapingpolicyDstintfArrayOutputWithContext(context.Context) ShapingpolicyDstintfArrayOutput
}

type ShapingpolicyDstintfArray []ShapingpolicyDstintfInput

func (ShapingpolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyDstintf)(nil)).Elem()
}

func (i ShapingpolicyDstintfArray) ToShapingpolicyDstintfArrayOutput() ShapingpolicyDstintfArrayOutput {
	return i.ToShapingpolicyDstintfArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyDstintfArray) ToShapingpolicyDstintfArrayOutputWithContext(ctx context.Context) ShapingpolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyDstintfArrayOutput)
}

type ShapingpolicyDstintfOutput struct{ *pulumi.OutputState }

func (ShapingpolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyDstintf)(nil)).Elem()
}

func (o ShapingpolicyDstintfOutput) ToShapingpolicyDstintfOutput() ShapingpolicyDstintfOutput {
	return o
}

func (o ShapingpolicyDstintfOutput) ToShapingpolicyDstintfOutputWithContext(ctx context.Context) ShapingpolicyDstintfOutput {
	return o
}

// Interface name.
func (o ShapingpolicyDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyDstintf)(nil)).Elem()
}

func (o ShapingpolicyDstintfArrayOutput) ToShapingpolicyDstintfArrayOutput() ShapingpolicyDstintfArrayOutput {
	return o
}

func (o ShapingpolicyDstintfArrayOutput) ToShapingpolicyDstintfArrayOutputWithContext(ctx context.Context) ShapingpolicyDstintfArrayOutput {
	return o
}

func (o ShapingpolicyDstintfArrayOutput) Index(i pulumi.IntInput) ShapingpolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyDstintf {
		return vs[0].([]ShapingpolicyDstintf)[vs[1].(int)]
	}).(ShapingpolicyDstintfOutput)
}

type ShapingpolicyGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyGroupInput is an input type that accepts ShapingpolicyGroupArgs and ShapingpolicyGroupOutput values.
// You can construct a concrete instance of `ShapingpolicyGroupInput` via:
//
//	ShapingpolicyGroupArgs{...}
type ShapingpolicyGroupInput interface {
	pulumi.Input

	ToShapingpolicyGroupOutput() ShapingpolicyGroupOutput
	ToShapingpolicyGroupOutputWithContext(context.Context) ShapingpolicyGroupOutput
}

type ShapingpolicyGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyGroup)(nil)).Elem()
}

func (i ShapingpolicyGroupArgs) ToShapingpolicyGroupOutput() ShapingpolicyGroupOutput {
	return i.ToShapingpolicyGroupOutputWithContext(context.Background())
}

func (i ShapingpolicyGroupArgs) ToShapingpolicyGroupOutputWithContext(ctx context.Context) ShapingpolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyGroupOutput)
}

// ShapingpolicyGroupArrayInput is an input type that accepts ShapingpolicyGroupArray and ShapingpolicyGroupArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyGroupArrayInput` via:
//
//	ShapingpolicyGroupArray{ ShapingpolicyGroupArgs{...} }
type ShapingpolicyGroupArrayInput interface {
	pulumi.Input

	ToShapingpolicyGroupArrayOutput() ShapingpolicyGroupArrayOutput
	ToShapingpolicyGroupArrayOutputWithContext(context.Context) ShapingpolicyGroupArrayOutput
}

type ShapingpolicyGroupArray []ShapingpolicyGroupInput

func (ShapingpolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyGroup)(nil)).Elem()
}

func (i ShapingpolicyGroupArray) ToShapingpolicyGroupArrayOutput() ShapingpolicyGroupArrayOutput {
	return i.ToShapingpolicyGroupArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyGroupArray) ToShapingpolicyGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyGroupArrayOutput)
}

type ShapingpolicyGroupOutput struct{ *pulumi.OutputState }

func (ShapingpolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyGroup)(nil)).Elem()
}

func (o ShapingpolicyGroupOutput) ToShapingpolicyGroupOutput() ShapingpolicyGroupOutput {
	return o
}

func (o ShapingpolicyGroupOutput) ToShapingpolicyGroupOutputWithContext(ctx context.Context) ShapingpolicyGroupOutput {
	return o
}

// Group name.
func (o ShapingpolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyGroup)(nil)).Elem()
}

func (o ShapingpolicyGroupArrayOutput) ToShapingpolicyGroupArrayOutput() ShapingpolicyGroupArrayOutput {
	return o
}

func (o ShapingpolicyGroupArrayOutput) ToShapingpolicyGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyGroupArrayOutput {
	return o
}

func (o ShapingpolicyGroupArrayOutput) Index(i pulumi.IntInput) ShapingpolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyGroup {
		return vs[0].([]ShapingpolicyGroup)[vs[1].(int)]
	}).(ShapingpolicyGroupOutput)
}

type ShapingpolicyInternetServiceCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyInternetServiceCustomInput is an input type that accepts ShapingpolicyInternetServiceCustomArgs and ShapingpolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceCustomInput` via:
//
//	ShapingpolicyInternetServiceCustomArgs{...}
type ShapingpolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceCustomOutput() ShapingpolicyInternetServiceCustomOutput
	ToShapingpolicyInternetServiceCustomOutputWithContext(context.Context) ShapingpolicyInternetServiceCustomOutput
}

type ShapingpolicyInternetServiceCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceCustom)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceCustomArgs) ToShapingpolicyInternetServiceCustomOutput() ShapingpolicyInternetServiceCustomOutput {
	return i.ToShapingpolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceCustomArgs) ToShapingpolicyInternetServiceCustomOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceCustomOutput)
}

// ShapingpolicyInternetServiceCustomArrayInput is an input type that accepts ShapingpolicyInternetServiceCustomArray and ShapingpolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceCustomArrayInput` via:
//
//	ShapingpolicyInternetServiceCustomArray{ ShapingpolicyInternetServiceCustomArgs{...} }
type ShapingpolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceCustomArrayOutput() ShapingpolicyInternetServiceCustomArrayOutput
	ToShapingpolicyInternetServiceCustomArrayOutputWithContext(context.Context) ShapingpolicyInternetServiceCustomArrayOutput
}

type ShapingpolicyInternetServiceCustomArray []ShapingpolicyInternetServiceCustomInput

func (ShapingpolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceCustom)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceCustomArray) ToShapingpolicyInternetServiceCustomArrayOutput() ShapingpolicyInternetServiceCustomArrayOutput {
	return i.ToShapingpolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceCustomArray) ToShapingpolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceCustomArrayOutput)
}

type ShapingpolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceCustom)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceCustomOutput) ToShapingpolicyInternetServiceCustomOutput() ShapingpolicyInternetServiceCustomOutput {
	return o
}

func (o ShapingpolicyInternetServiceCustomOutput) ToShapingpolicyInternetServiceCustomOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceCustomOutput {
	return o
}

// Custom Internet Service name.
func (o ShapingpolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceCustom)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceCustomArrayOutput) ToShapingpolicyInternetServiceCustomArrayOutput() ShapingpolicyInternetServiceCustomArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceCustomArrayOutput) ToShapingpolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceCustomArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) ShapingpolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyInternetServiceCustom {
		return vs[0].([]ShapingpolicyInternetServiceCustom)[vs[1].(int)]
	}).(ShapingpolicyInternetServiceCustomOutput)
}

type ShapingpolicyInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyInternetServiceCustomGroupInput is an input type that accepts ShapingpolicyInternetServiceCustomGroupArgs and ShapingpolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceCustomGroupInput` via:
//
//	ShapingpolicyInternetServiceCustomGroupArgs{...}
type ShapingpolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceCustomGroupOutput() ShapingpolicyInternetServiceCustomGroupOutput
	ToShapingpolicyInternetServiceCustomGroupOutputWithContext(context.Context) ShapingpolicyInternetServiceCustomGroupOutput
}

type ShapingpolicyInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceCustomGroupArgs) ToShapingpolicyInternetServiceCustomGroupOutput() ShapingpolicyInternetServiceCustomGroupOutput {
	return i.ToShapingpolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceCustomGroupArgs) ToShapingpolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceCustomGroupOutput)
}

// ShapingpolicyInternetServiceCustomGroupArrayInput is an input type that accepts ShapingpolicyInternetServiceCustomGroupArray and ShapingpolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceCustomGroupArrayInput` via:
//
//	ShapingpolicyInternetServiceCustomGroupArray{ ShapingpolicyInternetServiceCustomGroupArgs{...} }
type ShapingpolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceCustomGroupArrayOutput() ShapingpolicyInternetServiceCustomGroupArrayOutput
	ToShapingpolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) ShapingpolicyInternetServiceCustomGroupArrayOutput
}

type ShapingpolicyInternetServiceCustomGroupArray []ShapingpolicyInternetServiceCustomGroupInput

func (ShapingpolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceCustomGroupArray) ToShapingpolicyInternetServiceCustomGroupArrayOutput() ShapingpolicyInternetServiceCustomGroupArrayOutput {
	return i.ToShapingpolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceCustomGroupArray) ToShapingpolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceCustomGroupArrayOutput)
}

type ShapingpolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceCustomGroupOutput) ToShapingpolicyInternetServiceCustomGroupOutput() ShapingpolicyInternetServiceCustomGroupOutput {
	return o
}

func (o ShapingpolicyInternetServiceCustomGroupOutput) ToShapingpolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o ShapingpolicyInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceCustomGroupArrayOutput) ToShapingpolicyInternetServiceCustomGroupArrayOutput() ShapingpolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceCustomGroupArrayOutput) ToShapingpolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) ShapingpolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyInternetServiceCustomGroup {
		return vs[0].([]ShapingpolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(ShapingpolicyInternetServiceCustomGroupOutput)
}

type ShapingpolicyInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyInternetServiceGroupInput is an input type that accepts ShapingpolicyInternetServiceGroupArgs and ShapingpolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceGroupInput` via:
//
//	ShapingpolicyInternetServiceGroupArgs{...}
type ShapingpolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceGroupOutput() ShapingpolicyInternetServiceGroupOutput
	ToShapingpolicyInternetServiceGroupOutputWithContext(context.Context) ShapingpolicyInternetServiceGroupOutput
}

type ShapingpolicyInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceGroup)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceGroupArgs) ToShapingpolicyInternetServiceGroupOutput() ShapingpolicyInternetServiceGroupOutput {
	return i.ToShapingpolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceGroupArgs) ToShapingpolicyInternetServiceGroupOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceGroupOutput)
}

// ShapingpolicyInternetServiceGroupArrayInput is an input type that accepts ShapingpolicyInternetServiceGroupArray and ShapingpolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceGroupArrayInput` via:
//
//	ShapingpolicyInternetServiceGroupArray{ ShapingpolicyInternetServiceGroupArgs{...} }
type ShapingpolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceGroupArrayOutput() ShapingpolicyInternetServiceGroupArrayOutput
	ToShapingpolicyInternetServiceGroupArrayOutputWithContext(context.Context) ShapingpolicyInternetServiceGroupArrayOutput
}

type ShapingpolicyInternetServiceGroupArray []ShapingpolicyInternetServiceGroupInput

func (ShapingpolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceGroup)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceGroupArray) ToShapingpolicyInternetServiceGroupArrayOutput() ShapingpolicyInternetServiceGroupArrayOutput {
	return i.ToShapingpolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceGroupArray) ToShapingpolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceGroupArrayOutput)
}

type ShapingpolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceGroup)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceGroupOutput) ToShapingpolicyInternetServiceGroupOutput() ShapingpolicyInternetServiceGroupOutput {
	return o
}

func (o ShapingpolicyInternetServiceGroupOutput) ToShapingpolicyInternetServiceGroupOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o ShapingpolicyInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceGroup)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceGroupArrayOutput) ToShapingpolicyInternetServiceGroupArrayOutput() ShapingpolicyInternetServiceGroupArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceGroupArrayOutput) ToShapingpolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceGroupArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) ShapingpolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyInternetServiceGroup {
		return vs[0].([]ShapingpolicyInternetServiceGroup)[vs[1].(int)]
	}).(ShapingpolicyInternetServiceGroupOutput)
}

type ShapingpolicyInternetServiceId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// ShapingpolicyInternetServiceIdInput is an input type that accepts ShapingpolicyInternetServiceIdArgs and ShapingpolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceIdInput` via:
//
//	ShapingpolicyInternetServiceIdArgs{...}
type ShapingpolicyInternetServiceIdInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceIdOutput() ShapingpolicyInternetServiceIdOutput
	ToShapingpolicyInternetServiceIdOutputWithContext(context.Context) ShapingpolicyInternetServiceIdOutput
}

type ShapingpolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ShapingpolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceId)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceIdArgs) ToShapingpolicyInternetServiceIdOutput() ShapingpolicyInternetServiceIdOutput {
	return i.ToShapingpolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceIdArgs) ToShapingpolicyInternetServiceIdOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceIdOutput)
}

// ShapingpolicyInternetServiceIdArrayInput is an input type that accepts ShapingpolicyInternetServiceIdArray and ShapingpolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceIdArrayInput` via:
//
//	ShapingpolicyInternetServiceIdArray{ ShapingpolicyInternetServiceIdArgs{...} }
type ShapingpolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceIdArrayOutput() ShapingpolicyInternetServiceIdArrayOutput
	ToShapingpolicyInternetServiceIdArrayOutputWithContext(context.Context) ShapingpolicyInternetServiceIdArrayOutput
}

type ShapingpolicyInternetServiceIdArray []ShapingpolicyInternetServiceIdInput

func (ShapingpolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceId)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceIdArray) ToShapingpolicyInternetServiceIdArrayOutput() ShapingpolicyInternetServiceIdArrayOutput {
	return i.ToShapingpolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceIdArray) ToShapingpolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceIdArrayOutput)
}

type ShapingpolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceId)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceIdOutput) ToShapingpolicyInternetServiceIdOutput() ShapingpolicyInternetServiceIdOutput {
	return o
}

func (o ShapingpolicyInternetServiceIdOutput) ToShapingpolicyInternetServiceIdOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o ShapingpolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingpolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ShapingpolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceId)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceIdArrayOutput) ToShapingpolicyInternetServiceIdArrayOutput() ShapingpolicyInternetServiceIdArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceIdArrayOutput) ToShapingpolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceIdArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) ShapingpolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyInternetServiceId {
		return vs[0].([]ShapingpolicyInternetServiceId)[vs[1].(int)]
	}).(ShapingpolicyInternetServiceIdOutput)
}

type ShapingpolicyInternetServiceName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyInternetServiceNameInput is an input type that accepts ShapingpolicyInternetServiceNameArgs and ShapingpolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceNameInput` via:
//
//	ShapingpolicyInternetServiceNameArgs{...}
type ShapingpolicyInternetServiceNameInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceNameOutput() ShapingpolicyInternetServiceNameOutput
	ToShapingpolicyInternetServiceNameOutputWithContext(context.Context) ShapingpolicyInternetServiceNameOutput
}

type ShapingpolicyInternetServiceNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceName)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceNameArgs) ToShapingpolicyInternetServiceNameOutput() ShapingpolicyInternetServiceNameOutput {
	return i.ToShapingpolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceNameArgs) ToShapingpolicyInternetServiceNameOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceNameOutput)
}

// ShapingpolicyInternetServiceNameArrayInput is an input type that accepts ShapingpolicyInternetServiceNameArray and ShapingpolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceNameArrayInput` via:
//
//	ShapingpolicyInternetServiceNameArray{ ShapingpolicyInternetServiceNameArgs{...} }
type ShapingpolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceNameArrayOutput() ShapingpolicyInternetServiceNameArrayOutput
	ToShapingpolicyInternetServiceNameArrayOutputWithContext(context.Context) ShapingpolicyInternetServiceNameArrayOutput
}

type ShapingpolicyInternetServiceNameArray []ShapingpolicyInternetServiceNameInput

func (ShapingpolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceName)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceNameArray) ToShapingpolicyInternetServiceNameArrayOutput() ShapingpolicyInternetServiceNameArrayOutput {
	return i.ToShapingpolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceNameArray) ToShapingpolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceNameArrayOutput)
}

type ShapingpolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceName)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceNameOutput) ToShapingpolicyInternetServiceNameOutput() ShapingpolicyInternetServiceNameOutput {
	return o
}

func (o ShapingpolicyInternetServiceNameOutput) ToShapingpolicyInternetServiceNameOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceNameOutput {
	return o
}

// Internet Service name.
func (o ShapingpolicyInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceName)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceNameArrayOutput) ToShapingpolicyInternetServiceNameArrayOutput() ShapingpolicyInternetServiceNameArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceNameArrayOutput) ToShapingpolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceNameArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) ShapingpolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyInternetServiceName {
		return vs[0].([]ShapingpolicyInternetServiceName)[vs[1].(int)]
	}).(ShapingpolicyInternetServiceNameOutput)
}

type ShapingpolicyInternetServiceSrcCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyInternetServiceSrcCustomInput is an input type that accepts ShapingpolicyInternetServiceSrcCustomArgs and ShapingpolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceSrcCustomInput` via:
//
//	ShapingpolicyInternetServiceSrcCustomArgs{...}
type ShapingpolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceSrcCustomOutput() ShapingpolicyInternetServiceSrcCustomOutput
	ToShapingpolicyInternetServiceSrcCustomOutputWithContext(context.Context) ShapingpolicyInternetServiceSrcCustomOutput
}

type ShapingpolicyInternetServiceSrcCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceSrcCustomArgs) ToShapingpolicyInternetServiceSrcCustomOutput() ShapingpolicyInternetServiceSrcCustomOutput {
	return i.ToShapingpolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceSrcCustomArgs) ToShapingpolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceSrcCustomOutput)
}

// ShapingpolicyInternetServiceSrcCustomArrayInput is an input type that accepts ShapingpolicyInternetServiceSrcCustomArray and ShapingpolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceSrcCustomArrayInput` via:
//
//	ShapingpolicyInternetServiceSrcCustomArray{ ShapingpolicyInternetServiceSrcCustomArgs{...} }
type ShapingpolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceSrcCustomArrayOutput() ShapingpolicyInternetServiceSrcCustomArrayOutput
	ToShapingpolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) ShapingpolicyInternetServiceSrcCustomArrayOutput
}

type ShapingpolicyInternetServiceSrcCustomArray []ShapingpolicyInternetServiceSrcCustomInput

func (ShapingpolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceSrcCustomArray) ToShapingpolicyInternetServiceSrcCustomArrayOutput() ShapingpolicyInternetServiceSrcCustomArrayOutput {
	return i.ToShapingpolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceSrcCustomArray) ToShapingpolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceSrcCustomArrayOutput)
}

type ShapingpolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceSrcCustomOutput) ToShapingpolicyInternetServiceSrcCustomOutput() ShapingpolicyInternetServiceSrcCustomOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcCustomOutput) ToShapingpolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcCustomOutput {
	return o
}

// Custom Internet Service name.
func (o ShapingpolicyInternetServiceSrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyInternetServiceSrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceSrcCustomArrayOutput) ToShapingpolicyInternetServiceSrcCustomArrayOutput() ShapingpolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcCustomArrayOutput) ToShapingpolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) ShapingpolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyInternetServiceSrcCustom {
		return vs[0].([]ShapingpolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(ShapingpolicyInternetServiceSrcCustomOutput)
}

type ShapingpolicyInternetServiceSrcCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyInternetServiceSrcCustomGroupInput is an input type that accepts ShapingpolicyInternetServiceSrcCustomGroupArgs and ShapingpolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceSrcCustomGroupInput` via:
//
//	ShapingpolicyInternetServiceSrcCustomGroupArgs{...}
type ShapingpolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceSrcCustomGroupOutput() ShapingpolicyInternetServiceSrcCustomGroupOutput
	ToShapingpolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) ShapingpolicyInternetServiceSrcCustomGroupOutput
}

type ShapingpolicyInternetServiceSrcCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceSrcCustomGroupArgs) ToShapingpolicyInternetServiceSrcCustomGroupOutput() ShapingpolicyInternetServiceSrcCustomGroupOutput {
	return i.ToShapingpolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceSrcCustomGroupArgs) ToShapingpolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceSrcCustomGroupOutput)
}

// ShapingpolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts ShapingpolicyInternetServiceSrcCustomGroupArray and ShapingpolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	ShapingpolicyInternetServiceSrcCustomGroupArray{ ShapingpolicyInternetServiceSrcCustomGroupArgs{...} }
type ShapingpolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceSrcCustomGroupArrayOutput() ShapingpolicyInternetServiceSrcCustomGroupArrayOutput
	ToShapingpolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) ShapingpolicyInternetServiceSrcCustomGroupArrayOutput
}

type ShapingpolicyInternetServiceSrcCustomGroupArray []ShapingpolicyInternetServiceSrcCustomGroupInput

func (ShapingpolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceSrcCustomGroupArray) ToShapingpolicyInternetServiceSrcCustomGroupArrayOutput() ShapingpolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToShapingpolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceSrcCustomGroupArray) ToShapingpolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceSrcCustomGroupArrayOutput)
}

type ShapingpolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceSrcCustomGroupOutput) ToShapingpolicyInternetServiceSrcCustomGroupOutput() ShapingpolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcCustomGroupOutput) ToShapingpolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o ShapingpolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyInternetServiceSrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceSrcCustomGroupArrayOutput) ToShapingpolicyInternetServiceSrcCustomGroupArrayOutput() ShapingpolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcCustomGroupArrayOutput) ToShapingpolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) ShapingpolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyInternetServiceSrcCustomGroup {
		return vs[0].([]ShapingpolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(ShapingpolicyInternetServiceSrcCustomGroupOutput)
}

type ShapingpolicyInternetServiceSrcGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyInternetServiceSrcGroupInput is an input type that accepts ShapingpolicyInternetServiceSrcGroupArgs and ShapingpolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceSrcGroupInput` via:
//
//	ShapingpolicyInternetServiceSrcGroupArgs{...}
type ShapingpolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceSrcGroupOutput() ShapingpolicyInternetServiceSrcGroupOutput
	ToShapingpolicyInternetServiceSrcGroupOutputWithContext(context.Context) ShapingpolicyInternetServiceSrcGroupOutput
}

type ShapingpolicyInternetServiceSrcGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceSrcGroupArgs) ToShapingpolicyInternetServiceSrcGroupOutput() ShapingpolicyInternetServiceSrcGroupOutput {
	return i.ToShapingpolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceSrcGroupArgs) ToShapingpolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceSrcGroupOutput)
}

// ShapingpolicyInternetServiceSrcGroupArrayInput is an input type that accepts ShapingpolicyInternetServiceSrcGroupArray and ShapingpolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceSrcGroupArrayInput` via:
//
//	ShapingpolicyInternetServiceSrcGroupArray{ ShapingpolicyInternetServiceSrcGroupArgs{...} }
type ShapingpolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceSrcGroupArrayOutput() ShapingpolicyInternetServiceSrcGroupArrayOutput
	ToShapingpolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) ShapingpolicyInternetServiceSrcGroupArrayOutput
}

type ShapingpolicyInternetServiceSrcGroupArray []ShapingpolicyInternetServiceSrcGroupInput

func (ShapingpolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceSrcGroupArray) ToShapingpolicyInternetServiceSrcGroupArrayOutput() ShapingpolicyInternetServiceSrcGroupArrayOutput {
	return i.ToShapingpolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceSrcGroupArray) ToShapingpolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceSrcGroupArrayOutput)
}

type ShapingpolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceSrcGroupOutput) ToShapingpolicyInternetServiceSrcGroupOutput() ShapingpolicyInternetServiceSrcGroupOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcGroupOutput) ToShapingpolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcGroupOutput {
	return o
}

// Internet Service group name.
func (o ShapingpolicyInternetServiceSrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyInternetServiceSrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceSrcGroupArrayOutput) ToShapingpolicyInternetServiceSrcGroupArrayOutput() ShapingpolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcGroupArrayOutput) ToShapingpolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) ShapingpolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyInternetServiceSrcGroup {
		return vs[0].([]ShapingpolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(ShapingpolicyInternetServiceSrcGroupOutput)
}

type ShapingpolicyInternetServiceSrcId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// ShapingpolicyInternetServiceSrcIdInput is an input type that accepts ShapingpolicyInternetServiceSrcIdArgs and ShapingpolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceSrcIdInput` via:
//
//	ShapingpolicyInternetServiceSrcIdArgs{...}
type ShapingpolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceSrcIdOutput() ShapingpolicyInternetServiceSrcIdOutput
	ToShapingpolicyInternetServiceSrcIdOutputWithContext(context.Context) ShapingpolicyInternetServiceSrcIdOutput
}

type ShapingpolicyInternetServiceSrcIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ShapingpolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceSrcId)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceSrcIdArgs) ToShapingpolicyInternetServiceSrcIdOutput() ShapingpolicyInternetServiceSrcIdOutput {
	return i.ToShapingpolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceSrcIdArgs) ToShapingpolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceSrcIdOutput)
}

// ShapingpolicyInternetServiceSrcIdArrayInput is an input type that accepts ShapingpolicyInternetServiceSrcIdArray and ShapingpolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceSrcIdArrayInput` via:
//
//	ShapingpolicyInternetServiceSrcIdArray{ ShapingpolicyInternetServiceSrcIdArgs{...} }
type ShapingpolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceSrcIdArrayOutput() ShapingpolicyInternetServiceSrcIdArrayOutput
	ToShapingpolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) ShapingpolicyInternetServiceSrcIdArrayOutput
}

type ShapingpolicyInternetServiceSrcIdArray []ShapingpolicyInternetServiceSrcIdInput

func (ShapingpolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceSrcId)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceSrcIdArray) ToShapingpolicyInternetServiceSrcIdArrayOutput() ShapingpolicyInternetServiceSrcIdArrayOutput {
	return i.ToShapingpolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceSrcIdArray) ToShapingpolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceSrcIdArrayOutput)
}

type ShapingpolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceSrcId)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceSrcIdOutput) ToShapingpolicyInternetServiceSrcIdOutput() ShapingpolicyInternetServiceSrcIdOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcIdOutput) ToShapingpolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcIdOutput {
	return o
}

// Internet Service ID.
func (o ShapingpolicyInternetServiceSrcIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingpolicyInternetServiceSrcId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ShapingpolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceSrcId)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceSrcIdArrayOutput) ToShapingpolicyInternetServiceSrcIdArrayOutput() ShapingpolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcIdArrayOutput) ToShapingpolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) ShapingpolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyInternetServiceSrcId {
		return vs[0].([]ShapingpolicyInternetServiceSrcId)[vs[1].(int)]
	}).(ShapingpolicyInternetServiceSrcIdOutput)
}

type ShapingpolicyInternetServiceSrcName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyInternetServiceSrcNameInput is an input type that accepts ShapingpolicyInternetServiceSrcNameArgs and ShapingpolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceSrcNameInput` via:
//
//	ShapingpolicyInternetServiceSrcNameArgs{...}
type ShapingpolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceSrcNameOutput() ShapingpolicyInternetServiceSrcNameOutput
	ToShapingpolicyInternetServiceSrcNameOutputWithContext(context.Context) ShapingpolicyInternetServiceSrcNameOutput
}

type ShapingpolicyInternetServiceSrcNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceSrcName)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceSrcNameArgs) ToShapingpolicyInternetServiceSrcNameOutput() ShapingpolicyInternetServiceSrcNameOutput {
	return i.ToShapingpolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceSrcNameArgs) ToShapingpolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceSrcNameOutput)
}

// ShapingpolicyInternetServiceSrcNameArrayInput is an input type that accepts ShapingpolicyInternetServiceSrcNameArray and ShapingpolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyInternetServiceSrcNameArrayInput` via:
//
//	ShapingpolicyInternetServiceSrcNameArray{ ShapingpolicyInternetServiceSrcNameArgs{...} }
type ShapingpolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToShapingpolicyInternetServiceSrcNameArrayOutput() ShapingpolicyInternetServiceSrcNameArrayOutput
	ToShapingpolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) ShapingpolicyInternetServiceSrcNameArrayOutput
}

type ShapingpolicyInternetServiceSrcNameArray []ShapingpolicyInternetServiceSrcNameInput

func (ShapingpolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceSrcName)(nil)).Elem()
}

func (i ShapingpolicyInternetServiceSrcNameArray) ToShapingpolicyInternetServiceSrcNameArrayOutput() ShapingpolicyInternetServiceSrcNameArrayOutput {
	return i.ToShapingpolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyInternetServiceSrcNameArray) ToShapingpolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyInternetServiceSrcNameArrayOutput)
}

type ShapingpolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyInternetServiceSrcName)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceSrcNameOutput) ToShapingpolicyInternetServiceSrcNameOutput() ShapingpolicyInternetServiceSrcNameOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcNameOutput) ToShapingpolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcNameOutput {
	return o
}

// Internet Service name.
func (o ShapingpolicyInternetServiceSrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyInternetServiceSrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyInternetServiceSrcName)(nil)).Elem()
}

func (o ShapingpolicyInternetServiceSrcNameArrayOutput) ToShapingpolicyInternetServiceSrcNameArrayOutput() ShapingpolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcNameArrayOutput) ToShapingpolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) ShapingpolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o ShapingpolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) ShapingpolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyInternetServiceSrcName {
		return vs[0].([]ShapingpolicyInternetServiceSrcName)[vs[1].(int)]
	}).(ShapingpolicyInternetServiceSrcNameOutput)
}

type ShapingpolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyServiceInput is an input type that accepts ShapingpolicyServiceArgs and ShapingpolicyServiceOutput values.
// You can construct a concrete instance of `ShapingpolicyServiceInput` via:
//
//	ShapingpolicyServiceArgs{...}
type ShapingpolicyServiceInput interface {
	pulumi.Input

	ToShapingpolicyServiceOutput() ShapingpolicyServiceOutput
	ToShapingpolicyServiceOutputWithContext(context.Context) ShapingpolicyServiceOutput
}

type ShapingpolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyService)(nil)).Elem()
}

func (i ShapingpolicyServiceArgs) ToShapingpolicyServiceOutput() ShapingpolicyServiceOutput {
	return i.ToShapingpolicyServiceOutputWithContext(context.Background())
}

func (i ShapingpolicyServiceArgs) ToShapingpolicyServiceOutputWithContext(ctx context.Context) ShapingpolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyServiceOutput)
}

// ShapingpolicyServiceArrayInput is an input type that accepts ShapingpolicyServiceArray and ShapingpolicyServiceArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyServiceArrayInput` via:
//
//	ShapingpolicyServiceArray{ ShapingpolicyServiceArgs{...} }
type ShapingpolicyServiceArrayInput interface {
	pulumi.Input

	ToShapingpolicyServiceArrayOutput() ShapingpolicyServiceArrayOutput
	ToShapingpolicyServiceArrayOutputWithContext(context.Context) ShapingpolicyServiceArrayOutput
}

type ShapingpolicyServiceArray []ShapingpolicyServiceInput

func (ShapingpolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyService)(nil)).Elem()
}

func (i ShapingpolicyServiceArray) ToShapingpolicyServiceArrayOutput() ShapingpolicyServiceArrayOutput {
	return i.ToShapingpolicyServiceArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyServiceArray) ToShapingpolicyServiceArrayOutputWithContext(ctx context.Context) ShapingpolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyServiceArrayOutput)
}

type ShapingpolicyServiceOutput struct{ *pulumi.OutputState }

func (ShapingpolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyService)(nil)).Elem()
}

func (o ShapingpolicyServiceOutput) ToShapingpolicyServiceOutput() ShapingpolicyServiceOutput {
	return o
}

func (o ShapingpolicyServiceOutput) ToShapingpolicyServiceOutputWithContext(ctx context.Context) ShapingpolicyServiceOutput {
	return o
}

// Service name.
func (o ShapingpolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyService)(nil)).Elem()
}

func (o ShapingpolicyServiceArrayOutput) ToShapingpolicyServiceArrayOutput() ShapingpolicyServiceArrayOutput {
	return o
}

func (o ShapingpolicyServiceArrayOutput) ToShapingpolicyServiceArrayOutputWithContext(ctx context.Context) ShapingpolicyServiceArrayOutput {
	return o
}

func (o ShapingpolicyServiceArrayOutput) Index(i pulumi.IntInput) ShapingpolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyService {
		return vs[0].([]ShapingpolicyService)[vs[1].(int)]
	}).(ShapingpolicyServiceOutput)
}

type ShapingpolicySrcaddr6 struct {
	// Shaping policy name.
	Name *string `pulumi:"name"`
}

// ShapingpolicySrcaddr6Input is an input type that accepts ShapingpolicySrcaddr6Args and ShapingpolicySrcaddr6Output values.
// You can construct a concrete instance of `ShapingpolicySrcaddr6Input` via:
//
//	ShapingpolicySrcaddr6Args{...}
type ShapingpolicySrcaddr6Input interface {
	pulumi.Input

	ToShapingpolicySrcaddr6Output() ShapingpolicySrcaddr6Output
	ToShapingpolicySrcaddr6OutputWithContext(context.Context) ShapingpolicySrcaddr6Output
}

type ShapingpolicySrcaddr6Args struct {
	// Shaping policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicySrcaddr6)(nil)).Elem()
}

func (i ShapingpolicySrcaddr6Args) ToShapingpolicySrcaddr6Output() ShapingpolicySrcaddr6Output {
	return i.ToShapingpolicySrcaddr6OutputWithContext(context.Background())
}

func (i ShapingpolicySrcaddr6Args) ToShapingpolicySrcaddr6OutputWithContext(ctx context.Context) ShapingpolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicySrcaddr6Output)
}

// ShapingpolicySrcaddr6ArrayInput is an input type that accepts ShapingpolicySrcaddr6Array and ShapingpolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `ShapingpolicySrcaddr6ArrayInput` via:
//
//	ShapingpolicySrcaddr6Array{ ShapingpolicySrcaddr6Args{...} }
type ShapingpolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToShapingpolicySrcaddr6ArrayOutput() ShapingpolicySrcaddr6ArrayOutput
	ToShapingpolicySrcaddr6ArrayOutputWithContext(context.Context) ShapingpolicySrcaddr6ArrayOutput
}

type ShapingpolicySrcaddr6Array []ShapingpolicySrcaddr6Input

func (ShapingpolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicySrcaddr6)(nil)).Elem()
}

func (i ShapingpolicySrcaddr6Array) ToShapingpolicySrcaddr6ArrayOutput() ShapingpolicySrcaddr6ArrayOutput {
	return i.ToShapingpolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i ShapingpolicySrcaddr6Array) ToShapingpolicySrcaddr6ArrayOutputWithContext(ctx context.Context) ShapingpolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicySrcaddr6ArrayOutput)
}

type ShapingpolicySrcaddr6Output struct{ *pulumi.OutputState }

func (ShapingpolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicySrcaddr6)(nil)).Elem()
}

func (o ShapingpolicySrcaddr6Output) ToShapingpolicySrcaddr6Output() ShapingpolicySrcaddr6Output {
	return o
}

func (o ShapingpolicySrcaddr6Output) ToShapingpolicySrcaddr6OutputWithContext(ctx context.Context) ShapingpolicySrcaddr6Output {
	return o
}

// Shaping policy name.
func (o ShapingpolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicySrcaddr6)(nil)).Elem()
}

func (o ShapingpolicySrcaddr6ArrayOutput) ToShapingpolicySrcaddr6ArrayOutput() ShapingpolicySrcaddr6ArrayOutput {
	return o
}

func (o ShapingpolicySrcaddr6ArrayOutput) ToShapingpolicySrcaddr6ArrayOutputWithContext(ctx context.Context) ShapingpolicySrcaddr6ArrayOutput {
	return o
}

func (o ShapingpolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) ShapingpolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicySrcaddr6 {
		return vs[0].([]ShapingpolicySrcaddr6)[vs[1].(int)]
	}).(ShapingpolicySrcaddr6Output)
}

type ShapingpolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// ShapingpolicySrcaddrInput is an input type that accepts ShapingpolicySrcaddrArgs and ShapingpolicySrcaddrOutput values.
// You can construct a concrete instance of `ShapingpolicySrcaddrInput` via:
//
//	ShapingpolicySrcaddrArgs{...}
type ShapingpolicySrcaddrInput interface {
	pulumi.Input

	ToShapingpolicySrcaddrOutput() ShapingpolicySrcaddrOutput
	ToShapingpolicySrcaddrOutputWithContext(context.Context) ShapingpolicySrcaddrOutput
}

type ShapingpolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicySrcaddr)(nil)).Elem()
}

func (i ShapingpolicySrcaddrArgs) ToShapingpolicySrcaddrOutput() ShapingpolicySrcaddrOutput {
	return i.ToShapingpolicySrcaddrOutputWithContext(context.Background())
}

func (i ShapingpolicySrcaddrArgs) ToShapingpolicySrcaddrOutputWithContext(ctx context.Context) ShapingpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicySrcaddrOutput)
}

// ShapingpolicySrcaddrArrayInput is an input type that accepts ShapingpolicySrcaddrArray and ShapingpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `ShapingpolicySrcaddrArrayInput` via:
//
//	ShapingpolicySrcaddrArray{ ShapingpolicySrcaddrArgs{...} }
type ShapingpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToShapingpolicySrcaddrArrayOutput() ShapingpolicySrcaddrArrayOutput
	ToShapingpolicySrcaddrArrayOutputWithContext(context.Context) ShapingpolicySrcaddrArrayOutput
}

type ShapingpolicySrcaddrArray []ShapingpolicySrcaddrInput

func (ShapingpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicySrcaddr)(nil)).Elem()
}

func (i ShapingpolicySrcaddrArray) ToShapingpolicySrcaddrArrayOutput() ShapingpolicySrcaddrArrayOutput {
	return i.ToShapingpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i ShapingpolicySrcaddrArray) ToShapingpolicySrcaddrArrayOutputWithContext(ctx context.Context) ShapingpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicySrcaddrArrayOutput)
}

type ShapingpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (ShapingpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicySrcaddr)(nil)).Elem()
}

func (o ShapingpolicySrcaddrOutput) ToShapingpolicySrcaddrOutput() ShapingpolicySrcaddrOutput {
	return o
}

func (o ShapingpolicySrcaddrOutput) ToShapingpolicySrcaddrOutputWithContext(ctx context.Context) ShapingpolicySrcaddrOutput {
	return o
}

// Address name.
func (o ShapingpolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicySrcaddr)(nil)).Elem()
}

func (o ShapingpolicySrcaddrArrayOutput) ToShapingpolicySrcaddrArrayOutput() ShapingpolicySrcaddrArrayOutput {
	return o
}

func (o ShapingpolicySrcaddrArrayOutput) ToShapingpolicySrcaddrArrayOutputWithContext(ctx context.Context) ShapingpolicySrcaddrArrayOutput {
	return o
}

func (o ShapingpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) ShapingpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicySrcaddr {
		return vs[0].([]ShapingpolicySrcaddr)[vs[1].(int)]
	}).(ShapingpolicySrcaddrOutput)
}

type ShapingpolicySrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// ShapingpolicySrcintfInput is an input type that accepts ShapingpolicySrcintfArgs and ShapingpolicySrcintfOutput values.
// You can construct a concrete instance of `ShapingpolicySrcintfInput` via:
//
//	ShapingpolicySrcintfArgs{...}
type ShapingpolicySrcintfInput interface {
	pulumi.Input

	ToShapingpolicySrcintfOutput() ShapingpolicySrcintfOutput
	ToShapingpolicySrcintfOutputWithContext(context.Context) ShapingpolicySrcintfOutput
}

type ShapingpolicySrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicySrcintf)(nil)).Elem()
}

func (i ShapingpolicySrcintfArgs) ToShapingpolicySrcintfOutput() ShapingpolicySrcintfOutput {
	return i.ToShapingpolicySrcintfOutputWithContext(context.Background())
}

func (i ShapingpolicySrcintfArgs) ToShapingpolicySrcintfOutputWithContext(ctx context.Context) ShapingpolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicySrcintfOutput)
}

// ShapingpolicySrcintfArrayInput is an input type that accepts ShapingpolicySrcintfArray and ShapingpolicySrcintfArrayOutput values.
// You can construct a concrete instance of `ShapingpolicySrcintfArrayInput` via:
//
//	ShapingpolicySrcintfArray{ ShapingpolicySrcintfArgs{...} }
type ShapingpolicySrcintfArrayInput interface {
	pulumi.Input

	ToShapingpolicySrcintfArrayOutput() ShapingpolicySrcintfArrayOutput
	ToShapingpolicySrcintfArrayOutputWithContext(context.Context) ShapingpolicySrcintfArrayOutput
}

type ShapingpolicySrcintfArray []ShapingpolicySrcintfInput

func (ShapingpolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicySrcintf)(nil)).Elem()
}

func (i ShapingpolicySrcintfArray) ToShapingpolicySrcintfArrayOutput() ShapingpolicySrcintfArrayOutput {
	return i.ToShapingpolicySrcintfArrayOutputWithContext(context.Background())
}

func (i ShapingpolicySrcintfArray) ToShapingpolicySrcintfArrayOutputWithContext(ctx context.Context) ShapingpolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicySrcintfArrayOutput)
}

type ShapingpolicySrcintfOutput struct{ *pulumi.OutputState }

func (ShapingpolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicySrcintf)(nil)).Elem()
}

func (o ShapingpolicySrcintfOutput) ToShapingpolicySrcintfOutput() ShapingpolicySrcintfOutput {
	return o
}

func (o ShapingpolicySrcintfOutput) ToShapingpolicySrcintfOutputWithContext(ctx context.Context) ShapingpolicySrcintfOutput {
	return o
}

// Interface name.
func (o ShapingpolicySrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicySrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicySrcintf)(nil)).Elem()
}

func (o ShapingpolicySrcintfArrayOutput) ToShapingpolicySrcintfArrayOutput() ShapingpolicySrcintfArrayOutput {
	return o
}

func (o ShapingpolicySrcintfArrayOutput) ToShapingpolicySrcintfArrayOutputWithContext(ctx context.Context) ShapingpolicySrcintfArrayOutput {
	return o
}

func (o ShapingpolicySrcintfArrayOutput) Index(i pulumi.IntInput) ShapingpolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicySrcintf {
		return vs[0].([]ShapingpolicySrcintf)[vs[1].(int)]
	}).(ShapingpolicySrcintfOutput)
}

type ShapingpolicyUrlCategory struct {
	// URL category ID.
	Id *int `pulumi:"id"`
}

// ShapingpolicyUrlCategoryInput is an input type that accepts ShapingpolicyUrlCategoryArgs and ShapingpolicyUrlCategoryOutput values.
// You can construct a concrete instance of `ShapingpolicyUrlCategoryInput` via:
//
//	ShapingpolicyUrlCategoryArgs{...}
type ShapingpolicyUrlCategoryInput interface {
	pulumi.Input

	ToShapingpolicyUrlCategoryOutput() ShapingpolicyUrlCategoryOutput
	ToShapingpolicyUrlCategoryOutputWithContext(context.Context) ShapingpolicyUrlCategoryOutput
}

type ShapingpolicyUrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ShapingpolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyUrlCategory)(nil)).Elem()
}

func (i ShapingpolicyUrlCategoryArgs) ToShapingpolicyUrlCategoryOutput() ShapingpolicyUrlCategoryOutput {
	return i.ToShapingpolicyUrlCategoryOutputWithContext(context.Background())
}

func (i ShapingpolicyUrlCategoryArgs) ToShapingpolicyUrlCategoryOutputWithContext(ctx context.Context) ShapingpolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyUrlCategoryOutput)
}

// ShapingpolicyUrlCategoryArrayInput is an input type that accepts ShapingpolicyUrlCategoryArray and ShapingpolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyUrlCategoryArrayInput` via:
//
//	ShapingpolicyUrlCategoryArray{ ShapingpolicyUrlCategoryArgs{...} }
type ShapingpolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToShapingpolicyUrlCategoryArrayOutput() ShapingpolicyUrlCategoryArrayOutput
	ToShapingpolicyUrlCategoryArrayOutputWithContext(context.Context) ShapingpolicyUrlCategoryArrayOutput
}

type ShapingpolicyUrlCategoryArray []ShapingpolicyUrlCategoryInput

func (ShapingpolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyUrlCategory)(nil)).Elem()
}

func (i ShapingpolicyUrlCategoryArray) ToShapingpolicyUrlCategoryArrayOutput() ShapingpolicyUrlCategoryArrayOutput {
	return i.ToShapingpolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyUrlCategoryArray) ToShapingpolicyUrlCategoryArrayOutputWithContext(ctx context.Context) ShapingpolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyUrlCategoryArrayOutput)
}

type ShapingpolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (ShapingpolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyUrlCategory)(nil)).Elem()
}

func (o ShapingpolicyUrlCategoryOutput) ToShapingpolicyUrlCategoryOutput() ShapingpolicyUrlCategoryOutput {
	return o
}

func (o ShapingpolicyUrlCategoryOutput) ToShapingpolicyUrlCategoryOutputWithContext(ctx context.Context) ShapingpolicyUrlCategoryOutput {
	return o
}

// URL category ID.
func (o ShapingpolicyUrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingpolicyUrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ShapingpolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyUrlCategory)(nil)).Elem()
}

func (o ShapingpolicyUrlCategoryArrayOutput) ToShapingpolicyUrlCategoryArrayOutput() ShapingpolicyUrlCategoryArrayOutput {
	return o
}

func (o ShapingpolicyUrlCategoryArrayOutput) ToShapingpolicyUrlCategoryArrayOutputWithContext(ctx context.Context) ShapingpolicyUrlCategoryArrayOutput {
	return o
}

func (o ShapingpolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) ShapingpolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyUrlCategory {
		return vs[0].([]ShapingpolicyUrlCategory)[vs[1].(int)]
	}).(ShapingpolicyUrlCategoryOutput)
}

type ShapingpolicyUser struct {
	// User name.
	Name *string `pulumi:"name"`
}

// ShapingpolicyUserInput is an input type that accepts ShapingpolicyUserArgs and ShapingpolicyUserOutput values.
// You can construct a concrete instance of `ShapingpolicyUserInput` via:
//
//	ShapingpolicyUserArgs{...}
type ShapingpolicyUserInput interface {
	pulumi.Input

	ToShapingpolicyUserOutput() ShapingpolicyUserOutput
	ToShapingpolicyUserOutputWithContext(context.Context) ShapingpolicyUserOutput
}

type ShapingpolicyUserArgs struct {
	// User name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ShapingpolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyUser)(nil)).Elem()
}

func (i ShapingpolicyUserArgs) ToShapingpolicyUserOutput() ShapingpolicyUserOutput {
	return i.ToShapingpolicyUserOutputWithContext(context.Background())
}

func (i ShapingpolicyUserArgs) ToShapingpolicyUserOutputWithContext(ctx context.Context) ShapingpolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyUserOutput)
}

// ShapingpolicyUserArrayInput is an input type that accepts ShapingpolicyUserArray and ShapingpolicyUserArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyUserArrayInput` via:
//
//	ShapingpolicyUserArray{ ShapingpolicyUserArgs{...} }
type ShapingpolicyUserArrayInput interface {
	pulumi.Input

	ToShapingpolicyUserArrayOutput() ShapingpolicyUserArrayOutput
	ToShapingpolicyUserArrayOutputWithContext(context.Context) ShapingpolicyUserArrayOutput
}

type ShapingpolicyUserArray []ShapingpolicyUserInput

func (ShapingpolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyUser)(nil)).Elem()
}

func (i ShapingpolicyUserArray) ToShapingpolicyUserArrayOutput() ShapingpolicyUserArrayOutput {
	return i.ToShapingpolicyUserArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyUserArray) ToShapingpolicyUserArrayOutputWithContext(ctx context.Context) ShapingpolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyUserArrayOutput)
}

type ShapingpolicyUserOutput struct{ *pulumi.OutputState }

func (ShapingpolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingpolicyUser)(nil)).Elem()
}

func (o ShapingpolicyUserOutput) ToShapingpolicyUserOutput() ShapingpolicyUserOutput {
	return o
}

func (o ShapingpolicyUserOutput) ToShapingpolicyUserOutputWithContext(ctx context.Context) ShapingpolicyUserOutput {
	return o
}

// User name.
func (o ShapingpolicyUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingpolicyUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ShapingpolicyUserArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingpolicyUser)(nil)).Elem()
}

func (o ShapingpolicyUserArrayOutput) ToShapingpolicyUserArrayOutput() ShapingpolicyUserArrayOutput {
	return o
}

func (o ShapingpolicyUserArrayOutput) ToShapingpolicyUserArrayOutputWithContext(ctx context.Context) ShapingpolicyUserArrayOutput {
	return o
}

func (o ShapingpolicyUserArrayOutput) Index(i pulumi.IntInput) ShapingpolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingpolicyUser {
		return vs[0].([]ShapingpolicyUser)[vs[1].(int)]
	}).(ShapingpolicyUserOutput)
}

type ShapingprofileShapingEntry struct {
	// Number of bytes that can be burst at maximum-bandwidth speed. Formula: burst = maximum-bandwidth*burst-in-msec.
	BurstInMsec *int `pulumi:"burstInMsec"`
	// Number of bytes that can be burst as fast as the interface can transmit. Formula: cburst = maximum-bandwidth*cburst-in-msec.
	CburstInMsec *int `pulumi:"cburstInMsec"`
	// Class ID.
	ClassId *int `pulumi:"classId"`
	// Guaranteed bandwith in percentage.
	GuaranteedBandwidthPercentage *int `pulumi:"guaranteedBandwidthPercentage"`
	// ID number.
	Id *int `pulumi:"id"`
	// Hard limit on the real queue size in packets.
	Limit *int `pulumi:"limit"`
	// Average queue size in packets at which RED drop probability is maximal.
	Max *int `pulumi:"max"`
	// Maximum bandwith in percentage.
	MaximumBandwidthPercentage *int `pulumi:"maximumBandwidthPercentage"`
	// Average queue size in packets at which RED drop becomes a possibility.
	Min *int `pulumi:"min"`
	// Priority.
	Priority *string `pulumi:"priority"`
	// Maximum probability (in percentage) for RED marking.
	RedProbability *int `pulumi:"redProbability"`
}

// ShapingprofileShapingEntryInput is an input type that accepts ShapingprofileShapingEntryArgs and ShapingprofileShapingEntryOutput values.
// You can construct a concrete instance of `ShapingprofileShapingEntryInput` via:
//
//	ShapingprofileShapingEntryArgs{...}
type ShapingprofileShapingEntryInput interface {
	pulumi.Input

	ToShapingprofileShapingEntryOutput() ShapingprofileShapingEntryOutput
	ToShapingprofileShapingEntryOutputWithContext(context.Context) ShapingprofileShapingEntryOutput
}

type ShapingprofileShapingEntryArgs struct {
	// Number of bytes that can be burst at maximum-bandwidth speed. Formula: burst = maximum-bandwidth*burst-in-msec.
	BurstInMsec pulumi.IntPtrInput `pulumi:"burstInMsec"`
	// Number of bytes that can be burst as fast as the interface can transmit. Formula: cburst = maximum-bandwidth*cburst-in-msec.
	CburstInMsec pulumi.IntPtrInput `pulumi:"cburstInMsec"`
	// Class ID.
	ClassId pulumi.IntPtrInput `pulumi:"classId"`
	// Guaranteed bandwith in percentage.
	GuaranteedBandwidthPercentage pulumi.IntPtrInput `pulumi:"guaranteedBandwidthPercentage"`
	// ID number.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Hard limit on the real queue size in packets.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Average queue size in packets at which RED drop probability is maximal.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// Maximum bandwith in percentage.
	MaximumBandwidthPercentage pulumi.IntPtrInput `pulumi:"maximumBandwidthPercentage"`
	// Average queue size in packets at which RED drop becomes a possibility.
	Min pulumi.IntPtrInput `pulumi:"min"`
	// Priority.
	Priority pulumi.StringPtrInput `pulumi:"priority"`
	// Maximum probability (in percentage) for RED marking.
	RedProbability pulumi.IntPtrInput `pulumi:"redProbability"`
}

func (ShapingprofileShapingEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingprofileShapingEntry)(nil)).Elem()
}

func (i ShapingprofileShapingEntryArgs) ToShapingprofileShapingEntryOutput() ShapingprofileShapingEntryOutput {
	return i.ToShapingprofileShapingEntryOutputWithContext(context.Background())
}

func (i ShapingprofileShapingEntryArgs) ToShapingprofileShapingEntryOutputWithContext(ctx context.Context) ShapingprofileShapingEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingprofileShapingEntryOutput)
}

// ShapingprofileShapingEntryArrayInput is an input type that accepts ShapingprofileShapingEntryArray and ShapingprofileShapingEntryArrayOutput values.
// You can construct a concrete instance of `ShapingprofileShapingEntryArrayInput` via:
//
//	ShapingprofileShapingEntryArray{ ShapingprofileShapingEntryArgs{...} }
type ShapingprofileShapingEntryArrayInput interface {
	pulumi.Input

	ToShapingprofileShapingEntryArrayOutput() ShapingprofileShapingEntryArrayOutput
	ToShapingprofileShapingEntryArrayOutputWithContext(context.Context) ShapingprofileShapingEntryArrayOutput
}

type ShapingprofileShapingEntryArray []ShapingprofileShapingEntryInput

func (ShapingprofileShapingEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingprofileShapingEntry)(nil)).Elem()
}

func (i ShapingprofileShapingEntryArray) ToShapingprofileShapingEntryArrayOutput() ShapingprofileShapingEntryArrayOutput {
	return i.ToShapingprofileShapingEntryArrayOutputWithContext(context.Background())
}

func (i ShapingprofileShapingEntryArray) ToShapingprofileShapingEntryArrayOutputWithContext(ctx context.Context) ShapingprofileShapingEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingprofileShapingEntryArrayOutput)
}

type ShapingprofileShapingEntryOutput struct{ *pulumi.OutputState }

func (ShapingprofileShapingEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShapingprofileShapingEntry)(nil)).Elem()
}

func (o ShapingprofileShapingEntryOutput) ToShapingprofileShapingEntryOutput() ShapingprofileShapingEntryOutput {
	return o
}

func (o ShapingprofileShapingEntryOutput) ToShapingprofileShapingEntryOutputWithContext(ctx context.Context) ShapingprofileShapingEntryOutput {
	return o
}

// Number of bytes that can be burst at maximum-bandwidth speed. Formula: burst = maximum-bandwidth*burst-in-msec.
func (o ShapingprofileShapingEntryOutput) BurstInMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingprofileShapingEntry) *int { return v.BurstInMsec }).(pulumi.IntPtrOutput)
}

// Number of bytes that can be burst as fast as the interface can transmit. Formula: cburst = maximum-bandwidth*cburst-in-msec.
func (o ShapingprofileShapingEntryOutput) CburstInMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingprofileShapingEntry) *int { return v.CburstInMsec }).(pulumi.IntPtrOutput)
}

// Class ID.
func (o ShapingprofileShapingEntryOutput) ClassId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingprofileShapingEntry) *int { return v.ClassId }).(pulumi.IntPtrOutput)
}

// Guaranteed bandwith in percentage.
func (o ShapingprofileShapingEntryOutput) GuaranteedBandwidthPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingprofileShapingEntry) *int { return v.GuaranteedBandwidthPercentage }).(pulumi.IntPtrOutput)
}

// ID number.
func (o ShapingprofileShapingEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingprofileShapingEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Hard limit on the real queue size in packets.
func (o ShapingprofileShapingEntryOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingprofileShapingEntry) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// Average queue size in packets at which RED drop probability is maximal.
func (o ShapingprofileShapingEntryOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingprofileShapingEntry) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Maximum bandwith in percentage.
func (o ShapingprofileShapingEntryOutput) MaximumBandwidthPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingprofileShapingEntry) *int { return v.MaximumBandwidthPercentage }).(pulumi.IntPtrOutput)
}

// Average queue size in packets at which RED drop becomes a possibility.
func (o ShapingprofileShapingEntryOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingprofileShapingEntry) *int { return v.Min }).(pulumi.IntPtrOutput)
}

// Priority.
func (o ShapingprofileShapingEntryOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShapingprofileShapingEntry) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// Maximum probability (in percentage) for RED marking.
func (o ShapingprofileShapingEntryOutput) RedProbability() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShapingprofileShapingEntry) *int { return v.RedProbability }).(pulumi.IntPtrOutput)
}

type ShapingprofileShapingEntryArrayOutput struct{ *pulumi.OutputState }

func (ShapingprofileShapingEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShapingprofileShapingEntry)(nil)).Elem()
}

func (o ShapingprofileShapingEntryArrayOutput) ToShapingprofileShapingEntryArrayOutput() ShapingprofileShapingEntryArrayOutput {
	return o
}

func (o ShapingprofileShapingEntryArrayOutput) ToShapingprofileShapingEntryArrayOutputWithContext(ctx context.Context) ShapingprofileShapingEntryArrayOutput {
	return o
}

func (o ShapingprofileShapingEntryArrayOutput) Index(i pulumi.IntInput) ShapingprofileShapingEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShapingprofileShapingEntry {
		return vs[0].([]ShapingprofileShapingEntry)[vs[1].(int)]
	}).(ShapingprofileShapingEntryOutput)
}

type SnifferAnomaly struct {
	// Action taken when the threshold is reached.
	Action *string `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Anomaly name.
	Name *string `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine *string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry *string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog *string `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Anomaly threshold. Number of detected instances that triggers the anomaly action. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
	Threshold *int `pulumi:"threshold"`
	// Number of detected instances (packets per second or concurrent session number) which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault *int `pulumi:"thresholddefault"`
}

// SnifferAnomalyInput is an input type that accepts SnifferAnomalyArgs and SnifferAnomalyOutput values.
// You can construct a concrete instance of `SnifferAnomalyInput` via:
//
//	SnifferAnomalyArgs{...}
type SnifferAnomalyInput interface {
	pulumi.Input

	ToSnifferAnomalyOutput() SnifferAnomalyOutput
	ToSnifferAnomalyOutputWithContext(context.Context) SnifferAnomalyOutput
}

type SnifferAnomalyArgs struct {
	// Action taken when the threshold is reached.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Anomaly name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringPtrInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog pulumi.StringPtrInput `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Anomaly threshold. Number of detected instances that triggers the anomaly action. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Number of detected instances (packets per second or concurrent session number) which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault pulumi.IntPtrInput `pulumi:"thresholddefault"`
}

func (SnifferAnomalyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnifferAnomaly)(nil)).Elem()
}

func (i SnifferAnomalyArgs) ToSnifferAnomalyOutput() SnifferAnomalyOutput {
	return i.ToSnifferAnomalyOutputWithContext(context.Background())
}

func (i SnifferAnomalyArgs) ToSnifferAnomalyOutputWithContext(ctx context.Context) SnifferAnomalyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnifferAnomalyOutput)
}

// SnifferAnomalyArrayInput is an input type that accepts SnifferAnomalyArray and SnifferAnomalyArrayOutput values.
// You can construct a concrete instance of `SnifferAnomalyArrayInput` via:
//
//	SnifferAnomalyArray{ SnifferAnomalyArgs{...} }
type SnifferAnomalyArrayInput interface {
	pulumi.Input

	ToSnifferAnomalyArrayOutput() SnifferAnomalyArrayOutput
	ToSnifferAnomalyArrayOutputWithContext(context.Context) SnifferAnomalyArrayOutput
}

type SnifferAnomalyArray []SnifferAnomalyInput

func (SnifferAnomalyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnifferAnomaly)(nil)).Elem()
}

func (i SnifferAnomalyArray) ToSnifferAnomalyArrayOutput() SnifferAnomalyArrayOutput {
	return i.ToSnifferAnomalyArrayOutputWithContext(context.Background())
}

func (i SnifferAnomalyArray) ToSnifferAnomalyArrayOutputWithContext(ctx context.Context) SnifferAnomalyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnifferAnomalyArrayOutput)
}

type SnifferAnomalyOutput struct{ *pulumi.OutputState }

func (SnifferAnomalyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnifferAnomaly)(nil)).Elem()
}

func (o SnifferAnomalyOutput) ToSnifferAnomalyOutput() SnifferAnomalyOutput {
	return o
}

func (o SnifferAnomalyOutput) ToSnifferAnomalyOutputWithContext(ctx context.Context) SnifferAnomalyOutput {
	return o
}

// Action taken when the threshold is reached.
func (o SnifferAnomalyOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnifferAnomaly) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
func (o SnifferAnomalyOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnifferAnomaly) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Anomaly name.
func (o SnifferAnomalyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnifferAnomaly) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Quarantine method. Valid values: `none`, `attacker`.
func (o SnifferAnomalyOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnifferAnomaly) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o SnifferAnomalyOutput) QuarantineExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnifferAnomaly) *string { return v.QuarantineExpiry }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
func (o SnifferAnomalyOutput) QuarantineLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnifferAnomaly) *string { return v.QuarantineLog }).(pulumi.StringPtrOutput)
}

// Enable/disable this anomaly. Valid values: `disable`, `enable`.
func (o SnifferAnomalyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnifferAnomaly) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Anomaly threshold. Number of detected instances that triggers the anomaly action. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: packets per minute. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: packets per second or concurrent session number.
func (o SnifferAnomalyOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SnifferAnomaly) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Number of detected instances (packets per second or concurrent session number) which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
func (o SnifferAnomalyOutput) Thresholddefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SnifferAnomaly) *int { return v.Thresholddefault }).(pulumi.IntPtrOutput)
}

type SnifferAnomalyArrayOutput struct{ *pulumi.OutputState }

func (SnifferAnomalyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnifferAnomaly)(nil)).Elem()
}

func (o SnifferAnomalyArrayOutput) ToSnifferAnomalyArrayOutput() SnifferAnomalyArrayOutput {
	return o
}

func (o SnifferAnomalyArrayOutput) ToSnifferAnomalyArrayOutputWithContext(ctx context.Context) SnifferAnomalyArrayOutput {
	return o
}

func (o SnifferAnomalyArrayOutput) Index(i pulumi.IntInput) SnifferAnomalyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SnifferAnomaly {
		return vs[0].([]SnifferAnomaly)[vs[1].(int)]
	}).(SnifferAnomalyOutput)
}

type SnifferIpThreatfeed struct {
	// Threat feed name.
	Name *string `pulumi:"name"`
}

// SnifferIpThreatfeedInput is an input type that accepts SnifferIpThreatfeedArgs and SnifferIpThreatfeedOutput values.
// You can construct a concrete instance of `SnifferIpThreatfeedInput` via:
//
//	SnifferIpThreatfeedArgs{...}
type SnifferIpThreatfeedInput interface {
	pulumi.Input

	ToSnifferIpThreatfeedOutput() SnifferIpThreatfeedOutput
	ToSnifferIpThreatfeedOutputWithContext(context.Context) SnifferIpThreatfeedOutput
}

type SnifferIpThreatfeedArgs struct {
	// Threat feed name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SnifferIpThreatfeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnifferIpThreatfeed)(nil)).Elem()
}

func (i SnifferIpThreatfeedArgs) ToSnifferIpThreatfeedOutput() SnifferIpThreatfeedOutput {
	return i.ToSnifferIpThreatfeedOutputWithContext(context.Background())
}

func (i SnifferIpThreatfeedArgs) ToSnifferIpThreatfeedOutputWithContext(ctx context.Context) SnifferIpThreatfeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnifferIpThreatfeedOutput)
}

// SnifferIpThreatfeedArrayInput is an input type that accepts SnifferIpThreatfeedArray and SnifferIpThreatfeedArrayOutput values.
// You can construct a concrete instance of `SnifferIpThreatfeedArrayInput` via:
//
//	SnifferIpThreatfeedArray{ SnifferIpThreatfeedArgs{...} }
type SnifferIpThreatfeedArrayInput interface {
	pulumi.Input

	ToSnifferIpThreatfeedArrayOutput() SnifferIpThreatfeedArrayOutput
	ToSnifferIpThreatfeedArrayOutputWithContext(context.Context) SnifferIpThreatfeedArrayOutput
}

type SnifferIpThreatfeedArray []SnifferIpThreatfeedInput

func (SnifferIpThreatfeedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnifferIpThreatfeed)(nil)).Elem()
}

func (i SnifferIpThreatfeedArray) ToSnifferIpThreatfeedArrayOutput() SnifferIpThreatfeedArrayOutput {
	return i.ToSnifferIpThreatfeedArrayOutputWithContext(context.Background())
}

func (i SnifferIpThreatfeedArray) ToSnifferIpThreatfeedArrayOutputWithContext(ctx context.Context) SnifferIpThreatfeedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnifferIpThreatfeedArrayOutput)
}

type SnifferIpThreatfeedOutput struct{ *pulumi.OutputState }

func (SnifferIpThreatfeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnifferIpThreatfeed)(nil)).Elem()
}

func (o SnifferIpThreatfeedOutput) ToSnifferIpThreatfeedOutput() SnifferIpThreatfeedOutput {
	return o
}

func (o SnifferIpThreatfeedOutput) ToSnifferIpThreatfeedOutputWithContext(ctx context.Context) SnifferIpThreatfeedOutput {
	return o
}

// Threat feed name.
func (o SnifferIpThreatfeedOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnifferIpThreatfeed) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SnifferIpThreatfeedArrayOutput struct{ *pulumi.OutputState }

func (SnifferIpThreatfeedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SnifferIpThreatfeed)(nil)).Elem()
}

func (o SnifferIpThreatfeedArrayOutput) ToSnifferIpThreatfeedArrayOutput() SnifferIpThreatfeedArrayOutput {
	return o
}

func (o SnifferIpThreatfeedArrayOutput) ToSnifferIpThreatfeedArrayOutputWithContext(ctx context.Context) SnifferIpThreatfeedArrayOutput {
	return o
}

func (o SnifferIpThreatfeedArrayOutput) Index(i pulumi.IntInput) SnifferIpThreatfeedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SnifferIpThreatfeed {
		return vs[0].([]SnifferIpThreatfeed)[vs[1].(int)]
	}).(SnifferIpThreatfeedOutput)
}

type SslsshprofileDot struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// QUIC inspection status. On FortiOS versions 7.4.1: default = disable. On FortiOS versions >= 7.4.2: default = inspect.
	Quic *string `pulumi:"quic"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// SslsshprofileDotInput is an input type that accepts SslsshprofileDotArgs and SslsshprofileDotOutput values.
// You can construct a concrete instance of `SslsshprofileDotInput` via:
//
//	SslsshprofileDotArgs{...}
type SslsshprofileDotInput interface {
	pulumi.Input

	ToSslsshprofileDotOutput() SslsshprofileDotOutput
	ToSslsshprofileDotOutputWithContext(context.Context) SslsshprofileDotOutput
}

type SslsshprofileDotArgs struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// QUIC inspection status. On FortiOS versions 7.4.1: default = disable. On FortiOS versions >= 7.4.2: default = inspect.
	Quic pulumi.StringPtrInput `pulumi:"quic"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (SslsshprofileDotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileDot)(nil)).Elem()
}

func (i SslsshprofileDotArgs) ToSslsshprofileDotOutput() SslsshprofileDotOutput {
	return i.ToSslsshprofileDotOutputWithContext(context.Background())
}

func (i SslsshprofileDotArgs) ToSslsshprofileDotOutputWithContext(ctx context.Context) SslsshprofileDotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileDotOutput)
}

func (i SslsshprofileDotArgs) ToSslsshprofileDotPtrOutput() SslsshprofileDotPtrOutput {
	return i.ToSslsshprofileDotPtrOutputWithContext(context.Background())
}

func (i SslsshprofileDotArgs) ToSslsshprofileDotPtrOutputWithContext(ctx context.Context) SslsshprofileDotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileDotOutput).ToSslsshprofileDotPtrOutputWithContext(ctx)
}

// SslsshprofileDotPtrInput is an input type that accepts SslsshprofileDotArgs, SslsshprofileDotPtr and SslsshprofileDotPtrOutput values.
// You can construct a concrete instance of `SslsshprofileDotPtrInput` via:
//
//	        SslsshprofileDotArgs{...}
//
//	or:
//
//	        nil
type SslsshprofileDotPtrInput interface {
	pulumi.Input

	ToSslsshprofileDotPtrOutput() SslsshprofileDotPtrOutput
	ToSslsshprofileDotPtrOutputWithContext(context.Context) SslsshprofileDotPtrOutput
}

type sslsshprofileDotPtrType SslsshprofileDotArgs

func SslsshprofileDotPtr(v *SslsshprofileDotArgs) SslsshprofileDotPtrInput {
	return (*sslsshprofileDotPtrType)(v)
}

func (*sslsshprofileDotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileDot)(nil)).Elem()
}

func (i *sslsshprofileDotPtrType) ToSslsshprofileDotPtrOutput() SslsshprofileDotPtrOutput {
	return i.ToSslsshprofileDotPtrOutputWithContext(context.Background())
}

func (i *sslsshprofileDotPtrType) ToSslsshprofileDotPtrOutputWithContext(ctx context.Context) SslsshprofileDotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileDotPtrOutput)
}

type SslsshprofileDotOutput struct{ *pulumi.OutputState }

func (SslsshprofileDotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileDot)(nil)).Elem()
}

func (o SslsshprofileDotOutput) ToSslsshprofileDotOutput() SslsshprofileDotOutput {
	return o
}

func (o SslsshprofileDotOutput) ToSslsshprofileDotOutputWithContext(ctx context.Context) SslsshprofileDotOutput {
	return o
}

func (o SslsshprofileDotOutput) ToSslsshprofileDotPtrOutput() SslsshprofileDotPtrOutput {
	return o.ToSslsshprofileDotPtrOutputWithContext(context.Background())
}

func (o SslsshprofileDotOutput) ToSslsshprofileDotPtrOutputWithContext(ctx context.Context) SslsshprofileDotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslsshprofileDot) *SslsshprofileDot {
		return &v
	}).(SslsshprofileDotPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileDotOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileDotOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileDotOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileDotOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofileDotOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// QUIC inspection status. On FortiOS versions 7.4.1: default = disable. On FortiOS versions >= 7.4.2: default = inspect.
func (o SslsshprofileDotOutput) Quic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.Quic }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileDotOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileDotOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileDotOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileDotOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileDotOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileDotOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileDotOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileDot) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type SslsshprofileDotPtrOutput struct{ *pulumi.OutputState }

func (SslsshprofileDotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileDot)(nil)).Elem()
}

func (o SslsshprofileDotPtrOutput) ToSslsshprofileDotPtrOutput() SslsshprofileDotPtrOutput {
	return o
}

func (o SslsshprofileDotPtrOutput) ToSslsshprofileDotPtrOutputWithContext(ctx context.Context) SslsshprofileDotPtrOutput {
	return o
}

func (o SslsshprofileDotPtrOutput) Elem() SslsshprofileDotOutput {
	return o.ApplyT(func(v *SslsshprofileDot) SslsshprofileDot {
		if v != nil {
			return *v
		}
		var ret SslsshprofileDot
		return ret
	}).(SslsshprofileDotOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileDotPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileDotPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileDotPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileDotPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofileDotPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// QUIC inspection status. On FortiOS versions 7.4.1: default = disable. On FortiOS versions >= 7.4.2: default = inspect.
func (o SslsshprofileDotPtrOutput) Quic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.Quic
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileDotPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileDotPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileDotPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileDotPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileDotPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileDotPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileDotPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type SslsshprofileFtps struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion *string `pulumi:"minAllowedSslVersion"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// SslsshprofileFtpsInput is an input type that accepts SslsshprofileFtpsArgs and SslsshprofileFtpsOutput values.
// You can construct a concrete instance of `SslsshprofileFtpsInput` via:
//
//	SslsshprofileFtpsArgs{...}
type SslsshprofileFtpsInput interface {
	pulumi.Input

	ToSslsshprofileFtpsOutput() SslsshprofileFtpsOutput
	ToSslsshprofileFtpsOutputWithContext(context.Context) SslsshprofileFtpsOutput
}

type SslsshprofileFtpsArgs struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion pulumi.StringPtrInput `pulumi:"minAllowedSslVersion"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (SslsshprofileFtpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileFtps)(nil)).Elem()
}

func (i SslsshprofileFtpsArgs) ToSslsshprofileFtpsOutput() SslsshprofileFtpsOutput {
	return i.ToSslsshprofileFtpsOutputWithContext(context.Background())
}

func (i SslsshprofileFtpsArgs) ToSslsshprofileFtpsOutputWithContext(ctx context.Context) SslsshprofileFtpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileFtpsOutput)
}

func (i SslsshprofileFtpsArgs) ToSslsshprofileFtpsPtrOutput() SslsshprofileFtpsPtrOutput {
	return i.ToSslsshprofileFtpsPtrOutputWithContext(context.Background())
}

func (i SslsshprofileFtpsArgs) ToSslsshprofileFtpsPtrOutputWithContext(ctx context.Context) SslsshprofileFtpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileFtpsOutput).ToSslsshprofileFtpsPtrOutputWithContext(ctx)
}

// SslsshprofileFtpsPtrInput is an input type that accepts SslsshprofileFtpsArgs, SslsshprofileFtpsPtr and SslsshprofileFtpsPtrOutput values.
// You can construct a concrete instance of `SslsshprofileFtpsPtrInput` via:
//
//	        SslsshprofileFtpsArgs{...}
//
//	or:
//
//	        nil
type SslsshprofileFtpsPtrInput interface {
	pulumi.Input

	ToSslsshprofileFtpsPtrOutput() SslsshprofileFtpsPtrOutput
	ToSslsshprofileFtpsPtrOutputWithContext(context.Context) SslsshprofileFtpsPtrOutput
}

type sslsshprofileFtpsPtrType SslsshprofileFtpsArgs

func SslsshprofileFtpsPtr(v *SslsshprofileFtpsArgs) SslsshprofileFtpsPtrInput {
	return (*sslsshprofileFtpsPtrType)(v)
}

func (*sslsshprofileFtpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileFtps)(nil)).Elem()
}

func (i *sslsshprofileFtpsPtrType) ToSslsshprofileFtpsPtrOutput() SslsshprofileFtpsPtrOutput {
	return i.ToSslsshprofileFtpsPtrOutputWithContext(context.Background())
}

func (i *sslsshprofileFtpsPtrType) ToSslsshprofileFtpsPtrOutputWithContext(ctx context.Context) SslsshprofileFtpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileFtpsPtrOutput)
}

type SslsshprofileFtpsOutput struct{ *pulumi.OutputState }

func (SslsshprofileFtpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileFtps)(nil)).Elem()
}

func (o SslsshprofileFtpsOutput) ToSslsshprofileFtpsOutput() SslsshprofileFtpsOutput {
	return o
}

func (o SslsshprofileFtpsOutput) ToSslsshprofileFtpsOutputWithContext(ctx context.Context) SslsshprofileFtpsOutput {
	return o
}

func (o SslsshprofileFtpsOutput) ToSslsshprofileFtpsPtrOutput() SslsshprofileFtpsPtrOutput {
	return o.ToSslsshprofileFtpsPtrOutputWithContext(context.Background())
}

func (o SslsshprofileFtpsOutput) ToSslsshprofileFtpsPtrOutputWithContext(ctx context.Context) SslsshprofileFtpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslsshprofileFtps) *SslsshprofileFtps {
		return &v
	}).(SslsshprofileFtpsPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileFtpsOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileFtpsOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileFtpsOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileFtpsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileFtpsOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofileFtpsOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o SslsshprofileFtpsOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.MinAllowedSslVersion }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofileFtpsOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileFtpsOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileFtpsOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileFtpsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileFtpsOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileFtpsOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileFtpsOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileFtpsOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileFtpsOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileFtps) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type SslsshprofileFtpsPtrOutput struct{ *pulumi.OutputState }

func (SslsshprofileFtpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileFtps)(nil)).Elem()
}

func (o SslsshprofileFtpsPtrOutput) ToSslsshprofileFtpsPtrOutput() SslsshprofileFtpsPtrOutput {
	return o
}

func (o SslsshprofileFtpsPtrOutput) ToSslsshprofileFtpsPtrOutputWithContext(ctx context.Context) SslsshprofileFtpsPtrOutput {
	return o
}

func (o SslsshprofileFtpsPtrOutput) Elem() SslsshprofileFtpsOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) SslsshprofileFtps {
		if v != nil {
			return *v
		}
		var ret SslsshprofileFtps
		return ret
	}).(SslsshprofileFtpsOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileFtpsPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileFtpsPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileFtpsPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileFtpsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileFtpsPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofileFtpsPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o SslsshprofileFtpsPtrOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.MinAllowedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofileFtpsPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileFtpsPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileFtpsPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileFtpsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileFtpsPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileFtpsPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileFtpsPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileFtpsPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileFtpsPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type SslsshprofileHttps struct {
	// Action based on certificate probe failure. Valid values: `allow`, `block`.
	CertProbeFailure *string `pulumi:"certProbeFailure"`
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion *string `pulumi:"minAllowedSslVersion"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// QUIC inspection status. On FortiOS versions 7.4.1: default = disable. On FortiOS versions >= 7.4.2: default = inspect.
	Quic *string `pulumi:"quic"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// SslsshprofileHttpsInput is an input type that accepts SslsshprofileHttpsArgs and SslsshprofileHttpsOutput values.
// You can construct a concrete instance of `SslsshprofileHttpsInput` via:
//
//	SslsshprofileHttpsArgs{...}
type SslsshprofileHttpsInput interface {
	pulumi.Input

	ToSslsshprofileHttpsOutput() SslsshprofileHttpsOutput
	ToSslsshprofileHttpsOutputWithContext(context.Context) SslsshprofileHttpsOutput
}

type SslsshprofileHttpsArgs struct {
	// Action based on certificate probe failure. Valid values: `allow`, `block`.
	CertProbeFailure pulumi.StringPtrInput `pulumi:"certProbeFailure"`
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion pulumi.StringPtrInput `pulumi:"minAllowedSslVersion"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// QUIC inspection status. On FortiOS versions 7.4.1: default = disable. On FortiOS versions >= 7.4.2: default = inspect.
	Quic pulumi.StringPtrInput `pulumi:"quic"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (SslsshprofileHttpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileHttps)(nil)).Elem()
}

func (i SslsshprofileHttpsArgs) ToSslsshprofileHttpsOutput() SslsshprofileHttpsOutput {
	return i.ToSslsshprofileHttpsOutputWithContext(context.Background())
}

func (i SslsshprofileHttpsArgs) ToSslsshprofileHttpsOutputWithContext(ctx context.Context) SslsshprofileHttpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileHttpsOutput)
}

func (i SslsshprofileHttpsArgs) ToSslsshprofileHttpsPtrOutput() SslsshprofileHttpsPtrOutput {
	return i.ToSslsshprofileHttpsPtrOutputWithContext(context.Background())
}

func (i SslsshprofileHttpsArgs) ToSslsshprofileHttpsPtrOutputWithContext(ctx context.Context) SslsshprofileHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileHttpsOutput).ToSslsshprofileHttpsPtrOutputWithContext(ctx)
}

// SslsshprofileHttpsPtrInput is an input type that accepts SslsshprofileHttpsArgs, SslsshprofileHttpsPtr and SslsshprofileHttpsPtrOutput values.
// You can construct a concrete instance of `SslsshprofileHttpsPtrInput` via:
//
//	        SslsshprofileHttpsArgs{...}
//
//	or:
//
//	        nil
type SslsshprofileHttpsPtrInput interface {
	pulumi.Input

	ToSslsshprofileHttpsPtrOutput() SslsshprofileHttpsPtrOutput
	ToSslsshprofileHttpsPtrOutputWithContext(context.Context) SslsshprofileHttpsPtrOutput
}

type sslsshprofileHttpsPtrType SslsshprofileHttpsArgs

func SslsshprofileHttpsPtr(v *SslsshprofileHttpsArgs) SslsshprofileHttpsPtrInput {
	return (*sslsshprofileHttpsPtrType)(v)
}

func (*sslsshprofileHttpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileHttps)(nil)).Elem()
}

func (i *sslsshprofileHttpsPtrType) ToSslsshprofileHttpsPtrOutput() SslsshprofileHttpsPtrOutput {
	return i.ToSslsshprofileHttpsPtrOutputWithContext(context.Background())
}

func (i *sslsshprofileHttpsPtrType) ToSslsshprofileHttpsPtrOutputWithContext(ctx context.Context) SslsshprofileHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileHttpsPtrOutput)
}

type SslsshprofileHttpsOutput struct{ *pulumi.OutputState }

func (SslsshprofileHttpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileHttps)(nil)).Elem()
}

func (o SslsshprofileHttpsOutput) ToSslsshprofileHttpsOutput() SslsshprofileHttpsOutput {
	return o
}

func (o SslsshprofileHttpsOutput) ToSslsshprofileHttpsOutputWithContext(ctx context.Context) SslsshprofileHttpsOutput {
	return o
}

func (o SslsshprofileHttpsOutput) ToSslsshprofileHttpsPtrOutput() SslsshprofileHttpsPtrOutput {
	return o.ToSslsshprofileHttpsPtrOutputWithContext(context.Background())
}

func (o SslsshprofileHttpsOutput) ToSslsshprofileHttpsPtrOutputWithContext(ctx context.Context) SslsshprofileHttpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslsshprofileHttps) *SslsshprofileHttps {
		return &v
	}).(SslsshprofileHttpsPtrOutput)
}

// Action based on certificate probe failure. Valid values: `allow`, `block`.
func (o SslsshprofileHttpsOutput) CertProbeFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.CertProbeFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileHttpsOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileHttpsOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileHttpsOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileHttpsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileHttpsOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofileHttpsOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o SslsshprofileHttpsOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.MinAllowedSslVersion }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofileHttpsOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofileHttpsOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// QUIC inspection status. On FortiOS versions 7.4.1: default = disable. On FortiOS versions >= 7.4.2: default = inspect.
func (o SslsshprofileHttpsOutput) Quic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.Quic }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileHttpsOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileHttpsOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
func (o SslsshprofileHttpsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileHttpsOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileHttpsOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileHttpsOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileHttpsOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileHttpsOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileHttps) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type SslsshprofileHttpsPtrOutput struct{ *pulumi.OutputState }

func (SslsshprofileHttpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileHttps)(nil)).Elem()
}

func (o SslsshprofileHttpsPtrOutput) ToSslsshprofileHttpsPtrOutput() SslsshprofileHttpsPtrOutput {
	return o
}

func (o SslsshprofileHttpsPtrOutput) ToSslsshprofileHttpsPtrOutputWithContext(ctx context.Context) SslsshprofileHttpsPtrOutput {
	return o
}

func (o SslsshprofileHttpsPtrOutput) Elem() SslsshprofileHttpsOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) SslsshprofileHttps {
		if v != nil {
			return *v
		}
		var ret SslsshprofileHttps
		return ret
	}).(SslsshprofileHttpsOutput)
}

// Action based on certificate probe failure. Valid values: `allow`, `block`.
func (o SslsshprofileHttpsPtrOutput) CertProbeFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.CertProbeFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileHttpsPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileHttpsPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileHttpsPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileHttpsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileHttpsPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofileHttpsPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o SslsshprofileHttpsPtrOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.MinAllowedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofileHttpsPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofileHttpsPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// QUIC inspection status. On FortiOS versions 7.4.1: default = disable. On FortiOS versions >= 7.4.2: default = inspect.
func (o SslsshprofileHttpsPtrOutput) Quic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.Quic
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileHttpsPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileHttpsPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
func (o SslsshprofileHttpsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileHttpsPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileHttpsPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileHttpsPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileHttpsPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileHttpsPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type SslsshprofileImaps struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// SslsshprofileImapsInput is an input type that accepts SslsshprofileImapsArgs and SslsshprofileImapsOutput values.
// You can construct a concrete instance of `SslsshprofileImapsInput` via:
//
//	SslsshprofileImapsArgs{...}
type SslsshprofileImapsInput interface {
	pulumi.Input

	ToSslsshprofileImapsOutput() SslsshprofileImapsOutput
	ToSslsshprofileImapsOutputWithContext(context.Context) SslsshprofileImapsOutput
}

type SslsshprofileImapsArgs struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (SslsshprofileImapsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileImaps)(nil)).Elem()
}

func (i SslsshprofileImapsArgs) ToSslsshprofileImapsOutput() SslsshprofileImapsOutput {
	return i.ToSslsshprofileImapsOutputWithContext(context.Background())
}

func (i SslsshprofileImapsArgs) ToSslsshprofileImapsOutputWithContext(ctx context.Context) SslsshprofileImapsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileImapsOutput)
}

func (i SslsshprofileImapsArgs) ToSslsshprofileImapsPtrOutput() SslsshprofileImapsPtrOutput {
	return i.ToSslsshprofileImapsPtrOutputWithContext(context.Background())
}

func (i SslsshprofileImapsArgs) ToSslsshprofileImapsPtrOutputWithContext(ctx context.Context) SslsshprofileImapsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileImapsOutput).ToSslsshprofileImapsPtrOutputWithContext(ctx)
}

// SslsshprofileImapsPtrInput is an input type that accepts SslsshprofileImapsArgs, SslsshprofileImapsPtr and SslsshprofileImapsPtrOutput values.
// You can construct a concrete instance of `SslsshprofileImapsPtrInput` via:
//
//	        SslsshprofileImapsArgs{...}
//
//	or:
//
//	        nil
type SslsshprofileImapsPtrInput interface {
	pulumi.Input

	ToSslsshprofileImapsPtrOutput() SslsshprofileImapsPtrOutput
	ToSslsshprofileImapsPtrOutputWithContext(context.Context) SslsshprofileImapsPtrOutput
}

type sslsshprofileImapsPtrType SslsshprofileImapsArgs

func SslsshprofileImapsPtr(v *SslsshprofileImapsArgs) SslsshprofileImapsPtrInput {
	return (*sslsshprofileImapsPtrType)(v)
}

func (*sslsshprofileImapsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileImaps)(nil)).Elem()
}

func (i *sslsshprofileImapsPtrType) ToSslsshprofileImapsPtrOutput() SslsshprofileImapsPtrOutput {
	return i.ToSslsshprofileImapsPtrOutputWithContext(context.Background())
}

func (i *sslsshprofileImapsPtrType) ToSslsshprofileImapsPtrOutputWithContext(ctx context.Context) SslsshprofileImapsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileImapsPtrOutput)
}

type SslsshprofileImapsOutput struct{ *pulumi.OutputState }

func (SslsshprofileImapsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileImaps)(nil)).Elem()
}

func (o SslsshprofileImapsOutput) ToSslsshprofileImapsOutput() SslsshprofileImapsOutput {
	return o
}

func (o SslsshprofileImapsOutput) ToSslsshprofileImapsOutputWithContext(ctx context.Context) SslsshprofileImapsOutput {
	return o
}

func (o SslsshprofileImapsOutput) ToSslsshprofileImapsPtrOutput() SslsshprofileImapsPtrOutput {
	return o.ToSslsshprofileImapsPtrOutputWithContext(context.Background())
}

func (o SslsshprofileImapsOutput) ToSslsshprofileImapsPtrOutputWithContext(ctx context.Context) SslsshprofileImapsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslsshprofileImaps) *SslsshprofileImaps {
		return &v
	}).(SslsshprofileImapsPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileImapsOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileImapsOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileImapsOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileImapsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileImapsOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofileImapsOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofileImapsOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofileImapsOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileImapsOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileImapsOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileImapsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileImapsOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileImapsOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileImapsOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileImapsOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileImapsOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileImaps) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type SslsshprofileImapsPtrOutput struct{ *pulumi.OutputState }

func (SslsshprofileImapsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileImaps)(nil)).Elem()
}

func (o SslsshprofileImapsPtrOutput) ToSslsshprofileImapsPtrOutput() SslsshprofileImapsPtrOutput {
	return o
}

func (o SslsshprofileImapsPtrOutput) ToSslsshprofileImapsPtrOutputWithContext(ctx context.Context) SslsshprofileImapsPtrOutput {
	return o
}

func (o SslsshprofileImapsPtrOutput) Elem() SslsshprofileImapsOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) SslsshprofileImaps {
		if v != nil {
			return *v
		}
		var ret SslsshprofileImaps
		return ret
	}).(SslsshprofileImapsOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileImapsPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileImapsPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileImapsPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileImapsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileImapsPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofileImapsPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofileImapsPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofileImapsPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileImapsPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileImapsPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileImapsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileImapsPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileImapsPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileImapsPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileImapsPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileImapsPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type SslsshprofilePop3s struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// SslsshprofilePop3sInput is an input type that accepts SslsshprofilePop3sArgs and SslsshprofilePop3sOutput values.
// You can construct a concrete instance of `SslsshprofilePop3sInput` via:
//
//	SslsshprofilePop3sArgs{...}
type SslsshprofilePop3sInput interface {
	pulumi.Input

	ToSslsshprofilePop3sOutput() SslsshprofilePop3sOutput
	ToSslsshprofilePop3sOutputWithContext(context.Context) SslsshprofilePop3sOutput
}

type SslsshprofilePop3sArgs struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (SslsshprofilePop3sArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofilePop3s)(nil)).Elem()
}

func (i SslsshprofilePop3sArgs) ToSslsshprofilePop3sOutput() SslsshprofilePop3sOutput {
	return i.ToSslsshprofilePop3sOutputWithContext(context.Background())
}

func (i SslsshprofilePop3sArgs) ToSslsshprofilePop3sOutputWithContext(ctx context.Context) SslsshprofilePop3sOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofilePop3sOutput)
}

func (i SslsshprofilePop3sArgs) ToSslsshprofilePop3sPtrOutput() SslsshprofilePop3sPtrOutput {
	return i.ToSslsshprofilePop3sPtrOutputWithContext(context.Background())
}

func (i SslsshprofilePop3sArgs) ToSslsshprofilePop3sPtrOutputWithContext(ctx context.Context) SslsshprofilePop3sPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofilePop3sOutput).ToSslsshprofilePop3sPtrOutputWithContext(ctx)
}

// SslsshprofilePop3sPtrInput is an input type that accepts SslsshprofilePop3sArgs, SslsshprofilePop3sPtr and SslsshprofilePop3sPtrOutput values.
// You can construct a concrete instance of `SslsshprofilePop3sPtrInput` via:
//
//	        SslsshprofilePop3sArgs{...}
//
//	or:
//
//	        nil
type SslsshprofilePop3sPtrInput interface {
	pulumi.Input

	ToSslsshprofilePop3sPtrOutput() SslsshprofilePop3sPtrOutput
	ToSslsshprofilePop3sPtrOutputWithContext(context.Context) SslsshprofilePop3sPtrOutput
}

type sslsshprofilePop3sPtrType SslsshprofilePop3sArgs

func SslsshprofilePop3sPtr(v *SslsshprofilePop3sArgs) SslsshprofilePop3sPtrInput {
	return (*sslsshprofilePop3sPtrType)(v)
}

func (*sslsshprofilePop3sPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofilePop3s)(nil)).Elem()
}

func (i *sslsshprofilePop3sPtrType) ToSslsshprofilePop3sPtrOutput() SslsshprofilePop3sPtrOutput {
	return i.ToSslsshprofilePop3sPtrOutputWithContext(context.Background())
}

func (i *sslsshprofilePop3sPtrType) ToSslsshprofilePop3sPtrOutputWithContext(ctx context.Context) SslsshprofilePop3sPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofilePop3sPtrOutput)
}

type SslsshprofilePop3sOutput struct{ *pulumi.OutputState }

func (SslsshprofilePop3sOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofilePop3s)(nil)).Elem()
}

func (o SslsshprofilePop3sOutput) ToSslsshprofilePop3sOutput() SslsshprofilePop3sOutput {
	return o
}

func (o SslsshprofilePop3sOutput) ToSslsshprofilePop3sOutputWithContext(ctx context.Context) SslsshprofilePop3sOutput {
	return o
}

func (o SslsshprofilePop3sOutput) ToSslsshprofilePop3sPtrOutput() SslsshprofilePop3sPtrOutput {
	return o.ToSslsshprofilePop3sPtrOutputWithContext(context.Background())
}

func (o SslsshprofilePop3sOutput) ToSslsshprofilePop3sPtrOutputWithContext(ctx context.Context) SslsshprofilePop3sPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslsshprofilePop3s) *SslsshprofilePop3s {
		return &v
	}).(SslsshprofilePop3sPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofilePop3sOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofilePop3sOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofilePop3sOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofilePop3sOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofilePop3sOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofilePop3sOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofilePop3sOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofilePop3sOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofilePop3sOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofilePop3sOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofilePop3sOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofilePop3sOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofilePop3sOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofilePop3sOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofilePop3sOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofilePop3sOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofilePop3s) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type SslsshprofilePop3sPtrOutput struct{ *pulumi.OutputState }

func (SslsshprofilePop3sPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofilePop3s)(nil)).Elem()
}

func (o SslsshprofilePop3sPtrOutput) ToSslsshprofilePop3sPtrOutput() SslsshprofilePop3sPtrOutput {
	return o
}

func (o SslsshprofilePop3sPtrOutput) ToSslsshprofilePop3sPtrOutputWithContext(ctx context.Context) SslsshprofilePop3sPtrOutput {
	return o
}

func (o SslsshprofilePop3sPtrOutput) Elem() SslsshprofilePop3sOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) SslsshprofilePop3s {
		if v != nil {
			return *v
		}
		var ret SslsshprofilePop3s
		return ret
	}).(SslsshprofilePop3sOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofilePop3sPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofilePop3sPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofilePop3sPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofilePop3sPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofilePop3sPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofilePop3sPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofilePop3sPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofilePop3sPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofilePop3sPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofilePop3sPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofilePop3sPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofilePop3sPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofilePop3sPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofilePop3sPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofilePop3sPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofilePop3sPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type SslsshprofileSmtps struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// SslsshprofileSmtpsInput is an input type that accepts SslsshprofileSmtpsArgs and SslsshprofileSmtpsOutput values.
// You can construct a concrete instance of `SslsshprofileSmtpsInput` via:
//
//	SslsshprofileSmtpsArgs{...}
type SslsshprofileSmtpsInput interface {
	pulumi.Input

	ToSslsshprofileSmtpsOutput() SslsshprofileSmtpsOutput
	ToSslsshprofileSmtpsOutputWithContext(context.Context) SslsshprofileSmtpsOutput
}

type SslsshprofileSmtpsArgs struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (SslsshprofileSmtpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileSmtps)(nil)).Elem()
}

func (i SslsshprofileSmtpsArgs) ToSslsshprofileSmtpsOutput() SslsshprofileSmtpsOutput {
	return i.ToSslsshprofileSmtpsOutputWithContext(context.Background())
}

func (i SslsshprofileSmtpsArgs) ToSslsshprofileSmtpsOutputWithContext(ctx context.Context) SslsshprofileSmtpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSmtpsOutput)
}

func (i SslsshprofileSmtpsArgs) ToSslsshprofileSmtpsPtrOutput() SslsshprofileSmtpsPtrOutput {
	return i.ToSslsshprofileSmtpsPtrOutputWithContext(context.Background())
}

func (i SslsshprofileSmtpsArgs) ToSslsshprofileSmtpsPtrOutputWithContext(ctx context.Context) SslsshprofileSmtpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSmtpsOutput).ToSslsshprofileSmtpsPtrOutputWithContext(ctx)
}

// SslsshprofileSmtpsPtrInput is an input type that accepts SslsshprofileSmtpsArgs, SslsshprofileSmtpsPtr and SslsshprofileSmtpsPtrOutput values.
// You can construct a concrete instance of `SslsshprofileSmtpsPtrInput` via:
//
//	        SslsshprofileSmtpsArgs{...}
//
//	or:
//
//	        nil
type SslsshprofileSmtpsPtrInput interface {
	pulumi.Input

	ToSslsshprofileSmtpsPtrOutput() SslsshprofileSmtpsPtrOutput
	ToSslsshprofileSmtpsPtrOutputWithContext(context.Context) SslsshprofileSmtpsPtrOutput
}

type sslsshprofileSmtpsPtrType SslsshprofileSmtpsArgs

func SslsshprofileSmtpsPtr(v *SslsshprofileSmtpsArgs) SslsshprofileSmtpsPtrInput {
	return (*sslsshprofileSmtpsPtrType)(v)
}

func (*sslsshprofileSmtpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileSmtps)(nil)).Elem()
}

func (i *sslsshprofileSmtpsPtrType) ToSslsshprofileSmtpsPtrOutput() SslsshprofileSmtpsPtrOutput {
	return i.ToSslsshprofileSmtpsPtrOutputWithContext(context.Background())
}

func (i *sslsshprofileSmtpsPtrType) ToSslsshprofileSmtpsPtrOutputWithContext(ctx context.Context) SslsshprofileSmtpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSmtpsPtrOutput)
}

type SslsshprofileSmtpsOutput struct{ *pulumi.OutputState }

func (SslsshprofileSmtpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileSmtps)(nil)).Elem()
}

func (o SslsshprofileSmtpsOutput) ToSslsshprofileSmtpsOutput() SslsshprofileSmtpsOutput {
	return o
}

func (o SslsshprofileSmtpsOutput) ToSslsshprofileSmtpsOutputWithContext(ctx context.Context) SslsshprofileSmtpsOutput {
	return o
}

func (o SslsshprofileSmtpsOutput) ToSslsshprofileSmtpsPtrOutput() SslsshprofileSmtpsPtrOutput {
	return o.ToSslsshprofileSmtpsPtrOutputWithContext(context.Background())
}

func (o SslsshprofileSmtpsOutput) ToSslsshprofileSmtpsPtrOutputWithContext(ctx context.Context) SslsshprofileSmtpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslsshprofileSmtps) *SslsshprofileSmtps {
		return &v
	}).(SslsshprofileSmtpsPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSmtpsOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSmtpsOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSmtpsOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSmtpsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSmtpsOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofileSmtpsOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofileSmtpsOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofileSmtpsOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSmtpsOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileSmtpsOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileSmtpsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSmtpsOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileSmtpsOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileSmtpsOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileSmtpsOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSmtpsOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSmtps) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type SslsshprofileSmtpsPtrOutput struct{ *pulumi.OutputState }

func (SslsshprofileSmtpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileSmtps)(nil)).Elem()
}

func (o SslsshprofileSmtpsPtrOutput) ToSslsshprofileSmtpsPtrOutput() SslsshprofileSmtpsPtrOutput {
	return o
}

func (o SslsshprofileSmtpsPtrOutput) ToSslsshprofileSmtpsPtrOutputWithContext(ctx context.Context) SslsshprofileSmtpsPtrOutput {
	return o
}

func (o SslsshprofileSmtpsPtrOutput) Elem() SslsshprofileSmtpsOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) SslsshprofileSmtps {
		if v != nil {
			return *v
		}
		var ret SslsshprofileSmtps
		return ret
	}).(SslsshprofileSmtpsOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSmtpsPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSmtpsPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSmtpsPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSmtpsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSmtpsPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofileSmtpsPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofileSmtpsPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofileSmtpsPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSmtpsPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileSmtpsPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileSmtpsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSmtpsPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileSmtpsPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileSmtpsPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileSmtpsPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSmtpsPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type SslsshprofileSsh struct {
	// Level of SSL inspection. Valid values: `disable`, `deep-inspection`.
	InspectAll *string `pulumi:"inspectAll"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Relative strength of encryption algorithms accepted during negotiation. Valid values: `compatible`, `high-encryption`.
	SshAlgorithm *string `pulumi:"sshAlgorithm"`
	// Enable/disable SSH policy check. Valid values: `disable`, `enable`.
	SshPolicyCheck *string `pulumi:"sshPolicyCheck"`
	// Enable/disable SSH tunnel policy check. Valid values: `disable`, `enable`.
	SshTunPolicyCheck *string `pulumi:"sshTunPolicyCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on SSH version being unsupported. Valid values: `bypass`, `block`.
	UnsupportedVersion *string `pulumi:"unsupportedVersion"`
}

// SslsshprofileSshInput is an input type that accepts SslsshprofileSshArgs and SslsshprofileSshOutput values.
// You can construct a concrete instance of `SslsshprofileSshInput` via:
//
//	SslsshprofileSshArgs{...}
type SslsshprofileSshInput interface {
	pulumi.Input

	ToSslsshprofileSshOutput() SslsshprofileSshOutput
	ToSslsshprofileSshOutputWithContext(context.Context) SslsshprofileSshOutput
}

type SslsshprofileSshArgs struct {
	// Level of SSL inspection. Valid values: `disable`, `deep-inspection`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Relative strength of encryption algorithms accepted during negotiation. Valid values: `compatible`, `high-encryption`.
	SshAlgorithm pulumi.StringPtrInput `pulumi:"sshAlgorithm"`
	// Enable/disable SSH policy check. Valid values: `disable`, `enable`.
	SshPolicyCheck pulumi.StringPtrInput `pulumi:"sshPolicyCheck"`
	// Enable/disable SSH tunnel policy check. Valid values: `disable`, `enable`.
	SshTunPolicyCheck pulumi.StringPtrInput `pulumi:"sshTunPolicyCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on SSH version being unsupported. Valid values: `bypass`, `block`.
	UnsupportedVersion pulumi.StringPtrInput `pulumi:"unsupportedVersion"`
}

func (SslsshprofileSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileSsh)(nil)).Elem()
}

func (i SslsshprofileSshArgs) ToSslsshprofileSshOutput() SslsshprofileSshOutput {
	return i.ToSslsshprofileSshOutputWithContext(context.Background())
}

func (i SslsshprofileSshArgs) ToSslsshprofileSshOutputWithContext(ctx context.Context) SslsshprofileSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSshOutput)
}

func (i SslsshprofileSshArgs) ToSslsshprofileSshPtrOutput() SslsshprofileSshPtrOutput {
	return i.ToSslsshprofileSshPtrOutputWithContext(context.Background())
}

func (i SslsshprofileSshArgs) ToSslsshprofileSshPtrOutputWithContext(ctx context.Context) SslsshprofileSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSshOutput).ToSslsshprofileSshPtrOutputWithContext(ctx)
}

// SslsshprofileSshPtrInput is an input type that accepts SslsshprofileSshArgs, SslsshprofileSshPtr and SslsshprofileSshPtrOutput values.
// You can construct a concrete instance of `SslsshprofileSshPtrInput` via:
//
//	        SslsshprofileSshArgs{...}
//
//	or:
//
//	        nil
type SslsshprofileSshPtrInput interface {
	pulumi.Input

	ToSslsshprofileSshPtrOutput() SslsshprofileSshPtrOutput
	ToSslsshprofileSshPtrOutputWithContext(context.Context) SslsshprofileSshPtrOutput
}

type sslsshprofileSshPtrType SslsshprofileSshArgs

func SslsshprofileSshPtr(v *SslsshprofileSshArgs) SslsshprofileSshPtrInput {
	return (*sslsshprofileSshPtrType)(v)
}

func (*sslsshprofileSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileSsh)(nil)).Elem()
}

func (i *sslsshprofileSshPtrType) ToSslsshprofileSshPtrOutput() SslsshprofileSshPtrOutput {
	return i.ToSslsshprofileSshPtrOutputWithContext(context.Background())
}

func (i *sslsshprofileSshPtrType) ToSslsshprofileSshPtrOutputWithContext(ctx context.Context) SslsshprofileSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSshPtrOutput)
}

type SslsshprofileSshOutput struct{ *pulumi.OutputState }

func (SslsshprofileSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileSsh)(nil)).Elem()
}

func (o SslsshprofileSshOutput) ToSslsshprofileSshOutput() SslsshprofileSshOutput {
	return o
}

func (o SslsshprofileSshOutput) ToSslsshprofileSshOutputWithContext(ctx context.Context) SslsshprofileSshOutput {
	return o
}

func (o SslsshprofileSshOutput) ToSslsshprofileSshPtrOutput() SslsshprofileSshPtrOutput {
	return o.ToSslsshprofileSshPtrOutputWithContext(context.Background())
}

func (o SslsshprofileSshOutput) ToSslsshprofileSshPtrOutputWithContext(ctx context.Context) SslsshprofileSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslsshprofileSsh) *SslsshprofileSsh {
		return &v
	}).(SslsshprofileSshPtrOutput)
}

// Level of SSL inspection. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileSshOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsh) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofileSshOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsh) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofileSshOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsh) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Relative strength of encryption algorithms accepted during negotiation. Valid values: `compatible`, `high-encryption`.
func (o SslsshprofileSshOutput) SshAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsh) *string { return v.SshAlgorithm }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH policy check. Valid values: `disable`, `enable`.
func (o SslsshprofileSshOutput) SshPolicyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsh) *string { return v.SshPolicyCheck }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH tunnel policy check. Valid values: `disable`, `enable`.
func (o SslsshprofileSshOutput) SshTunPolicyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsh) *string { return v.SshTunPolicyCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileSshOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsh) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on SSH version being unsupported. Valid values: `bypass`, `block`.
func (o SslsshprofileSshOutput) UnsupportedVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsh) *string { return v.UnsupportedVersion }).(pulumi.StringPtrOutput)
}

type SslsshprofileSshPtrOutput struct{ *pulumi.OutputState }

func (SslsshprofileSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileSsh)(nil)).Elem()
}

func (o SslsshprofileSshPtrOutput) ToSslsshprofileSshPtrOutput() SslsshprofileSshPtrOutput {
	return o
}

func (o SslsshprofileSshPtrOutput) ToSslsshprofileSshPtrOutputWithContext(ctx context.Context) SslsshprofileSshPtrOutput {
	return o
}

func (o SslsshprofileSshPtrOutput) Elem() SslsshprofileSshOutput {
	return o.ApplyT(func(v *SslsshprofileSsh) SslsshprofileSsh {
		if v != nil {
			return *v
		}
		var ret SslsshprofileSsh
		return ret
	}).(SslsshprofileSshOutput)
}

// Level of SSL inspection. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileSshPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o SslsshprofileSshPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o SslsshprofileSshPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Relative strength of encryption algorithms accepted during negotiation. Valid values: `compatible`, `high-encryption`.
func (o SslsshprofileSshPtrOutput) SshAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.SshAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SSH policy check. Valid values: `disable`, `enable`.
func (o SslsshprofileSshPtrOutput) SshPolicyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.SshPolicyCheck
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SSH tunnel policy check. Valid values: `disable`, `enable`.
func (o SslsshprofileSshPtrOutput) SshTunPolicyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.SshTunPolicyCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o SslsshprofileSshPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on SSH version being unsupported. Valid values: `bypass`, `block`.
func (o SslsshprofileSshPtrOutput) UnsupportedVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedVersion
	}).(pulumi.StringPtrOutput)
}

type SslsshprofileSsl struct {
	// Action based on certificate probe failure. Valid values: `allow`, `block`.
	CertProbeFailure *string `pulumi:"certProbeFailure"`
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Level of SSL inspection. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
	InspectAll *string `pulumi:"inspectAll"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion *string `pulumi:"minAllowedSslVersion"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// SslsshprofileSslInput is an input type that accepts SslsshprofileSslArgs and SslsshprofileSslOutput values.
// You can construct a concrete instance of `SslsshprofileSslInput` via:
//
//	SslsshprofileSslArgs{...}
type SslsshprofileSslInput interface {
	pulumi.Input

	ToSslsshprofileSslOutput() SslsshprofileSslOutput
	ToSslsshprofileSslOutputWithContext(context.Context) SslsshprofileSslOutput
}

type SslsshprofileSslArgs struct {
	// Action based on certificate probe failure. Valid values: `allow`, `block`.
	CertProbeFailure pulumi.StringPtrInput `pulumi:"certProbeFailure"`
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Level of SSL inspection. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion pulumi.StringPtrInput `pulumi:"minAllowedSslVersion"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (SslsshprofileSslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileSsl)(nil)).Elem()
}

func (i SslsshprofileSslArgs) ToSslsshprofileSslOutput() SslsshprofileSslOutput {
	return i.ToSslsshprofileSslOutputWithContext(context.Background())
}

func (i SslsshprofileSslArgs) ToSslsshprofileSslOutputWithContext(ctx context.Context) SslsshprofileSslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSslOutput)
}

func (i SslsshprofileSslArgs) ToSslsshprofileSslPtrOutput() SslsshprofileSslPtrOutput {
	return i.ToSslsshprofileSslPtrOutputWithContext(context.Background())
}

func (i SslsshprofileSslArgs) ToSslsshprofileSslPtrOutputWithContext(ctx context.Context) SslsshprofileSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSslOutput).ToSslsshprofileSslPtrOutputWithContext(ctx)
}

// SslsshprofileSslPtrInput is an input type that accepts SslsshprofileSslArgs, SslsshprofileSslPtr and SslsshprofileSslPtrOutput values.
// You can construct a concrete instance of `SslsshprofileSslPtrInput` via:
//
//	        SslsshprofileSslArgs{...}
//
//	or:
//
//	        nil
type SslsshprofileSslPtrInput interface {
	pulumi.Input

	ToSslsshprofileSslPtrOutput() SslsshprofileSslPtrOutput
	ToSslsshprofileSslPtrOutputWithContext(context.Context) SslsshprofileSslPtrOutput
}

type sslsshprofileSslPtrType SslsshprofileSslArgs

func SslsshprofileSslPtr(v *SslsshprofileSslArgs) SslsshprofileSslPtrInput {
	return (*sslsshprofileSslPtrType)(v)
}

func (*sslsshprofileSslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileSsl)(nil)).Elem()
}

func (i *sslsshprofileSslPtrType) ToSslsshprofileSslPtrOutput() SslsshprofileSslPtrOutput {
	return i.ToSslsshprofileSslPtrOutputWithContext(context.Background())
}

func (i *sslsshprofileSslPtrType) ToSslsshprofileSslPtrOutputWithContext(ctx context.Context) SslsshprofileSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSslPtrOutput)
}

type SslsshprofileSslOutput struct{ *pulumi.OutputState }

func (SslsshprofileSslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileSsl)(nil)).Elem()
}

func (o SslsshprofileSslOutput) ToSslsshprofileSslOutput() SslsshprofileSslOutput {
	return o
}

func (o SslsshprofileSslOutput) ToSslsshprofileSslOutputWithContext(ctx context.Context) SslsshprofileSslOutput {
	return o
}

func (o SslsshprofileSslOutput) ToSslsshprofileSslPtrOutput() SslsshprofileSslPtrOutput {
	return o.ToSslsshprofileSslPtrOutputWithContext(context.Background())
}

func (o SslsshprofileSslOutput) ToSslsshprofileSslPtrOutputWithContext(ctx context.Context) SslsshprofileSslPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslsshprofileSsl) *SslsshprofileSsl {
		return &v
	}).(SslsshprofileSslPtrOutput)
}

// Action based on certificate probe failure. Valid values: `allow`, `block`.
func (o SslsshprofileSslOutput) CertProbeFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.CertProbeFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSslOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSslOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSslOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Level of SSL inspection. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
func (o SslsshprofileSslOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofileSslOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o SslsshprofileSslOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.MinAllowedSslVersion }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSslOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileSslOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileSslOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileSslOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileSslOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSslOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSsl) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type SslsshprofileSslPtrOutput struct{ *pulumi.OutputState }

func (SslsshprofileSslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslsshprofileSsl)(nil)).Elem()
}

func (o SslsshprofileSslPtrOutput) ToSslsshprofileSslPtrOutput() SslsshprofileSslPtrOutput {
	return o
}

func (o SslsshprofileSslPtrOutput) ToSslsshprofileSslPtrOutputWithContext(ctx context.Context) SslsshprofileSslPtrOutput {
	return o
}

func (o SslsshprofileSslPtrOutput) Elem() SslsshprofileSslOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) SslsshprofileSsl {
		if v != nil {
			return *v
		}
		var ret SslsshprofileSsl
		return ret
	}).(SslsshprofileSslOutput)
}

// Action based on certificate probe failure. Valid values: `allow`, `block`.
func (o SslsshprofileSslPtrOutput) CertProbeFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.CertProbeFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSslPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSslPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSslPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Level of SSL inspection. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
func (o SslsshprofileSslPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o SslsshprofileSslPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o SslsshprofileSslPtrOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.MinAllowedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSslPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o SslsshprofileSslPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileSslPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o SslsshprofileSslPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o SslsshprofileSslPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o SslsshprofileSslPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type SslsshprofileSslExempt struct {
	// IPv4 address object.
	Address *string `pulumi:"address"`
	// IPv6 address object.
	Address6 *string `pulumi:"address6"`
	// FortiGuard category ID.
	FortiguardCategory *int `pulumi:"fortiguardCategory"`
	// ID number.
	Id *int `pulumi:"id"`
	// Exempt servers by regular expression.
	Regex *string `pulumi:"regex"`
	// Type of address object (IPv4 or IPv6) or FortiGuard category. Valid values: `fortiguard-category`, `address`, `address6`, `wildcard-fqdn`, `regex`.
	Type *string `pulumi:"type"`
	// Exempt servers by wildcard FQDN.
	WildcardFqdn *string `pulumi:"wildcardFqdn"`
}

// SslsshprofileSslExemptInput is an input type that accepts SslsshprofileSslExemptArgs and SslsshprofileSslExemptOutput values.
// You can construct a concrete instance of `SslsshprofileSslExemptInput` via:
//
//	SslsshprofileSslExemptArgs{...}
type SslsshprofileSslExemptInput interface {
	pulumi.Input

	ToSslsshprofileSslExemptOutput() SslsshprofileSslExemptOutput
	ToSslsshprofileSslExemptOutputWithContext(context.Context) SslsshprofileSslExemptOutput
}

type SslsshprofileSslExemptArgs struct {
	// IPv4 address object.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// IPv6 address object.
	Address6 pulumi.StringPtrInput `pulumi:"address6"`
	// FortiGuard category ID.
	FortiguardCategory pulumi.IntPtrInput `pulumi:"fortiguardCategory"`
	// ID number.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Exempt servers by regular expression.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Type of address object (IPv4 or IPv6) or FortiGuard category. Valid values: `fortiguard-category`, `address`, `address6`, `wildcard-fqdn`, `regex`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Exempt servers by wildcard FQDN.
	WildcardFqdn pulumi.StringPtrInput `pulumi:"wildcardFqdn"`
}

func (SslsshprofileSslExemptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileSslExempt)(nil)).Elem()
}

func (i SslsshprofileSslExemptArgs) ToSslsshprofileSslExemptOutput() SslsshprofileSslExemptOutput {
	return i.ToSslsshprofileSslExemptOutputWithContext(context.Background())
}

func (i SslsshprofileSslExemptArgs) ToSslsshprofileSslExemptOutputWithContext(ctx context.Context) SslsshprofileSslExemptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSslExemptOutput)
}

// SslsshprofileSslExemptArrayInput is an input type that accepts SslsshprofileSslExemptArray and SslsshprofileSslExemptArrayOutput values.
// You can construct a concrete instance of `SslsshprofileSslExemptArrayInput` via:
//
//	SslsshprofileSslExemptArray{ SslsshprofileSslExemptArgs{...} }
type SslsshprofileSslExemptArrayInput interface {
	pulumi.Input

	ToSslsshprofileSslExemptArrayOutput() SslsshprofileSslExemptArrayOutput
	ToSslsshprofileSslExemptArrayOutputWithContext(context.Context) SslsshprofileSslExemptArrayOutput
}

type SslsshprofileSslExemptArray []SslsshprofileSslExemptInput

func (SslsshprofileSslExemptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SslsshprofileSslExempt)(nil)).Elem()
}

func (i SslsshprofileSslExemptArray) ToSslsshprofileSslExemptArrayOutput() SslsshprofileSslExemptArrayOutput {
	return i.ToSslsshprofileSslExemptArrayOutputWithContext(context.Background())
}

func (i SslsshprofileSslExemptArray) ToSslsshprofileSslExemptArrayOutputWithContext(ctx context.Context) SslsshprofileSslExemptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSslExemptArrayOutput)
}

type SslsshprofileSslExemptOutput struct{ *pulumi.OutputState }

func (SslsshprofileSslExemptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileSslExempt)(nil)).Elem()
}

func (o SslsshprofileSslExemptOutput) ToSslsshprofileSslExemptOutput() SslsshprofileSslExemptOutput {
	return o
}

func (o SslsshprofileSslExemptOutput) ToSslsshprofileSslExemptOutputWithContext(ctx context.Context) SslsshprofileSslExemptOutput {
	return o
}

// IPv4 address object.
func (o SslsshprofileSslExemptOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslExempt) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// IPv6 address object.
func (o SslsshprofileSslExemptOutput) Address6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslExempt) *string { return v.Address6 }).(pulumi.StringPtrOutput)
}

// FortiGuard category ID.
func (o SslsshprofileSslExemptOutput) FortiguardCategory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslExempt) *int { return v.FortiguardCategory }).(pulumi.IntPtrOutput)
}

// ID number.
func (o SslsshprofileSslExemptOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslExempt) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Exempt servers by regular expression.
func (o SslsshprofileSslExemptOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslExempt) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Type of address object (IPv4 or IPv6) or FortiGuard category. Valid values: `fortiguard-category`, `address`, `address6`, `wildcard-fqdn`, `regex`.
func (o SslsshprofileSslExemptOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslExempt) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Exempt servers by wildcard FQDN.
func (o SslsshprofileSslExemptOutput) WildcardFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslExempt) *string { return v.WildcardFqdn }).(pulumi.StringPtrOutput)
}

type SslsshprofileSslExemptArrayOutput struct{ *pulumi.OutputState }

func (SslsshprofileSslExemptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SslsshprofileSslExempt)(nil)).Elem()
}

func (o SslsshprofileSslExemptArrayOutput) ToSslsshprofileSslExemptArrayOutput() SslsshprofileSslExemptArrayOutput {
	return o
}

func (o SslsshprofileSslExemptArrayOutput) ToSslsshprofileSslExemptArrayOutputWithContext(ctx context.Context) SslsshprofileSslExemptArrayOutput {
	return o
}

func (o SslsshprofileSslExemptArrayOutput) Index(i pulumi.IntInput) SslsshprofileSslExemptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SslsshprofileSslExempt {
		return vs[0].([]SslsshprofileSslExempt)[vs[1].(int)]
	}).(SslsshprofileSslExemptOutput)
}

type SslsshprofileSslServer struct {
	// Action based on client certificate request during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	FtpsClientCertRequest *string `pulumi:"ftpsClientCertRequest"`
	// Action based on received client certificate during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	FtpsClientCertificate *string `pulumi:"ftpsClientCertificate"`
	// Action based on client certificate request during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	HttpsClientCertRequest *string `pulumi:"httpsClientCertRequest"`
	// Action based on received client certificate during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	HttpsClientCertificate *string `pulumi:"httpsClientCertificate"`
	// SSL server ID.
	Id *int `pulumi:"id"`
	// Action based on client certificate request during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
	ImapsClientCertRequest *string `pulumi:"imapsClientCertRequest"`
	// Action based on received client certificate during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
	ImapsClientCertificate *string `pulumi:"imapsClientCertificate"`
	// IPv4 address of the SSL server.
	Ip *string `pulumi:"ip"`
	// Action based on client certificate request during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
	Pop3sClientCertRequest *string `pulumi:"pop3sClientCertRequest"`
	// Action based on received client certificate during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
	Pop3sClientCertificate *string `pulumi:"pop3sClientCertificate"`
	// Action based on client certificate request during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	SmtpsClientCertRequest *string `pulumi:"smtpsClientCertRequest"`
	// Action based on received client certificate during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	SmtpsClientCertificate *string `pulumi:"smtpsClientCertificate"`
	// Action based on client certificate request during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
	SslOtherClientCertRequest *string `pulumi:"sslOtherClientCertRequest"`
	// Action based on received client certificate during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
	SslOtherClientCertificate *string `pulumi:"sslOtherClientCertificate"`
}

// SslsshprofileSslServerInput is an input type that accepts SslsshprofileSslServerArgs and SslsshprofileSslServerOutput values.
// You can construct a concrete instance of `SslsshprofileSslServerInput` via:
//
//	SslsshprofileSslServerArgs{...}
type SslsshprofileSslServerInput interface {
	pulumi.Input

	ToSslsshprofileSslServerOutput() SslsshprofileSslServerOutput
	ToSslsshprofileSslServerOutputWithContext(context.Context) SslsshprofileSslServerOutput
}

type SslsshprofileSslServerArgs struct {
	// Action based on client certificate request during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	FtpsClientCertRequest pulumi.StringPtrInput `pulumi:"ftpsClientCertRequest"`
	// Action based on received client certificate during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	FtpsClientCertificate pulumi.StringPtrInput `pulumi:"ftpsClientCertificate"`
	// Action based on client certificate request during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	HttpsClientCertRequest pulumi.StringPtrInput `pulumi:"httpsClientCertRequest"`
	// Action based on received client certificate during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	HttpsClientCertificate pulumi.StringPtrInput `pulumi:"httpsClientCertificate"`
	// SSL server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Action based on client certificate request during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
	ImapsClientCertRequest pulumi.StringPtrInput `pulumi:"imapsClientCertRequest"`
	// Action based on received client certificate during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
	ImapsClientCertificate pulumi.StringPtrInput `pulumi:"imapsClientCertificate"`
	// IPv4 address of the SSL server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Action based on client certificate request during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
	Pop3sClientCertRequest pulumi.StringPtrInput `pulumi:"pop3sClientCertRequest"`
	// Action based on received client certificate during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
	Pop3sClientCertificate pulumi.StringPtrInput `pulumi:"pop3sClientCertificate"`
	// Action based on client certificate request during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	SmtpsClientCertRequest pulumi.StringPtrInput `pulumi:"smtpsClientCertRequest"`
	// Action based on received client certificate during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	SmtpsClientCertificate pulumi.StringPtrInput `pulumi:"smtpsClientCertificate"`
	// Action based on client certificate request during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
	SslOtherClientCertRequest pulumi.StringPtrInput `pulumi:"sslOtherClientCertRequest"`
	// Action based on received client certificate during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
	SslOtherClientCertificate pulumi.StringPtrInput `pulumi:"sslOtherClientCertificate"`
}

func (SslsshprofileSslServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileSslServer)(nil)).Elem()
}

func (i SslsshprofileSslServerArgs) ToSslsshprofileSslServerOutput() SslsshprofileSslServerOutput {
	return i.ToSslsshprofileSslServerOutputWithContext(context.Background())
}

func (i SslsshprofileSslServerArgs) ToSslsshprofileSslServerOutputWithContext(ctx context.Context) SslsshprofileSslServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSslServerOutput)
}

// SslsshprofileSslServerArrayInput is an input type that accepts SslsshprofileSslServerArray and SslsshprofileSslServerArrayOutput values.
// You can construct a concrete instance of `SslsshprofileSslServerArrayInput` via:
//
//	SslsshprofileSslServerArray{ SslsshprofileSslServerArgs{...} }
type SslsshprofileSslServerArrayInput interface {
	pulumi.Input

	ToSslsshprofileSslServerArrayOutput() SslsshprofileSslServerArrayOutput
	ToSslsshprofileSslServerArrayOutputWithContext(context.Context) SslsshprofileSslServerArrayOutput
}

type SslsshprofileSslServerArray []SslsshprofileSslServerInput

func (SslsshprofileSslServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SslsshprofileSslServer)(nil)).Elem()
}

func (i SslsshprofileSslServerArray) ToSslsshprofileSslServerArrayOutput() SslsshprofileSslServerArrayOutput {
	return i.ToSslsshprofileSslServerArrayOutputWithContext(context.Background())
}

func (i SslsshprofileSslServerArray) ToSslsshprofileSslServerArrayOutputWithContext(ctx context.Context) SslsshprofileSslServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslsshprofileSslServerArrayOutput)
}

type SslsshprofileSslServerOutput struct{ *pulumi.OutputState }

func (SslsshprofileSslServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslsshprofileSslServer)(nil)).Elem()
}

func (o SslsshprofileSslServerOutput) ToSslsshprofileSslServerOutput() SslsshprofileSslServerOutput {
	return o
}

func (o SslsshprofileSslServerOutput) ToSslsshprofileSslServerOutputWithContext(ctx context.Context) SslsshprofileSslServerOutput {
	return o
}

// Action based on client certificate request during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) FtpsClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.FtpsClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) FtpsClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.FtpsClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) HttpsClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.HttpsClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) HttpsClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.HttpsClientCertificate }).(pulumi.StringPtrOutput)
}

// SSL server ID.
func (o SslsshprofileSslServerOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Action based on client certificate request during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) ImapsClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.ImapsClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) ImapsClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.ImapsClientCertificate }).(pulumi.StringPtrOutput)
}

// IPv4 address of the SSL server.
func (o SslsshprofileSslServerOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) Pop3sClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.Pop3sClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) Pop3sClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.Pop3sClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) SmtpsClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.SmtpsClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) SmtpsClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.SmtpsClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) SslOtherClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.SslOtherClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
func (o SslsshprofileSslServerOutput) SslOtherClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslsshprofileSslServer) *string { return v.SslOtherClientCertificate }).(pulumi.StringPtrOutput)
}

type SslsshprofileSslServerArrayOutput struct{ *pulumi.OutputState }

func (SslsshprofileSslServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SslsshprofileSslServer)(nil)).Elem()
}

func (o SslsshprofileSslServerArrayOutput) ToSslsshprofileSslServerArrayOutput() SslsshprofileSslServerArrayOutput {
	return o
}

func (o SslsshprofileSslServerArrayOutput) ToSslsshprofileSslServerArrayOutputWithContext(ctx context.Context) SslsshprofileSslServerArrayOutput {
	return o
}

func (o SslsshprofileSslServerArrayOutput) Index(i pulumi.IntInput) SslsshprofileSslServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SslsshprofileSslServer {
		return vs[0].([]SslsshprofileSslServer)[vs[1].(int)]
	}).(SslsshprofileSslServerOutput)
}

type TtlpolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// TtlpolicyServiceInput is an input type that accepts TtlpolicyServiceArgs and TtlpolicyServiceOutput values.
// You can construct a concrete instance of `TtlpolicyServiceInput` via:
//
//	TtlpolicyServiceArgs{...}
type TtlpolicyServiceInput interface {
	pulumi.Input

	ToTtlpolicyServiceOutput() TtlpolicyServiceOutput
	ToTtlpolicyServiceOutputWithContext(context.Context) TtlpolicyServiceOutput
}

type TtlpolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (TtlpolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TtlpolicyService)(nil)).Elem()
}

func (i TtlpolicyServiceArgs) ToTtlpolicyServiceOutput() TtlpolicyServiceOutput {
	return i.ToTtlpolicyServiceOutputWithContext(context.Background())
}

func (i TtlpolicyServiceArgs) ToTtlpolicyServiceOutputWithContext(ctx context.Context) TtlpolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TtlpolicyServiceOutput)
}

// TtlpolicyServiceArrayInput is an input type that accepts TtlpolicyServiceArray and TtlpolicyServiceArrayOutput values.
// You can construct a concrete instance of `TtlpolicyServiceArrayInput` via:
//
//	TtlpolicyServiceArray{ TtlpolicyServiceArgs{...} }
type TtlpolicyServiceArrayInput interface {
	pulumi.Input

	ToTtlpolicyServiceArrayOutput() TtlpolicyServiceArrayOutput
	ToTtlpolicyServiceArrayOutputWithContext(context.Context) TtlpolicyServiceArrayOutput
}

type TtlpolicyServiceArray []TtlpolicyServiceInput

func (TtlpolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TtlpolicyService)(nil)).Elem()
}

func (i TtlpolicyServiceArray) ToTtlpolicyServiceArrayOutput() TtlpolicyServiceArrayOutput {
	return i.ToTtlpolicyServiceArrayOutputWithContext(context.Background())
}

func (i TtlpolicyServiceArray) ToTtlpolicyServiceArrayOutputWithContext(ctx context.Context) TtlpolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TtlpolicyServiceArrayOutput)
}

type TtlpolicyServiceOutput struct{ *pulumi.OutputState }

func (TtlpolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TtlpolicyService)(nil)).Elem()
}

func (o TtlpolicyServiceOutput) ToTtlpolicyServiceOutput() TtlpolicyServiceOutput {
	return o
}

func (o TtlpolicyServiceOutput) ToTtlpolicyServiceOutputWithContext(ctx context.Context) TtlpolicyServiceOutput {
	return o
}

// Service name.
func (o TtlpolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TtlpolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type TtlpolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (TtlpolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TtlpolicyService)(nil)).Elem()
}

func (o TtlpolicyServiceArrayOutput) ToTtlpolicyServiceArrayOutput() TtlpolicyServiceArrayOutput {
	return o
}

func (o TtlpolicyServiceArrayOutput) ToTtlpolicyServiceArrayOutputWithContext(ctx context.Context) TtlpolicyServiceArrayOutput {
	return o
}

func (o TtlpolicyServiceArrayOutput) Index(i pulumi.IntInput) TtlpolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TtlpolicyService {
		return vs[0].([]TtlpolicyService)[vs[1].(int)]
	}).(TtlpolicyServiceOutput)
}

type TtlpolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// TtlpolicySrcaddrInput is an input type that accepts TtlpolicySrcaddrArgs and TtlpolicySrcaddrOutput values.
// You can construct a concrete instance of `TtlpolicySrcaddrInput` via:
//
//	TtlpolicySrcaddrArgs{...}
type TtlpolicySrcaddrInput interface {
	pulumi.Input

	ToTtlpolicySrcaddrOutput() TtlpolicySrcaddrOutput
	ToTtlpolicySrcaddrOutputWithContext(context.Context) TtlpolicySrcaddrOutput
}

type TtlpolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (TtlpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TtlpolicySrcaddr)(nil)).Elem()
}

func (i TtlpolicySrcaddrArgs) ToTtlpolicySrcaddrOutput() TtlpolicySrcaddrOutput {
	return i.ToTtlpolicySrcaddrOutputWithContext(context.Background())
}

func (i TtlpolicySrcaddrArgs) ToTtlpolicySrcaddrOutputWithContext(ctx context.Context) TtlpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TtlpolicySrcaddrOutput)
}

// TtlpolicySrcaddrArrayInput is an input type that accepts TtlpolicySrcaddrArray and TtlpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `TtlpolicySrcaddrArrayInput` via:
//
//	TtlpolicySrcaddrArray{ TtlpolicySrcaddrArgs{...} }
type TtlpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToTtlpolicySrcaddrArrayOutput() TtlpolicySrcaddrArrayOutput
	ToTtlpolicySrcaddrArrayOutputWithContext(context.Context) TtlpolicySrcaddrArrayOutput
}

type TtlpolicySrcaddrArray []TtlpolicySrcaddrInput

func (TtlpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TtlpolicySrcaddr)(nil)).Elem()
}

func (i TtlpolicySrcaddrArray) ToTtlpolicySrcaddrArrayOutput() TtlpolicySrcaddrArrayOutput {
	return i.ToTtlpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i TtlpolicySrcaddrArray) ToTtlpolicySrcaddrArrayOutputWithContext(ctx context.Context) TtlpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TtlpolicySrcaddrArrayOutput)
}

type TtlpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (TtlpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TtlpolicySrcaddr)(nil)).Elem()
}

func (o TtlpolicySrcaddrOutput) ToTtlpolicySrcaddrOutput() TtlpolicySrcaddrOutput {
	return o
}

func (o TtlpolicySrcaddrOutput) ToTtlpolicySrcaddrOutputWithContext(ctx context.Context) TtlpolicySrcaddrOutput {
	return o
}

// Address name.
func (o TtlpolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TtlpolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type TtlpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (TtlpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TtlpolicySrcaddr)(nil)).Elem()
}

func (o TtlpolicySrcaddrArrayOutput) ToTtlpolicySrcaddrArrayOutput() TtlpolicySrcaddrArrayOutput {
	return o
}

func (o TtlpolicySrcaddrArrayOutput) ToTtlpolicySrcaddrArrayOutputWithContext(ctx context.Context) TtlpolicySrcaddrArrayOutput {
	return o
}

func (o TtlpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) TtlpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TtlpolicySrcaddr {
		return vs[0].([]TtlpolicySrcaddr)[vs[1].(int)]
	}).(TtlpolicySrcaddrOutput)
}

type Vip46Monitor struct {
	// Health monitor name.
	Name *string `pulumi:"name"`
}

// Vip46MonitorInput is an input type that accepts Vip46MonitorArgs and Vip46MonitorOutput values.
// You can construct a concrete instance of `Vip46MonitorInput` via:
//
//	Vip46MonitorArgs{...}
type Vip46MonitorInput interface {
	pulumi.Input

	ToVip46MonitorOutput() Vip46MonitorOutput
	ToVip46MonitorOutputWithContext(context.Context) Vip46MonitorOutput
}

type Vip46MonitorArgs struct {
	// Health monitor name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Vip46MonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip46Monitor)(nil)).Elem()
}

func (i Vip46MonitorArgs) ToVip46MonitorOutput() Vip46MonitorOutput {
	return i.ToVip46MonitorOutputWithContext(context.Background())
}

func (i Vip46MonitorArgs) ToVip46MonitorOutputWithContext(ctx context.Context) Vip46MonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip46MonitorOutput)
}

// Vip46MonitorArrayInput is an input type that accepts Vip46MonitorArray and Vip46MonitorArrayOutput values.
// You can construct a concrete instance of `Vip46MonitorArrayInput` via:
//
//	Vip46MonitorArray{ Vip46MonitorArgs{...} }
type Vip46MonitorArrayInput interface {
	pulumi.Input

	ToVip46MonitorArrayOutput() Vip46MonitorArrayOutput
	ToVip46MonitorArrayOutputWithContext(context.Context) Vip46MonitorArrayOutput
}

type Vip46MonitorArray []Vip46MonitorInput

func (Vip46MonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip46Monitor)(nil)).Elem()
}

func (i Vip46MonitorArray) ToVip46MonitorArrayOutput() Vip46MonitorArrayOutput {
	return i.ToVip46MonitorArrayOutputWithContext(context.Background())
}

func (i Vip46MonitorArray) ToVip46MonitorArrayOutputWithContext(ctx context.Context) Vip46MonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip46MonitorArrayOutput)
}

type Vip46MonitorOutput struct{ *pulumi.OutputState }

func (Vip46MonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip46Monitor)(nil)).Elem()
}

func (o Vip46MonitorOutput) ToVip46MonitorOutput() Vip46MonitorOutput {
	return o
}

func (o Vip46MonitorOutput) ToVip46MonitorOutputWithContext(ctx context.Context) Vip46MonitorOutput {
	return o
}

// Health monitor name.
func (o Vip46MonitorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip46Monitor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Vip46MonitorArrayOutput struct{ *pulumi.OutputState }

func (Vip46MonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip46Monitor)(nil)).Elem()
}

func (o Vip46MonitorArrayOutput) ToVip46MonitorArrayOutput() Vip46MonitorArrayOutput {
	return o
}

func (o Vip46MonitorArrayOutput) ToVip46MonitorArrayOutputWithContext(ctx context.Context) Vip46MonitorArrayOutput {
	return o
}

func (o Vip46MonitorArrayOutput) Index(i pulumi.IntInput) Vip46MonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip46Monitor {
		return vs[0].([]Vip46Monitor)[vs[1].(int)]
	}).(Vip46MonitorOutput)
}

type Vip46Realserver struct {
	// Restrict server to a client IP in this range.
	ClientIp *string `pulumi:"clientIp"`
	// Per server health check. Valid values: `disable`, `enable`, `vip`.
	Healthcheck *string `pulumi:"healthcheck"`
	// Hold down interval.
	HolddownInterval *int `pulumi:"holddownInterval"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// Mapped server IPv6.
	Ip *string `pulumi:"ip"`
	// Maximum number of connections allowed to server.
	MaxConnections *int `pulumi:"maxConnections"`
	// Health monitors.
	Monitor *string `pulumi:"monitor"`
	// Mapped server port.
	Port *int `pulumi:"port"`
	// Server administrative status. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// weight
	Weight *int `pulumi:"weight"`
}

// Vip46RealserverInput is an input type that accepts Vip46RealserverArgs and Vip46RealserverOutput values.
// You can construct a concrete instance of `Vip46RealserverInput` via:
//
//	Vip46RealserverArgs{...}
type Vip46RealserverInput interface {
	pulumi.Input

	ToVip46RealserverOutput() Vip46RealserverOutput
	ToVip46RealserverOutputWithContext(context.Context) Vip46RealserverOutput
}

type Vip46RealserverArgs struct {
	// Restrict server to a client IP in this range.
	ClientIp pulumi.StringPtrInput `pulumi:"clientIp"`
	// Per server health check. Valid values: `disable`, `enable`, `vip`.
	Healthcheck pulumi.StringPtrInput `pulumi:"healthcheck"`
	// Hold down interval.
	HolddownInterval pulumi.IntPtrInput `pulumi:"holddownInterval"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Mapped server IPv6.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Maximum number of connections allowed to server.
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// Health monitors.
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	// Mapped server port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Server administrative status. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// weight
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (Vip46RealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip46Realserver)(nil)).Elem()
}

func (i Vip46RealserverArgs) ToVip46RealserverOutput() Vip46RealserverOutput {
	return i.ToVip46RealserverOutputWithContext(context.Background())
}

func (i Vip46RealserverArgs) ToVip46RealserverOutputWithContext(ctx context.Context) Vip46RealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip46RealserverOutput)
}

// Vip46RealserverArrayInput is an input type that accepts Vip46RealserverArray and Vip46RealserverArrayOutput values.
// You can construct a concrete instance of `Vip46RealserverArrayInput` via:
//
//	Vip46RealserverArray{ Vip46RealserverArgs{...} }
type Vip46RealserverArrayInput interface {
	pulumi.Input

	ToVip46RealserverArrayOutput() Vip46RealserverArrayOutput
	ToVip46RealserverArrayOutputWithContext(context.Context) Vip46RealserverArrayOutput
}

type Vip46RealserverArray []Vip46RealserverInput

func (Vip46RealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip46Realserver)(nil)).Elem()
}

func (i Vip46RealserverArray) ToVip46RealserverArrayOutput() Vip46RealserverArrayOutput {
	return i.ToVip46RealserverArrayOutputWithContext(context.Background())
}

func (i Vip46RealserverArray) ToVip46RealserverArrayOutputWithContext(ctx context.Context) Vip46RealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip46RealserverArrayOutput)
}

type Vip46RealserverOutput struct{ *pulumi.OutputState }

func (Vip46RealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip46Realserver)(nil)).Elem()
}

func (o Vip46RealserverOutput) ToVip46RealserverOutput() Vip46RealserverOutput {
	return o
}

func (o Vip46RealserverOutput) ToVip46RealserverOutputWithContext(ctx context.Context) Vip46RealserverOutput {
	return o
}

// Restrict server to a client IP in this range.
func (o Vip46RealserverOutput) ClientIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip46Realserver) *string { return v.ClientIp }).(pulumi.StringPtrOutput)
}

// Per server health check. Valid values: `disable`, `enable`, `vip`.
func (o Vip46RealserverOutput) Healthcheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip46Realserver) *string { return v.Healthcheck }).(pulumi.StringPtrOutput)
}

// Hold down interval.
func (o Vip46RealserverOutput) HolddownInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip46Realserver) *int { return v.HolddownInterval }).(pulumi.IntPtrOutput)
}

// Real server ID.
func (o Vip46RealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip46Realserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Mapped server IPv6.
func (o Vip46RealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip46Realserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Maximum number of connections allowed to server.
func (o Vip46RealserverOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip46Realserver) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// Health monitors.
func (o Vip46RealserverOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip46Realserver) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

// Mapped server port.
func (o Vip46RealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip46Realserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Server administrative status. Valid values: `active`, `standby`, `disable`.
func (o Vip46RealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip46Realserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// weight
func (o Vip46RealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip46Realserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type Vip46RealserverArrayOutput struct{ *pulumi.OutputState }

func (Vip46RealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip46Realserver)(nil)).Elem()
}

func (o Vip46RealserverArrayOutput) ToVip46RealserverArrayOutput() Vip46RealserverArrayOutput {
	return o
}

func (o Vip46RealserverArrayOutput) ToVip46RealserverArrayOutputWithContext(ctx context.Context) Vip46RealserverArrayOutput {
	return o
}

func (o Vip46RealserverArrayOutput) Index(i pulumi.IntInput) Vip46RealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip46Realserver {
		return vs[0].([]Vip46Realserver)[vs[1].(int)]
	}).(Vip46RealserverOutput)
}

type Vip46SrcFilter struct {
	// Src-filter range.
	Range *string `pulumi:"range"`
}

// Vip46SrcFilterInput is an input type that accepts Vip46SrcFilterArgs and Vip46SrcFilterOutput values.
// You can construct a concrete instance of `Vip46SrcFilterInput` via:
//
//	Vip46SrcFilterArgs{...}
type Vip46SrcFilterInput interface {
	pulumi.Input

	ToVip46SrcFilterOutput() Vip46SrcFilterOutput
	ToVip46SrcFilterOutputWithContext(context.Context) Vip46SrcFilterOutput
}

type Vip46SrcFilterArgs struct {
	// Src-filter range.
	Range pulumi.StringPtrInput `pulumi:"range"`
}

func (Vip46SrcFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip46SrcFilter)(nil)).Elem()
}

func (i Vip46SrcFilterArgs) ToVip46SrcFilterOutput() Vip46SrcFilterOutput {
	return i.ToVip46SrcFilterOutputWithContext(context.Background())
}

func (i Vip46SrcFilterArgs) ToVip46SrcFilterOutputWithContext(ctx context.Context) Vip46SrcFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip46SrcFilterOutput)
}

// Vip46SrcFilterArrayInput is an input type that accepts Vip46SrcFilterArray and Vip46SrcFilterArrayOutput values.
// You can construct a concrete instance of `Vip46SrcFilterArrayInput` via:
//
//	Vip46SrcFilterArray{ Vip46SrcFilterArgs{...} }
type Vip46SrcFilterArrayInput interface {
	pulumi.Input

	ToVip46SrcFilterArrayOutput() Vip46SrcFilterArrayOutput
	ToVip46SrcFilterArrayOutputWithContext(context.Context) Vip46SrcFilterArrayOutput
}

type Vip46SrcFilterArray []Vip46SrcFilterInput

func (Vip46SrcFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip46SrcFilter)(nil)).Elem()
}

func (i Vip46SrcFilterArray) ToVip46SrcFilterArrayOutput() Vip46SrcFilterArrayOutput {
	return i.ToVip46SrcFilterArrayOutputWithContext(context.Background())
}

func (i Vip46SrcFilterArray) ToVip46SrcFilterArrayOutputWithContext(ctx context.Context) Vip46SrcFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip46SrcFilterArrayOutput)
}

type Vip46SrcFilterOutput struct{ *pulumi.OutputState }

func (Vip46SrcFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip46SrcFilter)(nil)).Elem()
}

func (o Vip46SrcFilterOutput) ToVip46SrcFilterOutput() Vip46SrcFilterOutput {
	return o
}

func (o Vip46SrcFilterOutput) ToVip46SrcFilterOutputWithContext(ctx context.Context) Vip46SrcFilterOutput {
	return o
}

// Src-filter range.
func (o Vip46SrcFilterOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip46SrcFilter) *string { return v.Range }).(pulumi.StringPtrOutput)
}

type Vip46SrcFilterArrayOutput struct{ *pulumi.OutputState }

func (Vip46SrcFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip46SrcFilter)(nil)).Elem()
}

func (o Vip46SrcFilterArrayOutput) ToVip46SrcFilterArrayOutput() Vip46SrcFilterArrayOutput {
	return o
}

func (o Vip46SrcFilterArrayOutput) ToVip46SrcFilterArrayOutputWithContext(ctx context.Context) Vip46SrcFilterArrayOutput {
	return o
}

func (o Vip46SrcFilterArrayOutput) Index(i pulumi.IntInput) Vip46SrcFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip46SrcFilter {
		return vs[0].([]Vip46SrcFilter)[vs[1].(int)]
	}).(Vip46SrcFilterOutput)
}

type Vip46SrcintfFilter struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// Vip46SrcintfFilterInput is an input type that accepts Vip46SrcintfFilterArgs and Vip46SrcintfFilterOutput values.
// You can construct a concrete instance of `Vip46SrcintfFilterInput` via:
//
//	Vip46SrcintfFilterArgs{...}
type Vip46SrcintfFilterInput interface {
	pulumi.Input

	ToVip46SrcintfFilterOutput() Vip46SrcintfFilterOutput
	ToVip46SrcintfFilterOutputWithContext(context.Context) Vip46SrcintfFilterOutput
}

type Vip46SrcintfFilterArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (Vip46SrcintfFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip46SrcintfFilter)(nil)).Elem()
}

func (i Vip46SrcintfFilterArgs) ToVip46SrcintfFilterOutput() Vip46SrcintfFilterOutput {
	return i.ToVip46SrcintfFilterOutputWithContext(context.Background())
}

func (i Vip46SrcintfFilterArgs) ToVip46SrcintfFilterOutputWithContext(ctx context.Context) Vip46SrcintfFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip46SrcintfFilterOutput)
}

// Vip46SrcintfFilterArrayInput is an input type that accepts Vip46SrcintfFilterArray and Vip46SrcintfFilterArrayOutput values.
// You can construct a concrete instance of `Vip46SrcintfFilterArrayInput` via:
//
//	Vip46SrcintfFilterArray{ Vip46SrcintfFilterArgs{...} }
type Vip46SrcintfFilterArrayInput interface {
	pulumi.Input

	ToVip46SrcintfFilterArrayOutput() Vip46SrcintfFilterArrayOutput
	ToVip46SrcintfFilterArrayOutputWithContext(context.Context) Vip46SrcintfFilterArrayOutput
}

type Vip46SrcintfFilterArray []Vip46SrcintfFilterInput

func (Vip46SrcintfFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip46SrcintfFilter)(nil)).Elem()
}

func (i Vip46SrcintfFilterArray) ToVip46SrcintfFilterArrayOutput() Vip46SrcintfFilterArrayOutput {
	return i.ToVip46SrcintfFilterArrayOutputWithContext(context.Background())
}

func (i Vip46SrcintfFilterArray) ToVip46SrcintfFilterArrayOutputWithContext(ctx context.Context) Vip46SrcintfFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip46SrcintfFilterArrayOutput)
}

type Vip46SrcintfFilterOutput struct{ *pulumi.OutputState }

func (Vip46SrcintfFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip46SrcintfFilter)(nil)).Elem()
}

func (o Vip46SrcintfFilterOutput) ToVip46SrcintfFilterOutput() Vip46SrcintfFilterOutput {
	return o
}

func (o Vip46SrcintfFilterOutput) ToVip46SrcintfFilterOutputWithContext(ctx context.Context) Vip46SrcintfFilterOutput {
	return o
}

// Interface name.
func (o Vip46SrcintfFilterOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip46SrcintfFilter) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type Vip46SrcintfFilterArrayOutput struct{ *pulumi.OutputState }

func (Vip46SrcintfFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip46SrcintfFilter)(nil)).Elem()
}

func (o Vip46SrcintfFilterArrayOutput) ToVip46SrcintfFilterArrayOutput() Vip46SrcintfFilterArrayOutput {
	return o
}

func (o Vip46SrcintfFilterArrayOutput) ToVip46SrcintfFilterArrayOutputWithContext(ctx context.Context) Vip46SrcintfFilterArrayOutput {
	return o
}

func (o Vip46SrcintfFilterArrayOutput) Index(i pulumi.IntInput) Vip46SrcintfFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip46SrcintfFilter {
		return vs[0].([]Vip46SrcintfFilter)[vs[1].(int)]
	}).(Vip46SrcintfFilterOutput)
}

type Vip64Monitor struct {
	// Health monitor name.
	Name *string `pulumi:"name"`
}

// Vip64MonitorInput is an input type that accepts Vip64MonitorArgs and Vip64MonitorOutput values.
// You can construct a concrete instance of `Vip64MonitorInput` via:
//
//	Vip64MonitorArgs{...}
type Vip64MonitorInput interface {
	pulumi.Input

	ToVip64MonitorOutput() Vip64MonitorOutput
	ToVip64MonitorOutputWithContext(context.Context) Vip64MonitorOutput
}

type Vip64MonitorArgs struct {
	// Health monitor name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Vip64MonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip64Monitor)(nil)).Elem()
}

func (i Vip64MonitorArgs) ToVip64MonitorOutput() Vip64MonitorOutput {
	return i.ToVip64MonitorOutputWithContext(context.Background())
}

func (i Vip64MonitorArgs) ToVip64MonitorOutputWithContext(ctx context.Context) Vip64MonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip64MonitorOutput)
}

// Vip64MonitorArrayInput is an input type that accepts Vip64MonitorArray and Vip64MonitorArrayOutput values.
// You can construct a concrete instance of `Vip64MonitorArrayInput` via:
//
//	Vip64MonitorArray{ Vip64MonitorArgs{...} }
type Vip64MonitorArrayInput interface {
	pulumi.Input

	ToVip64MonitorArrayOutput() Vip64MonitorArrayOutput
	ToVip64MonitorArrayOutputWithContext(context.Context) Vip64MonitorArrayOutput
}

type Vip64MonitorArray []Vip64MonitorInput

func (Vip64MonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip64Monitor)(nil)).Elem()
}

func (i Vip64MonitorArray) ToVip64MonitorArrayOutput() Vip64MonitorArrayOutput {
	return i.ToVip64MonitorArrayOutputWithContext(context.Background())
}

func (i Vip64MonitorArray) ToVip64MonitorArrayOutputWithContext(ctx context.Context) Vip64MonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip64MonitorArrayOutput)
}

type Vip64MonitorOutput struct{ *pulumi.OutputState }

func (Vip64MonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip64Monitor)(nil)).Elem()
}

func (o Vip64MonitorOutput) ToVip64MonitorOutput() Vip64MonitorOutput {
	return o
}

func (o Vip64MonitorOutput) ToVip64MonitorOutputWithContext(ctx context.Context) Vip64MonitorOutput {
	return o
}

// Health monitor name.
func (o Vip64MonitorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip64Monitor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Vip64MonitorArrayOutput struct{ *pulumi.OutputState }

func (Vip64MonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip64Monitor)(nil)).Elem()
}

func (o Vip64MonitorArrayOutput) ToVip64MonitorArrayOutput() Vip64MonitorArrayOutput {
	return o
}

func (o Vip64MonitorArrayOutput) ToVip64MonitorArrayOutputWithContext(ctx context.Context) Vip64MonitorArrayOutput {
	return o
}

func (o Vip64MonitorArrayOutput) Index(i pulumi.IntInput) Vip64MonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip64Monitor {
		return vs[0].([]Vip64Monitor)[vs[1].(int)]
	}).(Vip64MonitorOutput)
}

type Vip64Realserver struct {
	// Restrict server to a client IP in this range.
	ClientIp *string `pulumi:"clientIp"`
	// Per server health check. Valid values: `disable`, `enable`, `vip`.
	Healthcheck *string `pulumi:"healthcheck"`
	// Hold down interval.
	HolddownInterval *int `pulumi:"holddownInterval"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// Mapped server IP.
	Ip *string `pulumi:"ip"`
	// Maximum number of connections allowed to server.
	MaxConnections *int `pulumi:"maxConnections"`
	// Health monitors.
	Monitor *string `pulumi:"monitor"`
	// Mapped server port.
	Port *int `pulumi:"port"`
	// Server administrative status. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// weight
	Weight *int `pulumi:"weight"`
}

// Vip64RealserverInput is an input type that accepts Vip64RealserverArgs and Vip64RealserverOutput values.
// You can construct a concrete instance of `Vip64RealserverInput` via:
//
//	Vip64RealserverArgs{...}
type Vip64RealserverInput interface {
	pulumi.Input

	ToVip64RealserverOutput() Vip64RealserverOutput
	ToVip64RealserverOutputWithContext(context.Context) Vip64RealserverOutput
}

type Vip64RealserverArgs struct {
	// Restrict server to a client IP in this range.
	ClientIp pulumi.StringPtrInput `pulumi:"clientIp"`
	// Per server health check. Valid values: `disable`, `enable`, `vip`.
	Healthcheck pulumi.StringPtrInput `pulumi:"healthcheck"`
	// Hold down interval.
	HolddownInterval pulumi.IntPtrInput `pulumi:"holddownInterval"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Mapped server IP.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Maximum number of connections allowed to server.
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// Health monitors.
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	// Mapped server port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Server administrative status. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// weight
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (Vip64RealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip64Realserver)(nil)).Elem()
}

func (i Vip64RealserverArgs) ToVip64RealserverOutput() Vip64RealserverOutput {
	return i.ToVip64RealserverOutputWithContext(context.Background())
}

func (i Vip64RealserverArgs) ToVip64RealserverOutputWithContext(ctx context.Context) Vip64RealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip64RealserverOutput)
}

// Vip64RealserverArrayInput is an input type that accepts Vip64RealserverArray and Vip64RealserverArrayOutput values.
// You can construct a concrete instance of `Vip64RealserverArrayInput` via:
//
//	Vip64RealserverArray{ Vip64RealserverArgs{...} }
type Vip64RealserverArrayInput interface {
	pulumi.Input

	ToVip64RealserverArrayOutput() Vip64RealserverArrayOutput
	ToVip64RealserverArrayOutputWithContext(context.Context) Vip64RealserverArrayOutput
}

type Vip64RealserverArray []Vip64RealserverInput

func (Vip64RealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip64Realserver)(nil)).Elem()
}

func (i Vip64RealserverArray) ToVip64RealserverArrayOutput() Vip64RealserverArrayOutput {
	return i.ToVip64RealserverArrayOutputWithContext(context.Background())
}

func (i Vip64RealserverArray) ToVip64RealserverArrayOutputWithContext(ctx context.Context) Vip64RealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip64RealserverArrayOutput)
}

type Vip64RealserverOutput struct{ *pulumi.OutputState }

func (Vip64RealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip64Realserver)(nil)).Elem()
}

func (o Vip64RealserverOutput) ToVip64RealserverOutput() Vip64RealserverOutput {
	return o
}

func (o Vip64RealserverOutput) ToVip64RealserverOutputWithContext(ctx context.Context) Vip64RealserverOutput {
	return o
}

// Restrict server to a client IP in this range.
func (o Vip64RealserverOutput) ClientIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip64Realserver) *string { return v.ClientIp }).(pulumi.StringPtrOutput)
}

// Per server health check. Valid values: `disable`, `enable`, `vip`.
func (o Vip64RealserverOutput) Healthcheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip64Realserver) *string { return v.Healthcheck }).(pulumi.StringPtrOutput)
}

// Hold down interval.
func (o Vip64RealserverOutput) HolddownInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip64Realserver) *int { return v.HolddownInterval }).(pulumi.IntPtrOutput)
}

// Real server ID.
func (o Vip64RealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip64Realserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Mapped server IP.
func (o Vip64RealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip64Realserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Maximum number of connections allowed to server.
func (o Vip64RealserverOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip64Realserver) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// Health monitors.
func (o Vip64RealserverOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip64Realserver) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

// Mapped server port.
func (o Vip64RealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip64Realserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Server administrative status. Valid values: `active`, `standby`, `disable`.
func (o Vip64RealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip64Realserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// weight
func (o Vip64RealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip64Realserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type Vip64RealserverArrayOutput struct{ *pulumi.OutputState }

func (Vip64RealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip64Realserver)(nil)).Elem()
}

func (o Vip64RealserverArrayOutput) ToVip64RealserverArrayOutput() Vip64RealserverArrayOutput {
	return o
}

func (o Vip64RealserverArrayOutput) ToVip64RealserverArrayOutputWithContext(ctx context.Context) Vip64RealserverArrayOutput {
	return o
}

func (o Vip64RealserverArrayOutput) Index(i pulumi.IntInput) Vip64RealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip64Realserver {
		return vs[0].([]Vip64Realserver)[vs[1].(int)]
	}).(Vip64RealserverOutput)
}

type Vip64SrcFilter struct {
	// Src-filter range.
	Range *string `pulumi:"range"`
}

// Vip64SrcFilterInput is an input type that accepts Vip64SrcFilterArgs and Vip64SrcFilterOutput values.
// You can construct a concrete instance of `Vip64SrcFilterInput` via:
//
//	Vip64SrcFilterArgs{...}
type Vip64SrcFilterInput interface {
	pulumi.Input

	ToVip64SrcFilterOutput() Vip64SrcFilterOutput
	ToVip64SrcFilterOutputWithContext(context.Context) Vip64SrcFilterOutput
}

type Vip64SrcFilterArgs struct {
	// Src-filter range.
	Range pulumi.StringPtrInput `pulumi:"range"`
}

func (Vip64SrcFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip64SrcFilter)(nil)).Elem()
}

func (i Vip64SrcFilterArgs) ToVip64SrcFilterOutput() Vip64SrcFilterOutput {
	return i.ToVip64SrcFilterOutputWithContext(context.Background())
}

func (i Vip64SrcFilterArgs) ToVip64SrcFilterOutputWithContext(ctx context.Context) Vip64SrcFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip64SrcFilterOutput)
}

// Vip64SrcFilterArrayInput is an input type that accepts Vip64SrcFilterArray and Vip64SrcFilterArrayOutput values.
// You can construct a concrete instance of `Vip64SrcFilterArrayInput` via:
//
//	Vip64SrcFilterArray{ Vip64SrcFilterArgs{...} }
type Vip64SrcFilterArrayInput interface {
	pulumi.Input

	ToVip64SrcFilterArrayOutput() Vip64SrcFilterArrayOutput
	ToVip64SrcFilterArrayOutputWithContext(context.Context) Vip64SrcFilterArrayOutput
}

type Vip64SrcFilterArray []Vip64SrcFilterInput

func (Vip64SrcFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip64SrcFilter)(nil)).Elem()
}

func (i Vip64SrcFilterArray) ToVip64SrcFilterArrayOutput() Vip64SrcFilterArrayOutput {
	return i.ToVip64SrcFilterArrayOutputWithContext(context.Background())
}

func (i Vip64SrcFilterArray) ToVip64SrcFilterArrayOutputWithContext(ctx context.Context) Vip64SrcFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip64SrcFilterArrayOutput)
}

type Vip64SrcFilterOutput struct{ *pulumi.OutputState }

func (Vip64SrcFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip64SrcFilter)(nil)).Elem()
}

func (o Vip64SrcFilterOutput) ToVip64SrcFilterOutput() Vip64SrcFilterOutput {
	return o
}

func (o Vip64SrcFilterOutput) ToVip64SrcFilterOutputWithContext(ctx context.Context) Vip64SrcFilterOutput {
	return o
}

// Src-filter range.
func (o Vip64SrcFilterOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip64SrcFilter) *string { return v.Range }).(pulumi.StringPtrOutput)
}

type Vip64SrcFilterArrayOutput struct{ *pulumi.OutputState }

func (Vip64SrcFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip64SrcFilter)(nil)).Elem()
}

func (o Vip64SrcFilterArrayOutput) ToVip64SrcFilterArrayOutput() Vip64SrcFilterArrayOutput {
	return o
}

func (o Vip64SrcFilterArrayOutput) ToVip64SrcFilterArrayOutputWithContext(ctx context.Context) Vip64SrcFilterArrayOutput {
	return o
}

func (o Vip64SrcFilterArrayOutput) Index(i pulumi.IntInput) Vip64SrcFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip64SrcFilter {
		return vs[0].([]Vip64SrcFilter)[vs[1].(int)]
	}).(Vip64SrcFilterOutput)
}

type Vip6Monitor struct {
	// Health monitor name.
	Name *string `pulumi:"name"`
}

// Vip6MonitorInput is an input type that accepts Vip6MonitorArgs and Vip6MonitorOutput values.
// You can construct a concrete instance of `Vip6MonitorInput` via:
//
//	Vip6MonitorArgs{...}
type Vip6MonitorInput interface {
	pulumi.Input

	ToVip6MonitorOutput() Vip6MonitorOutput
	ToVip6MonitorOutputWithContext(context.Context) Vip6MonitorOutput
}

type Vip6MonitorArgs struct {
	// Health monitor name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Vip6MonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6Monitor)(nil)).Elem()
}

func (i Vip6MonitorArgs) ToVip6MonitorOutput() Vip6MonitorOutput {
	return i.ToVip6MonitorOutputWithContext(context.Background())
}

func (i Vip6MonitorArgs) ToVip6MonitorOutputWithContext(ctx context.Context) Vip6MonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6MonitorOutput)
}

// Vip6MonitorArrayInput is an input type that accepts Vip6MonitorArray and Vip6MonitorArrayOutput values.
// You can construct a concrete instance of `Vip6MonitorArrayInput` via:
//
//	Vip6MonitorArray{ Vip6MonitorArgs{...} }
type Vip6MonitorArrayInput interface {
	pulumi.Input

	ToVip6MonitorArrayOutput() Vip6MonitorArrayOutput
	ToVip6MonitorArrayOutputWithContext(context.Context) Vip6MonitorArrayOutput
}

type Vip6MonitorArray []Vip6MonitorInput

func (Vip6MonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip6Monitor)(nil)).Elem()
}

func (i Vip6MonitorArray) ToVip6MonitorArrayOutput() Vip6MonitorArrayOutput {
	return i.ToVip6MonitorArrayOutputWithContext(context.Background())
}

func (i Vip6MonitorArray) ToVip6MonitorArrayOutputWithContext(ctx context.Context) Vip6MonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6MonitorArrayOutput)
}

type Vip6MonitorOutput struct{ *pulumi.OutputState }

func (Vip6MonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6Monitor)(nil)).Elem()
}

func (o Vip6MonitorOutput) ToVip6MonitorOutput() Vip6MonitorOutput {
	return o
}

func (o Vip6MonitorOutput) ToVip6MonitorOutputWithContext(ctx context.Context) Vip6MonitorOutput {
	return o
}

// Health monitor name.
func (o Vip6MonitorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6Monitor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Vip6MonitorArrayOutput struct{ *pulumi.OutputState }

func (Vip6MonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip6Monitor)(nil)).Elem()
}

func (o Vip6MonitorArrayOutput) ToVip6MonitorArrayOutput() Vip6MonitorArrayOutput {
	return o
}

func (o Vip6MonitorArrayOutput) ToVip6MonitorArrayOutputWithContext(ctx context.Context) Vip6MonitorArrayOutput {
	return o
}

func (o Vip6MonitorArrayOutput) Index(i pulumi.IntInput) Vip6MonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip6Monitor {
		return vs[0].([]Vip6Monitor)[vs[1].(int)]
	}).(Vip6MonitorOutput)
}

type Vip6Quic struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent *int `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit *int `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration *string `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit *string `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay *int `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize *int `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout *int `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize *int `pulumi:"maxUdpPayloadSize"`
}

// Vip6QuicInput is an input type that accepts Vip6QuicArgs and Vip6QuicOutput values.
// You can construct a concrete instance of `Vip6QuicInput` via:
//
//	Vip6QuicArgs{...}
type Vip6QuicInput interface {
	pulumi.Input

	ToVip6QuicOutput() Vip6QuicOutput
	ToVip6QuicOutputWithContext(context.Context) Vip6QuicOutput
}

type Vip6QuicArgs struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent pulumi.IntPtrInput `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit pulumi.IntPtrInput `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration pulumi.StringPtrInput `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit pulumi.StringPtrInput `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay pulumi.IntPtrInput `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize pulumi.IntPtrInput `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout pulumi.IntPtrInput `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize pulumi.IntPtrInput `pulumi:"maxUdpPayloadSize"`
}

func (Vip6QuicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6Quic)(nil)).Elem()
}

func (i Vip6QuicArgs) ToVip6QuicOutput() Vip6QuicOutput {
	return i.ToVip6QuicOutputWithContext(context.Background())
}

func (i Vip6QuicArgs) ToVip6QuicOutputWithContext(ctx context.Context) Vip6QuicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6QuicOutput)
}

func (i Vip6QuicArgs) ToVip6QuicPtrOutput() Vip6QuicPtrOutput {
	return i.ToVip6QuicPtrOutputWithContext(context.Background())
}

func (i Vip6QuicArgs) ToVip6QuicPtrOutputWithContext(ctx context.Context) Vip6QuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6QuicOutput).ToVip6QuicPtrOutputWithContext(ctx)
}

// Vip6QuicPtrInput is an input type that accepts Vip6QuicArgs, Vip6QuicPtr and Vip6QuicPtrOutput values.
// You can construct a concrete instance of `Vip6QuicPtrInput` via:
//
//	        Vip6QuicArgs{...}
//
//	or:
//
//	        nil
type Vip6QuicPtrInput interface {
	pulumi.Input

	ToVip6QuicPtrOutput() Vip6QuicPtrOutput
	ToVip6QuicPtrOutputWithContext(context.Context) Vip6QuicPtrOutput
}

type vip6QuicPtrType Vip6QuicArgs

func Vip6QuicPtr(v *Vip6QuicArgs) Vip6QuicPtrInput {
	return (*vip6QuicPtrType)(v)
}

func (*vip6QuicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Vip6Quic)(nil)).Elem()
}

func (i *vip6QuicPtrType) ToVip6QuicPtrOutput() Vip6QuicPtrOutput {
	return i.ToVip6QuicPtrOutputWithContext(context.Background())
}

func (i *vip6QuicPtrType) ToVip6QuicPtrOutputWithContext(ctx context.Context) Vip6QuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6QuicPtrOutput)
}

type Vip6QuicOutput struct{ *pulumi.OutputState }

func (Vip6QuicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6Quic)(nil)).Elem()
}

func (o Vip6QuicOutput) ToVip6QuicOutput() Vip6QuicOutput {
	return o
}

func (o Vip6QuicOutput) ToVip6QuicOutputWithContext(ctx context.Context) Vip6QuicOutput {
	return o
}

func (o Vip6QuicOutput) ToVip6QuicPtrOutput() Vip6QuicPtrOutput {
	return o.ToVip6QuicPtrOutputWithContext(context.Background())
}

func (o Vip6QuicOutput) ToVip6QuicPtrOutputWithContext(ctx context.Context) Vip6QuicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Vip6Quic) *Vip6Quic {
		return &v
	}).(Vip6QuicPtrOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o Vip6QuicOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6Quic) *int { return v.AckDelayExponent }).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o Vip6QuicOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6Quic) *int { return v.ActiveConnectionIdLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o Vip6QuicOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6Quic) *string { return v.ActiveMigration }).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o Vip6QuicOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6Quic) *string { return v.GreaseQuicBit }).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o Vip6QuicOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6Quic) *int { return v.MaxAckDelay }).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o Vip6QuicOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6Quic) *int { return v.MaxDatagramFrameSize }).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o Vip6QuicOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6Quic) *int { return v.MaxIdleTimeout }).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o Vip6QuicOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6Quic) *int { return v.MaxUdpPayloadSize }).(pulumi.IntPtrOutput)
}

type Vip6QuicPtrOutput struct{ *pulumi.OutputState }

func (Vip6QuicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Vip6Quic)(nil)).Elem()
}

func (o Vip6QuicPtrOutput) ToVip6QuicPtrOutput() Vip6QuicPtrOutput {
	return o
}

func (o Vip6QuicPtrOutput) ToVip6QuicPtrOutputWithContext(ctx context.Context) Vip6QuicPtrOutput {
	return o
}

func (o Vip6QuicPtrOutput) Elem() Vip6QuicOutput {
	return o.ApplyT(func(v *Vip6Quic) Vip6Quic {
		if v != nil {
			return *v
		}
		var ret Vip6Quic
		return ret
	}).(Vip6QuicOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o Vip6QuicPtrOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Vip6Quic) *int {
		if v == nil {
			return nil
		}
		return v.AckDelayExponent
	}).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o Vip6QuicPtrOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Vip6Quic) *int {
		if v == nil {
			return nil
		}
		return v.ActiveConnectionIdLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o Vip6QuicPtrOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vip6Quic) *string {
		if v == nil {
			return nil
		}
		return v.ActiveMigration
	}).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o Vip6QuicPtrOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vip6Quic) *string {
		if v == nil {
			return nil
		}
		return v.GreaseQuicBit
	}).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o Vip6QuicPtrOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Vip6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxAckDelay
	}).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o Vip6QuicPtrOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Vip6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxDatagramFrameSize
	}).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o Vip6QuicPtrOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Vip6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleTimeout
	}).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o Vip6QuicPtrOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Vip6Quic) *int {
		if v == nil {
			return nil
		}
		return v.MaxUdpPayloadSize
	}).(pulumi.IntPtrOutput)
}

type Vip6Realserver struct {
	// Only clients in this IP range can connect to this real server.
	ClientIp *string `pulumi:"clientIp"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
	Healthcheck *string `pulumi:"healthcheck"`
	// Time in seconds that the health check monitor continues to monitor an unresponsive server that should be active.
	HolddownInterval *int `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IPv6 address of the real server.
	Ip *string `pulumi:"ip"`
	// Max number of active connections that can directed to the real server. When reached, sessions are sent to other real servers.
	MaxConnections *int `pulumi:"maxConnections"`
	// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
	Monitor *string `pulumi:"monitor"`
	// Port for communicating with the real server. Required if port forwarding is enabled.
	Port *int `pulumi:"port"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost *string `pulumi:"translateHost"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// Vip6RealserverInput is an input type that accepts Vip6RealserverArgs and Vip6RealserverOutput values.
// You can construct a concrete instance of `Vip6RealserverInput` via:
//
//	Vip6RealserverArgs{...}
type Vip6RealserverInput interface {
	pulumi.Input

	ToVip6RealserverOutput() Vip6RealserverOutput
	ToVip6RealserverOutputWithContext(context.Context) Vip6RealserverOutput
}

type Vip6RealserverArgs struct {
	// Only clients in this IP range can connect to this real server.
	ClientIp pulumi.StringPtrInput `pulumi:"clientIp"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
	Healthcheck pulumi.StringPtrInput `pulumi:"healthcheck"`
	// Time in seconds that the health check monitor continues to monitor an unresponsive server that should be active.
	HolddownInterval pulumi.IntPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Max number of active connections that can directed to the real server. When reached, sessions are sent to other real servers.
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	// Port for communicating with the real server. Required if port forwarding is enabled.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost pulumi.StringPtrInput `pulumi:"translateHost"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (Vip6RealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6Realserver)(nil)).Elem()
}

func (i Vip6RealserverArgs) ToVip6RealserverOutput() Vip6RealserverOutput {
	return i.ToVip6RealserverOutputWithContext(context.Background())
}

func (i Vip6RealserverArgs) ToVip6RealserverOutputWithContext(ctx context.Context) Vip6RealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6RealserverOutput)
}

// Vip6RealserverArrayInput is an input type that accepts Vip6RealserverArray and Vip6RealserverArrayOutput values.
// You can construct a concrete instance of `Vip6RealserverArrayInput` via:
//
//	Vip6RealserverArray{ Vip6RealserverArgs{...} }
type Vip6RealserverArrayInput interface {
	pulumi.Input

	ToVip6RealserverArrayOutput() Vip6RealserverArrayOutput
	ToVip6RealserverArrayOutputWithContext(context.Context) Vip6RealserverArrayOutput
}

type Vip6RealserverArray []Vip6RealserverInput

func (Vip6RealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip6Realserver)(nil)).Elem()
}

func (i Vip6RealserverArray) ToVip6RealserverArrayOutput() Vip6RealserverArrayOutput {
	return i.ToVip6RealserverArrayOutputWithContext(context.Background())
}

func (i Vip6RealserverArray) ToVip6RealserverArrayOutputWithContext(ctx context.Context) Vip6RealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6RealserverArrayOutput)
}

type Vip6RealserverOutput struct{ *pulumi.OutputState }

func (Vip6RealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6Realserver)(nil)).Elem()
}

func (o Vip6RealserverOutput) ToVip6RealserverOutput() Vip6RealserverOutput {
	return o
}

func (o Vip6RealserverOutput) ToVip6RealserverOutputWithContext(ctx context.Context) Vip6RealserverOutput {
	return o
}

// Only clients in this IP range can connect to this real server.
func (o Vip6RealserverOutput) ClientIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *string { return v.ClientIp }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
func (o Vip6RealserverOutput) Healthcheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *string { return v.Healthcheck }).(pulumi.StringPtrOutput)
}

// Time in seconds that the health check monitor continues to monitor an unresponsive server that should be active.
func (o Vip6RealserverOutput) HolddownInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *int { return v.HolddownInterval }).(pulumi.IntPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o Vip6RealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o Vip6RealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 address of the real server.
func (o Vip6RealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Max number of active connections that can directed to the real server. When reached, sessions are sent to other real servers.
func (o Vip6RealserverOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
func (o Vip6RealserverOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server. Required if port forwarding is enabled.
func (o Vip6RealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o Vip6RealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
func (o Vip6RealserverOutput) TranslateHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *string { return v.TranslateHost }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o Vip6RealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6Realserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type Vip6RealserverArrayOutput struct{ *pulumi.OutputState }

func (Vip6RealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip6Realserver)(nil)).Elem()
}

func (o Vip6RealserverArrayOutput) ToVip6RealserverArrayOutput() Vip6RealserverArrayOutput {
	return o
}

func (o Vip6RealserverArrayOutput) ToVip6RealserverArrayOutputWithContext(ctx context.Context) Vip6RealserverArrayOutput {
	return o
}

func (o Vip6RealserverArrayOutput) Index(i pulumi.IntInput) Vip6RealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip6Realserver {
		return vs[0].([]Vip6Realserver)[vs[1].(int)]
	}).(Vip6RealserverOutput)
}

type Vip6SrcFilter struct {
	// Source-filter range.
	Range *string `pulumi:"range"`
}

// Vip6SrcFilterInput is an input type that accepts Vip6SrcFilterArgs and Vip6SrcFilterOutput values.
// You can construct a concrete instance of `Vip6SrcFilterInput` via:
//
//	Vip6SrcFilterArgs{...}
type Vip6SrcFilterInput interface {
	pulumi.Input

	ToVip6SrcFilterOutput() Vip6SrcFilterOutput
	ToVip6SrcFilterOutputWithContext(context.Context) Vip6SrcFilterOutput
}

type Vip6SrcFilterArgs struct {
	// Source-filter range.
	Range pulumi.StringPtrInput `pulumi:"range"`
}

func (Vip6SrcFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6SrcFilter)(nil)).Elem()
}

func (i Vip6SrcFilterArgs) ToVip6SrcFilterOutput() Vip6SrcFilterOutput {
	return i.ToVip6SrcFilterOutputWithContext(context.Background())
}

func (i Vip6SrcFilterArgs) ToVip6SrcFilterOutputWithContext(ctx context.Context) Vip6SrcFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6SrcFilterOutput)
}

// Vip6SrcFilterArrayInput is an input type that accepts Vip6SrcFilterArray and Vip6SrcFilterArrayOutput values.
// You can construct a concrete instance of `Vip6SrcFilterArrayInput` via:
//
//	Vip6SrcFilterArray{ Vip6SrcFilterArgs{...} }
type Vip6SrcFilterArrayInput interface {
	pulumi.Input

	ToVip6SrcFilterArrayOutput() Vip6SrcFilterArrayOutput
	ToVip6SrcFilterArrayOutputWithContext(context.Context) Vip6SrcFilterArrayOutput
}

type Vip6SrcFilterArray []Vip6SrcFilterInput

func (Vip6SrcFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip6SrcFilter)(nil)).Elem()
}

func (i Vip6SrcFilterArray) ToVip6SrcFilterArrayOutput() Vip6SrcFilterArrayOutput {
	return i.ToVip6SrcFilterArrayOutputWithContext(context.Background())
}

func (i Vip6SrcFilterArray) ToVip6SrcFilterArrayOutputWithContext(ctx context.Context) Vip6SrcFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6SrcFilterArrayOutput)
}

type Vip6SrcFilterOutput struct{ *pulumi.OutputState }

func (Vip6SrcFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6SrcFilter)(nil)).Elem()
}

func (o Vip6SrcFilterOutput) ToVip6SrcFilterOutput() Vip6SrcFilterOutput {
	return o
}

func (o Vip6SrcFilterOutput) ToVip6SrcFilterOutputWithContext(ctx context.Context) Vip6SrcFilterOutput {
	return o
}

// Source-filter range.
func (o Vip6SrcFilterOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6SrcFilter) *string { return v.Range }).(pulumi.StringPtrOutput)
}

type Vip6SrcFilterArrayOutput struct{ *pulumi.OutputState }

func (Vip6SrcFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip6SrcFilter)(nil)).Elem()
}

func (o Vip6SrcFilterArrayOutput) ToVip6SrcFilterArrayOutput() Vip6SrcFilterArrayOutput {
	return o
}

func (o Vip6SrcFilterArrayOutput) ToVip6SrcFilterArrayOutputWithContext(ctx context.Context) Vip6SrcFilterArrayOutput {
	return o
}

func (o Vip6SrcFilterArrayOutput) Index(i pulumi.IntInput) Vip6SrcFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip6SrcFilter {
		return vs[0].([]Vip6SrcFilter)[vs[1].(int)]
	}).(Vip6SrcFilterOutput)
}

type Vip6SslCipherSuite struct {
	// Cipher suite name.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions *string `pulumi:"versions"`
}

// Vip6SslCipherSuiteInput is an input type that accepts Vip6SslCipherSuiteArgs and Vip6SslCipherSuiteOutput values.
// You can construct a concrete instance of `Vip6SslCipherSuiteInput` via:
//
//	Vip6SslCipherSuiteArgs{...}
type Vip6SslCipherSuiteInput interface {
	pulumi.Input

	ToVip6SslCipherSuiteOutput() Vip6SslCipherSuiteOutput
	ToVip6SslCipherSuiteOutputWithContext(context.Context) Vip6SslCipherSuiteOutput
}

type Vip6SslCipherSuiteArgs struct {
	// Cipher suite name.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (Vip6SslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6SslCipherSuite)(nil)).Elem()
}

func (i Vip6SslCipherSuiteArgs) ToVip6SslCipherSuiteOutput() Vip6SslCipherSuiteOutput {
	return i.ToVip6SslCipherSuiteOutputWithContext(context.Background())
}

func (i Vip6SslCipherSuiteArgs) ToVip6SslCipherSuiteOutputWithContext(ctx context.Context) Vip6SslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6SslCipherSuiteOutput)
}

// Vip6SslCipherSuiteArrayInput is an input type that accepts Vip6SslCipherSuiteArray and Vip6SslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `Vip6SslCipherSuiteArrayInput` via:
//
//	Vip6SslCipherSuiteArray{ Vip6SslCipherSuiteArgs{...} }
type Vip6SslCipherSuiteArrayInput interface {
	pulumi.Input

	ToVip6SslCipherSuiteArrayOutput() Vip6SslCipherSuiteArrayOutput
	ToVip6SslCipherSuiteArrayOutputWithContext(context.Context) Vip6SslCipherSuiteArrayOutput
}

type Vip6SslCipherSuiteArray []Vip6SslCipherSuiteInput

func (Vip6SslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip6SslCipherSuite)(nil)).Elem()
}

func (i Vip6SslCipherSuiteArray) ToVip6SslCipherSuiteArrayOutput() Vip6SslCipherSuiteArrayOutput {
	return i.ToVip6SslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i Vip6SslCipherSuiteArray) ToVip6SslCipherSuiteArrayOutputWithContext(ctx context.Context) Vip6SslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6SslCipherSuiteArrayOutput)
}

type Vip6SslCipherSuiteOutput struct{ *pulumi.OutputState }

func (Vip6SslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6SslCipherSuite)(nil)).Elem()
}

func (o Vip6SslCipherSuiteOutput) ToVip6SslCipherSuiteOutput() Vip6SslCipherSuiteOutput {
	return o
}

func (o Vip6SslCipherSuiteOutput) ToVip6SslCipherSuiteOutputWithContext(ctx context.Context) Vip6SslCipherSuiteOutput {
	return o
}

// Cipher suite name.
func (o Vip6SslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6SslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o Vip6SslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6SslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with.
func (o Vip6SslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6SslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type Vip6SslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (Vip6SslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip6SslCipherSuite)(nil)).Elem()
}

func (o Vip6SslCipherSuiteArrayOutput) ToVip6SslCipherSuiteArrayOutput() Vip6SslCipherSuiteArrayOutput {
	return o
}

func (o Vip6SslCipherSuiteArrayOutput) ToVip6SslCipherSuiteArrayOutputWithContext(ctx context.Context) Vip6SslCipherSuiteArrayOutput {
	return o
}

func (o Vip6SslCipherSuiteArrayOutput) Index(i pulumi.IntInput) Vip6SslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip6SslCipherSuite {
		return vs[0].([]Vip6SslCipherSuite)[vs[1].(int)]
	}).(Vip6SslCipherSuiteOutput)
}

type Vip6SslServerCipherSuite struct {
	// Cipher suite name.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions *string `pulumi:"versions"`
}

// Vip6SslServerCipherSuiteInput is an input type that accepts Vip6SslServerCipherSuiteArgs and Vip6SslServerCipherSuiteOutput values.
// You can construct a concrete instance of `Vip6SslServerCipherSuiteInput` via:
//
//	Vip6SslServerCipherSuiteArgs{...}
type Vip6SslServerCipherSuiteInput interface {
	pulumi.Input

	ToVip6SslServerCipherSuiteOutput() Vip6SslServerCipherSuiteOutput
	ToVip6SslServerCipherSuiteOutputWithContext(context.Context) Vip6SslServerCipherSuiteOutput
}

type Vip6SslServerCipherSuiteArgs struct {
	// Cipher suite name.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (Vip6SslServerCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6SslServerCipherSuite)(nil)).Elem()
}

func (i Vip6SslServerCipherSuiteArgs) ToVip6SslServerCipherSuiteOutput() Vip6SslServerCipherSuiteOutput {
	return i.ToVip6SslServerCipherSuiteOutputWithContext(context.Background())
}

func (i Vip6SslServerCipherSuiteArgs) ToVip6SslServerCipherSuiteOutputWithContext(ctx context.Context) Vip6SslServerCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6SslServerCipherSuiteOutput)
}

// Vip6SslServerCipherSuiteArrayInput is an input type that accepts Vip6SslServerCipherSuiteArray and Vip6SslServerCipherSuiteArrayOutput values.
// You can construct a concrete instance of `Vip6SslServerCipherSuiteArrayInput` via:
//
//	Vip6SslServerCipherSuiteArray{ Vip6SslServerCipherSuiteArgs{...} }
type Vip6SslServerCipherSuiteArrayInput interface {
	pulumi.Input

	ToVip6SslServerCipherSuiteArrayOutput() Vip6SslServerCipherSuiteArrayOutput
	ToVip6SslServerCipherSuiteArrayOutputWithContext(context.Context) Vip6SslServerCipherSuiteArrayOutput
}

type Vip6SslServerCipherSuiteArray []Vip6SslServerCipherSuiteInput

func (Vip6SslServerCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip6SslServerCipherSuite)(nil)).Elem()
}

func (i Vip6SslServerCipherSuiteArray) ToVip6SslServerCipherSuiteArrayOutput() Vip6SslServerCipherSuiteArrayOutput {
	return i.ToVip6SslServerCipherSuiteArrayOutputWithContext(context.Background())
}

func (i Vip6SslServerCipherSuiteArray) ToVip6SslServerCipherSuiteArrayOutputWithContext(ctx context.Context) Vip6SslServerCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vip6SslServerCipherSuiteArrayOutput)
}

type Vip6SslServerCipherSuiteOutput struct{ *pulumi.OutputState }

func (Vip6SslServerCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vip6SslServerCipherSuite)(nil)).Elem()
}

func (o Vip6SslServerCipherSuiteOutput) ToVip6SslServerCipherSuiteOutput() Vip6SslServerCipherSuiteOutput {
	return o
}

func (o Vip6SslServerCipherSuiteOutput) ToVip6SslServerCipherSuiteOutputWithContext(ctx context.Context) Vip6SslServerCipherSuiteOutput {
	return o
}

// Cipher suite name.
func (o Vip6SslServerCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6SslServerCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o Vip6SslServerCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Vip6SslServerCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with.
func (o Vip6SslServerCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vip6SslServerCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type Vip6SslServerCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (Vip6SslServerCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vip6SslServerCipherSuite)(nil)).Elem()
}

func (o Vip6SslServerCipherSuiteArrayOutput) ToVip6SslServerCipherSuiteArrayOutput() Vip6SslServerCipherSuiteArrayOutput {
	return o
}

func (o Vip6SslServerCipherSuiteArrayOutput) ToVip6SslServerCipherSuiteArrayOutputWithContext(ctx context.Context) Vip6SslServerCipherSuiteArrayOutput {
	return o
}

func (o Vip6SslServerCipherSuiteArrayOutput) Index(i pulumi.IntInput) Vip6SslServerCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vip6SslServerCipherSuite {
		return vs[0].([]Vip6SslServerCipherSuite)[vs[1].(int)]
	}).(Vip6SslServerCipherSuiteOutput)
}

type VipExtaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// VipExtaddrInput is an input type that accepts VipExtaddrArgs and VipExtaddrOutput values.
// You can construct a concrete instance of `VipExtaddrInput` via:
//
//	VipExtaddrArgs{...}
type VipExtaddrInput interface {
	pulumi.Input

	ToVipExtaddrOutput() VipExtaddrOutput
	ToVipExtaddrOutputWithContext(context.Context) VipExtaddrOutput
}

type VipExtaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VipExtaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipExtaddr)(nil)).Elem()
}

func (i VipExtaddrArgs) ToVipExtaddrOutput() VipExtaddrOutput {
	return i.ToVipExtaddrOutputWithContext(context.Background())
}

func (i VipExtaddrArgs) ToVipExtaddrOutputWithContext(ctx context.Context) VipExtaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipExtaddrOutput)
}

// VipExtaddrArrayInput is an input type that accepts VipExtaddrArray and VipExtaddrArrayOutput values.
// You can construct a concrete instance of `VipExtaddrArrayInput` via:
//
//	VipExtaddrArray{ VipExtaddrArgs{...} }
type VipExtaddrArrayInput interface {
	pulumi.Input

	ToVipExtaddrArrayOutput() VipExtaddrArrayOutput
	ToVipExtaddrArrayOutputWithContext(context.Context) VipExtaddrArrayOutput
}

type VipExtaddrArray []VipExtaddrInput

func (VipExtaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipExtaddr)(nil)).Elem()
}

func (i VipExtaddrArray) ToVipExtaddrArrayOutput() VipExtaddrArrayOutput {
	return i.ToVipExtaddrArrayOutputWithContext(context.Background())
}

func (i VipExtaddrArray) ToVipExtaddrArrayOutputWithContext(ctx context.Context) VipExtaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipExtaddrArrayOutput)
}

type VipExtaddrOutput struct{ *pulumi.OutputState }

func (VipExtaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipExtaddr)(nil)).Elem()
}

func (o VipExtaddrOutput) ToVipExtaddrOutput() VipExtaddrOutput {
	return o
}

func (o VipExtaddrOutput) ToVipExtaddrOutputWithContext(ctx context.Context) VipExtaddrOutput {
	return o
}

// Address name.
func (o VipExtaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipExtaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VipExtaddrArrayOutput struct{ *pulumi.OutputState }

func (VipExtaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipExtaddr)(nil)).Elem()
}

func (o VipExtaddrArrayOutput) ToVipExtaddrArrayOutput() VipExtaddrArrayOutput {
	return o
}

func (o VipExtaddrArrayOutput) ToVipExtaddrArrayOutputWithContext(ctx context.Context) VipExtaddrArrayOutput {
	return o
}

func (o VipExtaddrArrayOutput) Index(i pulumi.IntInput) VipExtaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VipExtaddr {
		return vs[0].([]VipExtaddr)[vs[1].(int)]
	}).(VipExtaddrOutput)
}

type VipGslbPublicIp struct {
	// Index of this public IP setting.
	Index *int `pulumi:"index"`
	// The publicly accessible IP address.
	Ip *string `pulumi:"ip"`
}

// VipGslbPublicIpInput is an input type that accepts VipGslbPublicIpArgs and VipGslbPublicIpOutput values.
// You can construct a concrete instance of `VipGslbPublicIpInput` via:
//
//	VipGslbPublicIpArgs{...}
type VipGslbPublicIpInput interface {
	pulumi.Input

	ToVipGslbPublicIpOutput() VipGslbPublicIpOutput
	ToVipGslbPublicIpOutputWithContext(context.Context) VipGslbPublicIpOutput
}

type VipGslbPublicIpArgs struct {
	// Index of this public IP setting.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// The publicly accessible IP address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (VipGslbPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipGslbPublicIp)(nil)).Elem()
}

func (i VipGslbPublicIpArgs) ToVipGslbPublicIpOutput() VipGslbPublicIpOutput {
	return i.ToVipGslbPublicIpOutputWithContext(context.Background())
}

func (i VipGslbPublicIpArgs) ToVipGslbPublicIpOutputWithContext(ctx context.Context) VipGslbPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipGslbPublicIpOutput)
}

// VipGslbPublicIpArrayInput is an input type that accepts VipGslbPublicIpArray and VipGslbPublicIpArrayOutput values.
// You can construct a concrete instance of `VipGslbPublicIpArrayInput` via:
//
//	VipGslbPublicIpArray{ VipGslbPublicIpArgs{...} }
type VipGslbPublicIpArrayInput interface {
	pulumi.Input

	ToVipGslbPublicIpArrayOutput() VipGslbPublicIpArrayOutput
	ToVipGslbPublicIpArrayOutputWithContext(context.Context) VipGslbPublicIpArrayOutput
}

type VipGslbPublicIpArray []VipGslbPublicIpInput

func (VipGslbPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipGslbPublicIp)(nil)).Elem()
}

func (i VipGslbPublicIpArray) ToVipGslbPublicIpArrayOutput() VipGslbPublicIpArrayOutput {
	return i.ToVipGslbPublicIpArrayOutputWithContext(context.Background())
}

func (i VipGslbPublicIpArray) ToVipGslbPublicIpArrayOutputWithContext(ctx context.Context) VipGslbPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipGslbPublicIpArrayOutput)
}

type VipGslbPublicIpOutput struct{ *pulumi.OutputState }

func (VipGslbPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipGslbPublicIp)(nil)).Elem()
}

func (o VipGslbPublicIpOutput) ToVipGslbPublicIpOutput() VipGslbPublicIpOutput {
	return o
}

func (o VipGslbPublicIpOutput) ToVipGslbPublicIpOutputWithContext(ctx context.Context) VipGslbPublicIpOutput {
	return o
}

// Index of this public IP setting.
func (o VipGslbPublicIpOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipGslbPublicIp) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// The publicly accessible IP address.
func (o VipGslbPublicIpOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipGslbPublicIp) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type VipGslbPublicIpArrayOutput struct{ *pulumi.OutputState }

func (VipGslbPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipGslbPublicIp)(nil)).Elem()
}

func (o VipGslbPublicIpArrayOutput) ToVipGslbPublicIpArrayOutput() VipGslbPublicIpArrayOutput {
	return o
}

func (o VipGslbPublicIpArrayOutput) ToVipGslbPublicIpArrayOutputWithContext(ctx context.Context) VipGslbPublicIpArrayOutput {
	return o
}

func (o VipGslbPublicIpArrayOutput) Index(i pulumi.IntInput) VipGslbPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VipGslbPublicIp {
		return vs[0].([]VipGslbPublicIp)[vs[1].(int)]
	}).(VipGslbPublicIpOutput)
}

type VipMappedip struct {
	// Mapped IP range.
	Range *string `pulumi:"range"`
}

// VipMappedipInput is an input type that accepts VipMappedipArgs and VipMappedipOutput values.
// You can construct a concrete instance of `VipMappedipInput` via:
//
//	VipMappedipArgs{...}
type VipMappedipInput interface {
	pulumi.Input

	ToVipMappedipOutput() VipMappedipOutput
	ToVipMappedipOutputWithContext(context.Context) VipMappedipOutput
}

type VipMappedipArgs struct {
	// Mapped IP range.
	Range pulumi.StringPtrInput `pulumi:"range"`
}

func (VipMappedipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipMappedip)(nil)).Elem()
}

func (i VipMappedipArgs) ToVipMappedipOutput() VipMappedipOutput {
	return i.ToVipMappedipOutputWithContext(context.Background())
}

func (i VipMappedipArgs) ToVipMappedipOutputWithContext(ctx context.Context) VipMappedipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipMappedipOutput)
}

// VipMappedipArrayInput is an input type that accepts VipMappedipArray and VipMappedipArrayOutput values.
// You can construct a concrete instance of `VipMappedipArrayInput` via:
//
//	VipMappedipArray{ VipMappedipArgs{...} }
type VipMappedipArrayInput interface {
	pulumi.Input

	ToVipMappedipArrayOutput() VipMappedipArrayOutput
	ToVipMappedipArrayOutputWithContext(context.Context) VipMappedipArrayOutput
}

type VipMappedipArray []VipMappedipInput

func (VipMappedipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipMappedip)(nil)).Elem()
}

func (i VipMappedipArray) ToVipMappedipArrayOutput() VipMappedipArrayOutput {
	return i.ToVipMappedipArrayOutputWithContext(context.Background())
}

func (i VipMappedipArray) ToVipMappedipArrayOutputWithContext(ctx context.Context) VipMappedipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipMappedipArrayOutput)
}

type VipMappedipOutput struct{ *pulumi.OutputState }

func (VipMappedipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipMappedip)(nil)).Elem()
}

func (o VipMappedipOutput) ToVipMappedipOutput() VipMappedipOutput {
	return o
}

func (o VipMappedipOutput) ToVipMappedipOutputWithContext(ctx context.Context) VipMappedipOutput {
	return o
}

// Mapped IP range.
func (o VipMappedipOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipMappedip) *string { return v.Range }).(pulumi.StringPtrOutput)
}

type VipMappedipArrayOutput struct{ *pulumi.OutputState }

func (VipMappedipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipMappedip)(nil)).Elem()
}

func (o VipMappedipArrayOutput) ToVipMappedipArrayOutput() VipMappedipArrayOutput {
	return o
}

func (o VipMappedipArrayOutput) ToVipMappedipArrayOutputWithContext(ctx context.Context) VipMappedipArrayOutput {
	return o
}

func (o VipMappedipArrayOutput) Index(i pulumi.IntInput) VipMappedipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VipMappedip {
		return vs[0].([]VipMappedip)[vs[1].(int)]
	}).(VipMappedipOutput)
}

type VipMonitor struct {
	// Health monitor name.
	Name *string `pulumi:"name"`
}

// VipMonitorInput is an input type that accepts VipMonitorArgs and VipMonitorOutput values.
// You can construct a concrete instance of `VipMonitorInput` via:
//
//	VipMonitorArgs{...}
type VipMonitorInput interface {
	pulumi.Input

	ToVipMonitorOutput() VipMonitorOutput
	ToVipMonitorOutputWithContext(context.Context) VipMonitorOutput
}

type VipMonitorArgs struct {
	// Health monitor name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VipMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipMonitor)(nil)).Elem()
}

func (i VipMonitorArgs) ToVipMonitorOutput() VipMonitorOutput {
	return i.ToVipMonitorOutputWithContext(context.Background())
}

func (i VipMonitorArgs) ToVipMonitorOutputWithContext(ctx context.Context) VipMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipMonitorOutput)
}

// VipMonitorArrayInput is an input type that accepts VipMonitorArray and VipMonitorArrayOutput values.
// You can construct a concrete instance of `VipMonitorArrayInput` via:
//
//	VipMonitorArray{ VipMonitorArgs{...} }
type VipMonitorArrayInput interface {
	pulumi.Input

	ToVipMonitorArrayOutput() VipMonitorArrayOutput
	ToVipMonitorArrayOutputWithContext(context.Context) VipMonitorArrayOutput
}

type VipMonitorArray []VipMonitorInput

func (VipMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipMonitor)(nil)).Elem()
}

func (i VipMonitorArray) ToVipMonitorArrayOutput() VipMonitorArrayOutput {
	return i.ToVipMonitorArrayOutputWithContext(context.Background())
}

func (i VipMonitorArray) ToVipMonitorArrayOutputWithContext(ctx context.Context) VipMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipMonitorArrayOutput)
}

type VipMonitorOutput struct{ *pulumi.OutputState }

func (VipMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipMonitor)(nil)).Elem()
}

func (o VipMonitorOutput) ToVipMonitorOutput() VipMonitorOutput {
	return o
}

func (o VipMonitorOutput) ToVipMonitorOutputWithContext(ctx context.Context) VipMonitorOutput {
	return o
}

// Health monitor name.
func (o VipMonitorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipMonitor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VipMonitorArrayOutput struct{ *pulumi.OutputState }

func (VipMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipMonitor)(nil)).Elem()
}

func (o VipMonitorArrayOutput) ToVipMonitorArrayOutput() VipMonitorArrayOutput {
	return o
}

func (o VipMonitorArrayOutput) ToVipMonitorArrayOutputWithContext(ctx context.Context) VipMonitorArrayOutput {
	return o
}

func (o VipMonitorArrayOutput) Index(i pulumi.IntInput) VipMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VipMonitor {
		return vs[0].([]VipMonitor)[vs[1].(int)]
	}).(VipMonitorOutput)
}

type VipQuic struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent *int `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit *int `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration *string `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit *string `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay *int `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize *int `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout *int `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize *int `pulumi:"maxUdpPayloadSize"`
}

// VipQuicInput is an input type that accepts VipQuicArgs and VipQuicOutput values.
// You can construct a concrete instance of `VipQuicInput` via:
//
//	VipQuicArgs{...}
type VipQuicInput interface {
	pulumi.Input

	ToVipQuicOutput() VipQuicOutput
	ToVipQuicOutputWithContext(context.Context) VipQuicOutput
}

type VipQuicArgs struct {
	// ACK delay exponent (1 - 20, default = 3).
	AckDelayExponent pulumi.IntPtrInput `pulumi:"ackDelayExponent"`
	// Active connection ID limit (1 - 8, default = 2).
	ActiveConnectionIdLimit pulumi.IntPtrInput `pulumi:"activeConnectionIdLimit"`
	// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
	ActiveMigration pulumi.StringPtrInput `pulumi:"activeMigration"`
	// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
	GreaseQuicBit pulumi.StringPtrInput `pulumi:"greaseQuicBit"`
	// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
	MaxAckDelay pulumi.IntPtrInput `pulumi:"maxAckDelay"`
	// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
	MaxDatagramFrameSize pulumi.IntPtrInput `pulumi:"maxDatagramFrameSize"`
	// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
	MaxIdleTimeout pulumi.IntPtrInput `pulumi:"maxIdleTimeout"`
	// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
	MaxUdpPayloadSize pulumi.IntPtrInput `pulumi:"maxUdpPayloadSize"`
}

func (VipQuicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipQuic)(nil)).Elem()
}

func (i VipQuicArgs) ToVipQuicOutput() VipQuicOutput {
	return i.ToVipQuicOutputWithContext(context.Background())
}

func (i VipQuicArgs) ToVipQuicOutputWithContext(ctx context.Context) VipQuicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipQuicOutput)
}

func (i VipQuicArgs) ToVipQuicPtrOutput() VipQuicPtrOutput {
	return i.ToVipQuicPtrOutputWithContext(context.Background())
}

func (i VipQuicArgs) ToVipQuicPtrOutputWithContext(ctx context.Context) VipQuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipQuicOutput).ToVipQuicPtrOutputWithContext(ctx)
}

// VipQuicPtrInput is an input type that accepts VipQuicArgs, VipQuicPtr and VipQuicPtrOutput values.
// You can construct a concrete instance of `VipQuicPtrInput` via:
//
//	        VipQuicArgs{...}
//
//	or:
//
//	        nil
type VipQuicPtrInput interface {
	pulumi.Input

	ToVipQuicPtrOutput() VipQuicPtrOutput
	ToVipQuicPtrOutputWithContext(context.Context) VipQuicPtrOutput
}

type vipQuicPtrType VipQuicArgs

func VipQuicPtr(v *VipQuicArgs) VipQuicPtrInput {
	return (*vipQuicPtrType)(v)
}

func (*vipQuicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VipQuic)(nil)).Elem()
}

func (i *vipQuicPtrType) ToVipQuicPtrOutput() VipQuicPtrOutput {
	return i.ToVipQuicPtrOutputWithContext(context.Background())
}

func (i *vipQuicPtrType) ToVipQuicPtrOutputWithContext(ctx context.Context) VipQuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipQuicPtrOutput)
}

type VipQuicOutput struct{ *pulumi.OutputState }

func (VipQuicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipQuic)(nil)).Elem()
}

func (o VipQuicOutput) ToVipQuicOutput() VipQuicOutput {
	return o
}

func (o VipQuicOutput) ToVipQuicOutputWithContext(ctx context.Context) VipQuicOutput {
	return o
}

func (o VipQuicOutput) ToVipQuicPtrOutput() VipQuicPtrOutput {
	return o.ToVipQuicPtrOutputWithContext(context.Background())
}

func (o VipQuicOutput) ToVipQuicPtrOutputWithContext(ctx context.Context) VipQuicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VipQuic) *VipQuic {
		return &v
	}).(VipQuicPtrOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o VipQuicOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipQuic) *int { return v.AckDelayExponent }).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o VipQuicOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipQuic) *int { return v.ActiveConnectionIdLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o VipQuicOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipQuic) *string { return v.ActiveMigration }).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o VipQuicOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipQuic) *string { return v.GreaseQuicBit }).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o VipQuicOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipQuic) *int { return v.MaxAckDelay }).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o VipQuicOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipQuic) *int { return v.MaxDatagramFrameSize }).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o VipQuicOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipQuic) *int { return v.MaxIdleTimeout }).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o VipQuicOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipQuic) *int { return v.MaxUdpPayloadSize }).(pulumi.IntPtrOutput)
}

type VipQuicPtrOutput struct{ *pulumi.OutputState }

func (VipQuicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VipQuic)(nil)).Elem()
}

func (o VipQuicPtrOutput) ToVipQuicPtrOutput() VipQuicPtrOutput {
	return o
}

func (o VipQuicPtrOutput) ToVipQuicPtrOutputWithContext(ctx context.Context) VipQuicPtrOutput {
	return o
}

func (o VipQuicPtrOutput) Elem() VipQuicOutput {
	return o.ApplyT(func(v *VipQuic) VipQuic {
		if v != nil {
			return *v
		}
		var ret VipQuic
		return ret
	}).(VipQuicOutput)
}

// ACK delay exponent (1 - 20, default = 3).
func (o VipQuicPtrOutput) AckDelayExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VipQuic) *int {
		if v == nil {
			return nil
		}
		return v.AckDelayExponent
	}).(pulumi.IntPtrOutput)
}

// Active connection ID limit (1 - 8, default = 2).
func (o VipQuicPtrOutput) ActiveConnectionIdLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VipQuic) *int {
		if v == nil {
			return nil
		}
		return v.ActiveConnectionIdLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable active migration (default = disable). Valid values: `enable`, `disable`.
func (o VipQuicPtrOutput) ActiveMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VipQuic) *string {
		if v == nil {
			return nil
		}
		return v.ActiveMigration
	}).(pulumi.StringPtrOutput)
}

// Enable/disable grease QUIC bit (default = enable). Valid values: `enable`, `disable`.
func (o VipQuicPtrOutput) GreaseQuicBit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VipQuic) *string {
		if v == nil {
			return nil
		}
		return v.GreaseQuicBit
	}).(pulumi.StringPtrOutput)
}

// Maximum ACK delay in milliseconds (1 - 16383, default = 25).
func (o VipQuicPtrOutput) MaxAckDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VipQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxAckDelay
	}).(pulumi.IntPtrOutput)
}

// Maximum datagram frame size in bytes (1 - 1500, default = 1500).
func (o VipQuicPtrOutput) MaxDatagramFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VipQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxDatagramFrameSize
	}).(pulumi.IntPtrOutput)
}

// Maximum idle timeout milliseconds (1 - 60000, default = 30000).
func (o VipQuicPtrOutput) MaxIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VipQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleTimeout
	}).(pulumi.IntPtrOutput)
}

// Maximum UDP payload size in bytes (1200 - 1500, default = 1500).
func (o VipQuicPtrOutput) MaxUdpPayloadSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VipQuic) *int {
		if v == nil {
			return nil
		}
		return v.MaxUdpPayloadSize
	}).(pulumi.IntPtrOutput)
}

type VipRealserver struct {
	// Dynamic address of the real server.
	Address *string `pulumi:"address"`
	// Only clients in this IP range can connect to this real server.
	ClientIp *string `pulumi:"clientIp"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
	Healthcheck *string `pulumi:"healthcheck"`
	// Time in seconds that the health check monitor continues to monitor and unresponsive server that should be active.
	HolddownInterval *int `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IP address of the real server.
	Ip *string `pulumi:"ip"`
	// Max number of active connections that can be directed to the real server. When reached, sessions are sent to other real servers.
	MaxConnections *int `pulumi:"maxConnections"`
	// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
	Monitor *string `pulumi:"monitor"`
	// Port for communicating with the real server. Required if port forwarding is enabled.
	Port *int `pulumi:"port"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost *string `pulumi:"translateHost"`
	// Type of address. Valid values: `ip`, `address`.
	Type *string `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// VipRealserverInput is an input type that accepts VipRealserverArgs and VipRealserverOutput values.
// You can construct a concrete instance of `VipRealserverInput` via:
//
//	VipRealserverArgs{...}
type VipRealserverInput interface {
	pulumi.Input

	ToVipRealserverOutput() VipRealserverOutput
	ToVipRealserverOutputWithContext(context.Context) VipRealserverOutput
}

type VipRealserverArgs struct {
	// Dynamic address of the real server.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Only clients in this IP range can connect to this real server.
	ClientIp pulumi.StringPtrInput `pulumi:"clientIp"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
	Healthcheck pulumi.StringPtrInput `pulumi:"healthcheck"`
	// Time in seconds that the health check monitor continues to monitor and unresponsive server that should be active.
	HolddownInterval pulumi.IntPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IP address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Max number of active connections that can be directed to the real server. When reached, sessions are sent to other real servers.
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	// Port for communicating with the real server. Required if port forwarding is enabled.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
	TranslateHost pulumi.StringPtrInput `pulumi:"translateHost"`
	// Type of address. Valid values: `ip`, `address`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (VipRealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipRealserver)(nil)).Elem()
}

func (i VipRealserverArgs) ToVipRealserverOutput() VipRealserverOutput {
	return i.ToVipRealserverOutputWithContext(context.Background())
}

func (i VipRealserverArgs) ToVipRealserverOutputWithContext(ctx context.Context) VipRealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipRealserverOutput)
}

// VipRealserverArrayInput is an input type that accepts VipRealserverArray and VipRealserverArrayOutput values.
// You can construct a concrete instance of `VipRealserverArrayInput` via:
//
//	VipRealserverArray{ VipRealserverArgs{...} }
type VipRealserverArrayInput interface {
	pulumi.Input

	ToVipRealserverArrayOutput() VipRealserverArrayOutput
	ToVipRealserverArrayOutputWithContext(context.Context) VipRealserverArrayOutput
}

type VipRealserverArray []VipRealserverInput

func (VipRealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipRealserver)(nil)).Elem()
}

func (i VipRealserverArray) ToVipRealserverArrayOutput() VipRealserverArrayOutput {
	return i.ToVipRealserverArrayOutputWithContext(context.Background())
}

func (i VipRealserverArray) ToVipRealserverArrayOutputWithContext(ctx context.Context) VipRealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipRealserverArrayOutput)
}

type VipRealserverOutput struct{ *pulumi.OutputState }

func (VipRealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipRealserver)(nil)).Elem()
}

func (o VipRealserverOutput) ToVipRealserverOutput() VipRealserverOutput {
	return o
}

func (o VipRealserverOutput) ToVipRealserverOutputWithContext(ctx context.Context) VipRealserverOutput {
	return o
}

// Dynamic address of the real server.
func (o VipRealserverOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipRealserver) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Only clients in this IP range can connect to this real server.
func (o VipRealserverOutput) ClientIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipRealserver) *string { return v.ClientIp }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
func (o VipRealserverOutput) Healthcheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipRealserver) *string { return v.Healthcheck }).(pulumi.StringPtrOutput)
}

// Time in seconds that the health check monitor continues to monitor and unresponsive server that should be active.
func (o VipRealserverOutput) HolddownInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipRealserver) *int { return v.HolddownInterval }).(pulumi.IntPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o VipRealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipRealserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o VipRealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipRealserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IP address of the real server.
func (o VipRealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipRealserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Max number of active connections that can be directed to the real server. When reached, sessions are sent to other real servers.
func (o VipRealserverOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipRealserver) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
func (o VipRealserverOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipRealserver) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server. Required if port forwarding is enabled.
func (o VipRealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipRealserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o VipRealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipRealserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable translation of hostname/IP from virtual server to real server. Valid values: `enable`, `disable`.
func (o VipRealserverOutput) TranslateHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipRealserver) *string { return v.TranslateHost }).(pulumi.StringPtrOutput)
}

// Type of address. Valid values: `ip`, `address`.
func (o VipRealserverOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipRealserver) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o VipRealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipRealserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type VipRealserverArrayOutput struct{ *pulumi.OutputState }

func (VipRealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipRealserver)(nil)).Elem()
}

func (o VipRealserverArrayOutput) ToVipRealserverArrayOutput() VipRealserverArrayOutput {
	return o
}

func (o VipRealserverArrayOutput) ToVipRealserverArrayOutputWithContext(ctx context.Context) VipRealserverArrayOutput {
	return o
}

func (o VipRealserverArrayOutput) Index(i pulumi.IntInput) VipRealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VipRealserver {
		return vs[0].([]VipRealserver)[vs[1].(int)]
	}).(VipRealserverOutput)
}

type VipService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// VipServiceInput is an input type that accepts VipServiceArgs and VipServiceOutput values.
// You can construct a concrete instance of `VipServiceInput` via:
//
//	VipServiceArgs{...}
type VipServiceInput interface {
	pulumi.Input

	ToVipServiceOutput() VipServiceOutput
	ToVipServiceOutputWithContext(context.Context) VipServiceOutput
}

type VipServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VipServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipService)(nil)).Elem()
}

func (i VipServiceArgs) ToVipServiceOutput() VipServiceOutput {
	return i.ToVipServiceOutputWithContext(context.Background())
}

func (i VipServiceArgs) ToVipServiceOutputWithContext(ctx context.Context) VipServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipServiceOutput)
}

// VipServiceArrayInput is an input type that accepts VipServiceArray and VipServiceArrayOutput values.
// You can construct a concrete instance of `VipServiceArrayInput` via:
//
//	VipServiceArray{ VipServiceArgs{...} }
type VipServiceArrayInput interface {
	pulumi.Input

	ToVipServiceArrayOutput() VipServiceArrayOutput
	ToVipServiceArrayOutputWithContext(context.Context) VipServiceArrayOutput
}

type VipServiceArray []VipServiceInput

func (VipServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipService)(nil)).Elem()
}

func (i VipServiceArray) ToVipServiceArrayOutput() VipServiceArrayOutput {
	return i.ToVipServiceArrayOutputWithContext(context.Background())
}

func (i VipServiceArray) ToVipServiceArrayOutputWithContext(ctx context.Context) VipServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipServiceArrayOutput)
}

type VipServiceOutput struct{ *pulumi.OutputState }

func (VipServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipService)(nil)).Elem()
}

func (o VipServiceOutput) ToVipServiceOutput() VipServiceOutput {
	return o
}

func (o VipServiceOutput) ToVipServiceOutputWithContext(ctx context.Context) VipServiceOutput {
	return o
}

// Service name.
func (o VipServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VipServiceArrayOutput struct{ *pulumi.OutputState }

func (VipServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipService)(nil)).Elem()
}

func (o VipServiceArrayOutput) ToVipServiceArrayOutput() VipServiceArrayOutput {
	return o
}

func (o VipServiceArrayOutput) ToVipServiceArrayOutputWithContext(ctx context.Context) VipServiceArrayOutput {
	return o
}

func (o VipServiceArrayOutput) Index(i pulumi.IntInput) VipServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VipService {
		return vs[0].([]VipService)[vs[1].(int)]
	}).(VipServiceOutput)
}

type VipSrcFilter struct {
	// Source-filter range.
	Range *string `pulumi:"range"`
}

// VipSrcFilterInput is an input type that accepts VipSrcFilterArgs and VipSrcFilterOutput values.
// You can construct a concrete instance of `VipSrcFilterInput` via:
//
//	VipSrcFilterArgs{...}
type VipSrcFilterInput interface {
	pulumi.Input

	ToVipSrcFilterOutput() VipSrcFilterOutput
	ToVipSrcFilterOutputWithContext(context.Context) VipSrcFilterOutput
}

type VipSrcFilterArgs struct {
	// Source-filter range.
	Range pulumi.StringPtrInput `pulumi:"range"`
}

func (VipSrcFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipSrcFilter)(nil)).Elem()
}

func (i VipSrcFilterArgs) ToVipSrcFilterOutput() VipSrcFilterOutput {
	return i.ToVipSrcFilterOutputWithContext(context.Background())
}

func (i VipSrcFilterArgs) ToVipSrcFilterOutputWithContext(ctx context.Context) VipSrcFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipSrcFilterOutput)
}

// VipSrcFilterArrayInput is an input type that accepts VipSrcFilterArray and VipSrcFilterArrayOutput values.
// You can construct a concrete instance of `VipSrcFilterArrayInput` via:
//
//	VipSrcFilterArray{ VipSrcFilterArgs{...} }
type VipSrcFilterArrayInput interface {
	pulumi.Input

	ToVipSrcFilterArrayOutput() VipSrcFilterArrayOutput
	ToVipSrcFilterArrayOutputWithContext(context.Context) VipSrcFilterArrayOutput
}

type VipSrcFilterArray []VipSrcFilterInput

func (VipSrcFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipSrcFilter)(nil)).Elem()
}

func (i VipSrcFilterArray) ToVipSrcFilterArrayOutput() VipSrcFilterArrayOutput {
	return i.ToVipSrcFilterArrayOutputWithContext(context.Background())
}

func (i VipSrcFilterArray) ToVipSrcFilterArrayOutputWithContext(ctx context.Context) VipSrcFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipSrcFilterArrayOutput)
}

type VipSrcFilterOutput struct{ *pulumi.OutputState }

func (VipSrcFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipSrcFilter)(nil)).Elem()
}

func (o VipSrcFilterOutput) ToVipSrcFilterOutput() VipSrcFilterOutput {
	return o
}

func (o VipSrcFilterOutput) ToVipSrcFilterOutputWithContext(ctx context.Context) VipSrcFilterOutput {
	return o
}

// Source-filter range.
func (o VipSrcFilterOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipSrcFilter) *string { return v.Range }).(pulumi.StringPtrOutput)
}

type VipSrcFilterArrayOutput struct{ *pulumi.OutputState }

func (VipSrcFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipSrcFilter)(nil)).Elem()
}

func (o VipSrcFilterArrayOutput) ToVipSrcFilterArrayOutput() VipSrcFilterArrayOutput {
	return o
}

func (o VipSrcFilterArrayOutput) ToVipSrcFilterArrayOutputWithContext(ctx context.Context) VipSrcFilterArrayOutput {
	return o
}

func (o VipSrcFilterArrayOutput) Index(i pulumi.IntInput) VipSrcFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VipSrcFilter {
		return vs[0].([]VipSrcFilter)[vs[1].(int)]
	}).(VipSrcFilterOutput)
}

type VipSrcintfFilter struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// VipSrcintfFilterInput is an input type that accepts VipSrcintfFilterArgs and VipSrcintfFilterOutput values.
// You can construct a concrete instance of `VipSrcintfFilterInput` via:
//
//	VipSrcintfFilterArgs{...}
type VipSrcintfFilterInput interface {
	pulumi.Input

	ToVipSrcintfFilterOutput() VipSrcintfFilterOutput
	ToVipSrcintfFilterOutputWithContext(context.Context) VipSrcintfFilterOutput
}

type VipSrcintfFilterArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (VipSrcintfFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipSrcintfFilter)(nil)).Elem()
}

func (i VipSrcintfFilterArgs) ToVipSrcintfFilterOutput() VipSrcintfFilterOutput {
	return i.ToVipSrcintfFilterOutputWithContext(context.Background())
}

func (i VipSrcintfFilterArgs) ToVipSrcintfFilterOutputWithContext(ctx context.Context) VipSrcintfFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipSrcintfFilterOutput)
}

// VipSrcintfFilterArrayInput is an input type that accepts VipSrcintfFilterArray and VipSrcintfFilterArrayOutput values.
// You can construct a concrete instance of `VipSrcintfFilterArrayInput` via:
//
//	VipSrcintfFilterArray{ VipSrcintfFilterArgs{...} }
type VipSrcintfFilterArrayInput interface {
	pulumi.Input

	ToVipSrcintfFilterArrayOutput() VipSrcintfFilterArrayOutput
	ToVipSrcintfFilterArrayOutputWithContext(context.Context) VipSrcintfFilterArrayOutput
}

type VipSrcintfFilterArray []VipSrcintfFilterInput

func (VipSrcintfFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipSrcintfFilter)(nil)).Elem()
}

func (i VipSrcintfFilterArray) ToVipSrcintfFilterArrayOutput() VipSrcintfFilterArrayOutput {
	return i.ToVipSrcintfFilterArrayOutputWithContext(context.Background())
}

func (i VipSrcintfFilterArray) ToVipSrcintfFilterArrayOutputWithContext(ctx context.Context) VipSrcintfFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipSrcintfFilterArrayOutput)
}

type VipSrcintfFilterOutput struct{ *pulumi.OutputState }

func (VipSrcintfFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipSrcintfFilter)(nil)).Elem()
}

func (o VipSrcintfFilterOutput) ToVipSrcintfFilterOutput() VipSrcintfFilterOutput {
	return o
}

func (o VipSrcintfFilterOutput) ToVipSrcintfFilterOutputWithContext(ctx context.Context) VipSrcintfFilterOutput {
	return o
}

// Interface name.
func (o VipSrcintfFilterOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipSrcintfFilter) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type VipSrcintfFilterArrayOutput struct{ *pulumi.OutputState }

func (VipSrcintfFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipSrcintfFilter)(nil)).Elem()
}

func (o VipSrcintfFilterArrayOutput) ToVipSrcintfFilterArrayOutput() VipSrcintfFilterArrayOutput {
	return o
}

func (o VipSrcintfFilterArrayOutput) ToVipSrcintfFilterArrayOutputWithContext(ctx context.Context) VipSrcintfFilterArrayOutput {
	return o
}

func (o VipSrcintfFilterArrayOutput) Index(i pulumi.IntInput) VipSrcintfFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VipSrcintfFilter {
		return vs[0].([]VipSrcintfFilter)[vs[1].(int)]
	}).(VipSrcintfFilterOutput)
}

type VipSslCipherSuite struct {
	// Cipher suite name.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions *string `pulumi:"versions"`
}

// VipSslCipherSuiteInput is an input type that accepts VipSslCipherSuiteArgs and VipSslCipherSuiteOutput values.
// You can construct a concrete instance of `VipSslCipherSuiteInput` via:
//
//	VipSslCipherSuiteArgs{...}
type VipSslCipherSuiteInput interface {
	pulumi.Input

	ToVipSslCipherSuiteOutput() VipSslCipherSuiteOutput
	ToVipSslCipherSuiteOutputWithContext(context.Context) VipSslCipherSuiteOutput
}

type VipSslCipherSuiteArgs struct {
	// Cipher suite name.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (VipSslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipSslCipherSuite)(nil)).Elem()
}

func (i VipSslCipherSuiteArgs) ToVipSslCipherSuiteOutput() VipSslCipherSuiteOutput {
	return i.ToVipSslCipherSuiteOutputWithContext(context.Background())
}

func (i VipSslCipherSuiteArgs) ToVipSslCipherSuiteOutputWithContext(ctx context.Context) VipSslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipSslCipherSuiteOutput)
}

// VipSslCipherSuiteArrayInput is an input type that accepts VipSslCipherSuiteArray and VipSslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `VipSslCipherSuiteArrayInput` via:
//
//	VipSslCipherSuiteArray{ VipSslCipherSuiteArgs{...} }
type VipSslCipherSuiteArrayInput interface {
	pulumi.Input

	ToVipSslCipherSuiteArrayOutput() VipSslCipherSuiteArrayOutput
	ToVipSslCipherSuiteArrayOutputWithContext(context.Context) VipSslCipherSuiteArrayOutput
}

type VipSslCipherSuiteArray []VipSslCipherSuiteInput

func (VipSslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipSslCipherSuite)(nil)).Elem()
}

func (i VipSslCipherSuiteArray) ToVipSslCipherSuiteArrayOutput() VipSslCipherSuiteArrayOutput {
	return i.ToVipSslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i VipSslCipherSuiteArray) ToVipSslCipherSuiteArrayOutputWithContext(ctx context.Context) VipSslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipSslCipherSuiteArrayOutput)
}

type VipSslCipherSuiteOutput struct{ *pulumi.OutputState }

func (VipSslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipSslCipherSuite)(nil)).Elem()
}

func (o VipSslCipherSuiteOutput) ToVipSslCipherSuiteOutput() VipSslCipherSuiteOutput {
	return o
}

func (o VipSslCipherSuiteOutput) ToVipSslCipherSuiteOutputWithContext(ctx context.Context) VipSslCipherSuiteOutput {
	return o
}

// Cipher suite name.
func (o VipSslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipSslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o VipSslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipSslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with.
func (o VipSslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipSslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type VipSslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (VipSslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipSslCipherSuite)(nil)).Elem()
}

func (o VipSslCipherSuiteArrayOutput) ToVipSslCipherSuiteArrayOutput() VipSslCipherSuiteArrayOutput {
	return o
}

func (o VipSslCipherSuiteArrayOutput) ToVipSslCipherSuiteArrayOutputWithContext(ctx context.Context) VipSslCipherSuiteArrayOutput {
	return o
}

func (o VipSslCipherSuiteArrayOutput) Index(i pulumi.IntInput) VipSslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VipSslCipherSuite {
		return vs[0].([]VipSslCipherSuite)[vs[1].(int)]
	}).(VipSslCipherSuiteOutput)
}

type VipSslServerCipherSuite struct {
	// Cipher suite name.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions *string `pulumi:"versions"`
}

// VipSslServerCipherSuiteInput is an input type that accepts VipSslServerCipherSuiteArgs and VipSslServerCipherSuiteOutput values.
// You can construct a concrete instance of `VipSslServerCipherSuiteInput` via:
//
//	VipSslServerCipherSuiteArgs{...}
type VipSslServerCipherSuiteInput interface {
	pulumi.Input

	ToVipSslServerCipherSuiteOutput() VipSslServerCipherSuiteOutput
	ToVipSslServerCipherSuiteOutputWithContext(context.Context) VipSslServerCipherSuiteOutput
}

type VipSslServerCipherSuiteArgs struct {
	// Cipher suite name.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (VipSslServerCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipSslServerCipherSuite)(nil)).Elem()
}

func (i VipSslServerCipherSuiteArgs) ToVipSslServerCipherSuiteOutput() VipSslServerCipherSuiteOutput {
	return i.ToVipSslServerCipherSuiteOutputWithContext(context.Background())
}

func (i VipSslServerCipherSuiteArgs) ToVipSslServerCipherSuiteOutputWithContext(ctx context.Context) VipSslServerCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipSslServerCipherSuiteOutput)
}

// VipSslServerCipherSuiteArrayInput is an input type that accepts VipSslServerCipherSuiteArray and VipSslServerCipherSuiteArrayOutput values.
// You can construct a concrete instance of `VipSslServerCipherSuiteArrayInput` via:
//
//	VipSslServerCipherSuiteArray{ VipSslServerCipherSuiteArgs{...} }
type VipSslServerCipherSuiteArrayInput interface {
	pulumi.Input

	ToVipSslServerCipherSuiteArrayOutput() VipSslServerCipherSuiteArrayOutput
	ToVipSslServerCipherSuiteArrayOutputWithContext(context.Context) VipSslServerCipherSuiteArrayOutput
}

type VipSslServerCipherSuiteArray []VipSslServerCipherSuiteInput

func (VipSslServerCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipSslServerCipherSuite)(nil)).Elem()
}

func (i VipSslServerCipherSuiteArray) ToVipSslServerCipherSuiteArrayOutput() VipSslServerCipherSuiteArrayOutput {
	return i.ToVipSslServerCipherSuiteArrayOutputWithContext(context.Background())
}

func (i VipSslServerCipherSuiteArray) ToVipSslServerCipherSuiteArrayOutputWithContext(ctx context.Context) VipSslServerCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipSslServerCipherSuiteArrayOutput)
}

type VipSslServerCipherSuiteOutput struct{ *pulumi.OutputState }

func (VipSslServerCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipSslServerCipherSuite)(nil)).Elem()
}

func (o VipSslServerCipherSuiteOutput) ToVipSslServerCipherSuiteOutput() VipSslServerCipherSuiteOutput {
	return o
}

func (o VipSslServerCipherSuiteOutput) ToVipSslServerCipherSuiteOutputWithContext(ctx context.Context) VipSslServerCipherSuiteOutput {
	return o
}

// Cipher suite name.
func (o VipSslServerCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipSslServerCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o VipSslServerCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VipSslServerCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with.
func (o VipSslServerCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipSslServerCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type VipSslServerCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (VipSslServerCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipSslServerCipherSuite)(nil)).Elem()
}

func (o VipSslServerCipherSuiteArrayOutput) ToVipSslServerCipherSuiteArrayOutput() VipSslServerCipherSuiteArrayOutput {
	return o
}

func (o VipSslServerCipherSuiteArrayOutput) ToVipSslServerCipherSuiteArrayOutputWithContext(ctx context.Context) VipSslServerCipherSuiteArrayOutput {
	return o
}

func (o VipSslServerCipherSuiteArrayOutput) Index(i pulumi.IntInput) VipSslServerCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VipSslServerCipherSuite {
		return vs[0].([]VipSslServerCipherSuite)[vs[1].(int)]
	}).(VipSslServerCipherSuiteOutput)
}

type Vipgrp46Member struct {
	// VIP46 name.
	Name *string `pulumi:"name"`
}

// Vipgrp46MemberInput is an input type that accepts Vipgrp46MemberArgs and Vipgrp46MemberOutput values.
// You can construct a concrete instance of `Vipgrp46MemberInput` via:
//
//	Vipgrp46MemberArgs{...}
type Vipgrp46MemberInput interface {
	pulumi.Input

	ToVipgrp46MemberOutput() Vipgrp46MemberOutput
	ToVipgrp46MemberOutputWithContext(context.Context) Vipgrp46MemberOutput
}

type Vipgrp46MemberArgs struct {
	// VIP46 name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Vipgrp46MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vipgrp46Member)(nil)).Elem()
}

func (i Vipgrp46MemberArgs) ToVipgrp46MemberOutput() Vipgrp46MemberOutput {
	return i.ToVipgrp46MemberOutputWithContext(context.Background())
}

func (i Vipgrp46MemberArgs) ToVipgrp46MemberOutputWithContext(ctx context.Context) Vipgrp46MemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vipgrp46MemberOutput)
}

// Vipgrp46MemberArrayInput is an input type that accepts Vipgrp46MemberArray and Vipgrp46MemberArrayOutput values.
// You can construct a concrete instance of `Vipgrp46MemberArrayInput` via:
//
//	Vipgrp46MemberArray{ Vipgrp46MemberArgs{...} }
type Vipgrp46MemberArrayInput interface {
	pulumi.Input

	ToVipgrp46MemberArrayOutput() Vipgrp46MemberArrayOutput
	ToVipgrp46MemberArrayOutputWithContext(context.Context) Vipgrp46MemberArrayOutput
}

type Vipgrp46MemberArray []Vipgrp46MemberInput

func (Vipgrp46MemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vipgrp46Member)(nil)).Elem()
}

func (i Vipgrp46MemberArray) ToVipgrp46MemberArrayOutput() Vipgrp46MemberArrayOutput {
	return i.ToVipgrp46MemberArrayOutputWithContext(context.Background())
}

func (i Vipgrp46MemberArray) ToVipgrp46MemberArrayOutputWithContext(ctx context.Context) Vipgrp46MemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vipgrp46MemberArrayOutput)
}

type Vipgrp46MemberOutput struct{ *pulumi.OutputState }

func (Vipgrp46MemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vipgrp46Member)(nil)).Elem()
}

func (o Vipgrp46MemberOutput) ToVipgrp46MemberOutput() Vipgrp46MemberOutput {
	return o
}

func (o Vipgrp46MemberOutput) ToVipgrp46MemberOutputWithContext(ctx context.Context) Vipgrp46MemberOutput {
	return o
}

// VIP46 name.
func (o Vipgrp46MemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vipgrp46Member) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Vipgrp46MemberArrayOutput struct{ *pulumi.OutputState }

func (Vipgrp46MemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vipgrp46Member)(nil)).Elem()
}

func (o Vipgrp46MemberArrayOutput) ToVipgrp46MemberArrayOutput() Vipgrp46MemberArrayOutput {
	return o
}

func (o Vipgrp46MemberArrayOutput) ToVipgrp46MemberArrayOutputWithContext(ctx context.Context) Vipgrp46MemberArrayOutput {
	return o
}

func (o Vipgrp46MemberArrayOutput) Index(i pulumi.IntInput) Vipgrp46MemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vipgrp46Member {
		return vs[0].([]Vipgrp46Member)[vs[1].(int)]
	}).(Vipgrp46MemberOutput)
}

type Vipgrp64Member struct {
	// VIP64 name.
	Name *string `pulumi:"name"`
}

// Vipgrp64MemberInput is an input type that accepts Vipgrp64MemberArgs and Vipgrp64MemberOutput values.
// You can construct a concrete instance of `Vipgrp64MemberInput` via:
//
//	Vipgrp64MemberArgs{...}
type Vipgrp64MemberInput interface {
	pulumi.Input

	ToVipgrp64MemberOutput() Vipgrp64MemberOutput
	ToVipgrp64MemberOutputWithContext(context.Context) Vipgrp64MemberOutput
}

type Vipgrp64MemberArgs struct {
	// VIP64 name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Vipgrp64MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vipgrp64Member)(nil)).Elem()
}

func (i Vipgrp64MemberArgs) ToVipgrp64MemberOutput() Vipgrp64MemberOutput {
	return i.ToVipgrp64MemberOutputWithContext(context.Background())
}

func (i Vipgrp64MemberArgs) ToVipgrp64MemberOutputWithContext(ctx context.Context) Vipgrp64MemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vipgrp64MemberOutput)
}

// Vipgrp64MemberArrayInput is an input type that accepts Vipgrp64MemberArray and Vipgrp64MemberArrayOutput values.
// You can construct a concrete instance of `Vipgrp64MemberArrayInput` via:
//
//	Vipgrp64MemberArray{ Vipgrp64MemberArgs{...} }
type Vipgrp64MemberArrayInput interface {
	pulumi.Input

	ToVipgrp64MemberArrayOutput() Vipgrp64MemberArrayOutput
	ToVipgrp64MemberArrayOutputWithContext(context.Context) Vipgrp64MemberArrayOutput
}

type Vipgrp64MemberArray []Vipgrp64MemberInput

func (Vipgrp64MemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vipgrp64Member)(nil)).Elem()
}

func (i Vipgrp64MemberArray) ToVipgrp64MemberArrayOutput() Vipgrp64MemberArrayOutput {
	return i.ToVipgrp64MemberArrayOutputWithContext(context.Background())
}

func (i Vipgrp64MemberArray) ToVipgrp64MemberArrayOutputWithContext(ctx context.Context) Vipgrp64MemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vipgrp64MemberArrayOutput)
}

type Vipgrp64MemberOutput struct{ *pulumi.OutputState }

func (Vipgrp64MemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vipgrp64Member)(nil)).Elem()
}

func (o Vipgrp64MemberOutput) ToVipgrp64MemberOutput() Vipgrp64MemberOutput {
	return o
}

func (o Vipgrp64MemberOutput) ToVipgrp64MemberOutputWithContext(ctx context.Context) Vipgrp64MemberOutput {
	return o
}

// VIP64 name.
func (o Vipgrp64MemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vipgrp64Member) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Vipgrp64MemberArrayOutput struct{ *pulumi.OutputState }

func (Vipgrp64MemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vipgrp64Member)(nil)).Elem()
}

func (o Vipgrp64MemberArrayOutput) ToVipgrp64MemberArrayOutput() Vipgrp64MemberArrayOutput {
	return o
}

func (o Vipgrp64MemberArrayOutput) ToVipgrp64MemberArrayOutputWithContext(ctx context.Context) Vipgrp64MemberArrayOutput {
	return o
}

func (o Vipgrp64MemberArrayOutput) Index(i pulumi.IntInput) Vipgrp64MemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vipgrp64Member {
		return vs[0].([]Vipgrp64Member)[vs[1].(int)]
	}).(Vipgrp64MemberOutput)
}

type Vipgrp6Member struct {
	// IPv6 VIP name.
	Name *string `pulumi:"name"`
}

// Vipgrp6MemberInput is an input type that accepts Vipgrp6MemberArgs and Vipgrp6MemberOutput values.
// You can construct a concrete instance of `Vipgrp6MemberInput` via:
//
//	Vipgrp6MemberArgs{...}
type Vipgrp6MemberInput interface {
	pulumi.Input

	ToVipgrp6MemberOutput() Vipgrp6MemberOutput
	ToVipgrp6MemberOutputWithContext(context.Context) Vipgrp6MemberOutput
}

type Vipgrp6MemberArgs struct {
	// IPv6 VIP name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Vipgrp6MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Vipgrp6Member)(nil)).Elem()
}

func (i Vipgrp6MemberArgs) ToVipgrp6MemberOutput() Vipgrp6MemberOutput {
	return i.ToVipgrp6MemberOutputWithContext(context.Background())
}

func (i Vipgrp6MemberArgs) ToVipgrp6MemberOutputWithContext(ctx context.Context) Vipgrp6MemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vipgrp6MemberOutput)
}

// Vipgrp6MemberArrayInput is an input type that accepts Vipgrp6MemberArray and Vipgrp6MemberArrayOutput values.
// You can construct a concrete instance of `Vipgrp6MemberArrayInput` via:
//
//	Vipgrp6MemberArray{ Vipgrp6MemberArgs{...} }
type Vipgrp6MemberArrayInput interface {
	pulumi.Input

	ToVipgrp6MemberArrayOutput() Vipgrp6MemberArrayOutput
	ToVipgrp6MemberArrayOutputWithContext(context.Context) Vipgrp6MemberArrayOutput
}

type Vipgrp6MemberArray []Vipgrp6MemberInput

func (Vipgrp6MemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vipgrp6Member)(nil)).Elem()
}

func (i Vipgrp6MemberArray) ToVipgrp6MemberArrayOutput() Vipgrp6MemberArrayOutput {
	return i.ToVipgrp6MemberArrayOutputWithContext(context.Background())
}

func (i Vipgrp6MemberArray) ToVipgrp6MemberArrayOutputWithContext(ctx context.Context) Vipgrp6MemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vipgrp6MemberArrayOutput)
}

type Vipgrp6MemberOutput struct{ *pulumi.OutputState }

func (Vipgrp6MemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vipgrp6Member)(nil)).Elem()
}

func (o Vipgrp6MemberOutput) ToVipgrp6MemberOutput() Vipgrp6MemberOutput {
	return o
}

func (o Vipgrp6MemberOutput) ToVipgrp6MemberOutputWithContext(ctx context.Context) Vipgrp6MemberOutput {
	return o
}

// IPv6 VIP name.
func (o Vipgrp6MemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Vipgrp6Member) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Vipgrp6MemberArrayOutput struct{ *pulumi.OutputState }

func (Vipgrp6MemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Vipgrp6Member)(nil)).Elem()
}

func (o Vipgrp6MemberArrayOutput) ToVipgrp6MemberArrayOutput() Vipgrp6MemberArrayOutput {
	return o
}

func (o Vipgrp6MemberArrayOutput) ToVipgrp6MemberArrayOutputWithContext(ctx context.Context) Vipgrp6MemberArrayOutput {
	return o
}

func (o Vipgrp6MemberArrayOutput) Index(i pulumi.IntInput) Vipgrp6MemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Vipgrp6Member {
		return vs[0].([]Vipgrp6Member)[vs[1].(int)]
	}).(Vipgrp6MemberOutput)
}

type VipgrpMember struct {
	// VIP name.
	Name *string `pulumi:"name"`
}

// VipgrpMemberInput is an input type that accepts VipgrpMemberArgs and VipgrpMemberOutput values.
// You can construct a concrete instance of `VipgrpMemberInput` via:
//
//	VipgrpMemberArgs{...}
type VipgrpMemberInput interface {
	pulumi.Input

	ToVipgrpMemberOutput() VipgrpMemberOutput
	ToVipgrpMemberOutputWithContext(context.Context) VipgrpMemberOutput
}

type VipgrpMemberArgs struct {
	// VIP name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VipgrpMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VipgrpMember)(nil)).Elem()
}

func (i VipgrpMemberArgs) ToVipgrpMemberOutput() VipgrpMemberOutput {
	return i.ToVipgrpMemberOutputWithContext(context.Background())
}

func (i VipgrpMemberArgs) ToVipgrpMemberOutputWithContext(ctx context.Context) VipgrpMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipgrpMemberOutput)
}

// VipgrpMemberArrayInput is an input type that accepts VipgrpMemberArray and VipgrpMemberArrayOutput values.
// You can construct a concrete instance of `VipgrpMemberArrayInput` via:
//
//	VipgrpMemberArray{ VipgrpMemberArgs{...} }
type VipgrpMemberArrayInput interface {
	pulumi.Input

	ToVipgrpMemberArrayOutput() VipgrpMemberArrayOutput
	ToVipgrpMemberArrayOutputWithContext(context.Context) VipgrpMemberArrayOutput
}

type VipgrpMemberArray []VipgrpMemberInput

func (VipgrpMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipgrpMember)(nil)).Elem()
}

func (i VipgrpMemberArray) ToVipgrpMemberArrayOutput() VipgrpMemberArrayOutput {
	return i.ToVipgrpMemberArrayOutputWithContext(context.Background())
}

func (i VipgrpMemberArray) ToVipgrpMemberArrayOutputWithContext(ctx context.Context) VipgrpMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VipgrpMemberArrayOutput)
}

type VipgrpMemberOutput struct{ *pulumi.OutputState }

func (VipgrpMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VipgrpMember)(nil)).Elem()
}

func (o VipgrpMemberOutput) ToVipgrpMemberOutput() VipgrpMemberOutput {
	return o
}

func (o VipgrpMemberOutput) ToVipgrpMemberOutputWithContext(ctx context.Context) VipgrpMemberOutput {
	return o
}

// VIP name.
func (o VipgrpMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VipgrpMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VipgrpMemberArrayOutput struct{ *pulumi.OutputState }

func (VipgrpMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VipgrpMember)(nil)).Elem()
}

func (o VipgrpMemberArrayOutput) ToVipgrpMemberArrayOutput() VipgrpMemberArrayOutput {
	return o
}

func (o VipgrpMemberArrayOutput) ToVipgrpMemberArrayOutputWithContext(ctx context.Context) VipgrpMemberArrayOutput {
	return o
}

func (o VipgrpMemberArrayOutput) Index(i pulumi.IntInput) VipgrpMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VipgrpMember {
		return vs[0].([]VipgrpMember)[vs[1].(int)]
	}).(VipgrpMemberOutput)
}

type GetAddress6List struct {
	// IP.
	Ip string `pulumi:"ip"`
}

// GetAddress6ListInput is an input type that accepts GetAddress6ListArgs and GetAddress6ListOutput values.
// You can construct a concrete instance of `GetAddress6ListInput` via:
//
//	GetAddress6ListArgs{...}
type GetAddress6ListInput interface {
	pulumi.Input

	ToGetAddress6ListOutput() GetAddress6ListOutput
	ToGetAddress6ListOutputWithContext(context.Context) GetAddress6ListOutput
}

type GetAddress6ListArgs struct {
	// IP.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetAddress6ListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6List)(nil)).Elem()
}

func (i GetAddress6ListArgs) ToGetAddress6ListOutput() GetAddress6ListOutput {
	return i.ToGetAddress6ListOutputWithContext(context.Background())
}

func (i GetAddress6ListArgs) ToGetAddress6ListOutputWithContext(ctx context.Context) GetAddress6ListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6ListOutput)
}

// GetAddress6ListArrayInput is an input type that accepts GetAddress6ListArray and GetAddress6ListArrayOutput values.
// You can construct a concrete instance of `GetAddress6ListArrayInput` via:
//
//	GetAddress6ListArray{ GetAddress6ListArgs{...} }
type GetAddress6ListArrayInput interface {
	pulumi.Input

	ToGetAddress6ListArrayOutput() GetAddress6ListArrayOutput
	ToGetAddress6ListArrayOutputWithContext(context.Context) GetAddress6ListArrayOutput
}

type GetAddress6ListArray []GetAddress6ListInput

func (GetAddress6ListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6List)(nil)).Elem()
}

func (i GetAddress6ListArray) ToGetAddress6ListArrayOutput() GetAddress6ListArrayOutput {
	return i.ToGetAddress6ListArrayOutputWithContext(context.Background())
}

func (i GetAddress6ListArray) ToGetAddress6ListArrayOutputWithContext(ctx context.Context) GetAddress6ListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6ListArrayOutput)
}

type GetAddress6ListOutput struct{ *pulumi.OutputState }

func (GetAddress6ListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6List)(nil)).Elem()
}

func (o GetAddress6ListOutput) ToGetAddress6ListOutput() GetAddress6ListOutput {
	return o
}

func (o GetAddress6ListOutput) ToGetAddress6ListOutputWithContext(ctx context.Context) GetAddress6ListOutput {
	return o
}

// IP.
func (o GetAddress6ListOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6List) string { return v.Ip }).(pulumi.StringOutput)
}

type GetAddress6ListArrayOutput struct{ *pulumi.OutputState }

func (GetAddress6ListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6List)(nil)).Elem()
}

func (o GetAddress6ListArrayOutput) ToGetAddress6ListArrayOutput() GetAddress6ListArrayOutput {
	return o
}

func (o GetAddress6ListArrayOutput) ToGetAddress6ListArrayOutputWithContext(ctx context.Context) GetAddress6ListArrayOutput {
	return o
}

func (o GetAddress6ListArrayOutput) Index(i pulumi.IntInput) GetAddress6ListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddress6List {
		return vs[0].([]GetAddress6List)[vs[1].(int)]
	}).(GetAddress6ListOutput)
}

type GetAddress6Macaddr struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr string `pulumi:"macaddr"`
}

// GetAddress6MacaddrInput is an input type that accepts GetAddress6MacaddrArgs and GetAddress6MacaddrOutput values.
// You can construct a concrete instance of `GetAddress6MacaddrInput` via:
//
//	GetAddress6MacaddrArgs{...}
type GetAddress6MacaddrInput interface {
	pulumi.Input

	ToGetAddress6MacaddrOutput() GetAddress6MacaddrOutput
	ToGetAddress6MacaddrOutputWithContext(context.Context) GetAddress6MacaddrOutput
}

type GetAddress6MacaddrArgs struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr pulumi.StringInput `pulumi:"macaddr"`
}

func (GetAddress6MacaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6Macaddr)(nil)).Elem()
}

func (i GetAddress6MacaddrArgs) ToGetAddress6MacaddrOutput() GetAddress6MacaddrOutput {
	return i.ToGetAddress6MacaddrOutputWithContext(context.Background())
}

func (i GetAddress6MacaddrArgs) ToGetAddress6MacaddrOutputWithContext(ctx context.Context) GetAddress6MacaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6MacaddrOutput)
}

// GetAddress6MacaddrArrayInput is an input type that accepts GetAddress6MacaddrArray and GetAddress6MacaddrArrayOutput values.
// You can construct a concrete instance of `GetAddress6MacaddrArrayInput` via:
//
//	GetAddress6MacaddrArray{ GetAddress6MacaddrArgs{...} }
type GetAddress6MacaddrArrayInput interface {
	pulumi.Input

	ToGetAddress6MacaddrArrayOutput() GetAddress6MacaddrArrayOutput
	ToGetAddress6MacaddrArrayOutputWithContext(context.Context) GetAddress6MacaddrArrayOutput
}

type GetAddress6MacaddrArray []GetAddress6MacaddrInput

func (GetAddress6MacaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6Macaddr)(nil)).Elem()
}

func (i GetAddress6MacaddrArray) ToGetAddress6MacaddrArrayOutput() GetAddress6MacaddrArrayOutput {
	return i.ToGetAddress6MacaddrArrayOutputWithContext(context.Background())
}

func (i GetAddress6MacaddrArray) ToGetAddress6MacaddrArrayOutputWithContext(ctx context.Context) GetAddress6MacaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6MacaddrArrayOutput)
}

type GetAddress6MacaddrOutput struct{ *pulumi.OutputState }

func (GetAddress6MacaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6Macaddr)(nil)).Elem()
}

func (o GetAddress6MacaddrOutput) ToGetAddress6MacaddrOutput() GetAddress6MacaddrOutput {
	return o
}

func (o GetAddress6MacaddrOutput) ToGetAddress6MacaddrOutputWithContext(ctx context.Context) GetAddress6MacaddrOutput {
	return o
}

// MAC address ranges <start>[-<end>] separated by space.
func (o GetAddress6MacaddrOutput) Macaddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6Macaddr) string { return v.Macaddr }).(pulumi.StringOutput)
}

type GetAddress6MacaddrArrayOutput struct{ *pulumi.OutputState }

func (GetAddress6MacaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6Macaddr)(nil)).Elem()
}

func (o GetAddress6MacaddrArrayOutput) ToGetAddress6MacaddrArrayOutput() GetAddress6MacaddrArrayOutput {
	return o
}

func (o GetAddress6MacaddrArrayOutput) ToGetAddress6MacaddrArrayOutputWithContext(ctx context.Context) GetAddress6MacaddrArrayOutput {
	return o
}

func (o GetAddress6MacaddrArrayOutput) Index(i pulumi.IntInput) GetAddress6MacaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddress6Macaddr {
		return vs[0].([]GetAddress6Macaddr)[vs[1].(int)]
	}).(GetAddress6MacaddrOutput)
}

type GetAddress6SubnetSegment struct {
	// Specify the name of the desired firewall address6.
	Name string `pulumi:"name"`
	// Subnet segment type.
	Type string `pulumi:"type"`
	// Subnet segment value.
	Value string `pulumi:"value"`
}

// GetAddress6SubnetSegmentInput is an input type that accepts GetAddress6SubnetSegmentArgs and GetAddress6SubnetSegmentOutput values.
// You can construct a concrete instance of `GetAddress6SubnetSegmentInput` via:
//
//	GetAddress6SubnetSegmentArgs{...}
type GetAddress6SubnetSegmentInput interface {
	pulumi.Input

	ToGetAddress6SubnetSegmentOutput() GetAddress6SubnetSegmentOutput
	ToGetAddress6SubnetSegmentOutputWithContext(context.Context) GetAddress6SubnetSegmentOutput
}

type GetAddress6SubnetSegmentArgs struct {
	// Specify the name of the desired firewall address6.
	Name pulumi.StringInput `pulumi:"name"`
	// Subnet segment type.
	Type pulumi.StringInput `pulumi:"type"`
	// Subnet segment value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAddress6SubnetSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6SubnetSegment)(nil)).Elem()
}

func (i GetAddress6SubnetSegmentArgs) ToGetAddress6SubnetSegmentOutput() GetAddress6SubnetSegmentOutput {
	return i.ToGetAddress6SubnetSegmentOutputWithContext(context.Background())
}

func (i GetAddress6SubnetSegmentArgs) ToGetAddress6SubnetSegmentOutputWithContext(ctx context.Context) GetAddress6SubnetSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6SubnetSegmentOutput)
}

// GetAddress6SubnetSegmentArrayInput is an input type that accepts GetAddress6SubnetSegmentArray and GetAddress6SubnetSegmentArrayOutput values.
// You can construct a concrete instance of `GetAddress6SubnetSegmentArrayInput` via:
//
//	GetAddress6SubnetSegmentArray{ GetAddress6SubnetSegmentArgs{...} }
type GetAddress6SubnetSegmentArrayInput interface {
	pulumi.Input

	ToGetAddress6SubnetSegmentArrayOutput() GetAddress6SubnetSegmentArrayOutput
	ToGetAddress6SubnetSegmentArrayOutputWithContext(context.Context) GetAddress6SubnetSegmentArrayOutput
}

type GetAddress6SubnetSegmentArray []GetAddress6SubnetSegmentInput

func (GetAddress6SubnetSegmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6SubnetSegment)(nil)).Elem()
}

func (i GetAddress6SubnetSegmentArray) ToGetAddress6SubnetSegmentArrayOutput() GetAddress6SubnetSegmentArrayOutput {
	return i.ToGetAddress6SubnetSegmentArrayOutputWithContext(context.Background())
}

func (i GetAddress6SubnetSegmentArray) ToGetAddress6SubnetSegmentArrayOutputWithContext(ctx context.Context) GetAddress6SubnetSegmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6SubnetSegmentArrayOutput)
}

type GetAddress6SubnetSegmentOutput struct{ *pulumi.OutputState }

func (GetAddress6SubnetSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6SubnetSegment)(nil)).Elem()
}

func (o GetAddress6SubnetSegmentOutput) ToGetAddress6SubnetSegmentOutput() GetAddress6SubnetSegmentOutput {
	return o
}

func (o GetAddress6SubnetSegmentOutput) ToGetAddress6SubnetSegmentOutputWithContext(ctx context.Context) GetAddress6SubnetSegmentOutput {
	return o
}

// Specify the name of the desired firewall address6.
func (o GetAddress6SubnetSegmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6SubnetSegment) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet segment type.
func (o GetAddress6SubnetSegmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6SubnetSegment) string { return v.Type }).(pulumi.StringOutput)
}

// Subnet segment value.
func (o GetAddress6SubnetSegmentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6SubnetSegment) string { return v.Value }).(pulumi.StringOutput)
}

type GetAddress6SubnetSegmentArrayOutput struct{ *pulumi.OutputState }

func (GetAddress6SubnetSegmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6SubnetSegment)(nil)).Elem()
}

func (o GetAddress6SubnetSegmentArrayOutput) ToGetAddress6SubnetSegmentArrayOutput() GetAddress6SubnetSegmentArrayOutput {
	return o
}

func (o GetAddress6SubnetSegmentArrayOutput) ToGetAddress6SubnetSegmentArrayOutputWithContext(ctx context.Context) GetAddress6SubnetSegmentArrayOutput {
	return o
}

func (o GetAddress6SubnetSegmentArrayOutput) Index(i pulumi.IntInput) GetAddress6SubnetSegmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddress6SubnetSegment {
		return vs[0].([]GetAddress6SubnetSegment)[vs[1].(int)]
	}).(GetAddress6SubnetSegmentOutput)
}

type GetAddress6Tagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall address6.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetAddress6TaggingTag `pulumi:"tags"`
}

// GetAddress6TaggingInput is an input type that accepts GetAddress6TaggingArgs and GetAddress6TaggingOutput values.
// You can construct a concrete instance of `GetAddress6TaggingInput` via:
//
//	GetAddress6TaggingArgs{...}
type GetAddress6TaggingInput interface {
	pulumi.Input

	ToGetAddress6TaggingOutput() GetAddress6TaggingOutput
	ToGetAddress6TaggingOutputWithContext(context.Context) GetAddress6TaggingOutput
}

type GetAddress6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall address6.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetAddress6TaggingTagArrayInput `pulumi:"tags"`
}

func (GetAddress6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6Tagging)(nil)).Elem()
}

func (i GetAddress6TaggingArgs) ToGetAddress6TaggingOutput() GetAddress6TaggingOutput {
	return i.ToGetAddress6TaggingOutputWithContext(context.Background())
}

func (i GetAddress6TaggingArgs) ToGetAddress6TaggingOutputWithContext(ctx context.Context) GetAddress6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6TaggingOutput)
}

// GetAddress6TaggingArrayInput is an input type that accepts GetAddress6TaggingArray and GetAddress6TaggingArrayOutput values.
// You can construct a concrete instance of `GetAddress6TaggingArrayInput` via:
//
//	GetAddress6TaggingArray{ GetAddress6TaggingArgs{...} }
type GetAddress6TaggingArrayInput interface {
	pulumi.Input

	ToGetAddress6TaggingArrayOutput() GetAddress6TaggingArrayOutput
	ToGetAddress6TaggingArrayOutputWithContext(context.Context) GetAddress6TaggingArrayOutput
}

type GetAddress6TaggingArray []GetAddress6TaggingInput

func (GetAddress6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6Tagging)(nil)).Elem()
}

func (i GetAddress6TaggingArray) ToGetAddress6TaggingArrayOutput() GetAddress6TaggingArrayOutput {
	return i.ToGetAddress6TaggingArrayOutputWithContext(context.Background())
}

func (i GetAddress6TaggingArray) ToGetAddress6TaggingArrayOutputWithContext(ctx context.Context) GetAddress6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6TaggingArrayOutput)
}

type GetAddress6TaggingOutput struct{ *pulumi.OutputState }

func (GetAddress6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6Tagging)(nil)).Elem()
}

func (o GetAddress6TaggingOutput) ToGetAddress6TaggingOutput() GetAddress6TaggingOutput {
	return o
}

func (o GetAddress6TaggingOutput) ToGetAddress6TaggingOutputWithContext(ctx context.Context) GetAddress6TaggingOutput {
	return o
}

// Tag category.
func (o GetAddress6TaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6Tagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall address6.
func (o GetAddress6TaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6Tagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetAddress6TaggingOutput) Tags() GetAddress6TaggingTagArrayOutput {
	return o.ApplyT(func(v GetAddress6Tagging) []GetAddress6TaggingTag { return v.Tags }).(GetAddress6TaggingTagArrayOutput)
}

type GetAddress6TaggingArrayOutput struct{ *pulumi.OutputState }

func (GetAddress6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6Tagging)(nil)).Elem()
}

func (o GetAddress6TaggingArrayOutput) ToGetAddress6TaggingArrayOutput() GetAddress6TaggingArrayOutput {
	return o
}

func (o GetAddress6TaggingArrayOutput) ToGetAddress6TaggingArrayOutputWithContext(ctx context.Context) GetAddress6TaggingArrayOutput {
	return o
}

func (o GetAddress6TaggingArrayOutput) Index(i pulumi.IntInput) GetAddress6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddress6Tagging {
		return vs[0].([]GetAddress6Tagging)[vs[1].(int)]
	}).(GetAddress6TaggingOutput)
}

type GetAddress6TaggingTag struct {
	// Specify the name of the desired firewall address6.
	Name string `pulumi:"name"`
}

// GetAddress6TaggingTagInput is an input type that accepts GetAddress6TaggingTagArgs and GetAddress6TaggingTagOutput values.
// You can construct a concrete instance of `GetAddress6TaggingTagInput` via:
//
//	GetAddress6TaggingTagArgs{...}
type GetAddress6TaggingTagInput interface {
	pulumi.Input

	ToGetAddress6TaggingTagOutput() GetAddress6TaggingTagOutput
	ToGetAddress6TaggingTagOutputWithContext(context.Context) GetAddress6TaggingTagOutput
}

type GetAddress6TaggingTagArgs struct {
	// Specify the name of the desired firewall address6.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAddress6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6TaggingTag)(nil)).Elem()
}

func (i GetAddress6TaggingTagArgs) ToGetAddress6TaggingTagOutput() GetAddress6TaggingTagOutput {
	return i.ToGetAddress6TaggingTagOutputWithContext(context.Background())
}

func (i GetAddress6TaggingTagArgs) ToGetAddress6TaggingTagOutputWithContext(ctx context.Context) GetAddress6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6TaggingTagOutput)
}

// GetAddress6TaggingTagArrayInput is an input type that accepts GetAddress6TaggingTagArray and GetAddress6TaggingTagArrayOutput values.
// You can construct a concrete instance of `GetAddress6TaggingTagArrayInput` via:
//
//	GetAddress6TaggingTagArray{ GetAddress6TaggingTagArgs{...} }
type GetAddress6TaggingTagArrayInput interface {
	pulumi.Input

	ToGetAddress6TaggingTagArrayOutput() GetAddress6TaggingTagArrayOutput
	ToGetAddress6TaggingTagArrayOutputWithContext(context.Context) GetAddress6TaggingTagArrayOutput
}

type GetAddress6TaggingTagArray []GetAddress6TaggingTagInput

func (GetAddress6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6TaggingTag)(nil)).Elem()
}

func (i GetAddress6TaggingTagArray) ToGetAddress6TaggingTagArrayOutput() GetAddress6TaggingTagArrayOutput {
	return i.ToGetAddress6TaggingTagArrayOutputWithContext(context.Background())
}

func (i GetAddress6TaggingTagArray) ToGetAddress6TaggingTagArrayOutputWithContext(ctx context.Context) GetAddress6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6TaggingTagArrayOutput)
}

type GetAddress6TaggingTagOutput struct{ *pulumi.OutputState }

func (GetAddress6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6TaggingTag)(nil)).Elem()
}

func (o GetAddress6TaggingTagOutput) ToGetAddress6TaggingTagOutput() GetAddress6TaggingTagOutput {
	return o
}

func (o GetAddress6TaggingTagOutput) ToGetAddress6TaggingTagOutputWithContext(ctx context.Context) GetAddress6TaggingTagOutput {
	return o
}

// Specify the name of the desired firewall address6.
func (o GetAddress6TaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6TaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetAddress6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetAddress6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6TaggingTag)(nil)).Elem()
}

func (o GetAddress6TaggingTagArrayOutput) ToGetAddress6TaggingTagArrayOutput() GetAddress6TaggingTagArrayOutput {
	return o
}

func (o GetAddress6TaggingTagArrayOutput) ToGetAddress6TaggingTagArrayOutputWithContext(ctx context.Context) GetAddress6TaggingTagArrayOutput {
	return o
}

func (o GetAddress6TaggingTagArrayOutput) Index(i pulumi.IntInput) GetAddress6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddress6TaggingTag {
		return vs[0].([]GetAddress6TaggingTag)[vs[1].(int)]
	}).(GetAddress6TaggingTagOutput)
}

type GetAddress6templateSubnetSegment struct {
	// Number of bits.
	Bits int `pulumi:"bits"`
	// Enable/disable exclusive value.
	Exclusive string `pulumi:"exclusive"`
	// Subnet segment ID.
	Id int `pulumi:"id"`
	// Specify the name of the desired firewall address6template.
	Name string `pulumi:"name"`
	// Subnet segment values. The structure of `values` block is documented below.
	Values []GetAddress6templateSubnetSegmentValue `pulumi:"values"`
}

// GetAddress6templateSubnetSegmentInput is an input type that accepts GetAddress6templateSubnetSegmentArgs and GetAddress6templateSubnetSegmentOutput values.
// You can construct a concrete instance of `GetAddress6templateSubnetSegmentInput` via:
//
//	GetAddress6templateSubnetSegmentArgs{...}
type GetAddress6templateSubnetSegmentInput interface {
	pulumi.Input

	ToGetAddress6templateSubnetSegmentOutput() GetAddress6templateSubnetSegmentOutput
	ToGetAddress6templateSubnetSegmentOutputWithContext(context.Context) GetAddress6templateSubnetSegmentOutput
}

type GetAddress6templateSubnetSegmentArgs struct {
	// Number of bits.
	Bits pulumi.IntInput `pulumi:"bits"`
	// Enable/disable exclusive value.
	Exclusive pulumi.StringInput `pulumi:"exclusive"`
	// Subnet segment ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Specify the name of the desired firewall address6template.
	Name pulumi.StringInput `pulumi:"name"`
	// Subnet segment values. The structure of `values` block is documented below.
	Values GetAddress6templateSubnetSegmentValueArrayInput `pulumi:"values"`
}

func (GetAddress6templateSubnetSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6templateSubnetSegment)(nil)).Elem()
}

func (i GetAddress6templateSubnetSegmentArgs) ToGetAddress6templateSubnetSegmentOutput() GetAddress6templateSubnetSegmentOutput {
	return i.ToGetAddress6templateSubnetSegmentOutputWithContext(context.Background())
}

func (i GetAddress6templateSubnetSegmentArgs) ToGetAddress6templateSubnetSegmentOutputWithContext(ctx context.Context) GetAddress6templateSubnetSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6templateSubnetSegmentOutput)
}

// GetAddress6templateSubnetSegmentArrayInput is an input type that accepts GetAddress6templateSubnetSegmentArray and GetAddress6templateSubnetSegmentArrayOutput values.
// You can construct a concrete instance of `GetAddress6templateSubnetSegmentArrayInput` via:
//
//	GetAddress6templateSubnetSegmentArray{ GetAddress6templateSubnetSegmentArgs{...} }
type GetAddress6templateSubnetSegmentArrayInput interface {
	pulumi.Input

	ToGetAddress6templateSubnetSegmentArrayOutput() GetAddress6templateSubnetSegmentArrayOutput
	ToGetAddress6templateSubnetSegmentArrayOutputWithContext(context.Context) GetAddress6templateSubnetSegmentArrayOutput
}

type GetAddress6templateSubnetSegmentArray []GetAddress6templateSubnetSegmentInput

func (GetAddress6templateSubnetSegmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6templateSubnetSegment)(nil)).Elem()
}

func (i GetAddress6templateSubnetSegmentArray) ToGetAddress6templateSubnetSegmentArrayOutput() GetAddress6templateSubnetSegmentArrayOutput {
	return i.ToGetAddress6templateSubnetSegmentArrayOutputWithContext(context.Background())
}

func (i GetAddress6templateSubnetSegmentArray) ToGetAddress6templateSubnetSegmentArrayOutputWithContext(ctx context.Context) GetAddress6templateSubnetSegmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6templateSubnetSegmentArrayOutput)
}

type GetAddress6templateSubnetSegmentOutput struct{ *pulumi.OutputState }

func (GetAddress6templateSubnetSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6templateSubnetSegment)(nil)).Elem()
}

func (o GetAddress6templateSubnetSegmentOutput) ToGetAddress6templateSubnetSegmentOutput() GetAddress6templateSubnetSegmentOutput {
	return o
}

func (o GetAddress6templateSubnetSegmentOutput) ToGetAddress6templateSubnetSegmentOutputWithContext(ctx context.Context) GetAddress6templateSubnetSegmentOutput {
	return o
}

// Number of bits.
func (o GetAddress6templateSubnetSegmentOutput) Bits() pulumi.IntOutput {
	return o.ApplyT(func(v GetAddress6templateSubnetSegment) int { return v.Bits }).(pulumi.IntOutput)
}

// Enable/disable exclusive value.
func (o GetAddress6templateSubnetSegmentOutput) Exclusive() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6templateSubnetSegment) string { return v.Exclusive }).(pulumi.StringOutput)
}

// Subnet segment ID.
func (o GetAddress6templateSubnetSegmentOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAddress6templateSubnetSegment) int { return v.Id }).(pulumi.IntOutput)
}

// Specify the name of the desired firewall address6template.
func (o GetAddress6templateSubnetSegmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6templateSubnetSegment) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet segment values. The structure of `values` block is documented below.
func (o GetAddress6templateSubnetSegmentOutput) Values() GetAddress6templateSubnetSegmentValueArrayOutput {
	return o.ApplyT(func(v GetAddress6templateSubnetSegment) []GetAddress6templateSubnetSegmentValue { return v.Values }).(GetAddress6templateSubnetSegmentValueArrayOutput)
}

type GetAddress6templateSubnetSegmentArrayOutput struct{ *pulumi.OutputState }

func (GetAddress6templateSubnetSegmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6templateSubnetSegment)(nil)).Elem()
}

func (o GetAddress6templateSubnetSegmentArrayOutput) ToGetAddress6templateSubnetSegmentArrayOutput() GetAddress6templateSubnetSegmentArrayOutput {
	return o
}

func (o GetAddress6templateSubnetSegmentArrayOutput) ToGetAddress6templateSubnetSegmentArrayOutputWithContext(ctx context.Context) GetAddress6templateSubnetSegmentArrayOutput {
	return o
}

func (o GetAddress6templateSubnetSegmentArrayOutput) Index(i pulumi.IntInput) GetAddress6templateSubnetSegmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddress6templateSubnetSegment {
		return vs[0].([]GetAddress6templateSubnetSegment)[vs[1].(int)]
	}).(GetAddress6templateSubnetSegmentOutput)
}

type GetAddress6templateSubnetSegmentValue struct {
	// Specify the name of the desired firewall address6template.
	Name string `pulumi:"name"`
	// Subnet segment value.
	Value string `pulumi:"value"`
}

// GetAddress6templateSubnetSegmentValueInput is an input type that accepts GetAddress6templateSubnetSegmentValueArgs and GetAddress6templateSubnetSegmentValueOutput values.
// You can construct a concrete instance of `GetAddress6templateSubnetSegmentValueInput` via:
//
//	GetAddress6templateSubnetSegmentValueArgs{...}
type GetAddress6templateSubnetSegmentValueInput interface {
	pulumi.Input

	ToGetAddress6templateSubnetSegmentValueOutput() GetAddress6templateSubnetSegmentValueOutput
	ToGetAddress6templateSubnetSegmentValueOutputWithContext(context.Context) GetAddress6templateSubnetSegmentValueOutput
}

type GetAddress6templateSubnetSegmentValueArgs struct {
	// Specify the name of the desired firewall address6template.
	Name pulumi.StringInput `pulumi:"name"`
	// Subnet segment value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAddress6templateSubnetSegmentValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (i GetAddress6templateSubnetSegmentValueArgs) ToGetAddress6templateSubnetSegmentValueOutput() GetAddress6templateSubnetSegmentValueOutput {
	return i.ToGetAddress6templateSubnetSegmentValueOutputWithContext(context.Background())
}

func (i GetAddress6templateSubnetSegmentValueArgs) ToGetAddress6templateSubnetSegmentValueOutputWithContext(ctx context.Context) GetAddress6templateSubnetSegmentValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6templateSubnetSegmentValueOutput)
}

// GetAddress6templateSubnetSegmentValueArrayInput is an input type that accepts GetAddress6templateSubnetSegmentValueArray and GetAddress6templateSubnetSegmentValueArrayOutput values.
// You can construct a concrete instance of `GetAddress6templateSubnetSegmentValueArrayInput` via:
//
//	GetAddress6templateSubnetSegmentValueArray{ GetAddress6templateSubnetSegmentValueArgs{...} }
type GetAddress6templateSubnetSegmentValueArrayInput interface {
	pulumi.Input

	ToGetAddress6templateSubnetSegmentValueArrayOutput() GetAddress6templateSubnetSegmentValueArrayOutput
	ToGetAddress6templateSubnetSegmentValueArrayOutputWithContext(context.Context) GetAddress6templateSubnetSegmentValueArrayOutput
}

type GetAddress6templateSubnetSegmentValueArray []GetAddress6templateSubnetSegmentValueInput

func (GetAddress6templateSubnetSegmentValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (i GetAddress6templateSubnetSegmentValueArray) ToGetAddress6templateSubnetSegmentValueArrayOutput() GetAddress6templateSubnetSegmentValueArrayOutput {
	return i.ToGetAddress6templateSubnetSegmentValueArrayOutputWithContext(context.Background())
}

func (i GetAddress6templateSubnetSegmentValueArray) ToGetAddress6templateSubnetSegmentValueArrayOutputWithContext(ctx context.Context) GetAddress6templateSubnetSegmentValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddress6templateSubnetSegmentValueArrayOutput)
}

type GetAddress6templateSubnetSegmentValueOutput struct{ *pulumi.OutputState }

func (GetAddress6templateSubnetSegmentValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (o GetAddress6templateSubnetSegmentValueOutput) ToGetAddress6templateSubnetSegmentValueOutput() GetAddress6templateSubnetSegmentValueOutput {
	return o
}

func (o GetAddress6templateSubnetSegmentValueOutput) ToGetAddress6templateSubnetSegmentValueOutputWithContext(ctx context.Context) GetAddress6templateSubnetSegmentValueOutput {
	return o
}

// Specify the name of the desired firewall address6template.
func (o GetAddress6templateSubnetSegmentValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6templateSubnetSegmentValue) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet segment value.
func (o GetAddress6templateSubnetSegmentValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddress6templateSubnetSegmentValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetAddress6templateSubnetSegmentValueArrayOutput struct{ *pulumi.OutputState }

func (GetAddress6templateSubnetSegmentValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (o GetAddress6templateSubnetSegmentValueArrayOutput) ToGetAddress6templateSubnetSegmentValueArrayOutput() GetAddress6templateSubnetSegmentValueArrayOutput {
	return o
}

func (o GetAddress6templateSubnetSegmentValueArrayOutput) ToGetAddress6templateSubnetSegmentValueArrayOutputWithContext(ctx context.Context) GetAddress6templateSubnetSegmentValueArrayOutput {
	return o
}

func (o GetAddress6templateSubnetSegmentValueArrayOutput) Index(i pulumi.IntInput) GetAddress6templateSubnetSegmentValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddress6templateSubnetSegmentValue {
		return vs[0].([]GetAddress6templateSubnetSegmentValue)[vs[1].(int)]
	}).(GetAddress6templateSubnetSegmentValueOutput)
}

type GetAddressFssoGroup struct {
	// Specify the name of the desired firewall address.
	Name string `pulumi:"name"`
}

// GetAddressFssoGroupInput is an input type that accepts GetAddressFssoGroupArgs and GetAddressFssoGroupOutput values.
// You can construct a concrete instance of `GetAddressFssoGroupInput` via:
//
//	GetAddressFssoGroupArgs{...}
type GetAddressFssoGroupInput interface {
	pulumi.Input

	ToGetAddressFssoGroupOutput() GetAddressFssoGroupOutput
	ToGetAddressFssoGroupOutputWithContext(context.Context) GetAddressFssoGroupOutput
}

type GetAddressFssoGroupArgs struct {
	// Specify the name of the desired firewall address.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAddressFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressFssoGroup)(nil)).Elem()
}

func (i GetAddressFssoGroupArgs) ToGetAddressFssoGroupOutput() GetAddressFssoGroupOutput {
	return i.ToGetAddressFssoGroupOutputWithContext(context.Background())
}

func (i GetAddressFssoGroupArgs) ToGetAddressFssoGroupOutputWithContext(ctx context.Context) GetAddressFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressFssoGroupOutput)
}

// GetAddressFssoGroupArrayInput is an input type that accepts GetAddressFssoGroupArray and GetAddressFssoGroupArrayOutput values.
// You can construct a concrete instance of `GetAddressFssoGroupArrayInput` via:
//
//	GetAddressFssoGroupArray{ GetAddressFssoGroupArgs{...} }
type GetAddressFssoGroupArrayInput interface {
	pulumi.Input

	ToGetAddressFssoGroupArrayOutput() GetAddressFssoGroupArrayOutput
	ToGetAddressFssoGroupArrayOutputWithContext(context.Context) GetAddressFssoGroupArrayOutput
}

type GetAddressFssoGroupArray []GetAddressFssoGroupInput

func (GetAddressFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressFssoGroup)(nil)).Elem()
}

func (i GetAddressFssoGroupArray) ToGetAddressFssoGroupArrayOutput() GetAddressFssoGroupArrayOutput {
	return i.ToGetAddressFssoGroupArrayOutputWithContext(context.Background())
}

func (i GetAddressFssoGroupArray) ToGetAddressFssoGroupArrayOutputWithContext(ctx context.Context) GetAddressFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressFssoGroupArrayOutput)
}

type GetAddressFssoGroupOutput struct{ *pulumi.OutputState }

func (GetAddressFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressFssoGroup)(nil)).Elem()
}

func (o GetAddressFssoGroupOutput) ToGetAddressFssoGroupOutput() GetAddressFssoGroupOutput {
	return o
}

func (o GetAddressFssoGroupOutput) ToGetAddressFssoGroupOutputWithContext(ctx context.Context) GetAddressFssoGroupOutput {
	return o
}

// Specify the name of the desired firewall address.
func (o GetAddressFssoGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressFssoGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetAddressFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (GetAddressFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressFssoGroup)(nil)).Elem()
}

func (o GetAddressFssoGroupArrayOutput) ToGetAddressFssoGroupArrayOutput() GetAddressFssoGroupArrayOutput {
	return o
}

func (o GetAddressFssoGroupArrayOutput) ToGetAddressFssoGroupArrayOutputWithContext(ctx context.Context) GetAddressFssoGroupArrayOutput {
	return o
}

func (o GetAddressFssoGroupArrayOutput) Index(i pulumi.IntInput) GetAddressFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddressFssoGroup {
		return vs[0].([]GetAddressFssoGroup)[vs[1].(int)]
	}).(GetAddressFssoGroupOutput)
}

type GetAddressList struct {
	// IP.
	Ip string `pulumi:"ip"`
}

// GetAddressListInput is an input type that accepts GetAddressListArgs and GetAddressListOutput values.
// You can construct a concrete instance of `GetAddressListInput` via:
//
//	GetAddressListArgs{...}
type GetAddressListInput interface {
	pulumi.Input

	ToGetAddressListOutput() GetAddressListOutput
	ToGetAddressListOutputWithContext(context.Context) GetAddressListOutput
}

type GetAddressListArgs struct {
	// IP.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetAddressListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressList)(nil)).Elem()
}

func (i GetAddressListArgs) ToGetAddressListOutput() GetAddressListOutput {
	return i.ToGetAddressListOutputWithContext(context.Background())
}

func (i GetAddressListArgs) ToGetAddressListOutputWithContext(ctx context.Context) GetAddressListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressListOutput)
}

// GetAddressListArrayInput is an input type that accepts GetAddressListArray and GetAddressListArrayOutput values.
// You can construct a concrete instance of `GetAddressListArrayInput` via:
//
//	GetAddressListArray{ GetAddressListArgs{...} }
type GetAddressListArrayInput interface {
	pulumi.Input

	ToGetAddressListArrayOutput() GetAddressListArrayOutput
	ToGetAddressListArrayOutputWithContext(context.Context) GetAddressListArrayOutput
}

type GetAddressListArray []GetAddressListInput

func (GetAddressListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressList)(nil)).Elem()
}

func (i GetAddressListArray) ToGetAddressListArrayOutput() GetAddressListArrayOutput {
	return i.ToGetAddressListArrayOutputWithContext(context.Background())
}

func (i GetAddressListArray) ToGetAddressListArrayOutputWithContext(ctx context.Context) GetAddressListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressListArrayOutput)
}

type GetAddressListOutput struct{ *pulumi.OutputState }

func (GetAddressListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressList)(nil)).Elem()
}

func (o GetAddressListOutput) ToGetAddressListOutput() GetAddressListOutput {
	return o
}

func (o GetAddressListOutput) ToGetAddressListOutputWithContext(ctx context.Context) GetAddressListOutput {
	return o
}

// IP.
func (o GetAddressListOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressList) string { return v.Ip }).(pulumi.StringOutput)
}

type GetAddressListArrayOutput struct{ *pulumi.OutputState }

func (GetAddressListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressList)(nil)).Elem()
}

func (o GetAddressListArrayOutput) ToGetAddressListArrayOutput() GetAddressListArrayOutput {
	return o
}

func (o GetAddressListArrayOutput) ToGetAddressListArrayOutputWithContext(ctx context.Context) GetAddressListArrayOutput {
	return o
}

func (o GetAddressListArrayOutput) Index(i pulumi.IntInput) GetAddressListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddressList {
		return vs[0].([]GetAddressList)[vs[1].(int)]
	}).(GetAddressListOutput)
}

type GetAddressMacaddr struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr string `pulumi:"macaddr"`
}

// GetAddressMacaddrInput is an input type that accepts GetAddressMacaddrArgs and GetAddressMacaddrOutput values.
// You can construct a concrete instance of `GetAddressMacaddrInput` via:
//
//	GetAddressMacaddrArgs{...}
type GetAddressMacaddrInput interface {
	pulumi.Input

	ToGetAddressMacaddrOutput() GetAddressMacaddrOutput
	ToGetAddressMacaddrOutputWithContext(context.Context) GetAddressMacaddrOutput
}

type GetAddressMacaddrArgs struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr pulumi.StringInput `pulumi:"macaddr"`
}

func (GetAddressMacaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressMacaddr)(nil)).Elem()
}

func (i GetAddressMacaddrArgs) ToGetAddressMacaddrOutput() GetAddressMacaddrOutput {
	return i.ToGetAddressMacaddrOutputWithContext(context.Background())
}

func (i GetAddressMacaddrArgs) ToGetAddressMacaddrOutputWithContext(ctx context.Context) GetAddressMacaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressMacaddrOutput)
}

// GetAddressMacaddrArrayInput is an input type that accepts GetAddressMacaddrArray and GetAddressMacaddrArrayOutput values.
// You can construct a concrete instance of `GetAddressMacaddrArrayInput` via:
//
//	GetAddressMacaddrArray{ GetAddressMacaddrArgs{...} }
type GetAddressMacaddrArrayInput interface {
	pulumi.Input

	ToGetAddressMacaddrArrayOutput() GetAddressMacaddrArrayOutput
	ToGetAddressMacaddrArrayOutputWithContext(context.Context) GetAddressMacaddrArrayOutput
}

type GetAddressMacaddrArray []GetAddressMacaddrInput

func (GetAddressMacaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressMacaddr)(nil)).Elem()
}

func (i GetAddressMacaddrArray) ToGetAddressMacaddrArrayOutput() GetAddressMacaddrArrayOutput {
	return i.ToGetAddressMacaddrArrayOutputWithContext(context.Background())
}

func (i GetAddressMacaddrArray) ToGetAddressMacaddrArrayOutputWithContext(ctx context.Context) GetAddressMacaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressMacaddrArrayOutput)
}

type GetAddressMacaddrOutput struct{ *pulumi.OutputState }

func (GetAddressMacaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressMacaddr)(nil)).Elem()
}

func (o GetAddressMacaddrOutput) ToGetAddressMacaddrOutput() GetAddressMacaddrOutput {
	return o
}

func (o GetAddressMacaddrOutput) ToGetAddressMacaddrOutputWithContext(ctx context.Context) GetAddressMacaddrOutput {
	return o
}

// MAC address ranges <start>[-<end>] separated by space.
func (o GetAddressMacaddrOutput) Macaddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressMacaddr) string { return v.Macaddr }).(pulumi.StringOutput)
}

type GetAddressMacaddrArrayOutput struct{ *pulumi.OutputState }

func (GetAddressMacaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressMacaddr)(nil)).Elem()
}

func (o GetAddressMacaddrArrayOutput) ToGetAddressMacaddrArrayOutput() GetAddressMacaddrArrayOutput {
	return o
}

func (o GetAddressMacaddrArrayOutput) ToGetAddressMacaddrArrayOutputWithContext(ctx context.Context) GetAddressMacaddrArrayOutput {
	return o
}

func (o GetAddressMacaddrArrayOutput) Index(i pulumi.IntInput) GetAddressMacaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddressMacaddr {
		return vs[0].([]GetAddressMacaddr)[vs[1].(int)]
	}).(GetAddressMacaddrOutput)
}

type GetAddressTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall address.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetAddressTaggingTag `pulumi:"tags"`
}

// GetAddressTaggingInput is an input type that accepts GetAddressTaggingArgs and GetAddressTaggingOutput values.
// You can construct a concrete instance of `GetAddressTaggingInput` via:
//
//	GetAddressTaggingArgs{...}
type GetAddressTaggingInput interface {
	pulumi.Input

	ToGetAddressTaggingOutput() GetAddressTaggingOutput
	ToGetAddressTaggingOutputWithContext(context.Context) GetAddressTaggingOutput
}

type GetAddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall address.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetAddressTaggingTagArrayInput `pulumi:"tags"`
}

func (GetAddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressTagging)(nil)).Elem()
}

func (i GetAddressTaggingArgs) ToGetAddressTaggingOutput() GetAddressTaggingOutput {
	return i.ToGetAddressTaggingOutputWithContext(context.Background())
}

func (i GetAddressTaggingArgs) ToGetAddressTaggingOutputWithContext(ctx context.Context) GetAddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressTaggingOutput)
}

// GetAddressTaggingArrayInput is an input type that accepts GetAddressTaggingArray and GetAddressTaggingArrayOutput values.
// You can construct a concrete instance of `GetAddressTaggingArrayInput` via:
//
//	GetAddressTaggingArray{ GetAddressTaggingArgs{...} }
type GetAddressTaggingArrayInput interface {
	pulumi.Input

	ToGetAddressTaggingArrayOutput() GetAddressTaggingArrayOutput
	ToGetAddressTaggingArrayOutputWithContext(context.Context) GetAddressTaggingArrayOutput
}

type GetAddressTaggingArray []GetAddressTaggingInput

func (GetAddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressTagging)(nil)).Elem()
}

func (i GetAddressTaggingArray) ToGetAddressTaggingArrayOutput() GetAddressTaggingArrayOutput {
	return i.ToGetAddressTaggingArrayOutputWithContext(context.Background())
}

func (i GetAddressTaggingArray) ToGetAddressTaggingArrayOutputWithContext(ctx context.Context) GetAddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressTaggingArrayOutput)
}

type GetAddressTaggingOutput struct{ *pulumi.OutputState }

func (GetAddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressTagging)(nil)).Elem()
}

func (o GetAddressTaggingOutput) ToGetAddressTaggingOutput() GetAddressTaggingOutput {
	return o
}

func (o GetAddressTaggingOutput) ToGetAddressTaggingOutputWithContext(ctx context.Context) GetAddressTaggingOutput {
	return o
}

// Tag category.
func (o GetAddressTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall address.
func (o GetAddressTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetAddressTaggingOutput) Tags() GetAddressTaggingTagArrayOutput {
	return o.ApplyT(func(v GetAddressTagging) []GetAddressTaggingTag { return v.Tags }).(GetAddressTaggingTagArrayOutput)
}

type GetAddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetAddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressTagging)(nil)).Elem()
}

func (o GetAddressTaggingArrayOutput) ToGetAddressTaggingArrayOutput() GetAddressTaggingArrayOutput {
	return o
}

func (o GetAddressTaggingArrayOutput) ToGetAddressTaggingArrayOutputWithContext(ctx context.Context) GetAddressTaggingArrayOutput {
	return o
}

func (o GetAddressTaggingArrayOutput) Index(i pulumi.IntInput) GetAddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddressTagging {
		return vs[0].([]GetAddressTagging)[vs[1].(int)]
	}).(GetAddressTaggingOutput)
}

type GetAddressTaggingTag struct {
	// Specify the name of the desired firewall address.
	Name string `pulumi:"name"`
}

// GetAddressTaggingTagInput is an input type that accepts GetAddressTaggingTagArgs and GetAddressTaggingTagOutput values.
// You can construct a concrete instance of `GetAddressTaggingTagInput` via:
//
//	GetAddressTaggingTagArgs{...}
type GetAddressTaggingTagInput interface {
	pulumi.Input

	ToGetAddressTaggingTagOutput() GetAddressTaggingTagOutput
	ToGetAddressTaggingTagOutputWithContext(context.Context) GetAddressTaggingTagOutput
}

type GetAddressTaggingTagArgs struct {
	// Specify the name of the desired firewall address.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressTaggingTag)(nil)).Elem()
}

func (i GetAddressTaggingTagArgs) ToGetAddressTaggingTagOutput() GetAddressTaggingTagOutput {
	return i.ToGetAddressTaggingTagOutputWithContext(context.Background())
}

func (i GetAddressTaggingTagArgs) ToGetAddressTaggingTagOutputWithContext(ctx context.Context) GetAddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressTaggingTagOutput)
}

// GetAddressTaggingTagArrayInput is an input type that accepts GetAddressTaggingTagArray and GetAddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetAddressTaggingTagArrayInput` via:
//
//	GetAddressTaggingTagArray{ GetAddressTaggingTagArgs{...} }
type GetAddressTaggingTagArrayInput interface {
	pulumi.Input

	ToGetAddressTaggingTagArrayOutput() GetAddressTaggingTagArrayOutput
	ToGetAddressTaggingTagArrayOutputWithContext(context.Context) GetAddressTaggingTagArrayOutput
}

type GetAddressTaggingTagArray []GetAddressTaggingTagInput

func (GetAddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressTaggingTag)(nil)).Elem()
}

func (i GetAddressTaggingTagArray) ToGetAddressTaggingTagArrayOutput() GetAddressTaggingTagArrayOutput {
	return i.ToGetAddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetAddressTaggingTagArray) ToGetAddressTaggingTagArrayOutputWithContext(ctx context.Context) GetAddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressTaggingTagArrayOutput)
}

type GetAddressTaggingTagOutput struct{ *pulumi.OutputState }

func (GetAddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressTaggingTag)(nil)).Elem()
}

func (o GetAddressTaggingTagOutput) ToGetAddressTaggingTagOutput() GetAddressTaggingTagOutput {
	return o
}

func (o GetAddressTaggingTagOutput) ToGetAddressTaggingTagOutputWithContext(ctx context.Context) GetAddressTaggingTagOutput {
	return o
}

// Specify the name of the desired firewall address.
func (o GetAddressTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetAddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetAddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressTaggingTag)(nil)).Elem()
}

func (o GetAddressTaggingTagArrayOutput) ToGetAddressTaggingTagArrayOutput() GetAddressTaggingTagArrayOutput {
	return o
}

func (o GetAddressTaggingTagArrayOutput) ToGetAddressTaggingTagArrayOutputWithContext(ctx context.Context) GetAddressTaggingTagArrayOutput {
	return o
}

func (o GetAddressTaggingTagArrayOutput) Index(i pulumi.IntInput) GetAddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddressTaggingTag {
		return vs[0].([]GetAddressTaggingTag)[vs[1].(int)]
	}).(GetAddressTaggingTagOutput)
}

type GetAddrgrp6ExcludeMember struct {
	// Specify the name of the desired firewall addrgrp6.
	Name string `pulumi:"name"`
}

// GetAddrgrp6ExcludeMemberInput is an input type that accepts GetAddrgrp6ExcludeMemberArgs and GetAddrgrp6ExcludeMemberOutput values.
// You can construct a concrete instance of `GetAddrgrp6ExcludeMemberInput` via:
//
//	GetAddrgrp6ExcludeMemberArgs{...}
type GetAddrgrp6ExcludeMemberInput interface {
	pulumi.Input

	ToGetAddrgrp6ExcludeMemberOutput() GetAddrgrp6ExcludeMemberOutput
	ToGetAddrgrp6ExcludeMemberOutputWithContext(context.Context) GetAddrgrp6ExcludeMemberOutput
}

type GetAddrgrp6ExcludeMemberArgs struct {
	// Specify the name of the desired firewall addrgrp6.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAddrgrp6ExcludeMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrp6ExcludeMember)(nil)).Elem()
}

func (i GetAddrgrp6ExcludeMemberArgs) ToGetAddrgrp6ExcludeMemberOutput() GetAddrgrp6ExcludeMemberOutput {
	return i.ToGetAddrgrp6ExcludeMemberOutputWithContext(context.Background())
}

func (i GetAddrgrp6ExcludeMemberArgs) ToGetAddrgrp6ExcludeMemberOutputWithContext(ctx context.Context) GetAddrgrp6ExcludeMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrp6ExcludeMemberOutput)
}

// GetAddrgrp6ExcludeMemberArrayInput is an input type that accepts GetAddrgrp6ExcludeMemberArray and GetAddrgrp6ExcludeMemberArrayOutput values.
// You can construct a concrete instance of `GetAddrgrp6ExcludeMemberArrayInput` via:
//
//	GetAddrgrp6ExcludeMemberArray{ GetAddrgrp6ExcludeMemberArgs{...} }
type GetAddrgrp6ExcludeMemberArrayInput interface {
	pulumi.Input

	ToGetAddrgrp6ExcludeMemberArrayOutput() GetAddrgrp6ExcludeMemberArrayOutput
	ToGetAddrgrp6ExcludeMemberArrayOutputWithContext(context.Context) GetAddrgrp6ExcludeMemberArrayOutput
}

type GetAddrgrp6ExcludeMemberArray []GetAddrgrp6ExcludeMemberInput

func (GetAddrgrp6ExcludeMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrp6ExcludeMember)(nil)).Elem()
}

func (i GetAddrgrp6ExcludeMemberArray) ToGetAddrgrp6ExcludeMemberArrayOutput() GetAddrgrp6ExcludeMemberArrayOutput {
	return i.ToGetAddrgrp6ExcludeMemberArrayOutputWithContext(context.Background())
}

func (i GetAddrgrp6ExcludeMemberArray) ToGetAddrgrp6ExcludeMemberArrayOutputWithContext(ctx context.Context) GetAddrgrp6ExcludeMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrp6ExcludeMemberArrayOutput)
}

type GetAddrgrp6ExcludeMemberOutput struct{ *pulumi.OutputState }

func (GetAddrgrp6ExcludeMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrp6ExcludeMember)(nil)).Elem()
}

func (o GetAddrgrp6ExcludeMemberOutput) ToGetAddrgrp6ExcludeMemberOutput() GetAddrgrp6ExcludeMemberOutput {
	return o
}

func (o GetAddrgrp6ExcludeMemberOutput) ToGetAddrgrp6ExcludeMemberOutputWithContext(ctx context.Context) GetAddrgrp6ExcludeMemberOutput {
	return o
}

// Specify the name of the desired firewall addrgrp6.
func (o GetAddrgrp6ExcludeMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddrgrp6ExcludeMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetAddrgrp6ExcludeMemberArrayOutput struct{ *pulumi.OutputState }

func (GetAddrgrp6ExcludeMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrp6ExcludeMember)(nil)).Elem()
}

func (o GetAddrgrp6ExcludeMemberArrayOutput) ToGetAddrgrp6ExcludeMemberArrayOutput() GetAddrgrp6ExcludeMemberArrayOutput {
	return o
}

func (o GetAddrgrp6ExcludeMemberArrayOutput) ToGetAddrgrp6ExcludeMemberArrayOutputWithContext(ctx context.Context) GetAddrgrp6ExcludeMemberArrayOutput {
	return o
}

func (o GetAddrgrp6ExcludeMemberArrayOutput) Index(i pulumi.IntInput) GetAddrgrp6ExcludeMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddrgrp6ExcludeMember {
		return vs[0].([]GetAddrgrp6ExcludeMember)[vs[1].(int)]
	}).(GetAddrgrp6ExcludeMemberOutput)
}

type GetAddrgrp6Member struct {
	// Specify the name of the desired firewall addrgrp6.
	Name string `pulumi:"name"`
}

// GetAddrgrp6MemberInput is an input type that accepts GetAddrgrp6MemberArgs and GetAddrgrp6MemberOutput values.
// You can construct a concrete instance of `GetAddrgrp6MemberInput` via:
//
//	GetAddrgrp6MemberArgs{...}
type GetAddrgrp6MemberInput interface {
	pulumi.Input

	ToGetAddrgrp6MemberOutput() GetAddrgrp6MemberOutput
	ToGetAddrgrp6MemberOutputWithContext(context.Context) GetAddrgrp6MemberOutput
}

type GetAddrgrp6MemberArgs struct {
	// Specify the name of the desired firewall addrgrp6.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAddrgrp6MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrp6Member)(nil)).Elem()
}

func (i GetAddrgrp6MemberArgs) ToGetAddrgrp6MemberOutput() GetAddrgrp6MemberOutput {
	return i.ToGetAddrgrp6MemberOutputWithContext(context.Background())
}

func (i GetAddrgrp6MemberArgs) ToGetAddrgrp6MemberOutputWithContext(ctx context.Context) GetAddrgrp6MemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrp6MemberOutput)
}

// GetAddrgrp6MemberArrayInput is an input type that accepts GetAddrgrp6MemberArray and GetAddrgrp6MemberArrayOutput values.
// You can construct a concrete instance of `GetAddrgrp6MemberArrayInput` via:
//
//	GetAddrgrp6MemberArray{ GetAddrgrp6MemberArgs{...} }
type GetAddrgrp6MemberArrayInput interface {
	pulumi.Input

	ToGetAddrgrp6MemberArrayOutput() GetAddrgrp6MemberArrayOutput
	ToGetAddrgrp6MemberArrayOutputWithContext(context.Context) GetAddrgrp6MemberArrayOutput
}

type GetAddrgrp6MemberArray []GetAddrgrp6MemberInput

func (GetAddrgrp6MemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrp6Member)(nil)).Elem()
}

func (i GetAddrgrp6MemberArray) ToGetAddrgrp6MemberArrayOutput() GetAddrgrp6MemberArrayOutput {
	return i.ToGetAddrgrp6MemberArrayOutputWithContext(context.Background())
}

func (i GetAddrgrp6MemberArray) ToGetAddrgrp6MemberArrayOutputWithContext(ctx context.Context) GetAddrgrp6MemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrp6MemberArrayOutput)
}

type GetAddrgrp6MemberOutput struct{ *pulumi.OutputState }

func (GetAddrgrp6MemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrp6Member)(nil)).Elem()
}

func (o GetAddrgrp6MemberOutput) ToGetAddrgrp6MemberOutput() GetAddrgrp6MemberOutput {
	return o
}

func (o GetAddrgrp6MemberOutput) ToGetAddrgrp6MemberOutputWithContext(ctx context.Context) GetAddrgrp6MemberOutput {
	return o
}

// Specify the name of the desired firewall addrgrp6.
func (o GetAddrgrp6MemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddrgrp6Member) string { return v.Name }).(pulumi.StringOutput)
}

type GetAddrgrp6MemberArrayOutput struct{ *pulumi.OutputState }

func (GetAddrgrp6MemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrp6Member)(nil)).Elem()
}

func (o GetAddrgrp6MemberArrayOutput) ToGetAddrgrp6MemberArrayOutput() GetAddrgrp6MemberArrayOutput {
	return o
}

func (o GetAddrgrp6MemberArrayOutput) ToGetAddrgrp6MemberArrayOutputWithContext(ctx context.Context) GetAddrgrp6MemberArrayOutput {
	return o
}

func (o GetAddrgrp6MemberArrayOutput) Index(i pulumi.IntInput) GetAddrgrp6MemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddrgrp6Member {
		return vs[0].([]GetAddrgrp6Member)[vs[1].(int)]
	}).(GetAddrgrp6MemberOutput)
}

type GetAddrgrp6Tagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall addrgrp6.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetAddrgrp6TaggingTag `pulumi:"tags"`
}

// GetAddrgrp6TaggingInput is an input type that accepts GetAddrgrp6TaggingArgs and GetAddrgrp6TaggingOutput values.
// You can construct a concrete instance of `GetAddrgrp6TaggingInput` via:
//
//	GetAddrgrp6TaggingArgs{...}
type GetAddrgrp6TaggingInput interface {
	pulumi.Input

	ToGetAddrgrp6TaggingOutput() GetAddrgrp6TaggingOutput
	ToGetAddrgrp6TaggingOutputWithContext(context.Context) GetAddrgrp6TaggingOutput
}

type GetAddrgrp6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall addrgrp6.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetAddrgrp6TaggingTagArrayInput `pulumi:"tags"`
}

func (GetAddrgrp6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrp6Tagging)(nil)).Elem()
}

func (i GetAddrgrp6TaggingArgs) ToGetAddrgrp6TaggingOutput() GetAddrgrp6TaggingOutput {
	return i.ToGetAddrgrp6TaggingOutputWithContext(context.Background())
}

func (i GetAddrgrp6TaggingArgs) ToGetAddrgrp6TaggingOutputWithContext(ctx context.Context) GetAddrgrp6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrp6TaggingOutput)
}

// GetAddrgrp6TaggingArrayInput is an input type that accepts GetAddrgrp6TaggingArray and GetAddrgrp6TaggingArrayOutput values.
// You can construct a concrete instance of `GetAddrgrp6TaggingArrayInput` via:
//
//	GetAddrgrp6TaggingArray{ GetAddrgrp6TaggingArgs{...} }
type GetAddrgrp6TaggingArrayInput interface {
	pulumi.Input

	ToGetAddrgrp6TaggingArrayOutput() GetAddrgrp6TaggingArrayOutput
	ToGetAddrgrp6TaggingArrayOutputWithContext(context.Context) GetAddrgrp6TaggingArrayOutput
}

type GetAddrgrp6TaggingArray []GetAddrgrp6TaggingInput

func (GetAddrgrp6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrp6Tagging)(nil)).Elem()
}

func (i GetAddrgrp6TaggingArray) ToGetAddrgrp6TaggingArrayOutput() GetAddrgrp6TaggingArrayOutput {
	return i.ToGetAddrgrp6TaggingArrayOutputWithContext(context.Background())
}

func (i GetAddrgrp6TaggingArray) ToGetAddrgrp6TaggingArrayOutputWithContext(ctx context.Context) GetAddrgrp6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrp6TaggingArrayOutput)
}

type GetAddrgrp6TaggingOutput struct{ *pulumi.OutputState }

func (GetAddrgrp6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrp6Tagging)(nil)).Elem()
}

func (o GetAddrgrp6TaggingOutput) ToGetAddrgrp6TaggingOutput() GetAddrgrp6TaggingOutput {
	return o
}

func (o GetAddrgrp6TaggingOutput) ToGetAddrgrp6TaggingOutputWithContext(ctx context.Context) GetAddrgrp6TaggingOutput {
	return o
}

// Tag category.
func (o GetAddrgrp6TaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddrgrp6Tagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall addrgrp6.
func (o GetAddrgrp6TaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddrgrp6Tagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetAddrgrp6TaggingOutput) Tags() GetAddrgrp6TaggingTagArrayOutput {
	return o.ApplyT(func(v GetAddrgrp6Tagging) []GetAddrgrp6TaggingTag { return v.Tags }).(GetAddrgrp6TaggingTagArrayOutput)
}

type GetAddrgrp6TaggingArrayOutput struct{ *pulumi.OutputState }

func (GetAddrgrp6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrp6Tagging)(nil)).Elem()
}

func (o GetAddrgrp6TaggingArrayOutput) ToGetAddrgrp6TaggingArrayOutput() GetAddrgrp6TaggingArrayOutput {
	return o
}

func (o GetAddrgrp6TaggingArrayOutput) ToGetAddrgrp6TaggingArrayOutputWithContext(ctx context.Context) GetAddrgrp6TaggingArrayOutput {
	return o
}

func (o GetAddrgrp6TaggingArrayOutput) Index(i pulumi.IntInput) GetAddrgrp6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddrgrp6Tagging {
		return vs[0].([]GetAddrgrp6Tagging)[vs[1].(int)]
	}).(GetAddrgrp6TaggingOutput)
}

type GetAddrgrp6TaggingTag struct {
	// Specify the name of the desired firewall addrgrp6.
	Name string `pulumi:"name"`
}

// GetAddrgrp6TaggingTagInput is an input type that accepts GetAddrgrp6TaggingTagArgs and GetAddrgrp6TaggingTagOutput values.
// You can construct a concrete instance of `GetAddrgrp6TaggingTagInput` via:
//
//	GetAddrgrp6TaggingTagArgs{...}
type GetAddrgrp6TaggingTagInput interface {
	pulumi.Input

	ToGetAddrgrp6TaggingTagOutput() GetAddrgrp6TaggingTagOutput
	ToGetAddrgrp6TaggingTagOutputWithContext(context.Context) GetAddrgrp6TaggingTagOutput
}

type GetAddrgrp6TaggingTagArgs struct {
	// Specify the name of the desired firewall addrgrp6.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAddrgrp6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrp6TaggingTag)(nil)).Elem()
}

func (i GetAddrgrp6TaggingTagArgs) ToGetAddrgrp6TaggingTagOutput() GetAddrgrp6TaggingTagOutput {
	return i.ToGetAddrgrp6TaggingTagOutputWithContext(context.Background())
}

func (i GetAddrgrp6TaggingTagArgs) ToGetAddrgrp6TaggingTagOutputWithContext(ctx context.Context) GetAddrgrp6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrp6TaggingTagOutput)
}

// GetAddrgrp6TaggingTagArrayInput is an input type that accepts GetAddrgrp6TaggingTagArray and GetAddrgrp6TaggingTagArrayOutput values.
// You can construct a concrete instance of `GetAddrgrp6TaggingTagArrayInput` via:
//
//	GetAddrgrp6TaggingTagArray{ GetAddrgrp6TaggingTagArgs{...} }
type GetAddrgrp6TaggingTagArrayInput interface {
	pulumi.Input

	ToGetAddrgrp6TaggingTagArrayOutput() GetAddrgrp6TaggingTagArrayOutput
	ToGetAddrgrp6TaggingTagArrayOutputWithContext(context.Context) GetAddrgrp6TaggingTagArrayOutput
}

type GetAddrgrp6TaggingTagArray []GetAddrgrp6TaggingTagInput

func (GetAddrgrp6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrp6TaggingTag)(nil)).Elem()
}

func (i GetAddrgrp6TaggingTagArray) ToGetAddrgrp6TaggingTagArrayOutput() GetAddrgrp6TaggingTagArrayOutput {
	return i.ToGetAddrgrp6TaggingTagArrayOutputWithContext(context.Background())
}

func (i GetAddrgrp6TaggingTagArray) ToGetAddrgrp6TaggingTagArrayOutputWithContext(ctx context.Context) GetAddrgrp6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrp6TaggingTagArrayOutput)
}

type GetAddrgrp6TaggingTagOutput struct{ *pulumi.OutputState }

func (GetAddrgrp6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrp6TaggingTag)(nil)).Elem()
}

func (o GetAddrgrp6TaggingTagOutput) ToGetAddrgrp6TaggingTagOutput() GetAddrgrp6TaggingTagOutput {
	return o
}

func (o GetAddrgrp6TaggingTagOutput) ToGetAddrgrp6TaggingTagOutputWithContext(ctx context.Context) GetAddrgrp6TaggingTagOutput {
	return o
}

// Specify the name of the desired firewall addrgrp6.
func (o GetAddrgrp6TaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddrgrp6TaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetAddrgrp6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetAddrgrp6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrp6TaggingTag)(nil)).Elem()
}

func (o GetAddrgrp6TaggingTagArrayOutput) ToGetAddrgrp6TaggingTagArrayOutput() GetAddrgrp6TaggingTagArrayOutput {
	return o
}

func (o GetAddrgrp6TaggingTagArrayOutput) ToGetAddrgrp6TaggingTagArrayOutputWithContext(ctx context.Context) GetAddrgrp6TaggingTagArrayOutput {
	return o
}

func (o GetAddrgrp6TaggingTagArrayOutput) Index(i pulumi.IntInput) GetAddrgrp6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddrgrp6TaggingTag {
		return vs[0].([]GetAddrgrp6TaggingTag)[vs[1].(int)]
	}).(GetAddrgrp6TaggingTagOutput)
}

type GetAddrgrpExcludeMember struct {
	// Specify the name of the desired firewall addrgrp.
	Name string `pulumi:"name"`
}

// GetAddrgrpExcludeMemberInput is an input type that accepts GetAddrgrpExcludeMemberArgs and GetAddrgrpExcludeMemberOutput values.
// You can construct a concrete instance of `GetAddrgrpExcludeMemberInput` via:
//
//	GetAddrgrpExcludeMemberArgs{...}
type GetAddrgrpExcludeMemberInput interface {
	pulumi.Input

	ToGetAddrgrpExcludeMemberOutput() GetAddrgrpExcludeMemberOutput
	ToGetAddrgrpExcludeMemberOutputWithContext(context.Context) GetAddrgrpExcludeMemberOutput
}

type GetAddrgrpExcludeMemberArgs struct {
	// Specify the name of the desired firewall addrgrp.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAddrgrpExcludeMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrpExcludeMember)(nil)).Elem()
}

func (i GetAddrgrpExcludeMemberArgs) ToGetAddrgrpExcludeMemberOutput() GetAddrgrpExcludeMemberOutput {
	return i.ToGetAddrgrpExcludeMemberOutputWithContext(context.Background())
}

func (i GetAddrgrpExcludeMemberArgs) ToGetAddrgrpExcludeMemberOutputWithContext(ctx context.Context) GetAddrgrpExcludeMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrpExcludeMemberOutput)
}

// GetAddrgrpExcludeMemberArrayInput is an input type that accepts GetAddrgrpExcludeMemberArray and GetAddrgrpExcludeMemberArrayOutput values.
// You can construct a concrete instance of `GetAddrgrpExcludeMemberArrayInput` via:
//
//	GetAddrgrpExcludeMemberArray{ GetAddrgrpExcludeMemberArgs{...} }
type GetAddrgrpExcludeMemberArrayInput interface {
	pulumi.Input

	ToGetAddrgrpExcludeMemberArrayOutput() GetAddrgrpExcludeMemberArrayOutput
	ToGetAddrgrpExcludeMemberArrayOutputWithContext(context.Context) GetAddrgrpExcludeMemberArrayOutput
}

type GetAddrgrpExcludeMemberArray []GetAddrgrpExcludeMemberInput

func (GetAddrgrpExcludeMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrpExcludeMember)(nil)).Elem()
}

func (i GetAddrgrpExcludeMemberArray) ToGetAddrgrpExcludeMemberArrayOutput() GetAddrgrpExcludeMemberArrayOutput {
	return i.ToGetAddrgrpExcludeMemberArrayOutputWithContext(context.Background())
}

func (i GetAddrgrpExcludeMemberArray) ToGetAddrgrpExcludeMemberArrayOutputWithContext(ctx context.Context) GetAddrgrpExcludeMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrpExcludeMemberArrayOutput)
}

type GetAddrgrpExcludeMemberOutput struct{ *pulumi.OutputState }

func (GetAddrgrpExcludeMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrpExcludeMember)(nil)).Elem()
}

func (o GetAddrgrpExcludeMemberOutput) ToGetAddrgrpExcludeMemberOutput() GetAddrgrpExcludeMemberOutput {
	return o
}

func (o GetAddrgrpExcludeMemberOutput) ToGetAddrgrpExcludeMemberOutputWithContext(ctx context.Context) GetAddrgrpExcludeMemberOutput {
	return o
}

// Specify the name of the desired firewall addrgrp.
func (o GetAddrgrpExcludeMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddrgrpExcludeMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetAddrgrpExcludeMemberArrayOutput struct{ *pulumi.OutputState }

func (GetAddrgrpExcludeMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrpExcludeMember)(nil)).Elem()
}

func (o GetAddrgrpExcludeMemberArrayOutput) ToGetAddrgrpExcludeMemberArrayOutput() GetAddrgrpExcludeMemberArrayOutput {
	return o
}

func (o GetAddrgrpExcludeMemberArrayOutput) ToGetAddrgrpExcludeMemberArrayOutputWithContext(ctx context.Context) GetAddrgrpExcludeMemberArrayOutput {
	return o
}

func (o GetAddrgrpExcludeMemberArrayOutput) Index(i pulumi.IntInput) GetAddrgrpExcludeMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddrgrpExcludeMember {
		return vs[0].([]GetAddrgrpExcludeMember)[vs[1].(int)]
	}).(GetAddrgrpExcludeMemberOutput)
}

type GetAddrgrpMember struct {
	// Specify the name of the desired firewall addrgrp.
	Name string `pulumi:"name"`
}

// GetAddrgrpMemberInput is an input type that accepts GetAddrgrpMemberArgs and GetAddrgrpMemberOutput values.
// You can construct a concrete instance of `GetAddrgrpMemberInput` via:
//
//	GetAddrgrpMemberArgs{...}
type GetAddrgrpMemberInput interface {
	pulumi.Input

	ToGetAddrgrpMemberOutput() GetAddrgrpMemberOutput
	ToGetAddrgrpMemberOutputWithContext(context.Context) GetAddrgrpMemberOutput
}

type GetAddrgrpMemberArgs struct {
	// Specify the name of the desired firewall addrgrp.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAddrgrpMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrpMember)(nil)).Elem()
}

func (i GetAddrgrpMemberArgs) ToGetAddrgrpMemberOutput() GetAddrgrpMemberOutput {
	return i.ToGetAddrgrpMemberOutputWithContext(context.Background())
}

func (i GetAddrgrpMemberArgs) ToGetAddrgrpMemberOutputWithContext(ctx context.Context) GetAddrgrpMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrpMemberOutput)
}

// GetAddrgrpMemberArrayInput is an input type that accepts GetAddrgrpMemberArray and GetAddrgrpMemberArrayOutput values.
// You can construct a concrete instance of `GetAddrgrpMemberArrayInput` via:
//
//	GetAddrgrpMemberArray{ GetAddrgrpMemberArgs{...} }
type GetAddrgrpMemberArrayInput interface {
	pulumi.Input

	ToGetAddrgrpMemberArrayOutput() GetAddrgrpMemberArrayOutput
	ToGetAddrgrpMemberArrayOutputWithContext(context.Context) GetAddrgrpMemberArrayOutput
}

type GetAddrgrpMemberArray []GetAddrgrpMemberInput

func (GetAddrgrpMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrpMember)(nil)).Elem()
}

func (i GetAddrgrpMemberArray) ToGetAddrgrpMemberArrayOutput() GetAddrgrpMemberArrayOutput {
	return i.ToGetAddrgrpMemberArrayOutputWithContext(context.Background())
}

func (i GetAddrgrpMemberArray) ToGetAddrgrpMemberArrayOutputWithContext(ctx context.Context) GetAddrgrpMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrpMemberArrayOutput)
}

type GetAddrgrpMemberOutput struct{ *pulumi.OutputState }

func (GetAddrgrpMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrpMember)(nil)).Elem()
}

func (o GetAddrgrpMemberOutput) ToGetAddrgrpMemberOutput() GetAddrgrpMemberOutput {
	return o
}

func (o GetAddrgrpMemberOutput) ToGetAddrgrpMemberOutputWithContext(ctx context.Context) GetAddrgrpMemberOutput {
	return o
}

// Specify the name of the desired firewall addrgrp.
func (o GetAddrgrpMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddrgrpMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetAddrgrpMemberArrayOutput struct{ *pulumi.OutputState }

func (GetAddrgrpMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrpMember)(nil)).Elem()
}

func (o GetAddrgrpMemberArrayOutput) ToGetAddrgrpMemberArrayOutput() GetAddrgrpMemberArrayOutput {
	return o
}

func (o GetAddrgrpMemberArrayOutput) ToGetAddrgrpMemberArrayOutputWithContext(ctx context.Context) GetAddrgrpMemberArrayOutput {
	return o
}

func (o GetAddrgrpMemberArrayOutput) Index(i pulumi.IntInput) GetAddrgrpMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddrgrpMember {
		return vs[0].([]GetAddrgrpMember)[vs[1].(int)]
	}).(GetAddrgrpMemberOutput)
}

type GetAddrgrpTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall addrgrp.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetAddrgrpTaggingTag `pulumi:"tags"`
}

// GetAddrgrpTaggingInput is an input type that accepts GetAddrgrpTaggingArgs and GetAddrgrpTaggingOutput values.
// You can construct a concrete instance of `GetAddrgrpTaggingInput` via:
//
//	GetAddrgrpTaggingArgs{...}
type GetAddrgrpTaggingInput interface {
	pulumi.Input

	ToGetAddrgrpTaggingOutput() GetAddrgrpTaggingOutput
	ToGetAddrgrpTaggingOutputWithContext(context.Context) GetAddrgrpTaggingOutput
}

type GetAddrgrpTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall addrgrp.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetAddrgrpTaggingTagArrayInput `pulumi:"tags"`
}

func (GetAddrgrpTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrpTagging)(nil)).Elem()
}

func (i GetAddrgrpTaggingArgs) ToGetAddrgrpTaggingOutput() GetAddrgrpTaggingOutput {
	return i.ToGetAddrgrpTaggingOutputWithContext(context.Background())
}

func (i GetAddrgrpTaggingArgs) ToGetAddrgrpTaggingOutputWithContext(ctx context.Context) GetAddrgrpTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrpTaggingOutput)
}

// GetAddrgrpTaggingArrayInput is an input type that accepts GetAddrgrpTaggingArray and GetAddrgrpTaggingArrayOutput values.
// You can construct a concrete instance of `GetAddrgrpTaggingArrayInput` via:
//
//	GetAddrgrpTaggingArray{ GetAddrgrpTaggingArgs{...} }
type GetAddrgrpTaggingArrayInput interface {
	pulumi.Input

	ToGetAddrgrpTaggingArrayOutput() GetAddrgrpTaggingArrayOutput
	ToGetAddrgrpTaggingArrayOutputWithContext(context.Context) GetAddrgrpTaggingArrayOutput
}

type GetAddrgrpTaggingArray []GetAddrgrpTaggingInput

func (GetAddrgrpTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrpTagging)(nil)).Elem()
}

func (i GetAddrgrpTaggingArray) ToGetAddrgrpTaggingArrayOutput() GetAddrgrpTaggingArrayOutput {
	return i.ToGetAddrgrpTaggingArrayOutputWithContext(context.Background())
}

func (i GetAddrgrpTaggingArray) ToGetAddrgrpTaggingArrayOutputWithContext(ctx context.Context) GetAddrgrpTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrpTaggingArrayOutput)
}

type GetAddrgrpTaggingOutput struct{ *pulumi.OutputState }

func (GetAddrgrpTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrpTagging)(nil)).Elem()
}

func (o GetAddrgrpTaggingOutput) ToGetAddrgrpTaggingOutput() GetAddrgrpTaggingOutput {
	return o
}

func (o GetAddrgrpTaggingOutput) ToGetAddrgrpTaggingOutputWithContext(ctx context.Context) GetAddrgrpTaggingOutput {
	return o
}

// Tag category.
func (o GetAddrgrpTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddrgrpTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall addrgrp.
func (o GetAddrgrpTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddrgrpTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetAddrgrpTaggingOutput) Tags() GetAddrgrpTaggingTagArrayOutput {
	return o.ApplyT(func(v GetAddrgrpTagging) []GetAddrgrpTaggingTag { return v.Tags }).(GetAddrgrpTaggingTagArrayOutput)
}

type GetAddrgrpTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetAddrgrpTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrpTagging)(nil)).Elem()
}

func (o GetAddrgrpTaggingArrayOutput) ToGetAddrgrpTaggingArrayOutput() GetAddrgrpTaggingArrayOutput {
	return o
}

func (o GetAddrgrpTaggingArrayOutput) ToGetAddrgrpTaggingArrayOutputWithContext(ctx context.Context) GetAddrgrpTaggingArrayOutput {
	return o
}

func (o GetAddrgrpTaggingArrayOutput) Index(i pulumi.IntInput) GetAddrgrpTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddrgrpTagging {
		return vs[0].([]GetAddrgrpTagging)[vs[1].(int)]
	}).(GetAddrgrpTaggingOutput)
}

type GetAddrgrpTaggingTag struct {
	// Specify the name of the desired firewall addrgrp.
	Name string `pulumi:"name"`
}

// GetAddrgrpTaggingTagInput is an input type that accepts GetAddrgrpTaggingTagArgs and GetAddrgrpTaggingTagOutput values.
// You can construct a concrete instance of `GetAddrgrpTaggingTagInput` via:
//
//	GetAddrgrpTaggingTagArgs{...}
type GetAddrgrpTaggingTagInput interface {
	pulumi.Input

	ToGetAddrgrpTaggingTagOutput() GetAddrgrpTaggingTagOutput
	ToGetAddrgrpTaggingTagOutputWithContext(context.Context) GetAddrgrpTaggingTagOutput
}

type GetAddrgrpTaggingTagArgs struct {
	// Specify the name of the desired firewall addrgrp.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAddrgrpTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrpTaggingTag)(nil)).Elem()
}

func (i GetAddrgrpTaggingTagArgs) ToGetAddrgrpTaggingTagOutput() GetAddrgrpTaggingTagOutput {
	return i.ToGetAddrgrpTaggingTagOutputWithContext(context.Background())
}

func (i GetAddrgrpTaggingTagArgs) ToGetAddrgrpTaggingTagOutputWithContext(ctx context.Context) GetAddrgrpTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrpTaggingTagOutput)
}

// GetAddrgrpTaggingTagArrayInput is an input type that accepts GetAddrgrpTaggingTagArray and GetAddrgrpTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetAddrgrpTaggingTagArrayInput` via:
//
//	GetAddrgrpTaggingTagArray{ GetAddrgrpTaggingTagArgs{...} }
type GetAddrgrpTaggingTagArrayInput interface {
	pulumi.Input

	ToGetAddrgrpTaggingTagArrayOutput() GetAddrgrpTaggingTagArrayOutput
	ToGetAddrgrpTaggingTagArrayOutputWithContext(context.Context) GetAddrgrpTaggingTagArrayOutput
}

type GetAddrgrpTaggingTagArray []GetAddrgrpTaggingTagInput

func (GetAddrgrpTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrpTaggingTag)(nil)).Elem()
}

func (i GetAddrgrpTaggingTagArray) ToGetAddrgrpTaggingTagArrayOutput() GetAddrgrpTaggingTagArrayOutput {
	return i.ToGetAddrgrpTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetAddrgrpTaggingTagArray) ToGetAddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) GetAddrgrpTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddrgrpTaggingTagArrayOutput)
}

type GetAddrgrpTaggingTagOutput struct{ *pulumi.OutputState }

func (GetAddrgrpTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddrgrpTaggingTag)(nil)).Elem()
}

func (o GetAddrgrpTaggingTagOutput) ToGetAddrgrpTaggingTagOutput() GetAddrgrpTaggingTagOutput {
	return o
}

func (o GetAddrgrpTaggingTagOutput) ToGetAddrgrpTaggingTagOutputWithContext(ctx context.Context) GetAddrgrpTaggingTagOutput {
	return o
}

// Specify the name of the desired firewall addrgrp.
func (o GetAddrgrpTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddrgrpTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetAddrgrpTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetAddrgrpTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddrgrpTaggingTag)(nil)).Elem()
}

func (o GetAddrgrpTaggingTagArrayOutput) ToGetAddrgrpTaggingTagArrayOutput() GetAddrgrpTaggingTagArrayOutput {
	return o
}

func (o GetAddrgrpTaggingTagArrayOutput) ToGetAddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) GetAddrgrpTaggingTagArrayOutput {
	return o
}

func (o GetAddrgrpTaggingTagArrayOutput) Index(i pulumi.IntInput) GetAddrgrpTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddrgrpTaggingTag {
		return vs[0].([]GetAddrgrpTaggingTag)[vs[1].(int)]
	}).(GetAddrgrpTaggingTagOutput)
}

type GetCentralsnatmapDstAddr6 struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetCentralsnatmapDstAddr6Input is an input type that accepts GetCentralsnatmapDstAddr6Args and GetCentralsnatmapDstAddr6Output values.
// You can construct a concrete instance of `GetCentralsnatmapDstAddr6Input` via:
//
//	GetCentralsnatmapDstAddr6Args{...}
type GetCentralsnatmapDstAddr6Input interface {
	pulumi.Input

	ToGetCentralsnatmapDstAddr6Output() GetCentralsnatmapDstAddr6Output
	ToGetCentralsnatmapDstAddr6OutputWithContext(context.Context) GetCentralsnatmapDstAddr6Output
}

type GetCentralsnatmapDstAddr6Args struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCentralsnatmapDstAddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapDstAddr6)(nil)).Elem()
}

func (i GetCentralsnatmapDstAddr6Args) ToGetCentralsnatmapDstAddr6Output() GetCentralsnatmapDstAddr6Output {
	return i.ToGetCentralsnatmapDstAddr6OutputWithContext(context.Background())
}

func (i GetCentralsnatmapDstAddr6Args) ToGetCentralsnatmapDstAddr6OutputWithContext(ctx context.Context) GetCentralsnatmapDstAddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapDstAddr6Output)
}

// GetCentralsnatmapDstAddr6ArrayInput is an input type that accepts GetCentralsnatmapDstAddr6Array and GetCentralsnatmapDstAddr6ArrayOutput values.
// You can construct a concrete instance of `GetCentralsnatmapDstAddr6ArrayInput` via:
//
//	GetCentralsnatmapDstAddr6Array{ GetCentralsnatmapDstAddr6Args{...} }
type GetCentralsnatmapDstAddr6ArrayInput interface {
	pulumi.Input

	ToGetCentralsnatmapDstAddr6ArrayOutput() GetCentralsnatmapDstAddr6ArrayOutput
	ToGetCentralsnatmapDstAddr6ArrayOutputWithContext(context.Context) GetCentralsnatmapDstAddr6ArrayOutput
}

type GetCentralsnatmapDstAddr6Array []GetCentralsnatmapDstAddr6Input

func (GetCentralsnatmapDstAddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapDstAddr6)(nil)).Elem()
}

func (i GetCentralsnatmapDstAddr6Array) ToGetCentralsnatmapDstAddr6ArrayOutput() GetCentralsnatmapDstAddr6ArrayOutput {
	return i.ToGetCentralsnatmapDstAddr6ArrayOutputWithContext(context.Background())
}

func (i GetCentralsnatmapDstAddr6Array) ToGetCentralsnatmapDstAddr6ArrayOutputWithContext(ctx context.Context) GetCentralsnatmapDstAddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapDstAddr6ArrayOutput)
}

type GetCentralsnatmapDstAddr6Output struct{ *pulumi.OutputState }

func (GetCentralsnatmapDstAddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapDstAddr6)(nil)).Elem()
}

func (o GetCentralsnatmapDstAddr6Output) ToGetCentralsnatmapDstAddr6Output() GetCentralsnatmapDstAddr6Output {
	return o
}

func (o GetCentralsnatmapDstAddr6Output) ToGetCentralsnatmapDstAddr6OutputWithContext(ctx context.Context) GetCentralsnatmapDstAddr6Output {
	return o
}

// IPv6 pool name.
func (o GetCentralsnatmapDstAddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralsnatmapDstAddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetCentralsnatmapDstAddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapDstAddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapDstAddr6)(nil)).Elem()
}

func (o GetCentralsnatmapDstAddr6ArrayOutput) ToGetCentralsnatmapDstAddr6ArrayOutput() GetCentralsnatmapDstAddr6ArrayOutput {
	return o
}

func (o GetCentralsnatmapDstAddr6ArrayOutput) ToGetCentralsnatmapDstAddr6ArrayOutputWithContext(ctx context.Context) GetCentralsnatmapDstAddr6ArrayOutput {
	return o
}

func (o GetCentralsnatmapDstAddr6ArrayOutput) Index(i pulumi.IntInput) GetCentralsnatmapDstAddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralsnatmapDstAddr6 {
		return vs[0].([]GetCentralsnatmapDstAddr6)[vs[1].(int)]
	}).(GetCentralsnatmapDstAddr6Output)
}

type GetCentralsnatmapDstAddr struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetCentralsnatmapDstAddrInput is an input type that accepts GetCentralsnatmapDstAddrArgs and GetCentralsnatmapDstAddrOutput values.
// You can construct a concrete instance of `GetCentralsnatmapDstAddrInput` via:
//
//	GetCentralsnatmapDstAddrArgs{...}
type GetCentralsnatmapDstAddrInput interface {
	pulumi.Input

	ToGetCentralsnatmapDstAddrOutput() GetCentralsnatmapDstAddrOutput
	ToGetCentralsnatmapDstAddrOutputWithContext(context.Context) GetCentralsnatmapDstAddrOutput
}

type GetCentralsnatmapDstAddrArgs struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCentralsnatmapDstAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapDstAddr)(nil)).Elem()
}

func (i GetCentralsnatmapDstAddrArgs) ToGetCentralsnatmapDstAddrOutput() GetCentralsnatmapDstAddrOutput {
	return i.ToGetCentralsnatmapDstAddrOutputWithContext(context.Background())
}

func (i GetCentralsnatmapDstAddrArgs) ToGetCentralsnatmapDstAddrOutputWithContext(ctx context.Context) GetCentralsnatmapDstAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapDstAddrOutput)
}

// GetCentralsnatmapDstAddrArrayInput is an input type that accepts GetCentralsnatmapDstAddrArray and GetCentralsnatmapDstAddrArrayOutput values.
// You can construct a concrete instance of `GetCentralsnatmapDstAddrArrayInput` via:
//
//	GetCentralsnatmapDstAddrArray{ GetCentralsnatmapDstAddrArgs{...} }
type GetCentralsnatmapDstAddrArrayInput interface {
	pulumi.Input

	ToGetCentralsnatmapDstAddrArrayOutput() GetCentralsnatmapDstAddrArrayOutput
	ToGetCentralsnatmapDstAddrArrayOutputWithContext(context.Context) GetCentralsnatmapDstAddrArrayOutput
}

type GetCentralsnatmapDstAddrArray []GetCentralsnatmapDstAddrInput

func (GetCentralsnatmapDstAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapDstAddr)(nil)).Elem()
}

func (i GetCentralsnatmapDstAddrArray) ToGetCentralsnatmapDstAddrArrayOutput() GetCentralsnatmapDstAddrArrayOutput {
	return i.ToGetCentralsnatmapDstAddrArrayOutputWithContext(context.Background())
}

func (i GetCentralsnatmapDstAddrArray) ToGetCentralsnatmapDstAddrArrayOutputWithContext(ctx context.Context) GetCentralsnatmapDstAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapDstAddrArrayOutput)
}

type GetCentralsnatmapDstAddrOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapDstAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapDstAddr)(nil)).Elem()
}

func (o GetCentralsnatmapDstAddrOutput) ToGetCentralsnatmapDstAddrOutput() GetCentralsnatmapDstAddrOutput {
	return o
}

func (o GetCentralsnatmapDstAddrOutput) ToGetCentralsnatmapDstAddrOutputWithContext(ctx context.Context) GetCentralsnatmapDstAddrOutput {
	return o
}

// IPv6 pool name.
func (o GetCentralsnatmapDstAddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralsnatmapDstAddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetCentralsnatmapDstAddrArrayOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapDstAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapDstAddr)(nil)).Elem()
}

func (o GetCentralsnatmapDstAddrArrayOutput) ToGetCentralsnatmapDstAddrArrayOutput() GetCentralsnatmapDstAddrArrayOutput {
	return o
}

func (o GetCentralsnatmapDstAddrArrayOutput) ToGetCentralsnatmapDstAddrArrayOutputWithContext(ctx context.Context) GetCentralsnatmapDstAddrArrayOutput {
	return o
}

func (o GetCentralsnatmapDstAddrArrayOutput) Index(i pulumi.IntInput) GetCentralsnatmapDstAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralsnatmapDstAddr {
		return vs[0].([]GetCentralsnatmapDstAddr)[vs[1].(int)]
	}).(GetCentralsnatmapDstAddrOutput)
}

type GetCentralsnatmapDstintf struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetCentralsnatmapDstintfInput is an input type that accepts GetCentralsnatmapDstintfArgs and GetCentralsnatmapDstintfOutput values.
// You can construct a concrete instance of `GetCentralsnatmapDstintfInput` via:
//
//	GetCentralsnatmapDstintfArgs{...}
type GetCentralsnatmapDstintfInput interface {
	pulumi.Input

	ToGetCentralsnatmapDstintfOutput() GetCentralsnatmapDstintfOutput
	ToGetCentralsnatmapDstintfOutputWithContext(context.Context) GetCentralsnatmapDstintfOutput
}

type GetCentralsnatmapDstintfArgs struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCentralsnatmapDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapDstintf)(nil)).Elem()
}

func (i GetCentralsnatmapDstintfArgs) ToGetCentralsnatmapDstintfOutput() GetCentralsnatmapDstintfOutput {
	return i.ToGetCentralsnatmapDstintfOutputWithContext(context.Background())
}

func (i GetCentralsnatmapDstintfArgs) ToGetCentralsnatmapDstintfOutputWithContext(ctx context.Context) GetCentralsnatmapDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapDstintfOutput)
}

// GetCentralsnatmapDstintfArrayInput is an input type that accepts GetCentralsnatmapDstintfArray and GetCentralsnatmapDstintfArrayOutput values.
// You can construct a concrete instance of `GetCentralsnatmapDstintfArrayInput` via:
//
//	GetCentralsnatmapDstintfArray{ GetCentralsnatmapDstintfArgs{...} }
type GetCentralsnatmapDstintfArrayInput interface {
	pulumi.Input

	ToGetCentralsnatmapDstintfArrayOutput() GetCentralsnatmapDstintfArrayOutput
	ToGetCentralsnatmapDstintfArrayOutputWithContext(context.Context) GetCentralsnatmapDstintfArrayOutput
}

type GetCentralsnatmapDstintfArray []GetCentralsnatmapDstintfInput

func (GetCentralsnatmapDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapDstintf)(nil)).Elem()
}

func (i GetCentralsnatmapDstintfArray) ToGetCentralsnatmapDstintfArrayOutput() GetCentralsnatmapDstintfArrayOutput {
	return i.ToGetCentralsnatmapDstintfArrayOutputWithContext(context.Background())
}

func (i GetCentralsnatmapDstintfArray) ToGetCentralsnatmapDstintfArrayOutputWithContext(ctx context.Context) GetCentralsnatmapDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapDstintfArrayOutput)
}

type GetCentralsnatmapDstintfOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapDstintf)(nil)).Elem()
}

func (o GetCentralsnatmapDstintfOutput) ToGetCentralsnatmapDstintfOutput() GetCentralsnatmapDstintfOutput {
	return o
}

func (o GetCentralsnatmapDstintfOutput) ToGetCentralsnatmapDstintfOutputWithContext(ctx context.Context) GetCentralsnatmapDstintfOutput {
	return o
}

// IPv6 pool name.
func (o GetCentralsnatmapDstintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralsnatmapDstintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetCentralsnatmapDstintfArrayOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapDstintf)(nil)).Elem()
}

func (o GetCentralsnatmapDstintfArrayOutput) ToGetCentralsnatmapDstintfArrayOutput() GetCentralsnatmapDstintfArrayOutput {
	return o
}

func (o GetCentralsnatmapDstintfArrayOutput) ToGetCentralsnatmapDstintfArrayOutputWithContext(ctx context.Context) GetCentralsnatmapDstintfArrayOutput {
	return o
}

func (o GetCentralsnatmapDstintfArrayOutput) Index(i pulumi.IntInput) GetCentralsnatmapDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralsnatmapDstintf {
		return vs[0].([]GetCentralsnatmapDstintf)[vs[1].(int)]
	}).(GetCentralsnatmapDstintfOutput)
}

type GetCentralsnatmapNatIppool6 struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetCentralsnatmapNatIppool6Input is an input type that accepts GetCentralsnatmapNatIppool6Args and GetCentralsnatmapNatIppool6Output values.
// You can construct a concrete instance of `GetCentralsnatmapNatIppool6Input` via:
//
//	GetCentralsnatmapNatIppool6Args{...}
type GetCentralsnatmapNatIppool6Input interface {
	pulumi.Input

	ToGetCentralsnatmapNatIppool6Output() GetCentralsnatmapNatIppool6Output
	ToGetCentralsnatmapNatIppool6OutputWithContext(context.Context) GetCentralsnatmapNatIppool6Output
}

type GetCentralsnatmapNatIppool6Args struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCentralsnatmapNatIppool6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapNatIppool6)(nil)).Elem()
}

func (i GetCentralsnatmapNatIppool6Args) ToGetCentralsnatmapNatIppool6Output() GetCentralsnatmapNatIppool6Output {
	return i.ToGetCentralsnatmapNatIppool6OutputWithContext(context.Background())
}

func (i GetCentralsnatmapNatIppool6Args) ToGetCentralsnatmapNatIppool6OutputWithContext(ctx context.Context) GetCentralsnatmapNatIppool6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapNatIppool6Output)
}

// GetCentralsnatmapNatIppool6ArrayInput is an input type that accepts GetCentralsnatmapNatIppool6Array and GetCentralsnatmapNatIppool6ArrayOutput values.
// You can construct a concrete instance of `GetCentralsnatmapNatIppool6ArrayInput` via:
//
//	GetCentralsnatmapNatIppool6Array{ GetCentralsnatmapNatIppool6Args{...} }
type GetCentralsnatmapNatIppool6ArrayInput interface {
	pulumi.Input

	ToGetCentralsnatmapNatIppool6ArrayOutput() GetCentralsnatmapNatIppool6ArrayOutput
	ToGetCentralsnatmapNatIppool6ArrayOutputWithContext(context.Context) GetCentralsnatmapNatIppool6ArrayOutput
}

type GetCentralsnatmapNatIppool6Array []GetCentralsnatmapNatIppool6Input

func (GetCentralsnatmapNatIppool6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapNatIppool6)(nil)).Elem()
}

func (i GetCentralsnatmapNatIppool6Array) ToGetCentralsnatmapNatIppool6ArrayOutput() GetCentralsnatmapNatIppool6ArrayOutput {
	return i.ToGetCentralsnatmapNatIppool6ArrayOutputWithContext(context.Background())
}

func (i GetCentralsnatmapNatIppool6Array) ToGetCentralsnatmapNatIppool6ArrayOutputWithContext(ctx context.Context) GetCentralsnatmapNatIppool6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapNatIppool6ArrayOutput)
}

type GetCentralsnatmapNatIppool6Output struct{ *pulumi.OutputState }

func (GetCentralsnatmapNatIppool6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapNatIppool6)(nil)).Elem()
}

func (o GetCentralsnatmapNatIppool6Output) ToGetCentralsnatmapNatIppool6Output() GetCentralsnatmapNatIppool6Output {
	return o
}

func (o GetCentralsnatmapNatIppool6Output) ToGetCentralsnatmapNatIppool6OutputWithContext(ctx context.Context) GetCentralsnatmapNatIppool6Output {
	return o
}

// IPv6 pool name.
func (o GetCentralsnatmapNatIppool6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralsnatmapNatIppool6) string { return v.Name }).(pulumi.StringOutput)
}

type GetCentralsnatmapNatIppool6ArrayOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapNatIppool6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapNatIppool6)(nil)).Elem()
}

func (o GetCentralsnatmapNatIppool6ArrayOutput) ToGetCentralsnatmapNatIppool6ArrayOutput() GetCentralsnatmapNatIppool6ArrayOutput {
	return o
}

func (o GetCentralsnatmapNatIppool6ArrayOutput) ToGetCentralsnatmapNatIppool6ArrayOutputWithContext(ctx context.Context) GetCentralsnatmapNatIppool6ArrayOutput {
	return o
}

func (o GetCentralsnatmapNatIppool6ArrayOutput) Index(i pulumi.IntInput) GetCentralsnatmapNatIppool6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralsnatmapNatIppool6 {
		return vs[0].([]GetCentralsnatmapNatIppool6)[vs[1].(int)]
	}).(GetCentralsnatmapNatIppool6Output)
}

type GetCentralsnatmapNatIppool struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetCentralsnatmapNatIppoolInput is an input type that accepts GetCentralsnatmapNatIppoolArgs and GetCentralsnatmapNatIppoolOutput values.
// You can construct a concrete instance of `GetCentralsnatmapNatIppoolInput` via:
//
//	GetCentralsnatmapNatIppoolArgs{...}
type GetCentralsnatmapNatIppoolInput interface {
	pulumi.Input

	ToGetCentralsnatmapNatIppoolOutput() GetCentralsnatmapNatIppoolOutput
	ToGetCentralsnatmapNatIppoolOutputWithContext(context.Context) GetCentralsnatmapNatIppoolOutput
}

type GetCentralsnatmapNatIppoolArgs struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCentralsnatmapNatIppoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapNatIppool)(nil)).Elem()
}

func (i GetCentralsnatmapNatIppoolArgs) ToGetCentralsnatmapNatIppoolOutput() GetCentralsnatmapNatIppoolOutput {
	return i.ToGetCentralsnatmapNatIppoolOutputWithContext(context.Background())
}

func (i GetCentralsnatmapNatIppoolArgs) ToGetCentralsnatmapNatIppoolOutputWithContext(ctx context.Context) GetCentralsnatmapNatIppoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapNatIppoolOutput)
}

// GetCentralsnatmapNatIppoolArrayInput is an input type that accepts GetCentralsnatmapNatIppoolArray and GetCentralsnatmapNatIppoolArrayOutput values.
// You can construct a concrete instance of `GetCentralsnatmapNatIppoolArrayInput` via:
//
//	GetCentralsnatmapNatIppoolArray{ GetCentralsnatmapNatIppoolArgs{...} }
type GetCentralsnatmapNatIppoolArrayInput interface {
	pulumi.Input

	ToGetCentralsnatmapNatIppoolArrayOutput() GetCentralsnatmapNatIppoolArrayOutput
	ToGetCentralsnatmapNatIppoolArrayOutputWithContext(context.Context) GetCentralsnatmapNatIppoolArrayOutput
}

type GetCentralsnatmapNatIppoolArray []GetCentralsnatmapNatIppoolInput

func (GetCentralsnatmapNatIppoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapNatIppool)(nil)).Elem()
}

func (i GetCentralsnatmapNatIppoolArray) ToGetCentralsnatmapNatIppoolArrayOutput() GetCentralsnatmapNatIppoolArrayOutput {
	return i.ToGetCentralsnatmapNatIppoolArrayOutputWithContext(context.Background())
}

func (i GetCentralsnatmapNatIppoolArray) ToGetCentralsnatmapNatIppoolArrayOutputWithContext(ctx context.Context) GetCentralsnatmapNatIppoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapNatIppoolArrayOutput)
}

type GetCentralsnatmapNatIppoolOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapNatIppoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapNatIppool)(nil)).Elem()
}

func (o GetCentralsnatmapNatIppoolOutput) ToGetCentralsnatmapNatIppoolOutput() GetCentralsnatmapNatIppoolOutput {
	return o
}

func (o GetCentralsnatmapNatIppoolOutput) ToGetCentralsnatmapNatIppoolOutputWithContext(ctx context.Context) GetCentralsnatmapNatIppoolOutput {
	return o
}

// IPv6 pool name.
func (o GetCentralsnatmapNatIppoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralsnatmapNatIppool) string { return v.Name }).(pulumi.StringOutput)
}

type GetCentralsnatmapNatIppoolArrayOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapNatIppoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapNatIppool)(nil)).Elem()
}

func (o GetCentralsnatmapNatIppoolArrayOutput) ToGetCentralsnatmapNatIppoolArrayOutput() GetCentralsnatmapNatIppoolArrayOutput {
	return o
}

func (o GetCentralsnatmapNatIppoolArrayOutput) ToGetCentralsnatmapNatIppoolArrayOutputWithContext(ctx context.Context) GetCentralsnatmapNatIppoolArrayOutput {
	return o
}

func (o GetCentralsnatmapNatIppoolArrayOutput) Index(i pulumi.IntInput) GetCentralsnatmapNatIppoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralsnatmapNatIppool {
		return vs[0].([]GetCentralsnatmapNatIppool)[vs[1].(int)]
	}).(GetCentralsnatmapNatIppoolOutput)
}

type GetCentralsnatmapOrigAddr6 struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetCentralsnatmapOrigAddr6Input is an input type that accepts GetCentralsnatmapOrigAddr6Args and GetCentralsnatmapOrigAddr6Output values.
// You can construct a concrete instance of `GetCentralsnatmapOrigAddr6Input` via:
//
//	GetCentralsnatmapOrigAddr6Args{...}
type GetCentralsnatmapOrigAddr6Input interface {
	pulumi.Input

	ToGetCentralsnatmapOrigAddr6Output() GetCentralsnatmapOrigAddr6Output
	ToGetCentralsnatmapOrigAddr6OutputWithContext(context.Context) GetCentralsnatmapOrigAddr6Output
}

type GetCentralsnatmapOrigAddr6Args struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCentralsnatmapOrigAddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (i GetCentralsnatmapOrigAddr6Args) ToGetCentralsnatmapOrigAddr6Output() GetCentralsnatmapOrigAddr6Output {
	return i.ToGetCentralsnatmapOrigAddr6OutputWithContext(context.Background())
}

func (i GetCentralsnatmapOrigAddr6Args) ToGetCentralsnatmapOrigAddr6OutputWithContext(ctx context.Context) GetCentralsnatmapOrigAddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapOrigAddr6Output)
}

// GetCentralsnatmapOrigAddr6ArrayInput is an input type that accepts GetCentralsnatmapOrigAddr6Array and GetCentralsnatmapOrigAddr6ArrayOutput values.
// You can construct a concrete instance of `GetCentralsnatmapOrigAddr6ArrayInput` via:
//
//	GetCentralsnatmapOrigAddr6Array{ GetCentralsnatmapOrigAddr6Args{...} }
type GetCentralsnatmapOrigAddr6ArrayInput interface {
	pulumi.Input

	ToGetCentralsnatmapOrigAddr6ArrayOutput() GetCentralsnatmapOrigAddr6ArrayOutput
	ToGetCentralsnatmapOrigAddr6ArrayOutputWithContext(context.Context) GetCentralsnatmapOrigAddr6ArrayOutput
}

type GetCentralsnatmapOrigAddr6Array []GetCentralsnatmapOrigAddr6Input

func (GetCentralsnatmapOrigAddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (i GetCentralsnatmapOrigAddr6Array) ToGetCentralsnatmapOrigAddr6ArrayOutput() GetCentralsnatmapOrigAddr6ArrayOutput {
	return i.ToGetCentralsnatmapOrigAddr6ArrayOutputWithContext(context.Background())
}

func (i GetCentralsnatmapOrigAddr6Array) ToGetCentralsnatmapOrigAddr6ArrayOutputWithContext(ctx context.Context) GetCentralsnatmapOrigAddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapOrigAddr6ArrayOutput)
}

type GetCentralsnatmapOrigAddr6Output struct{ *pulumi.OutputState }

func (GetCentralsnatmapOrigAddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (o GetCentralsnatmapOrigAddr6Output) ToGetCentralsnatmapOrigAddr6Output() GetCentralsnatmapOrigAddr6Output {
	return o
}

func (o GetCentralsnatmapOrigAddr6Output) ToGetCentralsnatmapOrigAddr6OutputWithContext(ctx context.Context) GetCentralsnatmapOrigAddr6Output {
	return o
}

// IPv6 pool name.
func (o GetCentralsnatmapOrigAddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralsnatmapOrigAddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetCentralsnatmapOrigAddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapOrigAddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (o GetCentralsnatmapOrigAddr6ArrayOutput) ToGetCentralsnatmapOrigAddr6ArrayOutput() GetCentralsnatmapOrigAddr6ArrayOutput {
	return o
}

func (o GetCentralsnatmapOrigAddr6ArrayOutput) ToGetCentralsnatmapOrigAddr6ArrayOutputWithContext(ctx context.Context) GetCentralsnatmapOrigAddr6ArrayOutput {
	return o
}

func (o GetCentralsnatmapOrigAddr6ArrayOutput) Index(i pulumi.IntInput) GetCentralsnatmapOrigAddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralsnatmapOrigAddr6 {
		return vs[0].([]GetCentralsnatmapOrigAddr6)[vs[1].(int)]
	}).(GetCentralsnatmapOrigAddr6Output)
}

type GetCentralsnatmapOrigAddr struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetCentralsnatmapOrigAddrInput is an input type that accepts GetCentralsnatmapOrigAddrArgs and GetCentralsnatmapOrigAddrOutput values.
// You can construct a concrete instance of `GetCentralsnatmapOrigAddrInput` via:
//
//	GetCentralsnatmapOrigAddrArgs{...}
type GetCentralsnatmapOrigAddrInput interface {
	pulumi.Input

	ToGetCentralsnatmapOrigAddrOutput() GetCentralsnatmapOrigAddrOutput
	ToGetCentralsnatmapOrigAddrOutputWithContext(context.Context) GetCentralsnatmapOrigAddrOutput
}

type GetCentralsnatmapOrigAddrArgs struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCentralsnatmapOrigAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapOrigAddr)(nil)).Elem()
}

func (i GetCentralsnatmapOrigAddrArgs) ToGetCentralsnatmapOrigAddrOutput() GetCentralsnatmapOrigAddrOutput {
	return i.ToGetCentralsnatmapOrigAddrOutputWithContext(context.Background())
}

func (i GetCentralsnatmapOrigAddrArgs) ToGetCentralsnatmapOrigAddrOutputWithContext(ctx context.Context) GetCentralsnatmapOrigAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapOrigAddrOutput)
}

// GetCentralsnatmapOrigAddrArrayInput is an input type that accepts GetCentralsnatmapOrigAddrArray and GetCentralsnatmapOrigAddrArrayOutput values.
// You can construct a concrete instance of `GetCentralsnatmapOrigAddrArrayInput` via:
//
//	GetCentralsnatmapOrigAddrArray{ GetCentralsnatmapOrigAddrArgs{...} }
type GetCentralsnatmapOrigAddrArrayInput interface {
	pulumi.Input

	ToGetCentralsnatmapOrigAddrArrayOutput() GetCentralsnatmapOrigAddrArrayOutput
	ToGetCentralsnatmapOrigAddrArrayOutputWithContext(context.Context) GetCentralsnatmapOrigAddrArrayOutput
}

type GetCentralsnatmapOrigAddrArray []GetCentralsnatmapOrigAddrInput

func (GetCentralsnatmapOrigAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapOrigAddr)(nil)).Elem()
}

func (i GetCentralsnatmapOrigAddrArray) ToGetCentralsnatmapOrigAddrArrayOutput() GetCentralsnatmapOrigAddrArrayOutput {
	return i.ToGetCentralsnatmapOrigAddrArrayOutputWithContext(context.Background())
}

func (i GetCentralsnatmapOrigAddrArray) ToGetCentralsnatmapOrigAddrArrayOutputWithContext(ctx context.Context) GetCentralsnatmapOrigAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapOrigAddrArrayOutput)
}

type GetCentralsnatmapOrigAddrOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapOrigAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapOrigAddr)(nil)).Elem()
}

func (o GetCentralsnatmapOrigAddrOutput) ToGetCentralsnatmapOrigAddrOutput() GetCentralsnatmapOrigAddrOutput {
	return o
}

func (o GetCentralsnatmapOrigAddrOutput) ToGetCentralsnatmapOrigAddrOutputWithContext(ctx context.Context) GetCentralsnatmapOrigAddrOutput {
	return o
}

// IPv6 pool name.
func (o GetCentralsnatmapOrigAddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralsnatmapOrigAddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetCentralsnatmapOrigAddrArrayOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapOrigAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapOrigAddr)(nil)).Elem()
}

func (o GetCentralsnatmapOrigAddrArrayOutput) ToGetCentralsnatmapOrigAddrArrayOutput() GetCentralsnatmapOrigAddrArrayOutput {
	return o
}

func (o GetCentralsnatmapOrigAddrArrayOutput) ToGetCentralsnatmapOrigAddrArrayOutputWithContext(ctx context.Context) GetCentralsnatmapOrigAddrArrayOutput {
	return o
}

func (o GetCentralsnatmapOrigAddrArrayOutput) Index(i pulumi.IntInput) GetCentralsnatmapOrigAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralsnatmapOrigAddr {
		return vs[0].([]GetCentralsnatmapOrigAddr)[vs[1].(int)]
	}).(GetCentralsnatmapOrigAddrOutput)
}

type GetCentralsnatmapSrcintf struct {
	// IPv6 pool name.
	Name string `pulumi:"name"`
}

// GetCentralsnatmapSrcintfInput is an input type that accepts GetCentralsnatmapSrcintfArgs and GetCentralsnatmapSrcintfOutput values.
// You can construct a concrete instance of `GetCentralsnatmapSrcintfInput` via:
//
//	GetCentralsnatmapSrcintfArgs{...}
type GetCentralsnatmapSrcintfInput interface {
	pulumi.Input

	ToGetCentralsnatmapSrcintfOutput() GetCentralsnatmapSrcintfOutput
	ToGetCentralsnatmapSrcintfOutputWithContext(context.Context) GetCentralsnatmapSrcintfOutput
}

type GetCentralsnatmapSrcintfArgs struct {
	// IPv6 pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCentralsnatmapSrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapSrcintf)(nil)).Elem()
}

func (i GetCentralsnatmapSrcintfArgs) ToGetCentralsnatmapSrcintfOutput() GetCentralsnatmapSrcintfOutput {
	return i.ToGetCentralsnatmapSrcintfOutputWithContext(context.Background())
}

func (i GetCentralsnatmapSrcintfArgs) ToGetCentralsnatmapSrcintfOutputWithContext(ctx context.Context) GetCentralsnatmapSrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapSrcintfOutput)
}

// GetCentralsnatmapSrcintfArrayInput is an input type that accepts GetCentralsnatmapSrcintfArray and GetCentralsnatmapSrcintfArrayOutput values.
// You can construct a concrete instance of `GetCentralsnatmapSrcintfArrayInput` via:
//
//	GetCentralsnatmapSrcintfArray{ GetCentralsnatmapSrcintfArgs{...} }
type GetCentralsnatmapSrcintfArrayInput interface {
	pulumi.Input

	ToGetCentralsnatmapSrcintfArrayOutput() GetCentralsnatmapSrcintfArrayOutput
	ToGetCentralsnatmapSrcintfArrayOutputWithContext(context.Context) GetCentralsnatmapSrcintfArrayOutput
}

type GetCentralsnatmapSrcintfArray []GetCentralsnatmapSrcintfInput

func (GetCentralsnatmapSrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapSrcintf)(nil)).Elem()
}

func (i GetCentralsnatmapSrcintfArray) ToGetCentralsnatmapSrcintfArrayOutput() GetCentralsnatmapSrcintfArrayOutput {
	return i.ToGetCentralsnatmapSrcintfArrayOutputWithContext(context.Background())
}

func (i GetCentralsnatmapSrcintfArray) ToGetCentralsnatmapSrcintfArrayOutputWithContext(ctx context.Context) GetCentralsnatmapSrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralsnatmapSrcintfArrayOutput)
}

type GetCentralsnatmapSrcintfOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapSrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralsnatmapSrcintf)(nil)).Elem()
}

func (o GetCentralsnatmapSrcintfOutput) ToGetCentralsnatmapSrcintfOutput() GetCentralsnatmapSrcintfOutput {
	return o
}

func (o GetCentralsnatmapSrcintfOutput) ToGetCentralsnatmapSrcintfOutputWithContext(ctx context.Context) GetCentralsnatmapSrcintfOutput {
	return o
}

// IPv6 pool name.
func (o GetCentralsnatmapSrcintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralsnatmapSrcintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetCentralsnatmapSrcintfArrayOutput struct{ *pulumi.OutputState }

func (GetCentralsnatmapSrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralsnatmapSrcintf)(nil)).Elem()
}

func (o GetCentralsnatmapSrcintfArrayOutput) ToGetCentralsnatmapSrcintfArrayOutput() GetCentralsnatmapSrcintfArrayOutput {
	return o
}

func (o GetCentralsnatmapSrcintfArrayOutput) ToGetCentralsnatmapSrcintfArrayOutputWithContext(ctx context.Context) GetCentralsnatmapSrcintfArrayOutput {
	return o
}

func (o GetCentralsnatmapSrcintfArrayOutput) Index(i pulumi.IntInput) GetCentralsnatmapSrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralsnatmapSrcintf {
		return vs[0].([]GetCentralsnatmapSrcintf)[vs[1].(int)]
	}).(GetCentralsnatmapSrcintfOutput)
}

type GetDoSpolicy6Anomaly struct {
	// Action taken when the threshold is reached.
	Action string `pulumi:"action"`
	// Enable/disable anomaly logging.
	Log string `pulumi:"log"`
	// Anomaly name.
	Name string `pulumi:"name"`
	// Quarantine method.
	Quarantine string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging.
	QuarantineLog string `pulumi:"quarantineLog"`
	// Enable/disable this anomaly.
	Status string `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold int `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault int `pulumi:"thresholddefault"`
}

// GetDoSpolicy6AnomalyInput is an input type that accepts GetDoSpolicy6AnomalyArgs and GetDoSpolicy6AnomalyOutput values.
// You can construct a concrete instance of `GetDoSpolicy6AnomalyInput` via:
//
//	GetDoSpolicy6AnomalyArgs{...}
type GetDoSpolicy6AnomalyInput interface {
	pulumi.Input

	ToGetDoSpolicy6AnomalyOutput() GetDoSpolicy6AnomalyOutput
	ToGetDoSpolicy6AnomalyOutputWithContext(context.Context) GetDoSpolicy6AnomalyOutput
}

type GetDoSpolicy6AnomalyArgs struct {
	// Action taken when the threshold is reached.
	Action pulumi.StringInput `pulumi:"action"`
	// Enable/disable anomaly logging.
	Log pulumi.StringInput `pulumi:"log"`
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
	// Quarantine method.
	Quarantine pulumi.StringInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging.
	QuarantineLog pulumi.StringInput `pulumi:"quarantineLog"`
	// Enable/disable this anomaly.
	Status pulumi.StringInput `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold pulumi.IntInput `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault pulumi.IntInput `pulumi:"thresholddefault"`
}

func (GetDoSpolicy6AnomalyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicy6Anomaly)(nil)).Elem()
}

func (i GetDoSpolicy6AnomalyArgs) ToGetDoSpolicy6AnomalyOutput() GetDoSpolicy6AnomalyOutput {
	return i.ToGetDoSpolicy6AnomalyOutputWithContext(context.Background())
}

func (i GetDoSpolicy6AnomalyArgs) ToGetDoSpolicy6AnomalyOutputWithContext(ctx context.Context) GetDoSpolicy6AnomalyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicy6AnomalyOutput)
}

// GetDoSpolicy6AnomalyArrayInput is an input type that accepts GetDoSpolicy6AnomalyArray and GetDoSpolicy6AnomalyArrayOutput values.
// You can construct a concrete instance of `GetDoSpolicy6AnomalyArrayInput` via:
//
//	GetDoSpolicy6AnomalyArray{ GetDoSpolicy6AnomalyArgs{...} }
type GetDoSpolicy6AnomalyArrayInput interface {
	pulumi.Input

	ToGetDoSpolicy6AnomalyArrayOutput() GetDoSpolicy6AnomalyArrayOutput
	ToGetDoSpolicy6AnomalyArrayOutputWithContext(context.Context) GetDoSpolicy6AnomalyArrayOutput
}

type GetDoSpolicy6AnomalyArray []GetDoSpolicy6AnomalyInput

func (GetDoSpolicy6AnomalyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicy6Anomaly)(nil)).Elem()
}

func (i GetDoSpolicy6AnomalyArray) ToGetDoSpolicy6AnomalyArrayOutput() GetDoSpolicy6AnomalyArrayOutput {
	return i.ToGetDoSpolicy6AnomalyArrayOutputWithContext(context.Background())
}

func (i GetDoSpolicy6AnomalyArray) ToGetDoSpolicy6AnomalyArrayOutputWithContext(ctx context.Context) GetDoSpolicy6AnomalyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicy6AnomalyArrayOutput)
}

type GetDoSpolicy6AnomalyOutput struct{ *pulumi.OutputState }

func (GetDoSpolicy6AnomalyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicy6Anomaly)(nil)).Elem()
}

func (o GetDoSpolicy6AnomalyOutput) ToGetDoSpolicy6AnomalyOutput() GetDoSpolicy6AnomalyOutput {
	return o
}

func (o GetDoSpolicy6AnomalyOutput) ToGetDoSpolicy6AnomalyOutputWithContext(ctx context.Context) GetDoSpolicy6AnomalyOutput {
	return o
}

// Action taken when the threshold is reached.
func (o GetDoSpolicy6AnomalyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicy6Anomaly) string { return v.Action }).(pulumi.StringOutput)
}

// Enable/disable anomaly logging.
func (o GetDoSpolicy6AnomalyOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicy6Anomaly) string { return v.Log }).(pulumi.StringOutput)
}

// Anomaly name.
func (o GetDoSpolicy6AnomalyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicy6Anomaly) string { return v.Name }).(pulumi.StringOutput)
}

// Quarantine method.
func (o GetDoSpolicy6AnomalyOutput) Quarantine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicy6Anomaly) string { return v.Quarantine }).(pulumi.StringOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o GetDoSpolicy6AnomalyOutput) QuarantineExpiry() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicy6Anomaly) string { return v.QuarantineExpiry }).(pulumi.StringOutput)
}

// Enable/disable quarantine logging.
func (o GetDoSpolicy6AnomalyOutput) QuarantineLog() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicy6Anomaly) string { return v.QuarantineLog }).(pulumi.StringOutput)
}

// Enable/disable this anomaly.
func (o GetDoSpolicy6AnomalyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicy6Anomaly) string { return v.Status }).(pulumi.StringOutput)
}

// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
func (o GetDoSpolicy6AnomalyOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetDoSpolicy6Anomaly) int { return v.Threshold }).(pulumi.IntOutput)
}

// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
func (o GetDoSpolicy6AnomalyOutput) Thresholddefault() pulumi.IntOutput {
	return o.ApplyT(func(v GetDoSpolicy6Anomaly) int { return v.Thresholddefault }).(pulumi.IntOutput)
}

type GetDoSpolicy6AnomalyArrayOutput struct{ *pulumi.OutputState }

func (GetDoSpolicy6AnomalyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicy6Anomaly)(nil)).Elem()
}

func (o GetDoSpolicy6AnomalyArrayOutput) ToGetDoSpolicy6AnomalyArrayOutput() GetDoSpolicy6AnomalyArrayOutput {
	return o
}

func (o GetDoSpolicy6AnomalyArrayOutput) ToGetDoSpolicy6AnomalyArrayOutputWithContext(ctx context.Context) GetDoSpolicy6AnomalyArrayOutput {
	return o
}

func (o GetDoSpolicy6AnomalyArrayOutput) Index(i pulumi.IntInput) GetDoSpolicy6AnomalyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDoSpolicy6Anomaly {
		return vs[0].([]GetDoSpolicy6Anomaly)[vs[1].(int)]
	}).(GetDoSpolicy6AnomalyOutput)
}

type GetDoSpolicy6Dstaddr struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetDoSpolicy6DstaddrInput is an input type that accepts GetDoSpolicy6DstaddrArgs and GetDoSpolicy6DstaddrOutput values.
// You can construct a concrete instance of `GetDoSpolicy6DstaddrInput` via:
//
//	GetDoSpolicy6DstaddrArgs{...}
type GetDoSpolicy6DstaddrInput interface {
	pulumi.Input

	ToGetDoSpolicy6DstaddrOutput() GetDoSpolicy6DstaddrOutput
	ToGetDoSpolicy6DstaddrOutputWithContext(context.Context) GetDoSpolicy6DstaddrOutput
}

type GetDoSpolicy6DstaddrArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDoSpolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicy6Dstaddr)(nil)).Elem()
}

func (i GetDoSpolicy6DstaddrArgs) ToGetDoSpolicy6DstaddrOutput() GetDoSpolicy6DstaddrOutput {
	return i.ToGetDoSpolicy6DstaddrOutputWithContext(context.Background())
}

func (i GetDoSpolicy6DstaddrArgs) ToGetDoSpolicy6DstaddrOutputWithContext(ctx context.Context) GetDoSpolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicy6DstaddrOutput)
}

// GetDoSpolicy6DstaddrArrayInput is an input type that accepts GetDoSpolicy6DstaddrArray and GetDoSpolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `GetDoSpolicy6DstaddrArrayInput` via:
//
//	GetDoSpolicy6DstaddrArray{ GetDoSpolicy6DstaddrArgs{...} }
type GetDoSpolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToGetDoSpolicy6DstaddrArrayOutput() GetDoSpolicy6DstaddrArrayOutput
	ToGetDoSpolicy6DstaddrArrayOutputWithContext(context.Context) GetDoSpolicy6DstaddrArrayOutput
}

type GetDoSpolicy6DstaddrArray []GetDoSpolicy6DstaddrInput

func (GetDoSpolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicy6Dstaddr)(nil)).Elem()
}

func (i GetDoSpolicy6DstaddrArray) ToGetDoSpolicy6DstaddrArrayOutput() GetDoSpolicy6DstaddrArrayOutput {
	return i.ToGetDoSpolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i GetDoSpolicy6DstaddrArray) ToGetDoSpolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetDoSpolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicy6DstaddrArrayOutput)
}

type GetDoSpolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (GetDoSpolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicy6Dstaddr)(nil)).Elem()
}

func (o GetDoSpolicy6DstaddrOutput) ToGetDoSpolicy6DstaddrOutput() GetDoSpolicy6DstaddrOutput {
	return o
}

func (o GetDoSpolicy6DstaddrOutput) ToGetDoSpolicy6DstaddrOutputWithContext(ctx context.Context) GetDoSpolicy6DstaddrOutput {
	return o
}

// Anomaly name.
func (o GetDoSpolicy6DstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicy6Dstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetDoSpolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetDoSpolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicy6Dstaddr)(nil)).Elem()
}

func (o GetDoSpolicy6DstaddrArrayOutput) ToGetDoSpolicy6DstaddrArrayOutput() GetDoSpolicy6DstaddrArrayOutput {
	return o
}

func (o GetDoSpolicy6DstaddrArrayOutput) ToGetDoSpolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetDoSpolicy6DstaddrArrayOutput {
	return o
}

func (o GetDoSpolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) GetDoSpolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDoSpolicy6Dstaddr {
		return vs[0].([]GetDoSpolicy6Dstaddr)[vs[1].(int)]
	}).(GetDoSpolicy6DstaddrOutput)
}

type GetDoSpolicy6Service struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetDoSpolicy6ServiceInput is an input type that accepts GetDoSpolicy6ServiceArgs and GetDoSpolicy6ServiceOutput values.
// You can construct a concrete instance of `GetDoSpolicy6ServiceInput` via:
//
//	GetDoSpolicy6ServiceArgs{...}
type GetDoSpolicy6ServiceInput interface {
	pulumi.Input

	ToGetDoSpolicy6ServiceOutput() GetDoSpolicy6ServiceOutput
	ToGetDoSpolicy6ServiceOutputWithContext(context.Context) GetDoSpolicy6ServiceOutput
}

type GetDoSpolicy6ServiceArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDoSpolicy6ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicy6Service)(nil)).Elem()
}

func (i GetDoSpolicy6ServiceArgs) ToGetDoSpolicy6ServiceOutput() GetDoSpolicy6ServiceOutput {
	return i.ToGetDoSpolicy6ServiceOutputWithContext(context.Background())
}

func (i GetDoSpolicy6ServiceArgs) ToGetDoSpolicy6ServiceOutputWithContext(ctx context.Context) GetDoSpolicy6ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicy6ServiceOutput)
}

// GetDoSpolicy6ServiceArrayInput is an input type that accepts GetDoSpolicy6ServiceArray and GetDoSpolicy6ServiceArrayOutput values.
// You can construct a concrete instance of `GetDoSpolicy6ServiceArrayInput` via:
//
//	GetDoSpolicy6ServiceArray{ GetDoSpolicy6ServiceArgs{...} }
type GetDoSpolicy6ServiceArrayInput interface {
	pulumi.Input

	ToGetDoSpolicy6ServiceArrayOutput() GetDoSpolicy6ServiceArrayOutput
	ToGetDoSpolicy6ServiceArrayOutputWithContext(context.Context) GetDoSpolicy6ServiceArrayOutput
}

type GetDoSpolicy6ServiceArray []GetDoSpolicy6ServiceInput

func (GetDoSpolicy6ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicy6Service)(nil)).Elem()
}

func (i GetDoSpolicy6ServiceArray) ToGetDoSpolicy6ServiceArrayOutput() GetDoSpolicy6ServiceArrayOutput {
	return i.ToGetDoSpolicy6ServiceArrayOutputWithContext(context.Background())
}

func (i GetDoSpolicy6ServiceArray) ToGetDoSpolicy6ServiceArrayOutputWithContext(ctx context.Context) GetDoSpolicy6ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicy6ServiceArrayOutput)
}

type GetDoSpolicy6ServiceOutput struct{ *pulumi.OutputState }

func (GetDoSpolicy6ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicy6Service)(nil)).Elem()
}

func (o GetDoSpolicy6ServiceOutput) ToGetDoSpolicy6ServiceOutput() GetDoSpolicy6ServiceOutput {
	return o
}

func (o GetDoSpolicy6ServiceOutput) ToGetDoSpolicy6ServiceOutputWithContext(ctx context.Context) GetDoSpolicy6ServiceOutput {
	return o
}

// Anomaly name.
func (o GetDoSpolicy6ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicy6Service) string { return v.Name }).(pulumi.StringOutput)
}

type GetDoSpolicy6ServiceArrayOutput struct{ *pulumi.OutputState }

func (GetDoSpolicy6ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicy6Service)(nil)).Elem()
}

func (o GetDoSpolicy6ServiceArrayOutput) ToGetDoSpolicy6ServiceArrayOutput() GetDoSpolicy6ServiceArrayOutput {
	return o
}

func (o GetDoSpolicy6ServiceArrayOutput) ToGetDoSpolicy6ServiceArrayOutputWithContext(ctx context.Context) GetDoSpolicy6ServiceArrayOutput {
	return o
}

func (o GetDoSpolicy6ServiceArrayOutput) Index(i pulumi.IntInput) GetDoSpolicy6ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDoSpolicy6Service {
		return vs[0].([]GetDoSpolicy6Service)[vs[1].(int)]
	}).(GetDoSpolicy6ServiceOutput)
}

type GetDoSpolicy6Srcaddr struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetDoSpolicy6SrcaddrInput is an input type that accepts GetDoSpolicy6SrcaddrArgs and GetDoSpolicy6SrcaddrOutput values.
// You can construct a concrete instance of `GetDoSpolicy6SrcaddrInput` via:
//
//	GetDoSpolicy6SrcaddrArgs{...}
type GetDoSpolicy6SrcaddrInput interface {
	pulumi.Input

	ToGetDoSpolicy6SrcaddrOutput() GetDoSpolicy6SrcaddrOutput
	ToGetDoSpolicy6SrcaddrOutputWithContext(context.Context) GetDoSpolicy6SrcaddrOutput
}

type GetDoSpolicy6SrcaddrArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDoSpolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicy6Srcaddr)(nil)).Elem()
}

func (i GetDoSpolicy6SrcaddrArgs) ToGetDoSpolicy6SrcaddrOutput() GetDoSpolicy6SrcaddrOutput {
	return i.ToGetDoSpolicy6SrcaddrOutputWithContext(context.Background())
}

func (i GetDoSpolicy6SrcaddrArgs) ToGetDoSpolicy6SrcaddrOutputWithContext(ctx context.Context) GetDoSpolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicy6SrcaddrOutput)
}

// GetDoSpolicy6SrcaddrArrayInput is an input type that accepts GetDoSpolicy6SrcaddrArray and GetDoSpolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `GetDoSpolicy6SrcaddrArrayInput` via:
//
//	GetDoSpolicy6SrcaddrArray{ GetDoSpolicy6SrcaddrArgs{...} }
type GetDoSpolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToGetDoSpolicy6SrcaddrArrayOutput() GetDoSpolicy6SrcaddrArrayOutput
	ToGetDoSpolicy6SrcaddrArrayOutputWithContext(context.Context) GetDoSpolicy6SrcaddrArrayOutput
}

type GetDoSpolicy6SrcaddrArray []GetDoSpolicy6SrcaddrInput

func (GetDoSpolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicy6Srcaddr)(nil)).Elem()
}

func (i GetDoSpolicy6SrcaddrArray) ToGetDoSpolicy6SrcaddrArrayOutput() GetDoSpolicy6SrcaddrArrayOutput {
	return i.ToGetDoSpolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i GetDoSpolicy6SrcaddrArray) ToGetDoSpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetDoSpolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicy6SrcaddrArrayOutput)
}

type GetDoSpolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (GetDoSpolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicy6Srcaddr)(nil)).Elem()
}

func (o GetDoSpolicy6SrcaddrOutput) ToGetDoSpolicy6SrcaddrOutput() GetDoSpolicy6SrcaddrOutput {
	return o
}

func (o GetDoSpolicy6SrcaddrOutput) ToGetDoSpolicy6SrcaddrOutputWithContext(ctx context.Context) GetDoSpolicy6SrcaddrOutput {
	return o
}

// Anomaly name.
func (o GetDoSpolicy6SrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicy6Srcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetDoSpolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetDoSpolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicy6Srcaddr)(nil)).Elem()
}

func (o GetDoSpolicy6SrcaddrArrayOutput) ToGetDoSpolicy6SrcaddrArrayOutput() GetDoSpolicy6SrcaddrArrayOutput {
	return o
}

func (o GetDoSpolicy6SrcaddrArrayOutput) ToGetDoSpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetDoSpolicy6SrcaddrArrayOutput {
	return o
}

func (o GetDoSpolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) GetDoSpolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDoSpolicy6Srcaddr {
		return vs[0].([]GetDoSpolicy6Srcaddr)[vs[1].(int)]
	}).(GetDoSpolicy6SrcaddrOutput)
}

type GetDoSpolicyAnomaly struct {
	// Action taken when the threshold is reached.
	Action string `pulumi:"action"`
	// Enable/disable anomaly logging.
	Log string `pulumi:"log"`
	// Anomaly name.
	Name string `pulumi:"name"`
	// Quarantine method.
	Quarantine string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging.
	QuarantineLog string `pulumi:"quarantineLog"`
	// Enable/disable this anomaly.
	Status string `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold int `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault int `pulumi:"thresholddefault"`
}

// GetDoSpolicyAnomalyInput is an input type that accepts GetDoSpolicyAnomalyArgs and GetDoSpolicyAnomalyOutput values.
// You can construct a concrete instance of `GetDoSpolicyAnomalyInput` via:
//
//	GetDoSpolicyAnomalyArgs{...}
type GetDoSpolicyAnomalyInput interface {
	pulumi.Input

	ToGetDoSpolicyAnomalyOutput() GetDoSpolicyAnomalyOutput
	ToGetDoSpolicyAnomalyOutputWithContext(context.Context) GetDoSpolicyAnomalyOutput
}

type GetDoSpolicyAnomalyArgs struct {
	// Action taken when the threshold is reached.
	Action pulumi.StringInput `pulumi:"action"`
	// Enable/disable anomaly logging.
	Log pulumi.StringInput `pulumi:"log"`
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
	// Quarantine method.
	Quarantine pulumi.StringInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging.
	QuarantineLog pulumi.StringInput `pulumi:"quarantineLog"`
	// Enable/disable this anomaly.
	Status pulumi.StringInput `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold pulumi.IntInput `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault pulumi.IntInput `pulumi:"thresholddefault"`
}

func (GetDoSpolicyAnomalyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicyAnomaly)(nil)).Elem()
}

func (i GetDoSpolicyAnomalyArgs) ToGetDoSpolicyAnomalyOutput() GetDoSpolicyAnomalyOutput {
	return i.ToGetDoSpolicyAnomalyOutputWithContext(context.Background())
}

func (i GetDoSpolicyAnomalyArgs) ToGetDoSpolicyAnomalyOutputWithContext(ctx context.Context) GetDoSpolicyAnomalyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicyAnomalyOutput)
}

// GetDoSpolicyAnomalyArrayInput is an input type that accepts GetDoSpolicyAnomalyArray and GetDoSpolicyAnomalyArrayOutput values.
// You can construct a concrete instance of `GetDoSpolicyAnomalyArrayInput` via:
//
//	GetDoSpolicyAnomalyArray{ GetDoSpolicyAnomalyArgs{...} }
type GetDoSpolicyAnomalyArrayInput interface {
	pulumi.Input

	ToGetDoSpolicyAnomalyArrayOutput() GetDoSpolicyAnomalyArrayOutput
	ToGetDoSpolicyAnomalyArrayOutputWithContext(context.Context) GetDoSpolicyAnomalyArrayOutput
}

type GetDoSpolicyAnomalyArray []GetDoSpolicyAnomalyInput

func (GetDoSpolicyAnomalyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicyAnomaly)(nil)).Elem()
}

func (i GetDoSpolicyAnomalyArray) ToGetDoSpolicyAnomalyArrayOutput() GetDoSpolicyAnomalyArrayOutput {
	return i.ToGetDoSpolicyAnomalyArrayOutputWithContext(context.Background())
}

func (i GetDoSpolicyAnomalyArray) ToGetDoSpolicyAnomalyArrayOutputWithContext(ctx context.Context) GetDoSpolicyAnomalyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicyAnomalyArrayOutput)
}

type GetDoSpolicyAnomalyOutput struct{ *pulumi.OutputState }

func (GetDoSpolicyAnomalyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicyAnomaly)(nil)).Elem()
}

func (o GetDoSpolicyAnomalyOutput) ToGetDoSpolicyAnomalyOutput() GetDoSpolicyAnomalyOutput {
	return o
}

func (o GetDoSpolicyAnomalyOutput) ToGetDoSpolicyAnomalyOutputWithContext(ctx context.Context) GetDoSpolicyAnomalyOutput {
	return o
}

// Action taken when the threshold is reached.
func (o GetDoSpolicyAnomalyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicyAnomaly) string { return v.Action }).(pulumi.StringOutput)
}

// Enable/disable anomaly logging.
func (o GetDoSpolicyAnomalyOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicyAnomaly) string { return v.Log }).(pulumi.StringOutput)
}

// Anomaly name.
func (o GetDoSpolicyAnomalyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicyAnomaly) string { return v.Name }).(pulumi.StringOutput)
}

// Quarantine method.
func (o GetDoSpolicyAnomalyOutput) Quarantine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicyAnomaly) string { return v.Quarantine }).(pulumi.StringOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o GetDoSpolicyAnomalyOutput) QuarantineExpiry() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicyAnomaly) string { return v.QuarantineExpiry }).(pulumi.StringOutput)
}

// Enable/disable quarantine logging.
func (o GetDoSpolicyAnomalyOutput) QuarantineLog() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicyAnomaly) string { return v.QuarantineLog }).(pulumi.StringOutput)
}

// Enable/disable this anomaly.
func (o GetDoSpolicyAnomalyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicyAnomaly) string { return v.Status }).(pulumi.StringOutput)
}

// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
func (o GetDoSpolicyAnomalyOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetDoSpolicyAnomaly) int { return v.Threshold }).(pulumi.IntOutput)
}

// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
func (o GetDoSpolicyAnomalyOutput) Thresholddefault() pulumi.IntOutput {
	return o.ApplyT(func(v GetDoSpolicyAnomaly) int { return v.Thresholddefault }).(pulumi.IntOutput)
}

type GetDoSpolicyAnomalyArrayOutput struct{ *pulumi.OutputState }

func (GetDoSpolicyAnomalyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicyAnomaly)(nil)).Elem()
}

func (o GetDoSpolicyAnomalyArrayOutput) ToGetDoSpolicyAnomalyArrayOutput() GetDoSpolicyAnomalyArrayOutput {
	return o
}

func (o GetDoSpolicyAnomalyArrayOutput) ToGetDoSpolicyAnomalyArrayOutputWithContext(ctx context.Context) GetDoSpolicyAnomalyArrayOutput {
	return o
}

func (o GetDoSpolicyAnomalyArrayOutput) Index(i pulumi.IntInput) GetDoSpolicyAnomalyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDoSpolicyAnomaly {
		return vs[0].([]GetDoSpolicyAnomaly)[vs[1].(int)]
	}).(GetDoSpolicyAnomalyOutput)
}

type GetDoSpolicyDstaddr struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetDoSpolicyDstaddrInput is an input type that accepts GetDoSpolicyDstaddrArgs and GetDoSpolicyDstaddrOutput values.
// You can construct a concrete instance of `GetDoSpolicyDstaddrInput` via:
//
//	GetDoSpolicyDstaddrArgs{...}
type GetDoSpolicyDstaddrInput interface {
	pulumi.Input

	ToGetDoSpolicyDstaddrOutput() GetDoSpolicyDstaddrOutput
	ToGetDoSpolicyDstaddrOutputWithContext(context.Context) GetDoSpolicyDstaddrOutput
}

type GetDoSpolicyDstaddrArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDoSpolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicyDstaddr)(nil)).Elem()
}

func (i GetDoSpolicyDstaddrArgs) ToGetDoSpolicyDstaddrOutput() GetDoSpolicyDstaddrOutput {
	return i.ToGetDoSpolicyDstaddrOutputWithContext(context.Background())
}

func (i GetDoSpolicyDstaddrArgs) ToGetDoSpolicyDstaddrOutputWithContext(ctx context.Context) GetDoSpolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicyDstaddrOutput)
}

// GetDoSpolicyDstaddrArrayInput is an input type that accepts GetDoSpolicyDstaddrArray and GetDoSpolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `GetDoSpolicyDstaddrArrayInput` via:
//
//	GetDoSpolicyDstaddrArray{ GetDoSpolicyDstaddrArgs{...} }
type GetDoSpolicyDstaddrArrayInput interface {
	pulumi.Input

	ToGetDoSpolicyDstaddrArrayOutput() GetDoSpolicyDstaddrArrayOutput
	ToGetDoSpolicyDstaddrArrayOutputWithContext(context.Context) GetDoSpolicyDstaddrArrayOutput
}

type GetDoSpolicyDstaddrArray []GetDoSpolicyDstaddrInput

func (GetDoSpolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicyDstaddr)(nil)).Elem()
}

func (i GetDoSpolicyDstaddrArray) ToGetDoSpolicyDstaddrArrayOutput() GetDoSpolicyDstaddrArrayOutput {
	return i.ToGetDoSpolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i GetDoSpolicyDstaddrArray) ToGetDoSpolicyDstaddrArrayOutputWithContext(ctx context.Context) GetDoSpolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicyDstaddrArrayOutput)
}

type GetDoSpolicyDstaddrOutput struct{ *pulumi.OutputState }

func (GetDoSpolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicyDstaddr)(nil)).Elem()
}

func (o GetDoSpolicyDstaddrOutput) ToGetDoSpolicyDstaddrOutput() GetDoSpolicyDstaddrOutput {
	return o
}

func (o GetDoSpolicyDstaddrOutput) ToGetDoSpolicyDstaddrOutputWithContext(ctx context.Context) GetDoSpolicyDstaddrOutput {
	return o
}

// Anomaly name.
func (o GetDoSpolicyDstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicyDstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetDoSpolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetDoSpolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicyDstaddr)(nil)).Elem()
}

func (o GetDoSpolicyDstaddrArrayOutput) ToGetDoSpolicyDstaddrArrayOutput() GetDoSpolicyDstaddrArrayOutput {
	return o
}

func (o GetDoSpolicyDstaddrArrayOutput) ToGetDoSpolicyDstaddrArrayOutputWithContext(ctx context.Context) GetDoSpolicyDstaddrArrayOutput {
	return o
}

func (o GetDoSpolicyDstaddrArrayOutput) Index(i pulumi.IntInput) GetDoSpolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDoSpolicyDstaddr {
		return vs[0].([]GetDoSpolicyDstaddr)[vs[1].(int)]
	}).(GetDoSpolicyDstaddrOutput)
}

type GetDoSpolicyService struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetDoSpolicyServiceInput is an input type that accepts GetDoSpolicyServiceArgs and GetDoSpolicyServiceOutput values.
// You can construct a concrete instance of `GetDoSpolicyServiceInput` via:
//
//	GetDoSpolicyServiceArgs{...}
type GetDoSpolicyServiceInput interface {
	pulumi.Input

	ToGetDoSpolicyServiceOutput() GetDoSpolicyServiceOutput
	ToGetDoSpolicyServiceOutputWithContext(context.Context) GetDoSpolicyServiceOutput
}

type GetDoSpolicyServiceArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDoSpolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicyService)(nil)).Elem()
}

func (i GetDoSpolicyServiceArgs) ToGetDoSpolicyServiceOutput() GetDoSpolicyServiceOutput {
	return i.ToGetDoSpolicyServiceOutputWithContext(context.Background())
}

func (i GetDoSpolicyServiceArgs) ToGetDoSpolicyServiceOutputWithContext(ctx context.Context) GetDoSpolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicyServiceOutput)
}

// GetDoSpolicyServiceArrayInput is an input type that accepts GetDoSpolicyServiceArray and GetDoSpolicyServiceArrayOutput values.
// You can construct a concrete instance of `GetDoSpolicyServiceArrayInput` via:
//
//	GetDoSpolicyServiceArray{ GetDoSpolicyServiceArgs{...} }
type GetDoSpolicyServiceArrayInput interface {
	pulumi.Input

	ToGetDoSpolicyServiceArrayOutput() GetDoSpolicyServiceArrayOutput
	ToGetDoSpolicyServiceArrayOutputWithContext(context.Context) GetDoSpolicyServiceArrayOutput
}

type GetDoSpolicyServiceArray []GetDoSpolicyServiceInput

func (GetDoSpolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicyService)(nil)).Elem()
}

func (i GetDoSpolicyServiceArray) ToGetDoSpolicyServiceArrayOutput() GetDoSpolicyServiceArrayOutput {
	return i.ToGetDoSpolicyServiceArrayOutputWithContext(context.Background())
}

func (i GetDoSpolicyServiceArray) ToGetDoSpolicyServiceArrayOutputWithContext(ctx context.Context) GetDoSpolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicyServiceArrayOutput)
}

type GetDoSpolicyServiceOutput struct{ *pulumi.OutputState }

func (GetDoSpolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicyService)(nil)).Elem()
}

func (o GetDoSpolicyServiceOutput) ToGetDoSpolicyServiceOutput() GetDoSpolicyServiceOutput {
	return o
}

func (o GetDoSpolicyServiceOutput) ToGetDoSpolicyServiceOutputWithContext(ctx context.Context) GetDoSpolicyServiceOutput {
	return o
}

// Anomaly name.
func (o GetDoSpolicyServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicyService) string { return v.Name }).(pulumi.StringOutput)
}

type GetDoSpolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (GetDoSpolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicyService)(nil)).Elem()
}

func (o GetDoSpolicyServiceArrayOutput) ToGetDoSpolicyServiceArrayOutput() GetDoSpolicyServiceArrayOutput {
	return o
}

func (o GetDoSpolicyServiceArrayOutput) ToGetDoSpolicyServiceArrayOutputWithContext(ctx context.Context) GetDoSpolicyServiceArrayOutput {
	return o
}

func (o GetDoSpolicyServiceArrayOutput) Index(i pulumi.IntInput) GetDoSpolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDoSpolicyService {
		return vs[0].([]GetDoSpolicyService)[vs[1].(int)]
	}).(GetDoSpolicyServiceOutput)
}

type GetDoSpolicySrcaddr struct {
	// Anomaly name.
	Name string `pulumi:"name"`
}

// GetDoSpolicySrcaddrInput is an input type that accepts GetDoSpolicySrcaddrArgs and GetDoSpolicySrcaddrOutput values.
// You can construct a concrete instance of `GetDoSpolicySrcaddrInput` via:
//
//	GetDoSpolicySrcaddrArgs{...}
type GetDoSpolicySrcaddrInput interface {
	pulumi.Input

	ToGetDoSpolicySrcaddrOutput() GetDoSpolicySrcaddrOutput
	ToGetDoSpolicySrcaddrOutputWithContext(context.Context) GetDoSpolicySrcaddrOutput
}

type GetDoSpolicySrcaddrArgs struct {
	// Anomaly name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDoSpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicySrcaddr)(nil)).Elem()
}

func (i GetDoSpolicySrcaddrArgs) ToGetDoSpolicySrcaddrOutput() GetDoSpolicySrcaddrOutput {
	return i.ToGetDoSpolicySrcaddrOutputWithContext(context.Background())
}

func (i GetDoSpolicySrcaddrArgs) ToGetDoSpolicySrcaddrOutputWithContext(ctx context.Context) GetDoSpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicySrcaddrOutput)
}

// GetDoSpolicySrcaddrArrayInput is an input type that accepts GetDoSpolicySrcaddrArray and GetDoSpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `GetDoSpolicySrcaddrArrayInput` via:
//
//	GetDoSpolicySrcaddrArray{ GetDoSpolicySrcaddrArgs{...} }
type GetDoSpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToGetDoSpolicySrcaddrArrayOutput() GetDoSpolicySrcaddrArrayOutput
	ToGetDoSpolicySrcaddrArrayOutputWithContext(context.Context) GetDoSpolicySrcaddrArrayOutput
}

type GetDoSpolicySrcaddrArray []GetDoSpolicySrcaddrInput

func (GetDoSpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicySrcaddr)(nil)).Elem()
}

func (i GetDoSpolicySrcaddrArray) ToGetDoSpolicySrcaddrArrayOutput() GetDoSpolicySrcaddrArrayOutput {
	return i.ToGetDoSpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i GetDoSpolicySrcaddrArray) ToGetDoSpolicySrcaddrArrayOutputWithContext(ctx context.Context) GetDoSpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDoSpolicySrcaddrArrayOutput)
}

type GetDoSpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (GetDoSpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDoSpolicySrcaddr)(nil)).Elem()
}

func (o GetDoSpolicySrcaddrOutput) ToGetDoSpolicySrcaddrOutput() GetDoSpolicySrcaddrOutput {
	return o
}

func (o GetDoSpolicySrcaddrOutput) ToGetDoSpolicySrcaddrOutputWithContext(ctx context.Context) GetDoSpolicySrcaddrOutput {
	return o
}

// Anomaly name.
func (o GetDoSpolicySrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDoSpolicySrcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetDoSpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetDoSpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDoSpolicySrcaddr)(nil)).Elem()
}

func (o GetDoSpolicySrcaddrArrayOutput) ToGetDoSpolicySrcaddrArrayOutput() GetDoSpolicySrcaddrArrayOutput {
	return o
}

func (o GetDoSpolicySrcaddrArrayOutput) ToGetDoSpolicySrcaddrArrayOutputWithContext(ctx context.Context) GetDoSpolicySrcaddrArrayOutput {
	return o
}

func (o GetDoSpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) GetDoSpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDoSpolicySrcaddr {
		return vs[0].([]GetDoSpolicySrcaddr)[vs[1].(int)]
	}).(GetDoSpolicySrcaddrOutput)
}

type GetInternetservicecustomEntry struct {
	// Address mode (IPv4 or IPv6)
	AddrMode string `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s []GetInternetservicecustomEntryDst6 `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts []GetInternetservicecustomEntryDst `pulumi:"dsts"`
	// Custom entry port range ID.
	Id int `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges []GetInternetservicecustomEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol int `pulumi:"protocol"`
}

// GetInternetservicecustomEntryInput is an input type that accepts GetInternetservicecustomEntryArgs and GetInternetservicecustomEntryOutput values.
// You can construct a concrete instance of `GetInternetservicecustomEntryInput` via:
//
//	GetInternetservicecustomEntryArgs{...}
type GetInternetservicecustomEntryInput interface {
	pulumi.Input

	ToGetInternetservicecustomEntryOutput() GetInternetservicecustomEntryOutput
	ToGetInternetservicecustomEntryOutputWithContext(context.Context) GetInternetservicecustomEntryOutput
}

type GetInternetservicecustomEntryArgs struct {
	// Address mode (IPv4 or IPv6)
	AddrMode pulumi.StringInput `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s GetInternetservicecustomEntryDst6ArrayInput `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts GetInternetservicecustomEntryDstArrayInput `pulumi:"dsts"`
	// Custom entry port range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges GetInternetservicecustomEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntInput `pulumi:"protocol"`
}

func (GetInternetservicecustomEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicecustomEntry)(nil)).Elem()
}

func (i GetInternetservicecustomEntryArgs) ToGetInternetservicecustomEntryOutput() GetInternetservicecustomEntryOutput {
	return i.ToGetInternetservicecustomEntryOutputWithContext(context.Background())
}

func (i GetInternetservicecustomEntryArgs) ToGetInternetservicecustomEntryOutputWithContext(ctx context.Context) GetInternetservicecustomEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicecustomEntryOutput)
}

// GetInternetservicecustomEntryArrayInput is an input type that accepts GetInternetservicecustomEntryArray and GetInternetservicecustomEntryArrayOutput values.
// You can construct a concrete instance of `GetInternetservicecustomEntryArrayInput` via:
//
//	GetInternetservicecustomEntryArray{ GetInternetservicecustomEntryArgs{...} }
type GetInternetservicecustomEntryArrayInput interface {
	pulumi.Input

	ToGetInternetservicecustomEntryArrayOutput() GetInternetservicecustomEntryArrayOutput
	ToGetInternetservicecustomEntryArrayOutputWithContext(context.Context) GetInternetservicecustomEntryArrayOutput
}

type GetInternetservicecustomEntryArray []GetInternetservicecustomEntryInput

func (GetInternetservicecustomEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicecustomEntry)(nil)).Elem()
}

func (i GetInternetservicecustomEntryArray) ToGetInternetservicecustomEntryArrayOutput() GetInternetservicecustomEntryArrayOutput {
	return i.ToGetInternetservicecustomEntryArrayOutputWithContext(context.Background())
}

func (i GetInternetservicecustomEntryArray) ToGetInternetservicecustomEntryArrayOutputWithContext(ctx context.Context) GetInternetservicecustomEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicecustomEntryArrayOutput)
}

type GetInternetservicecustomEntryOutput struct{ *pulumi.OutputState }

func (GetInternetservicecustomEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicecustomEntry)(nil)).Elem()
}

func (o GetInternetservicecustomEntryOutput) ToGetInternetservicecustomEntryOutput() GetInternetservicecustomEntryOutput {
	return o
}

func (o GetInternetservicecustomEntryOutput) ToGetInternetservicecustomEntryOutputWithContext(ctx context.Context) GetInternetservicecustomEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6)
func (o GetInternetservicecustomEntryOutput) AddrMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetservicecustomEntry) string { return v.AddrMode }).(pulumi.StringOutput)
}

// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
func (o GetInternetservicecustomEntryOutput) Dst6s() GetInternetservicecustomEntryDst6ArrayOutput {
	return o.ApplyT(func(v GetInternetservicecustomEntry) []GetInternetservicecustomEntryDst6 { return v.Dst6s }).(GetInternetservicecustomEntryDst6ArrayOutput)
}

// Destination address or address group name. The structure of `dst` block is documented below.
func (o GetInternetservicecustomEntryOutput) Dsts() GetInternetservicecustomEntryDstArrayOutput {
	return o.ApplyT(func(v GetInternetservicecustomEntry) []GetInternetservicecustomEntryDst { return v.Dsts }).(GetInternetservicecustomEntryDstArrayOutput)
}

// Custom entry port range ID.
func (o GetInternetservicecustomEntryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicecustomEntry) int { return v.Id }).(pulumi.IntOutput)
}

// Port ranges in the custom entry. The structure of `portRange` block is documented below.
func (o GetInternetservicecustomEntryOutput) PortRanges() GetInternetservicecustomEntryPortRangeArrayOutput {
	return o.ApplyT(func(v GetInternetservicecustomEntry) []GetInternetservicecustomEntryPortRange { return v.PortRanges }).(GetInternetservicecustomEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o GetInternetservicecustomEntryOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicecustomEntry) int { return v.Protocol }).(pulumi.IntOutput)
}

type GetInternetservicecustomEntryArrayOutput struct{ *pulumi.OutputState }

func (GetInternetservicecustomEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicecustomEntry)(nil)).Elem()
}

func (o GetInternetservicecustomEntryArrayOutput) ToGetInternetservicecustomEntryArrayOutput() GetInternetservicecustomEntryArrayOutput {
	return o
}

func (o GetInternetservicecustomEntryArrayOutput) ToGetInternetservicecustomEntryArrayOutputWithContext(ctx context.Context) GetInternetservicecustomEntryArrayOutput {
	return o
}

func (o GetInternetservicecustomEntryArrayOutput) Index(i pulumi.IntInput) GetInternetservicecustomEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetservicecustomEntry {
		return vs[0].([]GetInternetservicecustomEntry)[vs[1].(int)]
	}).(GetInternetservicecustomEntryOutput)
}

type GetInternetservicecustomEntryDst6 struct {
	// Specify the name of the desired firewall internetservicecustom.
	Name string `pulumi:"name"`
}

// GetInternetservicecustomEntryDst6Input is an input type that accepts GetInternetservicecustomEntryDst6Args and GetInternetservicecustomEntryDst6Output values.
// You can construct a concrete instance of `GetInternetservicecustomEntryDst6Input` via:
//
//	GetInternetservicecustomEntryDst6Args{...}
type GetInternetservicecustomEntryDst6Input interface {
	pulumi.Input

	ToGetInternetservicecustomEntryDst6Output() GetInternetservicecustomEntryDst6Output
	ToGetInternetservicecustomEntryDst6OutputWithContext(context.Context) GetInternetservicecustomEntryDst6Output
}

type GetInternetservicecustomEntryDst6Args struct {
	// Specify the name of the desired firewall internetservicecustom.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInternetservicecustomEntryDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicecustomEntryDst6)(nil)).Elem()
}

func (i GetInternetservicecustomEntryDst6Args) ToGetInternetservicecustomEntryDst6Output() GetInternetservicecustomEntryDst6Output {
	return i.ToGetInternetservicecustomEntryDst6OutputWithContext(context.Background())
}

func (i GetInternetservicecustomEntryDst6Args) ToGetInternetservicecustomEntryDst6OutputWithContext(ctx context.Context) GetInternetservicecustomEntryDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicecustomEntryDst6Output)
}

// GetInternetservicecustomEntryDst6ArrayInput is an input type that accepts GetInternetservicecustomEntryDst6Array and GetInternetservicecustomEntryDst6ArrayOutput values.
// You can construct a concrete instance of `GetInternetservicecustomEntryDst6ArrayInput` via:
//
//	GetInternetservicecustomEntryDst6Array{ GetInternetservicecustomEntryDst6Args{...} }
type GetInternetservicecustomEntryDst6ArrayInput interface {
	pulumi.Input

	ToGetInternetservicecustomEntryDst6ArrayOutput() GetInternetservicecustomEntryDst6ArrayOutput
	ToGetInternetservicecustomEntryDst6ArrayOutputWithContext(context.Context) GetInternetservicecustomEntryDst6ArrayOutput
}

type GetInternetservicecustomEntryDst6Array []GetInternetservicecustomEntryDst6Input

func (GetInternetservicecustomEntryDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicecustomEntryDst6)(nil)).Elem()
}

func (i GetInternetservicecustomEntryDst6Array) ToGetInternetservicecustomEntryDst6ArrayOutput() GetInternetservicecustomEntryDst6ArrayOutput {
	return i.ToGetInternetservicecustomEntryDst6ArrayOutputWithContext(context.Background())
}

func (i GetInternetservicecustomEntryDst6Array) ToGetInternetservicecustomEntryDst6ArrayOutputWithContext(ctx context.Context) GetInternetservicecustomEntryDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicecustomEntryDst6ArrayOutput)
}

type GetInternetservicecustomEntryDst6Output struct{ *pulumi.OutputState }

func (GetInternetservicecustomEntryDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicecustomEntryDst6)(nil)).Elem()
}

func (o GetInternetservicecustomEntryDst6Output) ToGetInternetservicecustomEntryDst6Output() GetInternetservicecustomEntryDst6Output {
	return o
}

func (o GetInternetservicecustomEntryDst6Output) ToGetInternetservicecustomEntryDst6OutputWithContext(ctx context.Context) GetInternetservicecustomEntryDst6Output {
	return o
}

// Specify the name of the desired firewall internetservicecustom.
func (o GetInternetservicecustomEntryDst6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetservicecustomEntryDst6) string { return v.Name }).(pulumi.StringOutput)
}

type GetInternetservicecustomEntryDst6ArrayOutput struct{ *pulumi.OutputState }

func (GetInternetservicecustomEntryDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicecustomEntryDst6)(nil)).Elem()
}

func (o GetInternetservicecustomEntryDst6ArrayOutput) ToGetInternetservicecustomEntryDst6ArrayOutput() GetInternetservicecustomEntryDst6ArrayOutput {
	return o
}

func (o GetInternetservicecustomEntryDst6ArrayOutput) ToGetInternetservicecustomEntryDst6ArrayOutputWithContext(ctx context.Context) GetInternetservicecustomEntryDst6ArrayOutput {
	return o
}

func (o GetInternetservicecustomEntryDst6ArrayOutput) Index(i pulumi.IntInput) GetInternetservicecustomEntryDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetservicecustomEntryDst6 {
		return vs[0].([]GetInternetservicecustomEntryDst6)[vs[1].(int)]
	}).(GetInternetservicecustomEntryDst6Output)
}

type GetInternetservicecustomEntryDst struct {
	// Specify the name of the desired firewall internetservicecustom.
	Name string `pulumi:"name"`
}

// GetInternetservicecustomEntryDstInput is an input type that accepts GetInternetservicecustomEntryDstArgs and GetInternetservicecustomEntryDstOutput values.
// You can construct a concrete instance of `GetInternetservicecustomEntryDstInput` via:
//
//	GetInternetservicecustomEntryDstArgs{...}
type GetInternetservicecustomEntryDstInput interface {
	pulumi.Input

	ToGetInternetservicecustomEntryDstOutput() GetInternetservicecustomEntryDstOutput
	ToGetInternetservicecustomEntryDstOutputWithContext(context.Context) GetInternetservicecustomEntryDstOutput
}

type GetInternetservicecustomEntryDstArgs struct {
	// Specify the name of the desired firewall internetservicecustom.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInternetservicecustomEntryDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicecustomEntryDst)(nil)).Elem()
}

func (i GetInternetservicecustomEntryDstArgs) ToGetInternetservicecustomEntryDstOutput() GetInternetservicecustomEntryDstOutput {
	return i.ToGetInternetservicecustomEntryDstOutputWithContext(context.Background())
}

func (i GetInternetservicecustomEntryDstArgs) ToGetInternetservicecustomEntryDstOutputWithContext(ctx context.Context) GetInternetservicecustomEntryDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicecustomEntryDstOutput)
}

// GetInternetservicecustomEntryDstArrayInput is an input type that accepts GetInternetservicecustomEntryDstArray and GetInternetservicecustomEntryDstArrayOutput values.
// You can construct a concrete instance of `GetInternetservicecustomEntryDstArrayInput` via:
//
//	GetInternetservicecustomEntryDstArray{ GetInternetservicecustomEntryDstArgs{...} }
type GetInternetservicecustomEntryDstArrayInput interface {
	pulumi.Input

	ToGetInternetservicecustomEntryDstArrayOutput() GetInternetservicecustomEntryDstArrayOutput
	ToGetInternetservicecustomEntryDstArrayOutputWithContext(context.Context) GetInternetservicecustomEntryDstArrayOutput
}

type GetInternetservicecustomEntryDstArray []GetInternetservicecustomEntryDstInput

func (GetInternetservicecustomEntryDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicecustomEntryDst)(nil)).Elem()
}

func (i GetInternetservicecustomEntryDstArray) ToGetInternetservicecustomEntryDstArrayOutput() GetInternetservicecustomEntryDstArrayOutput {
	return i.ToGetInternetservicecustomEntryDstArrayOutputWithContext(context.Background())
}

func (i GetInternetservicecustomEntryDstArray) ToGetInternetservicecustomEntryDstArrayOutputWithContext(ctx context.Context) GetInternetservicecustomEntryDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicecustomEntryDstArrayOutput)
}

type GetInternetservicecustomEntryDstOutput struct{ *pulumi.OutputState }

func (GetInternetservicecustomEntryDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicecustomEntryDst)(nil)).Elem()
}

func (o GetInternetservicecustomEntryDstOutput) ToGetInternetservicecustomEntryDstOutput() GetInternetservicecustomEntryDstOutput {
	return o
}

func (o GetInternetservicecustomEntryDstOutput) ToGetInternetservicecustomEntryDstOutputWithContext(ctx context.Context) GetInternetservicecustomEntryDstOutput {
	return o
}

// Specify the name of the desired firewall internetservicecustom.
func (o GetInternetservicecustomEntryDstOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetservicecustomEntryDst) string { return v.Name }).(pulumi.StringOutput)
}

type GetInternetservicecustomEntryDstArrayOutput struct{ *pulumi.OutputState }

func (GetInternetservicecustomEntryDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicecustomEntryDst)(nil)).Elem()
}

func (o GetInternetservicecustomEntryDstArrayOutput) ToGetInternetservicecustomEntryDstArrayOutput() GetInternetservicecustomEntryDstArrayOutput {
	return o
}

func (o GetInternetservicecustomEntryDstArrayOutput) ToGetInternetservicecustomEntryDstArrayOutputWithContext(ctx context.Context) GetInternetservicecustomEntryDstArrayOutput {
	return o
}

func (o GetInternetservicecustomEntryDstArrayOutput) Index(i pulumi.IntInput) GetInternetservicecustomEntryDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetservicecustomEntryDst {
		return vs[0].([]GetInternetservicecustomEntryDst)[vs[1].(int)]
	}).(GetInternetservicecustomEntryDstOutput)
}

type GetInternetservicecustomEntryPortRange struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id int `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort int `pulumi:"startPort"`
}

// GetInternetservicecustomEntryPortRangeInput is an input type that accepts GetInternetservicecustomEntryPortRangeArgs and GetInternetservicecustomEntryPortRangeOutput values.
// You can construct a concrete instance of `GetInternetservicecustomEntryPortRangeInput` via:
//
//	GetInternetservicecustomEntryPortRangeArgs{...}
type GetInternetservicecustomEntryPortRangeInput interface {
	pulumi.Input

	ToGetInternetservicecustomEntryPortRangeOutput() GetInternetservicecustomEntryPortRangeOutput
	ToGetInternetservicecustomEntryPortRangeOutputWithContext(context.Context) GetInternetservicecustomEntryPortRangeOutput
}

type GetInternetservicecustomEntryPortRangeArgs struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (GetInternetservicecustomEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (i GetInternetservicecustomEntryPortRangeArgs) ToGetInternetservicecustomEntryPortRangeOutput() GetInternetservicecustomEntryPortRangeOutput {
	return i.ToGetInternetservicecustomEntryPortRangeOutputWithContext(context.Background())
}

func (i GetInternetservicecustomEntryPortRangeArgs) ToGetInternetservicecustomEntryPortRangeOutputWithContext(ctx context.Context) GetInternetservicecustomEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicecustomEntryPortRangeOutput)
}

// GetInternetservicecustomEntryPortRangeArrayInput is an input type that accepts GetInternetservicecustomEntryPortRangeArray and GetInternetservicecustomEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `GetInternetservicecustomEntryPortRangeArrayInput` via:
//
//	GetInternetservicecustomEntryPortRangeArray{ GetInternetservicecustomEntryPortRangeArgs{...} }
type GetInternetservicecustomEntryPortRangeArrayInput interface {
	pulumi.Input

	ToGetInternetservicecustomEntryPortRangeArrayOutput() GetInternetservicecustomEntryPortRangeArrayOutput
	ToGetInternetservicecustomEntryPortRangeArrayOutputWithContext(context.Context) GetInternetservicecustomEntryPortRangeArrayOutput
}

type GetInternetservicecustomEntryPortRangeArray []GetInternetservicecustomEntryPortRangeInput

func (GetInternetservicecustomEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (i GetInternetservicecustomEntryPortRangeArray) ToGetInternetservicecustomEntryPortRangeArrayOutput() GetInternetservicecustomEntryPortRangeArrayOutput {
	return i.ToGetInternetservicecustomEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i GetInternetservicecustomEntryPortRangeArray) ToGetInternetservicecustomEntryPortRangeArrayOutputWithContext(ctx context.Context) GetInternetservicecustomEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicecustomEntryPortRangeArrayOutput)
}

type GetInternetservicecustomEntryPortRangeOutput struct{ *pulumi.OutputState }

func (GetInternetservicecustomEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (o GetInternetservicecustomEntryPortRangeOutput) ToGetInternetservicecustomEntryPortRangeOutput() GetInternetservicecustomEntryPortRangeOutput {
	return o
}

func (o GetInternetservicecustomEntryPortRangeOutput) ToGetInternetservicecustomEntryPortRangeOutputWithContext(ctx context.Context) GetInternetservicecustomEntryPortRangeOutput {
	return o
}

// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
func (o GetInternetservicecustomEntryPortRangeOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicecustomEntryPortRange) int { return v.EndPort }).(pulumi.IntOutput)
}

// Custom entry port range ID.
func (o GetInternetservicecustomEntryPortRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicecustomEntryPortRange) int { return v.Id }).(pulumi.IntOutput)
}

// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
func (o GetInternetservicecustomEntryPortRangeOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicecustomEntryPortRange) int { return v.StartPort }).(pulumi.IntOutput)
}

type GetInternetservicecustomEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetInternetservicecustomEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (o GetInternetservicecustomEntryPortRangeArrayOutput) ToGetInternetservicecustomEntryPortRangeArrayOutput() GetInternetservicecustomEntryPortRangeArrayOutput {
	return o
}

func (o GetInternetservicecustomEntryPortRangeArrayOutput) ToGetInternetservicecustomEntryPortRangeArrayOutputWithContext(ctx context.Context) GetInternetservicecustomEntryPortRangeArrayOutput {
	return o
}

func (o GetInternetservicecustomEntryPortRangeArrayOutput) Index(i pulumi.IntInput) GetInternetservicecustomEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetservicecustomEntryPortRange {
		return vs[0].([]GetInternetservicecustomEntryPortRange)[vs[1].(int)]
	}).(GetInternetservicecustomEntryPortRangeOutput)
}

type GetInternetservicecustomgroupMember struct {
	// Specify the name of the desired firewall internetservicecustomgroup.
	Name string `pulumi:"name"`
}

// GetInternetservicecustomgroupMemberInput is an input type that accepts GetInternetservicecustomgroupMemberArgs and GetInternetservicecustomgroupMemberOutput values.
// You can construct a concrete instance of `GetInternetservicecustomgroupMemberInput` via:
//
//	GetInternetservicecustomgroupMemberArgs{...}
type GetInternetservicecustomgroupMemberInput interface {
	pulumi.Input

	ToGetInternetservicecustomgroupMemberOutput() GetInternetservicecustomgroupMemberOutput
	ToGetInternetservicecustomgroupMemberOutputWithContext(context.Context) GetInternetservicecustomgroupMemberOutput
}

type GetInternetservicecustomgroupMemberArgs struct {
	// Specify the name of the desired firewall internetservicecustomgroup.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInternetservicecustomgroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicecustomgroupMember)(nil)).Elem()
}

func (i GetInternetservicecustomgroupMemberArgs) ToGetInternetservicecustomgroupMemberOutput() GetInternetservicecustomgroupMemberOutput {
	return i.ToGetInternetservicecustomgroupMemberOutputWithContext(context.Background())
}

func (i GetInternetservicecustomgroupMemberArgs) ToGetInternetservicecustomgroupMemberOutputWithContext(ctx context.Context) GetInternetservicecustomgroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicecustomgroupMemberOutput)
}

// GetInternetservicecustomgroupMemberArrayInput is an input type that accepts GetInternetservicecustomgroupMemberArray and GetInternetservicecustomgroupMemberArrayOutput values.
// You can construct a concrete instance of `GetInternetservicecustomgroupMemberArrayInput` via:
//
//	GetInternetservicecustomgroupMemberArray{ GetInternetservicecustomgroupMemberArgs{...} }
type GetInternetservicecustomgroupMemberArrayInput interface {
	pulumi.Input

	ToGetInternetservicecustomgroupMemberArrayOutput() GetInternetservicecustomgroupMemberArrayOutput
	ToGetInternetservicecustomgroupMemberArrayOutputWithContext(context.Context) GetInternetservicecustomgroupMemberArrayOutput
}

type GetInternetservicecustomgroupMemberArray []GetInternetservicecustomgroupMemberInput

func (GetInternetservicecustomgroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicecustomgroupMember)(nil)).Elem()
}

func (i GetInternetservicecustomgroupMemberArray) ToGetInternetservicecustomgroupMemberArrayOutput() GetInternetservicecustomgroupMemberArrayOutput {
	return i.ToGetInternetservicecustomgroupMemberArrayOutputWithContext(context.Background())
}

func (i GetInternetservicecustomgroupMemberArray) ToGetInternetservicecustomgroupMemberArrayOutputWithContext(ctx context.Context) GetInternetservicecustomgroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicecustomgroupMemberArrayOutput)
}

type GetInternetservicecustomgroupMemberOutput struct{ *pulumi.OutputState }

func (GetInternetservicecustomgroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicecustomgroupMember)(nil)).Elem()
}

func (o GetInternetservicecustomgroupMemberOutput) ToGetInternetservicecustomgroupMemberOutput() GetInternetservicecustomgroupMemberOutput {
	return o
}

func (o GetInternetservicecustomgroupMemberOutput) ToGetInternetservicecustomgroupMemberOutputWithContext(ctx context.Context) GetInternetservicecustomgroupMemberOutput {
	return o
}

// Specify the name of the desired firewall internetservicecustomgroup.
func (o GetInternetservicecustomgroupMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetservicecustomgroupMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetInternetservicecustomgroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GetInternetservicecustomgroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicecustomgroupMember)(nil)).Elem()
}

func (o GetInternetservicecustomgroupMemberArrayOutput) ToGetInternetservicecustomgroupMemberArrayOutput() GetInternetservicecustomgroupMemberArrayOutput {
	return o
}

func (o GetInternetservicecustomgroupMemberArrayOutput) ToGetInternetservicecustomgroupMemberArrayOutputWithContext(ctx context.Context) GetInternetservicecustomgroupMemberArrayOutput {
	return o
}

func (o GetInternetservicecustomgroupMemberArrayOutput) Index(i pulumi.IntInput) GetInternetservicecustomgroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetservicecustomgroupMember {
		return vs[0].([]GetInternetservicecustomgroupMember)[vs[1].(int)]
	}).(GetInternetservicecustomgroupMemberOutput)
}

type GetInternetservicedefinitionEntry struct {
	// Internet Service category ID.
	CategoryId int `pulumi:"categoryId"`
	// Internet Service name.
	Name string `pulumi:"name"`
	// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
	Port int `pulumi:"port"`
	// Port ranges in the definition entry. The structure of `portRange` block is documented below.
	PortRanges []GetInternetservicedefinitionEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol int `pulumi:"protocol"`
	// Entry sequence number.
	SeqNum int `pulumi:"seqNum"`
}

// GetInternetservicedefinitionEntryInput is an input type that accepts GetInternetservicedefinitionEntryArgs and GetInternetservicedefinitionEntryOutput values.
// You can construct a concrete instance of `GetInternetservicedefinitionEntryInput` via:
//
//	GetInternetservicedefinitionEntryArgs{...}
type GetInternetservicedefinitionEntryInput interface {
	pulumi.Input

	ToGetInternetservicedefinitionEntryOutput() GetInternetservicedefinitionEntryOutput
	ToGetInternetservicedefinitionEntryOutputWithContext(context.Context) GetInternetservicedefinitionEntryOutput
}

type GetInternetservicedefinitionEntryArgs struct {
	// Internet Service category ID.
	CategoryId pulumi.IntInput `pulumi:"categoryId"`
	// Internet Service name.
	Name pulumi.StringInput `pulumi:"name"`
	// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
	Port pulumi.IntInput `pulumi:"port"`
	// Port ranges in the definition entry. The structure of `portRange` block is documented below.
	PortRanges GetInternetservicedefinitionEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// Entry sequence number.
	SeqNum pulumi.IntInput `pulumi:"seqNum"`
}

func (GetInternetservicedefinitionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicedefinitionEntry)(nil)).Elem()
}

func (i GetInternetservicedefinitionEntryArgs) ToGetInternetservicedefinitionEntryOutput() GetInternetservicedefinitionEntryOutput {
	return i.ToGetInternetservicedefinitionEntryOutputWithContext(context.Background())
}

func (i GetInternetservicedefinitionEntryArgs) ToGetInternetservicedefinitionEntryOutputWithContext(ctx context.Context) GetInternetservicedefinitionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicedefinitionEntryOutput)
}

// GetInternetservicedefinitionEntryArrayInput is an input type that accepts GetInternetservicedefinitionEntryArray and GetInternetservicedefinitionEntryArrayOutput values.
// You can construct a concrete instance of `GetInternetservicedefinitionEntryArrayInput` via:
//
//	GetInternetservicedefinitionEntryArray{ GetInternetservicedefinitionEntryArgs{...} }
type GetInternetservicedefinitionEntryArrayInput interface {
	pulumi.Input

	ToGetInternetservicedefinitionEntryArrayOutput() GetInternetservicedefinitionEntryArrayOutput
	ToGetInternetservicedefinitionEntryArrayOutputWithContext(context.Context) GetInternetservicedefinitionEntryArrayOutput
}

type GetInternetservicedefinitionEntryArray []GetInternetservicedefinitionEntryInput

func (GetInternetservicedefinitionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicedefinitionEntry)(nil)).Elem()
}

func (i GetInternetservicedefinitionEntryArray) ToGetInternetservicedefinitionEntryArrayOutput() GetInternetservicedefinitionEntryArrayOutput {
	return i.ToGetInternetservicedefinitionEntryArrayOutputWithContext(context.Background())
}

func (i GetInternetservicedefinitionEntryArray) ToGetInternetservicedefinitionEntryArrayOutputWithContext(ctx context.Context) GetInternetservicedefinitionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicedefinitionEntryArrayOutput)
}

type GetInternetservicedefinitionEntryOutput struct{ *pulumi.OutputState }

func (GetInternetservicedefinitionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicedefinitionEntry)(nil)).Elem()
}

func (o GetInternetservicedefinitionEntryOutput) ToGetInternetservicedefinitionEntryOutput() GetInternetservicedefinitionEntryOutput {
	return o
}

func (o GetInternetservicedefinitionEntryOutput) ToGetInternetservicedefinitionEntryOutputWithContext(ctx context.Context) GetInternetservicedefinitionEntryOutput {
	return o
}

// Internet Service category ID.
func (o GetInternetservicedefinitionEntryOutput) CategoryId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicedefinitionEntry) int { return v.CategoryId }).(pulumi.IntOutput)
}

// Internet Service name.
func (o GetInternetservicedefinitionEntryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetservicedefinitionEntry) string { return v.Name }).(pulumi.StringOutput)
}

// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
func (o GetInternetservicedefinitionEntryOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicedefinitionEntry) int { return v.Port }).(pulumi.IntOutput)
}

// Port ranges in the definition entry. The structure of `portRange` block is documented below.
func (o GetInternetservicedefinitionEntryOutput) PortRanges() GetInternetservicedefinitionEntryPortRangeArrayOutput {
	return o.ApplyT(func(v GetInternetservicedefinitionEntry) []GetInternetservicedefinitionEntryPortRange {
		return v.PortRanges
	}).(GetInternetservicedefinitionEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o GetInternetservicedefinitionEntryOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicedefinitionEntry) int { return v.Protocol }).(pulumi.IntOutput)
}

// Entry sequence number.
func (o GetInternetservicedefinitionEntryOutput) SeqNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicedefinitionEntry) int { return v.SeqNum }).(pulumi.IntOutput)
}

type GetInternetservicedefinitionEntryArrayOutput struct{ *pulumi.OutputState }

func (GetInternetservicedefinitionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicedefinitionEntry)(nil)).Elem()
}

func (o GetInternetservicedefinitionEntryArrayOutput) ToGetInternetservicedefinitionEntryArrayOutput() GetInternetservicedefinitionEntryArrayOutput {
	return o
}

func (o GetInternetservicedefinitionEntryArrayOutput) ToGetInternetservicedefinitionEntryArrayOutputWithContext(ctx context.Context) GetInternetservicedefinitionEntryArrayOutput {
	return o
}

func (o GetInternetservicedefinitionEntryArrayOutput) Index(i pulumi.IntInput) GetInternetservicedefinitionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetservicedefinitionEntry {
		return vs[0].([]GetInternetservicedefinitionEntry)[vs[1].(int)]
	}).(GetInternetservicedefinitionEntryOutput)
}

type GetInternetservicedefinitionEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort int `pulumi:"startPort"`
}

// GetInternetservicedefinitionEntryPortRangeInput is an input type that accepts GetInternetservicedefinitionEntryPortRangeArgs and GetInternetservicedefinitionEntryPortRangeOutput values.
// You can construct a concrete instance of `GetInternetservicedefinitionEntryPortRangeInput` via:
//
//	GetInternetservicedefinitionEntryPortRangeArgs{...}
type GetInternetservicedefinitionEntryPortRangeInput interface {
	pulumi.Input

	ToGetInternetservicedefinitionEntryPortRangeOutput() GetInternetservicedefinitionEntryPortRangeOutput
	ToGetInternetservicedefinitionEntryPortRangeOutputWithContext(context.Context) GetInternetservicedefinitionEntryPortRangeOutput
}

type GetInternetservicedefinitionEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (GetInternetservicedefinitionEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (i GetInternetservicedefinitionEntryPortRangeArgs) ToGetInternetservicedefinitionEntryPortRangeOutput() GetInternetservicedefinitionEntryPortRangeOutput {
	return i.ToGetInternetservicedefinitionEntryPortRangeOutputWithContext(context.Background())
}

func (i GetInternetservicedefinitionEntryPortRangeArgs) ToGetInternetservicedefinitionEntryPortRangeOutputWithContext(ctx context.Context) GetInternetservicedefinitionEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicedefinitionEntryPortRangeOutput)
}

// GetInternetservicedefinitionEntryPortRangeArrayInput is an input type that accepts GetInternetservicedefinitionEntryPortRangeArray and GetInternetservicedefinitionEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `GetInternetservicedefinitionEntryPortRangeArrayInput` via:
//
//	GetInternetservicedefinitionEntryPortRangeArray{ GetInternetservicedefinitionEntryPortRangeArgs{...} }
type GetInternetservicedefinitionEntryPortRangeArrayInput interface {
	pulumi.Input

	ToGetInternetservicedefinitionEntryPortRangeArrayOutput() GetInternetservicedefinitionEntryPortRangeArrayOutput
	ToGetInternetservicedefinitionEntryPortRangeArrayOutputWithContext(context.Context) GetInternetservicedefinitionEntryPortRangeArrayOutput
}

type GetInternetservicedefinitionEntryPortRangeArray []GetInternetservicedefinitionEntryPortRangeInput

func (GetInternetservicedefinitionEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (i GetInternetservicedefinitionEntryPortRangeArray) ToGetInternetservicedefinitionEntryPortRangeArrayOutput() GetInternetservicedefinitionEntryPortRangeArrayOutput {
	return i.ToGetInternetservicedefinitionEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i GetInternetservicedefinitionEntryPortRangeArray) ToGetInternetservicedefinitionEntryPortRangeArrayOutputWithContext(ctx context.Context) GetInternetservicedefinitionEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicedefinitionEntryPortRangeArrayOutput)
}

type GetInternetservicedefinitionEntryPortRangeOutput struct{ *pulumi.OutputState }

func (GetInternetservicedefinitionEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (o GetInternetservicedefinitionEntryPortRangeOutput) ToGetInternetservicedefinitionEntryPortRangeOutput() GetInternetservicedefinitionEntryPortRangeOutput {
	return o
}

func (o GetInternetservicedefinitionEntryPortRangeOutput) ToGetInternetservicedefinitionEntryPortRangeOutputWithContext(ctx context.Context) GetInternetservicedefinitionEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o GetInternetservicedefinitionEntryPortRangeOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicedefinitionEntryPortRange) int { return v.EndPort }).(pulumi.IntOutput)
}

// Custom entry port range ID.
func (o GetInternetservicedefinitionEntryPortRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicedefinitionEntryPortRange) int { return v.Id }).(pulumi.IntOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o GetInternetservicedefinitionEntryPortRangeOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicedefinitionEntryPortRange) int { return v.StartPort }).(pulumi.IntOutput)
}

type GetInternetservicedefinitionEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetInternetservicedefinitionEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (o GetInternetservicedefinitionEntryPortRangeArrayOutput) ToGetInternetservicedefinitionEntryPortRangeArrayOutput() GetInternetservicedefinitionEntryPortRangeArrayOutput {
	return o
}

func (o GetInternetservicedefinitionEntryPortRangeArrayOutput) ToGetInternetservicedefinitionEntryPortRangeArrayOutputWithContext(ctx context.Context) GetInternetservicedefinitionEntryPortRangeArrayOutput {
	return o
}

func (o GetInternetservicedefinitionEntryPortRangeArrayOutput) Index(i pulumi.IntInput) GetInternetservicedefinitionEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetservicedefinitionEntryPortRange {
		return vs[0].([]GetInternetservicedefinitionEntryPortRange)[vs[1].(int)]
	}).(GetInternetservicedefinitionEntryPortRangeOutput)
}

type GetInternetserviceextensionDisableEntry struct {
	// Address mode (IPv4 or IPv6)
	AddrMode string `pulumi:"addrMode"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
	Ip6Ranges []GetInternetserviceextensionDisableEntryIp6Range `pulumi:"ip6Ranges"`
	// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
	IpRanges []GetInternetserviceextensionDisableEntryIpRange `pulumi:"ipRanges"`
	// Integer value for the TCP/IP port (0 - 65535).
	Port int `pulumi:"port"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges []GetInternetserviceextensionDisableEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol int `pulumi:"protocol"`
}

// GetInternetserviceextensionDisableEntryInput is an input type that accepts GetInternetserviceextensionDisableEntryArgs and GetInternetserviceextensionDisableEntryOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionDisableEntryInput` via:
//
//	GetInternetserviceextensionDisableEntryArgs{...}
type GetInternetserviceextensionDisableEntryInput interface {
	pulumi.Input

	ToGetInternetserviceextensionDisableEntryOutput() GetInternetserviceextensionDisableEntryOutput
	ToGetInternetserviceextensionDisableEntryOutputWithContext(context.Context) GetInternetserviceextensionDisableEntryOutput
}

type GetInternetserviceextensionDisableEntryArgs struct {
	// Address mode (IPv4 or IPv6)
	AddrMode pulumi.StringInput `pulumi:"addrMode"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
	Ip6Ranges GetInternetserviceextensionDisableEntryIp6RangeArrayInput `pulumi:"ip6Ranges"`
	// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
	IpRanges GetInternetserviceextensionDisableEntryIpRangeArrayInput `pulumi:"ipRanges"`
	// Integer value for the TCP/IP port (0 - 65535).
	Port pulumi.IntInput `pulumi:"port"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges GetInternetserviceextensionDisableEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntInput `pulumi:"protocol"`
}

func (GetInternetserviceextensionDisableEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (i GetInternetserviceextensionDisableEntryArgs) ToGetInternetserviceextensionDisableEntryOutput() GetInternetserviceextensionDisableEntryOutput {
	return i.ToGetInternetserviceextensionDisableEntryOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionDisableEntryArgs) ToGetInternetserviceextensionDisableEntryOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionDisableEntryOutput)
}

// GetInternetserviceextensionDisableEntryArrayInput is an input type that accepts GetInternetserviceextensionDisableEntryArray and GetInternetserviceextensionDisableEntryArrayOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionDisableEntryArrayInput` via:
//
//	GetInternetserviceextensionDisableEntryArray{ GetInternetserviceextensionDisableEntryArgs{...} }
type GetInternetserviceextensionDisableEntryArrayInput interface {
	pulumi.Input

	ToGetInternetserviceextensionDisableEntryArrayOutput() GetInternetserviceextensionDisableEntryArrayOutput
	ToGetInternetserviceextensionDisableEntryArrayOutputWithContext(context.Context) GetInternetserviceextensionDisableEntryArrayOutput
}

type GetInternetserviceextensionDisableEntryArray []GetInternetserviceextensionDisableEntryInput

func (GetInternetserviceextensionDisableEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (i GetInternetserviceextensionDisableEntryArray) ToGetInternetserviceextensionDisableEntryArrayOutput() GetInternetserviceextensionDisableEntryArrayOutput {
	return i.ToGetInternetserviceextensionDisableEntryArrayOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionDisableEntryArray) ToGetInternetserviceextensionDisableEntryArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionDisableEntryArrayOutput)
}

type GetInternetserviceextensionDisableEntryOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionDisableEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (o GetInternetserviceextensionDisableEntryOutput) ToGetInternetserviceextensionDisableEntryOutput() GetInternetserviceextensionDisableEntryOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryOutput) ToGetInternetserviceextensionDisableEntryOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6)
func (o GetInternetserviceextensionDisableEntryOutput) AddrMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntry) string { return v.AddrMode }).(pulumi.StringOutput)
}

// Disable entry range ID.
func (o GetInternetserviceextensionDisableEntryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntry) int { return v.Id }).(pulumi.IntOutput)
}

// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
func (o GetInternetserviceextensionDisableEntryOutput) Ip6Ranges() GetInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntry) []GetInternetserviceextensionDisableEntryIp6Range {
		return v.Ip6Ranges
	}).(GetInternetserviceextensionDisableEntryIp6RangeArrayOutput)
}

// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
func (o GetInternetserviceextensionDisableEntryOutput) IpRanges() GetInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntry) []GetInternetserviceextensionDisableEntryIpRange {
		return v.IpRanges
	}).(GetInternetserviceextensionDisableEntryIpRangeArrayOutput)
}

// Integer value for the TCP/IP port (0 - 65535).
func (o GetInternetserviceextensionDisableEntryOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntry) int { return v.Port }).(pulumi.IntOutput)
}

// Port ranges in the disable entry. The structure of `portRange` block is documented below.
func (o GetInternetserviceextensionDisableEntryOutput) PortRanges() GetInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntry) []GetInternetserviceextensionDisableEntryPortRange {
		return v.PortRanges
	}).(GetInternetserviceextensionDisableEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o GetInternetserviceextensionDisableEntryOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntry) int { return v.Protocol }).(pulumi.IntOutput)
}

type GetInternetserviceextensionDisableEntryArrayOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionDisableEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (o GetInternetserviceextensionDisableEntryArrayOutput) ToGetInternetserviceextensionDisableEntryArrayOutput() GetInternetserviceextensionDisableEntryArrayOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryArrayOutput) ToGetInternetserviceextensionDisableEntryArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryArrayOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryArrayOutput) Index(i pulumi.IntInput) GetInternetserviceextensionDisableEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetserviceextensionDisableEntry {
		return vs[0].([]GetInternetserviceextensionDisableEntry)[vs[1].(int)]
	}).(GetInternetserviceextensionDisableEntryOutput)
}

type GetInternetserviceextensionDisableEntryIp6Range struct {
	// End IPv6 address.
	EndIp6 string `pulumi:"endIp6"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// Start IPv6 address.
	StartIp6 string `pulumi:"startIp6"`
}

// GetInternetserviceextensionDisableEntryIp6RangeInput is an input type that accepts GetInternetserviceextensionDisableEntryIp6RangeArgs and GetInternetserviceextensionDisableEntryIp6RangeOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionDisableEntryIp6RangeInput` via:
//
//	GetInternetserviceextensionDisableEntryIp6RangeArgs{...}
type GetInternetserviceextensionDisableEntryIp6RangeInput interface {
	pulumi.Input

	ToGetInternetserviceextensionDisableEntryIp6RangeOutput() GetInternetserviceextensionDisableEntryIp6RangeOutput
	ToGetInternetserviceextensionDisableEntryIp6RangeOutputWithContext(context.Context) GetInternetserviceextensionDisableEntryIp6RangeOutput
}

type GetInternetserviceextensionDisableEntryIp6RangeArgs struct {
	// End IPv6 address.
	EndIp6 pulumi.StringInput `pulumi:"endIp6"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Start IPv6 address.
	StartIp6 pulumi.StringInput `pulumi:"startIp6"`
}

func (GetInternetserviceextensionDisableEntryIp6RangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (i GetInternetserviceextensionDisableEntryIp6RangeArgs) ToGetInternetserviceextensionDisableEntryIp6RangeOutput() GetInternetserviceextensionDisableEntryIp6RangeOutput {
	return i.ToGetInternetserviceextensionDisableEntryIp6RangeOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionDisableEntryIp6RangeArgs) ToGetInternetserviceextensionDisableEntryIp6RangeOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryIp6RangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionDisableEntryIp6RangeOutput)
}

// GetInternetserviceextensionDisableEntryIp6RangeArrayInput is an input type that accepts GetInternetserviceextensionDisableEntryIp6RangeArray and GetInternetserviceextensionDisableEntryIp6RangeArrayOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionDisableEntryIp6RangeArrayInput` via:
//
//	GetInternetserviceextensionDisableEntryIp6RangeArray{ GetInternetserviceextensionDisableEntryIp6RangeArgs{...} }
type GetInternetserviceextensionDisableEntryIp6RangeArrayInput interface {
	pulumi.Input

	ToGetInternetserviceextensionDisableEntryIp6RangeArrayOutput() GetInternetserviceextensionDisableEntryIp6RangeArrayOutput
	ToGetInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(context.Context) GetInternetserviceextensionDisableEntryIp6RangeArrayOutput
}

type GetInternetserviceextensionDisableEntryIp6RangeArray []GetInternetserviceextensionDisableEntryIp6RangeInput

func (GetInternetserviceextensionDisableEntryIp6RangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (i GetInternetserviceextensionDisableEntryIp6RangeArray) ToGetInternetserviceextensionDisableEntryIp6RangeArrayOutput() GetInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return i.ToGetInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionDisableEntryIp6RangeArray) ToGetInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionDisableEntryIp6RangeArrayOutput)
}

type GetInternetserviceextensionDisableEntryIp6RangeOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionDisableEntryIp6RangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (o GetInternetserviceextensionDisableEntryIp6RangeOutput) ToGetInternetserviceextensionDisableEntryIp6RangeOutput() GetInternetserviceextensionDisableEntryIp6RangeOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryIp6RangeOutput) ToGetInternetserviceextensionDisableEntryIp6RangeOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryIp6RangeOutput {
	return o
}

// End IPv6 address.
func (o GetInternetserviceextensionDisableEntryIp6RangeOutput) EndIp6() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntryIp6Range) string { return v.EndIp6 }).(pulumi.StringOutput)
}

// Disable entry range ID.
func (o GetInternetserviceextensionDisableEntryIp6RangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntryIp6Range) int { return v.Id }).(pulumi.IntOutput)
}

// Start IPv6 address.
func (o GetInternetserviceextensionDisableEntryIp6RangeOutput) StartIp6() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntryIp6Range) string { return v.StartIp6 }).(pulumi.StringOutput)
}

type GetInternetserviceextensionDisableEntryIp6RangeArrayOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionDisableEntryIp6RangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (o GetInternetserviceextensionDisableEntryIp6RangeArrayOutput) ToGetInternetserviceextensionDisableEntryIp6RangeArrayOutput() GetInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryIp6RangeArrayOutput) ToGetInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryIp6RangeArrayOutput) Index(i pulumi.IntInput) GetInternetserviceextensionDisableEntryIp6RangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetserviceextensionDisableEntryIp6Range {
		return vs[0].([]GetInternetserviceextensionDisableEntryIp6Range)[vs[1].(int)]
	}).(GetInternetserviceextensionDisableEntryIp6RangeOutput)
}

type GetInternetserviceextensionDisableEntryIpRange struct {
	// End IP address.
	EndIp string `pulumi:"endIp"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// Start IP address.
	StartIp string `pulumi:"startIp"`
}

// GetInternetserviceextensionDisableEntryIpRangeInput is an input type that accepts GetInternetserviceextensionDisableEntryIpRangeArgs and GetInternetserviceextensionDisableEntryIpRangeOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionDisableEntryIpRangeInput` via:
//
//	GetInternetserviceextensionDisableEntryIpRangeArgs{...}
type GetInternetserviceextensionDisableEntryIpRangeInput interface {
	pulumi.Input

	ToGetInternetserviceextensionDisableEntryIpRangeOutput() GetInternetserviceextensionDisableEntryIpRangeOutput
	ToGetInternetserviceextensionDisableEntryIpRangeOutputWithContext(context.Context) GetInternetserviceextensionDisableEntryIpRangeOutput
}

type GetInternetserviceextensionDisableEntryIpRangeArgs struct {
	// End IP address.
	EndIp pulumi.StringInput `pulumi:"endIp"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Start IP address.
	StartIp pulumi.StringInput `pulumi:"startIp"`
}

func (GetInternetserviceextensionDisableEntryIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (i GetInternetserviceextensionDisableEntryIpRangeArgs) ToGetInternetserviceextensionDisableEntryIpRangeOutput() GetInternetserviceextensionDisableEntryIpRangeOutput {
	return i.ToGetInternetserviceextensionDisableEntryIpRangeOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionDisableEntryIpRangeArgs) ToGetInternetserviceextensionDisableEntryIpRangeOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionDisableEntryIpRangeOutput)
}

// GetInternetserviceextensionDisableEntryIpRangeArrayInput is an input type that accepts GetInternetserviceextensionDisableEntryIpRangeArray and GetInternetserviceextensionDisableEntryIpRangeArrayOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionDisableEntryIpRangeArrayInput` via:
//
//	GetInternetserviceextensionDisableEntryIpRangeArray{ GetInternetserviceextensionDisableEntryIpRangeArgs{...} }
type GetInternetserviceextensionDisableEntryIpRangeArrayInput interface {
	pulumi.Input

	ToGetInternetserviceextensionDisableEntryIpRangeArrayOutput() GetInternetserviceextensionDisableEntryIpRangeArrayOutput
	ToGetInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(context.Context) GetInternetserviceextensionDisableEntryIpRangeArrayOutput
}

type GetInternetserviceextensionDisableEntryIpRangeArray []GetInternetserviceextensionDisableEntryIpRangeInput

func (GetInternetserviceextensionDisableEntryIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (i GetInternetserviceextensionDisableEntryIpRangeArray) ToGetInternetserviceextensionDisableEntryIpRangeArrayOutput() GetInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return i.ToGetInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionDisableEntryIpRangeArray) ToGetInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionDisableEntryIpRangeArrayOutput)
}

type GetInternetserviceextensionDisableEntryIpRangeOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionDisableEntryIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (o GetInternetserviceextensionDisableEntryIpRangeOutput) ToGetInternetserviceextensionDisableEntryIpRangeOutput() GetInternetserviceextensionDisableEntryIpRangeOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryIpRangeOutput) ToGetInternetserviceextensionDisableEntryIpRangeOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryIpRangeOutput {
	return o
}

// End IP address.
func (o GetInternetserviceextensionDisableEntryIpRangeOutput) EndIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntryIpRange) string { return v.EndIp }).(pulumi.StringOutput)
}

// Disable entry range ID.
func (o GetInternetserviceextensionDisableEntryIpRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntryIpRange) int { return v.Id }).(pulumi.IntOutput)
}

// Start IP address.
func (o GetInternetserviceextensionDisableEntryIpRangeOutput) StartIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntryIpRange) string { return v.StartIp }).(pulumi.StringOutput)
}

type GetInternetserviceextensionDisableEntryIpRangeArrayOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionDisableEntryIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (o GetInternetserviceextensionDisableEntryIpRangeArrayOutput) ToGetInternetserviceextensionDisableEntryIpRangeArrayOutput() GetInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryIpRangeArrayOutput) ToGetInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryIpRangeArrayOutput) Index(i pulumi.IntInput) GetInternetserviceextensionDisableEntryIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetserviceextensionDisableEntryIpRange {
		return vs[0].([]GetInternetserviceextensionDisableEntryIpRange)[vs[1].(int)]
	}).(GetInternetserviceextensionDisableEntryIpRangeOutput)
}

type GetInternetserviceextensionDisableEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort int `pulumi:"endPort"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort int `pulumi:"startPort"`
}

// GetInternetserviceextensionDisableEntryPortRangeInput is an input type that accepts GetInternetserviceextensionDisableEntryPortRangeArgs and GetInternetserviceextensionDisableEntryPortRangeOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionDisableEntryPortRangeInput` via:
//
//	GetInternetserviceextensionDisableEntryPortRangeArgs{...}
type GetInternetserviceextensionDisableEntryPortRangeInput interface {
	pulumi.Input

	ToGetInternetserviceextensionDisableEntryPortRangeOutput() GetInternetserviceextensionDisableEntryPortRangeOutput
	ToGetInternetserviceextensionDisableEntryPortRangeOutputWithContext(context.Context) GetInternetserviceextensionDisableEntryPortRangeOutput
}

type GetInternetserviceextensionDisableEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (GetInternetserviceextensionDisableEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (i GetInternetserviceextensionDisableEntryPortRangeArgs) ToGetInternetserviceextensionDisableEntryPortRangeOutput() GetInternetserviceextensionDisableEntryPortRangeOutput {
	return i.ToGetInternetserviceextensionDisableEntryPortRangeOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionDisableEntryPortRangeArgs) ToGetInternetserviceextensionDisableEntryPortRangeOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionDisableEntryPortRangeOutput)
}

// GetInternetserviceextensionDisableEntryPortRangeArrayInput is an input type that accepts GetInternetserviceextensionDisableEntryPortRangeArray and GetInternetserviceextensionDisableEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionDisableEntryPortRangeArrayInput` via:
//
//	GetInternetserviceextensionDisableEntryPortRangeArray{ GetInternetserviceextensionDisableEntryPortRangeArgs{...} }
type GetInternetserviceextensionDisableEntryPortRangeArrayInput interface {
	pulumi.Input

	ToGetInternetserviceextensionDisableEntryPortRangeArrayOutput() GetInternetserviceextensionDisableEntryPortRangeArrayOutput
	ToGetInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(context.Context) GetInternetserviceextensionDisableEntryPortRangeArrayOutput
}

type GetInternetserviceextensionDisableEntryPortRangeArray []GetInternetserviceextensionDisableEntryPortRangeInput

func (GetInternetserviceextensionDisableEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (i GetInternetserviceextensionDisableEntryPortRangeArray) ToGetInternetserviceextensionDisableEntryPortRangeArrayOutput() GetInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return i.ToGetInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionDisableEntryPortRangeArray) ToGetInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionDisableEntryPortRangeArrayOutput)
}

type GetInternetserviceextensionDisableEntryPortRangeOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionDisableEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (o GetInternetserviceextensionDisableEntryPortRangeOutput) ToGetInternetserviceextensionDisableEntryPortRangeOutput() GetInternetserviceextensionDisableEntryPortRangeOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryPortRangeOutput) ToGetInternetserviceextensionDisableEntryPortRangeOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o GetInternetserviceextensionDisableEntryPortRangeOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntryPortRange) int { return v.EndPort }).(pulumi.IntOutput)
}

// Disable entry range ID.
func (o GetInternetserviceextensionDisableEntryPortRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntryPortRange) int { return v.Id }).(pulumi.IntOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o GetInternetserviceextensionDisableEntryPortRangeOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionDisableEntryPortRange) int { return v.StartPort }).(pulumi.IntOutput)
}

type GetInternetserviceextensionDisableEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionDisableEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (o GetInternetserviceextensionDisableEntryPortRangeArrayOutput) ToGetInternetserviceextensionDisableEntryPortRangeArrayOutput() GetInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryPortRangeArrayOutput) ToGetInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o
}

func (o GetInternetserviceextensionDisableEntryPortRangeArrayOutput) Index(i pulumi.IntInput) GetInternetserviceextensionDisableEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetserviceextensionDisableEntryPortRange {
		return vs[0].([]GetInternetserviceextensionDisableEntryPortRange)[vs[1].(int)]
	}).(GetInternetserviceextensionDisableEntryPortRangeOutput)
}

type GetInternetserviceextensionEntry struct {
	// Address mode (IPv4 or IPv6)
	AddrMode string `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s []GetInternetserviceextensionEntryDst6 `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts []GetInternetserviceextensionEntryDst `pulumi:"dsts"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges []GetInternetserviceextensionEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol int `pulumi:"protocol"`
}

// GetInternetserviceextensionEntryInput is an input type that accepts GetInternetserviceextensionEntryArgs and GetInternetserviceextensionEntryOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionEntryInput` via:
//
//	GetInternetserviceextensionEntryArgs{...}
type GetInternetserviceextensionEntryInput interface {
	pulumi.Input

	ToGetInternetserviceextensionEntryOutput() GetInternetserviceextensionEntryOutput
	ToGetInternetserviceextensionEntryOutputWithContext(context.Context) GetInternetserviceextensionEntryOutput
}

type GetInternetserviceextensionEntryArgs struct {
	// Address mode (IPv4 or IPv6)
	AddrMode pulumi.StringInput `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s GetInternetserviceextensionEntryDst6ArrayInput `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts GetInternetserviceextensionEntryDstArrayInput `pulumi:"dsts"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges GetInternetserviceextensionEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntInput `pulumi:"protocol"`
}

func (GetInternetserviceextensionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionEntry)(nil)).Elem()
}

func (i GetInternetserviceextensionEntryArgs) ToGetInternetserviceextensionEntryOutput() GetInternetserviceextensionEntryOutput {
	return i.ToGetInternetserviceextensionEntryOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionEntryArgs) ToGetInternetserviceextensionEntryOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionEntryOutput)
}

// GetInternetserviceextensionEntryArrayInput is an input type that accepts GetInternetserviceextensionEntryArray and GetInternetserviceextensionEntryArrayOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionEntryArrayInput` via:
//
//	GetInternetserviceextensionEntryArray{ GetInternetserviceextensionEntryArgs{...} }
type GetInternetserviceextensionEntryArrayInput interface {
	pulumi.Input

	ToGetInternetserviceextensionEntryArrayOutput() GetInternetserviceextensionEntryArrayOutput
	ToGetInternetserviceextensionEntryArrayOutputWithContext(context.Context) GetInternetserviceextensionEntryArrayOutput
}

type GetInternetserviceextensionEntryArray []GetInternetserviceextensionEntryInput

func (GetInternetserviceextensionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionEntry)(nil)).Elem()
}

func (i GetInternetserviceextensionEntryArray) ToGetInternetserviceextensionEntryArrayOutput() GetInternetserviceextensionEntryArrayOutput {
	return i.ToGetInternetserviceextensionEntryArrayOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionEntryArray) ToGetInternetserviceextensionEntryArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionEntryArrayOutput)
}

type GetInternetserviceextensionEntryOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionEntry)(nil)).Elem()
}

func (o GetInternetserviceextensionEntryOutput) ToGetInternetserviceextensionEntryOutput() GetInternetserviceextensionEntryOutput {
	return o
}

func (o GetInternetserviceextensionEntryOutput) ToGetInternetserviceextensionEntryOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6)
func (o GetInternetserviceextensionEntryOutput) AddrMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetserviceextensionEntry) string { return v.AddrMode }).(pulumi.StringOutput)
}

// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
func (o GetInternetserviceextensionEntryOutput) Dst6s() GetInternetserviceextensionEntryDst6ArrayOutput {
	return o.ApplyT(func(v GetInternetserviceextensionEntry) []GetInternetserviceextensionEntryDst6 { return v.Dst6s }).(GetInternetserviceextensionEntryDst6ArrayOutput)
}

// Destination address or address group name. The structure of `dst` block is documented below.
func (o GetInternetserviceextensionEntryOutput) Dsts() GetInternetserviceextensionEntryDstArrayOutput {
	return o.ApplyT(func(v GetInternetserviceextensionEntry) []GetInternetserviceextensionEntryDst { return v.Dsts }).(GetInternetserviceextensionEntryDstArrayOutput)
}

// Disable entry range ID.
func (o GetInternetserviceextensionEntryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionEntry) int { return v.Id }).(pulumi.IntOutput)
}

// Port ranges in the disable entry. The structure of `portRange` block is documented below.
func (o GetInternetserviceextensionEntryOutput) PortRanges() GetInternetserviceextensionEntryPortRangeArrayOutput {
	return o.ApplyT(func(v GetInternetserviceextensionEntry) []GetInternetserviceextensionEntryPortRange {
		return v.PortRanges
	}).(GetInternetserviceextensionEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o GetInternetserviceextensionEntryOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionEntry) int { return v.Protocol }).(pulumi.IntOutput)
}

type GetInternetserviceextensionEntryArrayOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionEntry)(nil)).Elem()
}

func (o GetInternetserviceextensionEntryArrayOutput) ToGetInternetserviceextensionEntryArrayOutput() GetInternetserviceextensionEntryArrayOutput {
	return o
}

func (o GetInternetserviceextensionEntryArrayOutput) ToGetInternetserviceextensionEntryArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryArrayOutput {
	return o
}

func (o GetInternetserviceextensionEntryArrayOutput) Index(i pulumi.IntInput) GetInternetserviceextensionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetserviceextensionEntry {
		return vs[0].([]GetInternetserviceextensionEntry)[vs[1].(int)]
	}).(GetInternetserviceextensionEntryOutput)
}

type GetInternetserviceextensionEntryDst6 struct {
	// Select the destination address6 or address group object from available options.
	Name string `pulumi:"name"`
}

// GetInternetserviceextensionEntryDst6Input is an input type that accepts GetInternetserviceextensionEntryDst6Args and GetInternetserviceextensionEntryDst6Output values.
// You can construct a concrete instance of `GetInternetserviceextensionEntryDst6Input` via:
//
//	GetInternetserviceextensionEntryDst6Args{...}
type GetInternetserviceextensionEntryDst6Input interface {
	pulumi.Input

	ToGetInternetserviceextensionEntryDst6Output() GetInternetserviceextensionEntryDst6Output
	ToGetInternetserviceextensionEntryDst6OutputWithContext(context.Context) GetInternetserviceextensionEntryDst6Output
}

type GetInternetserviceextensionEntryDst6Args struct {
	// Select the destination address6 or address group object from available options.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInternetserviceextensionEntryDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (i GetInternetserviceextensionEntryDst6Args) ToGetInternetserviceextensionEntryDst6Output() GetInternetserviceextensionEntryDst6Output {
	return i.ToGetInternetserviceextensionEntryDst6OutputWithContext(context.Background())
}

func (i GetInternetserviceextensionEntryDst6Args) ToGetInternetserviceextensionEntryDst6OutputWithContext(ctx context.Context) GetInternetserviceextensionEntryDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionEntryDst6Output)
}

// GetInternetserviceextensionEntryDst6ArrayInput is an input type that accepts GetInternetserviceextensionEntryDst6Array and GetInternetserviceextensionEntryDst6ArrayOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionEntryDst6ArrayInput` via:
//
//	GetInternetserviceextensionEntryDst6Array{ GetInternetserviceextensionEntryDst6Args{...} }
type GetInternetserviceextensionEntryDst6ArrayInput interface {
	pulumi.Input

	ToGetInternetserviceextensionEntryDst6ArrayOutput() GetInternetserviceextensionEntryDst6ArrayOutput
	ToGetInternetserviceextensionEntryDst6ArrayOutputWithContext(context.Context) GetInternetserviceextensionEntryDst6ArrayOutput
}

type GetInternetserviceextensionEntryDst6Array []GetInternetserviceextensionEntryDst6Input

func (GetInternetserviceextensionEntryDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (i GetInternetserviceextensionEntryDst6Array) ToGetInternetserviceextensionEntryDst6ArrayOutput() GetInternetserviceextensionEntryDst6ArrayOutput {
	return i.ToGetInternetserviceextensionEntryDst6ArrayOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionEntryDst6Array) ToGetInternetserviceextensionEntryDst6ArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionEntryDst6ArrayOutput)
}

type GetInternetserviceextensionEntryDst6Output struct{ *pulumi.OutputState }

func (GetInternetserviceextensionEntryDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (o GetInternetserviceextensionEntryDst6Output) ToGetInternetserviceextensionEntryDst6Output() GetInternetserviceextensionEntryDst6Output {
	return o
}

func (o GetInternetserviceextensionEntryDst6Output) ToGetInternetserviceextensionEntryDst6OutputWithContext(ctx context.Context) GetInternetserviceextensionEntryDst6Output {
	return o
}

// Select the destination address6 or address group object from available options.
func (o GetInternetserviceextensionEntryDst6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetserviceextensionEntryDst6) string { return v.Name }).(pulumi.StringOutput)
}

type GetInternetserviceextensionEntryDst6ArrayOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionEntryDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (o GetInternetserviceextensionEntryDst6ArrayOutput) ToGetInternetserviceextensionEntryDst6ArrayOutput() GetInternetserviceextensionEntryDst6ArrayOutput {
	return o
}

func (o GetInternetserviceextensionEntryDst6ArrayOutput) ToGetInternetserviceextensionEntryDst6ArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryDst6ArrayOutput {
	return o
}

func (o GetInternetserviceextensionEntryDst6ArrayOutput) Index(i pulumi.IntInput) GetInternetserviceextensionEntryDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetserviceextensionEntryDst6 {
		return vs[0].([]GetInternetserviceextensionEntryDst6)[vs[1].(int)]
	}).(GetInternetserviceextensionEntryDst6Output)
}

type GetInternetserviceextensionEntryDst struct {
	// Select the destination address6 or address group object from available options.
	Name string `pulumi:"name"`
}

// GetInternetserviceextensionEntryDstInput is an input type that accepts GetInternetserviceextensionEntryDstArgs and GetInternetserviceextensionEntryDstOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionEntryDstInput` via:
//
//	GetInternetserviceextensionEntryDstArgs{...}
type GetInternetserviceextensionEntryDstInput interface {
	pulumi.Input

	ToGetInternetserviceextensionEntryDstOutput() GetInternetserviceextensionEntryDstOutput
	ToGetInternetserviceextensionEntryDstOutputWithContext(context.Context) GetInternetserviceextensionEntryDstOutput
}

type GetInternetserviceextensionEntryDstArgs struct {
	// Select the destination address6 or address group object from available options.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInternetserviceextensionEntryDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionEntryDst)(nil)).Elem()
}

func (i GetInternetserviceextensionEntryDstArgs) ToGetInternetserviceextensionEntryDstOutput() GetInternetserviceextensionEntryDstOutput {
	return i.ToGetInternetserviceextensionEntryDstOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionEntryDstArgs) ToGetInternetserviceextensionEntryDstOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionEntryDstOutput)
}

// GetInternetserviceextensionEntryDstArrayInput is an input type that accepts GetInternetserviceextensionEntryDstArray and GetInternetserviceextensionEntryDstArrayOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionEntryDstArrayInput` via:
//
//	GetInternetserviceextensionEntryDstArray{ GetInternetserviceextensionEntryDstArgs{...} }
type GetInternetserviceextensionEntryDstArrayInput interface {
	pulumi.Input

	ToGetInternetserviceextensionEntryDstArrayOutput() GetInternetserviceextensionEntryDstArrayOutput
	ToGetInternetserviceextensionEntryDstArrayOutputWithContext(context.Context) GetInternetserviceextensionEntryDstArrayOutput
}

type GetInternetserviceextensionEntryDstArray []GetInternetserviceextensionEntryDstInput

func (GetInternetserviceextensionEntryDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionEntryDst)(nil)).Elem()
}

func (i GetInternetserviceextensionEntryDstArray) ToGetInternetserviceextensionEntryDstArrayOutput() GetInternetserviceextensionEntryDstArrayOutput {
	return i.ToGetInternetserviceextensionEntryDstArrayOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionEntryDstArray) ToGetInternetserviceextensionEntryDstArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionEntryDstArrayOutput)
}

type GetInternetserviceextensionEntryDstOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionEntryDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionEntryDst)(nil)).Elem()
}

func (o GetInternetserviceextensionEntryDstOutput) ToGetInternetserviceextensionEntryDstOutput() GetInternetserviceextensionEntryDstOutput {
	return o
}

func (o GetInternetserviceextensionEntryDstOutput) ToGetInternetserviceextensionEntryDstOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryDstOutput {
	return o
}

// Select the destination address6 or address group object from available options.
func (o GetInternetserviceextensionEntryDstOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetserviceextensionEntryDst) string { return v.Name }).(pulumi.StringOutput)
}

type GetInternetserviceextensionEntryDstArrayOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionEntryDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionEntryDst)(nil)).Elem()
}

func (o GetInternetserviceextensionEntryDstArrayOutput) ToGetInternetserviceextensionEntryDstArrayOutput() GetInternetserviceextensionEntryDstArrayOutput {
	return o
}

func (o GetInternetserviceextensionEntryDstArrayOutput) ToGetInternetserviceextensionEntryDstArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryDstArrayOutput {
	return o
}

func (o GetInternetserviceextensionEntryDstArrayOutput) Index(i pulumi.IntInput) GetInternetserviceextensionEntryDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetserviceextensionEntryDst {
		return vs[0].([]GetInternetserviceextensionEntryDst)[vs[1].(int)]
	}).(GetInternetserviceextensionEntryDstOutput)
}

type GetInternetserviceextensionEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort int `pulumi:"endPort"`
	// Disable entry range ID.
	Id int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort int `pulumi:"startPort"`
}

// GetInternetserviceextensionEntryPortRangeInput is an input type that accepts GetInternetserviceextensionEntryPortRangeArgs and GetInternetserviceextensionEntryPortRangeOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionEntryPortRangeInput` via:
//
//	GetInternetserviceextensionEntryPortRangeArgs{...}
type GetInternetserviceextensionEntryPortRangeInput interface {
	pulumi.Input

	ToGetInternetserviceextensionEntryPortRangeOutput() GetInternetserviceextensionEntryPortRangeOutput
	ToGetInternetserviceextensionEntryPortRangeOutputWithContext(context.Context) GetInternetserviceextensionEntryPortRangeOutput
}

type GetInternetserviceextensionEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Disable entry range ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (GetInternetserviceextensionEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (i GetInternetserviceextensionEntryPortRangeArgs) ToGetInternetserviceextensionEntryPortRangeOutput() GetInternetserviceextensionEntryPortRangeOutput {
	return i.ToGetInternetserviceextensionEntryPortRangeOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionEntryPortRangeArgs) ToGetInternetserviceextensionEntryPortRangeOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionEntryPortRangeOutput)
}

// GetInternetserviceextensionEntryPortRangeArrayInput is an input type that accepts GetInternetserviceextensionEntryPortRangeArray and GetInternetserviceextensionEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `GetInternetserviceextensionEntryPortRangeArrayInput` via:
//
//	GetInternetserviceextensionEntryPortRangeArray{ GetInternetserviceextensionEntryPortRangeArgs{...} }
type GetInternetserviceextensionEntryPortRangeArrayInput interface {
	pulumi.Input

	ToGetInternetserviceextensionEntryPortRangeArrayOutput() GetInternetserviceextensionEntryPortRangeArrayOutput
	ToGetInternetserviceextensionEntryPortRangeArrayOutputWithContext(context.Context) GetInternetserviceextensionEntryPortRangeArrayOutput
}

type GetInternetserviceextensionEntryPortRangeArray []GetInternetserviceextensionEntryPortRangeInput

func (GetInternetserviceextensionEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (i GetInternetserviceextensionEntryPortRangeArray) ToGetInternetserviceextensionEntryPortRangeArrayOutput() GetInternetserviceextensionEntryPortRangeArrayOutput {
	return i.ToGetInternetserviceextensionEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i GetInternetserviceextensionEntryPortRangeArray) ToGetInternetserviceextensionEntryPortRangeArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetserviceextensionEntryPortRangeArrayOutput)
}

type GetInternetserviceextensionEntryPortRangeOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (o GetInternetserviceextensionEntryPortRangeOutput) ToGetInternetserviceextensionEntryPortRangeOutput() GetInternetserviceextensionEntryPortRangeOutput {
	return o
}

func (o GetInternetserviceextensionEntryPortRangeOutput) ToGetInternetserviceextensionEntryPortRangeOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o GetInternetserviceextensionEntryPortRangeOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionEntryPortRange) int { return v.EndPort }).(pulumi.IntOutput)
}

// Disable entry range ID.
func (o GetInternetserviceextensionEntryPortRangeOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionEntryPortRange) int { return v.Id }).(pulumi.IntOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o GetInternetserviceextensionEntryPortRangeOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetserviceextensionEntryPortRange) int { return v.StartPort }).(pulumi.IntOutput)
}

type GetInternetserviceextensionEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetInternetserviceextensionEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (o GetInternetserviceextensionEntryPortRangeArrayOutput) ToGetInternetserviceextensionEntryPortRangeArrayOutput() GetInternetserviceextensionEntryPortRangeArrayOutput {
	return o
}

func (o GetInternetserviceextensionEntryPortRangeArrayOutput) ToGetInternetserviceextensionEntryPortRangeArrayOutputWithContext(ctx context.Context) GetInternetserviceextensionEntryPortRangeArrayOutput {
	return o
}

func (o GetInternetserviceextensionEntryPortRangeArrayOutput) Index(i pulumi.IntInput) GetInternetserviceextensionEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetserviceextensionEntryPortRange {
		return vs[0].([]GetInternetserviceextensionEntryPortRange)[vs[1].(int)]
	}).(GetInternetserviceextensionEntryPortRangeOutput)
}

type GetInternetservicegroupMember struct {
	// Internet Service ID.
	Id int `pulumi:"id"`
	// Specify the name of the desired firewall internetservicegroup.
	Name string `pulumi:"name"`
}

// GetInternetservicegroupMemberInput is an input type that accepts GetInternetservicegroupMemberArgs and GetInternetservicegroupMemberOutput values.
// You can construct a concrete instance of `GetInternetservicegroupMemberInput` via:
//
//	GetInternetservicegroupMemberArgs{...}
type GetInternetservicegroupMemberInput interface {
	pulumi.Input

	ToGetInternetservicegroupMemberOutput() GetInternetservicegroupMemberOutput
	ToGetInternetservicegroupMemberOutputWithContext(context.Context) GetInternetservicegroupMemberOutput
}

type GetInternetservicegroupMemberArgs struct {
	// Internet Service ID.
	Id pulumi.IntInput `pulumi:"id"`
	// Specify the name of the desired firewall internetservicegroup.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInternetservicegroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicegroupMember)(nil)).Elem()
}

func (i GetInternetservicegroupMemberArgs) ToGetInternetservicegroupMemberOutput() GetInternetservicegroupMemberOutput {
	return i.ToGetInternetservicegroupMemberOutputWithContext(context.Background())
}

func (i GetInternetservicegroupMemberArgs) ToGetInternetservicegroupMemberOutputWithContext(ctx context.Context) GetInternetservicegroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicegroupMemberOutput)
}

// GetInternetservicegroupMemberArrayInput is an input type that accepts GetInternetservicegroupMemberArray and GetInternetservicegroupMemberArrayOutput values.
// You can construct a concrete instance of `GetInternetservicegroupMemberArrayInput` via:
//
//	GetInternetservicegroupMemberArray{ GetInternetservicegroupMemberArgs{...} }
type GetInternetservicegroupMemberArrayInput interface {
	pulumi.Input

	ToGetInternetservicegroupMemberArrayOutput() GetInternetservicegroupMemberArrayOutput
	ToGetInternetservicegroupMemberArrayOutputWithContext(context.Context) GetInternetservicegroupMemberArrayOutput
}

type GetInternetservicegroupMemberArray []GetInternetservicegroupMemberInput

func (GetInternetservicegroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicegroupMember)(nil)).Elem()
}

func (i GetInternetservicegroupMemberArray) ToGetInternetservicegroupMemberArrayOutput() GetInternetservicegroupMemberArrayOutput {
	return i.ToGetInternetservicegroupMemberArrayOutputWithContext(context.Background())
}

func (i GetInternetservicegroupMemberArray) ToGetInternetservicegroupMemberArrayOutputWithContext(ctx context.Context) GetInternetservicegroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetservicegroupMemberArrayOutput)
}

type GetInternetservicegroupMemberOutput struct{ *pulumi.OutputState }

func (GetInternetservicegroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetservicegroupMember)(nil)).Elem()
}

func (o GetInternetservicegroupMemberOutput) ToGetInternetservicegroupMemberOutput() GetInternetservicegroupMemberOutput {
	return o
}

func (o GetInternetservicegroupMemberOutput) ToGetInternetservicegroupMemberOutputWithContext(ctx context.Context) GetInternetservicegroupMemberOutput {
	return o
}

// Internet Service ID.
func (o GetInternetservicegroupMemberOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInternetservicegroupMember) int { return v.Id }).(pulumi.IntOutput)
}

// Specify the name of the desired firewall internetservicegroup.
func (o GetInternetservicegroupMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetservicegroupMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetInternetservicegroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GetInternetservicegroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetservicegroupMember)(nil)).Elem()
}

func (o GetInternetservicegroupMemberArrayOutput) ToGetInternetservicegroupMemberArrayOutput() GetInternetservicegroupMemberArrayOutput {
	return o
}

func (o GetInternetservicegroupMemberArrayOutput) ToGetInternetservicegroupMemberArrayOutputWithContext(ctx context.Context) GetInternetservicegroupMemberArrayOutput {
	return o
}

func (o GetInternetservicegroupMemberArrayOutput) Index(i pulumi.IntInput) GetInternetservicegroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetservicegroupMember {
		return vs[0].([]GetInternetservicegroupMember)[vs[1].(int)]
	}).(GetInternetservicegroupMemberOutput)
}

type GetMulticastaddress6Tagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall multicastaddress6.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetMulticastaddress6TaggingTag `pulumi:"tags"`
}

// GetMulticastaddress6TaggingInput is an input type that accepts GetMulticastaddress6TaggingArgs and GetMulticastaddress6TaggingOutput values.
// You can construct a concrete instance of `GetMulticastaddress6TaggingInput` via:
//
//	GetMulticastaddress6TaggingArgs{...}
type GetMulticastaddress6TaggingInput interface {
	pulumi.Input

	ToGetMulticastaddress6TaggingOutput() GetMulticastaddress6TaggingOutput
	ToGetMulticastaddress6TaggingOutputWithContext(context.Context) GetMulticastaddress6TaggingOutput
}

type GetMulticastaddress6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall multicastaddress6.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetMulticastaddress6TaggingTagArrayInput `pulumi:"tags"`
}

func (GetMulticastaddress6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastaddress6Tagging)(nil)).Elem()
}

func (i GetMulticastaddress6TaggingArgs) ToGetMulticastaddress6TaggingOutput() GetMulticastaddress6TaggingOutput {
	return i.ToGetMulticastaddress6TaggingOutputWithContext(context.Background())
}

func (i GetMulticastaddress6TaggingArgs) ToGetMulticastaddress6TaggingOutputWithContext(ctx context.Context) GetMulticastaddress6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastaddress6TaggingOutput)
}

// GetMulticastaddress6TaggingArrayInput is an input type that accepts GetMulticastaddress6TaggingArray and GetMulticastaddress6TaggingArrayOutput values.
// You can construct a concrete instance of `GetMulticastaddress6TaggingArrayInput` via:
//
//	GetMulticastaddress6TaggingArray{ GetMulticastaddress6TaggingArgs{...} }
type GetMulticastaddress6TaggingArrayInput interface {
	pulumi.Input

	ToGetMulticastaddress6TaggingArrayOutput() GetMulticastaddress6TaggingArrayOutput
	ToGetMulticastaddress6TaggingArrayOutputWithContext(context.Context) GetMulticastaddress6TaggingArrayOutput
}

type GetMulticastaddress6TaggingArray []GetMulticastaddress6TaggingInput

func (GetMulticastaddress6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastaddress6Tagging)(nil)).Elem()
}

func (i GetMulticastaddress6TaggingArray) ToGetMulticastaddress6TaggingArrayOutput() GetMulticastaddress6TaggingArrayOutput {
	return i.ToGetMulticastaddress6TaggingArrayOutputWithContext(context.Background())
}

func (i GetMulticastaddress6TaggingArray) ToGetMulticastaddress6TaggingArrayOutputWithContext(ctx context.Context) GetMulticastaddress6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastaddress6TaggingArrayOutput)
}

type GetMulticastaddress6TaggingOutput struct{ *pulumi.OutputState }

func (GetMulticastaddress6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastaddress6Tagging)(nil)).Elem()
}

func (o GetMulticastaddress6TaggingOutput) ToGetMulticastaddress6TaggingOutput() GetMulticastaddress6TaggingOutput {
	return o
}

func (o GetMulticastaddress6TaggingOutput) ToGetMulticastaddress6TaggingOutputWithContext(ctx context.Context) GetMulticastaddress6TaggingOutput {
	return o
}

// Tag category.
func (o GetMulticastaddress6TaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastaddress6Tagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall multicastaddress6.
func (o GetMulticastaddress6TaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastaddress6Tagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetMulticastaddress6TaggingOutput) Tags() GetMulticastaddress6TaggingTagArrayOutput {
	return o.ApplyT(func(v GetMulticastaddress6Tagging) []GetMulticastaddress6TaggingTag { return v.Tags }).(GetMulticastaddress6TaggingTagArrayOutput)
}

type GetMulticastaddress6TaggingArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastaddress6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastaddress6Tagging)(nil)).Elem()
}

func (o GetMulticastaddress6TaggingArrayOutput) ToGetMulticastaddress6TaggingArrayOutput() GetMulticastaddress6TaggingArrayOutput {
	return o
}

func (o GetMulticastaddress6TaggingArrayOutput) ToGetMulticastaddress6TaggingArrayOutputWithContext(ctx context.Context) GetMulticastaddress6TaggingArrayOutput {
	return o
}

func (o GetMulticastaddress6TaggingArrayOutput) Index(i pulumi.IntInput) GetMulticastaddress6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastaddress6Tagging {
		return vs[0].([]GetMulticastaddress6Tagging)[vs[1].(int)]
	}).(GetMulticastaddress6TaggingOutput)
}

type GetMulticastaddress6TaggingTag struct {
	// Specify the name of the desired firewall multicastaddress6.
	Name string `pulumi:"name"`
}

// GetMulticastaddress6TaggingTagInput is an input type that accepts GetMulticastaddress6TaggingTagArgs and GetMulticastaddress6TaggingTagOutput values.
// You can construct a concrete instance of `GetMulticastaddress6TaggingTagInput` via:
//
//	GetMulticastaddress6TaggingTagArgs{...}
type GetMulticastaddress6TaggingTagInput interface {
	pulumi.Input

	ToGetMulticastaddress6TaggingTagOutput() GetMulticastaddress6TaggingTagOutput
	ToGetMulticastaddress6TaggingTagOutputWithContext(context.Context) GetMulticastaddress6TaggingTagOutput
}

type GetMulticastaddress6TaggingTagArgs struct {
	// Specify the name of the desired firewall multicastaddress6.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetMulticastaddress6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastaddress6TaggingTag)(nil)).Elem()
}

func (i GetMulticastaddress6TaggingTagArgs) ToGetMulticastaddress6TaggingTagOutput() GetMulticastaddress6TaggingTagOutput {
	return i.ToGetMulticastaddress6TaggingTagOutputWithContext(context.Background())
}

func (i GetMulticastaddress6TaggingTagArgs) ToGetMulticastaddress6TaggingTagOutputWithContext(ctx context.Context) GetMulticastaddress6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastaddress6TaggingTagOutput)
}

// GetMulticastaddress6TaggingTagArrayInput is an input type that accepts GetMulticastaddress6TaggingTagArray and GetMulticastaddress6TaggingTagArrayOutput values.
// You can construct a concrete instance of `GetMulticastaddress6TaggingTagArrayInput` via:
//
//	GetMulticastaddress6TaggingTagArray{ GetMulticastaddress6TaggingTagArgs{...} }
type GetMulticastaddress6TaggingTagArrayInput interface {
	pulumi.Input

	ToGetMulticastaddress6TaggingTagArrayOutput() GetMulticastaddress6TaggingTagArrayOutput
	ToGetMulticastaddress6TaggingTagArrayOutputWithContext(context.Context) GetMulticastaddress6TaggingTagArrayOutput
}

type GetMulticastaddress6TaggingTagArray []GetMulticastaddress6TaggingTagInput

func (GetMulticastaddress6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastaddress6TaggingTag)(nil)).Elem()
}

func (i GetMulticastaddress6TaggingTagArray) ToGetMulticastaddress6TaggingTagArrayOutput() GetMulticastaddress6TaggingTagArrayOutput {
	return i.ToGetMulticastaddress6TaggingTagArrayOutputWithContext(context.Background())
}

func (i GetMulticastaddress6TaggingTagArray) ToGetMulticastaddress6TaggingTagArrayOutputWithContext(ctx context.Context) GetMulticastaddress6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastaddress6TaggingTagArrayOutput)
}

type GetMulticastaddress6TaggingTagOutput struct{ *pulumi.OutputState }

func (GetMulticastaddress6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastaddress6TaggingTag)(nil)).Elem()
}

func (o GetMulticastaddress6TaggingTagOutput) ToGetMulticastaddress6TaggingTagOutput() GetMulticastaddress6TaggingTagOutput {
	return o
}

func (o GetMulticastaddress6TaggingTagOutput) ToGetMulticastaddress6TaggingTagOutputWithContext(ctx context.Context) GetMulticastaddress6TaggingTagOutput {
	return o
}

// Specify the name of the desired firewall multicastaddress6.
func (o GetMulticastaddress6TaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastaddress6TaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetMulticastaddress6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastaddress6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastaddress6TaggingTag)(nil)).Elem()
}

func (o GetMulticastaddress6TaggingTagArrayOutput) ToGetMulticastaddress6TaggingTagArrayOutput() GetMulticastaddress6TaggingTagArrayOutput {
	return o
}

func (o GetMulticastaddress6TaggingTagArrayOutput) ToGetMulticastaddress6TaggingTagArrayOutputWithContext(ctx context.Context) GetMulticastaddress6TaggingTagArrayOutput {
	return o
}

func (o GetMulticastaddress6TaggingTagArrayOutput) Index(i pulumi.IntInput) GetMulticastaddress6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastaddress6TaggingTag {
		return vs[0].([]GetMulticastaddress6TaggingTag)[vs[1].(int)]
	}).(GetMulticastaddress6TaggingTagOutput)
}

type GetMulticastaddressTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall multicastaddress.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetMulticastaddressTaggingTag `pulumi:"tags"`
}

// GetMulticastaddressTaggingInput is an input type that accepts GetMulticastaddressTaggingArgs and GetMulticastaddressTaggingOutput values.
// You can construct a concrete instance of `GetMulticastaddressTaggingInput` via:
//
//	GetMulticastaddressTaggingArgs{...}
type GetMulticastaddressTaggingInput interface {
	pulumi.Input

	ToGetMulticastaddressTaggingOutput() GetMulticastaddressTaggingOutput
	ToGetMulticastaddressTaggingOutputWithContext(context.Context) GetMulticastaddressTaggingOutput
}

type GetMulticastaddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall multicastaddress.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetMulticastaddressTaggingTagArrayInput `pulumi:"tags"`
}

func (GetMulticastaddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastaddressTagging)(nil)).Elem()
}

func (i GetMulticastaddressTaggingArgs) ToGetMulticastaddressTaggingOutput() GetMulticastaddressTaggingOutput {
	return i.ToGetMulticastaddressTaggingOutputWithContext(context.Background())
}

func (i GetMulticastaddressTaggingArgs) ToGetMulticastaddressTaggingOutputWithContext(ctx context.Context) GetMulticastaddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastaddressTaggingOutput)
}

// GetMulticastaddressTaggingArrayInput is an input type that accepts GetMulticastaddressTaggingArray and GetMulticastaddressTaggingArrayOutput values.
// You can construct a concrete instance of `GetMulticastaddressTaggingArrayInput` via:
//
//	GetMulticastaddressTaggingArray{ GetMulticastaddressTaggingArgs{...} }
type GetMulticastaddressTaggingArrayInput interface {
	pulumi.Input

	ToGetMulticastaddressTaggingArrayOutput() GetMulticastaddressTaggingArrayOutput
	ToGetMulticastaddressTaggingArrayOutputWithContext(context.Context) GetMulticastaddressTaggingArrayOutput
}

type GetMulticastaddressTaggingArray []GetMulticastaddressTaggingInput

func (GetMulticastaddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastaddressTagging)(nil)).Elem()
}

func (i GetMulticastaddressTaggingArray) ToGetMulticastaddressTaggingArrayOutput() GetMulticastaddressTaggingArrayOutput {
	return i.ToGetMulticastaddressTaggingArrayOutputWithContext(context.Background())
}

func (i GetMulticastaddressTaggingArray) ToGetMulticastaddressTaggingArrayOutputWithContext(ctx context.Context) GetMulticastaddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastaddressTaggingArrayOutput)
}

type GetMulticastaddressTaggingOutput struct{ *pulumi.OutputState }

func (GetMulticastaddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastaddressTagging)(nil)).Elem()
}

func (o GetMulticastaddressTaggingOutput) ToGetMulticastaddressTaggingOutput() GetMulticastaddressTaggingOutput {
	return o
}

func (o GetMulticastaddressTaggingOutput) ToGetMulticastaddressTaggingOutputWithContext(ctx context.Context) GetMulticastaddressTaggingOutput {
	return o
}

// Tag category.
func (o GetMulticastaddressTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastaddressTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall multicastaddress.
func (o GetMulticastaddressTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastaddressTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetMulticastaddressTaggingOutput) Tags() GetMulticastaddressTaggingTagArrayOutput {
	return o.ApplyT(func(v GetMulticastaddressTagging) []GetMulticastaddressTaggingTag { return v.Tags }).(GetMulticastaddressTaggingTagArrayOutput)
}

type GetMulticastaddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastaddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastaddressTagging)(nil)).Elem()
}

func (o GetMulticastaddressTaggingArrayOutput) ToGetMulticastaddressTaggingArrayOutput() GetMulticastaddressTaggingArrayOutput {
	return o
}

func (o GetMulticastaddressTaggingArrayOutput) ToGetMulticastaddressTaggingArrayOutputWithContext(ctx context.Context) GetMulticastaddressTaggingArrayOutput {
	return o
}

func (o GetMulticastaddressTaggingArrayOutput) Index(i pulumi.IntInput) GetMulticastaddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastaddressTagging {
		return vs[0].([]GetMulticastaddressTagging)[vs[1].(int)]
	}).(GetMulticastaddressTaggingOutput)
}

type GetMulticastaddressTaggingTag struct {
	// Specify the name of the desired firewall multicastaddress.
	Name string `pulumi:"name"`
}

// GetMulticastaddressTaggingTagInput is an input type that accepts GetMulticastaddressTaggingTagArgs and GetMulticastaddressTaggingTagOutput values.
// You can construct a concrete instance of `GetMulticastaddressTaggingTagInput` via:
//
//	GetMulticastaddressTaggingTagArgs{...}
type GetMulticastaddressTaggingTagInput interface {
	pulumi.Input

	ToGetMulticastaddressTaggingTagOutput() GetMulticastaddressTaggingTagOutput
	ToGetMulticastaddressTaggingTagOutputWithContext(context.Context) GetMulticastaddressTaggingTagOutput
}

type GetMulticastaddressTaggingTagArgs struct {
	// Specify the name of the desired firewall multicastaddress.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetMulticastaddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastaddressTaggingTag)(nil)).Elem()
}

func (i GetMulticastaddressTaggingTagArgs) ToGetMulticastaddressTaggingTagOutput() GetMulticastaddressTaggingTagOutput {
	return i.ToGetMulticastaddressTaggingTagOutputWithContext(context.Background())
}

func (i GetMulticastaddressTaggingTagArgs) ToGetMulticastaddressTaggingTagOutputWithContext(ctx context.Context) GetMulticastaddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastaddressTaggingTagOutput)
}

// GetMulticastaddressTaggingTagArrayInput is an input type that accepts GetMulticastaddressTaggingTagArray and GetMulticastaddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetMulticastaddressTaggingTagArrayInput` via:
//
//	GetMulticastaddressTaggingTagArray{ GetMulticastaddressTaggingTagArgs{...} }
type GetMulticastaddressTaggingTagArrayInput interface {
	pulumi.Input

	ToGetMulticastaddressTaggingTagArrayOutput() GetMulticastaddressTaggingTagArrayOutput
	ToGetMulticastaddressTaggingTagArrayOutputWithContext(context.Context) GetMulticastaddressTaggingTagArrayOutput
}

type GetMulticastaddressTaggingTagArray []GetMulticastaddressTaggingTagInput

func (GetMulticastaddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastaddressTaggingTag)(nil)).Elem()
}

func (i GetMulticastaddressTaggingTagArray) ToGetMulticastaddressTaggingTagArrayOutput() GetMulticastaddressTaggingTagArrayOutput {
	return i.ToGetMulticastaddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetMulticastaddressTaggingTagArray) ToGetMulticastaddressTaggingTagArrayOutputWithContext(ctx context.Context) GetMulticastaddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastaddressTaggingTagArrayOutput)
}

type GetMulticastaddressTaggingTagOutput struct{ *pulumi.OutputState }

func (GetMulticastaddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastaddressTaggingTag)(nil)).Elem()
}

func (o GetMulticastaddressTaggingTagOutput) ToGetMulticastaddressTaggingTagOutput() GetMulticastaddressTaggingTagOutput {
	return o
}

func (o GetMulticastaddressTaggingTagOutput) ToGetMulticastaddressTaggingTagOutputWithContext(ctx context.Context) GetMulticastaddressTaggingTagOutput {
	return o
}

// Specify the name of the desired firewall multicastaddress.
func (o GetMulticastaddressTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastaddressTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetMulticastaddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastaddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastaddressTaggingTag)(nil)).Elem()
}

func (o GetMulticastaddressTaggingTagArrayOutput) ToGetMulticastaddressTaggingTagArrayOutput() GetMulticastaddressTaggingTagArrayOutput {
	return o
}

func (o GetMulticastaddressTaggingTagArrayOutput) ToGetMulticastaddressTaggingTagArrayOutputWithContext(ctx context.Context) GetMulticastaddressTaggingTagArrayOutput {
	return o
}

func (o GetMulticastaddressTaggingTagArrayOutput) Index(i pulumi.IntInput) GetMulticastaddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastaddressTaggingTag {
		return vs[0].([]GetMulticastaddressTaggingTag)[vs[1].(int)]
	}).(GetMulticastaddressTaggingTagOutput)
}

type GetPolicy46Dstaddr struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetPolicy46DstaddrInput is an input type that accepts GetPolicy46DstaddrArgs and GetPolicy46DstaddrOutput values.
// You can construct a concrete instance of `GetPolicy46DstaddrInput` via:
//
//	GetPolicy46DstaddrArgs{...}
type GetPolicy46DstaddrInput interface {
	pulumi.Input

	ToGetPolicy46DstaddrOutput() GetPolicy46DstaddrOutput
	ToGetPolicy46DstaddrOutputWithContext(context.Context) GetPolicy46DstaddrOutput
}

type GetPolicy46DstaddrArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy46DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy46Dstaddr)(nil)).Elem()
}

func (i GetPolicy46DstaddrArgs) ToGetPolicy46DstaddrOutput() GetPolicy46DstaddrOutput {
	return i.ToGetPolicy46DstaddrOutputWithContext(context.Background())
}

func (i GetPolicy46DstaddrArgs) ToGetPolicy46DstaddrOutputWithContext(ctx context.Context) GetPolicy46DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy46DstaddrOutput)
}

// GetPolicy46DstaddrArrayInput is an input type that accepts GetPolicy46DstaddrArray and GetPolicy46DstaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicy46DstaddrArrayInput` via:
//
//	GetPolicy46DstaddrArray{ GetPolicy46DstaddrArgs{...} }
type GetPolicy46DstaddrArrayInput interface {
	pulumi.Input

	ToGetPolicy46DstaddrArrayOutput() GetPolicy46DstaddrArrayOutput
	ToGetPolicy46DstaddrArrayOutputWithContext(context.Context) GetPolicy46DstaddrArrayOutput
}

type GetPolicy46DstaddrArray []GetPolicy46DstaddrInput

func (GetPolicy46DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy46Dstaddr)(nil)).Elem()
}

func (i GetPolicy46DstaddrArray) ToGetPolicy46DstaddrArrayOutput() GetPolicy46DstaddrArrayOutput {
	return i.ToGetPolicy46DstaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicy46DstaddrArray) ToGetPolicy46DstaddrArrayOutputWithContext(ctx context.Context) GetPolicy46DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy46DstaddrArrayOutput)
}

type GetPolicy46DstaddrOutput struct{ *pulumi.OutputState }

func (GetPolicy46DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy46Dstaddr)(nil)).Elem()
}

func (o GetPolicy46DstaddrOutput) ToGetPolicy46DstaddrOutput() GetPolicy46DstaddrOutput {
	return o
}

func (o GetPolicy46DstaddrOutput) ToGetPolicy46DstaddrOutputWithContext(ctx context.Context) GetPolicy46DstaddrOutput {
	return o
}

// IP pool name.
func (o GetPolicy46DstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy46Dstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy46DstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy46DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy46Dstaddr)(nil)).Elem()
}

func (o GetPolicy46DstaddrArrayOutput) ToGetPolicy46DstaddrArrayOutput() GetPolicy46DstaddrArrayOutput {
	return o
}

func (o GetPolicy46DstaddrArrayOutput) ToGetPolicy46DstaddrArrayOutputWithContext(ctx context.Context) GetPolicy46DstaddrArrayOutput {
	return o
}

func (o GetPolicy46DstaddrArrayOutput) Index(i pulumi.IntInput) GetPolicy46DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy46Dstaddr {
		return vs[0].([]GetPolicy46Dstaddr)[vs[1].(int)]
	}).(GetPolicy46DstaddrOutput)
}

type GetPolicy46Poolname struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetPolicy46PoolnameInput is an input type that accepts GetPolicy46PoolnameArgs and GetPolicy46PoolnameOutput values.
// You can construct a concrete instance of `GetPolicy46PoolnameInput` via:
//
//	GetPolicy46PoolnameArgs{...}
type GetPolicy46PoolnameInput interface {
	pulumi.Input

	ToGetPolicy46PoolnameOutput() GetPolicy46PoolnameOutput
	ToGetPolicy46PoolnameOutputWithContext(context.Context) GetPolicy46PoolnameOutput
}

type GetPolicy46PoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy46PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy46Poolname)(nil)).Elem()
}

func (i GetPolicy46PoolnameArgs) ToGetPolicy46PoolnameOutput() GetPolicy46PoolnameOutput {
	return i.ToGetPolicy46PoolnameOutputWithContext(context.Background())
}

func (i GetPolicy46PoolnameArgs) ToGetPolicy46PoolnameOutputWithContext(ctx context.Context) GetPolicy46PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy46PoolnameOutput)
}

// GetPolicy46PoolnameArrayInput is an input type that accepts GetPolicy46PoolnameArray and GetPolicy46PoolnameArrayOutput values.
// You can construct a concrete instance of `GetPolicy46PoolnameArrayInput` via:
//
//	GetPolicy46PoolnameArray{ GetPolicy46PoolnameArgs{...} }
type GetPolicy46PoolnameArrayInput interface {
	pulumi.Input

	ToGetPolicy46PoolnameArrayOutput() GetPolicy46PoolnameArrayOutput
	ToGetPolicy46PoolnameArrayOutputWithContext(context.Context) GetPolicy46PoolnameArrayOutput
}

type GetPolicy46PoolnameArray []GetPolicy46PoolnameInput

func (GetPolicy46PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy46Poolname)(nil)).Elem()
}

func (i GetPolicy46PoolnameArray) ToGetPolicy46PoolnameArrayOutput() GetPolicy46PoolnameArrayOutput {
	return i.ToGetPolicy46PoolnameArrayOutputWithContext(context.Background())
}

func (i GetPolicy46PoolnameArray) ToGetPolicy46PoolnameArrayOutputWithContext(ctx context.Context) GetPolicy46PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy46PoolnameArrayOutput)
}

type GetPolicy46PoolnameOutput struct{ *pulumi.OutputState }

func (GetPolicy46PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy46Poolname)(nil)).Elem()
}

func (o GetPolicy46PoolnameOutput) ToGetPolicy46PoolnameOutput() GetPolicy46PoolnameOutput {
	return o
}

func (o GetPolicy46PoolnameOutput) ToGetPolicy46PoolnameOutputWithContext(ctx context.Context) GetPolicy46PoolnameOutput {
	return o
}

// IP pool name.
func (o GetPolicy46PoolnameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy46Poolname) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy46PoolnameArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy46PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy46Poolname)(nil)).Elem()
}

func (o GetPolicy46PoolnameArrayOutput) ToGetPolicy46PoolnameArrayOutput() GetPolicy46PoolnameArrayOutput {
	return o
}

func (o GetPolicy46PoolnameArrayOutput) ToGetPolicy46PoolnameArrayOutputWithContext(ctx context.Context) GetPolicy46PoolnameArrayOutput {
	return o
}

func (o GetPolicy46PoolnameArrayOutput) Index(i pulumi.IntInput) GetPolicy46PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy46Poolname {
		return vs[0].([]GetPolicy46Poolname)[vs[1].(int)]
	}).(GetPolicy46PoolnameOutput)
}

type GetPolicy46Service struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetPolicy46ServiceInput is an input type that accepts GetPolicy46ServiceArgs and GetPolicy46ServiceOutput values.
// You can construct a concrete instance of `GetPolicy46ServiceInput` via:
//
//	GetPolicy46ServiceArgs{...}
type GetPolicy46ServiceInput interface {
	pulumi.Input

	ToGetPolicy46ServiceOutput() GetPolicy46ServiceOutput
	ToGetPolicy46ServiceOutputWithContext(context.Context) GetPolicy46ServiceOutput
}

type GetPolicy46ServiceArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy46ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy46Service)(nil)).Elem()
}

func (i GetPolicy46ServiceArgs) ToGetPolicy46ServiceOutput() GetPolicy46ServiceOutput {
	return i.ToGetPolicy46ServiceOutputWithContext(context.Background())
}

func (i GetPolicy46ServiceArgs) ToGetPolicy46ServiceOutputWithContext(ctx context.Context) GetPolicy46ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy46ServiceOutput)
}

// GetPolicy46ServiceArrayInput is an input type that accepts GetPolicy46ServiceArray and GetPolicy46ServiceArrayOutput values.
// You can construct a concrete instance of `GetPolicy46ServiceArrayInput` via:
//
//	GetPolicy46ServiceArray{ GetPolicy46ServiceArgs{...} }
type GetPolicy46ServiceArrayInput interface {
	pulumi.Input

	ToGetPolicy46ServiceArrayOutput() GetPolicy46ServiceArrayOutput
	ToGetPolicy46ServiceArrayOutputWithContext(context.Context) GetPolicy46ServiceArrayOutput
}

type GetPolicy46ServiceArray []GetPolicy46ServiceInput

func (GetPolicy46ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy46Service)(nil)).Elem()
}

func (i GetPolicy46ServiceArray) ToGetPolicy46ServiceArrayOutput() GetPolicy46ServiceArrayOutput {
	return i.ToGetPolicy46ServiceArrayOutputWithContext(context.Background())
}

func (i GetPolicy46ServiceArray) ToGetPolicy46ServiceArrayOutputWithContext(ctx context.Context) GetPolicy46ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy46ServiceArrayOutput)
}

type GetPolicy46ServiceOutput struct{ *pulumi.OutputState }

func (GetPolicy46ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy46Service)(nil)).Elem()
}

func (o GetPolicy46ServiceOutput) ToGetPolicy46ServiceOutput() GetPolicy46ServiceOutput {
	return o
}

func (o GetPolicy46ServiceOutput) ToGetPolicy46ServiceOutputWithContext(ctx context.Context) GetPolicy46ServiceOutput {
	return o
}

// IP pool name.
func (o GetPolicy46ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy46Service) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy46ServiceArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy46ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy46Service)(nil)).Elem()
}

func (o GetPolicy46ServiceArrayOutput) ToGetPolicy46ServiceArrayOutput() GetPolicy46ServiceArrayOutput {
	return o
}

func (o GetPolicy46ServiceArrayOutput) ToGetPolicy46ServiceArrayOutputWithContext(ctx context.Context) GetPolicy46ServiceArrayOutput {
	return o
}

func (o GetPolicy46ServiceArrayOutput) Index(i pulumi.IntInput) GetPolicy46ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy46Service {
		return vs[0].([]GetPolicy46Service)[vs[1].(int)]
	}).(GetPolicy46ServiceOutput)
}

type GetPolicy46Srcaddr struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetPolicy46SrcaddrInput is an input type that accepts GetPolicy46SrcaddrArgs and GetPolicy46SrcaddrOutput values.
// You can construct a concrete instance of `GetPolicy46SrcaddrInput` via:
//
//	GetPolicy46SrcaddrArgs{...}
type GetPolicy46SrcaddrInput interface {
	pulumi.Input

	ToGetPolicy46SrcaddrOutput() GetPolicy46SrcaddrOutput
	ToGetPolicy46SrcaddrOutputWithContext(context.Context) GetPolicy46SrcaddrOutput
}

type GetPolicy46SrcaddrArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy46SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy46Srcaddr)(nil)).Elem()
}

func (i GetPolicy46SrcaddrArgs) ToGetPolicy46SrcaddrOutput() GetPolicy46SrcaddrOutput {
	return i.ToGetPolicy46SrcaddrOutputWithContext(context.Background())
}

func (i GetPolicy46SrcaddrArgs) ToGetPolicy46SrcaddrOutputWithContext(ctx context.Context) GetPolicy46SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy46SrcaddrOutput)
}

// GetPolicy46SrcaddrArrayInput is an input type that accepts GetPolicy46SrcaddrArray and GetPolicy46SrcaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicy46SrcaddrArrayInput` via:
//
//	GetPolicy46SrcaddrArray{ GetPolicy46SrcaddrArgs{...} }
type GetPolicy46SrcaddrArrayInput interface {
	pulumi.Input

	ToGetPolicy46SrcaddrArrayOutput() GetPolicy46SrcaddrArrayOutput
	ToGetPolicy46SrcaddrArrayOutputWithContext(context.Context) GetPolicy46SrcaddrArrayOutput
}

type GetPolicy46SrcaddrArray []GetPolicy46SrcaddrInput

func (GetPolicy46SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy46Srcaddr)(nil)).Elem()
}

func (i GetPolicy46SrcaddrArray) ToGetPolicy46SrcaddrArrayOutput() GetPolicy46SrcaddrArrayOutput {
	return i.ToGetPolicy46SrcaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicy46SrcaddrArray) ToGetPolicy46SrcaddrArrayOutputWithContext(ctx context.Context) GetPolicy46SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy46SrcaddrArrayOutput)
}

type GetPolicy46SrcaddrOutput struct{ *pulumi.OutputState }

func (GetPolicy46SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy46Srcaddr)(nil)).Elem()
}

func (o GetPolicy46SrcaddrOutput) ToGetPolicy46SrcaddrOutput() GetPolicy46SrcaddrOutput {
	return o
}

func (o GetPolicy46SrcaddrOutput) ToGetPolicy46SrcaddrOutputWithContext(ctx context.Context) GetPolicy46SrcaddrOutput {
	return o
}

// IP pool name.
func (o GetPolicy46SrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy46Srcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy46SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy46SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy46Srcaddr)(nil)).Elem()
}

func (o GetPolicy46SrcaddrArrayOutput) ToGetPolicy46SrcaddrArrayOutput() GetPolicy46SrcaddrArrayOutput {
	return o
}

func (o GetPolicy46SrcaddrArrayOutput) ToGetPolicy46SrcaddrArrayOutputWithContext(ctx context.Context) GetPolicy46SrcaddrArrayOutput {
	return o
}

func (o GetPolicy46SrcaddrArrayOutput) Index(i pulumi.IntInput) GetPolicy46SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy46Srcaddr {
		return vs[0].([]GetPolicy46Srcaddr)[vs[1].(int)]
	}).(GetPolicy46SrcaddrOutput)
}

type GetPolicy64Dstaddr struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetPolicy64DstaddrInput is an input type that accepts GetPolicy64DstaddrArgs and GetPolicy64DstaddrOutput values.
// You can construct a concrete instance of `GetPolicy64DstaddrInput` via:
//
//	GetPolicy64DstaddrArgs{...}
type GetPolicy64DstaddrInput interface {
	pulumi.Input

	ToGetPolicy64DstaddrOutput() GetPolicy64DstaddrOutput
	ToGetPolicy64DstaddrOutputWithContext(context.Context) GetPolicy64DstaddrOutput
}

type GetPolicy64DstaddrArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy64DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy64Dstaddr)(nil)).Elem()
}

func (i GetPolicy64DstaddrArgs) ToGetPolicy64DstaddrOutput() GetPolicy64DstaddrOutput {
	return i.ToGetPolicy64DstaddrOutputWithContext(context.Background())
}

func (i GetPolicy64DstaddrArgs) ToGetPolicy64DstaddrOutputWithContext(ctx context.Context) GetPolicy64DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy64DstaddrOutput)
}

// GetPolicy64DstaddrArrayInput is an input type that accepts GetPolicy64DstaddrArray and GetPolicy64DstaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicy64DstaddrArrayInput` via:
//
//	GetPolicy64DstaddrArray{ GetPolicy64DstaddrArgs{...} }
type GetPolicy64DstaddrArrayInput interface {
	pulumi.Input

	ToGetPolicy64DstaddrArrayOutput() GetPolicy64DstaddrArrayOutput
	ToGetPolicy64DstaddrArrayOutputWithContext(context.Context) GetPolicy64DstaddrArrayOutput
}

type GetPolicy64DstaddrArray []GetPolicy64DstaddrInput

func (GetPolicy64DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy64Dstaddr)(nil)).Elem()
}

func (i GetPolicy64DstaddrArray) ToGetPolicy64DstaddrArrayOutput() GetPolicy64DstaddrArrayOutput {
	return i.ToGetPolicy64DstaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicy64DstaddrArray) ToGetPolicy64DstaddrArrayOutputWithContext(ctx context.Context) GetPolicy64DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy64DstaddrArrayOutput)
}

type GetPolicy64DstaddrOutput struct{ *pulumi.OutputState }

func (GetPolicy64DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy64Dstaddr)(nil)).Elem()
}

func (o GetPolicy64DstaddrOutput) ToGetPolicy64DstaddrOutput() GetPolicy64DstaddrOutput {
	return o
}

func (o GetPolicy64DstaddrOutput) ToGetPolicy64DstaddrOutputWithContext(ctx context.Context) GetPolicy64DstaddrOutput {
	return o
}

// IP pool name.
func (o GetPolicy64DstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy64Dstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy64DstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy64DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy64Dstaddr)(nil)).Elem()
}

func (o GetPolicy64DstaddrArrayOutput) ToGetPolicy64DstaddrArrayOutput() GetPolicy64DstaddrArrayOutput {
	return o
}

func (o GetPolicy64DstaddrArrayOutput) ToGetPolicy64DstaddrArrayOutputWithContext(ctx context.Context) GetPolicy64DstaddrArrayOutput {
	return o
}

func (o GetPolicy64DstaddrArrayOutput) Index(i pulumi.IntInput) GetPolicy64DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy64Dstaddr {
		return vs[0].([]GetPolicy64Dstaddr)[vs[1].(int)]
	}).(GetPolicy64DstaddrOutput)
}

type GetPolicy64Poolname struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetPolicy64PoolnameInput is an input type that accepts GetPolicy64PoolnameArgs and GetPolicy64PoolnameOutput values.
// You can construct a concrete instance of `GetPolicy64PoolnameInput` via:
//
//	GetPolicy64PoolnameArgs{...}
type GetPolicy64PoolnameInput interface {
	pulumi.Input

	ToGetPolicy64PoolnameOutput() GetPolicy64PoolnameOutput
	ToGetPolicy64PoolnameOutputWithContext(context.Context) GetPolicy64PoolnameOutput
}

type GetPolicy64PoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy64PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy64Poolname)(nil)).Elem()
}

func (i GetPolicy64PoolnameArgs) ToGetPolicy64PoolnameOutput() GetPolicy64PoolnameOutput {
	return i.ToGetPolicy64PoolnameOutputWithContext(context.Background())
}

func (i GetPolicy64PoolnameArgs) ToGetPolicy64PoolnameOutputWithContext(ctx context.Context) GetPolicy64PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy64PoolnameOutput)
}

// GetPolicy64PoolnameArrayInput is an input type that accepts GetPolicy64PoolnameArray and GetPolicy64PoolnameArrayOutput values.
// You can construct a concrete instance of `GetPolicy64PoolnameArrayInput` via:
//
//	GetPolicy64PoolnameArray{ GetPolicy64PoolnameArgs{...} }
type GetPolicy64PoolnameArrayInput interface {
	pulumi.Input

	ToGetPolicy64PoolnameArrayOutput() GetPolicy64PoolnameArrayOutput
	ToGetPolicy64PoolnameArrayOutputWithContext(context.Context) GetPolicy64PoolnameArrayOutput
}

type GetPolicy64PoolnameArray []GetPolicy64PoolnameInput

func (GetPolicy64PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy64Poolname)(nil)).Elem()
}

func (i GetPolicy64PoolnameArray) ToGetPolicy64PoolnameArrayOutput() GetPolicy64PoolnameArrayOutput {
	return i.ToGetPolicy64PoolnameArrayOutputWithContext(context.Background())
}

func (i GetPolicy64PoolnameArray) ToGetPolicy64PoolnameArrayOutputWithContext(ctx context.Context) GetPolicy64PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy64PoolnameArrayOutput)
}

type GetPolicy64PoolnameOutput struct{ *pulumi.OutputState }

func (GetPolicy64PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy64Poolname)(nil)).Elem()
}

func (o GetPolicy64PoolnameOutput) ToGetPolicy64PoolnameOutput() GetPolicy64PoolnameOutput {
	return o
}

func (o GetPolicy64PoolnameOutput) ToGetPolicy64PoolnameOutputWithContext(ctx context.Context) GetPolicy64PoolnameOutput {
	return o
}

// IP pool name.
func (o GetPolicy64PoolnameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy64Poolname) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy64PoolnameArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy64PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy64Poolname)(nil)).Elem()
}

func (o GetPolicy64PoolnameArrayOutput) ToGetPolicy64PoolnameArrayOutput() GetPolicy64PoolnameArrayOutput {
	return o
}

func (o GetPolicy64PoolnameArrayOutput) ToGetPolicy64PoolnameArrayOutputWithContext(ctx context.Context) GetPolicy64PoolnameArrayOutput {
	return o
}

func (o GetPolicy64PoolnameArrayOutput) Index(i pulumi.IntInput) GetPolicy64PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy64Poolname {
		return vs[0].([]GetPolicy64Poolname)[vs[1].(int)]
	}).(GetPolicy64PoolnameOutput)
}

type GetPolicy64Service struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetPolicy64ServiceInput is an input type that accepts GetPolicy64ServiceArgs and GetPolicy64ServiceOutput values.
// You can construct a concrete instance of `GetPolicy64ServiceInput` via:
//
//	GetPolicy64ServiceArgs{...}
type GetPolicy64ServiceInput interface {
	pulumi.Input

	ToGetPolicy64ServiceOutput() GetPolicy64ServiceOutput
	ToGetPolicy64ServiceOutputWithContext(context.Context) GetPolicy64ServiceOutput
}

type GetPolicy64ServiceArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy64ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy64Service)(nil)).Elem()
}

func (i GetPolicy64ServiceArgs) ToGetPolicy64ServiceOutput() GetPolicy64ServiceOutput {
	return i.ToGetPolicy64ServiceOutputWithContext(context.Background())
}

func (i GetPolicy64ServiceArgs) ToGetPolicy64ServiceOutputWithContext(ctx context.Context) GetPolicy64ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy64ServiceOutput)
}

// GetPolicy64ServiceArrayInput is an input type that accepts GetPolicy64ServiceArray and GetPolicy64ServiceArrayOutput values.
// You can construct a concrete instance of `GetPolicy64ServiceArrayInput` via:
//
//	GetPolicy64ServiceArray{ GetPolicy64ServiceArgs{...} }
type GetPolicy64ServiceArrayInput interface {
	pulumi.Input

	ToGetPolicy64ServiceArrayOutput() GetPolicy64ServiceArrayOutput
	ToGetPolicy64ServiceArrayOutputWithContext(context.Context) GetPolicy64ServiceArrayOutput
}

type GetPolicy64ServiceArray []GetPolicy64ServiceInput

func (GetPolicy64ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy64Service)(nil)).Elem()
}

func (i GetPolicy64ServiceArray) ToGetPolicy64ServiceArrayOutput() GetPolicy64ServiceArrayOutput {
	return i.ToGetPolicy64ServiceArrayOutputWithContext(context.Background())
}

func (i GetPolicy64ServiceArray) ToGetPolicy64ServiceArrayOutputWithContext(ctx context.Context) GetPolicy64ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy64ServiceArrayOutput)
}

type GetPolicy64ServiceOutput struct{ *pulumi.OutputState }

func (GetPolicy64ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy64Service)(nil)).Elem()
}

func (o GetPolicy64ServiceOutput) ToGetPolicy64ServiceOutput() GetPolicy64ServiceOutput {
	return o
}

func (o GetPolicy64ServiceOutput) ToGetPolicy64ServiceOutputWithContext(ctx context.Context) GetPolicy64ServiceOutput {
	return o
}

// IP pool name.
func (o GetPolicy64ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy64Service) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy64ServiceArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy64ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy64Service)(nil)).Elem()
}

func (o GetPolicy64ServiceArrayOutput) ToGetPolicy64ServiceArrayOutput() GetPolicy64ServiceArrayOutput {
	return o
}

func (o GetPolicy64ServiceArrayOutput) ToGetPolicy64ServiceArrayOutputWithContext(ctx context.Context) GetPolicy64ServiceArrayOutput {
	return o
}

func (o GetPolicy64ServiceArrayOutput) Index(i pulumi.IntInput) GetPolicy64ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy64Service {
		return vs[0].([]GetPolicy64Service)[vs[1].(int)]
	}).(GetPolicy64ServiceOutput)
}

type GetPolicy64Srcaddr struct {
	// IP pool name.
	Name string `pulumi:"name"`
}

// GetPolicy64SrcaddrInput is an input type that accepts GetPolicy64SrcaddrArgs and GetPolicy64SrcaddrOutput values.
// You can construct a concrete instance of `GetPolicy64SrcaddrInput` via:
//
//	GetPolicy64SrcaddrArgs{...}
type GetPolicy64SrcaddrInput interface {
	pulumi.Input

	ToGetPolicy64SrcaddrOutput() GetPolicy64SrcaddrOutput
	ToGetPolicy64SrcaddrOutputWithContext(context.Context) GetPolicy64SrcaddrOutput
}

type GetPolicy64SrcaddrArgs struct {
	// IP pool name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy64SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy64Srcaddr)(nil)).Elem()
}

func (i GetPolicy64SrcaddrArgs) ToGetPolicy64SrcaddrOutput() GetPolicy64SrcaddrOutput {
	return i.ToGetPolicy64SrcaddrOutputWithContext(context.Background())
}

func (i GetPolicy64SrcaddrArgs) ToGetPolicy64SrcaddrOutputWithContext(ctx context.Context) GetPolicy64SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy64SrcaddrOutput)
}

// GetPolicy64SrcaddrArrayInput is an input type that accepts GetPolicy64SrcaddrArray and GetPolicy64SrcaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicy64SrcaddrArrayInput` via:
//
//	GetPolicy64SrcaddrArray{ GetPolicy64SrcaddrArgs{...} }
type GetPolicy64SrcaddrArrayInput interface {
	pulumi.Input

	ToGetPolicy64SrcaddrArrayOutput() GetPolicy64SrcaddrArrayOutput
	ToGetPolicy64SrcaddrArrayOutputWithContext(context.Context) GetPolicy64SrcaddrArrayOutput
}

type GetPolicy64SrcaddrArray []GetPolicy64SrcaddrInput

func (GetPolicy64SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy64Srcaddr)(nil)).Elem()
}

func (i GetPolicy64SrcaddrArray) ToGetPolicy64SrcaddrArrayOutput() GetPolicy64SrcaddrArrayOutput {
	return i.ToGetPolicy64SrcaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicy64SrcaddrArray) ToGetPolicy64SrcaddrArrayOutputWithContext(ctx context.Context) GetPolicy64SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy64SrcaddrArrayOutput)
}

type GetPolicy64SrcaddrOutput struct{ *pulumi.OutputState }

func (GetPolicy64SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy64Srcaddr)(nil)).Elem()
}

func (o GetPolicy64SrcaddrOutput) ToGetPolicy64SrcaddrOutput() GetPolicy64SrcaddrOutput {
	return o
}

func (o GetPolicy64SrcaddrOutput) ToGetPolicy64SrcaddrOutputWithContext(ctx context.Context) GetPolicy64SrcaddrOutput {
	return o
}

// IP pool name.
func (o GetPolicy64SrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy64Srcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy64SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy64SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy64Srcaddr)(nil)).Elem()
}

func (o GetPolicy64SrcaddrArrayOutput) ToGetPolicy64SrcaddrArrayOutput() GetPolicy64SrcaddrArrayOutput {
	return o
}

func (o GetPolicy64SrcaddrArrayOutput) ToGetPolicy64SrcaddrArrayOutputWithContext(ctx context.Context) GetPolicy64SrcaddrArrayOutput {
	return o
}

func (o GetPolicy64SrcaddrArrayOutput) Index(i pulumi.IntInput) GetPolicy64SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy64Srcaddr {
		return vs[0].([]GetPolicy64Srcaddr)[vs[1].(int)]
	}).(GetPolicy64SrcaddrOutput)
}

type GetPolicy6AppCategory struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetPolicy6AppCategoryInput is an input type that accepts GetPolicy6AppCategoryArgs and GetPolicy6AppCategoryOutput values.
// You can construct a concrete instance of `GetPolicy6AppCategoryInput` via:
//
//	GetPolicy6AppCategoryArgs{...}
type GetPolicy6AppCategoryInput interface {
	pulumi.Input

	ToGetPolicy6AppCategoryOutput() GetPolicy6AppCategoryOutput
	ToGetPolicy6AppCategoryOutputWithContext(context.Context) GetPolicy6AppCategoryOutput
}

type GetPolicy6AppCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicy6AppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6AppCategory)(nil)).Elem()
}

func (i GetPolicy6AppCategoryArgs) ToGetPolicy6AppCategoryOutput() GetPolicy6AppCategoryOutput {
	return i.ToGetPolicy6AppCategoryOutputWithContext(context.Background())
}

func (i GetPolicy6AppCategoryArgs) ToGetPolicy6AppCategoryOutputWithContext(ctx context.Context) GetPolicy6AppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6AppCategoryOutput)
}

// GetPolicy6AppCategoryArrayInput is an input type that accepts GetPolicy6AppCategoryArray and GetPolicy6AppCategoryArrayOutput values.
// You can construct a concrete instance of `GetPolicy6AppCategoryArrayInput` via:
//
//	GetPolicy6AppCategoryArray{ GetPolicy6AppCategoryArgs{...} }
type GetPolicy6AppCategoryArrayInput interface {
	pulumi.Input

	ToGetPolicy6AppCategoryArrayOutput() GetPolicy6AppCategoryArrayOutput
	ToGetPolicy6AppCategoryArrayOutputWithContext(context.Context) GetPolicy6AppCategoryArrayOutput
}

type GetPolicy6AppCategoryArray []GetPolicy6AppCategoryInput

func (GetPolicy6AppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6AppCategory)(nil)).Elem()
}

func (i GetPolicy6AppCategoryArray) ToGetPolicy6AppCategoryArrayOutput() GetPolicy6AppCategoryArrayOutput {
	return i.ToGetPolicy6AppCategoryArrayOutputWithContext(context.Background())
}

func (i GetPolicy6AppCategoryArray) ToGetPolicy6AppCategoryArrayOutputWithContext(ctx context.Context) GetPolicy6AppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6AppCategoryArrayOutput)
}

type GetPolicy6AppCategoryOutput struct{ *pulumi.OutputState }

func (GetPolicy6AppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6AppCategory)(nil)).Elem()
}

func (o GetPolicy6AppCategoryOutput) ToGetPolicy6AppCategoryOutput() GetPolicy6AppCategoryOutput {
	return o
}

func (o GetPolicy6AppCategoryOutput) ToGetPolicy6AppCategoryOutputWithContext(ctx context.Context) GetPolicy6AppCategoryOutput {
	return o
}

// URL category ID.
func (o GetPolicy6AppCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicy6AppCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicy6AppCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6AppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6AppCategory)(nil)).Elem()
}

func (o GetPolicy6AppCategoryArrayOutput) ToGetPolicy6AppCategoryArrayOutput() GetPolicy6AppCategoryArrayOutput {
	return o
}

func (o GetPolicy6AppCategoryArrayOutput) ToGetPolicy6AppCategoryArrayOutputWithContext(ctx context.Context) GetPolicy6AppCategoryArrayOutput {
	return o
}

func (o GetPolicy6AppCategoryArrayOutput) Index(i pulumi.IntInput) GetPolicy6AppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6AppCategory {
		return vs[0].([]GetPolicy6AppCategory)[vs[1].(int)]
	}).(GetPolicy6AppCategoryOutput)
}

type GetPolicy6AppGroup struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6AppGroupInput is an input type that accepts GetPolicy6AppGroupArgs and GetPolicy6AppGroupOutput values.
// You can construct a concrete instance of `GetPolicy6AppGroupInput` via:
//
//	GetPolicy6AppGroupArgs{...}
type GetPolicy6AppGroupInput interface {
	pulumi.Input

	ToGetPolicy6AppGroupOutput() GetPolicy6AppGroupOutput
	ToGetPolicy6AppGroupOutputWithContext(context.Context) GetPolicy6AppGroupOutput
}

type GetPolicy6AppGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6AppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6AppGroup)(nil)).Elem()
}

func (i GetPolicy6AppGroupArgs) ToGetPolicy6AppGroupOutput() GetPolicy6AppGroupOutput {
	return i.ToGetPolicy6AppGroupOutputWithContext(context.Background())
}

func (i GetPolicy6AppGroupArgs) ToGetPolicy6AppGroupOutputWithContext(ctx context.Context) GetPolicy6AppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6AppGroupOutput)
}

// GetPolicy6AppGroupArrayInput is an input type that accepts GetPolicy6AppGroupArray and GetPolicy6AppGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicy6AppGroupArrayInput` via:
//
//	GetPolicy6AppGroupArray{ GetPolicy6AppGroupArgs{...} }
type GetPolicy6AppGroupArrayInput interface {
	pulumi.Input

	ToGetPolicy6AppGroupArrayOutput() GetPolicy6AppGroupArrayOutput
	ToGetPolicy6AppGroupArrayOutputWithContext(context.Context) GetPolicy6AppGroupArrayOutput
}

type GetPolicy6AppGroupArray []GetPolicy6AppGroupInput

func (GetPolicy6AppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6AppGroup)(nil)).Elem()
}

func (i GetPolicy6AppGroupArray) ToGetPolicy6AppGroupArrayOutput() GetPolicy6AppGroupArrayOutput {
	return i.ToGetPolicy6AppGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicy6AppGroupArray) ToGetPolicy6AppGroupArrayOutputWithContext(ctx context.Context) GetPolicy6AppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6AppGroupArrayOutput)
}

type GetPolicy6AppGroupOutput struct{ *pulumi.OutputState }

func (GetPolicy6AppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6AppGroup)(nil)).Elem()
}

func (o GetPolicy6AppGroupOutput) ToGetPolicy6AppGroupOutput() GetPolicy6AppGroupOutput {
	return o
}

func (o GetPolicy6AppGroupOutput) ToGetPolicy6AppGroupOutputWithContext(ctx context.Context) GetPolicy6AppGroupOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6AppGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6AppGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6AppGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6AppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6AppGroup)(nil)).Elem()
}

func (o GetPolicy6AppGroupArrayOutput) ToGetPolicy6AppGroupArrayOutput() GetPolicy6AppGroupArrayOutput {
	return o
}

func (o GetPolicy6AppGroupArrayOutput) ToGetPolicy6AppGroupArrayOutputWithContext(ctx context.Context) GetPolicy6AppGroupArrayOutput {
	return o
}

func (o GetPolicy6AppGroupArrayOutput) Index(i pulumi.IntInput) GetPolicy6AppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6AppGroup {
		return vs[0].([]GetPolicy6AppGroup)[vs[1].(int)]
	}).(GetPolicy6AppGroupOutput)
}

type GetPolicy6Application struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetPolicy6ApplicationInput is an input type that accepts GetPolicy6ApplicationArgs and GetPolicy6ApplicationOutput values.
// You can construct a concrete instance of `GetPolicy6ApplicationInput` via:
//
//	GetPolicy6ApplicationArgs{...}
type GetPolicy6ApplicationInput interface {
	pulumi.Input

	ToGetPolicy6ApplicationOutput() GetPolicy6ApplicationOutput
	ToGetPolicy6ApplicationOutputWithContext(context.Context) GetPolicy6ApplicationOutput
}

type GetPolicy6ApplicationArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicy6ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Application)(nil)).Elem()
}

func (i GetPolicy6ApplicationArgs) ToGetPolicy6ApplicationOutput() GetPolicy6ApplicationOutput {
	return i.ToGetPolicy6ApplicationOutputWithContext(context.Background())
}

func (i GetPolicy6ApplicationArgs) ToGetPolicy6ApplicationOutputWithContext(ctx context.Context) GetPolicy6ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6ApplicationOutput)
}

// GetPolicy6ApplicationArrayInput is an input type that accepts GetPolicy6ApplicationArray and GetPolicy6ApplicationArrayOutput values.
// You can construct a concrete instance of `GetPolicy6ApplicationArrayInput` via:
//
//	GetPolicy6ApplicationArray{ GetPolicy6ApplicationArgs{...} }
type GetPolicy6ApplicationArrayInput interface {
	pulumi.Input

	ToGetPolicy6ApplicationArrayOutput() GetPolicy6ApplicationArrayOutput
	ToGetPolicy6ApplicationArrayOutputWithContext(context.Context) GetPolicy6ApplicationArrayOutput
}

type GetPolicy6ApplicationArray []GetPolicy6ApplicationInput

func (GetPolicy6ApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Application)(nil)).Elem()
}

func (i GetPolicy6ApplicationArray) ToGetPolicy6ApplicationArrayOutput() GetPolicy6ApplicationArrayOutput {
	return i.ToGetPolicy6ApplicationArrayOutputWithContext(context.Background())
}

func (i GetPolicy6ApplicationArray) ToGetPolicy6ApplicationArrayOutputWithContext(ctx context.Context) GetPolicy6ApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6ApplicationArrayOutput)
}

type GetPolicy6ApplicationOutput struct{ *pulumi.OutputState }

func (GetPolicy6ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Application)(nil)).Elem()
}

func (o GetPolicy6ApplicationOutput) ToGetPolicy6ApplicationOutput() GetPolicy6ApplicationOutput {
	return o
}

func (o GetPolicy6ApplicationOutput) ToGetPolicy6ApplicationOutputWithContext(ctx context.Context) GetPolicy6ApplicationOutput {
	return o
}

// URL category ID.
func (o GetPolicy6ApplicationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicy6Application) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicy6ApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6ApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Application)(nil)).Elem()
}

func (o GetPolicy6ApplicationArrayOutput) ToGetPolicy6ApplicationArrayOutput() GetPolicy6ApplicationArrayOutput {
	return o
}

func (o GetPolicy6ApplicationArrayOutput) ToGetPolicy6ApplicationArrayOutputWithContext(ctx context.Context) GetPolicy6ApplicationArrayOutput {
	return o
}

func (o GetPolicy6ApplicationArrayOutput) Index(i pulumi.IntInput) GetPolicy6ApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6Application {
		return vs[0].([]GetPolicy6Application)[vs[1].(int)]
	}).(GetPolicy6ApplicationOutput)
}

type GetPolicy6CustomLogField struct {
	// Custom log field.
	FieldId string `pulumi:"fieldId"`
}

// GetPolicy6CustomLogFieldInput is an input type that accepts GetPolicy6CustomLogFieldArgs and GetPolicy6CustomLogFieldOutput values.
// You can construct a concrete instance of `GetPolicy6CustomLogFieldInput` via:
//
//	GetPolicy6CustomLogFieldArgs{...}
type GetPolicy6CustomLogFieldInput interface {
	pulumi.Input

	ToGetPolicy6CustomLogFieldOutput() GetPolicy6CustomLogFieldOutput
	ToGetPolicy6CustomLogFieldOutputWithContext(context.Context) GetPolicy6CustomLogFieldOutput
}

type GetPolicy6CustomLogFieldArgs struct {
	// Custom log field.
	FieldId pulumi.StringInput `pulumi:"fieldId"`
}

func (GetPolicy6CustomLogFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6CustomLogField)(nil)).Elem()
}

func (i GetPolicy6CustomLogFieldArgs) ToGetPolicy6CustomLogFieldOutput() GetPolicy6CustomLogFieldOutput {
	return i.ToGetPolicy6CustomLogFieldOutputWithContext(context.Background())
}

func (i GetPolicy6CustomLogFieldArgs) ToGetPolicy6CustomLogFieldOutputWithContext(ctx context.Context) GetPolicy6CustomLogFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6CustomLogFieldOutput)
}

// GetPolicy6CustomLogFieldArrayInput is an input type that accepts GetPolicy6CustomLogFieldArray and GetPolicy6CustomLogFieldArrayOutput values.
// You can construct a concrete instance of `GetPolicy6CustomLogFieldArrayInput` via:
//
//	GetPolicy6CustomLogFieldArray{ GetPolicy6CustomLogFieldArgs{...} }
type GetPolicy6CustomLogFieldArrayInput interface {
	pulumi.Input

	ToGetPolicy6CustomLogFieldArrayOutput() GetPolicy6CustomLogFieldArrayOutput
	ToGetPolicy6CustomLogFieldArrayOutputWithContext(context.Context) GetPolicy6CustomLogFieldArrayOutput
}

type GetPolicy6CustomLogFieldArray []GetPolicy6CustomLogFieldInput

func (GetPolicy6CustomLogFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6CustomLogField)(nil)).Elem()
}

func (i GetPolicy6CustomLogFieldArray) ToGetPolicy6CustomLogFieldArrayOutput() GetPolicy6CustomLogFieldArrayOutput {
	return i.ToGetPolicy6CustomLogFieldArrayOutputWithContext(context.Background())
}

func (i GetPolicy6CustomLogFieldArray) ToGetPolicy6CustomLogFieldArrayOutputWithContext(ctx context.Context) GetPolicy6CustomLogFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6CustomLogFieldArrayOutput)
}

type GetPolicy6CustomLogFieldOutput struct{ *pulumi.OutputState }

func (GetPolicy6CustomLogFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6CustomLogField)(nil)).Elem()
}

func (o GetPolicy6CustomLogFieldOutput) ToGetPolicy6CustomLogFieldOutput() GetPolicy6CustomLogFieldOutput {
	return o
}

func (o GetPolicy6CustomLogFieldOutput) ToGetPolicy6CustomLogFieldOutputWithContext(ctx context.Context) GetPolicy6CustomLogFieldOutput {
	return o
}

// Custom log field.
func (o GetPolicy6CustomLogFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6CustomLogField) string { return v.FieldId }).(pulumi.StringOutput)
}

type GetPolicy6CustomLogFieldArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6CustomLogFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6CustomLogField)(nil)).Elem()
}

func (o GetPolicy6CustomLogFieldArrayOutput) ToGetPolicy6CustomLogFieldArrayOutput() GetPolicy6CustomLogFieldArrayOutput {
	return o
}

func (o GetPolicy6CustomLogFieldArrayOutput) ToGetPolicy6CustomLogFieldArrayOutputWithContext(ctx context.Context) GetPolicy6CustomLogFieldArrayOutput {
	return o
}

func (o GetPolicy6CustomLogFieldArrayOutput) Index(i pulumi.IntInput) GetPolicy6CustomLogFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6CustomLogField {
		return vs[0].([]GetPolicy6CustomLogField)[vs[1].(int)]
	}).(GetPolicy6CustomLogFieldOutput)
}

type GetPolicy6Device struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6DeviceInput is an input type that accepts GetPolicy6DeviceArgs and GetPolicy6DeviceOutput values.
// You can construct a concrete instance of `GetPolicy6DeviceInput` via:
//
//	GetPolicy6DeviceArgs{...}
type GetPolicy6DeviceInput interface {
	pulumi.Input

	ToGetPolicy6DeviceOutput() GetPolicy6DeviceOutput
	ToGetPolicy6DeviceOutputWithContext(context.Context) GetPolicy6DeviceOutput
}

type GetPolicy6DeviceArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6DeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Device)(nil)).Elem()
}

func (i GetPolicy6DeviceArgs) ToGetPolicy6DeviceOutput() GetPolicy6DeviceOutput {
	return i.ToGetPolicy6DeviceOutputWithContext(context.Background())
}

func (i GetPolicy6DeviceArgs) ToGetPolicy6DeviceOutputWithContext(ctx context.Context) GetPolicy6DeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6DeviceOutput)
}

// GetPolicy6DeviceArrayInput is an input type that accepts GetPolicy6DeviceArray and GetPolicy6DeviceArrayOutput values.
// You can construct a concrete instance of `GetPolicy6DeviceArrayInput` via:
//
//	GetPolicy6DeviceArray{ GetPolicy6DeviceArgs{...} }
type GetPolicy6DeviceArrayInput interface {
	pulumi.Input

	ToGetPolicy6DeviceArrayOutput() GetPolicy6DeviceArrayOutput
	ToGetPolicy6DeviceArrayOutputWithContext(context.Context) GetPolicy6DeviceArrayOutput
}

type GetPolicy6DeviceArray []GetPolicy6DeviceInput

func (GetPolicy6DeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Device)(nil)).Elem()
}

func (i GetPolicy6DeviceArray) ToGetPolicy6DeviceArrayOutput() GetPolicy6DeviceArrayOutput {
	return i.ToGetPolicy6DeviceArrayOutputWithContext(context.Background())
}

func (i GetPolicy6DeviceArray) ToGetPolicy6DeviceArrayOutputWithContext(ctx context.Context) GetPolicy6DeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6DeviceArrayOutput)
}

type GetPolicy6DeviceOutput struct{ *pulumi.OutputState }

func (GetPolicy6DeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Device)(nil)).Elem()
}

func (o GetPolicy6DeviceOutput) ToGetPolicy6DeviceOutput() GetPolicy6DeviceOutput {
	return o
}

func (o GetPolicy6DeviceOutput) ToGetPolicy6DeviceOutputWithContext(ctx context.Context) GetPolicy6DeviceOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6DeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6Device) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6DeviceArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6DeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Device)(nil)).Elem()
}

func (o GetPolicy6DeviceArrayOutput) ToGetPolicy6DeviceArrayOutput() GetPolicy6DeviceArrayOutput {
	return o
}

func (o GetPolicy6DeviceArrayOutput) ToGetPolicy6DeviceArrayOutputWithContext(ctx context.Context) GetPolicy6DeviceArrayOutput {
	return o
}

func (o GetPolicy6DeviceArrayOutput) Index(i pulumi.IntInput) GetPolicy6DeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6Device {
		return vs[0].([]GetPolicy6Device)[vs[1].(int)]
	}).(GetPolicy6DeviceOutput)
}

type GetPolicy6Dstaddr struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6DstaddrInput is an input type that accepts GetPolicy6DstaddrArgs and GetPolicy6DstaddrOutput values.
// You can construct a concrete instance of `GetPolicy6DstaddrInput` via:
//
//	GetPolicy6DstaddrArgs{...}
type GetPolicy6DstaddrInput interface {
	pulumi.Input

	ToGetPolicy6DstaddrOutput() GetPolicy6DstaddrOutput
	ToGetPolicy6DstaddrOutputWithContext(context.Context) GetPolicy6DstaddrOutput
}

type GetPolicy6DstaddrArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Dstaddr)(nil)).Elem()
}

func (i GetPolicy6DstaddrArgs) ToGetPolicy6DstaddrOutput() GetPolicy6DstaddrOutput {
	return i.ToGetPolicy6DstaddrOutputWithContext(context.Background())
}

func (i GetPolicy6DstaddrArgs) ToGetPolicy6DstaddrOutputWithContext(ctx context.Context) GetPolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6DstaddrOutput)
}

// GetPolicy6DstaddrArrayInput is an input type that accepts GetPolicy6DstaddrArray and GetPolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicy6DstaddrArrayInput` via:
//
//	GetPolicy6DstaddrArray{ GetPolicy6DstaddrArgs{...} }
type GetPolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToGetPolicy6DstaddrArrayOutput() GetPolicy6DstaddrArrayOutput
	ToGetPolicy6DstaddrArrayOutputWithContext(context.Context) GetPolicy6DstaddrArrayOutput
}

type GetPolicy6DstaddrArray []GetPolicy6DstaddrInput

func (GetPolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Dstaddr)(nil)).Elem()
}

func (i GetPolicy6DstaddrArray) ToGetPolicy6DstaddrArrayOutput() GetPolicy6DstaddrArrayOutput {
	return i.ToGetPolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicy6DstaddrArray) ToGetPolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetPolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6DstaddrArrayOutput)
}

type GetPolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (GetPolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Dstaddr)(nil)).Elem()
}

func (o GetPolicy6DstaddrOutput) ToGetPolicy6DstaddrOutput() GetPolicy6DstaddrOutput {
	return o
}

func (o GetPolicy6DstaddrOutput) ToGetPolicy6DstaddrOutputWithContext(ctx context.Context) GetPolicy6DstaddrOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6DstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6Dstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Dstaddr)(nil)).Elem()
}

func (o GetPolicy6DstaddrArrayOutput) ToGetPolicy6DstaddrArrayOutput() GetPolicy6DstaddrArrayOutput {
	return o
}

func (o GetPolicy6DstaddrArrayOutput) ToGetPolicy6DstaddrArrayOutputWithContext(ctx context.Context) GetPolicy6DstaddrArrayOutput {
	return o
}

func (o GetPolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) GetPolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6Dstaddr {
		return vs[0].([]GetPolicy6Dstaddr)[vs[1].(int)]
	}).(GetPolicy6DstaddrOutput)
}

type GetPolicy6Dstintf struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6DstintfInput is an input type that accepts GetPolicy6DstintfArgs and GetPolicy6DstintfOutput values.
// You can construct a concrete instance of `GetPolicy6DstintfInput` via:
//
//	GetPolicy6DstintfArgs{...}
type GetPolicy6DstintfInput interface {
	pulumi.Input

	ToGetPolicy6DstintfOutput() GetPolicy6DstintfOutput
	ToGetPolicy6DstintfOutputWithContext(context.Context) GetPolicy6DstintfOutput
}

type GetPolicy6DstintfArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6DstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Dstintf)(nil)).Elem()
}

func (i GetPolicy6DstintfArgs) ToGetPolicy6DstintfOutput() GetPolicy6DstintfOutput {
	return i.ToGetPolicy6DstintfOutputWithContext(context.Background())
}

func (i GetPolicy6DstintfArgs) ToGetPolicy6DstintfOutputWithContext(ctx context.Context) GetPolicy6DstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6DstintfOutput)
}

// GetPolicy6DstintfArrayInput is an input type that accepts GetPolicy6DstintfArray and GetPolicy6DstintfArrayOutput values.
// You can construct a concrete instance of `GetPolicy6DstintfArrayInput` via:
//
//	GetPolicy6DstintfArray{ GetPolicy6DstintfArgs{...} }
type GetPolicy6DstintfArrayInput interface {
	pulumi.Input

	ToGetPolicy6DstintfArrayOutput() GetPolicy6DstintfArrayOutput
	ToGetPolicy6DstintfArrayOutputWithContext(context.Context) GetPolicy6DstintfArrayOutput
}

type GetPolicy6DstintfArray []GetPolicy6DstintfInput

func (GetPolicy6DstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Dstintf)(nil)).Elem()
}

func (i GetPolicy6DstintfArray) ToGetPolicy6DstintfArrayOutput() GetPolicy6DstintfArrayOutput {
	return i.ToGetPolicy6DstintfArrayOutputWithContext(context.Background())
}

func (i GetPolicy6DstintfArray) ToGetPolicy6DstintfArrayOutputWithContext(ctx context.Context) GetPolicy6DstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6DstintfArrayOutput)
}

type GetPolicy6DstintfOutput struct{ *pulumi.OutputState }

func (GetPolicy6DstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Dstintf)(nil)).Elem()
}

func (o GetPolicy6DstintfOutput) ToGetPolicy6DstintfOutput() GetPolicy6DstintfOutput {
	return o
}

func (o GetPolicy6DstintfOutput) ToGetPolicy6DstintfOutputWithContext(ctx context.Context) GetPolicy6DstintfOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6DstintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6Dstintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6DstintfArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6DstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Dstintf)(nil)).Elem()
}

func (o GetPolicy6DstintfArrayOutput) ToGetPolicy6DstintfArrayOutput() GetPolicy6DstintfArrayOutput {
	return o
}

func (o GetPolicy6DstintfArrayOutput) ToGetPolicy6DstintfArrayOutputWithContext(ctx context.Context) GetPolicy6DstintfArrayOutput {
	return o
}

func (o GetPolicy6DstintfArrayOutput) Index(i pulumi.IntInput) GetPolicy6DstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6Dstintf {
		return vs[0].([]GetPolicy6Dstintf)[vs[1].(int)]
	}).(GetPolicy6DstintfOutput)
}

type GetPolicy6FssoGroup struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6FssoGroupInput is an input type that accepts GetPolicy6FssoGroupArgs and GetPolicy6FssoGroupOutput values.
// You can construct a concrete instance of `GetPolicy6FssoGroupInput` via:
//
//	GetPolicy6FssoGroupArgs{...}
type GetPolicy6FssoGroupInput interface {
	pulumi.Input

	ToGetPolicy6FssoGroupOutput() GetPolicy6FssoGroupOutput
	ToGetPolicy6FssoGroupOutputWithContext(context.Context) GetPolicy6FssoGroupOutput
}

type GetPolicy6FssoGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6FssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6FssoGroup)(nil)).Elem()
}

func (i GetPolicy6FssoGroupArgs) ToGetPolicy6FssoGroupOutput() GetPolicy6FssoGroupOutput {
	return i.ToGetPolicy6FssoGroupOutputWithContext(context.Background())
}

func (i GetPolicy6FssoGroupArgs) ToGetPolicy6FssoGroupOutputWithContext(ctx context.Context) GetPolicy6FssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6FssoGroupOutput)
}

// GetPolicy6FssoGroupArrayInput is an input type that accepts GetPolicy6FssoGroupArray and GetPolicy6FssoGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicy6FssoGroupArrayInput` via:
//
//	GetPolicy6FssoGroupArray{ GetPolicy6FssoGroupArgs{...} }
type GetPolicy6FssoGroupArrayInput interface {
	pulumi.Input

	ToGetPolicy6FssoGroupArrayOutput() GetPolicy6FssoGroupArrayOutput
	ToGetPolicy6FssoGroupArrayOutputWithContext(context.Context) GetPolicy6FssoGroupArrayOutput
}

type GetPolicy6FssoGroupArray []GetPolicy6FssoGroupInput

func (GetPolicy6FssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6FssoGroup)(nil)).Elem()
}

func (i GetPolicy6FssoGroupArray) ToGetPolicy6FssoGroupArrayOutput() GetPolicy6FssoGroupArrayOutput {
	return i.ToGetPolicy6FssoGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicy6FssoGroupArray) ToGetPolicy6FssoGroupArrayOutputWithContext(ctx context.Context) GetPolicy6FssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6FssoGroupArrayOutput)
}

type GetPolicy6FssoGroupOutput struct{ *pulumi.OutputState }

func (GetPolicy6FssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6FssoGroup)(nil)).Elem()
}

func (o GetPolicy6FssoGroupOutput) ToGetPolicy6FssoGroupOutput() GetPolicy6FssoGroupOutput {
	return o
}

func (o GetPolicy6FssoGroupOutput) ToGetPolicy6FssoGroupOutputWithContext(ctx context.Context) GetPolicy6FssoGroupOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6FssoGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6FssoGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6FssoGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6FssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6FssoGroup)(nil)).Elem()
}

func (o GetPolicy6FssoGroupArrayOutput) ToGetPolicy6FssoGroupArrayOutput() GetPolicy6FssoGroupArrayOutput {
	return o
}

func (o GetPolicy6FssoGroupArrayOutput) ToGetPolicy6FssoGroupArrayOutputWithContext(ctx context.Context) GetPolicy6FssoGroupArrayOutput {
	return o
}

func (o GetPolicy6FssoGroupArrayOutput) Index(i pulumi.IntInput) GetPolicy6FssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6FssoGroup {
		return vs[0].([]GetPolicy6FssoGroup)[vs[1].(int)]
	}).(GetPolicy6FssoGroupOutput)
}

type GetPolicy6Group struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6GroupInput is an input type that accepts GetPolicy6GroupArgs and GetPolicy6GroupOutput values.
// You can construct a concrete instance of `GetPolicy6GroupInput` via:
//
//	GetPolicy6GroupArgs{...}
type GetPolicy6GroupInput interface {
	pulumi.Input

	ToGetPolicy6GroupOutput() GetPolicy6GroupOutput
	ToGetPolicy6GroupOutputWithContext(context.Context) GetPolicy6GroupOutput
}

type GetPolicy6GroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Group)(nil)).Elem()
}

func (i GetPolicy6GroupArgs) ToGetPolicy6GroupOutput() GetPolicy6GroupOutput {
	return i.ToGetPolicy6GroupOutputWithContext(context.Background())
}

func (i GetPolicy6GroupArgs) ToGetPolicy6GroupOutputWithContext(ctx context.Context) GetPolicy6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6GroupOutput)
}

// GetPolicy6GroupArrayInput is an input type that accepts GetPolicy6GroupArray and GetPolicy6GroupArrayOutput values.
// You can construct a concrete instance of `GetPolicy6GroupArrayInput` via:
//
//	GetPolicy6GroupArray{ GetPolicy6GroupArgs{...} }
type GetPolicy6GroupArrayInput interface {
	pulumi.Input

	ToGetPolicy6GroupArrayOutput() GetPolicy6GroupArrayOutput
	ToGetPolicy6GroupArrayOutputWithContext(context.Context) GetPolicy6GroupArrayOutput
}

type GetPolicy6GroupArray []GetPolicy6GroupInput

func (GetPolicy6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Group)(nil)).Elem()
}

func (i GetPolicy6GroupArray) ToGetPolicy6GroupArrayOutput() GetPolicy6GroupArrayOutput {
	return i.ToGetPolicy6GroupArrayOutputWithContext(context.Background())
}

func (i GetPolicy6GroupArray) ToGetPolicy6GroupArrayOutputWithContext(ctx context.Context) GetPolicy6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6GroupArrayOutput)
}

type GetPolicy6GroupOutput struct{ *pulumi.OutputState }

func (GetPolicy6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Group)(nil)).Elem()
}

func (o GetPolicy6GroupOutput) ToGetPolicy6GroupOutput() GetPolicy6GroupOutput {
	return o
}

func (o GetPolicy6GroupOutput) ToGetPolicy6GroupOutputWithContext(ctx context.Context) GetPolicy6GroupOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6GroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6Group) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6GroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Group)(nil)).Elem()
}

func (o GetPolicy6GroupArrayOutput) ToGetPolicy6GroupArrayOutput() GetPolicy6GroupArrayOutput {
	return o
}

func (o GetPolicy6GroupArrayOutput) ToGetPolicy6GroupArrayOutputWithContext(ctx context.Context) GetPolicy6GroupArrayOutput {
	return o
}

func (o GetPolicy6GroupArrayOutput) Index(i pulumi.IntInput) GetPolicy6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6Group {
		return vs[0].([]GetPolicy6Group)[vs[1].(int)]
	}).(GetPolicy6GroupOutput)
}

type GetPolicy6Poolname struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6PoolnameInput is an input type that accepts GetPolicy6PoolnameArgs and GetPolicy6PoolnameOutput values.
// You can construct a concrete instance of `GetPolicy6PoolnameInput` via:
//
//	GetPolicy6PoolnameArgs{...}
type GetPolicy6PoolnameInput interface {
	pulumi.Input

	ToGetPolicy6PoolnameOutput() GetPolicy6PoolnameOutput
	ToGetPolicy6PoolnameOutputWithContext(context.Context) GetPolicy6PoolnameOutput
}

type GetPolicy6PoolnameArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Poolname)(nil)).Elem()
}

func (i GetPolicy6PoolnameArgs) ToGetPolicy6PoolnameOutput() GetPolicy6PoolnameOutput {
	return i.ToGetPolicy6PoolnameOutputWithContext(context.Background())
}

func (i GetPolicy6PoolnameArgs) ToGetPolicy6PoolnameOutputWithContext(ctx context.Context) GetPolicy6PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6PoolnameOutput)
}

// GetPolicy6PoolnameArrayInput is an input type that accepts GetPolicy6PoolnameArray and GetPolicy6PoolnameArrayOutput values.
// You can construct a concrete instance of `GetPolicy6PoolnameArrayInput` via:
//
//	GetPolicy6PoolnameArray{ GetPolicy6PoolnameArgs{...} }
type GetPolicy6PoolnameArrayInput interface {
	pulumi.Input

	ToGetPolicy6PoolnameArrayOutput() GetPolicy6PoolnameArrayOutput
	ToGetPolicy6PoolnameArrayOutputWithContext(context.Context) GetPolicy6PoolnameArrayOutput
}

type GetPolicy6PoolnameArray []GetPolicy6PoolnameInput

func (GetPolicy6PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Poolname)(nil)).Elem()
}

func (i GetPolicy6PoolnameArray) ToGetPolicy6PoolnameArrayOutput() GetPolicy6PoolnameArrayOutput {
	return i.ToGetPolicy6PoolnameArrayOutputWithContext(context.Background())
}

func (i GetPolicy6PoolnameArray) ToGetPolicy6PoolnameArrayOutputWithContext(ctx context.Context) GetPolicy6PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6PoolnameArrayOutput)
}

type GetPolicy6PoolnameOutput struct{ *pulumi.OutputState }

func (GetPolicy6PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Poolname)(nil)).Elem()
}

func (o GetPolicy6PoolnameOutput) ToGetPolicy6PoolnameOutput() GetPolicy6PoolnameOutput {
	return o
}

func (o GetPolicy6PoolnameOutput) ToGetPolicy6PoolnameOutputWithContext(ctx context.Context) GetPolicy6PoolnameOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6PoolnameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6Poolname) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6PoolnameArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Poolname)(nil)).Elem()
}

func (o GetPolicy6PoolnameArrayOutput) ToGetPolicy6PoolnameArrayOutput() GetPolicy6PoolnameArrayOutput {
	return o
}

func (o GetPolicy6PoolnameArrayOutput) ToGetPolicy6PoolnameArrayOutputWithContext(ctx context.Context) GetPolicy6PoolnameArrayOutput {
	return o
}

func (o GetPolicy6PoolnameArrayOutput) Index(i pulumi.IntInput) GetPolicy6PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6Poolname {
		return vs[0].([]GetPolicy6Poolname)[vs[1].(int)]
	}).(GetPolicy6PoolnameOutput)
}

type GetPolicy6Service struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6ServiceInput is an input type that accepts GetPolicy6ServiceArgs and GetPolicy6ServiceOutput values.
// You can construct a concrete instance of `GetPolicy6ServiceInput` via:
//
//	GetPolicy6ServiceArgs{...}
type GetPolicy6ServiceInput interface {
	pulumi.Input

	ToGetPolicy6ServiceOutput() GetPolicy6ServiceOutput
	ToGetPolicy6ServiceOutputWithContext(context.Context) GetPolicy6ServiceOutput
}

type GetPolicy6ServiceArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Service)(nil)).Elem()
}

func (i GetPolicy6ServiceArgs) ToGetPolicy6ServiceOutput() GetPolicy6ServiceOutput {
	return i.ToGetPolicy6ServiceOutputWithContext(context.Background())
}

func (i GetPolicy6ServiceArgs) ToGetPolicy6ServiceOutputWithContext(ctx context.Context) GetPolicy6ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6ServiceOutput)
}

// GetPolicy6ServiceArrayInput is an input type that accepts GetPolicy6ServiceArray and GetPolicy6ServiceArrayOutput values.
// You can construct a concrete instance of `GetPolicy6ServiceArrayInput` via:
//
//	GetPolicy6ServiceArray{ GetPolicy6ServiceArgs{...} }
type GetPolicy6ServiceArrayInput interface {
	pulumi.Input

	ToGetPolicy6ServiceArrayOutput() GetPolicy6ServiceArrayOutput
	ToGetPolicy6ServiceArrayOutputWithContext(context.Context) GetPolicy6ServiceArrayOutput
}

type GetPolicy6ServiceArray []GetPolicy6ServiceInput

func (GetPolicy6ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Service)(nil)).Elem()
}

func (i GetPolicy6ServiceArray) ToGetPolicy6ServiceArrayOutput() GetPolicy6ServiceArrayOutput {
	return i.ToGetPolicy6ServiceArrayOutputWithContext(context.Background())
}

func (i GetPolicy6ServiceArray) ToGetPolicy6ServiceArrayOutputWithContext(ctx context.Context) GetPolicy6ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6ServiceArrayOutput)
}

type GetPolicy6ServiceOutput struct{ *pulumi.OutputState }

func (GetPolicy6ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Service)(nil)).Elem()
}

func (o GetPolicy6ServiceOutput) ToGetPolicy6ServiceOutput() GetPolicy6ServiceOutput {
	return o
}

func (o GetPolicy6ServiceOutput) ToGetPolicy6ServiceOutputWithContext(ctx context.Context) GetPolicy6ServiceOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6Service) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6ServiceArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Service)(nil)).Elem()
}

func (o GetPolicy6ServiceArrayOutput) ToGetPolicy6ServiceArrayOutput() GetPolicy6ServiceArrayOutput {
	return o
}

func (o GetPolicy6ServiceArrayOutput) ToGetPolicy6ServiceArrayOutputWithContext(ctx context.Context) GetPolicy6ServiceArrayOutput {
	return o
}

func (o GetPolicy6ServiceArrayOutput) Index(i pulumi.IntInput) GetPolicy6ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6Service {
		return vs[0].([]GetPolicy6Service)[vs[1].(int)]
	}).(GetPolicy6ServiceOutput)
}

type GetPolicy6Srcaddr struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6SrcaddrInput is an input type that accepts GetPolicy6SrcaddrArgs and GetPolicy6SrcaddrOutput values.
// You can construct a concrete instance of `GetPolicy6SrcaddrInput` via:
//
//	GetPolicy6SrcaddrArgs{...}
type GetPolicy6SrcaddrInput interface {
	pulumi.Input

	ToGetPolicy6SrcaddrOutput() GetPolicy6SrcaddrOutput
	ToGetPolicy6SrcaddrOutputWithContext(context.Context) GetPolicy6SrcaddrOutput
}

type GetPolicy6SrcaddrArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Srcaddr)(nil)).Elem()
}

func (i GetPolicy6SrcaddrArgs) ToGetPolicy6SrcaddrOutput() GetPolicy6SrcaddrOutput {
	return i.ToGetPolicy6SrcaddrOutputWithContext(context.Background())
}

func (i GetPolicy6SrcaddrArgs) ToGetPolicy6SrcaddrOutputWithContext(ctx context.Context) GetPolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6SrcaddrOutput)
}

// GetPolicy6SrcaddrArrayInput is an input type that accepts GetPolicy6SrcaddrArray and GetPolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicy6SrcaddrArrayInput` via:
//
//	GetPolicy6SrcaddrArray{ GetPolicy6SrcaddrArgs{...} }
type GetPolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToGetPolicy6SrcaddrArrayOutput() GetPolicy6SrcaddrArrayOutput
	ToGetPolicy6SrcaddrArrayOutputWithContext(context.Context) GetPolicy6SrcaddrArrayOutput
}

type GetPolicy6SrcaddrArray []GetPolicy6SrcaddrInput

func (GetPolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Srcaddr)(nil)).Elem()
}

func (i GetPolicy6SrcaddrArray) ToGetPolicy6SrcaddrArrayOutput() GetPolicy6SrcaddrArrayOutput {
	return i.ToGetPolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicy6SrcaddrArray) ToGetPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetPolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6SrcaddrArrayOutput)
}

type GetPolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (GetPolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Srcaddr)(nil)).Elem()
}

func (o GetPolicy6SrcaddrOutput) ToGetPolicy6SrcaddrOutput() GetPolicy6SrcaddrOutput {
	return o
}

func (o GetPolicy6SrcaddrOutput) ToGetPolicy6SrcaddrOutputWithContext(ctx context.Context) GetPolicy6SrcaddrOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6SrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6Srcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Srcaddr)(nil)).Elem()
}

func (o GetPolicy6SrcaddrArrayOutput) ToGetPolicy6SrcaddrArrayOutput() GetPolicy6SrcaddrArrayOutput {
	return o
}

func (o GetPolicy6SrcaddrArrayOutput) ToGetPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) GetPolicy6SrcaddrArrayOutput {
	return o
}

func (o GetPolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) GetPolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6Srcaddr {
		return vs[0].([]GetPolicy6Srcaddr)[vs[1].(int)]
	}).(GetPolicy6SrcaddrOutput)
}

type GetPolicy6Srcintf struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6SrcintfInput is an input type that accepts GetPolicy6SrcintfArgs and GetPolicy6SrcintfOutput values.
// You can construct a concrete instance of `GetPolicy6SrcintfInput` via:
//
//	GetPolicy6SrcintfArgs{...}
type GetPolicy6SrcintfInput interface {
	pulumi.Input

	ToGetPolicy6SrcintfOutput() GetPolicy6SrcintfOutput
	ToGetPolicy6SrcintfOutputWithContext(context.Context) GetPolicy6SrcintfOutput
}

type GetPolicy6SrcintfArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6SrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Srcintf)(nil)).Elem()
}

func (i GetPolicy6SrcintfArgs) ToGetPolicy6SrcintfOutput() GetPolicy6SrcintfOutput {
	return i.ToGetPolicy6SrcintfOutputWithContext(context.Background())
}

func (i GetPolicy6SrcintfArgs) ToGetPolicy6SrcintfOutputWithContext(ctx context.Context) GetPolicy6SrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6SrcintfOutput)
}

// GetPolicy6SrcintfArrayInput is an input type that accepts GetPolicy6SrcintfArray and GetPolicy6SrcintfArrayOutput values.
// You can construct a concrete instance of `GetPolicy6SrcintfArrayInput` via:
//
//	GetPolicy6SrcintfArray{ GetPolicy6SrcintfArgs{...} }
type GetPolicy6SrcintfArrayInput interface {
	pulumi.Input

	ToGetPolicy6SrcintfArrayOutput() GetPolicy6SrcintfArrayOutput
	ToGetPolicy6SrcintfArrayOutputWithContext(context.Context) GetPolicy6SrcintfArrayOutput
}

type GetPolicy6SrcintfArray []GetPolicy6SrcintfInput

func (GetPolicy6SrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Srcintf)(nil)).Elem()
}

func (i GetPolicy6SrcintfArray) ToGetPolicy6SrcintfArrayOutput() GetPolicy6SrcintfArrayOutput {
	return i.ToGetPolicy6SrcintfArrayOutputWithContext(context.Background())
}

func (i GetPolicy6SrcintfArray) ToGetPolicy6SrcintfArrayOutputWithContext(ctx context.Context) GetPolicy6SrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6SrcintfArrayOutput)
}

type GetPolicy6SrcintfOutput struct{ *pulumi.OutputState }

func (GetPolicy6SrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6Srcintf)(nil)).Elem()
}

func (o GetPolicy6SrcintfOutput) ToGetPolicy6SrcintfOutput() GetPolicy6SrcintfOutput {
	return o
}

func (o GetPolicy6SrcintfOutput) ToGetPolicy6SrcintfOutputWithContext(ctx context.Context) GetPolicy6SrcintfOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6SrcintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6Srcintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6SrcintfArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6SrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6Srcintf)(nil)).Elem()
}

func (o GetPolicy6SrcintfArrayOutput) ToGetPolicy6SrcintfArrayOutput() GetPolicy6SrcintfArrayOutput {
	return o
}

func (o GetPolicy6SrcintfArrayOutput) ToGetPolicy6SrcintfArrayOutputWithContext(ctx context.Context) GetPolicy6SrcintfArrayOutput {
	return o
}

func (o GetPolicy6SrcintfArrayOutput) Index(i pulumi.IntInput) GetPolicy6SrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6Srcintf {
		return vs[0].([]GetPolicy6Srcintf)[vs[1].(int)]
	}).(GetPolicy6SrcintfOutput)
}

type GetPolicy6SslMirrorIntf struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6SslMirrorIntfInput is an input type that accepts GetPolicy6SslMirrorIntfArgs and GetPolicy6SslMirrorIntfOutput values.
// You can construct a concrete instance of `GetPolicy6SslMirrorIntfInput` via:
//
//	GetPolicy6SslMirrorIntfArgs{...}
type GetPolicy6SslMirrorIntfInput interface {
	pulumi.Input

	ToGetPolicy6SslMirrorIntfOutput() GetPolicy6SslMirrorIntfOutput
	ToGetPolicy6SslMirrorIntfOutputWithContext(context.Context) GetPolicy6SslMirrorIntfOutput
}

type GetPolicy6SslMirrorIntfArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6SslMirrorIntfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6SslMirrorIntf)(nil)).Elem()
}

func (i GetPolicy6SslMirrorIntfArgs) ToGetPolicy6SslMirrorIntfOutput() GetPolicy6SslMirrorIntfOutput {
	return i.ToGetPolicy6SslMirrorIntfOutputWithContext(context.Background())
}

func (i GetPolicy6SslMirrorIntfArgs) ToGetPolicy6SslMirrorIntfOutputWithContext(ctx context.Context) GetPolicy6SslMirrorIntfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6SslMirrorIntfOutput)
}

// GetPolicy6SslMirrorIntfArrayInput is an input type that accepts GetPolicy6SslMirrorIntfArray and GetPolicy6SslMirrorIntfArrayOutput values.
// You can construct a concrete instance of `GetPolicy6SslMirrorIntfArrayInput` via:
//
//	GetPolicy6SslMirrorIntfArray{ GetPolicy6SslMirrorIntfArgs{...} }
type GetPolicy6SslMirrorIntfArrayInput interface {
	pulumi.Input

	ToGetPolicy6SslMirrorIntfArrayOutput() GetPolicy6SslMirrorIntfArrayOutput
	ToGetPolicy6SslMirrorIntfArrayOutputWithContext(context.Context) GetPolicy6SslMirrorIntfArrayOutput
}

type GetPolicy6SslMirrorIntfArray []GetPolicy6SslMirrorIntfInput

func (GetPolicy6SslMirrorIntfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6SslMirrorIntf)(nil)).Elem()
}

func (i GetPolicy6SslMirrorIntfArray) ToGetPolicy6SslMirrorIntfArrayOutput() GetPolicy6SslMirrorIntfArrayOutput {
	return i.ToGetPolicy6SslMirrorIntfArrayOutputWithContext(context.Background())
}

func (i GetPolicy6SslMirrorIntfArray) ToGetPolicy6SslMirrorIntfArrayOutputWithContext(ctx context.Context) GetPolicy6SslMirrorIntfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6SslMirrorIntfArrayOutput)
}

type GetPolicy6SslMirrorIntfOutput struct{ *pulumi.OutputState }

func (GetPolicy6SslMirrorIntfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6SslMirrorIntf)(nil)).Elem()
}

func (o GetPolicy6SslMirrorIntfOutput) ToGetPolicy6SslMirrorIntfOutput() GetPolicy6SslMirrorIntfOutput {
	return o
}

func (o GetPolicy6SslMirrorIntfOutput) ToGetPolicy6SslMirrorIntfOutputWithContext(ctx context.Context) GetPolicy6SslMirrorIntfOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6SslMirrorIntfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6SslMirrorIntf) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6SslMirrorIntfArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6SslMirrorIntfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6SslMirrorIntf)(nil)).Elem()
}

func (o GetPolicy6SslMirrorIntfArrayOutput) ToGetPolicy6SslMirrorIntfArrayOutput() GetPolicy6SslMirrorIntfArrayOutput {
	return o
}

func (o GetPolicy6SslMirrorIntfArrayOutput) ToGetPolicy6SslMirrorIntfArrayOutputWithContext(ctx context.Context) GetPolicy6SslMirrorIntfArrayOutput {
	return o
}

func (o GetPolicy6SslMirrorIntfArrayOutput) Index(i pulumi.IntInput) GetPolicy6SslMirrorIntfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6SslMirrorIntf {
		return vs[0].([]GetPolicy6SslMirrorIntf)[vs[1].(int)]
	}).(GetPolicy6SslMirrorIntfOutput)
}

type GetPolicy6UrlCategory struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetPolicy6UrlCategoryInput is an input type that accepts GetPolicy6UrlCategoryArgs and GetPolicy6UrlCategoryOutput values.
// You can construct a concrete instance of `GetPolicy6UrlCategoryInput` via:
//
//	GetPolicy6UrlCategoryArgs{...}
type GetPolicy6UrlCategoryInput interface {
	pulumi.Input

	ToGetPolicy6UrlCategoryOutput() GetPolicy6UrlCategoryOutput
	ToGetPolicy6UrlCategoryOutputWithContext(context.Context) GetPolicy6UrlCategoryOutput
}

type GetPolicy6UrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicy6UrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6UrlCategory)(nil)).Elem()
}

func (i GetPolicy6UrlCategoryArgs) ToGetPolicy6UrlCategoryOutput() GetPolicy6UrlCategoryOutput {
	return i.ToGetPolicy6UrlCategoryOutputWithContext(context.Background())
}

func (i GetPolicy6UrlCategoryArgs) ToGetPolicy6UrlCategoryOutputWithContext(ctx context.Context) GetPolicy6UrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6UrlCategoryOutput)
}

// GetPolicy6UrlCategoryArrayInput is an input type that accepts GetPolicy6UrlCategoryArray and GetPolicy6UrlCategoryArrayOutput values.
// You can construct a concrete instance of `GetPolicy6UrlCategoryArrayInput` via:
//
//	GetPolicy6UrlCategoryArray{ GetPolicy6UrlCategoryArgs{...} }
type GetPolicy6UrlCategoryArrayInput interface {
	pulumi.Input

	ToGetPolicy6UrlCategoryArrayOutput() GetPolicy6UrlCategoryArrayOutput
	ToGetPolicy6UrlCategoryArrayOutputWithContext(context.Context) GetPolicy6UrlCategoryArrayOutput
}

type GetPolicy6UrlCategoryArray []GetPolicy6UrlCategoryInput

func (GetPolicy6UrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6UrlCategory)(nil)).Elem()
}

func (i GetPolicy6UrlCategoryArray) ToGetPolicy6UrlCategoryArrayOutput() GetPolicy6UrlCategoryArrayOutput {
	return i.ToGetPolicy6UrlCategoryArrayOutputWithContext(context.Background())
}

func (i GetPolicy6UrlCategoryArray) ToGetPolicy6UrlCategoryArrayOutputWithContext(ctx context.Context) GetPolicy6UrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6UrlCategoryArrayOutput)
}

type GetPolicy6UrlCategoryOutput struct{ *pulumi.OutputState }

func (GetPolicy6UrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6UrlCategory)(nil)).Elem()
}

func (o GetPolicy6UrlCategoryOutput) ToGetPolicy6UrlCategoryOutput() GetPolicy6UrlCategoryOutput {
	return o
}

func (o GetPolicy6UrlCategoryOutput) ToGetPolicy6UrlCategoryOutputWithContext(ctx context.Context) GetPolicy6UrlCategoryOutput {
	return o
}

// URL category ID.
func (o GetPolicy6UrlCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicy6UrlCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicy6UrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6UrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6UrlCategory)(nil)).Elem()
}

func (o GetPolicy6UrlCategoryArrayOutput) ToGetPolicy6UrlCategoryArrayOutput() GetPolicy6UrlCategoryArrayOutput {
	return o
}

func (o GetPolicy6UrlCategoryArrayOutput) ToGetPolicy6UrlCategoryArrayOutputWithContext(ctx context.Context) GetPolicy6UrlCategoryArrayOutput {
	return o
}

func (o GetPolicy6UrlCategoryArrayOutput) Index(i pulumi.IntInput) GetPolicy6UrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6UrlCategory {
		return vs[0].([]GetPolicy6UrlCategory)[vs[1].(int)]
	}).(GetPolicy6UrlCategoryOutput)
}

type GetPolicy6User struct {
	// Names of FSSO groups.
	Name string `pulumi:"name"`
}

// GetPolicy6UserInput is an input type that accepts GetPolicy6UserArgs and GetPolicy6UserOutput values.
// You can construct a concrete instance of `GetPolicy6UserInput` via:
//
//	GetPolicy6UserArgs{...}
type GetPolicy6UserInput interface {
	pulumi.Input

	ToGetPolicy6UserOutput() GetPolicy6UserOutput
	ToGetPolicy6UserOutputWithContext(context.Context) GetPolicy6UserOutput
}

type GetPolicy6UserArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicy6UserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6User)(nil)).Elem()
}

func (i GetPolicy6UserArgs) ToGetPolicy6UserOutput() GetPolicy6UserOutput {
	return i.ToGetPolicy6UserOutputWithContext(context.Background())
}

func (i GetPolicy6UserArgs) ToGetPolicy6UserOutputWithContext(ctx context.Context) GetPolicy6UserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6UserOutput)
}

// GetPolicy6UserArrayInput is an input type that accepts GetPolicy6UserArray and GetPolicy6UserArrayOutput values.
// You can construct a concrete instance of `GetPolicy6UserArrayInput` via:
//
//	GetPolicy6UserArray{ GetPolicy6UserArgs{...} }
type GetPolicy6UserArrayInput interface {
	pulumi.Input

	ToGetPolicy6UserArrayOutput() GetPolicy6UserArrayOutput
	ToGetPolicy6UserArrayOutputWithContext(context.Context) GetPolicy6UserArrayOutput
}

type GetPolicy6UserArray []GetPolicy6UserInput

func (GetPolicy6UserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6User)(nil)).Elem()
}

func (i GetPolicy6UserArray) ToGetPolicy6UserArrayOutput() GetPolicy6UserArrayOutput {
	return i.ToGetPolicy6UserArrayOutputWithContext(context.Background())
}

func (i GetPolicy6UserArray) ToGetPolicy6UserArrayOutputWithContext(ctx context.Context) GetPolicy6UserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicy6UserArrayOutput)
}

type GetPolicy6UserOutput struct{ *pulumi.OutputState }

func (GetPolicy6UserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicy6User)(nil)).Elem()
}

func (o GetPolicy6UserOutput) ToGetPolicy6UserOutput() GetPolicy6UserOutput {
	return o
}

func (o GetPolicy6UserOutput) ToGetPolicy6UserOutputWithContext(ctx context.Context) GetPolicy6UserOutput {
	return o
}

// Names of FSSO groups.
func (o GetPolicy6UserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicy6User) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicy6UserArrayOutput struct{ *pulumi.OutputState }

func (GetPolicy6UserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicy6User)(nil)).Elem()
}

func (o GetPolicy6UserArrayOutput) ToGetPolicy6UserArrayOutput() GetPolicy6UserArrayOutput {
	return o
}

func (o GetPolicy6UserArrayOutput) ToGetPolicy6UserArrayOutputWithContext(ctx context.Context) GetPolicy6UserArrayOutput {
	return o
}

func (o GetPolicy6UserArrayOutput) Index(i pulumi.IntInput) GetPolicy6UserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicy6User {
		return vs[0].([]GetPolicy6User)[vs[1].(int)]
	}).(GetPolicy6UserOutput)
}

type GetPolicyAppCategory struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetPolicyAppCategoryInput is an input type that accepts GetPolicyAppCategoryArgs and GetPolicyAppCategoryOutput values.
// You can construct a concrete instance of `GetPolicyAppCategoryInput` via:
//
//	GetPolicyAppCategoryArgs{...}
type GetPolicyAppCategoryInput interface {
	pulumi.Input

	ToGetPolicyAppCategoryOutput() GetPolicyAppCategoryOutput
	ToGetPolicyAppCategoryOutputWithContext(context.Context) GetPolicyAppCategoryOutput
}

type GetPolicyAppCategoryArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAppCategory)(nil)).Elem()
}

func (i GetPolicyAppCategoryArgs) ToGetPolicyAppCategoryOutput() GetPolicyAppCategoryOutput {
	return i.ToGetPolicyAppCategoryOutputWithContext(context.Background())
}

func (i GetPolicyAppCategoryArgs) ToGetPolicyAppCategoryOutputWithContext(ctx context.Context) GetPolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAppCategoryOutput)
}

// GetPolicyAppCategoryArrayInput is an input type that accepts GetPolicyAppCategoryArray and GetPolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `GetPolicyAppCategoryArrayInput` via:
//
//	GetPolicyAppCategoryArray{ GetPolicyAppCategoryArgs{...} }
type GetPolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToGetPolicyAppCategoryArrayOutput() GetPolicyAppCategoryArrayOutput
	ToGetPolicyAppCategoryArrayOutputWithContext(context.Context) GetPolicyAppCategoryArrayOutput
}

type GetPolicyAppCategoryArray []GetPolicyAppCategoryInput

func (GetPolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAppCategory)(nil)).Elem()
}

func (i GetPolicyAppCategoryArray) ToGetPolicyAppCategoryArrayOutput() GetPolicyAppCategoryArrayOutput {
	return i.ToGetPolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i GetPolicyAppCategoryArray) ToGetPolicyAppCategoryArrayOutputWithContext(ctx context.Context) GetPolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAppCategoryArrayOutput)
}

type GetPolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (GetPolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAppCategory)(nil)).Elem()
}

func (o GetPolicyAppCategoryOutput) ToGetPolicyAppCategoryOutput() GetPolicyAppCategoryOutput {
	return o
}

func (o GetPolicyAppCategoryOutput) ToGetPolicyAppCategoryOutputWithContext(ctx context.Context) GetPolicyAppCategoryOutput {
	return o
}

// Security group tag.
func (o GetPolicyAppCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyAppCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAppCategory)(nil)).Elem()
}

func (o GetPolicyAppCategoryArrayOutput) ToGetPolicyAppCategoryArrayOutput() GetPolicyAppCategoryArrayOutput {
	return o
}

func (o GetPolicyAppCategoryArrayOutput) ToGetPolicyAppCategoryArrayOutputWithContext(ctx context.Context) GetPolicyAppCategoryArrayOutput {
	return o
}

func (o GetPolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) GetPolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyAppCategory {
		return vs[0].([]GetPolicyAppCategory)[vs[1].(int)]
	}).(GetPolicyAppCategoryOutput)
}

type GetPolicyAppGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyAppGroupInput is an input type that accepts GetPolicyAppGroupArgs and GetPolicyAppGroupOutput values.
// You can construct a concrete instance of `GetPolicyAppGroupInput` via:
//
//	GetPolicyAppGroupArgs{...}
type GetPolicyAppGroupInput interface {
	pulumi.Input

	ToGetPolicyAppGroupOutput() GetPolicyAppGroupOutput
	ToGetPolicyAppGroupOutputWithContext(context.Context) GetPolicyAppGroupOutput
}

type GetPolicyAppGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAppGroup)(nil)).Elem()
}

func (i GetPolicyAppGroupArgs) ToGetPolicyAppGroupOutput() GetPolicyAppGroupOutput {
	return i.ToGetPolicyAppGroupOutputWithContext(context.Background())
}

func (i GetPolicyAppGroupArgs) ToGetPolicyAppGroupOutputWithContext(ctx context.Context) GetPolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAppGroupOutput)
}

// GetPolicyAppGroupArrayInput is an input type that accepts GetPolicyAppGroupArray and GetPolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyAppGroupArrayInput` via:
//
//	GetPolicyAppGroupArray{ GetPolicyAppGroupArgs{...} }
type GetPolicyAppGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyAppGroupArrayOutput() GetPolicyAppGroupArrayOutput
	ToGetPolicyAppGroupArrayOutputWithContext(context.Context) GetPolicyAppGroupArrayOutput
}

type GetPolicyAppGroupArray []GetPolicyAppGroupInput

func (GetPolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAppGroup)(nil)).Elem()
}

func (i GetPolicyAppGroupArray) ToGetPolicyAppGroupArrayOutput() GetPolicyAppGroupArrayOutput {
	return i.ToGetPolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyAppGroupArray) ToGetPolicyAppGroupArrayOutputWithContext(ctx context.Context) GetPolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAppGroupArrayOutput)
}

type GetPolicyAppGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAppGroup)(nil)).Elem()
}

func (o GetPolicyAppGroupOutput) ToGetPolicyAppGroupOutput() GetPolicyAppGroupOutput {
	return o
}

func (o GetPolicyAppGroupOutput) ToGetPolicyAppGroupOutputWithContext(ctx context.Context) GetPolicyAppGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyAppGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyAppGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAppGroup)(nil)).Elem()
}

func (o GetPolicyAppGroupArrayOutput) ToGetPolicyAppGroupArrayOutput() GetPolicyAppGroupArrayOutput {
	return o
}

func (o GetPolicyAppGroupArrayOutput) ToGetPolicyAppGroupArrayOutputWithContext(ctx context.Context) GetPolicyAppGroupArrayOutput {
	return o
}

func (o GetPolicyAppGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyAppGroup {
		return vs[0].([]GetPolicyAppGroup)[vs[1].(int)]
	}).(GetPolicyAppGroupOutput)
}

type GetPolicyApplication struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetPolicyApplicationInput is an input type that accepts GetPolicyApplicationArgs and GetPolicyApplicationOutput values.
// You can construct a concrete instance of `GetPolicyApplicationInput` via:
//
//	GetPolicyApplicationArgs{...}
type GetPolicyApplicationInput interface {
	pulumi.Input

	ToGetPolicyApplicationOutput() GetPolicyApplicationOutput
	ToGetPolicyApplicationOutputWithContext(context.Context) GetPolicyApplicationOutput
}

type GetPolicyApplicationArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyApplication)(nil)).Elem()
}

func (i GetPolicyApplicationArgs) ToGetPolicyApplicationOutput() GetPolicyApplicationOutput {
	return i.ToGetPolicyApplicationOutputWithContext(context.Background())
}

func (i GetPolicyApplicationArgs) ToGetPolicyApplicationOutputWithContext(ctx context.Context) GetPolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyApplicationOutput)
}

// GetPolicyApplicationArrayInput is an input type that accepts GetPolicyApplicationArray and GetPolicyApplicationArrayOutput values.
// You can construct a concrete instance of `GetPolicyApplicationArrayInput` via:
//
//	GetPolicyApplicationArray{ GetPolicyApplicationArgs{...} }
type GetPolicyApplicationArrayInput interface {
	pulumi.Input

	ToGetPolicyApplicationArrayOutput() GetPolicyApplicationArrayOutput
	ToGetPolicyApplicationArrayOutputWithContext(context.Context) GetPolicyApplicationArrayOutput
}

type GetPolicyApplicationArray []GetPolicyApplicationInput

func (GetPolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyApplication)(nil)).Elem()
}

func (i GetPolicyApplicationArray) ToGetPolicyApplicationArrayOutput() GetPolicyApplicationArrayOutput {
	return i.ToGetPolicyApplicationArrayOutputWithContext(context.Background())
}

func (i GetPolicyApplicationArray) ToGetPolicyApplicationArrayOutputWithContext(ctx context.Context) GetPolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyApplicationArrayOutput)
}

type GetPolicyApplicationOutput struct{ *pulumi.OutputState }

func (GetPolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyApplication)(nil)).Elem()
}

func (o GetPolicyApplicationOutput) ToGetPolicyApplicationOutput() GetPolicyApplicationOutput {
	return o
}

func (o GetPolicyApplicationOutput) ToGetPolicyApplicationOutputWithContext(ctx context.Context) GetPolicyApplicationOutput {
	return o
}

// Security group tag.
func (o GetPolicyApplicationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyApplication) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyApplication)(nil)).Elem()
}

func (o GetPolicyApplicationArrayOutput) ToGetPolicyApplicationArrayOutput() GetPolicyApplicationArrayOutput {
	return o
}

func (o GetPolicyApplicationArrayOutput) ToGetPolicyApplicationArrayOutputWithContext(ctx context.Context) GetPolicyApplicationArrayOutput {
	return o
}

func (o GetPolicyApplicationArrayOutput) Index(i pulumi.IntInput) GetPolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyApplication {
		return vs[0].([]GetPolicyApplication)[vs[1].(int)]
	}).(GetPolicyApplicationOutput)
}

type GetPolicyCustomLogField struct {
	// Custom log field.
	FieldId string `pulumi:"fieldId"`
}

// GetPolicyCustomLogFieldInput is an input type that accepts GetPolicyCustomLogFieldArgs and GetPolicyCustomLogFieldOutput values.
// You can construct a concrete instance of `GetPolicyCustomLogFieldInput` via:
//
//	GetPolicyCustomLogFieldArgs{...}
type GetPolicyCustomLogFieldInput interface {
	pulumi.Input

	ToGetPolicyCustomLogFieldOutput() GetPolicyCustomLogFieldOutput
	ToGetPolicyCustomLogFieldOutputWithContext(context.Context) GetPolicyCustomLogFieldOutput
}

type GetPolicyCustomLogFieldArgs struct {
	// Custom log field.
	FieldId pulumi.StringInput `pulumi:"fieldId"`
}

func (GetPolicyCustomLogFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyCustomLogField)(nil)).Elem()
}

func (i GetPolicyCustomLogFieldArgs) ToGetPolicyCustomLogFieldOutput() GetPolicyCustomLogFieldOutput {
	return i.ToGetPolicyCustomLogFieldOutputWithContext(context.Background())
}

func (i GetPolicyCustomLogFieldArgs) ToGetPolicyCustomLogFieldOutputWithContext(ctx context.Context) GetPolicyCustomLogFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyCustomLogFieldOutput)
}

// GetPolicyCustomLogFieldArrayInput is an input type that accepts GetPolicyCustomLogFieldArray and GetPolicyCustomLogFieldArrayOutput values.
// You can construct a concrete instance of `GetPolicyCustomLogFieldArrayInput` via:
//
//	GetPolicyCustomLogFieldArray{ GetPolicyCustomLogFieldArgs{...} }
type GetPolicyCustomLogFieldArrayInput interface {
	pulumi.Input

	ToGetPolicyCustomLogFieldArrayOutput() GetPolicyCustomLogFieldArrayOutput
	ToGetPolicyCustomLogFieldArrayOutputWithContext(context.Context) GetPolicyCustomLogFieldArrayOutput
}

type GetPolicyCustomLogFieldArray []GetPolicyCustomLogFieldInput

func (GetPolicyCustomLogFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyCustomLogField)(nil)).Elem()
}

func (i GetPolicyCustomLogFieldArray) ToGetPolicyCustomLogFieldArrayOutput() GetPolicyCustomLogFieldArrayOutput {
	return i.ToGetPolicyCustomLogFieldArrayOutputWithContext(context.Background())
}

func (i GetPolicyCustomLogFieldArray) ToGetPolicyCustomLogFieldArrayOutputWithContext(ctx context.Context) GetPolicyCustomLogFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyCustomLogFieldArrayOutput)
}

type GetPolicyCustomLogFieldOutput struct{ *pulumi.OutputState }

func (GetPolicyCustomLogFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyCustomLogField)(nil)).Elem()
}

func (o GetPolicyCustomLogFieldOutput) ToGetPolicyCustomLogFieldOutput() GetPolicyCustomLogFieldOutput {
	return o
}

func (o GetPolicyCustomLogFieldOutput) ToGetPolicyCustomLogFieldOutputWithContext(ctx context.Context) GetPolicyCustomLogFieldOutput {
	return o
}

// Custom log field.
func (o GetPolicyCustomLogFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyCustomLogField) string { return v.FieldId }).(pulumi.StringOutput)
}

type GetPolicyCustomLogFieldArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyCustomLogFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyCustomLogField)(nil)).Elem()
}

func (o GetPolicyCustomLogFieldArrayOutput) ToGetPolicyCustomLogFieldArrayOutput() GetPolicyCustomLogFieldArrayOutput {
	return o
}

func (o GetPolicyCustomLogFieldArrayOutput) ToGetPolicyCustomLogFieldArrayOutputWithContext(ctx context.Context) GetPolicyCustomLogFieldArrayOutput {
	return o
}

func (o GetPolicyCustomLogFieldArrayOutput) Index(i pulumi.IntInput) GetPolicyCustomLogFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyCustomLogField {
		return vs[0].([]GetPolicyCustomLogField)[vs[1].(int)]
	}).(GetPolicyCustomLogFieldOutput)
}

type GetPolicyDevice struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyDeviceInput is an input type that accepts GetPolicyDeviceArgs and GetPolicyDeviceOutput values.
// You can construct a concrete instance of `GetPolicyDeviceInput` via:
//
//	GetPolicyDeviceArgs{...}
type GetPolicyDeviceInput interface {
	pulumi.Input

	ToGetPolicyDeviceOutput() GetPolicyDeviceOutput
	ToGetPolicyDeviceOutputWithContext(context.Context) GetPolicyDeviceOutput
}

type GetPolicyDeviceArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDevice)(nil)).Elem()
}

func (i GetPolicyDeviceArgs) ToGetPolicyDeviceOutput() GetPolicyDeviceOutput {
	return i.ToGetPolicyDeviceOutputWithContext(context.Background())
}

func (i GetPolicyDeviceArgs) ToGetPolicyDeviceOutputWithContext(ctx context.Context) GetPolicyDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDeviceOutput)
}

// GetPolicyDeviceArrayInput is an input type that accepts GetPolicyDeviceArray and GetPolicyDeviceArrayOutput values.
// You can construct a concrete instance of `GetPolicyDeviceArrayInput` via:
//
//	GetPolicyDeviceArray{ GetPolicyDeviceArgs{...} }
type GetPolicyDeviceArrayInput interface {
	pulumi.Input

	ToGetPolicyDeviceArrayOutput() GetPolicyDeviceArrayOutput
	ToGetPolicyDeviceArrayOutputWithContext(context.Context) GetPolicyDeviceArrayOutput
}

type GetPolicyDeviceArray []GetPolicyDeviceInput

func (GetPolicyDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDevice)(nil)).Elem()
}

func (i GetPolicyDeviceArray) ToGetPolicyDeviceArrayOutput() GetPolicyDeviceArrayOutput {
	return i.ToGetPolicyDeviceArrayOutputWithContext(context.Background())
}

func (i GetPolicyDeviceArray) ToGetPolicyDeviceArrayOutputWithContext(ctx context.Context) GetPolicyDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDeviceArrayOutput)
}

type GetPolicyDeviceOutput struct{ *pulumi.OutputState }

func (GetPolicyDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDevice)(nil)).Elem()
}

func (o GetPolicyDeviceOutput) ToGetPolicyDeviceOutput() GetPolicyDeviceOutput {
	return o
}

func (o GetPolicyDeviceOutput) ToGetPolicyDeviceOutputWithContext(ctx context.Context) GetPolicyDeviceOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDevice) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDevice)(nil)).Elem()
}

func (o GetPolicyDeviceArrayOutput) ToGetPolicyDeviceArrayOutput() GetPolicyDeviceArrayOutput {
	return o
}

func (o GetPolicyDeviceArrayOutput) ToGetPolicyDeviceArrayOutputWithContext(ctx context.Context) GetPolicyDeviceArrayOutput {
	return o
}

func (o GetPolicyDeviceArrayOutput) Index(i pulumi.IntInput) GetPolicyDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDevice {
		return vs[0].([]GetPolicyDevice)[vs[1].(int)]
	}).(GetPolicyDeviceOutput)
}

type GetPolicyDstaddr6 struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyDstaddr6Input is an input type that accepts GetPolicyDstaddr6Args and GetPolicyDstaddr6Output values.
// You can construct a concrete instance of `GetPolicyDstaddr6Input` via:
//
//	GetPolicyDstaddr6Args{...}
type GetPolicyDstaddr6Input interface {
	pulumi.Input

	ToGetPolicyDstaddr6Output() GetPolicyDstaddr6Output
	ToGetPolicyDstaddr6OutputWithContext(context.Context) GetPolicyDstaddr6Output
}

type GetPolicyDstaddr6Args struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstaddr6)(nil)).Elem()
}

func (i GetPolicyDstaddr6Args) ToGetPolicyDstaddr6Output() GetPolicyDstaddr6Output {
	return i.ToGetPolicyDstaddr6OutputWithContext(context.Background())
}

func (i GetPolicyDstaddr6Args) ToGetPolicyDstaddr6OutputWithContext(ctx context.Context) GetPolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstaddr6Output)
}

// GetPolicyDstaddr6ArrayInput is an input type that accepts GetPolicyDstaddr6Array and GetPolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `GetPolicyDstaddr6ArrayInput` via:
//
//	GetPolicyDstaddr6Array{ GetPolicyDstaddr6Args{...} }
type GetPolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToGetPolicyDstaddr6ArrayOutput() GetPolicyDstaddr6ArrayOutput
	ToGetPolicyDstaddr6ArrayOutputWithContext(context.Context) GetPolicyDstaddr6ArrayOutput
}

type GetPolicyDstaddr6Array []GetPolicyDstaddr6Input

func (GetPolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstaddr6)(nil)).Elem()
}

func (i GetPolicyDstaddr6Array) ToGetPolicyDstaddr6ArrayOutput() GetPolicyDstaddr6ArrayOutput {
	return i.ToGetPolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i GetPolicyDstaddr6Array) ToGetPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetPolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstaddr6ArrayOutput)
}

type GetPolicyDstaddr6Output struct{ *pulumi.OutputState }

func (GetPolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstaddr6)(nil)).Elem()
}

func (o GetPolicyDstaddr6Output) ToGetPolicyDstaddr6Output() GetPolicyDstaddr6Output {
	return o
}

func (o GetPolicyDstaddr6Output) ToGetPolicyDstaddr6OutputWithContext(ctx context.Context) GetPolicyDstaddr6Output {
	return o
}

// Mirror Interface name.
func (o GetPolicyDstaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDstaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstaddr6)(nil)).Elem()
}

func (o GetPolicyDstaddr6ArrayOutput) ToGetPolicyDstaddr6ArrayOutput() GetPolicyDstaddr6ArrayOutput {
	return o
}

func (o GetPolicyDstaddr6ArrayOutput) ToGetPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetPolicyDstaddr6ArrayOutput {
	return o
}

func (o GetPolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) GetPolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDstaddr6 {
		return vs[0].([]GetPolicyDstaddr6)[vs[1].(int)]
	}).(GetPolicyDstaddr6Output)
}

type GetPolicyDstaddr struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyDstaddrInput is an input type that accepts GetPolicyDstaddrArgs and GetPolicyDstaddrOutput values.
// You can construct a concrete instance of `GetPolicyDstaddrInput` via:
//
//	GetPolicyDstaddrArgs{...}
type GetPolicyDstaddrInput interface {
	pulumi.Input

	ToGetPolicyDstaddrOutput() GetPolicyDstaddrOutput
	ToGetPolicyDstaddrOutputWithContext(context.Context) GetPolicyDstaddrOutput
}

type GetPolicyDstaddrArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstaddr)(nil)).Elem()
}

func (i GetPolicyDstaddrArgs) ToGetPolicyDstaddrOutput() GetPolicyDstaddrOutput {
	return i.ToGetPolicyDstaddrOutputWithContext(context.Background())
}

func (i GetPolicyDstaddrArgs) ToGetPolicyDstaddrOutputWithContext(ctx context.Context) GetPolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstaddrOutput)
}

// GetPolicyDstaddrArrayInput is an input type that accepts GetPolicyDstaddrArray and GetPolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicyDstaddrArrayInput` via:
//
//	GetPolicyDstaddrArray{ GetPolicyDstaddrArgs{...} }
type GetPolicyDstaddrArrayInput interface {
	pulumi.Input

	ToGetPolicyDstaddrArrayOutput() GetPolicyDstaddrArrayOutput
	ToGetPolicyDstaddrArrayOutputWithContext(context.Context) GetPolicyDstaddrArrayOutput
}

type GetPolicyDstaddrArray []GetPolicyDstaddrInput

func (GetPolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstaddr)(nil)).Elem()
}

func (i GetPolicyDstaddrArray) ToGetPolicyDstaddrArrayOutput() GetPolicyDstaddrArrayOutput {
	return i.ToGetPolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicyDstaddrArray) ToGetPolicyDstaddrArrayOutputWithContext(ctx context.Context) GetPolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstaddrArrayOutput)
}

type GetPolicyDstaddrOutput struct{ *pulumi.OutputState }

func (GetPolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstaddr)(nil)).Elem()
}

func (o GetPolicyDstaddrOutput) ToGetPolicyDstaddrOutput() GetPolicyDstaddrOutput {
	return o
}

func (o GetPolicyDstaddrOutput) ToGetPolicyDstaddrOutputWithContext(ctx context.Context) GetPolicyDstaddrOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyDstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstaddr)(nil)).Elem()
}

func (o GetPolicyDstaddrArrayOutput) ToGetPolicyDstaddrArrayOutput() GetPolicyDstaddrArrayOutput {
	return o
}

func (o GetPolicyDstaddrArrayOutput) ToGetPolicyDstaddrArrayOutputWithContext(ctx context.Context) GetPolicyDstaddrArrayOutput {
	return o
}

func (o GetPolicyDstaddrArrayOutput) Index(i pulumi.IntInput) GetPolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDstaddr {
		return vs[0].([]GetPolicyDstaddr)[vs[1].(int)]
	}).(GetPolicyDstaddrOutput)
}

type GetPolicyDstintf struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyDstintfInput is an input type that accepts GetPolicyDstintfArgs and GetPolicyDstintfOutput values.
// You can construct a concrete instance of `GetPolicyDstintfInput` via:
//
//	GetPolicyDstintfArgs{...}
type GetPolicyDstintfInput interface {
	pulumi.Input

	ToGetPolicyDstintfOutput() GetPolicyDstintfOutput
	ToGetPolicyDstintfOutputWithContext(context.Context) GetPolicyDstintfOutput
}

type GetPolicyDstintfArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstintf)(nil)).Elem()
}

func (i GetPolicyDstintfArgs) ToGetPolicyDstintfOutput() GetPolicyDstintfOutput {
	return i.ToGetPolicyDstintfOutputWithContext(context.Background())
}

func (i GetPolicyDstintfArgs) ToGetPolicyDstintfOutputWithContext(ctx context.Context) GetPolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstintfOutput)
}

// GetPolicyDstintfArrayInput is an input type that accepts GetPolicyDstintfArray and GetPolicyDstintfArrayOutput values.
// You can construct a concrete instance of `GetPolicyDstintfArrayInput` via:
//
//	GetPolicyDstintfArray{ GetPolicyDstintfArgs{...} }
type GetPolicyDstintfArrayInput interface {
	pulumi.Input

	ToGetPolicyDstintfArrayOutput() GetPolicyDstintfArrayOutput
	ToGetPolicyDstintfArrayOutputWithContext(context.Context) GetPolicyDstintfArrayOutput
}

type GetPolicyDstintfArray []GetPolicyDstintfInput

func (GetPolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstintf)(nil)).Elem()
}

func (i GetPolicyDstintfArray) ToGetPolicyDstintfArrayOutput() GetPolicyDstintfArrayOutput {
	return i.ToGetPolicyDstintfArrayOutputWithContext(context.Background())
}

func (i GetPolicyDstintfArray) ToGetPolicyDstintfArrayOutputWithContext(ctx context.Context) GetPolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstintfArrayOutput)
}

type GetPolicyDstintfOutput struct{ *pulumi.OutputState }

func (GetPolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstintf)(nil)).Elem()
}

func (o GetPolicyDstintfOutput) ToGetPolicyDstintfOutput() GetPolicyDstintfOutput {
	return o
}

func (o GetPolicyDstintfOutput) ToGetPolicyDstintfOutputWithContext(ctx context.Context) GetPolicyDstintfOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyDstintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDstintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstintf)(nil)).Elem()
}

func (o GetPolicyDstintfArrayOutput) ToGetPolicyDstintfArrayOutput() GetPolicyDstintfArrayOutput {
	return o
}

func (o GetPolicyDstintfArrayOutput) ToGetPolicyDstintfArrayOutputWithContext(ctx context.Context) GetPolicyDstintfArrayOutput {
	return o
}

func (o GetPolicyDstintfArrayOutput) Index(i pulumi.IntInput) GetPolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDstintf {
		return vs[0].([]GetPolicyDstintf)[vs[1].(int)]
	}).(GetPolicyDstintfOutput)
}

type GetPolicyFssoGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyFssoGroupInput is an input type that accepts GetPolicyFssoGroupArgs and GetPolicyFssoGroupOutput values.
// You can construct a concrete instance of `GetPolicyFssoGroupInput` via:
//
//	GetPolicyFssoGroupArgs{...}
type GetPolicyFssoGroupInput interface {
	pulumi.Input

	ToGetPolicyFssoGroupOutput() GetPolicyFssoGroupOutput
	ToGetPolicyFssoGroupOutputWithContext(context.Context) GetPolicyFssoGroupOutput
}

type GetPolicyFssoGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyFssoGroup)(nil)).Elem()
}

func (i GetPolicyFssoGroupArgs) ToGetPolicyFssoGroupOutput() GetPolicyFssoGroupOutput {
	return i.ToGetPolicyFssoGroupOutputWithContext(context.Background())
}

func (i GetPolicyFssoGroupArgs) ToGetPolicyFssoGroupOutputWithContext(ctx context.Context) GetPolicyFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyFssoGroupOutput)
}

// GetPolicyFssoGroupArrayInput is an input type that accepts GetPolicyFssoGroupArray and GetPolicyFssoGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyFssoGroupArrayInput` via:
//
//	GetPolicyFssoGroupArray{ GetPolicyFssoGroupArgs{...} }
type GetPolicyFssoGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyFssoGroupArrayOutput() GetPolicyFssoGroupArrayOutput
	ToGetPolicyFssoGroupArrayOutputWithContext(context.Context) GetPolicyFssoGroupArrayOutput
}

type GetPolicyFssoGroupArray []GetPolicyFssoGroupInput

func (GetPolicyFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyFssoGroup)(nil)).Elem()
}

func (i GetPolicyFssoGroupArray) ToGetPolicyFssoGroupArrayOutput() GetPolicyFssoGroupArrayOutput {
	return i.ToGetPolicyFssoGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyFssoGroupArray) ToGetPolicyFssoGroupArrayOutputWithContext(ctx context.Context) GetPolicyFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyFssoGroupArrayOutput)
}

type GetPolicyFssoGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyFssoGroup)(nil)).Elem()
}

func (o GetPolicyFssoGroupOutput) ToGetPolicyFssoGroupOutput() GetPolicyFssoGroupOutput {
	return o
}

func (o GetPolicyFssoGroupOutput) ToGetPolicyFssoGroupOutputWithContext(ctx context.Context) GetPolicyFssoGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyFssoGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyFssoGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyFssoGroup)(nil)).Elem()
}

func (o GetPolicyFssoGroupArrayOutput) ToGetPolicyFssoGroupArrayOutput() GetPolicyFssoGroupArrayOutput {
	return o
}

func (o GetPolicyFssoGroupArrayOutput) ToGetPolicyFssoGroupArrayOutputWithContext(ctx context.Context) GetPolicyFssoGroupArrayOutput {
	return o
}

func (o GetPolicyFssoGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyFssoGroup {
		return vs[0].([]GetPolicyFssoGroup)[vs[1].(int)]
	}).(GetPolicyFssoGroupOutput)
}

type GetPolicyGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyGroupInput is an input type that accepts GetPolicyGroupArgs and GetPolicyGroupOutput values.
// You can construct a concrete instance of `GetPolicyGroupInput` via:
//
//	GetPolicyGroupArgs{...}
type GetPolicyGroupInput interface {
	pulumi.Input

	ToGetPolicyGroupOutput() GetPolicyGroupOutput
	ToGetPolicyGroupOutputWithContext(context.Context) GetPolicyGroupOutput
}

type GetPolicyGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroup)(nil)).Elem()
}

func (i GetPolicyGroupArgs) ToGetPolicyGroupOutput() GetPolicyGroupOutput {
	return i.ToGetPolicyGroupOutputWithContext(context.Background())
}

func (i GetPolicyGroupArgs) ToGetPolicyGroupOutputWithContext(ctx context.Context) GetPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupOutput)
}

// GetPolicyGroupArrayInput is an input type that accepts GetPolicyGroupArray and GetPolicyGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyGroupArrayInput` via:
//
//	GetPolicyGroupArray{ GetPolicyGroupArgs{...} }
type GetPolicyGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyGroupArrayOutput() GetPolicyGroupArrayOutput
	ToGetPolicyGroupArrayOutputWithContext(context.Context) GetPolicyGroupArrayOutput
}

type GetPolicyGroupArray []GetPolicyGroupInput

func (GetPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroup)(nil)).Elem()
}

func (i GetPolicyGroupArray) ToGetPolicyGroupArrayOutput() GetPolicyGroupArrayOutput {
	return i.ToGetPolicyGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyGroupArray) ToGetPolicyGroupArrayOutputWithContext(ctx context.Context) GetPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupArrayOutput)
}

type GetPolicyGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroup)(nil)).Elem()
}

func (o GetPolicyGroupOutput) ToGetPolicyGroupOutput() GetPolicyGroupOutput {
	return o
}

func (o GetPolicyGroupOutput) ToGetPolicyGroupOutputWithContext(ctx context.Context) GetPolicyGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroup)(nil)).Elem()
}

func (o GetPolicyGroupArrayOutput) ToGetPolicyGroupArrayOutput() GetPolicyGroupArrayOutput {
	return o
}

func (o GetPolicyGroupArrayOutput) ToGetPolicyGroupArrayOutputWithContext(ctx context.Context) GetPolicyGroupArrayOutput {
	return o
}

func (o GetPolicyGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyGroup {
		return vs[0].([]GetPolicyGroup)[vs[1].(int)]
	}).(GetPolicyGroupOutput)
}

type GetPolicyInternetService6Custom struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetService6CustomInput is an input type that accepts GetPolicyInternetService6CustomArgs and GetPolicyInternetService6CustomOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6CustomInput` via:
//
//	GetPolicyInternetService6CustomArgs{...}
type GetPolicyInternetService6CustomInput interface {
	pulumi.Input

	ToGetPolicyInternetService6CustomOutput() GetPolicyInternetService6CustomOutput
	ToGetPolicyInternetService6CustomOutputWithContext(context.Context) GetPolicyInternetService6CustomOutput
}

type GetPolicyInternetService6CustomArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetService6CustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6Custom)(nil)).Elem()
}

func (i GetPolicyInternetService6CustomArgs) ToGetPolicyInternetService6CustomOutput() GetPolicyInternetService6CustomOutput {
	return i.ToGetPolicyInternetService6CustomOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6CustomArgs) ToGetPolicyInternetService6CustomOutputWithContext(ctx context.Context) GetPolicyInternetService6CustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6CustomOutput)
}

// GetPolicyInternetService6CustomArrayInput is an input type that accepts GetPolicyInternetService6CustomArray and GetPolicyInternetService6CustomArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6CustomArrayInput` via:
//
//	GetPolicyInternetService6CustomArray{ GetPolicyInternetService6CustomArgs{...} }
type GetPolicyInternetService6CustomArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetService6CustomArrayOutput() GetPolicyInternetService6CustomArrayOutput
	ToGetPolicyInternetService6CustomArrayOutputWithContext(context.Context) GetPolicyInternetService6CustomArrayOutput
}

type GetPolicyInternetService6CustomArray []GetPolicyInternetService6CustomInput

func (GetPolicyInternetService6CustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6Custom)(nil)).Elem()
}

func (i GetPolicyInternetService6CustomArray) ToGetPolicyInternetService6CustomArrayOutput() GetPolicyInternetService6CustomArrayOutput {
	return i.ToGetPolicyInternetService6CustomArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6CustomArray) ToGetPolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6CustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6CustomArrayOutput)
}

type GetPolicyInternetService6CustomOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6CustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6Custom)(nil)).Elem()
}

func (o GetPolicyInternetService6CustomOutput) ToGetPolicyInternetService6CustomOutput() GetPolicyInternetService6CustomOutput {
	return o
}

func (o GetPolicyInternetService6CustomOutput) ToGetPolicyInternetService6CustomOutputWithContext(ctx context.Context) GetPolicyInternetService6CustomOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetService6CustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetService6Custom) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetService6CustomArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6CustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6Custom)(nil)).Elem()
}

func (o GetPolicyInternetService6CustomArrayOutput) ToGetPolicyInternetService6CustomArrayOutput() GetPolicyInternetService6CustomArrayOutput {
	return o
}

func (o GetPolicyInternetService6CustomArrayOutput) ToGetPolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6CustomArrayOutput {
	return o
}

func (o GetPolicyInternetService6CustomArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetService6CustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetService6Custom {
		return vs[0].([]GetPolicyInternetService6Custom)[vs[1].(int)]
	}).(GetPolicyInternetService6CustomOutput)
}

type GetPolicyInternetService6CustomGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetService6CustomGroupInput is an input type that accepts GetPolicyInternetService6CustomGroupArgs and GetPolicyInternetService6CustomGroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6CustomGroupInput` via:
//
//	GetPolicyInternetService6CustomGroupArgs{...}
type GetPolicyInternetService6CustomGroupInput interface {
	pulumi.Input

	ToGetPolicyInternetService6CustomGroupOutput() GetPolicyInternetService6CustomGroupOutput
	ToGetPolicyInternetService6CustomGroupOutputWithContext(context.Context) GetPolicyInternetService6CustomGroupOutput
}

type GetPolicyInternetService6CustomGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetService6CustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetService6CustomGroupArgs) ToGetPolicyInternetService6CustomGroupOutput() GetPolicyInternetService6CustomGroupOutput {
	return i.ToGetPolicyInternetService6CustomGroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6CustomGroupArgs) ToGetPolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetService6CustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6CustomGroupOutput)
}

// GetPolicyInternetService6CustomGroupArrayInput is an input type that accepts GetPolicyInternetService6CustomGroupArray and GetPolicyInternetService6CustomGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6CustomGroupArrayInput` via:
//
//	GetPolicyInternetService6CustomGroupArray{ GetPolicyInternetService6CustomGroupArgs{...} }
type GetPolicyInternetService6CustomGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetService6CustomGroupArrayOutput() GetPolicyInternetService6CustomGroupArrayOutput
	ToGetPolicyInternetService6CustomGroupArrayOutputWithContext(context.Context) GetPolicyInternetService6CustomGroupArrayOutput
}

type GetPolicyInternetService6CustomGroupArray []GetPolicyInternetService6CustomGroupInput

func (GetPolicyInternetService6CustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetService6CustomGroupArray) ToGetPolicyInternetService6CustomGroupArrayOutput() GetPolicyInternetService6CustomGroupArrayOutput {
	return i.ToGetPolicyInternetService6CustomGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6CustomGroupArray) ToGetPolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6CustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6CustomGroupArrayOutput)
}

type GetPolicyInternetService6CustomGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6CustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetService6CustomGroupOutput) ToGetPolicyInternetService6CustomGroupOutput() GetPolicyInternetService6CustomGroupOutput {
	return o
}

func (o GetPolicyInternetService6CustomGroupOutput) ToGetPolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetService6CustomGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetService6CustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetService6CustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetService6CustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6CustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetService6CustomGroupArrayOutput) ToGetPolicyInternetService6CustomGroupArrayOutput() GetPolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetService6CustomGroupArrayOutput) ToGetPolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetService6CustomGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetService6CustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetService6CustomGroup {
		return vs[0].([]GetPolicyInternetService6CustomGroup)[vs[1].(int)]
	}).(GetPolicyInternetService6CustomGroupOutput)
}

type GetPolicyInternetService6Group struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetService6GroupInput is an input type that accepts GetPolicyInternetService6GroupArgs and GetPolicyInternetService6GroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6GroupInput` via:
//
//	GetPolicyInternetService6GroupArgs{...}
type GetPolicyInternetService6GroupInput interface {
	pulumi.Input

	ToGetPolicyInternetService6GroupOutput() GetPolicyInternetService6GroupOutput
	ToGetPolicyInternetService6GroupOutputWithContext(context.Context) GetPolicyInternetService6GroupOutput
}

type GetPolicyInternetService6GroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetService6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6Group)(nil)).Elem()
}

func (i GetPolicyInternetService6GroupArgs) ToGetPolicyInternetService6GroupOutput() GetPolicyInternetService6GroupOutput {
	return i.ToGetPolicyInternetService6GroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6GroupArgs) ToGetPolicyInternetService6GroupOutputWithContext(ctx context.Context) GetPolicyInternetService6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6GroupOutput)
}

// GetPolicyInternetService6GroupArrayInput is an input type that accepts GetPolicyInternetService6GroupArray and GetPolicyInternetService6GroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6GroupArrayInput` via:
//
//	GetPolicyInternetService6GroupArray{ GetPolicyInternetService6GroupArgs{...} }
type GetPolicyInternetService6GroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetService6GroupArrayOutput() GetPolicyInternetService6GroupArrayOutput
	ToGetPolicyInternetService6GroupArrayOutputWithContext(context.Context) GetPolicyInternetService6GroupArrayOutput
}

type GetPolicyInternetService6GroupArray []GetPolicyInternetService6GroupInput

func (GetPolicyInternetService6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6Group)(nil)).Elem()
}

func (i GetPolicyInternetService6GroupArray) ToGetPolicyInternetService6GroupArrayOutput() GetPolicyInternetService6GroupArrayOutput {
	return i.ToGetPolicyInternetService6GroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6GroupArray) ToGetPolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6GroupArrayOutput)
}

type GetPolicyInternetService6GroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6Group)(nil)).Elem()
}

func (o GetPolicyInternetService6GroupOutput) ToGetPolicyInternetService6GroupOutput() GetPolicyInternetService6GroupOutput {
	return o
}

func (o GetPolicyInternetService6GroupOutput) ToGetPolicyInternetService6GroupOutputWithContext(ctx context.Context) GetPolicyInternetService6GroupOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetService6GroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetService6Group) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetService6GroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6Group)(nil)).Elem()
}

func (o GetPolicyInternetService6GroupArrayOutput) ToGetPolicyInternetService6GroupArrayOutput() GetPolicyInternetService6GroupArrayOutput {
	return o
}

func (o GetPolicyInternetService6GroupArrayOutput) ToGetPolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6GroupArrayOutput {
	return o
}

func (o GetPolicyInternetService6GroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetService6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetService6Group {
		return vs[0].([]GetPolicyInternetService6Group)[vs[1].(int)]
	}).(GetPolicyInternetService6GroupOutput)
}

type GetPolicyInternetService6Name struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetService6NameInput is an input type that accepts GetPolicyInternetService6NameArgs and GetPolicyInternetService6NameOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6NameInput` via:
//
//	GetPolicyInternetService6NameArgs{...}
type GetPolicyInternetService6NameInput interface {
	pulumi.Input

	ToGetPolicyInternetService6NameOutput() GetPolicyInternetService6NameOutput
	ToGetPolicyInternetService6NameOutputWithContext(context.Context) GetPolicyInternetService6NameOutput
}

type GetPolicyInternetService6NameArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetService6NameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6Name)(nil)).Elem()
}

func (i GetPolicyInternetService6NameArgs) ToGetPolicyInternetService6NameOutput() GetPolicyInternetService6NameOutput {
	return i.ToGetPolicyInternetService6NameOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6NameArgs) ToGetPolicyInternetService6NameOutputWithContext(ctx context.Context) GetPolicyInternetService6NameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6NameOutput)
}

// GetPolicyInternetService6NameArrayInput is an input type that accepts GetPolicyInternetService6NameArray and GetPolicyInternetService6NameArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6NameArrayInput` via:
//
//	GetPolicyInternetService6NameArray{ GetPolicyInternetService6NameArgs{...} }
type GetPolicyInternetService6NameArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetService6NameArrayOutput() GetPolicyInternetService6NameArrayOutput
	ToGetPolicyInternetService6NameArrayOutputWithContext(context.Context) GetPolicyInternetService6NameArrayOutput
}

type GetPolicyInternetService6NameArray []GetPolicyInternetService6NameInput

func (GetPolicyInternetService6NameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6Name)(nil)).Elem()
}

func (i GetPolicyInternetService6NameArray) ToGetPolicyInternetService6NameArrayOutput() GetPolicyInternetService6NameArrayOutput {
	return i.ToGetPolicyInternetService6NameArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6NameArray) ToGetPolicyInternetService6NameArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6NameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6NameArrayOutput)
}

type GetPolicyInternetService6NameOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6NameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6Name)(nil)).Elem()
}

func (o GetPolicyInternetService6NameOutput) ToGetPolicyInternetService6NameOutput() GetPolicyInternetService6NameOutput {
	return o
}

func (o GetPolicyInternetService6NameOutput) ToGetPolicyInternetService6NameOutputWithContext(ctx context.Context) GetPolicyInternetService6NameOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetService6NameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetService6Name) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetService6NameArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6NameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6Name)(nil)).Elem()
}

func (o GetPolicyInternetService6NameArrayOutput) ToGetPolicyInternetService6NameArrayOutput() GetPolicyInternetService6NameArrayOutput {
	return o
}

func (o GetPolicyInternetService6NameArrayOutput) ToGetPolicyInternetService6NameArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6NameArrayOutput {
	return o
}

func (o GetPolicyInternetService6NameArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetService6NameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetService6Name {
		return vs[0].([]GetPolicyInternetService6Name)[vs[1].(int)]
	}).(GetPolicyInternetService6NameOutput)
}

type GetPolicyInternetService6SrcCustom struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetService6SrcCustomInput is an input type that accepts GetPolicyInternetService6SrcCustomArgs and GetPolicyInternetService6SrcCustomOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6SrcCustomInput` via:
//
//	GetPolicyInternetService6SrcCustomArgs{...}
type GetPolicyInternetService6SrcCustomInput interface {
	pulumi.Input

	ToGetPolicyInternetService6SrcCustomOutput() GetPolicyInternetService6SrcCustomOutput
	ToGetPolicyInternetService6SrcCustomOutputWithContext(context.Context) GetPolicyInternetService6SrcCustomOutput
}

type GetPolicyInternetService6SrcCustomArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetService6SrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i GetPolicyInternetService6SrcCustomArgs) ToGetPolicyInternetService6SrcCustomOutput() GetPolicyInternetService6SrcCustomOutput {
	return i.ToGetPolicyInternetService6SrcCustomOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6SrcCustomArgs) ToGetPolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6SrcCustomOutput)
}

// GetPolicyInternetService6SrcCustomArrayInput is an input type that accepts GetPolicyInternetService6SrcCustomArray and GetPolicyInternetService6SrcCustomArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6SrcCustomArrayInput` via:
//
//	GetPolicyInternetService6SrcCustomArray{ GetPolicyInternetService6SrcCustomArgs{...} }
type GetPolicyInternetService6SrcCustomArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetService6SrcCustomArrayOutput() GetPolicyInternetService6SrcCustomArrayOutput
	ToGetPolicyInternetService6SrcCustomArrayOutputWithContext(context.Context) GetPolicyInternetService6SrcCustomArrayOutput
}

type GetPolicyInternetService6SrcCustomArray []GetPolicyInternetService6SrcCustomInput

func (GetPolicyInternetService6SrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i GetPolicyInternetService6SrcCustomArray) ToGetPolicyInternetService6SrcCustomArrayOutput() GetPolicyInternetService6SrcCustomArrayOutput {
	return i.ToGetPolicyInternetService6SrcCustomArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6SrcCustomArray) ToGetPolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6SrcCustomArrayOutput)
}

type GetPolicyInternetService6SrcCustomOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6SrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o GetPolicyInternetService6SrcCustomOutput) ToGetPolicyInternetService6SrcCustomOutput() GetPolicyInternetService6SrcCustomOutput {
	return o
}

func (o GetPolicyInternetService6SrcCustomOutput) ToGetPolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcCustomOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetService6SrcCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetService6SrcCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetService6SrcCustomArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6SrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o GetPolicyInternetService6SrcCustomArrayOutput) ToGetPolicyInternetService6SrcCustomArrayOutput() GetPolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o GetPolicyInternetService6SrcCustomArrayOutput) ToGetPolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o GetPolicyInternetService6SrcCustomArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetService6SrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetService6SrcCustom {
		return vs[0].([]GetPolicyInternetService6SrcCustom)[vs[1].(int)]
	}).(GetPolicyInternetService6SrcCustomOutput)
}

type GetPolicyInternetService6SrcCustomGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetService6SrcCustomGroupInput is an input type that accepts GetPolicyInternetService6SrcCustomGroupArgs and GetPolicyInternetService6SrcCustomGroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6SrcCustomGroupInput` via:
//
//	GetPolicyInternetService6SrcCustomGroupArgs{...}
type GetPolicyInternetService6SrcCustomGroupInput interface {
	pulumi.Input

	ToGetPolicyInternetService6SrcCustomGroupOutput() GetPolicyInternetService6SrcCustomGroupOutput
	ToGetPolicyInternetService6SrcCustomGroupOutputWithContext(context.Context) GetPolicyInternetService6SrcCustomGroupOutput
}

type GetPolicyInternetService6SrcCustomGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetService6SrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetService6SrcCustomGroupArgs) ToGetPolicyInternetService6SrcCustomGroupOutput() GetPolicyInternetService6SrcCustomGroupOutput {
	return i.ToGetPolicyInternetService6SrcCustomGroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6SrcCustomGroupArgs) ToGetPolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6SrcCustomGroupOutput)
}

// GetPolicyInternetService6SrcCustomGroupArrayInput is an input type that accepts GetPolicyInternetService6SrcCustomGroupArray and GetPolicyInternetService6SrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6SrcCustomGroupArrayInput` via:
//
//	GetPolicyInternetService6SrcCustomGroupArray{ GetPolicyInternetService6SrcCustomGroupArgs{...} }
type GetPolicyInternetService6SrcCustomGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetService6SrcCustomGroupArrayOutput() GetPolicyInternetService6SrcCustomGroupArrayOutput
	ToGetPolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Context) GetPolicyInternetService6SrcCustomGroupArrayOutput
}

type GetPolicyInternetService6SrcCustomGroupArray []GetPolicyInternetService6SrcCustomGroupInput

func (GetPolicyInternetService6SrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetService6SrcCustomGroupArray) ToGetPolicyInternetService6SrcCustomGroupArrayOutput() GetPolicyInternetService6SrcCustomGroupArrayOutput {
	return i.ToGetPolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6SrcCustomGroupArray) ToGetPolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6SrcCustomGroupArrayOutput)
}

type GetPolicyInternetService6SrcCustomGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6SrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetService6SrcCustomGroupOutput) ToGetPolicyInternetService6SrcCustomGroupOutput() GetPolicyInternetService6SrcCustomGroupOutput {
	return o
}

func (o GetPolicyInternetService6SrcCustomGroupOutput) ToGetPolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcCustomGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetService6SrcCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetService6SrcCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetService6SrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6SrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetService6SrcCustomGroupArrayOutput) ToGetPolicyInternetService6SrcCustomGroupArrayOutput() GetPolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetService6SrcCustomGroupArrayOutput) ToGetPolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetService6SrcCustomGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetService6SrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetService6SrcCustomGroup {
		return vs[0].([]GetPolicyInternetService6SrcCustomGroup)[vs[1].(int)]
	}).(GetPolicyInternetService6SrcCustomGroupOutput)
}

type GetPolicyInternetService6SrcGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetService6SrcGroupInput is an input type that accepts GetPolicyInternetService6SrcGroupArgs and GetPolicyInternetService6SrcGroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6SrcGroupInput` via:
//
//	GetPolicyInternetService6SrcGroupArgs{...}
type GetPolicyInternetService6SrcGroupInput interface {
	pulumi.Input

	ToGetPolicyInternetService6SrcGroupOutput() GetPolicyInternetService6SrcGroupOutput
	ToGetPolicyInternetService6SrcGroupOutputWithContext(context.Context) GetPolicyInternetService6SrcGroupOutput
}

type GetPolicyInternetService6SrcGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetService6SrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i GetPolicyInternetService6SrcGroupArgs) ToGetPolicyInternetService6SrcGroupOutput() GetPolicyInternetService6SrcGroupOutput {
	return i.ToGetPolicyInternetService6SrcGroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6SrcGroupArgs) ToGetPolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6SrcGroupOutput)
}

// GetPolicyInternetService6SrcGroupArrayInput is an input type that accepts GetPolicyInternetService6SrcGroupArray and GetPolicyInternetService6SrcGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6SrcGroupArrayInput` via:
//
//	GetPolicyInternetService6SrcGroupArray{ GetPolicyInternetService6SrcGroupArgs{...} }
type GetPolicyInternetService6SrcGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetService6SrcGroupArrayOutput() GetPolicyInternetService6SrcGroupArrayOutput
	ToGetPolicyInternetService6SrcGroupArrayOutputWithContext(context.Context) GetPolicyInternetService6SrcGroupArrayOutput
}

type GetPolicyInternetService6SrcGroupArray []GetPolicyInternetService6SrcGroupInput

func (GetPolicyInternetService6SrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i GetPolicyInternetService6SrcGroupArray) ToGetPolicyInternetService6SrcGroupArrayOutput() GetPolicyInternetService6SrcGroupArrayOutput {
	return i.ToGetPolicyInternetService6SrcGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6SrcGroupArray) ToGetPolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6SrcGroupArrayOutput)
}

type GetPolicyInternetService6SrcGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6SrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o GetPolicyInternetService6SrcGroupOutput) ToGetPolicyInternetService6SrcGroupOutput() GetPolicyInternetService6SrcGroupOutput {
	return o
}

func (o GetPolicyInternetService6SrcGroupOutput) ToGetPolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetService6SrcGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetService6SrcGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetService6SrcGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6SrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o GetPolicyInternetService6SrcGroupArrayOutput) ToGetPolicyInternetService6SrcGroupArrayOutput() GetPolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o GetPolicyInternetService6SrcGroupArrayOutput) ToGetPolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o GetPolicyInternetService6SrcGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetService6SrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetService6SrcGroup {
		return vs[0].([]GetPolicyInternetService6SrcGroup)[vs[1].(int)]
	}).(GetPolicyInternetService6SrcGroupOutput)
}

type GetPolicyInternetService6SrcName struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetService6SrcNameInput is an input type that accepts GetPolicyInternetService6SrcNameArgs and GetPolicyInternetService6SrcNameOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6SrcNameInput` via:
//
//	GetPolicyInternetService6SrcNameArgs{...}
type GetPolicyInternetService6SrcNameInput interface {
	pulumi.Input

	ToGetPolicyInternetService6SrcNameOutput() GetPolicyInternetService6SrcNameOutput
	ToGetPolicyInternetService6SrcNameOutputWithContext(context.Context) GetPolicyInternetService6SrcNameOutput
}

type GetPolicyInternetService6SrcNameArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetService6SrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6SrcName)(nil)).Elem()
}

func (i GetPolicyInternetService6SrcNameArgs) ToGetPolicyInternetService6SrcNameOutput() GetPolicyInternetService6SrcNameOutput {
	return i.ToGetPolicyInternetService6SrcNameOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6SrcNameArgs) ToGetPolicyInternetService6SrcNameOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6SrcNameOutput)
}

// GetPolicyInternetService6SrcNameArrayInput is an input type that accepts GetPolicyInternetService6SrcNameArray and GetPolicyInternetService6SrcNameArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetService6SrcNameArrayInput` via:
//
//	GetPolicyInternetService6SrcNameArray{ GetPolicyInternetService6SrcNameArgs{...} }
type GetPolicyInternetService6SrcNameArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetService6SrcNameArrayOutput() GetPolicyInternetService6SrcNameArrayOutput
	ToGetPolicyInternetService6SrcNameArrayOutputWithContext(context.Context) GetPolicyInternetService6SrcNameArrayOutput
}

type GetPolicyInternetService6SrcNameArray []GetPolicyInternetService6SrcNameInput

func (GetPolicyInternetService6SrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6SrcName)(nil)).Elem()
}

func (i GetPolicyInternetService6SrcNameArray) ToGetPolicyInternetService6SrcNameArrayOutput() GetPolicyInternetService6SrcNameArrayOutput {
	return i.ToGetPolicyInternetService6SrcNameArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetService6SrcNameArray) ToGetPolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetService6SrcNameArrayOutput)
}

type GetPolicyInternetService6SrcNameOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6SrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetService6SrcName)(nil)).Elem()
}

func (o GetPolicyInternetService6SrcNameOutput) ToGetPolicyInternetService6SrcNameOutput() GetPolicyInternetService6SrcNameOutput {
	return o
}

func (o GetPolicyInternetService6SrcNameOutput) ToGetPolicyInternetService6SrcNameOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcNameOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetService6SrcNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetService6SrcName) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetService6SrcNameArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetService6SrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetService6SrcName)(nil)).Elem()
}

func (o GetPolicyInternetService6SrcNameArrayOutput) ToGetPolicyInternetService6SrcNameArrayOutput() GetPolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o GetPolicyInternetService6SrcNameArrayOutput) ToGetPolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) GetPolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o GetPolicyInternetService6SrcNameArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetService6SrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetService6SrcName {
		return vs[0].([]GetPolicyInternetService6SrcName)[vs[1].(int)]
	}).(GetPolicyInternetService6SrcNameOutput)
}

type GetPolicyInternetServiceCustom struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceCustomInput is an input type that accepts GetPolicyInternetServiceCustomArgs and GetPolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceCustomInput` via:
//
//	GetPolicyInternetServiceCustomArgs{...}
type GetPolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceCustomOutput() GetPolicyInternetServiceCustomOutput
	ToGetPolicyInternetServiceCustomOutputWithContext(context.Context) GetPolicyInternetServiceCustomOutput
}

type GetPolicyInternetServiceCustomArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetPolicyInternetServiceCustomArgs) ToGetPolicyInternetServiceCustomOutput() GetPolicyInternetServiceCustomOutput {
	return i.ToGetPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceCustomArgs) ToGetPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceCustomOutput)
}

// GetPolicyInternetServiceCustomArrayInput is an input type that accepts GetPolicyInternetServiceCustomArray and GetPolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceCustomArrayInput` via:
//
//	GetPolicyInternetServiceCustomArray{ GetPolicyInternetServiceCustomArgs{...} }
type GetPolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceCustomArrayOutput() GetPolicyInternetServiceCustomArrayOutput
	ToGetPolicyInternetServiceCustomArrayOutputWithContext(context.Context) GetPolicyInternetServiceCustomArrayOutput
}

type GetPolicyInternetServiceCustomArray []GetPolicyInternetServiceCustomInput

func (GetPolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetPolicyInternetServiceCustomArray) ToGetPolicyInternetServiceCustomArrayOutput() GetPolicyInternetServiceCustomArrayOutput {
	return i.ToGetPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceCustomArray) ToGetPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceCustomArrayOutput)
}

type GetPolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetPolicyInternetServiceCustomOutput) ToGetPolicyInternetServiceCustomOutput() GetPolicyInternetServiceCustomOutput {
	return o
}

func (o GetPolicyInternetServiceCustomOutput) ToGetPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetServiceCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetPolicyInternetServiceCustomArrayOutput) ToGetPolicyInternetServiceCustomArrayOutput() GetPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetPolicyInternetServiceCustomArrayOutput) ToGetPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetPolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceCustom {
		return vs[0].([]GetPolicyInternetServiceCustom)[vs[1].(int)]
	}).(GetPolicyInternetServiceCustomOutput)
}

type GetPolicyInternetServiceCustomGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceCustomGroupInput is an input type that accepts GetPolicyInternetServiceCustomGroupArgs and GetPolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceCustomGroupInput` via:
//
//	GetPolicyInternetServiceCustomGroupArgs{...}
type GetPolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceCustomGroupOutput() GetPolicyInternetServiceCustomGroupOutput
	ToGetPolicyInternetServiceCustomGroupOutputWithContext(context.Context) GetPolicyInternetServiceCustomGroupOutput
}

type GetPolicyInternetServiceCustomGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceCustomGroupArgs) ToGetPolicyInternetServiceCustomGroupOutput() GetPolicyInternetServiceCustomGroupOutput {
	return i.ToGetPolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceCustomGroupArgs) ToGetPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceCustomGroupOutput)
}

// GetPolicyInternetServiceCustomGroupArrayInput is an input type that accepts GetPolicyInternetServiceCustomGroupArray and GetPolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceCustomGroupArrayInput` via:
//
//	GetPolicyInternetServiceCustomGroupArray{ GetPolicyInternetServiceCustomGroupArgs{...} }
type GetPolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceCustomGroupArrayOutput() GetPolicyInternetServiceCustomGroupArrayOutput
	ToGetPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) GetPolicyInternetServiceCustomGroupArrayOutput
}

type GetPolicyInternetServiceCustomGroupArray []GetPolicyInternetServiceCustomGroupInput

func (GetPolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceCustomGroupArray) ToGetPolicyInternetServiceCustomGroupArrayOutput() GetPolicyInternetServiceCustomGroupArrayOutput {
	return i.ToGetPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceCustomGroupArray) ToGetPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceCustomGroupArrayOutput)
}

type GetPolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceCustomGroupOutput) ToGetPolicyInternetServiceCustomGroupOutput() GetPolicyInternetServiceCustomGroupOutput {
	return o
}

func (o GetPolicyInternetServiceCustomGroupOutput) ToGetPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetServiceCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceCustomGroupArrayOutput) ToGetPolicyInternetServiceCustomGroupArrayOutput() GetPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceCustomGroupArrayOutput) ToGetPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceCustomGroup {
		return vs[0].([]GetPolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(GetPolicyInternetServiceCustomGroupOutput)
}

type GetPolicyInternetServiceGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceGroupInput is an input type that accepts GetPolicyInternetServiceGroupArgs and GetPolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceGroupInput` via:
//
//	GetPolicyInternetServiceGroupArgs{...}
type GetPolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceGroupOutput() GetPolicyInternetServiceGroupOutput
	ToGetPolicyInternetServiceGroupOutputWithContext(context.Context) GetPolicyInternetServiceGroupOutput
}

type GetPolicyInternetServiceGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceGroupArgs) ToGetPolicyInternetServiceGroupOutput() GetPolicyInternetServiceGroupOutput {
	return i.ToGetPolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceGroupArgs) ToGetPolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceGroupOutput)
}

// GetPolicyInternetServiceGroupArrayInput is an input type that accepts GetPolicyInternetServiceGroupArray and GetPolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceGroupArrayInput` via:
//
//	GetPolicyInternetServiceGroupArray{ GetPolicyInternetServiceGroupArgs{...} }
type GetPolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceGroupArrayOutput() GetPolicyInternetServiceGroupArrayOutput
	ToGetPolicyInternetServiceGroupArrayOutputWithContext(context.Context) GetPolicyInternetServiceGroupArrayOutput
}

type GetPolicyInternetServiceGroupArray []GetPolicyInternetServiceGroupInput

func (GetPolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceGroupArray) ToGetPolicyInternetServiceGroupArrayOutput() GetPolicyInternetServiceGroupArrayOutput {
	return i.ToGetPolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceGroupArray) ToGetPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceGroupArrayOutput)
}

type GetPolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceGroupOutput) ToGetPolicyInternetServiceGroupOutput() GetPolicyInternetServiceGroupOutput {
	return o
}

func (o GetPolicyInternetServiceGroupOutput) ToGetPolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceGroupArrayOutput) ToGetPolicyInternetServiceGroupArrayOutput() GetPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceGroupArrayOutput) ToGetPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceGroup {
		return vs[0].([]GetPolicyInternetServiceGroup)[vs[1].(int)]
	}).(GetPolicyInternetServiceGroupOutput)
}

type GetPolicyInternetServiceId struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetPolicyInternetServiceIdInput is an input type that accepts GetPolicyInternetServiceIdArgs and GetPolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceIdInput` via:
//
//	GetPolicyInternetServiceIdArgs{...}
type GetPolicyInternetServiceIdInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceIdOutput() GetPolicyInternetServiceIdOutput
	ToGetPolicyInternetServiceIdOutputWithContext(context.Context) GetPolicyInternetServiceIdOutput
}

type GetPolicyInternetServiceIdArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceId)(nil)).Elem()
}

func (i GetPolicyInternetServiceIdArgs) ToGetPolicyInternetServiceIdOutput() GetPolicyInternetServiceIdOutput {
	return i.ToGetPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceIdArgs) ToGetPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceIdOutput)
}

// GetPolicyInternetServiceIdArrayInput is an input type that accepts GetPolicyInternetServiceIdArray and GetPolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceIdArrayInput` via:
//
//	GetPolicyInternetServiceIdArray{ GetPolicyInternetServiceIdArgs{...} }
type GetPolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceIdArrayOutput() GetPolicyInternetServiceIdArrayOutput
	ToGetPolicyInternetServiceIdArrayOutputWithContext(context.Context) GetPolicyInternetServiceIdArrayOutput
}

type GetPolicyInternetServiceIdArray []GetPolicyInternetServiceIdInput

func (GetPolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceId)(nil)).Elem()
}

func (i GetPolicyInternetServiceIdArray) ToGetPolicyInternetServiceIdArrayOutput() GetPolicyInternetServiceIdArrayOutput {
	return i.ToGetPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceIdArray) ToGetPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceIdArrayOutput)
}

type GetPolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceId)(nil)).Elem()
}

func (o GetPolicyInternetServiceIdOutput) ToGetPolicyInternetServiceIdOutput() GetPolicyInternetServiceIdOutput {
	return o
}

func (o GetPolicyInternetServiceIdOutput) ToGetPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdOutput {
	return o
}

// Security group tag.
func (o GetPolicyInternetServiceIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceId) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceId)(nil)).Elem()
}

func (o GetPolicyInternetServiceIdArrayOutput) ToGetPolicyInternetServiceIdArrayOutput() GetPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetPolicyInternetServiceIdArrayOutput) ToGetPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetPolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceId {
		return vs[0].([]GetPolicyInternetServiceId)[vs[1].(int)]
	}).(GetPolicyInternetServiceIdOutput)
}

type GetPolicyInternetServiceName struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceNameInput is an input type that accepts GetPolicyInternetServiceNameArgs and GetPolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceNameInput` via:
//
//	GetPolicyInternetServiceNameArgs{...}
type GetPolicyInternetServiceNameInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceNameOutput() GetPolicyInternetServiceNameOutput
	ToGetPolicyInternetServiceNameOutputWithContext(context.Context) GetPolicyInternetServiceNameOutput
}

type GetPolicyInternetServiceNameArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceName)(nil)).Elem()
}

func (i GetPolicyInternetServiceNameArgs) ToGetPolicyInternetServiceNameOutput() GetPolicyInternetServiceNameOutput {
	return i.ToGetPolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceNameArgs) ToGetPolicyInternetServiceNameOutputWithContext(ctx context.Context) GetPolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceNameOutput)
}

// GetPolicyInternetServiceNameArrayInput is an input type that accepts GetPolicyInternetServiceNameArray and GetPolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceNameArrayInput` via:
//
//	GetPolicyInternetServiceNameArray{ GetPolicyInternetServiceNameArgs{...} }
type GetPolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceNameArrayOutput() GetPolicyInternetServiceNameArrayOutput
	ToGetPolicyInternetServiceNameArrayOutputWithContext(context.Context) GetPolicyInternetServiceNameArrayOutput
}

type GetPolicyInternetServiceNameArray []GetPolicyInternetServiceNameInput

func (GetPolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceName)(nil)).Elem()
}

func (i GetPolicyInternetServiceNameArray) ToGetPolicyInternetServiceNameArrayOutput() GetPolicyInternetServiceNameArrayOutput {
	return i.ToGetPolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceNameArray) ToGetPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceNameArrayOutput)
}

type GetPolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceName)(nil)).Elem()
}

func (o GetPolicyInternetServiceNameOutput) ToGetPolicyInternetServiceNameOutput() GetPolicyInternetServiceNameOutput {
	return o
}

func (o GetPolicyInternetServiceNameOutput) ToGetPolicyInternetServiceNameOutputWithContext(ctx context.Context) GetPolicyInternetServiceNameOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetServiceNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceName) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceName)(nil)).Elem()
}

func (o GetPolicyInternetServiceNameArrayOutput) ToGetPolicyInternetServiceNameArrayOutput() GetPolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetPolicyInternetServiceNameArrayOutput) ToGetPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetPolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceName {
		return vs[0].([]GetPolicyInternetServiceName)[vs[1].(int)]
	}).(GetPolicyInternetServiceNameOutput)
}

type GetPolicyInternetServiceSrcCustom struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceSrcCustomInput is an input type that accepts GetPolicyInternetServiceSrcCustomArgs and GetPolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcCustomInput` via:
//
//	GetPolicyInternetServiceSrcCustomArgs{...}
type GetPolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcCustomOutput() GetPolicyInternetServiceSrcCustomOutput
	ToGetPolicyInternetServiceSrcCustomOutputWithContext(context.Context) GetPolicyInternetServiceSrcCustomOutput
}

type GetPolicyInternetServiceSrcCustomArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcCustomArgs) ToGetPolicyInternetServiceSrcCustomOutput() GetPolicyInternetServiceSrcCustomOutput {
	return i.ToGetPolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcCustomArgs) ToGetPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcCustomOutput)
}

// GetPolicyInternetServiceSrcCustomArrayInput is an input type that accepts GetPolicyInternetServiceSrcCustomArray and GetPolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcCustomArrayInput` via:
//
//	GetPolicyInternetServiceSrcCustomArray{ GetPolicyInternetServiceSrcCustomArgs{...} }
type GetPolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcCustomArrayOutput() GetPolicyInternetServiceSrcCustomArrayOutput
	ToGetPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) GetPolicyInternetServiceSrcCustomArrayOutput
}

type GetPolicyInternetServiceSrcCustomArray []GetPolicyInternetServiceSrcCustomInput

func (GetPolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcCustomArray) ToGetPolicyInternetServiceSrcCustomArrayOutput() GetPolicyInternetServiceSrcCustomArrayOutput {
	return i.ToGetPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcCustomArray) ToGetPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcCustomArrayOutput)
}

type GetPolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcCustomOutput) ToGetPolicyInternetServiceSrcCustomOutput() GetPolicyInternetServiceSrcCustomOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomOutput) ToGetPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetServiceSrcCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceSrcCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcCustomArrayOutput) ToGetPolicyInternetServiceSrcCustomArrayOutput() GetPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomArrayOutput) ToGetPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceSrcCustom {
		return vs[0].([]GetPolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(GetPolicyInternetServiceSrcCustomOutput)
}

type GetPolicyInternetServiceSrcCustomGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceSrcCustomGroupInput is an input type that accepts GetPolicyInternetServiceSrcCustomGroupArgs and GetPolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcCustomGroupInput` via:
//
//	GetPolicyInternetServiceSrcCustomGroupArgs{...}
type GetPolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcCustomGroupOutput() GetPolicyInternetServiceSrcCustomGroupOutput
	ToGetPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) GetPolicyInternetServiceSrcCustomGroupOutput
}

type GetPolicyInternetServiceSrcCustomGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcCustomGroupArgs) ToGetPolicyInternetServiceSrcCustomGroupOutput() GetPolicyInternetServiceSrcCustomGroupOutput {
	return i.ToGetPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcCustomGroupArgs) ToGetPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcCustomGroupOutput)
}

// GetPolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts GetPolicyInternetServiceSrcCustomGroupArray and GetPolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	GetPolicyInternetServiceSrcCustomGroupArray{ GetPolicyInternetServiceSrcCustomGroupArgs{...} }
type GetPolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcCustomGroupArrayOutput() GetPolicyInternetServiceSrcCustomGroupArrayOutput
	ToGetPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) GetPolicyInternetServiceSrcCustomGroupArrayOutput
}

type GetPolicyInternetServiceSrcCustomGroupArray []GetPolicyInternetServiceSrcCustomGroupInput

func (GetPolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcCustomGroupArray) ToGetPolicyInternetServiceSrcCustomGroupArrayOutput() GetPolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToGetPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcCustomGroupArray) ToGetPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcCustomGroupArrayOutput)
}

type GetPolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcCustomGroupOutput) ToGetPolicyInternetServiceSrcCustomGroupOutput() GetPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomGroupOutput) ToGetPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceSrcCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcCustomGroupArrayOutput) ToGetPolicyInternetServiceSrcCustomGroupArrayOutput() GetPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomGroupArrayOutput) ToGetPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceSrcCustomGroup {
		return vs[0].([]GetPolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(GetPolicyInternetServiceSrcCustomGroupOutput)
}

type GetPolicyInternetServiceSrcGroup struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceSrcGroupInput is an input type that accepts GetPolicyInternetServiceSrcGroupArgs and GetPolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcGroupInput` via:
//
//	GetPolicyInternetServiceSrcGroupArgs{...}
type GetPolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcGroupOutput() GetPolicyInternetServiceSrcGroupOutput
	ToGetPolicyInternetServiceSrcGroupOutputWithContext(context.Context) GetPolicyInternetServiceSrcGroupOutput
}

type GetPolicyInternetServiceSrcGroupArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcGroupArgs) ToGetPolicyInternetServiceSrcGroupOutput() GetPolicyInternetServiceSrcGroupOutput {
	return i.ToGetPolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcGroupArgs) ToGetPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcGroupOutput)
}

// GetPolicyInternetServiceSrcGroupArrayInput is an input type that accepts GetPolicyInternetServiceSrcGroupArray and GetPolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcGroupArrayInput` via:
//
//	GetPolicyInternetServiceSrcGroupArray{ GetPolicyInternetServiceSrcGroupArgs{...} }
type GetPolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcGroupArrayOutput() GetPolicyInternetServiceSrcGroupArrayOutput
	ToGetPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) GetPolicyInternetServiceSrcGroupArrayOutput
}

type GetPolicyInternetServiceSrcGroupArray []GetPolicyInternetServiceSrcGroupInput

func (GetPolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcGroupArray) ToGetPolicyInternetServiceSrcGroupArrayOutput() GetPolicyInternetServiceSrcGroupArrayOutput {
	return i.ToGetPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcGroupArray) ToGetPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcGroupArrayOutput)
}

type GetPolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcGroupOutput) ToGetPolicyInternetServiceSrcGroupOutput() GetPolicyInternetServiceSrcGroupOutput {
	return o
}

func (o GetPolicyInternetServiceSrcGroupOutput) ToGetPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcGroupOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetServiceSrcGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceSrcGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcGroupArrayOutput) ToGetPolicyInternetServiceSrcGroupArrayOutput() GetPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcGroupArrayOutput) ToGetPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceSrcGroup {
		return vs[0].([]GetPolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(GetPolicyInternetServiceSrcGroupOutput)
}

type GetPolicyInternetServiceSrcId struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetPolicyInternetServiceSrcIdInput is an input type that accepts GetPolicyInternetServiceSrcIdArgs and GetPolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcIdInput` via:
//
//	GetPolicyInternetServiceSrcIdArgs{...}
type GetPolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcIdOutput() GetPolicyInternetServiceSrcIdOutput
	ToGetPolicyInternetServiceSrcIdOutputWithContext(context.Context) GetPolicyInternetServiceSrcIdOutput
}

type GetPolicyInternetServiceSrcIdArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcIdArgs) ToGetPolicyInternetServiceSrcIdOutput() GetPolicyInternetServiceSrcIdOutput {
	return i.ToGetPolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcIdArgs) ToGetPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcIdOutput)
}

// GetPolicyInternetServiceSrcIdArrayInput is an input type that accepts GetPolicyInternetServiceSrcIdArray and GetPolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcIdArrayInput` via:
//
//	GetPolicyInternetServiceSrcIdArray{ GetPolicyInternetServiceSrcIdArgs{...} }
type GetPolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcIdArrayOutput() GetPolicyInternetServiceSrcIdArrayOutput
	ToGetPolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) GetPolicyInternetServiceSrcIdArrayOutput
}

type GetPolicyInternetServiceSrcIdArray []GetPolicyInternetServiceSrcIdInput

func (GetPolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcIdArray) ToGetPolicyInternetServiceSrcIdArrayOutput() GetPolicyInternetServiceSrcIdArrayOutput {
	return i.ToGetPolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcIdArray) ToGetPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcIdArrayOutput)
}

type GetPolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcIdOutput) ToGetPolicyInternetServiceSrcIdOutput() GetPolicyInternetServiceSrcIdOutput {
	return o
}

func (o GetPolicyInternetServiceSrcIdOutput) ToGetPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcIdOutput {
	return o
}

// Security group tag.
func (o GetPolicyInternetServiceSrcIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceSrcId) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcIdArrayOutput) ToGetPolicyInternetServiceSrcIdArrayOutput() GetPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcIdArrayOutput) ToGetPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceSrcId {
		return vs[0].([]GetPolicyInternetServiceSrcId)[vs[1].(int)]
	}).(GetPolicyInternetServiceSrcIdOutput)
}

type GetPolicyInternetServiceSrcName struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceSrcNameInput is an input type that accepts GetPolicyInternetServiceSrcNameArgs and GetPolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcNameInput` via:
//
//	GetPolicyInternetServiceSrcNameArgs{...}
type GetPolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcNameOutput() GetPolicyInternetServiceSrcNameOutput
	ToGetPolicyInternetServiceSrcNameOutputWithContext(context.Context) GetPolicyInternetServiceSrcNameOutput
}

type GetPolicyInternetServiceSrcNameArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcNameArgs) ToGetPolicyInternetServiceSrcNameOutput() GetPolicyInternetServiceSrcNameOutput {
	return i.ToGetPolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcNameArgs) ToGetPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcNameOutput)
}

// GetPolicyInternetServiceSrcNameArrayInput is an input type that accepts GetPolicyInternetServiceSrcNameArray and GetPolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcNameArrayInput` via:
//
//	GetPolicyInternetServiceSrcNameArray{ GetPolicyInternetServiceSrcNameArgs{...} }
type GetPolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcNameArrayOutput() GetPolicyInternetServiceSrcNameArrayOutput
	ToGetPolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) GetPolicyInternetServiceSrcNameArrayOutput
}

type GetPolicyInternetServiceSrcNameArray []GetPolicyInternetServiceSrcNameInput

func (GetPolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcNameArray) ToGetPolicyInternetServiceSrcNameArrayOutput() GetPolicyInternetServiceSrcNameArrayOutput {
	return i.ToGetPolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcNameArray) ToGetPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcNameArrayOutput)
}

type GetPolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcNameOutput) ToGetPolicyInternetServiceSrcNameOutput() GetPolicyInternetServiceSrcNameOutput {
	return o
}

func (o GetPolicyInternetServiceSrcNameOutput) ToGetPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcNameOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyInternetServiceSrcNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceSrcName) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcNameArrayOutput) ToGetPolicyInternetServiceSrcNameArrayOutput() GetPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcNameArrayOutput) ToGetPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceSrcName {
		return vs[0].([]GetPolicyInternetServiceSrcName)[vs[1].(int)]
	}).(GetPolicyInternetServiceSrcNameOutput)
}

type GetPolicyNetworkServiceDynamic struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyNetworkServiceDynamicInput is an input type that accepts GetPolicyNetworkServiceDynamicArgs and GetPolicyNetworkServiceDynamicOutput values.
// You can construct a concrete instance of `GetPolicyNetworkServiceDynamicInput` via:
//
//	GetPolicyNetworkServiceDynamicArgs{...}
type GetPolicyNetworkServiceDynamicInput interface {
	pulumi.Input

	ToGetPolicyNetworkServiceDynamicOutput() GetPolicyNetworkServiceDynamicOutput
	ToGetPolicyNetworkServiceDynamicOutputWithContext(context.Context) GetPolicyNetworkServiceDynamicOutput
}

type GetPolicyNetworkServiceDynamicArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyNetworkServiceDynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (i GetPolicyNetworkServiceDynamicArgs) ToGetPolicyNetworkServiceDynamicOutput() GetPolicyNetworkServiceDynamicOutput {
	return i.ToGetPolicyNetworkServiceDynamicOutputWithContext(context.Background())
}

func (i GetPolicyNetworkServiceDynamicArgs) ToGetPolicyNetworkServiceDynamicOutputWithContext(ctx context.Context) GetPolicyNetworkServiceDynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyNetworkServiceDynamicOutput)
}

// GetPolicyNetworkServiceDynamicArrayInput is an input type that accepts GetPolicyNetworkServiceDynamicArray and GetPolicyNetworkServiceDynamicArrayOutput values.
// You can construct a concrete instance of `GetPolicyNetworkServiceDynamicArrayInput` via:
//
//	GetPolicyNetworkServiceDynamicArray{ GetPolicyNetworkServiceDynamicArgs{...} }
type GetPolicyNetworkServiceDynamicArrayInput interface {
	pulumi.Input

	ToGetPolicyNetworkServiceDynamicArrayOutput() GetPolicyNetworkServiceDynamicArrayOutput
	ToGetPolicyNetworkServiceDynamicArrayOutputWithContext(context.Context) GetPolicyNetworkServiceDynamicArrayOutput
}

type GetPolicyNetworkServiceDynamicArray []GetPolicyNetworkServiceDynamicInput

func (GetPolicyNetworkServiceDynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (i GetPolicyNetworkServiceDynamicArray) ToGetPolicyNetworkServiceDynamicArrayOutput() GetPolicyNetworkServiceDynamicArrayOutput {
	return i.ToGetPolicyNetworkServiceDynamicArrayOutputWithContext(context.Background())
}

func (i GetPolicyNetworkServiceDynamicArray) ToGetPolicyNetworkServiceDynamicArrayOutputWithContext(ctx context.Context) GetPolicyNetworkServiceDynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyNetworkServiceDynamicArrayOutput)
}

type GetPolicyNetworkServiceDynamicOutput struct{ *pulumi.OutputState }

func (GetPolicyNetworkServiceDynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (o GetPolicyNetworkServiceDynamicOutput) ToGetPolicyNetworkServiceDynamicOutput() GetPolicyNetworkServiceDynamicOutput {
	return o
}

func (o GetPolicyNetworkServiceDynamicOutput) ToGetPolicyNetworkServiceDynamicOutputWithContext(ctx context.Context) GetPolicyNetworkServiceDynamicOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyNetworkServiceDynamicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyNetworkServiceDynamic) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyNetworkServiceDynamicArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyNetworkServiceDynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (o GetPolicyNetworkServiceDynamicArrayOutput) ToGetPolicyNetworkServiceDynamicArrayOutput() GetPolicyNetworkServiceDynamicArrayOutput {
	return o
}

func (o GetPolicyNetworkServiceDynamicArrayOutput) ToGetPolicyNetworkServiceDynamicArrayOutputWithContext(ctx context.Context) GetPolicyNetworkServiceDynamicArrayOutput {
	return o
}

func (o GetPolicyNetworkServiceDynamicArrayOutput) Index(i pulumi.IntInput) GetPolicyNetworkServiceDynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyNetworkServiceDynamic {
		return vs[0].([]GetPolicyNetworkServiceDynamic)[vs[1].(int)]
	}).(GetPolicyNetworkServiceDynamicOutput)
}

type GetPolicyNetworkServiceSrcDynamic struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyNetworkServiceSrcDynamicInput is an input type that accepts GetPolicyNetworkServiceSrcDynamicArgs and GetPolicyNetworkServiceSrcDynamicOutput values.
// You can construct a concrete instance of `GetPolicyNetworkServiceSrcDynamicInput` via:
//
//	GetPolicyNetworkServiceSrcDynamicArgs{...}
type GetPolicyNetworkServiceSrcDynamicInput interface {
	pulumi.Input

	ToGetPolicyNetworkServiceSrcDynamicOutput() GetPolicyNetworkServiceSrcDynamicOutput
	ToGetPolicyNetworkServiceSrcDynamicOutputWithContext(context.Context) GetPolicyNetworkServiceSrcDynamicOutput
}

type GetPolicyNetworkServiceSrcDynamicArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyNetworkServiceSrcDynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (i GetPolicyNetworkServiceSrcDynamicArgs) ToGetPolicyNetworkServiceSrcDynamicOutput() GetPolicyNetworkServiceSrcDynamicOutput {
	return i.ToGetPolicyNetworkServiceSrcDynamicOutputWithContext(context.Background())
}

func (i GetPolicyNetworkServiceSrcDynamicArgs) ToGetPolicyNetworkServiceSrcDynamicOutputWithContext(ctx context.Context) GetPolicyNetworkServiceSrcDynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyNetworkServiceSrcDynamicOutput)
}

// GetPolicyNetworkServiceSrcDynamicArrayInput is an input type that accepts GetPolicyNetworkServiceSrcDynamicArray and GetPolicyNetworkServiceSrcDynamicArrayOutput values.
// You can construct a concrete instance of `GetPolicyNetworkServiceSrcDynamicArrayInput` via:
//
//	GetPolicyNetworkServiceSrcDynamicArray{ GetPolicyNetworkServiceSrcDynamicArgs{...} }
type GetPolicyNetworkServiceSrcDynamicArrayInput interface {
	pulumi.Input

	ToGetPolicyNetworkServiceSrcDynamicArrayOutput() GetPolicyNetworkServiceSrcDynamicArrayOutput
	ToGetPolicyNetworkServiceSrcDynamicArrayOutputWithContext(context.Context) GetPolicyNetworkServiceSrcDynamicArrayOutput
}

type GetPolicyNetworkServiceSrcDynamicArray []GetPolicyNetworkServiceSrcDynamicInput

func (GetPolicyNetworkServiceSrcDynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (i GetPolicyNetworkServiceSrcDynamicArray) ToGetPolicyNetworkServiceSrcDynamicArrayOutput() GetPolicyNetworkServiceSrcDynamicArrayOutput {
	return i.ToGetPolicyNetworkServiceSrcDynamicArrayOutputWithContext(context.Background())
}

func (i GetPolicyNetworkServiceSrcDynamicArray) ToGetPolicyNetworkServiceSrcDynamicArrayOutputWithContext(ctx context.Context) GetPolicyNetworkServiceSrcDynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyNetworkServiceSrcDynamicArrayOutput)
}

type GetPolicyNetworkServiceSrcDynamicOutput struct{ *pulumi.OutputState }

func (GetPolicyNetworkServiceSrcDynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (o GetPolicyNetworkServiceSrcDynamicOutput) ToGetPolicyNetworkServiceSrcDynamicOutput() GetPolicyNetworkServiceSrcDynamicOutput {
	return o
}

func (o GetPolicyNetworkServiceSrcDynamicOutput) ToGetPolicyNetworkServiceSrcDynamicOutputWithContext(ctx context.Context) GetPolicyNetworkServiceSrcDynamicOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyNetworkServiceSrcDynamicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyNetworkServiceSrcDynamic) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyNetworkServiceSrcDynamicArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyNetworkServiceSrcDynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (o GetPolicyNetworkServiceSrcDynamicArrayOutput) ToGetPolicyNetworkServiceSrcDynamicArrayOutput() GetPolicyNetworkServiceSrcDynamicArrayOutput {
	return o
}

func (o GetPolicyNetworkServiceSrcDynamicArrayOutput) ToGetPolicyNetworkServiceSrcDynamicArrayOutputWithContext(ctx context.Context) GetPolicyNetworkServiceSrcDynamicArrayOutput {
	return o
}

func (o GetPolicyNetworkServiceSrcDynamicArrayOutput) Index(i pulumi.IntInput) GetPolicyNetworkServiceSrcDynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyNetworkServiceSrcDynamic {
		return vs[0].([]GetPolicyNetworkServiceSrcDynamic)[vs[1].(int)]
	}).(GetPolicyNetworkServiceSrcDynamicOutput)
}

type GetPolicyNtlmEnabledBrowser struct {
	// User agent string.
	UserAgentString string `pulumi:"userAgentString"`
}

// GetPolicyNtlmEnabledBrowserInput is an input type that accepts GetPolicyNtlmEnabledBrowserArgs and GetPolicyNtlmEnabledBrowserOutput values.
// You can construct a concrete instance of `GetPolicyNtlmEnabledBrowserInput` via:
//
//	GetPolicyNtlmEnabledBrowserArgs{...}
type GetPolicyNtlmEnabledBrowserInput interface {
	pulumi.Input

	ToGetPolicyNtlmEnabledBrowserOutput() GetPolicyNtlmEnabledBrowserOutput
	ToGetPolicyNtlmEnabledBrowserOutputWithContext(context.Context) GetPolicyNtlmEnabledBrowserOutput
}

type GetPolicyNtlmEnabledBrowserArgs struct {
	// User agent string.
	UserAgentString pulumi.StringInput `pulumi:"userAgentString"`
}

func (GetPolicyNtlmEnabledBrowserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (i GetPolicyNtlmEnabledBrowserArgs) ToGetPolicyNtlmEnabledBrowserOutput() GetPolicyNtlmEnabledBrowserOutput {
	return i.ToGetPolicyNtlmEnabledBrowserOutputWithContext(context.Background())
}

func (i GetPolicyNtlmEnabledBrowserArgs) ToGetPolicyNtlmEnabledBrowserOutputWithContext(ctx context.Context) GetPolicyNtlmEnabledBrowserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyNtlmEnabledBrowserOutput)
}

// GetPolicyNtlmEnabledBrowserArrayInput is an input type that accepts GetPolicyNtlmEnabledBrowserArray and GetPolicyNtlmEnabledBrowserArrayOutput values.
// You can construct a concrete instance of `GetPolicyNtlmEnabledBrowserArrayInput` via:
//
//	GetPolicyNtlmEnabledBrowserArray{ GetPolicyNtlmEnabledBrowserArgs{...} }
type GetPolicyNtlmEnabledBrowserArrayInput interface {
	pulumi.Input

	ToGetPolicyNtlmEnabledBrowserArrayOutput() GetPolicyNtlmEnabledBrowserArrayOutput
	ToGetPolicyNtlmEnabledBrowserArrayOutputWithContext(context.Context) GetPolicyNtlmEnabledBrowserArrayOutput
}

type GetPolicyNtlmEnabledBrowserArray []GetPolicyNtlmEnabledBrowserInput

func (GetPolicyNtlmEnabledBrowserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (i GetPolicyNtlmEnabledBrowserArray) ToGetPolicyNtlmEnabledBrowserArrayOutput() GetPolicyNtlmEnabledBrowserArrayOutput {
	return i.ToGetPolicyNtlmEnabledBrowserArrayOutputWithContext(context.Background())
}

func (i GetPolicyNtlmEnabledBrowserArray) ToGetPolicyNtlmEnabledBrowserArrayOutputWithContext(ctx context.Context) GetPolicyNtlmEnabledBrowserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyNtlmEnabledBrowserArrayOutput)
}

type GetPolicyNtlmEnabledBrowserOutput struct{ *pulumi.OutputState }

func (GetPolicyNtlmEnabledBrowserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (o GetPolicyNtlmEnabledBrowserOutput) ToGetPolicyNtlmEnabledBrowserOutput() GetPolicyNtlmEnabledBrowserOutput {
	return o
}

func (o GetPolicyNtlmEnabledBrowserOutput) ToGetPolicyNtlmEnabledBrowserOutputWithContext(ctx context.Context) GetPolicyNtlmEnabledBrowserOutput {
	return o
}

// User agent string.
func (o GetPolicyNtlmEnabledBrowserOutput) UserAgentString() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyNtlmEnabledBrowser) string { return v.UserAgentString }).(pulumi.StringOutput)
}

type GetPolicyNtlmEnabledBrowserArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyNtlmEnabledBrowserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (o GetPolicyNtlmEnabledBrowserArrayOutput) ToGetPolicyNtlmEnabledBrowserArrayOutput() GetPolicyNtlmEnabledBrowserArrayOutput {
	return o
}

func (o GetPolicyNtlmEnabledBrowserArrayOutput) ToGetPolicyNtlmEnabledBrowserArrayOutputWithContext(ctx context.Context) GetPolicyNtlmEnabledBrowserArrayOutput {
	return o
}

func (o GetPolicyNtlmEnabledBrowserArrayOutput) Index(i pulumi.IntInput) GetPolicyNtlmEnabledBrowserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyNtlmEnabledBrowser {
		return vs[0].([]GetPolicyNtlmEnabledBrowser)[vs[1].(int)]
	}).(GetPolicyNtlmEnabledBrowserOutput)
}

type GetPolicyPcpPoolname struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyPcpPoolnameInput is an input type that accepts GetPolicyPcpPoolnameArgs and GetPolicyPcpPoolnameOutput values.
// You can construct a concrete instance of `GetPolicyPcpPoolnameInput` via:
//
//	GetPolicyPcpPoolnameArgs{...}
type GetPolicyPcpPoolnameInput interface {
	pulumi.Input

	ToGetPolicyPcpPoolnameOutput() GetPolicyPcpPoolnameOutput
	ToGetPolicyPcpPoolnameOutputWithContext(context.Context) GetPolicyPcpPoolnameOutput
}

type GetPolicyPcpPoolnameArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyPcpPoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyPcpPoolname)(nil)).Elem()
}

func (i GetPolicyPcpPoolnameArgs) ToGetPolicyPcpPoolnameOutput() GetPolicyPcpPoolnameOutput {
	return i.ToGetPolicyPcpPoolnameOutputWithContext(context.Background())
}

func (i GetPolicyPcpPoolnameArgs) ToGetPolicyPcpPoolnameOutputWithContext(ctx context.Context) GetPolicyPcpPoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyPcpPoolnameOutput)
}

// GetPolicyPcpPoolnameArrayInput is an input type that accepts GetPolicyPcpPoolnameArray and GetPolicyPcpPoolnameArrayOutput values.
// You can construct a concrete instance of `GetPolicyPcpPoolnameArrayInput` via:
//
//	GetPolicyPcpPoolnameArray{ GetPolicyPcpPoolnameArgs{...} }
type GetPolicyPcpPoolnameArrayInput interface {
	pulumi.Input

	ToGetPolicyPcpPoolnameArrayOutput() GetPolicyPcpPoolnameArrayOutput
	ToGetPolicyPcpPoolnameArrayOutputWithContext(context.Context) GetPolicyPcpPoolnameArrayOutput
}

type GetPolicyPcpPoolnameArray []GetPolicyPcpPoolnameInput

func (GetPolicyPcpPoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyPcpPoolname)(nil)).Elem()
}

func (i GetPolicyPcpPoolnameArray) ToGetPolicyPcpPoolnameArrayOutput() GetPolicyPcpPoolnameArrayOutput {
	return i.ToGetPolicyPcpPoolnameArrayOutputWithContext(context.Background())
}

func (i GetPolicyPcpPoolnameArray) ToGetPolicyPcpPoolnameArrayOutputWithContext(ctx context.Context) GetPolicyPcpPoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyPcpPoolnameArrayOutput)
}

type GetPolicyPcpPoolnameOutput struct{ *pulumi.OutputState }

func (GetPolicyPcpPoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyPcpPoolname)(nil)).Elem()
}

func (o GetPolicyPcpPoolnameOutput) ToGetPolicyPcpPoolnameOutput() GetPolicyPcpPoolnameOutput {
	return o
}

func (o GetPolicyPcpPoolnameOutput) ToGetPolicyPcpPoolnameOutputWithContext(ctx context.Context) GetPolicyPcpPoolnameOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyPcpPoolnameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyPcpPoolname) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyPcpPoolnameArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyPcpPoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyPcpPoolname)(nil)).Elem()
}

func (o GetPolicyPcpPoolnameArrayOutput) ToGetPolicyPcpPoolnameArrayOutput() GetPolicyPcpPoolnameArrayOutput {
	return o
}

func (o GetPolicyPcpPoolnameArrayOutput) ToGetPolicyPcpPoolnameArrayOutputWithContext(ctx context.Context) GetPolicyPcpPoolnameArrayOutput {
	return o
}

func (o GetPolicyPcpPoolnameArrayOutput) Index(i pulumi.IntInput) GetPolicyPcpPoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyPcpPoolname {
		return vs[0].([]GetPolicyPcpPoolname)[vs[1].(int)]
	}).(GetPolicyPcpPoolnameOutput)
}

type GetPolicyPoolname6 struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyPoolname6Input is an input type that accepts GetPolicyPoolname6Args and GetPolicyPoolname6Output values.
// You can construct a concrete instance of `GetPolicyPoolname6Input` via:
//
//	GetPolicyPoolname6Args{...}
type GetPolicyPoolname6Input interface {
	pulumi.Input

	ToGetPolicyPoolname6Output() GetPolicyPoolname6Output
	ToGetPolicyPoolname6OutputWithContext(context.Context) GetPolicyPoolname6Output
}

type GetPolicyPoolname6Args struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyPoolname6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyPoolname6)(nil)).Elem()
}

func (i GetPolicyPoolname6Args) ToGetPolicyPoolname6Output() GetPolicyPoolname6Output {
	return i.ToGetPolicyPoolname6OutputWithContext(context.Background())
}

func (i GetPolicyPoolname6Args) ToGetPolicyPoolname6OutputWithContext(ctx context.Context) GetPolicyPoolname6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyPoolname6Output)
}

// GetPolicyPoolname6ArrayInput is an input type that accepts GetPolicyPoolname6Array and GetPolicyPoolname6ArrayOutput values.
// You can construct a concrete instance of `GetPolicyPoolname6ArrayInput` via:
//
//	GetPolicyPoolname6Array{ GetPolicyPoolname6Args{...} }
type GetPolicyPoolname6ArrayInput interface {
	pulumi.Input

	ToGetPolicyPoolname6ArrayOutput() GetPolicyPoolname6ArrayOutput
	ToGetPolicyPoolname6ArrayOutputWithContext(context.Context) GetPolicyPoolname6ArrayOutput
}

type GetPolicyPoolname6Array []GetPolicyPoolname6Input

func (GetPolicyPoolname6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyPoolname6)(nil)).Elem()
}

func (i GetPolicyPoolname6Array) ToGetPolicyPoolname6ArrayOutput() GetPolicyPoolname6ArrayOutput {
	return i.ToGetPolicyPoolname6ArrayOutputWithContext(context.Background())
}

func (i GetPolicyPoolname6Array) ToGetPolicyPoolname6ArrayOutputWithContext(ctx context.Context) GetPolicyPoolname6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyPoolname6ArrayOutput)
}

type GetPolicyPoolname6Output struct{ *pulumi.OutputState }

func (GetPolicyPoolname6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyPoolname6)(nil)).Elem()
}

func (o GetPolicyPoolname6Output) ToGetPolicyPoolname6Output() GetPolicyPoolname6Output {
	return o
}

func (o GetPolicyPoolname6Output) ToGetPolicyPoolname6OutputWithContext(ctx context.Context) GetPolicyPoolname6Output {
	return o
}

// Mirror Interface name.
func (o GetPolicyPoolname6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyPoolname6) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyPoolname6ArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyPoolname6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyPoolname6)(nil)).Elem()
}

func (o GetPolicyPoolname6ArrayOutput) ToGetPolicyPoolname6ArrayOutput() GetPolicyPoolname6ArrayOutput {
	return o
}

func (o GetPolicyPoolname6ArrayOutput) ToGetPolicyPoolname6ArrayOutputWithContext(ctx context.Context) GetPolicyPoolname6ArrayOutput {
	return o
}

func (o GetPolicyPoolname6ArrayOutput) Index(i pulumi.IntInput) GetPolicyPoolname6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyPoolname6 {
		return vs[0].([]GetPolicyPoolname6)[vs[1].(int)]
	}).(GetPolicyPoolname6Output)
}

type GetPolicyPoolname struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyPoolnameInput is an input type that accepts GetPolicyPoolnameArgs and GetPolicyPoolnameOutput values.
// You can construct a concrete instance of `GetPolicyPoolnameInput` via:
//
//	GetPolicyPoolnameArgs{...}
type GetPolicyPoolnameInput interface {
	pulumi.Input

	ToGetPolicyPoolnameOutput() GetPolicyPoolnameOutput
	ToGetPolicyPoolnameOutputWithContext(context.Context) GetPolicyPoolnameOutput
}

type GetPolicyPoolnameArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyPoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyPoolname)(nil)).Elem()
}

func (i GetPolicyPoolnameArgs) ToGetPolicyPoolnameOutput() GetPolicyPoolnameOutput {
	return i.ToGetPolicyPoolnameOutputWithContext(context.Background())
}

func (i GetPolicyPoolnameArgs) ToGetPolicyPoolnameOutputWithContext(ctx context.Context) GetPolicyPoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyPoolnameOutput)
}

// GetPolicyPoolnameArrayInput is an input type that accepts GetPolicyPoolnameArray and GetPolicyPoolnameArrayOutput values.
// You can construct a concrete instance of `GetPolicyPoolnameArrayInput` via:
//
//	GetPolicyPoolnameArray{ GetPolicyPoolnameArgs{...} }
type GetPolicyPoolnameArrayInput interface {
	pulumi.Input

	ToGetPolicyPoolnameArrayOutput() GetPolicyPoolnameArrayOutput
	ToGetPolicyPoolnameArrayOutputWithContext(context.Context) GetPolicyPoolnameArrayOutput
}

type GetPolicyPoolnameArray []GetPolicyPoolnameInput

func (GetPolicyPoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyPoolname)(nil)).Elem()
}

func (i GetPolicyPoolnameArray) ToGetPolicyPoolnameArrayOutput() GetPolicyPoolnameArrayOutput {
	return i.ToGetPolicyPoolnameArrayOutputWithContext(context.Background())
}

func (i GetPolicyPoolnameArray) ToGetPolicyPoolnameArrayOutputWithContext(ctx context.Context) GetPolicyPoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyPoolnameArrayOutput)
}

type GetPolicyPoolnameOutput struct{ *pulumi.OutputState }

func (GetPolicyPoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyPoolname)(nil)).Elem()
}

func (o GetPolicyPoolnameOutput) ToGetPolicyPoolnameOutput() GetPolicyPoolnameOutput {
	return o
}

func (o GetPolicyPoolnameOutput) ToGetPolicyPoolnameOutputWithContext(ctx context.Context) GetPolicyPoolnameOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyPoolnameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyPoolname) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyPoolnameArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyPoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyPoolname)(nil)).Elem()
}

func (o GetPolicyPoolnameArrayOutput) ToGetPolicyPoolnameArrayOutput() GetPolicyPoolnameArrayOutput {
	return o
}

func (o GetPolicyPoolnameArrayOutput) ToGetPolicyPoolnameArrayOutputWithContext(ctx context.Context) GetPolicyPoolnameArrayOutput {
	return o
}

func (o GetPolicyPoolnameArrayOutput) Index(i pulumi.IntInput) GetPolicyPoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyPoolname {
		return vs[0].([]GetPolicyPoolname)[vs[1].(int)]
	}).(GetPolicyPoolnameOutput)
}

type GetPolicyRtpAddr struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyRtpAddrInput is an input type that accepts GetPolicyRtpAddrArgs and GetPolicyRtpAddrOutput values.
// You can construct a concrete instance of `GetPolicyRtpAddrInput` via:
//
//	GetPolicyRtpAddrArgs{...}
type GetPolicyRtpAddrInput interface {
	pulumi.Input

	ToGetPolicyRtpAddrOutput() GetPolicyRtpAddrOutput
	ToGetPolicyRtpAddrOutputWithContext(context.Context) GetPolicyRtpAddrOutput
}

type GetPolicyRtpAddrArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyRtpAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyRtpAddr)(nil)).Elem()
}

func (i GetPolicyRtpAddrArgs) ToGetPolicyRtpAddrOutput() GetPolicyRtpAddrOutput {
	return i.ToGetPolicyRtpAddrOutputWithContext(context.Background())
}

func (i GetPolicyRtpAddrArgs) ToGetPolicyRtpAddrOutputWithContext(ctx context.Context) GetPolicyRtpAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyRtpAddrOutput)
}

// GetPolicyRtpAddrArrayInput is an input type that accepts GetPolicyRtpAddrArray and GetPolicyRtpAddrArrayOutput values.
// You can construct a concrete instance of `GetPolicyRtpAddrArrayInput` via:
//
//	GetPolicyRtpAddrArray{ GetPolicyRtpAddrArgs{...} }
type GetPolicyRtpAddrArrayInput interface {
	pulumi.Input

	ToGetPolicyRtpAddrArrayOutput() GetPolicyRtpAddrArrayOutput
	ToGetPolicyRtpAddrArrayOutputWithContext(context.Context) GetPolicyRtpAddrArrayOutput
}

type GetPolicyRtpAddrArray []GetPolicyRtpAddrInput

func (GetPolicyRtpAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyRtpAddr)(nil)).Elem()
}

func (i GetPolicyRtpAddrArray) ToGetPolicyRtpAddrArrayOutput() GetPolicyRtpAddrArrayOutput {
	return i.ToGetPolicyRtpAddrArrayOutputWithContext(context.Background())
}

func (i GetPolicyRtpAddrArray) ToGetPolicyRtpAddrArrayOutputWithContext(ctx context.Context) GetPolicyRtpAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyRtpAddrArrayOutput)
}

type GetPolicyRtpAddrOutput struct{ *pulumi.OutputState }

func (GetPolicyRtpAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyRtpAddr)(nil)).Elem()
}

func (o GetPolicyRtpAddrOutput) ToGetPolicyRtpAddrOutput() GetPolicyRtpAddrOutput {
	return o
}

func (o GetPolicyRtpAddrOutput) ToGetPolicyRtpAddrOutputWithContext(ctx context.Context) GetPolicyRtpAddrOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyRtpAddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyRtpAddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyRtpAddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyRtpAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyRtpAddr)(nil)).Elem()
}

func (o GetPolicyRtpAddrArrayOutput) ToGetPolicyRtpAddrArrayOutput() GetPolicyRtpAddrArrayOutput {
	return o
}

func (o GetPolicyRtpAddrArrayOutput) ToGetPolicyRtpAddrArrayOutputWithContext(ctx context.Context) GetPolicyRtpAddrArrayOutput {
	return o
}

func (o GetPolicyRtpAddrArrayOutput) Index(i pulumi.IntInput) GetPolicyRtpAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyRtpAddr {
		return vs[0].([]GetPolicyRtpAddr)[vs[1].(int)]
	}).(GetPolicyRtpAddrOutput)
}

type GetPolicyService struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyServiceInput is an input type that accepts GetPolicyServiceArgs and GetPolicyServiceOutput values.
// You can construct a concrete instance of `GetPolicyServiceInput` via:
//
//	GetPolicyServiceArgs{...}
type GetPolicyServiceInput interface {
	pulumi.Input

	ToGetPolicyServiceOutput() GetPolicyServiceOutput
	ToGetPolicyServiceOutputWithContext(context.Context) GetPolicyServiceOutput
}

type GetPolicyServiceArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyService)(nil)).Elem()
}

func (i GetPolicyServiceArgs) ToGetPolicyServiceOutput() GetPolicyServiceOutput {
	return i.ToGetPolicyServiceOutputWithContext(context.Background())
}

func (i GetPolicyServiceArgs) ToGetPolicyServiceOutputWithContext(ctx context.Context) GetPolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyServiceOutput)
}

// GetPolicyServiceArrayInput is an input type that accepts GetPolicyServiceArray and GetPolicyServiceArrayOutput values.
// You can construct a concrete instance of `GetPolicyServiceArrayInput` via:
//
//	GetPolicyServiceArray{ GetPolicyServiceArgs{...} }
type GetPolicyServiceArrayInput interface {
	pulumi.Input

	ToGetPolicyServiceArrayOutput() GetPolicyServiceArrayOutput
	ToGetPolicyServiceArrayOutputWithContext(context.Context) GetPolicyServiceArrayOutput
}

type GetPolicyServiceArray []GetPolicyServiceInput

func (GetPolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyService)(nil)).Elem()
}

func (i GetPolicyServiceArray) ToGetPolicyServiceArrayOutput() GetPolicyServiceArrayOutput {
	return i.ToGetPolicyServiceArrayOutputWithContext(context.Background())
}

func (i GetPolicyServiceArray) ToGetPolicyServiceArrayOutputWithContext(ctx context.Context) GetPolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyServiceArrayOutput)
}

type GetPolicyServiceOutput struct{ *pulumi.OutputState }

func (GetPolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyService)(nil)).Elem()
}

func (o GetPolicyServiceOutput) ToGetPolicyServiceOutput() GetPolicyServiceOutput {
	return o
}

func (o GetPolicyServiceOutput) ToGetPolicyServiceOutputWithContext(ctx context.Context) GetPolicyServiceOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyService) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyService)(nil)).Elem()
}

func (o GetPolicyServiceArrayOutput) ToGetPolicyServiceArrayOutput() GetPolicyServiceArrayOutput {
	return o
}

func (o GetPolicyServiceArrayOutput) ToGetPolicyServiceArrayOutputWithContext(ctx context.Context) GetPolicyServiceArrayOutput {
	return o
}

func (o GetPolicyServiceArrayOutput) Index(i pulumi.IntInput) GetPolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyService {
		return vs[0].([]GetPolicyService)[vs[1].(int)]
	}).(GetPolicyServiceOutput)
}

type GetPolicySgt struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetPolicySgtInput is an input type that accepts GetPolicySgtArgs and GetPolicySgtOutput values.
// You can construct a concrete instance of `GetPolicySgtInput` via:
//
//	GetPolicySgtArgs{...}
type GetPolicySgtInput interface {
	pulumi.Input

	ToGetPolicySgtOutput() GetPolicySgtOutput
	ToGetPolicySgtOutputWithContext(context.Context) GetPolicySgtOutput
}

type GetPolicySgtArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicySgtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySgt)(nil)).Elem()
}

func (i GetPolicySgtArgs) ToGetPolicySgtOutput() GetPolicySgtOutput {
	return i.ToGetPolicySgtOutputWithContext(context.Background())
}

func (i GetPolicySgtArgs) ToGetPolicySgtOutputWithContext(ctx context.Context) GetPolicySgtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySgtOutput)
}

// GetPolicySgtArrayInput is an input type that accepts GetPolicySgtArray and GetPolicySgtArrayOutput values.
// You can construct a concrete instance of `GetPolicySgtArrayInput` via:
//
//	GetPolicySgtArray{ GetPolicySgtArgs{...} }
type GetPolicySgtArrayInput interface {
	pulumi.Input

	ToGetPolicySgtArrayOutput() GetPolicySgtArrayOutput
	ToGetPolicySgtArrayOutputWithContext(context.Context) GetPolicySgtArrayOutput
}

type GetPolicySgtArray []GetPolicySgtInput

func (GetPolicySgtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySgt)(nil)).Elem()
}

func (i GetPolicySgtArray) ToGetPolicySgtArrayOutput() GetPolicySgtArrayOutput {
	return i.ToGetPolicySgtArrayOutputWithContext(context.Background())
}

func (i GetPolicySgtArray) ToGetPolicySgtArrayOutputWithContext(ctx context.Context) GetPolicySgtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySgtArrayOutput)
}

type GetPolicySgtOutput struct{ *pulumi.OutputState }

func (GetPolicySgtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySgt)(nil)).Elem()
}

func (o GetPolicySgtOutput) ToGetPolicySgtOutput() GetPolicySgtOutput {
	return o
}

func (o GetPolicySgtOutput) ToGetPolicySgtOutputWithContext(ctx context.Context) GetPolicySgtOutput {
	return o
}

// Security group tag.
func (o GetPolicySgtOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicySgt) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicySgtArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySgtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySgt)(nil)).Elem()
}

func (o GetPolicySgtArrayOutput) ToGetPolicySgtArrayOutput() GetPolicySgtArrayOutput {
	return o
}

func (o GetPolicySgtArrayOutput) ToGetPolicySgtArrayOutputWithContext(ctx context.Context) GetPolicySgtArrayOutput {
	return o
}

func (o GetPolicySgtArrayOutput) Index(i pulumi.IntInput) GetPolicySgtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySgt {
		return vs[0].([]GetPolicySgt)[vs[1].(int)]
	}).(GetPolicySgtOutput)
}

type GetPolicySrcVendorMac struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetPolicySrcVendorMacInput is an input type that accepts GetPolicySrcVendorMacArgs and GetPolicySrcVendorMacOutput values.
// You can construct a concrete instance of `GetPolicySrcVendorMacInput` via:
//
//	GetPolicySrcVendorMacArgs{...}
type GetPolicySrcVendorMacInput interface {
	pulumi.Input

	ToGetPolicySrcVendorMacOutput() GetPolicySrcVendorMacOutput
	ToGetPolicySrcVendorMacOutputWithContext(context.Context) GetPolicySrcVendorMacOutput
}

type GetPolicySrcVendorMacArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicySrcVendorMacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcVendorMac)(nil)).Elem()
}

func (i GetPolicySrcVendorMacArgs) ToGetPolicySrcVendorMacOutput() GetPolicySrcVendorMacOutput {
	return i.ToGetPolicySrcVendorMacOutputWithContext(context.Background())
}

func (i GetPolicySrcVendorMacArgs) ToGetPolicySrcVendorMacOutputWithContext(ctx context.Context) GetPolicySrcVendorMacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcVendorMacOutput)
}

// GetPolicySrcVendorMacArrayInput is an input type that accepts GetPolicySrcVendorMacArray and GetPolicySrcVendorMacArrayOutput values.
// You can construct a concrete instance of `GetPolicySrcVendorMacArrayInput` via:
//
//	GetPolicySrcVendorMacArray{ GetPolicySrcVendorMacArgs{...} }
type GetPolicySrcVendorMacArrayInput interface {
	pulumi.Input

	ToGetPolicySrcVendorMacArrayOutput() GetPolicySrcVendorMacArrayOutput
	ToGetPolicySrcVendorMacArrayOutputWithContext(context.Context) GetPolicySrcVendorMacArrayOutput
}

type GetPolicySrcVendorMacArray []GetPolicySrcVendorMacInput

func (GetPolicySrcVendorMacArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcVendorMac)(nil)).Elem()
}

func (i GetPolicySrcVendorMacArray) ToGetPolicySrcVendorMacArrayOutput() GetPolicySrcVendorMacArrayOutput {
	return i.ToGetPolicySrcVendorMacArrayOutputWithContext(context.Background())
}

func (i GetPolicySrcVendorMacArray) ToGetPolicySrcVendorMacArrayOutputWithContext(ctx context.Context) GetPolicySrcVendorMacArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcVendorMacArrayOutput)
}

type GetPolicySrcVendorMacOutput struct{ *pulumi.OutputState }

func (GetPolicySrcVendorMacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcVendorMac)(nil)).Elem()
}

func (o GetPolicySrcVendorMacOutput) ToGetPolicySrcVendorMacOutput() GetPolicySrcVendorMacOutput {
	return o
}

func (o GetPolicySrcVendorMacOutput) ToGetPolicySrcVendorMacOutputWithContext(ctx context.Context) GetPolicySrcVendorMacOutput {
	return o
}

// Security group tag.
func (o GetPolicySrcVendorMacOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicySrcVendorMac) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicySrcVendorMacArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySrcVendorMacArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcVendorMac)(nil)).Elem()
}

func (o GetPolicySrcVendorMacArrayOutput) ToGetPolicySrcVendorMacArrayOutput() GetPolicySrcVendorMacArrayOutput {
	return o
}

func (o GetPolicySrcVendorMacArrayOutput) ToGetPolicySrcVendorMacArrayOutputWithContext(ctx context.Context) GetPolicySrcVendorMacArrayOutput {
	return o
}

func (o GetPolicySrcVendorMacArrayOutput) Index(i pulumi.IntInput) GetPolicySrcVendorMacOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySrcVendorMac {
		return vs[0].([]GetPolicySrcVendorMac)[vs[1].(int)]
	}).(GetPolicySrcVendorMacOutput)
}

type GetPolicySrcaddr6 struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicySrcaddr6Input is an input type that accepts GetPolicySrcaddr6Args and GetPolicySrcaddr6Output values.
// You can construct a concrete instance of `GetPolicySrcaddr6Input` via:
//
//	GetPolicySrcaddr6Args{...}
type GetPolicySrcaddr6Input interface {
	pulumi.Input

	ToGetPolicySrcaddr6Output() GetPolicySrcaddr6Output
	ToGetPolicySrcaddr6OutputWithContext(context.Context) GetPolicySrcaddr6Output
}

type GetPolicySrcaddr6Args struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcaddr6)(nil)).Elem()
}

func (i GetPolicySrcaddr6Args) ToGetPolicySrcaddr6Output() GetPolicySrcaddr6Output {
	return i.ToGetPolicySrcaddr6OutputWithContext(context.Background())
}

func (i GetPolicySrcaddr6Args) ToGetPolicySrcaddr6OutputWithContext(ctx context.Context) GetPolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcaddr6Output)
}

// GetPolicySrcaddr6ArrayInput is an input type that accepts GetPolicySrcaddr6Array and GetPolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `GetPolicySrcaddr6ArrayInput` via:
//
//	GetPolicySrcaddr6Array{ GetPolicySrcaddr6Args{...} }
type GetPolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToGetPolicySrcaddr6ArrayOutput() GetPolicySrcaddr6ArrayOutput
	ToGetPolicySrcaddr6ArrayOutputWithContext(context.Context) GetPolicySrcaddr6ArrayOutput
}

type GetPolicySrcaddr6Array []GetPolicySrcaddr6Input

func (GetPolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcaddr6)(nil)).Elem()
}

func (i GetPolicySrcaddr6Array) ToGetPolicySrcaddr6ArrayOutput() GetPolicySrcaddr6ArrayOutput {
	return i.ToGetPolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i GetPolicySrcaddr6Array) ToGetPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetPolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcaddr6ArrayOutput)
}

type GetPolicySrcaddr6Output struct{ *pulumi.OutputState }

func (GetPolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcaddr6)(nil)).Elem()
}

func (o GetPolicySrcaddr6Output) ToGetPolicySrcaddr6Output() GetPolicySrcaddr6Output {
	return o
}

func (o GetPolicySrcaddr6Output) ToGetPolicySrcaddr6OutputWithContext(ctx context.Context) GetPolicySrcaddr6Output {
	return o
}

// Mirror Interface name.
func (o GetPolicySrcaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySrcaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcaddr6)(nil)).Elem()
}

func (o GetPolicySrcaddr6ArrayOutput) ToGetPolicySrcaddr6ArrayOutput() GetPolicySrcaddr6ArrayOutput {
	return o
}

func (o GetPolicySrcaddr6ArrayOutput) ToGetPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetPolicySrcaddr6ArrayOutput {
	return o
}

func (o GetPolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) GetPolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySrcaddr6 {
		return vs[0].([]GetPolicySrcaddr6)[vs[1].(int)]
	}).(GetPolicySrcaddr6Output)
}

type GetPolicySrcaddr struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicySrcaddrInput is an input type that accepts GetPolicySrcaddrArgs and GetPolicySrcaddrOutput values.
// You can construct a concrete instance of `GetPolicySrcaddrInput` via:
//
//	GetPolicySrcaddrArgs{...}
type GetPolicySrcaddrInput interface {
	pulumi.Input

	ToGetPolicySrcaddrOutput() GetPolicySrcaddrOutput
	ToGetPolicySrcaddrOutputWithContext(context.Context) GetPolicySrcaddrOutput
}

type GetPolicySrcaddrArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcaddr)(nil)).Elem()
}

func (i GetPolicySrcaddrArgs) ToGetPolicySrcaddrOutput() GetPolicySrcaddrOutput {
	return i.ToGetPolicySrcaddrOutputWithContext(context.Background())
}

func (i GetPolicySrcaddrArgs) ToGetPolicySrcaddrOutputWithContext(ctx context.Context) GetPolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcaddrOutput)
}

// GetPolicySrcaddrArrayInput is an input type that accepts GetPolicySrcaddrArray and GetPolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `GetPolicySrcaddrArrayInput` via:
//
//	GetPolicySrcaddrArray{ GetPolicySrcaddrArgs{...} }
type GetPolicySrcaddrArrayInput interface {
	pulumi.Input

	ToGetPolicySrcaddrArrayOutput() GetPolicySrcaddrArrayOutput
	ToGetPolicySrcaddrArrayOutputWithContext(context.Context) GetPolicySrcaddrArrayOutput
}

type GetPolicySrcaddrArray []GetPolicySrcaddrInput

func (GetPolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcaddr)(nil)).Elem()
}

func (i GetPolicySrcaddrArray) ToGetPolicySrcaddrArrayOutput() GetPolicySrcaddrArrayOutput {
	return i.ToGetPolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i GetPolicySrcaddrArray) ToGetPolicySrcaddrArrayOutputWithContext(ctx context.Context) GetPolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcaddrArrayOutput)
}

type GetPolicySrcaddrOutput struct{ *pulumi.OutputState }

func (GetPolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcaddr)(nil)).Elem()
}

func (o GetPolicySrcaddrOutput) ToGetPolicySrcaddrOutput() GetPolicySrcaddrOutput {
	return o
}

func (o GetPolicySrcaddrOutput) ToGetPolicySrcaddrOutputWithContext(ctx context.Context) GetPolicySrcaddrOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicySrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySrcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcaddr)(nil)).Elem()
}

func (o GetPolicySrcaddrArrayOutput) ToGetPolicySrcaddrArrayOutput() GetPolicySrcaddrArrayOutput {
	return o
}

func (o GetPolicySrcaddrArrayOutput) ToGetPolicySrcaddrArrayOutputWithContext(ctx context.Context) GetPolicySrcaddrArrayOutput {
	return o
}

func (o GetPolicySrcaddrArrayOutput) Index(i pulumi.IntInput) GetPolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySrcaddr {
		return vs[0].([]GetPolicySrcaddr)[vs[1].(int)]
	}).(GetPolicySrcaddrOutput)
}

type GetPolicySrcintf struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicySrcintfInput is an input type that accepts GetPolicySrcintfArgs and GetPolicySrcintfOutput values.
// You can construct a concrete instance of `GetPolicySrcintfInput` via:
//
//	GetPolicySrcintfArgs{...}
type GetPolicySrcintfInput interface {
	pulumi.Input

	ToGetPolicySrcintfOutput() GetPolicySrcintfOutput
	ToGetPolicySrcintfOutputWithContext(context.Context) GetPolicySrcintfOutput
}

type GetPolicySrcintfArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcintf)(nil)).Elem()
}

func (i GetPolicySrcintfArgs) ToGetPolicySrcintfOutput() GetPolicySrcintfOutput {
	return i.ToGetPolicySrcintfOutputWithContext(context.Background())
}

func (i GetPolicySrcintfArgs) ToGetPolicySrcintfOutputWithContext(ctx context.Context) GetPolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcintfOutput)
}

// GetPolicySrcintfArrayInput is an input type that accepts GetPolicySrcintfArray and GetPolicySrcintfArrayOutput values.
// You can construct a concrete instance of `GetPolicySrcintfArrayInput` via:
//
//	GetPolicySrcintfArray{ GetPolicySrcintfArgs{...} }
type GetPolicySrcintfArrayInput interface {
	pulumi.Input

	ToGetPolicySrcintfArrayOutput() GetPolicySrcintfArrayOutput
	ToGetPolicySrcintfArrayOutputWithContext(context.Context) GetPolicySrcintfArrayOutput
}

type GetPolicySrcintfArray []GetPolicySrcintfInput

func (GetPolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcintf)(nil)).Elem()
}

func (i GetPolicySrcintfArray) ToGetPolicySrcintfArrayOutput() GetPolicySrcintfArrayOutput {
	return i.ToGetPolicySrcintfArrayOutputWithContext(context.Background())
}

func (i GetPolicySrcintfArray) ToGetPolicySrcintfArrayOutputWithContext(ctx context.Context) GetPolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcintfArrayOutput)
}

type GetPolicySrcintfOutput struct{ *pulumi.OutputState }

func (GetPolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcintf)(nil)).Elem()
}

func (o GetPolicySrcintfOutput) ToGetPolicySrcintfOutput() GetPolicySrcintfOutput {
	return o
}

func (o GetPolicySrcintfOutput) ToGetPolicySrcintfOutputWithContext(ctx context.Context) GetPolicySrcintfOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicySrcintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySrcintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcintf)(nil)).Elem()
}

func (o GetPolicySrcintfArrayOutput) ToGetPolicySrcintfArrayOutput() GetPolicySrcintfArrayOutput {
	return o
}

func (o GetPolicySrcintfArrayOutput) ToGetPolicySrcintfArrayOutputWithContext(ctx context.Context) GetPolicySrcintfArrayOutput {
	return o
}

func (o GetPolicySrcintfArrayOutput) Index(i pulumi.IntInput) GetPolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySrcintf {
		return vs[0].([]GetPolicySrcintf)[vs[1].(int)]
	}).(GetPolicySrcintfOutput)
}

type GetPolicySslMirrorIntf struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicySslMirrorIntfInput is an input type that accepts GetPolicySslMirrorIntfArgs and GetPolicySslMirrorIntfOutput values.
// You can construct a concrete instance of `GetPolicySslMirrorIntfInput` via:
//
//	GetPolicySslMirrorIntfArgs{...}
type GetPolicySslMirrorIntfInput interface {
	pulumi.Input

	ToGetPolicySslMirrorIntfOutput() GetPolicySslMirrorIntfOutput
	ToGetPolicySslMirrorIntfOutputWithContext(context.Context) GetPolicySslMirrorIntfOutput
}

type GetPolicySslMirrorIntfArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicySslMirrorIntfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySslMirrorIntf)(nil)).Elem()
}

func (i GetPolicySslMirrorIntfArgs) ToGetPolicySslMirrorIntfOutput() GetPolicySslMirrorIntfOutput {
	return i.ToGetPolicySslMirrorIntfOutputWithContext(context.Background())
}

func (i GetPolicySslMirrorIntfArgs) ToGetPolicySslMirrorIntfOutputWithContext(ctx context.Context) GetPolicySslMirrorIntfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySslMirrorIntfOutput)
}

// GetPolicySslMirrorIntfArrayInput is an input type that accepts GetPolicySslMirrorIntfArray and GetPolicySslMirrorIntfArrayOutput values.
// You can construct a concrete instance of `GetPolicySslMirrorIntfArrayInput` via:
//
//	GetPolicySslMirrorIntfArray{ GetPolicySslMirrorIntfArgs{...} }
type GetPolicySslMirrorIntfArrayInput interface {
	pulumi.Input

	ToGetPolicySslMirrorIntfArrayOutput() GetPolicySslMirrorIntfArrayOutput
	ToGetPolicySslMirrorIntfArrayOutputWithContext(context.Context) GetPolicySslMirrorIntfArrayOutput
}

type GetPolicySslMirrorIntfArray []GetPolicySslMirrorIntfInput

func (GetPolicySslMirrorIntfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySslMirrorIntf)(nil)).Elem()
}

func (i GetPolicySslMirrorIntfArray) ToGetPolicySslMirrorIntfArrayOutput() GetPolicySslMirrorIntfArrayOutput {
	return i.ToGetPolicySslMirrorIntfArrayOutputWithContext(context.Background())
}

func (i GetPolicySslMirrorIntfArray) ToGetPolicySslMirrorIntfArrayOutputWithContext(ctx context.Context) GetPolicySslMirrorIntfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySslMirrorIntfArrayOutput)
}

type GetPolicySslMirrorIntfOutput struct{ *pulumi.OutputState }

func (GetPolicySslMirrorIntfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySslMirrorIntf)(nil)).Elem()
}

func (o GetPolicySslMirrorIntfOutput) ToGetPolicySslMirrorIntfOutput() GetPolicySslMirrorIntfOutput {
	return o
}

func (o GetPolicySslMirrorIntfOutput) ToGetPolicySslMirrorIntfOutputWithContext(ctx context.Context) GetPolicySslMirrorIntfOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicySslMirrorIntfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySslMirrorIntf) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicySslMirrorIntfArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySslMirrorIntfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySslMirrorIntf)(nil)).Elem()
}

func (o GetPolicySslMirrorIntfArrayOutput) ToGetPolicySslMirrorIntfArrayOutput() GetPolicySslMirrorIntfArrayOutput {
	return o
}

func (o GetPolicySslMirrorIntfArrayOutput) ToGetPolicySslMirrorIntfArrayOutputWithContext(ctx context.Context) GetPolicySslMirrorIntfArrayOutput {
	return o
}

func (o GetPolicySslMirrorIntfArrayOutput) Index(i pulumi.IntInput) GetPolicySslMirrorIntfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySslMirrorIntf {
		return vs[0].([]GetPolicySslMirrorIntf)[vs[1].(int)]
	}).(GetPolicySslMirrorIntfOutput)
}

type GetPolicyUrlCategory struct {
	// Security group tag.
	Id int `pulumi:"id"`
}

// GetPolicyUrlCategoryInput is an input type that accepts GetPolicyUrlCategoryArgs and GetPolicyUrlCategoryOutput values.
// You can construct a concrete instance of `GetPolicyUrlCategoryInput` via:
//
//	GetPolicyUrlCategoryArgs{...}
type GetPolicyUrlCategoryInput interface {
	pulumi.Input

	ToGetPolicyUrlCategoryOutput() GetPolicyUrlCategoryOutput
	ToGetPolicyUrlCategoryOutputWithContext(context.Context) GetPolicyUrlCategoryOutput
}

type GetPolicyUrlCategoryArgs struct {
	// Security group tag.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyUrlCategory)(nil)).Elem()
}

func (i GetPolicyUrlCategoryArgs) ToGetPolicyUrlCategoryOutput() GetPolicyUrlCategoryOutput {
	return i.ToGetPolicyUrlCategoryOutputWithContext(context.Background())
}

func (i GetPolicyUrlCategoryArgs) ToGetPolicyUrlCategoryOutputWithContext(ctx context.Context) GetPolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyUrlCategoryOutput)
}

// GetPolicyUrlCategoryArrayInput is an input type that accepts GetPolicyUrlCategoryArray and GetPolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `GetPolicyUrlCategoryArrayInput` via:
//
//	GetPolicyUrlCategoryArray{ GetPolicyUrlCategoryArgs{...} }
type GetPolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToGetPolicyUrlCategoryArrayOutput() GetPolicyUrlCategoryArrayOutput
	ToGetPolicyUrlCategoryArrayOutputWithContext(context.Context) GetPolicyUrlCategoryArrayOutput
}

type GetPolicyUrlCategoryArray []GetPolicyUrlCategoryInput

func (GetPolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyUrlCategory)(nil)).Elem()
}

func (i GetPolicyUrlCategoryArray) ToGetPolicyUrlCategoryArrayOutput() GetPolicyUrlCategoryArrayOutput {
	return i.ToGetPolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i GetPolicyUrlCategoryArray) ToGetPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) GetPolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyUrlCategoryArrayOutput)
}

type GetPolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (GetPolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyUrlCategory)(nil)).Elem()
}

func (o GetPolicyUrlCategoryOutput) ToGetPolicyUrlCategoryOutput() GetPolicyUrlCategoryOutput {
	return o
}

func (o GetPolicyUrlCategoryOutput) ToGetPolicyUrlCategoryOutputWithContext(ctx context.Context) GetPolicyUrlCategoryOutput {
	return o
}

// Security group tag.
func (o GetPolicyUrlCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyUrlCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyUrlCategory)(nil)).Elem()
}

func (o GetPolicyUrlCategoryArrayOutput) ToGetPolicyUrlCategoryArrayOutput() GetPolicyUrlCategoryArrayOutput {
	return o
}

func (o GetPolicyUrlCategoryArrayOutput) ToGetPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) GetPolicyUrlCategoryArrayOutput {
	return o
}

func (o GetPolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) GetPolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyUrlCategory {
		return vs[0].([]GetPolicyUrlCategory)[vs[1].(int)]
	}).(GetPolicyUrlCategoryOutput)
}

type GetPolicyUser struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyUserInput is an input type that accepts GetPolicyUserArgs and GetPolicyUserOutput values.
// You can construct a concrete instance of `GetPolicyUserInput` via:
//
//	GetPolicyUserArgs{...}
type GetPolicyUserInput interface {
	pulumi.Input

	ToGetPolicyUserOutput() GetPolicyUserOutput
	ToGetPolicyUserOutputWithContext(context.Context) GetPolicyUserOutput
}

type GetPolicyUserArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyUser)(nil)).Elem()
}

func (i GetPolicyUserArgs) ToGetPolicyUserOutput() GetPolicyUserOutput {
	return i.ToGetPolicyUserOutputWithContext(context.Background())
}

func (i GetPolicyUserArgs) ToGetPolicyUserOutputWithContext(ctx context.Context) GetPolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyUserOutput)
}

// GetPolicyUserArrayInput is an input type that accepts GetPolicyUserArray and GetPolicyUserArrayOutput values.
// You can construct a concrete instance of `GetPolicyUserArrayInput` via:
//
//	GetPolicyUserArray{ GetPolicyUserArgs{...} }
type GetPolicyUserArrayInput interface {
	pulumi.Input

	ToGetPolicyUserArrayOutput() GetPolicyUserArrayOutput
	ToGetPolicyUserArrayOutputWithContext(context.Context) GetPolicyUserArrayOutput
}

type GetPolicyUserArray []GetPolicyUserInput

func (GetPolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyUser)(nil)).Elem()
}

func (i GetPolicyUserArray) ToGetPolicyUserArrayOutput() GetPolicyUserArrayOutput {
	return i.ToGetPolicyUserArrayOutputWithContext(context.Background())
}

func (i GetPolicyUserArray) ToGetPolicyUserArrayOutputWithContext(ctx context.Context) GetPolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyUserArrayOutput)
}

type GetPolicyUserOutput struct{ *pulumi.OutputState }

func (GetPolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyUser)(nil)).Elem()
}

func (o GetPolicyUserOutput) ToGetPolicyUserOutput() GetPolicyUserOutput {
	return o
}

func (o GetPolicyUserOutput) ToGetPolicyUserOutputWithContext(ctx context.Context) GetPolicyUserOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyUserArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyUser)(nil)).Elem()
}

func (o GetPolicyUserArrayOutput) ToGetPolicyUserArrayOutput() GetPolicyUserArrayOutput {
	return o
}

func (o GetPolicyUserArrayOutput) ToGetPolicyUserArrayOutputWithContext(ctx context.Context) GetPolicyUserArrayOutput {
	return o
}

func (o GetPolicyUserArrayOutput) Index(i pulumi.IntInput) GetPolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyUser {
		return vs[0].([]GetPolicyUser)[vs[1].(int)]
	}).(GetPolicyUserOutput)
}

type GetPolicyZtnaEmsTag struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyZtnaEmsTagInput is an input type that accepts GetPolicyZtnaEmsTagArgs and GetPolicyZtnaEmsTagOutput values.
// You can construct a concrete instance of `GetPolicyZtnaEmsTagInput` via:
//
//	GetPolicyZtnaEmsTagArgs{...}
type GetPolicyZtnaEmsTagInput interface {
	pulumi.Input

	ToGetPolicyZtnaEmsTagOutput() GetPolicyZtnaEmsTagOutput
	ToGetPolicyZtnaEmsTagOutputWithContext(context.Context) GetPolicyZtnaEmsTagOutput
}

type GetPolicyZtnaEmsTagArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyZtnaEmsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyZtnaEmsTag)(nil)).Elem()
}

func (i GetPolicyZtnaEmsTagArgs) ToGetPolicyZtnaEmsTagOutput() GetPolicyZtnaEmsTagOutput {
	return i.ToGetPolicyZtnaEmsTagOutputWithContext(context.Background())
}

func (i GetPolicyZtnaEmsTagArgs) ToGetPolicyZtnaEmsTagOutputWithContext(ctx context.Context) GetPolicyZtnaEmsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyZtnaEmsTagOutput)
}

// GetPolicyZtnaEmsTagArrayInput is an input type that accepts GetPolicyZtnaEmsTagArray and GetPolicyZtnaEmsTagArrayOutput values.
// You can construct a concrete instance of `GetPolicyZtnaEmsTagArrayInput` via:
//
//	GetPolicyZtnaEmsTagArray{ GetPolicyZtnaEmsTagArgs{...} }
type GetPolicyZtnaEmsTagArrayInput interface {
	pulumi.Input

	ToGetPolicyZtnaEmsTagArrayOutput() GetPolicyZtnaEmsTagArrayOutput
	ToGetPolicyZtnaEmsTagArrayOutputWithContext(context.Context) GetPolicyZtnaEmsTagArrayOutput
}

type GetPolicyZtnaEmsTagArray []GetPolicyZtnaEmsTagInput

func (GetPolicyZtnaEmsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyZtnaEmsTag)(nil)).Elem()
}

func (i GetPolicyZtnaEmsTagArray) ToGetPolicyZtnaEmsTagArrayOutput() GetPolicyZtnaEmsTagArrayOutput {
	return i.ToGetPolicyZtnaEmsTagArrayOutputWithContext(context.Background())
}

func (i GetPolicyZtnaEmsTagArray) ToGetPolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) GetPolicyZtnaEmsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyZtnaEmsTagArrayOutput)
}

type GetPolicyZtnaEmsTagOutput struct{ *pulumi.OutputState }

func (GetPolicyZtnaEmsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyZtnaEmsTag)(nil)).Elem()
}

func (o GetPolicyZtnaEmsTagOutput) ToGetPolicyZtnaEmsTagOutput() GetPolicyZtnaEmsTagOutput {
	return o
}

func (o GetPolicyZtnaEmsTagOutput) ToGetPolicyZtnaEmsTagOutputWithContext(ctx context.Context) GetPolicyZtnaEmsTagOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyZtnaEmsTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyZtnaEmsTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyZtnaEmsTagArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyZtnaEmsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyZtnaEmsTag)(nil)).Elem()
}

func (o GetPolicyZtnaEmsTagArrayOutput) ToGetPolicyZtnaEmsTagArrayOutput() GetPolicyZtnaEmsTagArrayOutput {
	return o
}

func (o GetPolicyZtnaEmsTagArrayOutput) ToGetPolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) GetPolicyZtnaEmsTagArrayOutput {
	return o
}

func (o GetPolicyZtnaEmsTagArrayOutput) Index(i pulumi.IntInput) GetPolicyZtnaEmsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyZtnaEmsTag {
		return vs[0].([]GetPolicyZtnaEmsTag)[vs[1].(int)]
	}).(GetPolicyZtnaEmsTagOutput)
}

type GetPolicyZtnaEmsTagSecondary struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyZtnaEmsTagSecondaryInput is an input type that accepts GetPolicyZtnaEmsTagSecondaryArgs and GetPolicyZtnaEmsTagSecondaryOutput values.
// You can construct a concrete instance of `GetPolicyZtnaEmsTagSecondaryInput` via:
//
//	GetPolicyZtnaEmsTagSecondaryArgs{...}
type GetPolicyZtnaEmsTagSecondaryInput interface {
	pulumi.Input

	ToGetPolicyZtnaEmsTagSecondaryOutput() GetPolicyZtnaEmsTagSecondaryOutput
	ToGetPolicyZtnaEmsTagSecondaryOutputWithContext(context.Context) GetPolicyZtnaEmsTagSecondaryOutput
}

type GetPolicyZtnaEmsTagSecondaryArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyZtnaEmsTagSecondaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyZtnaEmsTagSecondary)(nil)).Elem()
}

func (i GetPolicyZtnaEmsTagSecondaryArgs) ToGetPolicyZtnaEmsTagSecondaryOutput() GetPolicyZtnaEmsTagSecondaryOutput {
	return i.ToGetPolicyZtnaEmsTagSecondaryOutputWithContext(context.Background())
}

func (i GetPolicyZtnaEmsTagSecondaryArgs) ToGetPolicyZtnaEmsTagSecondaryOutputWithContext(ctx context.Context) GetPolicyZtnaEmsTagSecondaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyZtnaEmsTagSecondaryOutput)
}

// GetPolicyZtnaEmsTagSecondaryArrayInput is an input type that accepts GetPolicyZtnaEmsTagSecondaryArray and GetPolicyZtnaEmsTagSecondaryArrayOutput values.
// You can construct a concrete instance of `GetPolicyZtnaEmsTagSecondaryArrayInput` via:
//
//	GetPolicyZtnaEmsTagSecondaryArray{ GetPolicyZtnaEmsTagSecondaryArgs{...} }
type GetPolicyZtnaEmsTagSecondaryArrayInput interface {
	pulumi.Input

	ToGetPolicyZtnaEmsTagSecondaryArrayOutput() GetPolicyZtnaEmsTagSecondaryArrayOutput
	ToGetPolicyZtnaEmsTagSecondaryArrayOutputWithContext(context.Context) GetPolicyZtnaEmsTagSecondaryArrayOutput
}

type GetPolicyZtnaEmsTagSecondaryArray []GetPolicyZtnaEmsTagSecondaryInput

func (GetPolicyZtnaEmsTagSecondaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyZtnaEmsTagSecondary)(nil)).Elem()
}

func (i GetPolicyZtnaEmsTagSecondaryArray) ToGetPolicyZtnaEmsTagSecondaryArrayOutput() GetPolicyZtnaEmsTagSecondaryArrayOutput {
	return i.ToGetPolicyZtnaEmsTagSecondaryArrayOutputWithContext(context.Background())
}

func (i GetPolicyZtnaEmsTagSecondaryArray) ToGetPolicyZtnaEmsTagSecondaryArrayOutputWithContext(ctx context.Context) GetPolicyZtnaEmsTagSecondaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyZtnaEmsTagSecondaryArrayOutput)
}

type GetPolicyZtnaEmsTagSecondaryOutput struct{ *pulumi.OutputState }

func (GetPolicyZtnaEmsTagSecondaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyZtnaEmsTagSecondary)(nil)).Elem()
}

func (o GetPolicyZtnaEmsTagSecondaryOutput) ToGetPolicyZtnaEmsTagSecondaryOutput() GetPolicyZtnaEmsTagSecondaryOutput {
	return o
}

func (o GetPolicyZtnaEmsTagSecondaryOutput) ToGetPolicyZtnaEmsTagSecondaryOutputWithContext(ctx context.Context) GetPolicyZtnaEmsTagSecondaryOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyZtnaEmsTagSecondaryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyZtnaEmsTagSecondary) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyZtnaEmsTagSecondaryArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyZtnaEmsTagSecondaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyZtnaEmsTagSecondary)(nil)).Elem()
}

func (o GetPolicyZtnaEmsTagSecondaryArrayOutput) ToGetPolicyZtnaEmsTagSecondaryArrayOutput() GetPolicyZtnaEmsTagSecondaryArrayOutput {
	return o
}

func (o GetPolicyZtnaEmsTagSecondaryArrayOutput) ToGetPolicyZtnaEmsTagSecondaryArrayOutputWithContext(ctx context.Context) GetPolicyZtnaEmsTagSecondaryArrayOutput {
	return o
}

func (o GetPolicyZtnaEmsTagSecondaryArrayOutput) Index(i pulumi.IntInput) GetPolicyZtnaEmsTagSecondaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyZtnaEmsTagSecondary {
		return vs[0].([]GetPolicyZtnaEmsTagSecondary)[vs[1].(int)]
	}).(GetPolicyZtnaEmsTagSecondaryOutput)
}

type GetPolicyZtnaGeoTag struct {
	// Mirror Interface name.
	Name string `pulumi:"name"`
}

// GetPolicyZtnaGeoTagInput is an input type that accepts GetPolicyZtnaGeoTagArgs and GetPolicyZtnaGeoTagOutput values.
// You can construct a concrete instance of `GetPolicyZtnaGeoTagInput` via:
//
//	GetPolicyZtnaGeoTagArgs{...}
type GetPolicyZtnaGeoTagInput interface {
	pulumi.Input

	ToGetPolicyZtnaGeoTagOutput() GetPolicyZtnaGeoTagOutput
	ToGetPolicyZtnaGeoTagOutputWithContext(context.Context) GetPolicyZtnaGeoTagOutput
}

type GetPolicyZtnaGeoTagArgs struct {
	// Mirror Interface name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyZtnaGeoTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyZtnaGeoTag)(nil)).Elem()
}

func (i GetPolicyZtnaGeoTagArgs) ToGetPolicyZtnaGeoTagOutput() GetPolicyZtnaGeoTagOutput {
	return i.ToGetPolicyZtnaGeoTagOutputWithContext(context.Background())
}

func (i GetPolicyZtnaGeoTagArgs) ToGetPolicyZtnaGeoTagOutputWithContext(ctx context.Context) GetPolicyZtnaGeoTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyZtnaGeoTagOutput)
}

// GetPolicyZtnaGeoTagArrayInput is an input type that accepts GetPolicyZtnaGeoTagArray and GetPolicyZtnaGeoTagArrayOutput values.
// You can construct a concrete instance of `GetPolicyZtnaGeoTagArrayInput` via:
//
//	GetPolicyZtnaGeoTagArray{ GetPolicyZtnaGeoTagArgs{...} }
type GetPolicyZtnaGeoTagArrayInput interface {
	pulumi.Input

	ToGetPolicyZtnaGeoTagArrayOutput() GetPolicyZtnaGeoTagArrayOutput
	ToGetPolicyZtnaGeoTagArrayOutputWithContext(context.Context) GetPolicyZtnaGeoTagArrayOutput
}

type GetPolicyZtnaGeoTagArray []GetPolicyZtnaGeoTagInput

func (GetPolicyZtnaGeoTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyZtnaGeoTag)(nil)).Elem()
}

func (i GetPolicyZtnaGeoTagArray) ToGetPolicyZtnaGeoTagArrayOutput() GetPolicyZtnaGeoTagArrayOutput {
	return i.ToGetPolicyZtnaGeoTagArrayOutputWithContext(context.Background())
}

func (i GetPolicyZtnaGeoTagArray) ToGetPolicyZtnaGeoTagArrayOutputWithContext(ctx context.Context) GetPolicyZtnaGeoTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyZtnaGeoTagArrayOutput)
}

type GetPolicyZtnaGeoTagOutput struct{ *pulumi.OutputState }

func (GetPolicyZtnaGeoTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyZtnaGeoTag)(nil)).Elem()
}

func (o GetPolicyZtnaGeoTagOutput) ToGetPolicyZtnaGeoTagOutput() GetPolicyZtnaGeoTagOutput {
	return o
}

func (o GetPolicyZtnaGeoTagOutput) ToGetPolicyZtnaGeoTagOutputWithContext(ctx context.Context) GetPolicyZtnaGeoTagOutput {
	return o
}

// Mirror Interface name.
func (o GetPolicyZtnaGeoTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyZtnaGeoTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyZtnaGeoTagArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyZtnaGeoTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyZtnaGeoTag)(nil)).Elem()
}

func (o GetPolicyZtnaGeoTagArrayOutput) ToGetPolicyZtnaGeoTagArrayOutput() GetPolicyZtnaGeoTagArrayOutput {
	return o
}

func (o GetPolicyZtnaGeoTagArrayOutput) ToGetPolicyZtnaGeoTagArrayOutputWithContext(ctx context.Context) GetPolicyZtnaGeoTagArrayOutput {
	return o
}

func (o GetPolicyZtnaGeoTagArrayOutput) Index(i pulumi.IntInput) GetPolicyZtnaGeoTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyZtnaGeoTag {
		return vs[0].([]GetPolicyZtnaGeoTag)[vs[1].(int)]
	}).(GetPolicyZtnaGeoTagOutput)
}

type GetProfileprotocoloptionsCif struct {
	// Domain for which to decrypt CIFS traffic.
	DomainController string `pulumi:"domainController"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// CIFS server credential type.
	ServerCredentialType string `pulumi:"serverCredentialType"`
	// Server keytab. The structure of `serverKeytab` block is documented below.
	ServerKeytabs []GetProfileprotocoloptionsCifServerKeytab `pulumi:"serverKeytabs"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetProfileprotocoloptionsCifInput is an input type that accepts GetProfileprotocoloptionsCifArgs and GetProfileprotocoloptionsCifOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsCifInput` via:
//
//	GetProfileprotocoloptionsCifArgs{...}
type GetProfileprotocoloptionsCifInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsCifOutput() GetProfileprotocoloptionsCifOutput
	ToGetProfileprotocoloptionsCifOutputWithContext(context.Context) GetProfileprotocoloptionsCifOutput
}

type GetProfileprotocoloptionsCifArgs struct {
	// Domain for which to decrypt CIFS traffic.
	DomainController pulumi.StringInput `pulumi:"domainController"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// CIFS server credential type.
	ServerCredentialType pulumi.StringInput `pulumi:"serverCredentialType"`
	// Server keytab. The structure of `serverKeytab` block is documented below.
	ServerKeytabs GetProfileprotocoloptionsCifServerKeytabArrayInput `pulumi:"serverKeytabs"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum pulumi.IntInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum pulumi.IntInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize pulumi.IntInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetProfileprotocoloptionsCifArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsCif)(nil)).Elem()
}

func (i GetProfileprotocoloptionsCifArgs) ToGetProfileprotocoloptionsCifOutput() GetProfileprotocoloptionsCifOutput {
	return i.ToGetProfileprotocoloptionsCifOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsCifArgs) ToGetProfileprotocoloptionsCifOutputWithContext(ctx context.Context) GetProfileprotocoloptionsCifOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsCifOutput)
}

// GetProfileprotocoloptionsCifArrayInput is an input type that accepts GetProfileprotocoloptionsCifArray and GetProfileprotocoloptionsCifArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsCifArrayInput` via:
//
//	GetProfileprotocoloptionsCifArray{ GetProfileprotocoloptionsCifArgs{...} }
type GetProfileprotocoloptionsCifArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsCifArrayOutput() GetProfileprotocoloptionsCifArrayOutput
	ToGetProfileprotocoloptionsCifArrayOutputWithContext(context.Context) GetProfileprotocoloptionsCifArrayOutput
}

type GetProfileprotocoloptionsCifArray []GetProfileprotocoloptionsCifInput

func (GetProfileprotocoloptionsCifArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsCif)(nil)).Elem()
}

func (i GetProfileprotocoloptionsCifArray) ToGetProfileprotocoloptionsCifArrayOutput() GetProfileprotocoloptionsCifArrayOutput {
	return i.ToGetProfileprotocoloptionsCifArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsCifArray) ToGetProfileprotocoloptionsCifArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsCifArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsCifArrayOutput)
}

type GetProfileprotocoloptionsCifOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsCifOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsCif)(nil)).Elem()
}

func (o GetProfileprotocoloptionsCifOutput) ToGetProfileprotocoloptionsCifOutput() GetProfileprotocoloptionsCifOutput {
	return o
}

func (o GetProfileprotocoloptionsCifOutput) ToGetProfileprotocoloptionsCifOutputWithContext(ctx context.Context) GetProfileprotocoloptionsCifOutput {
	return o
}

// Domain for which to decrypt CIFS traffic.
func (o GetProfileprotocoloptionsCifOutput) DomainController() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) string { return v.DomainController }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetProfileprotocoloptionsCifOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetProfileprotocoloptionsCifOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetProfileprotocoloptionsCifOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) int { return v.Ports }).(pulumi.IntOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetProfileprotocoloptionsCifOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// CIFS server credential type.
func (o GetProfileprotocoloptionsCifOutput) ServerCredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) string { return v.ServerCredentialType }).(pulumi.StringOutput)
}

// Server keytab. The structure of `serverKeytab` block is documented below.
func (o GetProfileprotocoloptionsCifOutput) ServerKeytabs() GetProfileprotocoloptionsCifServerKeytabArrayOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) []GetProfileprotocoloptionsCifServerKeytab {
		return v.ServerKeytabs
	}).(GetProfileprotocoloptionsCifServerKeytabArrayOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetProfileprotocoloptionsCifOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o GetProfileprotocoloptionsCifOutput) TcpWindowMaximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) int { return v.TcpWindowMaximum }).(pulumi.IntOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o GetProfileprotocoloptionsCifOutput) TcpWindowMinimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) int { return v.TcpWindowMinimum }).(pulumi.IntOutput)
}

// Set TCP static window size (default = 256KB).
func (o GetProfileprotocoloptionsCifOutput) TcpWindowSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) int { return v.TcpWindowSize }).(pulumi.IntOutput)
}

// Specify type of TCP window to use for this protocol.
func (o GetProfileprotocoloptionsCifOutput) TcpWindowType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) string { return v.TcpWindowType }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetProfileprotocoloptionsCifOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetProfileprotocoloptionsCifOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCif) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetProfileprotocoloptionsCifArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsCifArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsCif)(nil)).Elem()
}

func (o GetProfileprotocoloptionsCifArrayOutput) ToGetProfileprotocoloptionsCifArrayOutput() GetProfileprotocoloptionsCifArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsCifArrayOutput) ToGetProfileprotocoloptionsCifArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsCifArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsCifArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsCifOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsCif {
		return vs[0].([]GetProfileprotocoloptionsCif)[vs[1].(int)]
	}).(GetProfileprotocoloptionsCifOutput)
}

type GetProfileprotocoloptionsCifServerKeytab struct {
	// Base64 encoded keytab file containing credential of the server.
	Keytab string `pulumi:"keytab"`
	// Service principal.  For example, "host/cifsserver.example.com@example.com".
	Principal string `pulumi:"principal"`
}

// GetProfileprotocoloptionsCifServerKeytabInput is an input type that accepts GetProfileprotocoloptionsCifServerKeytabArgs and GetProfileprotocoloptionsCifServerKeytabOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsCifServerKeytabInput` via:
//
//	GetProfileprotocoloptionsCifServerKeytabArgs{...}
type GetProfileprotocoloptionsCifServerKeytabInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsCifServerKeytabOutput() GetProfileprotocoloptionsCifServerKeytabOutput
	ToGetProfileprotocoloptionsCifServerKeytabOutputWithContext(context.Context) GetProfileprotocoloptionsCifServerKeytabOutput
}

type GetProfileprotocoloptionsCifServerKeytabArgs struct {
	// Base64 encoded keytab file containing credential of the server.
	Keytab pulumi.StringInput `pulumi:"keytab"`
	// Service principal.  For example, "host/cifsserver.example.com@example.com".
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (GetProfileprotocoloptionsCifServerKeytabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsCifServerKeytab)(nil)).Elem()
}

func (i GetProfileprotocoloptionsCifServerKeytabArgs) ToGetProfileprotocoloptionsCifServerKeytabOutput() GetProfileprotocoloptionsCifServerKeytabOutput {
	return i.ToGetProfileprotocoloptionsCifServerKeytabOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsCifServerKeytabArgs) ToGetProfileprotocoloptionsCifServerKeytabOutputWithContext(ctx context.Context) GetProfileprotocoloptionsCifServerKeytabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsCifServerKeytabOutput)
}

// GetProfileprotocoloptionsCifServerKeytabArrayInput is an input type that accepts GetProfileprotocoloptionsCifServerKeytabArray and GetProfileprotocoloptionsCifServerKeytabArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsCifServerKeytabArrayInput` via:
//
//	GetProfileprotocoloptionsCifServerKeytabArray{ GetProfileprotocoloptionsCifServerKeytabArgs{...} }
type GetProfileprotocoloptionsCifServerKeytabArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsCifServerKeytabArrayOutput() GetProfileprotocoloptionsCifServerKeytabArrayOutput
	ToGetProfileprotocoloptionsCifServerKeytabArrayOutputWithContext(context.Context) GetProfileprotocoloptionsCifServerKeytabArrayOutput
}

type GetProfileprotocoloptionsCifServerKeytabArray []GetProfileprotocoloptionsCifServerKeytabInput

func (GetProfileprotocoloptionsCifServerKeytabArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsCifServerKeytab)(nil)).Elem()
}

func (i GetProfileprotocoloptionsCifServerKeytabArray) ToGetProfileprotocoloptionsCifServerKeytabArrayOutput() GetProfileprotocoloptionsCifServerKeytabArrayOutput {
	return i.ToGetProfileprotocoloptionsCifServerKeytabArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsCifServerKeytabArray) ToGetProfileprotocoloptionsCifServerKeytabArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsCifServerKeytabArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsCifServerKeytabArrayOutput)
}

type GetProfileprotocoloptionsCifServerKeytabOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsCifServerKeytabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsCifServerKeytab)(nil)).Elem()
}

func (o GetProfileprotocoloptionsCifServerKeytabOutput) ToGetProfileprotocoloptionsCifServerKeytabOutput() GetProfileprotocoloptionsCifServerKeytabOutput {
	return o
}

func (o GetProfileprotocoloptionsCifServerKeytabOutput) ToGetProfileprotocoloptionsCifServerKeytabOutputWithContext(ctx context.Context) GetProfileprotocoloptionsCifServerKeytabOutput {
	return o
}

// Base64 encoded keytab file containing credential of the server.
func (o GetProfileprotocoloptionsCifServerKeytabOutput) Keytab() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCifServerKeytab) string { return v.Keytab }).(pulumi.StringOutput)
}

// Service principal.  For example, "host/cifsserver.example.com@example.com".
func (o GetProfileprotocoloptionsCifServerKeytabOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsCifServerKeytab) string { return v.Principal }).(pulumi.StringOutput)
}

type GetProfileprotocoloptionsCifServerKeytabArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsCifServerKeytabArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsCifServerKeytab)(nil)).Elem()
}

func (o GetProfileprotocoloptionsCifServerKeytabArrayOutput) ToGetProfileprotocoloptionsCifServerKeytabArrayOutput() GetProfileprotocoloptionsCifServerKeytabArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsCifServerKeytabArrayOutput) ToGetProfileprotocoloptionsCifServerKeytabArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsCifServerKeytabArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsCifServerKeytabArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsCifServerKeytabOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsCifServerKeytab {
		return vs[0].([]GetProfileprotocoloptionsCifServerKeytab)[vs[1].(int)]
	}).(GetProfileprotocoloptionsCifServerKeytabOutput)
}

type GetProfileprotocoloptionsDn struct {
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
}

// GetProfileprotocoloptionsDnInput is an input type that accepts GetProfileprotocoloptionsDnArgs and GetProfileprotocoloptionsDnOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsDnInput` via:
//
//	GetProfileprotocoloptionsDnArgs{...}
type GetProfileprotocoloptionsDnInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsDnOutput() GetProfileprotocoloptionsDnOutput
	ToGetProfileprotocoloptionsDnOutputWithContext(context.Context) GetProfileprotocoloptionsDnOutput
}

type GetProfileprotocoloptionsDnArgs struct {
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetProfileprotocoloptionsDnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsDn)(nil)).Elem()
}

func (i GetProfileprotocoloptionsDnArgs) ToGetProfileprotocoloptionsDnOutput() GetProfileprotocoloptionsDnOutput {
	return i.ToGetProfileprotocoloptionsDnOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsDnArgs) ToGetProfileprotocoloptionsDnOutputWithContext(ctx context.Context) GetProfileprotocoloptionsDnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsDnOutput)
}

// GetProfileprotocoloptionsDnArrayInput is an input type that accepts GetProfileprotocoloptionsDnArray and GetProfileprotocoloptionsDnArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsDnArrayInput` via:
//
//	GetProfileprotocoloptionsDnArray{ GetProfileprotocoloptionsDnArgs{...} }
type GetProfileprotocoloptionsDnArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsDnArrayOutput() GetProfileprotocoloptionsDnArrayOutput
	ToGetProfileprotocoloptionsDnArrayOutputWithContext(context.Context) GetProfileprotocoloptionsDnArrayOutput
}

type GetProfileprotocoloptionsDnArray []GetProfileprotocoloptionsDnInput

func (GetProfileprotocoloptionsDnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsDn)(nil)).Elem()
}

func (i GetProfileprotocoloptionsDnArray) ToGetProfileprotocoloptionsDnArrayOutput() GetProfileprotocoloptionsDnArrayOutput {
	return i.ToGetProfileprotocoloptionsDnArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsDnArray) ToGetProfileprotocoloptionsDnArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsDnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsDnArrayOutput)
}

type GetProfileprotocoloptionsDnOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsDnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsDn)(nil)).Elem()
}

func (o GetProfileprotocoloptionsDnOutput) ToGetProfileprotocoloptionsDnOutput() GetProfileprotocoloptionsDnOutput {
	return o
}

func (o GetProfileprotocoloptionsDnOutput) ToGetProfileprotocoloptionsDnOutputWithContext(ctx context.Context) GetProfileprotocoloptionsDnOutput {
	return o
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetProfileprotocoloptionsDnOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsDn) int { return v.Ports }).(pulumi.IntOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetProfileprotocoloptionsDnOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsDn) string { return v.Status }).(pulumi.StringOutput)
}

type GetProfileprotocoloptionsDnArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsDnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsDn)(nil)).Elem()
}

func (o GetProfileprotocoloptionsDnArrayOutput) ToGetProfileprotocoloptionsDnArrayOutput() GetProfileprotocoloptionsDnArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsDnArrayOutput) ToGetProfileprotocoloptionsDnArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsDnArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsDnArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsDnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsDn {
		return vs[0].([]GetProfileprotocoloptionsDn)[vs[1].(int)]
	}).(GetProfileprotocoloptionsDnOutput)
}

type GetProfileprotocoloptionsFtp struct {
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount int `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval int `pulumi:"comfortInterval"`
	// Enable/disable FTP redirection for explicit FTPS.
	ExplicitFtpTls string `pulumi:"explicitFtpTls"`
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit int `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetProfileprotocoloptionsFtpInput is an input type that accepts GetProfileprotocoloptionsFtpArgs and GetProfileprotocoloptionsFtpOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsFtpInput` via:
//
//	GetProfileprotocoloptionsFtpArgs{...}
type GetProfileprotocoloptionsFtpInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsFtpOutput() GetProfileprotocoloptionsFtpOutput
	ToGetProfileprotocoloptionsFtpOutputWithContext(context.Context) GetProfileprotocoloptionsFtpOutput
}

type GetProfileprotocoloptionsFtpArgs struct {
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount pulumi.IntInput `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval pulumi.IntInput `pulumi:"comfortInterval"`
	// Enable/disable FTP redirection for explicit FTPS.
	ExplicitFtpTls pulumi.StringInput `pulumi:"explicitFtpTls"`
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit pulumi.IntInput `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum pulumi.IntInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum pulumi.IntInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize pulumi.IntInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetProfileprotocoloptionsFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsFtp)(nil)).Elem()
}

func (i GetProfileprotocoloptionsFtpArgs) ToGetProfileprotocoloptionsFtpOutput() GetProfileprotocoloptionsFtpOutput {
	return i.ToGetProfileprotocoloptionsFtpOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsFtpArgs) ToGetProfileprotocoloptionsFtpOutputWithContext(ctx context.Context) GetProfileprotocoloptionsFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsFtpOutput)
}

// GetProfileprotocoloptionsFtpArrayInput is an input type that accepts GetProfileprotocoloptionsFtpArray and GetProfileprotocoloptionsFtpArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsFtpArrayInput` via:
//
//	GetProfileprotocoloptionsFtpArray{ GetProfileprotocoloptionsFtpArgs{...} }
type GetProfileprotocoloptionsFtpArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsFtpArrayOutput() GetProfileprotocoloptionsFtpArrayOutput
	ToGetProfileprotocoloptionsFtpArrayOutputWithContext(context.Context) GetProfileprotocoloptionsFtpArrayOutput
}

type GetProfileprotocoloptionsFtpArray []GetProfileprotocoloptionsFtpInput

func (GetProfileprotocoloptionsFtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsFtp)(nil)).Elem()
}

func (i GetProfileprotocoloptionsFtpArray) ToGetProfileprotocoloptionsFtpArrayOutput() GetProfileprotocoloptionsFtpArrayOutput {
	return i.ToGetProfileprotocoloptionsFtpArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsFtpArray) ToGetProfileprotocoloptionsFtpArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsFtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsFtpArrayOutput)
}

type GetProfileprotocoloptionsFtpOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsFtp)(nil)).Elem()
}

func (o GetProfileprotocoloptionsFtpOutput) ToGetProfileprotocoloptionsFtpOutput() GetProfileprotocoloptionsFtpOutput {
	return o
}

func (o GetProfileprotocoloptionsFtpOutput) ToGetProfileprotocoloptionsFtpOutputWithContext(ctx context.Context) GetProfileprotocoloptionsFtpOutput {
	return o
}

// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
func (o GetProfileprotocoloptionsFtpOutput) ComfortAmount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) int { return v.ComfortAmount }).(pulumi.IntOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o GetProfileprotocoloptionsFtpOutput) ComfortInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) int { return v.ComfortInterval }).(pulumi.IntOutput)
}

// Enable/disable FTP redirection for explicit FTPS.
func (o GetProfileprotocoloptionsFtpOutput) ExplicitFtpTls() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) string { return v.ExplicitFtpTls }).(pulumi.StringOutput)
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetProfileprotocoloptionsFtpOutput) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetProfileprotocoloptionsFtpOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetProfileprotocoloptionsFtpOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetProfileprotocoloptionsFtpOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) int { return v.Ports }).(pulumi.IntOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetProfileprotocoloptionsFtpOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetProfileprotocoloptionsFtpOutput) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetProfileprotocoloptionsFtpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o GetProfileprotocoloptionsFtpOutput) StreamBasedUncompressedLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) int { return v.StreamBasedUncompressedLimit }).(pulumi.IntOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o GetProfileprotocoloptionsFtpOutput) TcpWindowMaximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) int { return v.TcpWindowMaximum }).(pulumi.IntOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o GetProfileprotocoloptionsFtpOutput) TcpWindowMinimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) int { return v.TcpWindowMinimum }).(pulumi.IntOutput)
}

// Set TCP static window size (default = 256KB).
func (o GetProfileprotocoloptionsFtpOutput) TcpWindowSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) int { return v.TcpWindowSize }).(pulumi.IntOutput)
}

// Specify type of TCP window to use for this protocol.
func (o GetProfileprotocoloptionsFtpOutput) TcpWindowType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) string { return v.TcpWindowType }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetProfileprotocoloptionsFtpOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetProfileprotocoloptionsFtpOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsFtp) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetProfileprotocoloptionsFtpArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsFtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsFtp)(nil)).Elem()
}

func (o GetProfileprotocoloptionsFtpArrayOutput) ToGetProfileprotocoloptionsFtpArrayOutput() GetProfileprotocoloptionsFtpArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsFtpArrayOutput) ToGetProfileprotocoloptionsFtpArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsFtpArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsFtpArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsFtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsFtp {
		return vs[0].([]GetProfileprotocoloptionsFtp)[vs[1].(int)]
	}).(GetProfileprotocoloptionsFtpOutput)
}

type GetProfileprotocoloptionsHttp struct {
	// Enable/disable IP based URL rating.
	AddressIpRating string `pulumi:"addressIpRating"`
	// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
	BlockPageStatusCode int `pulumi:"blockPageStatusCode"`
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount int `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval int `pulumi:"comfortInterval"`
	// Enable/disable Fortinet bar on HTML content.
	FortinetBar string `pulumi:"fortinetBar"`
	// Port for use by Fortinet Bar (1 - 65535, default = 8011).
	FortinetBarPort int `pulumi:"fortinetBarPort"`
	// Enable/disable h2c HTTP connection upgrade.
	H2c string `pulumi:"h2c"`
	// Enable/disable HTTP policy check.
	HttpPolicy string `pulumi:"httpPolicy"`
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets).
	PostLang string `pulumi:"postLang"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable blocking of partial downloads.
	RangeBlock string `pulumi:"rangeBlock"`
	// Number of attempts to retry HTTP connection (0 - 100, default = 0).
	RetryCount int `pulumi:"retryCount"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit int `pulumi:"streamBasedUncompressedLimit"`
	// Enable/disable bypassing of streaming content from buffering.
	StreamingContentBypass string `pulumi:"streamingContentBypass"`
	// Enable/disable stripping of HTTP X-Forwarded-For header.
	StripXForwardedFor string `pulumi:"stripXForwardedFor"`
	// Bypass from scanning, or block a connection that attempts to switch protocol.
	SwitchingProtocols string `pulumi:"switchingProtocols"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType string `pulumi:"tcpWindowType"`
	// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port.
	TunnelNonHttp string `pulumi:"tunnelNonHttp"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
	// Configure the action the FortiGate unit will take on unknown content-encoding.
	UnknownContentEncoding string `pulumi:"unknownContentEncoding"`
	// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1.
	UnknownHttpVersion string `pulumi:"unknownHttpVersion"`
	// Enable/disable verification of DNS for policy matching.
	VerifyDnsForPolicyMatching string `pulumi:"verifyDnsForPolicyMatching"`
}

// GetProfileprotocoloptionsHttpInput is an input type that accepts GetProfileprotocoloptionsHttpArgs and GetProfileprotocoloptionsHttpOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsHttpInput` via:
//
//	GetProfileprotocoloptionsHttpArgs{...}
type GetProfileprotocoloptionsHttpInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsHttpOutput() GetProfileprotocoloptionsHttpOutput
	ToGetProfileprotocoloptionsHttpOutputWithContext(context.Context) GetProfileprotocoloptionsHttpOutput
}

type GetProfileprotocoloptionsHttpArgs struct {
	// Enable/disable IP based URL rating.
	AddressIpRating pulumi.StringInput `pulumi:"addressIpRating"`
	// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
	BlockPageStatusCode pulumi.IntInput `pulumi:"blockPageStatusCode"`
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount pulumi.IntInput `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval pulumi.IntInput `pulumi:"comfortInterval"`
	// Enable/disable Fortinet bar on HTML content.
	FortinetBar pulumi.StringInput `pulumi:"fortinetBar"`
	// Port for use by Fortinet Bar (1 - 65535, default = 8011).
	FortinetBarPort pulumi.IntInput `pulumi:"fortinetBarPort"`
	// Enable/disable h2c HTTP connection upgrade.
	H2c pulumi.StringInput `pulumi:"h2c"`
	// Enable/disable HTTP policy check.
	HttpPolicy pulumi.StringInput `pulumi:"httpPolicy"`
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets).
	PostLang pulumi.StringInput `pulumi:"postLang"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake pulumi.StringInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable blocking of partial downloads.
	RangeBlock pulumi.StringInput `pulumi:"rangeBlock"`
	// Number of attempts to retry HTTP connection (0 - 100, default = 0).
	RetryCount pulumi.IntInput `pulumi:"retryCount"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit pulumi.IntInput `pulumi:"streamBasedUncompressedLimit"`
	// Enable/disable bypassing of streaming content from buffering.
	StreamingContentBypass pulumi.StringInput `pulumi:"streamingContentBypass"`
	// Enable/disable stripping of HTTP X-Forwarded-For header.
	StripXForwardedFor pulumi.StringInput `pulumi:"stripXForwardedFor"`
	// Bypass from scanning, or block a connection that attempts to switch protocol.
	SwitchingProtocols pulumi.StringInput `pulumi:"switchingProtocols"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum pulumi.IntInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum pulumi.IntInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize pulumi.IntInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringInput `pulumi:"tcpWindowType"`
	// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port.
	TunnelNonHttp pulumi.StringInput `pulumi:"tunnelNonHttp"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
	// Configure the action the FortiGate unit will take on unknown content-encoding.
	UnknownContentEncoding pulumi.StringInput `pulumi:"unknownContentEncoding"`
	// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1.
	UnknownHttpVersion pulumi.StringInput `pulumi:"unknownHttpVersion"`
	// Enable/disable verification of DNS for policy matching.
	VerifyDnsForPolicyMatching pulumi.StringInput `pulumi:"verifyDnsForPolicyMatching"`
}

func (GetProfileprotocoloptionsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsHttp)(nil)).Elem()
}

func (i GetProfileprotocoloptionsHttpArgs) ToGetProfileprotocoloptionsHttpOutput() GetProfileprotocoloptionsHttpOutput {
	return i.ToGetProfileprotocoloptionsHttpOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsHttpArgs) ToGetProfileprotocoloptionsHttpOutputWithContext(ctx context.Context) GetProfileprotocoloptionsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsHttpOutput)
}

// GetProfileprotocoloptionsHttpArrayInput is an input type that accepts GetProfileprotocoloptionsHttpArray and GetProfileprotocoloptionsHttpArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsHttpArrayInput` via:
//
//	GetProfileprotocoloptionsHttpArray{ GetProfileprotocoloptionsHttpArgs{...} }
type GetProfileprotocoloptionsHttpArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsHttpArrayOutput() GetProfileprotocoloptionsHttpArrayOutput
	ToGetProfileprotocoloptionsHttpArrayOutputWithContext(context.Context) GetProfileprotocoloptionsHttpArrayOutput
}

type GetProfileprotocoloptionsHttpArray []GetProfileprotocoloptionsHttpInput

func (GetProfileprotocoloptionsHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsHttp)(nil)).Elem()
}

func (i GetProfileprotocoloptionsHttpArray) ToGetProfileprotocoloptionsHttpArrayOutput() GetProfileprotocoloptionsHttpArrayOutput {
	return i.ToGetProfileprotocoloptionsHttpArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsHttpArray) ToGetProfileprotocoloptionsHttpArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsHttpArrayOutput)
}

type GetProfileprotocoloptionsHttpOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsHttp)(nil)).Elem()
}

func (o GetProfileprotocoloptionsHttpOutput) ToGetProfileprotocoloptionsHttpOutput() GetProfileprotocoloptionsHttpOutput {
	return o
}

func (o GetProfileprotocoloptionsHttpOutput) ToGetProfileprotocoloptionsHttpOutputWithContext(ctx context.Context) GetProfileprotocoloptionsHttpOutput {
	return o
}

// Enable/disable IP based URL rating.
func (o GetProfileprotocoloptionsHttpOutput) AddressIpRating() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.AddressIpRating }).(pulumi.StringOutput)
}

// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
func (o GetProfileprotocoloptionsHttpOutput) BlockPageStatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.BlockPageStatusCode }).(pulumi.IntOutput)
}

// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
func (o GetProfileprotocoloptionsHttpOutput) ComfortAmount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.ComfortAmount }).(pulumi.IntOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o GetProfileprotocoloptionsHttpOutput) ComfortInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.ComfortInterval }).(pulumi.IntOutput)
}

// Enable/disable Fortinet bar on HTML content.
func (o GetProfileprotocoloptionsHttpOutput) FortinetBar() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.FortinetBar }).(pulumi.StringOutput)
}

// Port for use by Fortinet Bar (1 - 65535, default = 8011).
func (o GetProfileprotocoloptionsHttpOutput) FortinetBarPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.FortinetBarPort }).(pulumi.IntOutput)
}

// Enable/disable h2c HTTP connection upgrade.
func (o GetProfileprotocoloptionsHttpOutput) H2c() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.H2c }).(pulumi.StringOutput)
}

// Enable/disable HTTP policy check.
func (o GetProfileprotocoloptionsHttpOutput) HttpPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.HttpPolicy }).(pulumi.StringOutput)
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetProfileprotocoloptionsHttpOutput) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetProfileprotocoloptionsHttpOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetProfileprotocoloptionsHttpOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetProfileprotocoloptionsHttpOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.Ports }).(pulumi.IntOutput)
}

// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets).
func (o GetProfileprotocoloptionsHttpOutput) PostLang() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.PostLang }).(pulumi.StringOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before).
func (o GetProfileprotocoloptionsHttpOutput) ProxyAfterTcpHandshake() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.ProxyAfterTcpHandshake }).(pulumi.StringOutput)
}

// Enable/disable blocking of partial downloads.
func (o GetProfileprotocoloptionsHttpOutput) RangeBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.RangeBlock }).(pulumi.StringOutput)
}

// Number of attempts to retry HTTP connection (0 - 100, default = 0).
func (o GetProfileprotocoloptionsHttpOutput) RetryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.RetryCount }).(pulumi.IntOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetProfileprotocoloptionsHttpOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetProfileprotocoloptionsHttpOutput) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetProfileprotocoloptionsHttpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o GetProfileprotocoloptionsHttpOutput) StreamBasedUncompressedLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.StreamBasedUncompressedLimit }).(pulumi.IntOutput)
}

// Enable/disable bypassing of streaming content from buffering.
func (o GetProfileprotocoloptionsHttpOutput) StreamingContentBypass() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.StreamingContentBypass }).(pulumi.StringOutput)
}

// Enable/disable stripping of HTTP X-Forwarded-For header.
func (o GetProfileprotocoloptionsHttpOutput) StripXForwardedFor() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.StripXForwardedFor }).(pulumi.StringOutput)
}

// Bypass from scanning, or block a connection that attempts to switch protocol.
func (o GetProfileprotocoloptionsHttpOutput) SwitchingProtocols() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.SwitchingProtocols }).(pulumi.StringOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o GetProfileprotocoloptionsHttpOutput) TcpWindowMaximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.TcpWindowMaximum }).(pulumi.IntOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o GetProfileprotocoloptionsHttpOutput) TcpWindowMinimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.TcpWindowMinimum }).(pulumi.IntOutput)
}

// Set TCP static window size (default = 256KB).
func (o GetProfileprotocoloptionsHttpOutput) TcpWindowSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.TcpWindowSize }).(pulumi.IntOutput)
}

// Specify type of TCP window to use for this protocol.
func (o GetProfileprotocoloptionsHttpOutput) TcpWindowType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.TcpWindowType }).(pulumi.StringOutput)
}

// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port.
func (o GetProfileprotocoloptionsHttpOutput) TunnelNonHttp() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.TunnelNonHttp }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetProfileprotocoloptionsHttpOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetProfileprotocoloptionsHttpOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

// Configure the action the FortiGate unit will take on unknown content-encoding.
func (o GetProfileprotocoloptionsHttpOutput) UnknownContentEncoding() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.UnknownContentEncoding }).(pulumi.StringOutput)
}

// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1.
func (o GetProfileprotocoloptionsHttpOutput) UnknownHttpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.UnknownHttpVersion }).(pulumi.StringOutput)
}

// Enable/disable verification of DNS for policy matching.
func (o GetProfileprotocoloptionsHttpOutput) VerifyDnsForPolicyMatching() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsHttp) string { return v.VerifyDnsForPolicyMatching }).(pulumi.StringOutput)
}

type GetProfileprotocoloptionsHttpArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsHttp)(nil)).Elem()
}

func (o GetProfileprotocoloptionsHttpArrayOutput) ToGetProfileprotocoloptionsHttpArrayOutput() GetProfileprotocoloptionsHttpArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsHttpArrayOutput) ToGetProfileprotocoloptionsHttpArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsHttpArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsHttpArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsHttp {
		return vs[0].([]GetProfileprotocoloptionsHttp)[vs[1].(int)]
	}).(GetProfileprotocoloptionsHttpOutput)
}

type GetProfileprotocoloptionsImap struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetProfileprotocoloptionsImapInput is an input type that accepts GetProfileprotocoloptionsImapArgs and GetProfileprotocoloptionsImapOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsImapInput` via:
//
//	GetProfileprotocoloptionsImapArgs{...}
type GetProfileprotocoloptionsImapInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsImapOutput() GetProfileprotocoloptionsImapOutput
	ToGetProfileprotocoloptionsImapOutputWithContext(context.Context) GetProfileprotocoloptionsImapOutput
}

type GetProfileprotocoloptionsImapArgs struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake pulumi.StringInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetProfileprotocoloptionsImapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsImap)(nil)).Elem()
}

func (i GetProfileprotocoloptionsImapArgs) ToGetProfileprotocoloptionsImapOutput() GetProfileprotocoloptionsImapOutput {
	return i.ToGetProfileprotocoloptionsImapOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsImapArgs) ToGetProfileprotocoloptionsImapOutputWithContext(ctx context.Context) GetProfileprotocoloptionsImapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsImapOutput)
}

// GetProfileprotocoloptionsImapArrayInput is an input type that accepts GetProfileprotocoloptionsImapArray and GetProfileprotocoloptionsImapArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsImapArrayInput` via:
//
//	GetProfileprotocoloptionsImapArray{ GetProfileprotocoloptionsImapArgs{...} }
type GetProfileprotocoloptionsImapArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsImapArrayOutput() GetProfileprotocoloptionsImapArrayOutput
	ToGetProfileprotocoloptionsImapArrayOutputWithContext(context.Context) GetProfileprotocoloptionsImapArrayOutput
}

type GetProfileprotocoloptionsImapArray []GetProfileprotocoloptionsImapInput

func (GetProfileprotocoloptionsImapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsImap)(nil)).Elem()
}

func (i GetProfileprotocoloptionsImapArray) ToGetProfileprotocoloptionsImapArrayOutput() GetProfileprotocoloptionsImapArrayOutput {
	return i.ToGetProfileprotocoloptionsImapArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsImapArray) ToGetProfileprotocoloptionsImapArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsImapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsImapArrayOutput)
}

type GetProfileprotocoloptionsImapOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsImapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsImap)(nil)).Elem()
}

func (o GetProfileprotocoloptionsImapOutput) ToGetProfileprotocoloptionsImapOutput() GetProfileprotocoloptionsImapOutput {
	return o
}

func (o GetProfileprotocoloptionsImapOutput) ToGetProfileprotocoloptionsImapOutputWithContext(ctx context.Context) GetProfileprotocoloptionsImapOutput {
	return o
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetProfileprotocoloptionsImapOutput) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsImap) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetProfileprotocoloptionsImapOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsImap) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetProfileprotocoloptionsImapOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsImap) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetProfileprotocoloptionsImapOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsImap) int { return v.Ports }).(pulumi.IntOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before).
func (o GetProfileprotocoloptionsImapOutput) ProxyAfterTcpHandshake() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsImap) string { return v.ProxyAfterTcpHandshake }).(pulumi.StringOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetProfileprotocoloptionsImapOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsImap) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetProfileprotocoloptionsImapOutput) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsImap) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetProfileprotocoloptionsImapOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsImap) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetProfileprotocoloptionsImapOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsImap) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetProfileprotocoloptionsImapOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsImap) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetProfileprotocoloptionsImapArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsImapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsImap)(nil)).Elem()
}

func (o GetProfileprotocoloptionsImapArrayOutput) ToGetProfileprotocoloptionsImapArrayOutput() GetProfileprotocoloptionsImapArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsImapArrayOutput) ToGetProfileprotocoloptionsImapArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsImapArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsImapArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsImapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsImap {
		return vs[0].([]GetProfileprotocoloptionsImap)[vs[1].(int)]
	}).(GetProfileprotocoloptionsImapOutput)
}

type GetProfileprotocoloptionsMailSignature struct {
	// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
	Signature string `pulumi:"signature"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
}

// GetProfileprotocoloptionsMailSignatureInput is an input type that accepts GetProfileprotocoloptionsMailSignatureArgs and GetProfileprotocoloptionsMailSignatureOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsMailSignatureInput` via:
//
//	GetProfileprotocoloptionsMailSignatureArgs{...}
type GetProfileprotocoloptionsMailSignatureInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsMailSignatureOutput() GetProfileprotocoloptionsMailSignatureOutput
	ToGetProfileprotocoloptionsMailSignatureOutputWithContext(context.Context) GetProfileprotocoloptionsMailSignatureOutput
}

type GetProfileprotocoloptionsMailSignatureArgs struct {
	// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
	Signature pulumi.StringInput `pulumi:"signature"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetProfileprotocoloptionsMailSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (i GetProfileprotocoloptionsMailSignatureArgs) ToGetProfileprotocoloptionsMailSignatureOutput() GetProfileprotocoloptionsMailSignatureOutput {
	return i.ToGetProfileprotocoloptionsMailSignatureOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsMailSignatureArgs) ToGetProfileprotocoloptionsMailSignatureOutputWithContext(ctx context.Context) GetProfileprotocoloptionsMailSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsMailSignatureOutput)
}

// GetProfileprotocoloptionsMailSignatureArrayInput is an input type that accepts GetProfileprotocoloptionsMailSignatureArray and GetProfileprotocoloptionsMailSignatureArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsMailSignatureArrayInput` via:
//
//	GetProfileprotocoloptionsMailSignatureArray{ GetProfileprotocoloptionsMailSignatureArgs{...} }
type GetProfileprotocoloptionsMailSignatureArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsMailSignatureArrayOutput() GetProfileprotocoloptionsMailSignatureArrayOutput
	ToGetProfileprotocoloptionsMailSignatureArrayOutputWithContext(context.Context) GetProfileprotocoloptionsMailSignatureArrayOutput
}

type GetProfileprotocoloptionsMailSignatureArray []GetProfileprotocoloptionsMailSignatureInput

func (GetProfileprotocoloptionsMailSignatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (i GetProfileprotocoloptionsMailSignatureArray) ToGetProfileprotocoloptionsMailSignatureArrayOutput() GetProfileprotocoloptionsMailSignatureArrayOutput {
	return i.ToGetProfileprotocoloptionsMailSignatureArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsMailSignatureArray) ToGetProfileprotocoloptionsMailSignatureArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsMailSignatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsMailSignatureArrayOutput)
}

type GetProfileprotocoloptionsMailSignatureOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsMailSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (o GetProfileprotocoloptionsMailSignatureOutput) ToGetProfileprotocoloptionsMailSignatureOutput() GetProfileprotocoloptionsMailSignatureOutput {
	return o
}

func (o GetProfileprotocoloptionsMailSignatureOutput) ToGetProfileprotocoloptionsMailSignatureOutputWithContext(ctx context.Context) GetProfileprotocoloptionsMailSignatureOutput {
	return o
}

// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
func (o GetProfileprotocoloptionsMailSignatureOutput) Signature() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsMailSignature) string { return v.Signature }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetProfileprotocoloptionsMailSignatureOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsMailSignature) string { return v.Status }).(pulumi.StringOutput)
}

type GetProfileprotocoloptionsMailSignatureArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsMailSignatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (o GetProfileprotocoloptionsMailSignatureArrayOutput) ToGetProfileprotocoloptionsMailSignatureArrayOutput() GetProfileprotocoloptionsMailSignatureArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsMailSignatureArrayOutput) ToGetProfileprotocoloptionsMailSignatureArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsMailSignatureArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsMailSignatureArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsMailSignatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsMailSignature {
		return vs[0].([]GetProfileprotocoloptionsMailSignature)[vs[1].(int)]
	}).(GetProfileprotocoloptionsMailSignatureOutput)
}

type GetProfileprotocoloptionsMapi struct {
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetProfileprotocoloptionsMapiInput is an input type that accepts GetProfileprotocoloptionsMapiArgs and GetProfileprotocoloptionsMapiOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsMapiInput` via:
//
//	GetProfileprotocoloptionsMapiArgs{...}
type GetProfileprotocoloptionsMapiInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsMapiOutput() GetProfileprotocoloptionsMapiOutput
	ToGetProfileprotocoloptionsMapiOutputWithContext(context.Context) GetProfileprotocoloptionsMapiOutput
}

type GetProfileprotocoloptionsMapiArgs struct {
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetProfileprotocoloptionsMapiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsMapi)(nil)).Elem()
}

func (i GetProfileprotocoloptionsMapiArgs) ToGetProfileprotocoloptionsMapiOutput() GetProfileprotocoloptionsMapiOutput {
	return i.ToGetProfileprotocoloptionsMapiOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsMapiArgs) ToGetProfileprotocoloptionsMapiOutputWithContext(ctx context.Context) GetProfileprotocoloptionsMapiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsMapiOutput)
}

// GetProfileprotocoloptionsMapiArrayInput is an input type that accepts GetProfileprotocoloptionsMapiArray and GetProfileprotocoloptionsMapiArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsMapiArrayInput` via:
//
//	GetProfileprotocoloptionsMapiArray{ GetProfileprotocoloptionsMapiArgs{...} }
type GetProfileprotocoloptionsMapiArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsMapiArrayOutput() GetProfileprotocoloptionsMapiArrayOutput
	ToGetProfileprotocoloptionsMapiArrayOutputWithContext(context.Context) GetProfileprotocoloptionsMapiArrayOutput
}

type GetProfileprotocoloptionsMapiArray []GetProfileprotocoloptionsMapiInput

func (GetProfileprotocoloptionsMapiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsMapi)(nil)).Elem()
}

func (i GetProfileprotocoloptionsMapiArray) ToGetProfileprotocoloptionsMapiArrayOutput() GetProfileprotocoloptionsMapiArrayOutput {
	return i.ToGetProfileprotocoloptionsMapiArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsMapiArray) ToGetProfileprotocoloptionsMapiArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsMapiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsMapiArrayOutput)
}

type GetProfileprotocoloptionsMapiOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsMapiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsMapi)(nil)).Elem()
}

func (o GetProfileprotocoloptionsMapiOutput) ToGetProfileprotocoloptionsMapiOutput() GetProfileprotocoloptionsMapiOutput {
	return o
}

func (o GetProfileprotocoloptionsMapiOutput) ToGetProfileprotocoloptionsMapiOutputWithContext(ctx context.Context) GetProfileprotocoloptionsMapiOutput {
	return o
}

// One or more options that can be applied to the session.
func (o GetProfileprotocoloptionsMapiOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsMapi) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetProfileprotocoloptionsMapiOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsMapi) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetProfileprotocoloptionsMapiOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsMapi) int { return v.Ports }).(pulumi.IntOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetProfileprotocoloptionsMapiOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsMapi) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetProfileprotocoloptionsMapiOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsMapi) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetProfileprotocoloptionsMapiOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsMapi) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetProfileprotocoloptionsMapiOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsMapi) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetProfileprotocoloptionsMapiArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsMapiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsMapi)(nil)).Elem()
}

func (o GetProfileprotocoloptionsMapiArrayOutput) ToGetProfileprotocoloptionsMapiArrayOutput() GetProfileprotocoloptionsMapiArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsMapiArrayOutput) ToGetProfileprotocoloptionsMapiArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsMapiArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsMapiArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsMapiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsMapi {
		return vs[0].([]GetProfileprotocoloptionsMapi)[vs[1].(int)]
	}).(GetProfileprotocoloptionsMapiOutput)
}

type GetProfileprotocoloptionsNntp struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetProfileprotocoloptionsNntpInput is an input type that accepts GetProfileprotocoloptionsNntpArgs and GetProfileprotocoloptionsNntpOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsNntpInput` via:
//
//	GetProfileprotocoloptionsNntpArgs{...}
type GetProfileprotocoloptionsNntpInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsNntpOutput() GetProfileprotocoloptionsNntpOutput
	ToGetProfileprotocoloptionsNntpOutputWithContext(context.Context) GetProfileprotocoloptionsNntpOutput
}

type GetProfileprotocoloptionsNntpArgs struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake pulumi.StringInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetProfileprotocoloptionsNntpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsNntp)(nil)).Elem()
}

func (i GetProfileprotocoloptionsNntpArgs) ToGetProfileprotocoloptionsNntpOutput() GetProfileprotocoloptionsNntpOutput {
	return i.ToGetProfileprotocoloptionsNntpOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsNntpArgs) ToGetProfileprotocoloptionsNntpOutputWithContext(ctx context.Context) GetProfileprotocoloptionsNntpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsNntpOutput)
}

// GetProfileprotocoloptionsNntpArrayInput is an input type that accepts GetProfileprotocoloptionsNntpArray and GetProfileprotocoloptionsNntpArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsNntpArrayInput` via:
//
//	GetProfileprotocoloptionsNntpArray{ GetProfileprotocoloptionsNntpArgs{...} }
type GetProfileprotocoloptionsNntpArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsNntpArrayOutput() GetProfileprotocoloptionsNntpArrayOutput
	ToGetProfileprotocoloptionsNntpArrayOutputWithContext(context.Context) GetProfileprotocoloptionsNntpArrayOutput
}

type GetProfileprotocoloptionsNntpArray []GetProfileprotocoloptionsNntpInput

func (GetProfileprotocoloptionsNntpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsNntp)(nil)).Elem()
}

func (i GetProfileprotocoloptionsNntpArray) ToGetProfileprotocoloptionsNntpArrayOutput() GetProfileprotocoloptionsNntpArrayOutput {
	return i.ToGetProfileprotocoloptionsNntpArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsNntpArray) ToGetProfileprotocoloptionsNntpArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsNntpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsNntpArrayOutput)
}

type GetProfileprotocoloptionsNntpOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsNntpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsNntp)(nil)).Elem()
}

func (o GetProfileprotocoloptionsNntpOutput) ToGetProfileprotocoloptionsNntpOutput() GetProfileprotocoloptionsNntpOutput {
	return o
}

func (o GetProfileprotocoloptionsNntpOutput) ToGetProfileprotocoloptionsNntpOutputWithContext(ctx context.Context) GetProfileprotocoloptionsNntpOutput {
	return o
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetProfileprotocoloptionsNntpOutput) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsNntp) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetProfileprotocoloptionsNntpOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsNntp) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetProfileprotocoloptionsNntpOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsNntp) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetProfileprotocoloptionsNntpOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsNntp) int { return v.Ports }).(pulumi.IntOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before).
func (o GetProfileprotocoloptionsNntpOutput) ProxyAfterTcpHandshake() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsNntp) string { return v.ProxyAfterTcpHandshake }).(pulumi.StringOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetProfileprotocoloptionsNntpOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsNntp) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetProfileprotocoloptionsNntpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsNntp) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetProfileprotocoloptionsNntpOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsNntp) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetProfileprotocoloptionsNntpOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsNntp) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetProfileprotocoloptionsNntpArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsNntpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsNntp)(nil)).Elem()
}

func (o GetProfileprotocoloptionsNntpArrayOutput) ToGetProfileprotocoloptionsNntpArrayOutput() GetProfileprotocoloptionsNntpArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsNntpArrayOutput) ToGetProfileprotocoloptionsNntpArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsNntpArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsNntpArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsNntpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsNntp {
		return vs[0].([]GetProfileprotocoloptionsNntp)[vs[1].(int)]
	}).(GetProfileprotocoloptionsNntpOutput)
}

type GetProfileprotocoloptionsPop3 struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetProfileprotocoloptionsPop3Input is an input type that accepts GetProfileprotocoloptionsPop3Args and GetProfileprotocoloptionsPop3Output values.
// You can construct a concrete instance of `GetProfileprotocoloptionsPop3Input` via:
//
//	GetProfileprotocoloptionsPop3Args{...}
type GetProfileprotocoloptionsPop3Input interface {
	pulumi.Input

	ToGetProfileprotocoloptionsPop3Output() GetProfileprotocoloptionsPop3Output
	ToGetProfileprotocoloptionsPop3OutputWithContext(context.Context) GetProfileprotocoloptionsPop3Output
}

type GetProfileprotocoloptionsPop3Args struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake pulumi.StringInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetProfileprotocoloptionsPop3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsPop3)(nil)).Elem()
}

func (i GetProfileprotocoloptionsPop3Args) ToGetProfileprotocoloptionsPop3Output() GetProfileprotocoloptionsPop3Output {
	return i.ToGetProfileprotocoloptionsPop3OutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsPop3Args) ToGetProfileprotocoloptionsPop3OutputWithContext(ctx context.Context) GetProfileprotocoloptionsPop3Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsPop3Output)
}

// GetProfileprotocoloptionsPop3ArrayInput is an input type that accepts GetProfileprotocoloptionsPop3Array and GetProfileprotocoloptionsPop3ArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsPop3ArrayInput` via:
//
//	GetProfileprotocoloptionsPop3Array{ GetProfileprotocoloptionsPop3Args{...} }
type GetProfileprotocoloptionsPop3ArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsPop3ArrayOutput() GetProfileprotocoloptionsPop3ArrayOutput
	ToGetProfileprotocoloptionsPop3ArrayOutputWithContext(context.Context) GetProfileprotocoloptionsPop3ArrayOutput
}

type GetProfileprotocoloptionsPop3Array []GetProfileprotocoloptionsPop3Input

func (GetProfileprotocoloptionsPop3Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsPop3)(nil)).Elem()
}

func (i GetProfileprotocoloptionsPop3Array) ToGetProfileprotocoloptionsPop3ArrayOutput() GetProfileprotocoloptionsPop3ArrayOutput {
	return i.ToGetProfileprotocoloptionsPop3ArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsPop3Array) ToGetProfileprotocoloptionsPop3ArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsPop3ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsPop3ArrayOutput)
}

type GetProfileprotocoloptionsPop3Output struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsPop3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsPop3)(nil)).Elem()
}

func (o GetProfileprotocoloptionsPop3Output) ToGetProfileprotocoloptionsPop3Output() GetProfileprotocoloptionsPop3Output {
	return o
}

func (o GetProfileprotocoloptionsPop3Output) ToGetProfileprotocoloptionsPop3OutputWithContext(ctx context.Context) GetProfileprotocoloptionsPop3Output {
	return o
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetProfileprotocoloptionsPop3Output) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsPop3) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetProfileprotocoloptionsPop3Output) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsPop3) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetProfileprotocoloptionsPop3Output) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsPop3) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetProfileprotocoloptionsPop3Output) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsPop3) int { return v.Ports }).(pulumi.IntOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before).
func (o GetProfileprotocoloptionsPop3Output) ProxyAfterTcpHandshake() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsPop3) string { return v.ProxyAfterTcpHandshake }).(pulumi.StringOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetProfileprotocoloptionsPop3Output) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsPop3) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetProfileprotocoloptionsPop3Output) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsPop3) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetProfileprotocoloptionsPop3Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsPop3) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetProfileprotocoloptionsPop3Output) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsPop3) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetProfileprotocoloptionsPop3Output) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsPop3) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetProfileprotocoloptionsPop3ArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsPop3ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsPop3)(nil)).Elem()
}

func (o GetProfileprotocoloptionsPop3ArrayOutput) ToGetProfileprotocoloptionsPop3ArrayOutput() GetProfileprotocoloptionsPop3ArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsPop3ArrayOutput) ToGetProfileprotocoloptionsPop3ArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsPop3ArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsPop3ArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsPop3Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsPop3 {
		return vs[0].([]GetProfileprotocoloptionsPop3)[vs[1].(int)]
	}).(GetProfileprotocoloptionsPop3Output)
}

type GetProfileprotocoloptionsSmtp struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// Enable/disable SMTP server busy when server not available.
	ServerBusy string `pulumi:"serverBusy"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetProfileprotocoloptionsSmtpInput is an input type that accepts GetProfileprotocoloptionsSmtpArgs and GetProfileprotocoloptionsSmtpOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsSmtpInput` via:
//
//	GetProfileprotocoloptionsSmtpArgs{...}
type GetProfileprotocoloptionsSmtpInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsSmtpOutput() GetProfileprotocoloptionsSmtpOutput
	ToGetProfileprotocoloptionsSmtpOutputWithContext(context.Context) GetProfileprotocoloptionsSmtpOutput
}

type GetProfileprotocoloptionsSmtpArgs struct {
	// Enable/disable the inspection of all ports for the protocol.
	InspectAll pulumi.StringInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before).
	ProxyAfterTcpHandshake pulumi.StringInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// Enable/disable SMTP server busy when server not available.
	ServerBusy pulumi.StringInput `pulumi:"serverBusy"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
	Status pulumi.StringInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetProfileprotocoloptionsSmtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (i GetProfileprotocoloptionsSmtpArgs) ToGetProfileprotocoloptionsSmtpOutput() GetProfileprotocoloptionsSmtpOutput {
	return i.ToGetProfileprotocoloptionsSmtpOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsSmtpArgs) ToGetProfileprotocoloptionsSmtpOutputWithContext(ctx context.Context) GetProfileprotocoloptionsSmtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsSmtpOutput)
}

// GetProfileprotocoloptionsSmtpArrayInput is an input type that accepts GetProfileprotocoloptionsSmtpArray and GetProfileprotocoloptionsSmtpArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsSmtpArrayInput` via:
//
//	GetProfileprotocoloptionsSmtpArray{ GetProfileprotocoloptionsSmtpArgs{...} }
type GetProfileprotocoloptionsSmtpArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsSmtpArrayOutput() GetProfileprotocoloptionsSmtpArrayOutput
	ToGetProfileprotocoloptionsSmtpArrayOutputWithContext(context.Context) GetProfileprotocoloptionsSmtpArrayOutput
}

type GetProfileprotocoloptionsSmtpArray []GetProfileprotocoloptionsSmtpInput

func (GetProfileprotocoloptionsSmtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (i GetProfileprotocoloptionsSmtpArray) ToGetProfileprotocoloptionsSmtpArrayOutput() GetProfileprotocoloptionsSmtpArrayOutput {
	return i.ToGetProfileprotocoloptionsSmtpArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsSmtpArray) ToGetProfileprotocoloptionsSmtpArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsSmtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsSmtpArrayOutput)
}

type GetProfileprotocoloptionsSmtpOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsSmtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (o GetProfileprotocoloptionsSmtpOutput) ToGetProfileprotocoloptionsSmtpOutput() GetProfileprotocoloptionsSmtpOutput {
	return o
}

func (o GetProfileprotocoloptionsSmtpOutput) ToGetProfileprotocoloptionsSmtpOutputWithContext(ctx context.Context) GetProfileprotocoloptionsSmtpOutput {
	return o
}

// Enable/disable the inspection of all ports for the protocol.
func (o GetProfileprotocoloptionsSmtpOutput) InspectAll() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSmtp) string { return v.InspectAll }).(pulumi.StringOutput)
}

// One or more options that can be applied to the session.
func (o GetProfileprotocoloptionsSmtpOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSmtp) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetProfileprotocoloptionsSmtpOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSmtp) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o GetProfileprotocoloptionsSmtpOutput) Ports() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSmtp) int { return v.Ports }).(pulumi.IntOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before).
func (o GetProfileprotocoloptionsSmtpOutput) ProxyAfterTcpHandshake() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSmtp) string { return v.ProxyAfterTcpHandshake }).(pulumi.StringOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetProfileprotocoloptionsSmtpOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSmtp) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// Enable/disable SMTP server busy when server not available.
func (o GetProfileprotocoloptionsSmtpOutput) ServerBusy() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSmtp) string { return v.ServerBusy }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetProfileprotocoloptionsSmtpOutput) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSmtp) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate.
func (o GetProfileprotocoloptionsSmtpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSmtp) string { return v.Status }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetProfileprotocoloptionsSmtpOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSmtp) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetProfileprotocoloptionsSmtpOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSmtp) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetProfileprotocoloptionsSmtpArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsSmtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (o GetProfileprotocoloptionsSmtpArrayOutput) ToGetProfileprotocoloptionsSmtpArrayOutput() GetProfileprotocoloptionsSmtpArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsSmtpArrayOutput) ToGetProfileprotocoloptionsSmtpArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsSmtpArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsSmtpArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsSmtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsSmtp {
		return vs[0].([]GetProfileprotocoloptionsSmtp)[vs[1].(int)]
	}).(GetProfileprotocoloptionsSmtpOutput)
}

type GetProfileprotocoloptionsSsh struct {
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount int `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval int `pulumi:"comfortInterval"`
	// One or more options that can be applied to the session.
	Options string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit int `pulumi:"oversizeLimit"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded string `pulumi:"sslOffloaded"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit int `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit int `pulumi:"uncompressedOversizeLimit"`
}

// GetProfileprotocoloptionsSshInput is an input type that accepts GetProfileprotocoloptionsSshArgs and GetProfileprotocoloptionsSshOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsSshInput` via:
//
//	GetProfileprotocoloptionsSshArgs{...}
type GetProfileprotocoloptionsSshInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsSshOutput() GetProfileprotocoloptionsSshOutput
	ToGetProfileprotocoloptionsSshOutputWithContext(context.Context) GetProfileprotocoloptionsSshOutput
}

type GetProfileprotocoloptionsSshArgs struct {
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount pulumi.IntInput `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval pulumi.IntInput `pulumi:"comfortInterval"`
	// One or more options that can be applied to the session.
	Options pulumi.StringInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntInput `pulumi:"oversizeLimit"`
	// Enable/disable scanning of BZip2 compressed files.
	ScanBzip2 pulumi.StringInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device.
	SslOffloaded pulumi.StringInput `pulumi:"sslOffloaded"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit pulumi.IntInput `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum pulumi.IntInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum pulumi.IntInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize pulumi.IntInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntInput `pulumi:"uncompressedOversizeLimit"`
}

func (GetProfileprotocoloptionsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsSsh)(nil)).Elem()
}

func (i GetProfileprotocoloptionsSshArgs) ToGetProfileprotocoloptionsSshOutput() GetProfileprotocoloptionsSshOutput {
	return i.ToGetProfileprotocoloptionsSshOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsSshArgs) ToGetProfileprotocoloptionsSshOutputWithContext(ctx context.Context) GetProfileprotocoloptionsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsSshOutput)
}

// GetProfileprotocoloptionsSshArrayInput is an input type that accepts GetProfileprotocoloptionsSshArray and GetProfileprotocoloptionsSshArrayOutput values.
// You can construct a concrete instance of `GetProfileprotocoloptionsSshArrayInput` via:
//
//	GetProfileprotocoloptionsSshArray{ GetProfileprotocoloptionsSshArgs{...} }
type GetProfileprotocoloptionsSshArrayInput interface {
	pulumi.Input

	ToGetProfileprotocoloptionsSshArrayOutput() GetProfileprotocoloptionsSshArrayOutput
	ToGetProfileprotocoloptionsSshArrayOutputWithContext(context.Context) GetProfileprotocoloptionsSshArrayOutput
}

type GetProfileprotocoloptionsSshArray []GetProfileprotocoloptionsSshInput

func (GetProfileprotocoloptionsSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsSsh)(nil)).Elem()
}

func (i GetProfileprotocoloptionsSshArray) ToGetProfileprotocoloptionsSshArrayOutput() GetProfileprotocoloptionsSshArrayOutput {
	return i.ToGetProfileprotocoloptionsSshArrayOutputWithContext(context.Background())
}

func (i GetProfileprotocoloptionsSshArray) ToGetProfileprotocoloptionsSshArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProfileprotocoloptionsSshArrayOutput)
}

type GetProfileprotocoloptionsSshOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProfileprotocoloptionsSsh)(nil)).Elem()
}

func (o GetProfileprotocoloptionsSshOutput) ToGetProfileprotocoloptionsSshOutput() GetProfileprotocoloptionsSshOutput {
	return o
}

func (o GetProfileprotocoloptionsSshOutput) ToGetProfileprotocoloptionsSshOutputWithContext(ctx context.Context) GetProfileprotocoloptionsSshOutput {
	return o
}

// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
func (o GetProfileprotocoloptionsSshOutput) ComfortAmount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) int { return v.ComfortAmount }).(pulumi.IntOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o GetProfileprotocoloptionsSshOutput) ComfortInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) int { return v.ComfortInterval }).(pulumi.IntOutput)
}

// One or more options that can be applied to the session.
func (o GetProfileprotocoloptionsSshOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) string { return v.Options }).(pulumi.StringOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o GetProfileprotocoloptionsSshOutput) OversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) int { return v.OversizeLimit }).(pulumi.IntOutput)
}

// Enable/disable scanning of BZip2 compressed files.
func (o GetProfileprotocoloptionsSshOutput) ScanBzip2() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) string { return v.ScanBzip2 }).(pulumi.StringOutput)
}

// SSL decryption and encryption performed by an external device.
func (o GetProfileprotocoloptionsSshOutput) SslOffloaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) string { return v.SslOffloaded }).(pulumi.StringOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o GetProfileprotocoloptionsSshOutput) StreamBasedUncompressedLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) int { return v.StreamBasedUncompressedLimit }).(pulumi.IntOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o GetProfileprotocoloptionsSshOutput) TcpWindowMaximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) int { return v.TcpWindowMaximum }).(pulumi.IntOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o GetProfileprotocoloptionsSshOutput) TcpWindowMinimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) int { return v.TcpWindowMinimum }).(pulumi.IntOutput)
}

// Set TCP static window size (default = 256KB).
func (o GetProfileprotocoloptionsSshOutput) TcpWindowSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) int { return v.TcpWindowSize }).(pulumi.IntOutput)
}

// Specify type of TCP window to use for this protocol.
func (o GetProfileprotocoloptionsSshOutput) TcpWindowType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) string { return v.TcpWindowType }).(pulumi.StringOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o GetProfileprotocoloptionsSshOutput) UncompressedNestLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) int { return v.UncompressedNestLimit }).(pulumi.IntOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o GetProfileprotocoloptionsSshOutput) UncompressedOversizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProfileprotocoloptionsSsh) int { return v.UncompressedOversizeLimit }).(pulumi.IntOutput)
}

type GetProfileprotocoloptionsSshArrayOutput struct{ *pulumi.OutputState }

func (GetProfileprotocoloptionsSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProfileprotocoloptionsSsh)(nil)).Elem()
}

func (o GetProfileprotocoloptionsSshArrayOutput) ToGetProfileprotocoloptionsSshArrayOutput() GetProfileprotocoloptionsSshArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsSshArrayOutput) ToGetProfileprotocoloptionsSshArrayOutputWithContext(ctx context.Context) GetProfileprotocoloptionsSshArrayOutput {
	return o
}

func (o GetProfileprotocoloptionsSshArrayOutput) Index(i pulumi.IntInput) GetProfileprotocoloptionsSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProfileprotocoloptionsSsh {
		return vs[0].([]GetProfileprotocoloptionsSsh)[vs[1].(int)]
	}).(GetProfileprotocoloptionsSshOutput)
}

type GetProxyaddressApplication struct {
	// Specify the name of the desired firewall proxyaddress.
	Name string `pulumi:"name"`
}

// GetProxyaddressApplicationInput is an input type that accepts GetProxyaddressApplicationArgs and GetProxyaddressApplicationOutput values.
// You can construct a concrete instance of `GetProxyaddressApplicationInput` via:
//
//	GetProxyaddressApplicationArgs{...}
type GetProxyaddressApplicationInput interface {
	pulumi.Input

	ToGetProxyaddressApplicationOutput() GetProxyaddressApplicationOutput
	ToGetProxyaddressApplicationOutputWithContext(context.Context) GetProxyaddressApplicationOutput
}

type GetProxyaddressApplicationArgs struct {
	// Specify the name of the desired firewall proxyaddress.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxyaddressApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddressApplication)(nil)).Elem()
}

func (i GetProxyaddressApplicationArgs) ToGetProxyaddressApplicationOutput() GetProxyaddressApplicationOutput {
	return i.ToGetProxyaddressApplicationOutputWithContext(context.Background())
}

func (i GetProxyaddressApplicationArgs) ToGetProxyaddressApplicationOutputWithContext(ctx context.Context) GetProxyaddressApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddressApplicationOutput)
}

// GetProxyaddressApplicationArrayInput is an input type that accepts GetProxyaddressApplicationArray and GetProxyaddressApplicationArrayOutput values.
// You can construct a concrete instance of `GetProxyaddressApplicationArrayInput` via:
//
//	GetProxyaddressApplicationArray{ GetProxyaddressApplicationArgs{...} }
type GetProxyaddressApplicationArrayInput interface {
	pulumi.Input

	ToGetProxyaddressApplicationArrayOutput() GetProxyaddressApplicationArrayOutput
	ToGetProxyaddressApplicationArrayOutputWithContext(context.Context) GetProxyaddressApplicationArrayOutput
}

type GetProxyaddressApplicationArray []GetProxyaddressApplicationInput

func (GetProxyaddressApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddressApplication)(nil)).Elem()
}

func (i GetProxyaddressApplicationArray) ToGetProxyaddressApplicationArrayOutput() GetProxyaddressApplicationArrayOutput {
	return i.ToGetProxyaddressApplicationArrayOutputWithContext(context.Background())
}

func (i GetProxyaddressApplicationArray) ToGetProxyaddressApplicationArrayOutputWithContext(ctx context.Context) GetProxyaddressApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddressApplicationArrayOutput)
}

type GetProxyaddressApplicationOutput struct{ *pulumi.OutputState }

func (GetProxyaddressApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddressApplication)(nil)).Elem()
}

func (o GetProxyaddressApplicationOutput) ToGetProxyaddressApplicationOutput() GetProxyaddressApplicationOutput {
	return o
}

func (o GetProxyaddressApplicationOutput) ToGetProxyaddressApplicationOutputWithContext(ctx context.Context) GetProxyaddressApplicationOutput {
	return o
}

// Specify the name of the desired firewall proxyaddress.
func (o GetProxyaddressApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyaddressApplication) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxyaddressApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetProxyaddressApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddressApplication)(nil)).Elem()
}

func (o GetProxyaddressApplicationArrayOutput) ToGetProxyaddressApplicationArrayOutput() GetProxyaddressApplicationArrayOutput {
	return o
}

func (o GetProxyaddressApplicationArrayOutput) ToGetProxyaddressApplicationArrayOutputWithContext(ctx context.Context) GetProxyaddressApplicationArrayOutput {
	return o
}

func (o GetProxyaddressApplicationArrayOutput) Index(i pulumi.IntInput) GetProxyaddressApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxyaddressApplication {
		return vs[0].([]GetProxyaddressApplication)[vs[1].(int)]
	}).(GetProxyaddressApplicationOutput)
}

type GetProxyaddressCategory struct {
	// ID.
	Id int `pulumi:"id"`
}

// GetProxyaddressCategoryInput is an input type that accepts GetProxyaddressCategoryArgs and GetProxyaddressCategoryOutput values.
// You can construct a concrete instance of `GetProxyaddressCategoryInput` via:
//
//	GetProxyaddressCategoryArgs{...}
type GetProxyaddressCategoryInput interface {
	pulumi.Input

	ToGetProxyaddressCategoryOutput() GetProxyaddressCategoryOutput
	ToGetProxyaddressCategoryOutputWithContext(context.Context) GetProxyaddressCategoryOutput
}

type GetProxyaddressCategoryArgs struct {
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetProxyaddressCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddressCategory)(nil)).Elem()
}

func (i GetProxyaddressCategoryArgs) ToGetProxyaddressCategoryOutput() GetProxyaddressCategoryOutput {
	return i.ToGetProxyaddressCategoryOutputWithContext(context.Background())
}

func (i GetProxyaddressCategoryArgs) ToGetProxyaddressCategoryOutputWithContext(ctx context.Context) GetProxyaddressCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddressCategoryOutput)
}

// GetProxyaddressCategoryArrayInput is an input type that accepts GetProxyaddressCategoryArray and GetProxyaddressCategoryArrayOutput values.
// You can construct a concrete instance of `GetProxyaddressCategoryArrayInput` via:
//
//	GetProxyaddressCategoryArray{ GetProxyaddressCategoryArgs{...} }
type GetProxyaddressCategoryArrayInput interface {
	pulumi.Input

	ToGetProxyaddressCategoryArrayOutput() GetProxyaddressCategoryArrayOutput
	ToGetProxyaddressCategoryArrayOutputWithContext(context.Context) GetProxyaddressCategoryArrayOutput
}

type GetProxyaddressCategoryArray []GetProxyaddressCategoryInput

func (GetProxyaddressCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddressCategory)(nil)).Elem()
}

func (i GetProxyaddressCategoryArray) ToGetProxyaddressCategoryArrayOutput() GetProxyaddressCategoryArrayOutput {
	return i.ToGetProxyaddressCategoryArrayOutputWithContext(context.Background())
}

func (i GetProxyaddressCategoryArray) ToGetProxyaddressCategoryArrayOutputWithContext(ctx context.Context) GetProxyaddressCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddressCategoryArrayOutput)
}

type GetProxyaddressCategoryOutput struct{ *pulumi.OutputState }

func (GetProxyaddressCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddressCategory)(nil)).Elem()
}

func (o GetProxyaddressCategoryOutput) ToGetProxyaddressCategoryOutput() GetProxyaddressCategoryOutput {
	return o
}

func (o GetProxyaddressCategoryOutput) ToGetProxyaddressCategoryOutputWithContext(ctx context.Context) GetProxyaddressCategoryOutput {
	return o
}

// ID.
func (o GetProxyaddressCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetProxyaddressCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetProxyaddressCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetProxyaddressCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddressCategory)(nil)).Elem()
}

func (o GetProxyaddressCategoryArrayOutput) ToGetProxyaddressCategoryArrayOutput() GetProxyaddressCategoryArrayOutput {
	return o
}

func (o GetProxyaddressCategoryArrayOutput) ToGetProxyaddressCategoryArrayOutputWithContext(ctx context.Context) GetProxyaddressCategoryArrayOutput {
	return o
}

func (o GetProxyaddressCategoryArrayOutput) Index(i pulumi.IntInput) GetProxyaddressCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxyaddressCategory {
		return vs[0].([]GetProxyaddressCategory)[vs[1].(int)]
	}).(GetProxyaddressCategoryOutput)
}

type GetProxyaddressHeaderGroup struct {
	// Case sensitivity in pattern.
	CaseSensitivity string `pulumi:"caseSensitivity"`
	// HTTP header regular expression.
	Header string `pulumi:"header"`
	// HTTP header.
	HeaderName string `pulumi:"headerName"`
	// ID.
	Id int `pulumi:"id"`
}

// GetProxyaddressHeaderGroupInput is an input type that accepts GetProxyaddressHeaderGroupArgs and GetProxyaddressHeaderGroupOutput values.
// You can construct a concrete instance of `GetProxyaddressHeaderGroupInput` via:
//
//	GetProxyaddressHeaderGroupArgs{...}
type GetProxyaddressHeaderGroupInput interface {
	pulumi.Input

	ToGetProxyaddressHeaderGroupOutput() GetProxyaddressHeaderGroupOutput
	ToGetProxyaddressHeaderGroupOutputWithContext(context.Context) GetProxyaddressHeaderGroupOutput
}

type GetProxyaddressHeaderGroupArgs struct {
	// Case sensitivity in pattern.
	CaseSensitivity pulumi.StringInput `pulumi:"caseSensitivity"`
	// HTTP header regular expression.
	Header pulumi.StringInput `pulumi:"header"`
	// HTTP header.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetProxyaddressHeaderGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddressHeaderGroup)(nil)).Elem()
}

func (i GetProxyaddressHeaderGroupArgs) ToGetProxyaddressHeaderGroupOutput() GetProxyaddressHeaderGroupOutput {
	return i.ToGetProxyaddressHeaderGroupOutputWithContext(context.Background())
}

func (i GetProxyaddressHeaderGroupArgs) ToGetProxyaddressHeaderGroupOutputWithContext(ctx context.Context) GetProxyaddressHeaderGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddressHeaderGroupOutput)
}

// GetProxyaddressHeaderGroupArrayInput is an input type that accepts GetProxyaddressHeaderGroupArray and GetProxyaddressHeaderGroupArrayOutput values.
// You can construct a concrete instance of `GetProxyaddressHeaderGroupArrayInput` via:
//
//	GetProxyaddressHeaderGroupArray{ GetProxyaddressHeaderGroupArgs{...} }
type GetProxyaddressHeaderGroupArrayInput interface {
	pulumi.Input

	ToGetProxyaddressHeaderGroupArrayOutput() GetProxyaddressHeaderGroupArrayOutput
	ToGetProxyaddressHeaderGroupArrayOutputWithContext(context.Context) GetProxyaddressHeaderGroupArrayOutput
}

type GetProxyaddressHeaderGroupArray []GetProxyaddressHeaderGroupInput

func (GetProxyaddressHeaderGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddressHeaderGroup)(nil)).Elem()
}

func (i GetProxyaddressHeaderGroupArray) ToGetProxyaddressHeaderGroupArrayOutput() GetProxyaddressHeaderGroupArrayOutput {
	return i.ToGetProxyaddressHeaderGroupArrayOutputWithContext(context.Background())
}

func (i GetProxyaddressHeaderGroupArray) ToGetProxyaddressHeaderGroupArrayOutputWithContext(ctx context.Context) GetProxyaddressHeaderGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddressHeaderGroupArrayOutput)
}

type GetProxyaddressHeaderGroupOutput struct{ *pulumi.OutputState }

func (GetProxyaddressHeaderGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddressHeaderGroup)(nil)).Elem()
}

func (o GetProxyaddressHeaderGroupOutput) ToGetProxyaddressHeaderGroupOutput() GetProxyaddressHeaderGroupOutput {
	return o
}

func (o GetProxyaddressHeaderGroupOutput) ToGetProxyaddressHeaderGroupOutputWithContext(ctx context.Context) GetProxyaddressHeaderGroupOutput {
	return o
}

// Case sensitivity in pattern.
func (o GetProxyaddressHeaderGroupOutput) CaseSensitivity() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyaddressHeaderGroup) string { return v.CaseSensitivity }).(pulumi.StringOutput)
}

// HTTP header regular expression.
func (o GetProxyaddressHeaderGroupOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyaddressHeaderGroup) string { return v.Header }).(pulumi.StringOutput)
}

// HTTP header.
func (o GetProxyaddressHeaderGroupOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyaddressHeaderGroup) string { return v.HeaderName }).(pulumi.StringOutput)
}

// ID.
func (o GetProxyaddressHeaderGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetProxyaddressHeaderGroup) int { return v.Id }).(pulumi.IntOutput)
}

type GetProxyaddressHeaderGroupArrayOutput struct{ *pulumi.OutputState }

func (GetProxyaddressHeaderGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddressHeaderGroup)(nil)).Elem()
}

func (o GetProxyaddressHeaderGroupArrayOutput) ToGetProxyaddressHeaderGroupArrayOutput() GetProxyaddressHeaderGroupArrayOutput {
	return o
}

func (o GetProxyaddressHeaderGroupArrayOutput) ToGetProxyaddressHeaderGroupArrayOutputWithContext(ctx context.Context) GetProxyaddressHeaderGroupArrayOutput {
	return o
}

func (o GetProxyaddressHeaderGroupArrayOutput) Index(i pulumi.IntInput) GetProxyaddressHeaderGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxyaddressHeaderGroup {
		return vs[0].([]GetProxyaddressHeaderGroup)[vs[1].(int)]
	}).(GetProxyaddressHeaderGroupOutput)
}

type GetProxyaddressTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall proxyaddress.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetProxyaddressTaggingTag `pulumi:"tags"`
}

// GetProxyaddressTaggingInput is an input type that accepts GetProxyaddressTaggingArgs and GetProxyaddressTaggingOutput values.
// You can construct a concrete instance of `GetProxyaddressTaggingInput` via:
//
//	GetProxyaddressTaggingArgs{...}
type GetProxyaddressTaggingInput interface {
	pulumi.Input

	ToGetProxyaddressTaggingOutput() GetProxyaddressTaggingOutput
	ToGetProxyaddressTaggingOutputWithContext(context.Context) GetProxyaddressTaggingOutput
}

type GetProxyaddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall proxyaddress.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetProxyaddressTaggingTagArrayInput `pulumi:"tags"`
}

func (GetProxyaddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddressTagging)(nil)).Elem()
}

func (i GetProxyaddressTaggingArgs) ToGetProxyaddressTaggingOutput() GetProxyaddressTaggingOutput {
	return i.ToGetProxyaddressTaggingOutputWithContext(context.Background())
}

func (i GetProxyaddressTaggingArgs) ToGetProxyaddressTaggingOutputWithContext(ctx context.Context) GetProxyaddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddressTaggingOutput)
}

// GetProxyaddressTaggingArrayInput is an input type that accepts GetProxyaddressTaggingArray and GetProxyaddressTaggingArrayOutput values.
// You can construct a concrete instance of `GetProxyaddressTaggingArrayInput` via:
//
//	GetProxyaddressTaggingArray{ GetProxyaddressTaggingArgs{...} }
type GetProxyaddressTaggingArrayInput interface {
	pulumi.Input

	ToGetProxyaddressTaggingArrayOutput() GetProxyaddressTaggingArrayOutput
	ToGetProxyaddressTaggingArrayOutputWithContext(context.Context) GetProxyaddressTaggingArrayOutput
}

type GetProxyaddressTaggingArray []GetProxyaddressTaggingInput

func (GetProxyaddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddressTagging)(nil)).Elem()
}

func (i GetProxyaddressTaggingArray) ToGetProxyaddressTaggingArrayOutput() GetProxyaddressTaggingArrayOutput {
	return i.ToGetProxyaddressTaggingArrayOutputWithContext(context.Background())
}

func (i GetProxyaddressTaggingArray) ToGetProxyaddressTaggingArrayOutputWithContext(ctx context.Context) GetProxyaddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddressTaggingArrayOutput)
}

type GetProxyaddressTaggingOutput struct{ *pulumi.OutputState }

func (GetProxyaddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddressTagging)(nil)).Elem()
}

func (o GetProxyaddressTaggingOutput) ToGetProxyaddressTaggingOutput() GetProxyaddressTaggingOutput {
	return o
}

func (o GetProxyaddressTaggingOutput) ToGetProxyaddressTaggingOutputWithContext(ctx context.Context) GetProxyaddressTaggingOutput {
	return o
}

// Tag category.
func (o GetProxyaddressTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyaddressTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall proxyaddress.
func (o GetProxyaddressTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyaddressTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetProxyaddressTaggingOutput) Tags() GetProxyaddressTaggingTagArrayOutput {
	return o.ApplyT(func(v GetProxyaddressTagging) []GetProxyaddressTaggingTag { return v.Tags }).(GetProxyaddressTaggingTagArrayOutput)
}

type GetProxyaddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetProxyaddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddressTagging)(nil)).Elem()
}

func (o GetProxyaddressTaggingArrayOutput) ToGetProxyaddressTaggingArrayOutput() GetProxyaddressTaggingArrayOutput {
	return o
}

func (o GetProxyaddressTaggingArrayOutput) ToGetProxyaddressTaggingArrayOutputWithContext(ctx context.Context) GetProxyaddressTaggingArrayOutput {
	return o
}

func (o GetProxyaddressTaggingArrayOutput) Index(i pulumi.IntInput) GetProxyaddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxyaddressTagging {
		return vs[0].([]GetProxyaddressTagging)[vs[1].(int)]
	}).(GetProxyaddressTaggingOutput)
}

type GetProxyaddressTaggingTag struct {
	// Specify the name of the desired firewall proxyaddress.
	Name string `pulumi:"name"`
}

// GetProxyaddressTaggingTagInput is an input type that accepts GetProxyaddressTaggingTagArgs and GetProxyaddressTaggingTagOutput values.
// You can construct a concrete instance of `GetProxyaddressTaggingTagInput` via:
//
//	GetProxyaddressTaggingTagArgs{...}
type GetProxyaddressTaggingTagInput interface {
	pulumi.Input

	ToGetProxyaddressTaggingTagOutput() GetProxyaddressTaggingTagOutput
	ToGetProxyaddressTaggingTagOutputWithContext(context.Context) GetProxyaddressTaggingTagOutput
}

type GetProxyaddressTaggingTagArgs struct {
	// Specify the name of the desired firewall proxyaddress.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxyaddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddressTaggingTag)(nil)).Elem()
}

func (i GetProxyaddressTaggingTagArgs) ToGetProxyaddressTaggingTagOutput() GetProxyaddressTaggingTagOutput {
	return i.ToGetProxyaddressTaggingTagOutputWithContext(context.Background())
}

func (i GetProxyaddressTaggingTagArgs) ToGetProxyaddressTaggingTagOutputWithContext(ctx context.Context) GetProxyaddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddressTaggingTagOutput)
}

// GetProxyaddressTaggingTagArrayInput is an input type that accepts GetProxyaddressTaggingTagArray and GetProxyaddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetProxyaddressTaggingTagArrayInput` via:
//
//	GetProxyaddressTaggingTagArray{ GetProxyaddressTaggingTagArgs{...} }
type GetProxyaddressTaggingTagArrayInput interface {
	pulumi.Input

	ToGetProxyaddressTaggingTagArrayOutput() GetProxyaddressTaggingTagArrayOutput
	ToGetProxyaddressTaggingTagArrayOutputWithContext(context.Context) GetProxyaddressTaggingTagArrayOutput
}

type GetProxyaddressTaggingTagArray []GetProxyaddressTaggingTagInput

func (GetProxyaddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddressTaggingTag)(nil)).Elem()
}

func (i GetProxyaddressTaggingTagArray) ToGetProxyaddressTaggingTagArrayOutput() GetProxyaddressTaggingTagArrayOutput {
	return i.ToGetProxyaddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetProxyaddressTaggingTagArray) ToGetProxyaddressTaggingTagArrayOutputWithContext(ctx context.Context) GetProxyaddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddressTaggingTagArrayOutput)
}

type GetProxyaddressTaggingTagOutput struct{ *pulumi.OutputState }

func (GetProxyaddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddressTaggingTag)(nil)).Elem()
}

func (o GetProxyaddressTaggingTagOutput) ToGetProxyaddressTaggingTagOutput() GetProxyaddressTaggingTagOutput {
	return o
}

func (o GetProxyaddressTaggingTagOutput) ToGetProxyaddressTaggingTagOutputWithContext(ctx context.Context) GetProxyaddressTaggingTagOutput {
	return o
}

// Specify the name of the desired firewall proxyaddress.
func (o GetProxyaddressTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyaddressTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxyaddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetProxyaddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddressTaggingTag)(nil)).Elem()
}

func (o GetProxyaddressTaggingTagArrayOutput) ToGetProxyaddressTaggingTagArrayOutput() GetProxyaddressTaggingTagArrayOutput {
	return o
}

func (o GetProxyaddressTaggingTagArrayOutput) ToGetProxyaddressTaggingTagArrayOutputWithContext(ctx context.Context) GetProxyaddressTaggingTagArrayOutput {
	return o
}

func (o GetProxyaddressTaggingTagArrayOutput) Index(i pulumi.IntInput) GetProxyaddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxyaddressTaggingTag {
		return vs[0].([]GetProxyaddressTaggingTag)[vs[1].(int)]
	}).(GetProxyaddressTaggingTagOutput)
}

type GetProxyaddrgrpMember struct {
	// Specify the name of the desired firewall proxyaddrgrp.
	Name string `pulumi:"name"`
}

// GetProxyaddrgrpMemberInput is an input type that accepts GetProxyaddrgrpMemberArgs and GetProxyaddrgrpMemberOutput values.
// You can construct a concrete instance of `GetProxyaddrgrpMemberInput` via:
//
//	GetProxyaddrgrpMemberArgs{...}
type GetProxyaddrgrpMemberInput interface {
	pulumi.Input

	ToGetProxyaddrgrpMemberOutput() GetProxyaddrgrpMemberOutput
	ToGetProxyaddrgrpMemberOutputWithContext(context.Context) GetProxyaddrgrpMemberOutput
}

type GetProxyaddrgrpMemberArgs struct {
	// Specify the name of the desired firewall proxyaddrgrp.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxyaddrgrpMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddrgrpMember)(nil)).Elem()
}

func (i GetProxyaddrgrpMemberArgs) ToGetProxyaddrgrpMemberOutput() GetProxyaddrgrpMemberOutput {
	return i.ToGetProxyaddrgrpMemberOutputWithContext(context.Background())
}

func (i GetProxyaddrgrpMemberArgs) ToGetProxyaddrgrpMemberOutputWithContext(ctx context.Context) GetProxyaddrgrpMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddrgrpMemberOutput)
}

// GetProxyaddrgrpMemberArrayInput is an input type that accepts GetProxyaddrgrpMemberArray and GetProxyaddrgrpMemberArrayOutput values.
// You can construct a concrete instance of `GetProxyaddrgrpMemberArrayInput` via:
//
//	GetProxyaddrgrpMemberArray{ GetProxyaddrgrpMemberArgs{...} }
type GetProxyaddrgrpMemberArrayInput interface {
	pulumi.Input

	ToGetProxyaddrgrpMemberArrayOutput() GetProxyaddrgrpMemberArrayOutput
	ToGetProxyaddrgrpMemberArrayOutputWithContext(context.Context) GetProxyaddrgrpMemberArrayOutput
}

type GetProxyaddrgrpMemberArray []GetProxyaddrgrpMemberInput

func (GetProxyaddrgrpMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddrgrpMember)(nil)).Elem()
}

func (i GetProxyaddrgrpMemberArray) ToGetProxyaddrgrpMemberArrayOutput() GetProxyaddrgrpMemberArrayOutput {
	return i.ToGetProxyaddrgrpMemberArrayOutputWithContext(context.Background())
}

func (i GetProxyaddrgrpMemberArray) ToGetProxyaddrgrpMemberArrayOutputWithContext(ctx context.Context) GetProxyaddrgrpMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddrgrpMemberArrayOutput)
}

type GetProxyaddrgrpMemberOutput struct{ *pulumi.OutputState }

func (GetProxyaddrgrpMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddrgrpMember)(nil)).Elem()
}

func (o GetProxyaddrgrpMemberOutput) ToGetProxyaddrgrpMemberOutput() GetProxyaddrgrpMemberOutput {
	return o
}

func (o GetProxyaddrgrpMemberOutput) ToGetProxyaddrgrpMemberOutputWithContext(ctx context.Context) GetProxyaddrgrpMemberOutput {
	return o
}

// Specify the name of the desired firewall proxyaddrgrp.
func (o GetProxyaddrgrpMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyaddrgrpMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxyaddrgrpMemberArrayOutput struct{ *pulumi.OutputState }

func (GetProxyaddrgrpMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddrgrpMember)(nil)).Elem()
}

func (o GetProxyaddrgrpMemberArrayOutput) ToGetProxyaddrgrpMemberArrayOutput() GetProxyaddrgrpMemberArrayOutput {
	return o
}

func (o GetProxyaddrgrpMemberArrayOutput) ToGetProxyaddrgrpMemberArrayOutputWithContext(ctx context.Context) GetProxyaddrgrpMemberArrayOutput {
	return o
}

func (o GetProxyaddrgrpMemberArrayOutput) Index(i pulumi.IntInput) GetProxyaddrgrpMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxyaddrgrpMember {
		return vs[0].([]GetProxyaddrgrpMember)[vs[1].(int)]
	}).(GetProxyaddrgrpMemberOutput)
}

type GetProxyaddrgrpTagging struct {
	// Tag category.
	Category string `pulumi:"category"`
	// Specify the name of the desired firewall proxyaddrgrp.
	Name string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []GetProxyaddrgrpTaggingTag `pulumi:"tags"`
}

// GetProxyaddrgrpTaggingInput is an input type that accepts GetProxyaddrgrpTaggingArgs and GetProxyaddrgrpTaggingOutput values.
// You can construct a concrete instance of `GetProxyaddrgrpTaggingInput` via:
//
//	GetProxyaddrgrpTaggingArgs{...}
type GetProxyaddrgrpTaggingInput interface {
	pulumi.Input

	ToGetProxyaddrgrpTaggingOutput() GetProxyaddrgrpTaggingOutput
	ToGetProxyaddrgrpTaggingOutputWithContext(context.Context) GetProxyaddrgrpTaggingOutput
}

type GetProxyaddrgrpTaggingArgs struct {
	// Tag category.
	Category pulumi.StringInput `pulumi:"category"`
	// Specify the name of the desired firewall proxyaddrgrp.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags GetProxyaddrgrpTaggingTagArrayInput `pulumi:"tags"`
}

func (GetProxyaddrgrpTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddrgrpTagging)(nil)).Elem()
}

func (i GetProxyaddrgrpTaggingArgs) ToGetProxyaddrgrpTaggingOutput() GetProxyaddrgrpTaggingOutput {
	return i.ToGetProxyaddrgrpTaggingOutputWithContext(context.Background())
}

func (i GetProxyaddrgrpTaggingArgs) ToGetProxyaddrgrpTaggingOutputWithContext(ctx context.Context) GetProxyaddrgrpTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddrgrpTaggingOutput)
}

// GetProxyaddrgrpTaggingArrayInput is an input type that accepts GetProxyaddrgrpTaggingArray and GetProxyaddrgrpTaggingArrayOutput values.
// You can construct a concrete instance of `GetProxyaddrgrpTaggingArrayInput` via:
//
//	GetProxyaddrgrpTaggingArray{ GetProxyaddrgrpTaggingArgs{...} }
type GetProxyaddrgrpTaggingArrayInput interface {
	pulumi.Input

	ToGetProxyaddrgrpTaggingArrayOutput() GetProxyaddrgrpTaggingArrayOutput
	ToGetProxyaddrgrpTaggingArrayOutputWithContext(context.Context) GetProxyaddrgrpTaggingArrayOutput
}

type GetProxyaddrgrpTaggingArray []GetProxyaddrgrpTaggingInput

func (GetProxyaddrgrpTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddrgrpTagging)(nil)).Elem()
}

func (i GetProxyaddrgrpTaggingArray) ToGetProxyaddrgrpTaggingArrayOutput() GetProxyaddrgrpTaggingArrayOutput {
	return i.ToGetProxyaddrgrpTaggingArrayOutputWithContext(context.Background())
}

func (i GetProxyaddrgrpTaggingArray) ToGetProxyaddrgrpTaggingArrayOutputWithContext(ctx context.Context) GetProxyaddrgrpTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddrgrpTaggingArrayOutput)
}

type GetProxyaddrgrpTaggingOutput struct{ *pulumi.OutputState }

func (GetProxyaddrgrpTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddrgrpTagging)(nil)).Elem()
}

func (o GetProxyaddrgrpTaggingOutput) ToGetProxyaddrgrpTaggingOutput() GetProxyaddrgrpTaggingOutput {
	return o
}

func (o GetProxyaddrgrpTaggingOutput) ToGetProxyaddrgrpTaggingOutputWithContext(ctx context.Context) GetProxyaddrgrpTaggingOutput {
	return o
}

// Tag category.
func (o GetProxyaddrgrpTaggingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyaddrgrpTagging) string { return v.Category }).(pulumi.StringOutput)
}

// Specify the name of the desired firewall proxyaddrgrp.
func (o GetProxyaddrgrpTaggingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyaddrgrpTagging) string { return v.Name }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o GetProxyaddrgrpTaggingOutput) Tags() GetProxyaddrgrpTaggingTagArrayOutput {
	return o.ApplyT(func(v GetProxyaddrgrpTagging) []GetProxyaddrgrpTaggingTag { return v.Tags }).(GetProxyaddrgrpTaggingTagArrayOutput)
}

type GetProxyaddrgrpTaggingArrayOutput struct{ *pulumi.OutputState }

func (GetProxyaddrgrpTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddrgrpTagging)(nil)).Elem()
}

func (o GetProxyaddrgrpTaggingArrayOutput) ToGetProxyaddrgrpTaggingArrayOutput() GetProxyaddrgrpTaggingArrayOutput {
	return o
}

func (o GetProxyaddrgrpTaggingArrayOutput) ToGetProxyaddrgrpTaggingArrayOutputWithContext(ctx context.Context) GetProxyaddrgrpTaggingArrayOutput {
	return o
}

func (o GetProxyaddrgrpTaggingArrayOutput) Index(i pulumi.IntInput) GetProxyaddrgrpTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxyaddrgrpTagging {
		return vs[0].([]GetProxyaddrgrpTagging)[vs[1].(int)]
	}).(GetProxyaddrgrpTaggingOutput)
}

type GetProxyaddrgrpTaggingTag struct {
	// Specify the name of the desired firewall proxyaddrgrp.
	Name string `pulumi:"name"`
}

// GetProxyaddrgrpTaggingTagInput is an input type that accepts GetProxyaddrgrpTaggingTagArgs and GetProxyaddrgrpTaggingTagOutput values.
// You can construct a concrete instance of `GetProxyaddrgrpTaggingTagInput` via:
//
//	GetProxyaddrgrpTaggingTagArgs{...}
type GetProxyaddrgrpTaggingTagInput interface {
	pulumi.Input

	ToGetProxyaddrgrpTaggingTagOutput() GetProxyaddrgrpTaggingTagOutput
	ToGetProxyaddrgrpTaggingTagOutputWithContext(context.Context) GetProxyaddrgrpTaggingTagOutput
}

type GetProxyaddrgrpTaggingTagArgs struct {
	// Specify the name of the desired firewall proxyaddrgrp.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxyaddrgrpTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (i GetProxyaddrgrpTaggingTagArgs) ToGetProxyaddrgrpTaggingTagOutput() GetProxyaddrgrpTaggingTagOutput {
	return i.ToGetProxyaddrgrpTaggingTagOutputWithContext(context.Background())
}

func (i GetProxyaddrgrpTaggingTagArgs) ToGetProxyaddrgrpTaggingTagOutputWithContext(ctx context.Context) GetProxyaddrgrpTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddrgrpTaggingTagOutput)
}

// GetProxyaddrgrpTaggingTagArrayInput is an input type that accepts GetProxyaddrgrpTaggingTagArray and GetProxyaddrgrpTaggingTagArrayOutput values.
// You can construct a concrete instance of `GetProxyaddrgrpTaggingTagArrayInput` via:
//
//	GetProxyaddrgrpTaggingTagArray{ GetProxyaddrgrpTaggingTagArgs{...} }
type GetProxyaddrgrpTaggingTagArrayInput interface {
	pulumi.Input

	ToGetProxyaddrgrpTaggingTagArrayOutput() GetProxyaddrgrpTaggingTagArrayOutput
	ToGetProxyaddrgrpTaggingTagArrayOutputWithContext(context.Context) GetProxyaddrgrpTaggingTagArrayOutput
}

type GetProxyaddrgrpTaggingTagArray []GetProxyaddrgrpTaggingTagInput

func (GetProxyaddrgrpTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (i GetProxyaddrgrpTaggingTagArray) ToGetProxyaddrgrpTaggingTagArrayOutput() GetProxyaddrgrpTaggingTagArrayOutput {
	return i.ToGetProxyaddrgrpTaggingTagArrayOutputWithContext(context.Background())
}

func (i GetProxyaddrgrpTaggingTagArray) ToGetProxyaddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) GetProxyaddrgrpTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyaddrgrpTaggingTagArrayOutput)
}

type GetProxyaddrgrpTaggingTagOutput struct{ *pulumi.OutputState }

func (GetProxyaddrgrpTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (o GetProxyaddrgrpTaggingTagOutput) ToGetProxyaddrgrpTaggingTagOutput() GetProxyaddrgrpTaggingTagOutput {
	return o
}

func (o GetProxyaddrgrpTaggingTagOutput) ToGetProxyaddrgrpTaggingTagOutputWithContext(ctx context.Context) GetProxyaddrgrpTaggingTagOutput {
	return o
}

// Specify the name of the desired firewall proxyaddrgrp.
func (o GetProxyaddrgrpTaggingTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyaddrgrpTaggingTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxyaddrgrpTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (GetProxyaddrgrpTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (o GetProxyaddrgrpTaggingTagArrayOutput) ToGetProxyaddrgrpTaggingTagArrayOutput() GetProxyaddrgrpTaggingTagArrayOutput {
	return o
}

func (o GetProxyaddrgrpTaggingTagArrayOutput) ToGetProxyaddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) GetProxyaddrgrpTaggingTagArrayOutput {
	return o
}

func (o GetProxyaddrgrpTaggingTagArrayOutput) Index(i pulumi.IntInput) GetProxyaddrgrpTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxyaddrgrpTaggingTag {
		return vs[0].([]GetProxyaddrgrpTaggingTag)[vs[1].(int)]
	}).(GetProxyaddrgrpTaggingTagOutput)
}

type GetProxypolicyAccessProxy6 struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyAccessProxy6Input is an input type that accepts GetProxypolicyAccessProxy6Args and GetProxypolicyAccessProxy6Output values.
// You can construct a concrete instance of `GetProxypolicyAccessProxy6Input` via:
//
//	GetProxypolicyAccessProxy6Args{...}
type GetProxypolicyAccessProxy6Input interface {
	pulumi.Input

	ToGetProxypolicyAccessProxy6Output() GetProxypolicyAccessProxy6Output
	ToGetProxypolicyAccessProxy6OutputWithContext(context.Context) GetProxypolicyAccessProxy6Output
}

type GetProxypolicyAccessProxy6Args struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyAccessProxy6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyAccessProxy6)(nil)).Elem()
}

func (i GetProxypolicyAccessProxy6Args) ToGetProxypolicyAccessProxy6Output() GetProxypolicyAccessProxy6Output {
	return i.ToGetProxypolicyAccessProxy6OutputWithContext(context.Background())
}

func (i GetProxypolicyAccessProxy6Args) ToGetProxypolicyAccessProxy6OutputWithContext(ctx context.Context) GetProxypolicyAccessProxy6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyAccessProxy6Output)
}

// GetProxypolicyAccessProxy6ArrayInput is an input type that accepts GetProxypolicyAccessProxy6Array and GetProxypolicyAccessProxy6ArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyAccessProxy6ArrayInput` via:
//
//	GetProxypolicyAccessProxy6Array{ GetProxypolicyAccessProxy6Args{...} }
type GetProxypolicyAccessProxy6ArrayInput interface {
	pulumi.Input

	ToGetProxypolicyAccessProxy6ArrayOutput() GetProxypolicyAccessProxy6ArrayOutput
	ToGetProxypolicyAccessProxy6ArrayOutputWithContext(context.Context) GetProxypolicyAccessProxy6ArrayOutput
}

type GetProxypolicyAccessProxy6Array []GetProxypolicyAccessProxy6Input

func (GetProxypolicyAccessProxy6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyAccessProxy6)(nil)).Elem()
}

func (i GetProxypolicyAccessProxy6Array) ToGetProxypolicyAccessProxy6ArrayOutput() GetProxypolicyAccessProxy6ArrayOutput {
	return i.ToGetProxypolicyAccessProxy6ArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyAccessProxy6Array) ToGetProxypolicyAccessProxy6ArrayOutputWithContext(ctx context.Context) GetProxypolicyAccessProxy6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyAccessProxy6ArrayOutput)
}

type GetProxypolicyAccessProxy6Output struct{ *pulumi.OutputState }

func (GetProxypolicyAccessProxy6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyAccessProxy6)(nil)).Elem()
}

func (o GetProxypolicyAccessProxy6Output) ToGetProxypolicyAccessProxy6Output() GetProxypolicyAccessProxy6Output {
	return o
}

func (o GetProxypolicyAccessProxy6Output) ToGetProxypolicyAccessProxy6OutputWithContext(ctx context.Context) GetProxypolicyAccessProxy6Output {
	return o
}

// Group name.
func (o GetProxypolicyAccessProxy6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyAccessProxy6) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyAccessProxy6ArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyAccessProxy6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyAccessProxy6)(nil)).Elem()
}

func (o GetProxypolicyAccessProxy6ArrayOutput) ToGetProxypolicyAccessProxy6ArrayOutput() GetProxypolicyAccessProxy6ArrayOutput {
	return o
}

func (o GetProxypolicyAccessProxy6ArrayOutput) ToGetProxypolicyAccessProxy6ArrayOutputWithContext(ctx context.Context) GetProxypolicyAccessProxy6ArrayOutput {
	return o
}

func (o GetProxypolicyAccessProxy6ArrayOutput) Index(i pulumi.IntInput) GetProxypolicyAccessProxy6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyAccessProxy6 {
		return vs[0].([]GetProxypolicyAccessProxy6)[vs[1].(int)]
	}).(GetProxypolicyAccessProxy6Output)
}

type GetProxypolicyAccessProxy struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyAccessProxyInput is an input type that accepts GetProxypolicyAccessProxyArgs and GetProxypolicyAccessProxyOutput values.
// You can construct a concrete instance of `GetProxypolicyAccessProxyInput` via:
//
//	GetProxypolicyAccessProxyArgs{...}
type GetProxypolicyAccessProxyInput interface {
	pulumi.Input

	ToGetProxypolicyAccessProxyOutput() GetProxypolicyAccessProxyOutput
	ToGetProxypolicyAccessProxyOutputWithContext(context.Context) GetProxypolicyAccessProxyOutput
}

type GetProxypolicyAccessProxyArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyAccessProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyAccessProxy)(nil)).Elem()
}

func (i GetProxypolicyAccessProxyArgs) ToGetProxypolicyAccessProxyOutput() GetProxypolicyAccessProxyOutput {
	return i.ToGetProxypolicyAccessProxyOutputWithContext(context.Background())
}

func (i GetProxypolicyAccessProxyArgs) ToGetProxypolicyAccessProxyOutputWithContext(ctx context.Context) GetProxypolicyAccessProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyAccessProxyOutput)
}

// GetProxypolicyAccessProxyArrayInput is an input type that accepts GetProxypolicyAccessProxyArray and GetProxypolicyAccessProxyArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyAccessProxyArrayInput` via:
//
//	GetProxypolicyAccessProxyArray{ GetProxypolicyAccessProxyArgs{...} }
type GetProxypolicyAccessProxyArrayInput interface {
	pulumi.Input

	ToGetProxypolicyAccessProxyArrayOutput() GetProxypolicyAccessProxyArrayOutput
	ToGetProxypolicyAccessProxyArrayOutputWithContext(context.Context) GetProxypolicyAccessProxyArrayOutput
}

type GetProxypolicyAccessProxyArray []GetProxypolicyAccessProxyInput

func (GetProxypolicyAccessProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyAccessProxy)(nil)).Elem()
}

func (i GetProxypolicyAccessProxyArray) ToGetProxypolicyAccessProxyArrayOutput() GetProxypolicyAccessProxyArrayOutput {
	return i.ToGetProxypolicyAccessProxyArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyAccessProxyArray) ToGetProxypolicyAccessProxyArrayOutputWithContext(ctx context.Context) GetProxypolicyAccessProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyAccessProxyArrayOutput)
}

type GetProxypolicyAccessProxyOutput struct{ *pulumi.OutputState }

func (GetProxypolicyAccessProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyAccessProxy)(nil)).Elem()
}

func (o GetProxypolicyAccessProxyOutput) ToGetProxypolicyAccessProxyOutput() GetProxypolicyAccessProxyOutput {
	return o
}

func (o GetProxypolicyAccessProxyOutput) ToGetProxypolicyAccessProxyOutputWithContext(ctx context.Context) GetProxypolicyAccessProxyOutput {
	return o
}

// Group name.
func (o GetProxypolicyAccessProxyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyAccessProxy) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyAccessProxyArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyAccessProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyAccessProxy)(nil)).Elem()
}

func (o GetProxypolicyAccessProxyArrayOutput) ToGetProxypolicyAccessProxyArrayOutput() GetProxypolicyAccessProxyArrayOutput {
	return o
}

func (o GetProxypolicyAccessProxyArrayOutput) ToGetProxypolicyAccessProxyArrayOutputWithContext(ctx context.Context) GetProxypolicyAccessProxyArrayOutput {
	return o
}

func (o GetProxypolicyAccessProxyArrayOutput) Index(i pulumi.IntInput) GetProxypolicyAccessProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyAccessProxy {
		return vs[0].([]GetProxypolicyAccessProxy)[vs[1].(int)]
	}).(GetProxypolicyAccessProxyOutput)
}

type GetProxypolicyDstaddr6 struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyDstaddr6Input is an input type that accepts GetProxypolicyDstaddr6Args and GetProxypolicyDstaddr6Output values.
// You can construct a concrete instance of `GetProxypolicyDstaddr6Input` via:
//
//	GetProxypolicyDstaddr6Args{...}
type GetProxypolicyDstaddr6Input interface {
	pulumi.Input

	ToGetProxypolicyDstaddr6Output() GetProxypolicyDstaddr6Output
	ToGetProxypolicyDstaddr6OutputWithContext(context.Context) GetProxypolicyDstaddr6Output
}

type GetProxypolicyDstaddr6Args struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyDstaddr6)(nil)).Elem()
}

func (i GetProxypolicyDstaddr6Args) ToGetProxypolicyDstaddr6Output() GetProxypolicyDstaddr6Output {
	return i.ToGetProxypolicyDstaddr6OutputWithContext(context.Background())
}

func (i GetProxypolicyDstaddr6Args) ToGetProxypolicyDstaddr6OutputWithContext(ctx context.Context) GetProxypolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyDstaddr6Output)
}

// GetProxypolicyDstaddr6ArrayInput is an input type that accepts GetProxypolicyDstaddr6Array and GetProxypolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyDstaddr6ArrayInput` via:
//
//	GetProxypolicyDstaddr6Array{ GetProxypolicyDstaddr6Args{...} }
type GetProxypolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToGetProxypolicyDstaddr6ArrayOutput() GetProxypolicyDstaddr6ArrayOutput
	ToGetProxypolicyDstaddr6ArrayOutputWithContext(context.Context) GetProxypolicyDstaddr6ArrayOutput
}

type GetProxypolicyDstaddr6Array []GetProxypolicyDstaddr6Input

func (GetProxypolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyDstaddr6)(nil)).Elem()
}

func (i GetProxypolicyDstaddr6Array) ToGetProxypolicyDstaddr6ArrayOutput() GetProxypolicyDstaddr6ArrayOutput {
	return i.ToGetProxypolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyDstaddr6Array) ToGetProxypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetProxypolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyDstaddr6ArrayOutput)
}

type GetProxypolicyDstaddr6Output struct{ *pulumi.OutputState }

func (GetProxypolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyDstaddr6)(nil)).Elem()
}

func (o GetProxypolicyDstaddr6Output) ToGetProxypolicyDstaddr6Output() GetProxypolicyDstaddr6Output {
	return o
}

func (o GetProxypolicyDstaddr6Output) ToGetProxypolicyDstaddr6OutputWithContext(ctx context.Context) GetProxypolicyDstaddr6Output {
	return o
}

// Group name.
func (o GetProxypolicyDstaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyDstaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyDstaddr6)(nil)).Elem()
}

func (o GetProxypolicyDstaddr6ArrayOutput) ToGetProxypolicyDstaddr6ArrayOutput() GetProxypolicyDstaddr6ArrayOutput {
	return o
}

func (o GetProxypolicyDstaddr6ArrayOutput) ToGetProxypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetProxypolicyDstaddr6ArrayOutput {
	return o
}

func (o GetProxypolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) GetProxypolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyDstaddr6 {
		return vs[0].([]GetProxypolicyDstaddr6)[vs[1].(int)]
	}).(GetProxypolicyDstaddr6Output)
}

type GetProxypolicyDstaddr struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyDstaddrInput is an input type that accepts GetProxypolicyDstaddrArgs and GetProxypolicyDstaddrOutput values.
// You can construct a concrete instance of `GetProxypolicyDstaddrInput` via:
//
//	GetProxypolicyDstaddrArgs{...}
type GetProxypolicyDstaddrInput interface {
	pulumi.Input

	ToGetProxypolicyDstaddrOutput() GetProxypolicyDstaddrOutput
	ToGetProxypolicyDstaddrOutputWithContext(context.Context) GetProxypolicyDstaddrOutput
}

type GetProxypolicyDstaddrArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyDstaddr)(nil)).Elem()
}

func (i GetProxypolicyDstaddrArgs) ToGetProxypolicyDstaddrOutput() GetProxypolicyDstaddrOutput {
	return i.ToGetProxypolicyDstaddrOutputWithContext(context.Background())
}

func (i GetProxypolicyDstaddrArgs) ToGetProxypolicyDstaddrOutputWithContext(ctx context.Context) GetProxypolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyDstaddrOutput)
}

// GetProxypolicyDstaddrArrayInput is an input type that accepts GetProxypolicyDstaddrArray and GetProxypolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyDstaddrArrayInput` via:
//
//	GetProxypolicyDstaddrArray{ GetProxypolicyDstaddrArgs{...} }
type GetProxypolicyDstaddrArrayInput interface {
	pulumi.Input

	ToGetProxypolicyDstaddrArrayOutput() GetProxypolicyDstaddrArrayOutput
	ToGetProxypolicyDstaddrArrayOutputWithContext(context.Context) GetProxypolicyDstaddrArrayOutput
}

type GetProxypolicyDstaddrArray []GetProxypolicyDstaddrInput

func (GetProxypolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyDstaddr)(nil)).Elem()
}

func (i GetProxypolicyDstaddrArray) ToGetProxypolicyDstaddrArrayOutput() GetProxypolicyDstaddrArrayOutput {
	return i.ToGetProxypolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyDstaddrArray) ToGetProxypolicyDstaddrArrayOutputWithContext(ctx context.Context) GetProxypolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyDstaddrArrayOutput)
}

type GetProxypolicyDstaddrOutput struct{ *pulumi.OutputState }

func (GetProxypolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyDstaddr)(nil)).Elem()
}

func (o GetProxypolicyDstaddrOutput) ToGetProxypolicyDstaddrOutput() GetProxypolicyDstaddrOutput {
	return o
}

func (o GetProxypolicyDstaddrOutput) ToGetProxypolicyDstaddrOutputWithContext(ctx context.Context) GetProxypolicyDstaddrOutput {
	return o
}

// Group name.
func (o GetProxypolicyDstaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyDstaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyDstaddr)(nil)).Elem()
}

func (o GetProxypolicyDstaddrArrayOutput) ToGetProxypolicyDstaddrArrayOutput() GetProxypolicyDstaddrArrayOutput {
	return o
}

func (o GetProxypolicyDstaddrArrayOutput) ToGetProxypolicyDstaddrArrayOutputWithContext(ctx context.Context) GetProxypolicyDstaddrArrayOutput {
	return o
}

func (o GetProxypolicyDstaddrArrayOutput) Index(i pulumi.IntInput) GetProxypolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyDstaddr {
		return vs[0].([]GetProxypolicyDstaddr)[vs[1].(int)]
	}).(GetProxypolicyDstaddrOutput)
}

type GetProxypolicyDstintf struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyDstintfInput is an input type that accepts GetProxypolicyDstintfArgs and GetProxypolicyDstintfOutput values.
// You can construct a concrete instance of `GetProxypolicyDstintfInput` via:
//
//	GetProxypolicyDstintfArgs{...}
type GetProxypolicyDstintfInput interface {
	pulumi.Input

	ToGetProxypolicyDstintfOutput() GetProxypolicyDstintfOutput
	ToGetProxypolicyDstintfOutputWithContext(context.Context) GetProxypolicyDstintfOutput
}

type GetProxypolicyDstintfArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyDstintf)(nil)).Elem()
}

func (i GetProxypolicyDstintfArgs) ToGetProxypolicyDstintfOutput() GetProxypolicyDstintfOutput {
	return i.ToGetProxypolicyDstintfOutputWithContext(context.Background())
}

func (i GetProxypolicyDstintfArgs) ToGetProxypolicyDstintfOutputWithContext(ctx context.Context) GetProxypolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyDstintfOutput)
}

// GetProxypolicyDstintfArrayInput is an input type that accepts GetProxypolicyDstintfArray and GetProxypolicyDstintfArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyDstintfArrayInput` via:
//
//	GetProxypolicyDstintfArray{ GetProxypolicyDstintfArgs{...} }
type GetProxypolicyDstintfArrayInput interface {
	pulumi.Input

	ToGetProxypolicyDstintfArrayOutput() GetProxypolicyDstintfArrayOutput
	ToGetProxypolicyDstintfArrayOutputWithContext(context.Context) GetProxypolicyDstintfArrayOutput
}

type GetProxypolicyDstintfArray []GetProxypolicyDstintfInput

func (GetProxypolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyDstintf)(nil)).Elem()
}

func (i GetProxypolicyDstintfArray) ToGetProxypolicyDstintfArrayOutput() GetProxypolicyDstintfArrayOutput {
	return i.ToGetProxypolicyDstintfArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyDstintfArray) ToGetProxypolicyDstintfArrayOutputWithContext(ctx context.Context) GetProxypolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyDstintfArrayOutput)
}

type GetProxypolicyDstintfOutput struct{ *pulumi.OutputState }

func (GetProxypolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyDstintf)(nil)).Elem()
}

func (o GetProxypolicyDstintfOutput) ToGetProxypolicyDstintfOutput() GetProxypolicyDstintfOutput {
	return o
}

func (o GetProxypolicyDstintfOutput) ToGetProxypolicyDstintfOutputWithContext(ctx context.Context) GetProxypolicyDstintfOutput {
	return o
}

// Group name.
func (o GetProxypolicyDstintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyDstintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyDstintf)(nil)).Elem()
}

func (o GetProxypolicyDstintfArrayOutput) ToGetProxypolicyDstintfArrayOutput() GetProxypolicyDstintfArrayOutput {
	return o
}

func (o GetProxypolicyDstintfArrayOutput) ToGetProxypolicyDstintfArrayOutputWithContext(ctx context.Context) GetProxypolicyDstintfArrayOutput {
	return o
}

func (o GetProxypolicyDstintfArrayOutput) Index(i pulumi.IntInput) GetProxypolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyDstintf {
		return vs[0].([]GetProxypolicyDstintf)[vs[1].(int)]
	}).(GetProxypolicyDstintfOutput)
}

type GetProxypolicyGroup struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyGroupInput is an input type that accepts GetProxypolicyGroupArgs and GetProxypolicyGroupOutput values.
// You can construct a concrete instance of `GetProxypolicyGroupInput` via:
//
//	GetProxypolicyGroupArgs{...}
type GetProxypolicyGroupInput interface {
	pulumi.Input

	ToGetProxypolicyGroupOutput() GetProxypolicyGroupOutput
	ToGetProxypolicyGroupOutputWithContext(context.Context) GetProxypolicyGroupOutput
}

type GetProxypolicyGroupArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyGroup)(nil)).Elem()
}

func (i GetProxypolicyGroupArgs) ToGetProxypolicyGroupOutput() GetProxypolicyGroupOutput {
	return i.ToGetProxypolicyGroupOutputWithContext(context.Background())
}

func (i GetProxypolicyGroupArgs) ToGetProxypolicyGroupOutputWithContext(ctx context.Context) GetProxypolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyGroupOutput)
}

// GetProxypolicyGroupArrayInput is an input type that accepts GetProxypolicyGroupArray and GetProxypolicyGroupArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyGroupArrayInput` via:
//
//	GetProxypolicyGroupArray{ GetProxypolicyGroupArgs{...} }
type GetProxypolicyGroupArrayInput interface {
	pulumi.Input

	ToGetProxypolicyGroupArrayOutput() GetProxypolicyGroupArrayOutput
	ToGetProxypolicyGroupArrayOutputWithContext(context.Context) GetProxypolicyGroupArrayOutput
}

type GetProxypolicyGroupArray []GetProxypolicyGroupInput

func (GetProxypolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyGroup)(nil)).Elem()
}

func (i GetProxypolicyGroupArray) ToGetProxypolicyGroupArrayOutput() GetProxypolicyGroupArrayOutput {
	return i.ToGetProxypolicyGroupArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyGroupArray) ToGetProxypolicyGroupArrayOutputWithContext(ctx context.Context) GetProxypolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyGroupArrayOutput)
}

type GetProxypolicyGroupOutput struct{ *pulumi.OutputState }

func (GetProxypolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyGroup)(nil)).Elem()
}

func (o GetProxypolicyGroupOutput) ToGetProxypolicyGroupOutput() GetProxypolicyGroupOutput {
	return o
}

func (o GetProxypolicyGroupOutput) ToGetProxypolicyGroupOutputWithContext(ctx context.Context) GetProxypolicyGroupOutput {
	return o
}

// Group name.
func (o GetProxypolicyGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyGroup)(nil)).Elem()
}

func (o GetProxypolicyGroupArrayOutput) ToGetProxypolicyGroupArrayOutput() GetProxypolicyGroupArrayOutput {
	return o
}

func (o GetProxypolicyGroupArrayOutput) ToGetProxypolicyGroupArrayOutputWithContext(ctx context.Context) GetProxypolicyGroupArrayOutput {
	return o
}

func (o GetProxypolicyGroupArrayOutput) Index(i pulumi.IntInput) GetProxypolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyGroup {
		return vs[0].([]GetProxypolicyGroup)[vs[1].(int)]
	}).(GetProxypolicyGroupOutput)
}

type GetProxypolicyInternetService6Custom struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyInternetService6CustomInput is an input type that accepts GetProxypolicyInternetService6CustomArgs and GetProxypolicyInternetService6CustomOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetService6CustomInput` via:
//
//	GetProxypolicyInternetService6CustomArgs{...}
type GetProxypolicyInternetService6CustomInput interface {
	pulumi.Input

	ToGetProxypolicyInternetService6CustomOutput() GetProxypolicyInternetService6CustomOutput
	ToGetProxypolicyInternetService6CustomOutputWithContext(context.Context) GetProxypolicyInternetService6CustomOutput
}

type GetProxypolicyInternetService6CustomArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyInternetService6CustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetService6Custom)(nil)).Elem()
}

func (i GetProxypolicyInternetService6CustomArgs) ToGetProxypolicyInternetService6CustomOutput() GetProxypolicyInternetService6CustomOutput {
	return i.ToGetProxypolicyInternetService6CustomOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetService6CustomArgs) ToGetProxypolicyInternetService6CustomOutputWithContext(ctx context.Context) GetProxypolicyInternetService6CustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetService6CustomOutput)
}

// GetProxypolicyInternetService6CustomArrayInput is an input type that accepts GetProxypolicyInternetService6CustomArray and GetProxypolicyInternetService6CustomArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetService6CustomArrayInput` via:
//
//	GetProxypolicyInternetService6CustomArray{ GetProxypolicyInternetService6CustomArgs{...} }
type GetProxypolicyInternetService6CustomArrayInput interface {
	pulumi.Input

	ToGetProxypolicyInternetService6CustomArrayOutput() GetProxypolicyInternetService6CustomArrayOutput
	ToGetProxypolicyInternetService6CustomArrayOutputWithContext(context.Context) GetProxypolicyInternetService6CustomArrayOutput
}

type GetProxypolicyInternetService6CustomArray []GetProxypolicyInternetService6CustomInput

func (GetProxypolicyInternetService6CustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetService6Custom)(nil)).Elem()
}

func (i GetProxypolicyInternetService6CustomArray) ToGetProxypolicyInternetService6CustomArrayOutput() GetProxypolicyInternetService6CustomArrayOutput {
	return i.ToGetProxypolicyInternetService6CustomArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetService6CustomArray) ToGetProxypolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetService6CustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetService6CustomArrayOutput)
}

type GetProxypolicyInternetService6CustomOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetService6CustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetService6Custom)(nil)).Elem()
}

func (o GetProxypolicyInternetService6CustomOutput) ToGetProxypolicyInternetService6CustomOutput() GetProxypolicyInternetService6CustomOutput {
	return o
}

func (o GetProxypolicyInternetService6CustomOutput) ToGetProxypolicyInternetService6CustomOutputWithContext(ctx context.Context) GetProxypolicyInternetService6CustomOutput {
	return o
}

// Group name.
func (o GetProxypolicyInternetService6CustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyInternetService6Custom) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyInternetService6CustomArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetService6CustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetService6Custom)(nil)).Elem()
}

func (o GetProxypolicyInternetService6CustomArrayOutput) ToGetProxypolicyInternetService6CustomArrayOutput() GetProxypolicyInternetService6CustomArrayOutput {
	return o
}

func (o GetProxypolicyInternetService6CustomArrayOutput) ToGetProxypolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetService6CustomArrayOutput {
	return o
}

func (o GetProxypolicyInternetService6CustomArrayOutput) Index(i pulumi.IntInput) GetProxypolicyInternetService6CustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyInternetService6Custom {
		return vs[0].([]GetProxypolicyInternetService6Custom)[vs[1].(int)]
	}).(GetProxypolicyInternetService6CustomOutput)
}

type GetProxypolicyInternetService6CustomGroup struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyInternetService6CustomGroupInput is an input type that accepts GetProxypolicyInternetService6CustomGroupArgs and GetProxypolicyInternetService6CustomGroupOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetService6CustomGroupInput` via:
//
//	GetProxypolicyInternetService6CustomGroupArgs{...}
type GetProxypolicyInternetService6CustomGroupInput interface {
	pulumi.Input

	ToGetProxypolicyInternetService6CustomGroupOutput() GetProxypolicyInternetService6CustomGroupOutput
	ToGetProxypolicyInternetService6CustomGroupOutputWithContext(context.Context) GetProxypolicyInternetService6CustomGroupOutput
}

type GetProxypolicyInternetService6CustomGroupArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyInternetService6CustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i GetProxypolicyInternetService6CustomGroupArgs) ToGetProxypolicyInternetService6CustomGroupOutput() GetProxypolicyInternetService6CustomGroupOutput {
	return i.ToGetProxypolicyInternetService6CustomGroupOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetService6CustomGroupArgs) ToGetProxypolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) GetProxypolicyInternetService6CustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetService6CustomGroupOutput)
}

// GetProxypolicyInternetService6CustomGroupArrayInput is an input type that accepts GetProxypolicyInternetService6CustomGroupArray and GetProxypolicyInternetService6CustomGroupArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetService6CustomGroupArrayInput` via:
//
//	GetProxypolicyInternetService6CustomGroupArray{ GetProxypolicyInternetService6CustomGroupArgs{...} }
type GetProxypolicyInternetService6CustomGroupArrayInput interface {
	pulumi.Input

	ToGetProxypolicyInternetService6CustomGroupArrayOutput() GetProxypolicyInternetService6CustomGroupArrayOutput
	ToGetProxypolicyInternetService6CustomGroupArrayOutputWithContext(context.Context) GetProxypolicyInternetService6CustomGroupArrayOutput
}

type GetProxypolicyInternetService6CustomGroupArray []GetProxypolicyInternetService6CustomGroupInput

func (GetProxypolicyInternetService6CustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i GetProxypolicyInternetService6CustomGroupArray) ToGetProxypolicyInternetService6CustomGroupArrayOutput() GetProxypolicyInternetService6CustomGroupArrayOutput {
	return i.ToGetProxypolicyInternetService6CustomGroupArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetService6CustomGroupArray) ToGetProxypolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetService6CustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetService6CustomGroupArrayOutput)
}

type GetProxypolicyInternetService6CustomGroupOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetService6CustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o GetProxypolicyInternetService6CustomGroupOutput) ToGetProxypolicyInternetService6CustomGroupOutput() GetProxypolicyInternetService6CustomGroupOutput {
	return o
}

func (o GetProxypolicyInternetService6CustomGroupOutput) ToGetProxypolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) GetProxypolicyInternetService6CustomGroupOutput {
	return o
}

// Group name.
func (o GetProxypolicyInternetService6CustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyInternetService6CustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyInternetService6CustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetService6CustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o GetProxypolicyInternetService6CustomGroupArrayOutput) ToGetProxypolicyInternetService6CustomGroupArrayOutput() GetProxypolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o GetProxypolicyInternetService6CustomGroupArrayOutput) ToGetProxypolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o GetProxypolicyInternetService6CustomGroupArrayOutput) Index(i pulumi.IntInput) GetProxypolicyInternetService6CustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyInternetService6CustomGroup {
		return vs[0].([]GetProxypolicyInternetService6CustomGroup)[vs[1].(int)]
	}).(GetProxypolicyInternetService6CustomGroupOutput)
}

type GetProxypolicyInternetService6Group struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyInternetService6GroupInput is an input type that accepts GetProxypolicyInternetService6GroupArgs and GetProxypolicyInternetService6GroupOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetService6GroupInput` via:
//
//	GetProxypolicyInternetService6GroupArgs{...}
type GetProxypolicyInternetService6GroupInput interface {
	pulumi.Input

	ToGetProxypolicyInternetService6GroupOutput() GetProxypolicyInternetService6GroupOutput
	ToGetProxypolicyInternetService6GroupOutputWithContext(context.Context) GetProxypolicyInternetService6GroupOutput
}

type GetProxypolicyInternetService6GroupArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyInternetService6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetService6Group)(nil)).Elem()
}

func (i GetProxypolicyInternetService6GroupArgs) ToGetProxypolicyInternetService6GroupOutput() GetProxypolicyInternetService6GroupOutput {
	return i.ToGetProxypolicyInternetService6GroupOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetService6GroupArgs) ToGetProxypolicyInternetService6GroupOutputWithContext(ctx context.Context) GetProxypolicyInternetService6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetService6GroupOutput)
}

// GetProxypolicyInternetService6GroupArrayInput is an input type that accepts GetProxypolicyInternetService6GroupArray and GetProxypolicyInternetService6GroupArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetService6GroupArrayInput` via:
//
//	GetProxypolicyInternetService6GroupArray{ GetProxypolicyInternetService6GroupArgs{...} }
type GetProxypolicyInternetService6GroupArrayInput interface {
	pulumi.Input

	ToGetProxypolicyInternetService6GroupArrayOutput() GetProxypolicyInternetService6GroupArrayOutput
	ToGetProxypolicyInternetService6GroupArrayOutputWithContext(context.Context) GetProxypolicyInternetService6GroupArrayOutput
}

type GetProxypolicyInternetService6GroupArray []GetProxypolicyInternetService6GroupInput

func (GetProxypolicyInternetService6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetService6Group)(nil)).Elem()
}

func (i GetProxypolicyInternetService6GroupArray) ToGetProxypolicyInternetService6GroupArrayOutput() GetProxypolicyInternetService6GroupArrayOutput {
	return i.ToGetProxypolicyInternetService6GroupArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetService6GroupArray) ToGetProxypolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetService6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetService6GroupArrayOutput)
}

type GetProxypolicyInternetService6GroupOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetService6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetService6Group)(nil)).Elem()
}

func (o GetProxypolicyInternetService6GroupOutput) ToGetProxypolicyInternetService6GroupOutput() GetProxypolicyInternetService6GroupOutput {
	return o
}

func (o GetProxypolicyInternetService6GroupOutput) ToGetProxypolicyInternetService6GroupOutputWithContext(ctx context.Context) GetProxypolicyInternetService6GroupOutput {
	return o
}

// Group name.
func (o GetProxypolicyInternetService6GroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyInternetService6Group) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyInternetService6GroupArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetService6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetService6Group)(nil)).Elem()
}

func (o GetProxypolicyInternetService6GroupArrayOutput) ToGetProxypolicyInternetService6GroupArrayOutput() GetProxypolicyInternetService6GroupArrayOutput {
	return o
}

func (o GetProxypolicyInternetService6GroupArrayOutput) ToGetProxypolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetService6GroupArrayOutput {
	return o
}

func (o GetProxypolicyInternetService6GroupArrayOutput) Index(i pulumi.IntInput) GetProxypolicyInternetService6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyInternetService6Group {
		return vs[0].([]GetProxypolicyInternetService6Group)[vs[1].(int)]
	}).(GetProxypolicyInternetService6GroupOutput)
}

type GetProxypolicyInternetService6Name struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyInternetService6NameInput is an input type that accepts GetProxypolicyInternetService6NameArgs and GetProxypolicyInternetService6NameOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetService6NameInput` via:
//
//	GetProxypolicyInternetService6NameArgs{...}
type GetProxypolicyInternetService6NameInput interface {
	pulumi.Input

	ToGetProxypolicyInternetService6NameOutput() GetProxypolicyInternetService6NameOutput
	ToGetProxypolicyInternetService6NameOutputWithContext(context.Context) GetProxypolicyInternetService6NameOutput
}

type GetProxypolicyInternetService6NameArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyInternetService6NameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetService6Name)(nil)).Elem()
}

func (i GetProxypolicyInternetService6NameArgs) ToGetProxypolicyInternetService6NameOutput() GetProxypolicyInternetService6NameOutput {
	return i.ToGetProxypolicyInternetService6NameOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetService6NameArgs) ToGetProxypolicyInternetService6NameOutputWithContext(ctx context.Context) GetProxypolicyInternetService6NameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetService6NameOutput)
}

// GetProxypolicyInternetService6NameArrayInput is an input type that accepts GetProxypolicyInternetService6NameArray and GetProxypolicyInternetService6NameArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetService6NameArrayInput` via:
//
//	GetProxypolicyInternetService6NameArray{ GetProxypolicyInternetService6NameArgs{...} }
type GetProxypolicyInternetService6NameArrayInput interface {
	pulumi.Input

	ToGetProxypolicyInternetService6NameArrayOutput() GetProxypolicyInternetService6NameArrayOutput
	ToGetProxypolicyInternetService6NameArrayOutputWithContext(context.Context) GetProxypolicyInternetService6NameArrayOutput
}

type GetProxypolicyInternetService6NameArray []GetProxypolicyInternetService6NameInput

func (GetProxypolicyInternetService6NameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetService6Name)(nil)).Elem()
}

func (i GetProxypolicyInternetService6NameArray) ToGetProxypolicyInternetService6NameArrayOutput() GetProxypolicyInternetService6NameArrayOutput {
	return i.ToGetProxypolicyInternetService6NameArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetService6NameArray) ToGetProxypolicyInternetService6NameArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetService6NameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetService6NameArrayOutput)
}

type GetProxypolicyInternetService6NameOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetService6NameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetService6Name)(nil)).Elem()
}

func (o GetProxypolicyInternetService6NameOutput) ToGetProxypolicyInternetService6NameOutput() GetProxypolicyInternetService6NameOutput {
	return o
}

func (o GetProxypolicyInternetService6NameOutput) ToGetProxypolicyInternetService6NameOutputWithContext(ctx context.Context) GetProxypolicyInternetService6NameOutput {
	return o
}

// Group name.
func (o GetProxypolicyInternetService6NameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyInternetService6Name) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyInternetService6NameArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetService6NameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetService6Name)(nil)).Elem()
}

func (o GetProxypolicyInternetService6NameArrayOutput) ToGetProxypolicyInternetService6NameArrayOutput() GetProxypolicyInternetService6NameArrayOutput {
	return o
}

func (o GetProxypolicyInternetService6NameArrayOutput) ToGetProxypolicyInternetService6NameArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetService6NameArrayOutput {
	return o
}

func (o GetProxypolicyInternetService6NameArrayOutput) Index(i pulumi.IntInput) GetProxypolicyInternetService6NameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyInternetService6Name {
		return vs[0].([]GetProxypolicyInternetService6Name)[vs[1].(int)]
	}).(GetProxypolicyInternetService6NameOutput)
}

type GetProxypolicyInternetServiceCustom struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyInternetServiceCustomInput is an input type that accepts GetProxypolicyInternetServiceCustomArgs and GetProxypolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetServiceCustomInput` via:
//
//	GetProxypolicyInternetServiceCustomArgs{...}
type GetProxypolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToGetProxypolicyInternetServiceCustomOutput() GetProxypolicyInternetServiceCustomOutput
	ToGetProxypolicyInternetServiceCustomOutputWithContext(context.Context) GetProxypolicyInternetServiceCustomOutput
}

type GetProxypolicyInternetServiceCustomArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetProxypolicyInternetServiceCustomArgs) ToGetProxypolicyInternetServiceCustomOutput() GetProxypolicyInternetServiceCustomOutput {
	return i.ToGetProxypolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetServiceCustomArgs) ToGetProxypolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetServiceCustomOutput)
}

// GetProxypolicyInternetServiceCustomArrayInput is an input type that accepts GetProxypolicyInternetServiceCustomArray and GetProxypolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetServiceCustomArrayInput` via:
//
//	GetProxypolicyInternetServiceCustomArray{ GetProxypolicyInternetServiceCustomArgs{...} }
type GetProxypolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToGetProxypolicyInternetServiceCustomArrayOutput() GetProxypolicyInternetServiceCustomArrayOutput
	ToGetProxypolicyInternetServiceCustomArrayOutputWithContext(context.Context) GetProxypolicyInternetServiceCustomArrayOutput
}

type GetProxypolicyInternetServiceCustomArray []GetProxypolicyInternetServiceCustomInput

func (GetProxypolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetProxypolicyInternetServiceCustomArray) ToGetProxypolicyInternetServiceCustomArrayOutput() GetProxypolicyInternetServiceCustomArrayOutput {
	return i.ToGetProxypolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetServiceCustomArray) ToGetProxypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetServiceCustomArrayOutput)
}

type GetProxypolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetProxypolicyInternetServiceCustomOutput) ToGetProxypolicyInternetServiceCustomOutput() GetProxypolicyInternetServiceCustomOutput {
	return o
}

func (o GetProxypolicyInternetServiceCustomOutput) ToGetProxypolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceCustomOutput {
	return o
}

// Group name.
func (o GetProxypolicyInternetServiceCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyInternetServiceCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetProxypolicyInternetServiceCustomArrayOutput) ToGetProxypolicyInternetServiceCustomArrayOutput() GetProxypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetProxypolicyInternetServiceCustomArrayOutput) ToGetProxypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetProxypolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) GetProxypolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyInternetServiceCustom {
		return vs[0].([]GetProxypolicyInternetServiceCustom)[vs[1].(int)]
	}).(GetProxypolicyInternetServiceCustomOutput)
}

type GetProxypolicyInternetServiceCustomGroup struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyInternetServiceCustomGroupInput is an input type that accepts GetProxypolicyInternetServiceCustomGroupArgs and GetProxypolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetServiceCustomGroupInput` via:
//
//	GetProxypolicyInternetServiceCustomGroupArgs{...}
type GetProxypolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToGetProxypolicyInternetServiceCustomGroupOutput() GetProxypolicyInternetServiceCustomGroupOutput
	ToGetProxypolicyInternetServiceCustomGroupOutputWithContext(context.Context) GetProxypolicyInternetServiceCustomGroupOutput
}

type GetProxypolicyInternetServiceCustomGroupArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetProxypolicyInternetServiceCustomGroupArgs) ToGetProxypolicyInternetServiceCustomGroupOutput() GetProxypolicyInternetServiceCustomGroupOutput {
	return i.ToGetProxypolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetServiceCustomGroupArgs) ToGetProxypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetServiceCustomGroupOutput)
}

// GetProxypolicyInternetServiceCustomGroupArrayInput is an input type that accepts GetProxypolicyInternetServiceCustomGroupArray and GetProxypolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetServiceCustomGroupArrayInput` via:
//
//	GetProxypolicyInternetServiceCustomGroupArray{ GetProxypolicyInternetServiceCustomGroupArgs{...} }
type GetProxypolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToGetProxypolicyInternetServiceCustomGroupArrayOutput() GetProxypolicyInternetServiceCustomGroupArrayOutput
	ToGetProxypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) GetProxypolicyInternetServiceCustomGroupArrayOutput
}

type GetProxypolicyInternetServiceCustomGroupArray []GetProxypolicyInternetServiceCustomGroupInput

func (GetProxypolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetProxypolicyInternetServiceCustomGroupArray) ToGetProxypolicyInternetServiceCustomGroupArrayOutput() GetProxypolicyInternetServiceCustomGroupArrayOutput {
	return i.ToGetProxypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetServiceCustomGroupArray) ToGetProxypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetServiceCustomGroupArrayOutput)
}

type GetProxypolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetProxypolicyInternetServiceCustomGroupOutput) ToGetProxypolicyInternetServiceCustomGroupOutput() GetProxypolicyInternetServiceCustomGroupOutput {
	return o
}

func (o GetProxypolicyInternetServiceCustomGroupOutput) ToGetProxypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceCustomGroupOutput {
	return o
}

// Group name.
func (o GetProxypolicyInternetServiceCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyInternetServiceCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetProxypolicyInternetServiceCustomGroupArrayOutput) ToGetProxypolicyInternetServiceCustomGroupArrayOutput() GetProxypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetProxypolicyInternetServiceCustomGroupArrayOutput) ToGetProxypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetProxypolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) GetProxypolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyInternetServiceCustomGroup {
		return vs[0].([]GetProxypolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(GetProxypolicyInternetServiceCustomGroupOutput)
}

type GetProxypolicyInternetServiceGroup struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyInternetServiceGroupInput is an input type that accepts GetProxypolicyInternetServiceGroupArgs and GetProxypolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetServiceGroupInput` via:
//
//	GetProxypolicyInternetServiceGroupArgs{...}
type GetProxypolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToGetProxypolicyInternetServiceGroupOutput() GetProxypolicyInternetServiceGroupOutput
	ToGetProxypolicyInternetServiceGroupOutputWithContext(context.Context) GetProxypolicyInternetServiceGroupOutput
}

type GetProxypolicyInternetServiceGroupArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetProxypolicyInternetServiceGroupArgs) ToGetProxypolicyInternetServiceGroupOutput() GetProxypolicyInternetServiceGroupOutput {
	return i.ToGetProxypolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetServiceGroupArgs) ToGetProxypolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetServiceGroupOutput)
}

// GetProxypolicyInternetServiceGroupArrayInput is an input type that accepts GetProxypolicyInternetServiceGroupArray and GetProxypolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetServiceGroupArrayInput` via:
//
//	GetProxypolicyInternetServiceGroupArray{ GetProxypolicyInternetServiceGroupArgs{...} }
type GetProxypolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToGetProxypolicyInternetServiceGroupArrayOutput() GetProxypolicyInternetServiceGroupArrayOutput
	ToGetProxypolicyInternetServiceGroupArrayOutputWithContext(context.Context) GetProxypolicyInternetServiceGroupArrayOutput
}

type GetProxypolicyInternetServiceGroupArray []GetProxypolicyInternetServiceGroupInput

func (GetProxypolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetProxypolicyInternetServiceGroupArray) ToGetProxypolicyInternetServiceGroupArrayOutput() GetProxypolicyInternetServiceGroupArrayOutput {
	return i.ToGetProxypolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetServiceGroupArray) ToGetProxypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetServiceGroupArrayOutput)
}

type GetProxypolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetProxypolicyInternetServiceGroupOutput) ToGetProxypolicyInternetServiceGroupOutput() GetProxypolicyInternetServiceGroupOutput {
	return o
}

func (o GetProxypolicyInternetServiceGroupOutput) ToGetProxypolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceGroupOutput {
	return o
}

// Group name.
func (o GetProxypolicyInternetServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyInternetServiceGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetProxypolicyInternetServiceGroupArrayOutput) ToGetProxypolicyInternetServiceGroupArrayOutput() GetProxypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetProxypolicyInternetServiceGroupArrayOutput) ToGetProxypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetProxypolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) GetProxypolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyInternetServiceGroup {
		return vs[0].([]GetProxypolicyInternetServiceGroup)[vs[1].(int)]
	}).(GetProxypolicyInternetServiceGroupOutput)
}

type GetProxypolicyInternetServiceId struct {
	// Internet Service ID.
	Id int `pulumi:"id"`
}

// GetProxypolicyInternetServiceIdInput is an input type that accepts GetProxypolicyInternetServiceIdArgs and GetProxypolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetServiceIdInput` via:
//
//	GetProxypolicyInternetServiceIdArgs{...}
type GetProxypolicyInternetServiceIdInput interface {
	pulumi.Input

	ToGetProxypolicyInternetServiceIdOutput() GetProxypolicyInternetServiceIdOutput
	ToGetProxypolicyInternetServiceIdOutputWithContext(context.Context) GetProxypolicyInternetServiceIdOutput
}

type GetProxypolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetProxypolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetServiceId)(nil)).Elem()
}

func (i GetProxypolicyInternetServiceIdArgs) ToGetProxypolicyInternetServiceIdOutput() GetProxypolicyInternetServiceIdOutput {
	return i.ToGetProxypolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetServiceIdArgs) ToGetProxypolicyInternetServiceIdOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetServiceIdOutput)
}

// GetProxypolicyInternetServiceIdArrayInput is an input type that accepts GetProxypolicyInternetServiceIdArray and GetProxypolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetServiceIdArrayInput` via:
//
//	GetProxypolicyInternetServiceIdArray{ GetProxypolicyInternetServiceIdArgs{...} }
type GetProxypolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToGetProxypolicyInternetServiceIdArrayOutput() GetProxypolicyInternetServiceIdArrayOutput
	ToGetProxypolicyInternetServiceIdArrayOutputWithContext(context.Context) GetProxypolicyInternetServiceIdArrayOutput
}

type GetProxypolicyInternetServiceIdArray []GetProxypolicyInternetServiceIdInput

func (GetProxypolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetServiceId)(nil)).Elem()
}

func (i GetProxypolicyInternetServiceIdArray) ToGetProxypolicyInternetServiceIdArrayOutput() GetProxypolicyInternetServiceIdArrayOutput {
	return i.ToGetProxypolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetServiceIdArray) ToGetProxypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetServiceIdArrayOutput)
}

type GetProxypolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetServiceId)(nil)).Elem()
}

func (o GetProxypolicyInternetServiceIdOutput) ToGetProxypolicyInternetServiceIdOutput() GetProxypolicyInternetServiceIdOutput {
	return o
}

func (o GetProxypolicyInternetServiceIdOutput) ToGetProxypolicyInternetServiceIdOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o GetProxypolicyInternetServiceIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetProxypolicyInternetServiceId) int { return v.Id }).(pulumi.IntOutput)
}

type GetProxypolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetServiceId)(nil)).Elem()
}

func (o GetProxypolicyInternetServiceIdArrayOutput) ToGetProxypolicyInternetServiceIdArrayOutput() GetProxypolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetProxypolicyInternetServiceIdArrayOutput) ToGetProxypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetProxypolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) GetProxypolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyInternetServiceId {
		return vs[0].([]GetProxypolicyInternetServiceId)[vs[1].(int)]
	}).(GetProxypolicyInternetServiceIdOutput)
}

type GetProxypolicyInternetServiceName struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyInternetServiceNameInput is an input type that accepts GetProxypolicyInternetServiceNameArgs and GetProxypolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetServiceNameInput` via:
//
//	GetProxypolicyInternetServiceNameArgs{...}
type GetProxypolicyInternetServiceNameInput interface {
	pulumi.Input

	ToGetProxypolicyInternetServiceNameOutput() GetProxypolicyInternetServiceNameOutput
	ToGetProxypolicyInternetServiceNameOutputWithContext(context.Context) GetProxypolicyInternetServiceNameOutput
}

type GetProxypolicyInternetServiceNameArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetServiceName)(nil)).Elem()
}

func (i GetProxypolicyInternetServiceNameArgs) ToGetProxypolicyInternetServiceNameOutput() GetProxypolicyInternetServiceNameOutput {
	return i.ToGetProxypolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetServiceNameArgs) ToGetProxypolicyInternetServiceNameOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetServiceNameOutput)
}

// GetProxypolicyInternetServiceNameArrayInput is an input type that accepts GetProxypolicyInternetServiceNameArray and GetProxypolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyInternetServiceNameArrayInput` via:
//
//	GetProxypolicyInternetServiceNameArray{ GetProxypolicyInternetServiceNameArgs{...} }
type GetProxypolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToGetProxypolicyInternetServiceNameArrayOutput() GetProxypolicyInternetServiceNameArrayOutput
	ToGetProxypolicyInternetServiceNameArrayOutputWithContext(context.Context) GetProxypolicyInternetServiceNameArrayOutput
}

type GetProxypolicyInternetServiceNameArray []GetProxypolicyInternetServiceNameInput

func (GetProxypolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetServiceName)(nil)).Elem()
}

func (i GetProxypolicyInternetServiceNameArray) ToGetProxypolicyInternetServiceNameArrayOutput() GetProxypolicyInternetServiceNameArrayOutput {
	return i.ToGetProxypolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyInternetServiceNameArray) ToGetProxypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyInternetServiceNameArrayOutput)
}

type GetProxypolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyInternetServiceName)(nil)).Elem()
}

func (o GetProxypolicyInternetServiceNameOutput) ToGetProxypolicyInternetServiceNameOutput() GetProxypolicyInternetServiceNameOutput {
	return o
}

func (o GetProxypolicyInternetServiceNameOutput) ToGetProxypolicyInternetServiceNameOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceNameOutput {
	return o
}

// Group name.
func (o GetProxypolicyInternetServiceNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyInternetServiceName) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyInternetServiceName)(nil)).Elem()
}

func (o GetProxypolicyInternetServiceNameArrayOutput) ToGetProxypolicyInternetServiceNameArrayOutput() GetProxypolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetProxypolicyInternetServiceNameArrayOutput) ToGetProxypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetProxypolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetProxypolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) GetProxypolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyInternetServiceName {
		return vs[0].([]GetProxypolicyInternetServiceName)[vs[1].(int)]
	}).(GetProxypolicyInternetServiceNameOutput)
}

type GetProxypolicyPoolname struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyPoolnameInput is an input type that accepts GetProxypolicyPoolnameArgs and GetProxypolicyPoolnameOutput values.
// You can construct a concrete instance of `GetProxypolicyPoolnameInput` via:
//
//	GetProxypolicyPoolnameArgs{...}
type GetProxypolicyPoolnameInput interface {
	pulumi.Input

	ToGetProxypolicyPoolnameOutput() GetProxypolicyPoolnameOutput
	ToGetProxypolicyPoolnameOutputWithContext(context.Context) GetProxypolicyPoolnameOutput
}

type GetProxypolicyPoolnameArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyPoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyPoolname)(nil)).Elem()
}

func (i GetProxypolicyPoolnameArgs) ToGetProxypolicyPoolnameOutput() GetProxypolicyPoolnameOutput {
	return i.ToGetProxypolicyPoolnameOutputWithContext(context.Background())
}

func (i GetProxypolicyPoolnameArgs) ToGetProxypolicyPoolnameOutputWithContext(ctx context.Context) GetProxypolicyPoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyPoolnameOutput)
}

// GetProxypolicyPoolnameArrayInput is an input type that accepts GetProxypolicyPoolnameArray and GetProxypolicyPoolnameArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyPoolnameArrayInput` via:
//
//	GetProxypolicyPoolnameArray{ GetProxypolicyPoolnameArgs{...} }
type GetProxypolicyPoolnameArrayInput interface {
	pulumi.Input

	ToGetProxypolicyPoolnameArrayOutput() GetProxypolicyPoolnameArrayOutput
	ToGetProxypolicyPoolnameArrayOutputWithContext(context.Context) GetProxypolicyPoolnameArrayOutput
}

type GetProxypolicyPoolnameArray []GetProxypolicyPoolnameInput

func (GetProxypolicyPoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyPoolname)(nil)).Elem()
}

func (i GetProxypolicyPoolnameArray) ToGetProxypolicyPoolnameArrayOutput() GetProxypolicyPoolnameArrayOutput {
	return i.ToGetProxypolicyPoolnameArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyPoolnameArray) ToGetProxypolicyPoolnameArrayOutputWithContext(ctx context.Context) GetProxypolicyPoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyPoolnameArrayOutput)
}

type GetProxypolicyPoolnameOutput struct{ *pulumi.OutputState }

func (GetProxypolicyPoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyPoolname)(nil)).Elem()
}

func (o GetProxypolicyPoolnameOutput) ToGetProxypolicyPoolnameOutput() GetProxypolicyPoolnameOutput {
	return o
}

func (o GetProxypolicyPoolnameOutput) ToGetProxypolicyPoolnameOutputWithContext(ctx context.Context) GetProxypolicyPoolnameOutput {
	return o
}

// Group name.
func (o GetProxypolicyPoolnameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyPoolname) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyPoolnameArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyPoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyPoolname)(nil)).Elem()
}

func (o GetProxypolicyPoolnameArrayOutput) ToGetProxypolicyPoolnameArrayOutput() GetProxypolicyPoolnameArrayOutput {
	return o
}

func (o GetProxypolicyPoolnameArrayOutput) ToGetProxypolicyPoolnameArrayOutputWithContext(ctx context.Context) GetProxypolicyPoolnameArrayOutput {
	return o
}

func (o GetProxypolicyPoolnameArrayOutput) Index(i pulumi.IntInput) GetProxypolicyPoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyPoolname {
		return vs[0].([]GetProxypolicyPoolname)[vs[1].(int)]
	}).(GetProxypolicyPoolnameOutput)
}

type GetProxypolicyService struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyServiceInput is an input type that accepts GetProxypolicyServiceArgs and GetProxypolicyServiceOutput values.
// You can construct a concrete instance of `GetProxypolicyServiceInput` via:
//
//	GetProxypolicyServiceArgs{...}
type GetProxypolicyServiceInput interface {
	pulumi.Input

	ToGetProxypolicyServiceOutput() GetProxypolicyServiceOutput
	ToGetProxypolicyServiceOutputWithContext(context.Context) GetProxypolicyServiceOutput
}

type GetProxypolicyServiceArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyService)(nil)).Elem()
}

func (i GetProxypolicyServiceArgs) ToGetProxypolicyServiceOutput() GetProxypolicyServiceOutput {
	return i.ToGetProxypolicyServiceOutputWithContext(context.Background())
}

func (i GetProxypolicyServiceArgs) ToGetProxypolicyServiceOutputWithContext(ctx context.Context) GetProxypolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyServiceOutput)
}

// GetProxypolicyServiceArrayInput is an input type that accepts GetProxypolicyServiceArray and GetProxypolicyServiceArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyServiceArrayInput` via:
//
//	GetProxypolicyServiceArray{ GetProxypolicyServiceArgs{...} }
type GetProxypolicyServiceArrayInput interface {
	pulumi.Input

	ToGetProxypolicyServiceArrayOutput() GetProxypolicyServiceArrayOutput
	ToGetProxypolicyServiceArrayOutputWithContext(context.Context) GetProxypolicyServiceArrayOutput
}

type GetProxypolicyServiceArray []GetProxypolicyServiceInput

func (GetProxypolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyService)(nil)).Elem()
}

func (i GetProxypolicyServiceArray) ToGetProxypolicyServiceArrayOutput() GetProxypolicyServiceArrayOutput {
	return i.ToGetProxypolicyServiceArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyServiceArray) ToGetProxypolicyServiceArrayOutputWithContext(ctx context.Context) GetProxypolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyServiceArrayOutput)
}

type GetProxypolicyServiceOutput struct{ *pulumi.OutputState }

func (GetProxypolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyService)(nil)).Elem()
}

func (o GetProxypolicyServiceOutput) ToGetProxypolicyServiceOutput() GetProxypolicyServiceOutput {
	return o
}

func (o GetProxypolicyServiceOutput) ToGetProxypolicyServiceOutputWithContext(ctx context.Context) GetProxypolicyServiceOutput {
	return o
}

// Group name.
func (o GetProxypolicyServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyService) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyService)(nil)).Elem()
}

func (o GetProxypolicyServiceArrayOutput) ToGetProxypolicyServiceArrayOutput() GetProxypolicyServiceArrayOutput {
	return o
}

func (o GetProxypolicyServiceArrayOutput) ToGetProxypolicyServiceArrayOutputWithContext(ctx context.Context) GetProxypolicyServiceArrayOutput {
	return o
}

func (o GetProxypolicyServiceArrayOutput) Index(i pulumi.IntInput) GetProxypolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyService {
		return vs[0].([]GetProxypolicyService)[vs[1].(int)]
	}).(GetProxypolicyServiceOutput)
}

type GetProxypolicySrcaddr6 struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicySrcaddr6Input is an input type that accepts GetProxypolicySrcaddr6Args and GetProxypolicySrcaddr6Output values.
// You can construct a concrete instance of `GetProxypolicySrcaddr6Input` via:
//
//	GetProxypolicySrcaddr6Args{...}
type GetProxypolicySrcaddr6Input interface {
	pulumi.Input

	ToGetProxypolicySrcaddr6Output() GetProxypolicySrcaddr6Output
	ToGetProxypolicySrcaddr6OutputWithContext(context.Context) GetProxypolicySrcaddr6Output
}

type GetProxypolicySrcaddr6Args struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicySrcaddr6)(nil)).Elem()
}

func (i GetProxypolicySrcaddr6Args) ToGetProxypolicySrcaddr6Output() GetProxypolicySrcaddr6Output {
	return i.ToGetProxypolicySrcaddr6OutputWithContext(context.Background())
}

func (i GetProxypolicySrcaddr6Args) ToGetProxypolicySrcaddr6OutputWithContext(ctx context.Context) GetProxypolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicySrcaddr6Output)
}

// GetProxypolicySrcaddr6ArrayInput is an input type that accepts GetProxypolicySrcaddr6Array and GetProxypolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `GetProxypolicySrcaddr6ArrayInput` via:
//
//	GetProxypolicySrcaddr6Array{ GetProxypolicySrcaddr6Args{...} }
type GetProxypolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToGetProxypolicySrcaddr6ArrayOutput() GetProxypolicySrcaddr6ArrayOutput
	ToGetProxypolicySrcaddr6ArrayOutputWithContext(context.Context) GetProxypolicySrcaddr6ArrayOutput
}

type GetProxypolicySrcaddr6Array []GetProxypolicySrcaddr6Input

func (GetProxypolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicySrcaddr6)(nil)).Elem()
}

func (i GetProxypolicySrcaddr6Array) ToGetProxypolicySrcaddr6ArrayOutput() GetProxypolicySrcaddr6ArrayOutput {
	return i.ToGetProxypolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i GetProxypolicySrcaddr6Array) ToGetProxypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetProxypolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicySrcaddr6ArrayOutput)
}

type GetProxypolicySrcaddr6Output struct{ *pulumi.OutputState }

func (GetProxypolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicySrcaddr6)(nil)).Elem()
}

func (o GetProxypolicySrcaddr6Output) ToGetProxypolicySrcaddr6Output() GetProxypolicySrcaddr6Output {
	return o
}

func (o GetProxypolicySrcaddr6Output) ToGetProxypolicySrcaddr6OutputWithContext(ctx context.Context) GetProxypolicySrcaddr6Output {
	return o
}

// Group name.
func (o GetProxypolicySrcaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicySrcaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicySrcaddr6)(nil)).Elem()
}

func (o GetProxypolicySrcaddr6ArrayOutput) ToGetProxypolicySrcaddr6ArrayOutput() GetProxypolicySrcaddr6ArrayOutput {
	return o
}

func (o GetProxypolicySrcaddr6ArrayOutput) ToGetProxypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetProxypolicySrcaddr6ArrayOutput {
	return o
}

func (o GetProxypolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) GetProxypolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicySrcaddr6 {
		return vs[0].([]GetProxypolicySrcaddr6)[vs[1].(int)]
	}).(GetProxypolicySrcaddr6Output)
}

type GetProxypolicySrcaddr struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicySrcaddrInput is an input type that accepts GetProxypolicySrcaddrArgs and GetProxypolicySrcaddrOutput values.
// You can construct a concrete instance of `GetProxypolicySrcaddrInput` via:
//
//	GetProxypolicySrcaddrArgs{...}
type GetProxypolicySrcaddrInput interface {
	pulumi.Input

	ToGetProxypolicySrcaddrOutput() GetProxypolicySrcaddrOutput
	ToGetProxypolicySrcaddrOutputWithContext(context.Context) GetProxypolicySrcaddrOutput
}

type GetProxypolicySrcaddrArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicySrcaddr)(nil)).Elem()
}

func (i GetProxypolicySrcaddrArgs) ToGetProxypolicySrcaddrOutput() GetProxypolicySrcaddrOutput {
	return i.ToGetProxypolicySrcaddrOutputWithContext(context.Background())
}

func (i GetProxypolicySrcaddrArgs) ToGetProxypolicySrcaddrOutputWithContext(ctx context.Context) GetProxypolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicySrcaddrOutput)
}

// GetProxypolicySrcaddrArrayInput is an input type that accepts GetProxypolicySrcaddrArray and GetProxypolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `GetProxypolicySrcaddrArrayInput` via:
//
//	GetProxypolicySrcaddrArray{ GetProxypolicySrcaddrArgs{...} }
type GetProxypolicySrcaddrArrayInput interface {
	pulumi.Input

	ToGetProxypolicySrcaddrArrayOutput() GetProxypolicySrcaddrArrayOutput
	ToGetProxypolicySrcaddrArrayOutputWithContext(context.Context) GetProxypolicySrcaddrArrayOutput
}

type GetProxypolicySrcaddrArray []GetProxypolicySrcaddrInput

func (GetProxypolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicySrcaddr)(nil)).Elem()
}

func (i GetProxypolicySrcaddrArray) ToGetProxypolicySrcaddrArrayOutput() GetProxypolicySrcaddrArrayOutput {
	return i.ToGetProxypolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i GetProxypolicySrcaddrArray) ToGetProxypolicySrcaddrArrayOutputWithContext(ctx context.Context) GetProxypolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicySrcaddrArrayOutput)
}

type GetProxypolicySrcaddrOutput struct{ *pulumi.OutputState }

func (GetProxypolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicySrcaddr)(nil)).Elem()
}

func (o GetProxypolicySrcaddrOutput) ToGetProxypolicySrcaddrOutput() GetProxypolicySrcaddrOutput {
	return o
}

func (o GetProxypolicySrcaddrOutput) ToGetProxypolicySrcaddrOutputWithContext(ctx context.Context) GetProxypolicySrcaddrOutput {
	return o
}

// Group name.
func (o GetProxypolicySrcaddrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicySrcaddr) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicySrcaddr)(nil)).Elem()
}

func (o GetProxypolicySrcaddrArrayOutput) ToGetProxypolicySrcaddrArrayOutput() GetProxypolicySrcaddrArrayOutput {
	return o
}

func (o GetProxypolicySrcaddrArrayOutput) ToGetProxypolicySrcaddrArrayOutputWithContext(ctx context.Context) GetProxypolicySrcaddrArrayOutput {
	return o
}

func (o GetProxypolicySrcaddrArrayOutput) Index(i pulumi.IntInput) GetProxypolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicySrcaddr {
		return vs[0].([]GetProxypolicySrcaddr)[vs[1].(int)]
	}).(GetProxypolicySrcaddrOutput)
}

type GetProxypolicySrcintf struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicySrcintfInput is an input type that accepts GetProxypolicySrcintfArgs and GetProxypolicySrcintfOutput values.
// You can construct a concrete instance of `GetProxypolicySrcintfInput` via:
//
//	GetProxypolicySrcintfArgs{...}
type GetProxypolicySrcintfInput interface {
	pulumi.Input

	ToGetProxypolicySrcintfOutput() GetProxypolicySrcintfOutput
	ToGetProxypolicySrcintfOutputWithContext(context.Context) GetProxypolicySrcintfOutput
}

type GetProxypolicySrcintfArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicySrcintf)(nil)).Elem()
}

func (i GetProxypolicySrcintfArgs) ToGetProxypolicySrcintfOutput() GetProxypolicySrcintfOutput {
	return i.ToGetProxypolicySrcintfOutputWithContext(context.Background())
}

func (i GetProxypolicySrcintfArgs) ToGetProxypolicySrcintfOutputWithContext(ctx context.Context) GetProxypolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicySrcintfOutput)
}

// GetProxypolicySrcintfArrayInput is an input type that accepts GetProxypolicySrcintfArray and GetProxypolicySrcintfArrayOutput values.
// You can construct a concrete instance of `GetProxypolicySrcintfArrayInput` via:
//
//	GetProxypolicySrcintfArray{ GetProxypolicySrcintfArgs{...} }
type GetProxypolicySrcintfArrayInput interface {
	pulumi.Input

	ToGetProxypolicySrcintfArrayOutput() GetProxypolicySrcintfArrayOutput
	ToGetProxypolicySrcintfArrayOutputWithContext(context.Context) GetProxypolicySrcintfArrayOutput
}

type GetProxypolicySrcintfArray []GetProxypolicySrcintfInput

func (GetProxypolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicySrcintf)(nil)).Elem()
}

func (i GetProxypolicySrcintfArray) ToGetProxypolicySrcintfArrayOutput() GetProxypolicySrcintfArrayOutput {
	return i.ToGetProxypolicySrcintfArrayOutputWithContext(context.Background())
}

func (i GetProxypolicySrcintfArray) ToGetProxypolicySrcintfArrayOutputWithContext(ctx context.Context) GetProxypolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicySrcintfArrayOutput)
}

type GetProxypolicySrcintfOutput struct{ *pulumi.OutputState }

func (GetProxypolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicySrcintf)(nil)).Elem()
}

func (o GetProxypolicySrcintfOutput) ToGetProxypolicySrcintfOutput() GetProxypolicySrcintfOutput {
	return o
}

func (o GetProxypolicySrcintfOutput) ToGetProxypolicySrcintfOutputWithContext(ctx context.Context) GetProxypolicySrcintfOutput {
	return o
}

// Group name.
func (o GetProxypolicySrcintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicySrcintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicySrcintf)(nil)).Elem()
}

func (o GetProxypolicySrcintfArrayOutput) ToGetProxypolicySrcintfArrayOutput() GetProxypolicySrcintfArrayOutput {
	return o
}

func (o GetProxypolicySrcintfArrayOutput) ToGetProxypolicySrcintfArrayOutputWithContext(ctx context.Context) GetProxypolicySrcintfArrayOutput {
	return o
}

func (o GetProxypolicySrcintfArrayOutput) Index(i pulumi.IntInput) GetProxypolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicySrcintf {
		return vs[0].([]GetProxypolicySrcintf)[vs[1].(int)]
	}).(GetProxypolicySrcintfOutput)
}

type GetProxypolicyUser struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyUserInput is an input type that accepts GetProxypolicyUserArgs and GetProxypolicyUserOutput values.
// You can construct a concrete instance of `GetProxypolicyUserInput` via:
//
//	GetProxypolicyUserArgs{...}
type GetProxypolicyUserInput interface {
	pulumi.Input

	ToGetProxypolicyUserOutput() GetProxypolicyUserOutput
	ToGetProxypolicyUserOutputWithContext(context.Context) GetProxypolicyUserOutput
}

type GetProxypolicyUserArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyUser)(nil)).Elem()
}

func (i GetProxypolicyUserArgs) ToGetProxypolicyUserOutput() GetProxypolicyUserOutput {
	return i.ToGetProxypolicyUserOutputWithContext(context.Background())
}

func (i GetProxypolicyUserArgs) ToGetProxypolicyUserOutputWithContext(ctx context.Context) GetProxypolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyUserOutput)
}

// GetProxypolicyUserArrayInput is an input type that accepts GetProxypolicyUserArray and GetProxypolicyUserArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyUserArrayInput` via:
//
//	GetProxypolicyUserArray{ GetProxypolicyUserArgs{...} }
type GetProxypolicyUserArrayInput interface {
	pulumi.Input

	ToGetProxypolicyUserArrayOutput() GetProxypolicyUserArrayOutput
	ToGetProxypolicyUserArrayOutputWithContext(context.Context) GetProxypolicyUserArrayOutput
}

type GetProxypolicyUserArray []GetProxypolicyUserInput

func (GetProxypolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyUser)(nil)).Elem()
}

func (i GetProxypolicyUserArray) ToGetProxypolicyUserArrayOutput() GetProxypolicyUserArrayOutput {
	return i.ToGetProxypolicyUserArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyUserArray) ToGetProxypolicyUserArrayOutputWithContext(ctx context.Context) GetProxypolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyUserArrayOutput)
}

type GetProxypolicyUserOutput struct{ *pulumi.OutputState }

func (GetProxypolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyUser)(nil)).Elem()
}

func (o GetProxypolicyUserOutput) ToGetProxypolicyUserOutput() GetProxypolicyUserOutput {
	return o
}

func (o GetProxypolicyUserOutput) ToGetProxypolicyUserOutputWithContext(ctx context.Context) GetProxypolicyUserOutput {
	return o
}

// Group name.
func (o GetProxypolicyUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyUserArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyUser)(nil)).Elem()
}

func (o GetProxypolicyUserArrayOutput) ToGetProxypolicyUserArrayOutput() GetProxypolicyUserArrayOutput {
	return o
}

func (o GetProxypolicyUserArrayOutput) ToGetProxypolicyUserArrayOutputWithContext(ctx context.Context) GetProxypolicyUserArrayOutput {
	return o
}

func (o GetProxypolicyUserArrayOutput) Index(i pulumi.IntInput) GetProxypolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyUser {
		return vs[0].([]GetProxypolicyUser)[vs[1].(int)]
	}).(GetProxypolicyUserOutput)
}

type GetProxypolicyZtnaEmsTag struct {
	// Group name.
	Name string `pulumi:"name"`
}

// GetProxypolicyZtnaEmsTagInput is an input type that accepts GetProxypolicyZtnaEmsTagArgs and GetProxypolicyZtnaEmsTagOutput values.
// You can construct a concrete instance of `GetProxypolicyZtnaEmsTagInput` via:
//
//	GetProxypolicyZtnaEmsTagArgs{...}
type GetProxypolicyZtnaEmsTagInput interface {
	pulumi.Input

	ToGetProxypolicyZtnaEmsTagOutput() GetProxypolicyZtnaEmsTagOutput
	ToGetProxypolicyZtnaEmsTagOutputWithContext(context.Context) GetProxypolicyZtnaEmsTagOutput
}

type GetProxypolicyZtnaEmsTagArgs struct {
	// Group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProxypolicyZtnaEmsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (i GetProxypolicyZtnaEmsTagArgs) ToGetProxypolicyZtnaEmsTagOutput() GetProxypolicyZtnaEmsTagOutput {
	return i.ToGetProxypolicyZtnaEmsTagOutputWithContext(context.Background())
}

func (i GetProxypolicyZtnaEmsTagArgs) ToGetProxypolicyZtnaEmsTagOutputWithContext(ctx context.Context) GetProxypolicyZtnaEmsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyZtnaEmsTagOutput)
}

// GetProxypolicyZtnaEmsTagArrayInput is an input type that accepts GetProxypolicyZtnaEmsTagArray and GetProxypolicyZtnaEmsTagArrayOutput values.
// You can construct a concrete instance of `GetProxypolicyZtnaEmsTagArrayInput` via:
//
//	GetProxypolicyZtnaEmsTagArray{ GetProxypolicyZtnaEmsTagArgs{...} }
type GetProxypolicyZtnaEmsTagArrayInput interface {
	pulumi.Input

	ToGetProxypolicyZtnaEmsTagArrayOutput() GetProxypolicyZtnaEmsTagArrayOutput
	ToGetProxypolicyZtnaEmsTagArrayOutputWithContext(context.Context) GetProxypolicyZtnaEmsTagArrayOutput
}

type GetProxypolicyZtnaEmsTagArray []GetProxypolicyZtnaEmsTagInput

func (GetProxypolicyZtnaEmsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (i GetProxypolicyZtnaEmsTagArray) ToGetProxypolicyZtnaEmsTagArrayOutput() GetProxypolicyZtnaEmsTagArrayOutput {
	return i.ToGetProxypolicyZtnaEmsTagArrayOutputWithContext(context.Background())
}

func (i GetProxypolicyZtnaEmsTagArray) ToGetProxypolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) GetProxypolicyZtnaEmsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxypolicyZtnaEmsTagArrayOutput)
}

type GetProxypolicyZtnaEmsTagOutput struct{ *pulumi.OutputState }

func (GetProxypolicyZtnaEmsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (o GetProxypolicyZtnaEmsTagOutput) ToGetProxypolicyZtnaEmsTagOutput() GetProxypolicyZtnaEmsTagOutput {
	return o
}

func (o GetProxypolicyZtnaEmsTagOutput) ToGetProxypolicyZtnaEmsTagOutputWithContext(ctx context.Context) GetProxypolicyZtnaEmsTagOutput {
	return o
}

// Group name.
func (o GetProxypolicyZtnaEmsTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxypolicyZtnaEmsTag) string { return v.Name }).(pulumi.StringOutput)
}

type GetProxypolicyZtnaEmsTagArrayOutput struct{ *pulumi.OutputState }

func (GetProxypolicyZtnaEmsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (o GetProxypolicyZtnaEmsTagArrayOutput) ToGetProxypolicyZtnaEmsTagArrayOutput() GetProxypolicyZtnaEmsTagArrayOutput {
	return o
}

func (o GetProxypolicyZtnaEmsTagArrayOutput) ToGetProxypolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) GetProxypolicyZtnaEmsTagArrayOutput {
	return o
}

func (o GetProxypolicyZtnaEmsTagArrayOutput) Index(i pulumi.IntInput) GetProxypolicyZtnaEmsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxypolicyZtnaEmsTag {
		return vs[0].([]GetProxypolicyZtnaEmsTag)[vs[1].(int)]
	}).(GetProxypolicyZtnaEmsTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6Input)(nil)).Elem(), Accessproxy6ApiGateway6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6ArrayInput)(nil)).Elem(), Accessproxy6ApiGateway6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6ApplicationInput)(nil)).Elem(), Accessproxy6ApiGateway6ApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6ApplicationArrayInput)(nil)).Elem(), Accessproxy6ApiGateway6ApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6QuicInput)(nil)).Elem(), Accessproxy6ApiGateway6QuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6QuicPtrInput)(nil)).Elem(), Accessproxy6ApiGateway6QuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6RealserverInput)(nil)).Elem(), Accessproxy6ApiGateway6RealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6RealserverArrayInput)(nil)).Elem(), Accessproxy6ApiGateway6RealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6RealserverSshHostKeyInput)(nil)).Elem(), Accessproxy6ApiGateway6RealserverSshHostKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6RealserverSshHostKeyArrayInput)(nil)).Elem(), Accessproxy6ApiGateway6RealserverSshHostKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6SslCipherSuiteInput)(nil)).Elem(), Accessproxy6ApiGateway6SslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGateway6SslCipherSuiteArrayInput)(nil)).Elem(), Accessproxy6ApiGateway6SslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewayInput)(nil)).Elem(), Accessproxy6ApiGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewayArrayInput)(nil)).Elem(), Accessproxy6ApiGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewayApplicationInput)(nil)).Elem(), Accessproxy6ApiGatewayApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewayApplicationArrayInput)(nil)).Elem(), Accessproxy6ApiGatewayApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewayQuicInput)(nil)).Elem(), Accessproxy6ApiGatewayQuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewayQuicPtrInput)(nil)).Elem(), Accessproxy6ApiGatewayQuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewayRealserverInput)(nil)).Elem(), Accessproxy6ApiGatewayRealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewayRealserverArrayInput)(nil)).Elem(), Accessproxy6ApiGatewayRealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewayRealserverSshHostKeyInput)(nil)).Elem(), Accessproxy6ApiGatewayRealserverSshHostKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewayRealserverSshHostKeyArrayInput)(nil)).Elem(), Accessproxy6ApiGatewayRealserverSshHostKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewaySslCipherSuiteInput)(nil)).Elem(), Accessproxy6ApiGatewaySslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ApiGatewaySslCipherSuiteArrayInput)(nil)).Elem(), Accessproxy6ApiGatewaySslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6Input)(nil)).Elem(), AccessproxyApiGateway6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6ArrayInput)(nil)).Elem(), AccessproxyApiGateway6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6ApplicationInput)(nil)).Elem(), AccessproxyApiGateway6ApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6ApplicationArrayInput)(nil)).Elem(), AccessproxyApiGateway6ApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6QuicInput)(nil)).Elem(), AccessproxyApiGateway6QuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6QuicPtrInput)(nil)).Elem(), AccessproxyApiGateway6QuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6RealserverInput)(nil)).Elem(), AccessproxyApiGateway6RealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6RealserverArrayInput)(nil)).Elem(), AccessproxyApiGateway6RealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6RealserverSshHostKeyInput)(nil)).Elem(), AccessproxyApiGateway6RealserverSshHostKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6RealserverSshHostKeyArrayInput)(nil)).Elem(), AccessproxyApiGateway6RealserverSshHostKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6SslCipherSuiteInput)(nil)).Elem(), AccessproxyApiGateway6SslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGateway6SslCipherSuiteArrayInput)(nil)).Elem(), AccessproxyApiGateway6SslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewayInput)(nil)).Elem(), AccessproxyApiGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewayArrayInput)(nil)).Elem(), AccessproxyApiGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewayApplicationInput)(nil)).Elem(), AccessproxyApiGatewayApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewayApplicationArrayInput)(nil)).Elem(), AccessproxyApiGatewayApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewayQuicInput)(nil)).Elem(), AccessproxyApiGatewayQuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewayQuicPtrInput)(nil)).Elem(), AccessproxyApiGatewayQuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewayRealserverInput)(nil)).Elem(), AccessproxyApiGatewayRealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewayRealserverArrayInput)(nil)).Elem(), AccessproxyApiGatewayRealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewayRealserverSshHostKeyInput)(nil)).Elem(), AccessproxyApiGatewayRealserverSshHostKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewayRealserverSshHostKeyArrayInput)(nil)).Elem(), AccessproxyApiGatewayRealserverSshHostKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewaySslCipherSuiteInput)(nil)).Elem(), AccessproxyApiGatewaySslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxyApiGatewaySslCipherSuiteArrayInput)(nil)).Elem(), AccessproxyApiGatewaySslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxysshclientcertCertExtensionInput)(nil)).Elem(), AccessproxysshclientcertCertExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxysshclientcertCertExtensionArrayInput)(nil)).Elem(), AccessproxysshclientcertCertExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6ListInput)(nil)).Elem(), Address6ListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6ListArrayInput)(nil)).Elem(), Address6ListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6MacaddrInput)(nil)).Elem(), Address6MacaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6MacaddrArrayInput)(nil)).Elem(), Address6MacaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6SubnetSegmentInput)(nil)).Elem(), Address6SubnetSegmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6SubnetSegmentArrayInput)(nil)).Elem(), Address6SubnetSegmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6TaggingInput)(nil)).Elem(), Address6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6TaggingArrayInput)(nil)).Elem(), Address6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6TaggingTagInput)(nil)).Elem(), Address6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6TaggingTagArrayInput)(nil)).Elem(), Address6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6templateSubnetSegmentInput)(nil)).Elem(), Address6templateSubnetSegmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6templateSubnetSegmentArrayInput)(nil)).Elem(), Address6templateSubnetSegmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6templateSubnetSegmentValueInput)(nil)).Elem(), Address6templateSubnetSegmentValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Address6templateSubnetSegmentValueArrayInput)(nil)).Elem(), Address6templateSubnetSegmentValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressFssoGroupInput)(nil)).Elem(), AddressFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressFssoGroupArrayInput)(nil)).Elem(), AddressFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressListInput)(nil)).Elem(), AddressListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressListArrayInput)(nil)).Elem(), AddressListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressMacaddrInput)(nil)).Elem(), AddressMacaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressMacaddrArrayInput)(nil)).Elem(), AddressMacaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressTaggingInput)(nil)).Elem(), AddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressTaggingArrayInput)(nil)).Elem(), AddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressTaggingTagInput)(nil)).Elem(), AddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressTaggingTagArrayInput)(nil)).Elem(), AddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Addrgrp6ExcludeMemberInput)(nil)).Elem(), Addrgrp6ExcludeMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Addrgrp6ExcludeMemberArrayInput)(nil)).Elem(), Addrgrp6ExcludeMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Addrgrp6MemberInput)(nil)).Elem(), Addrgrp6MemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Addrgrp6MemberArrayInput)(nil)).Elem(), Addrgrp6MemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Addrgrp6TaggingInput)(nil)).Elem(), Addrgrp6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Addrgrp6TaggingArrayInput)(nil)).Elem(), Addrgrp6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Addrgrp6TaggingTagInput)(nil)).Elem(), Addrgrp6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Addrgrp6TaggingTagArrayInput)(nil)).Elem(), Addrgrp6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddrgrpExcludeMemberInput)(nil)).Elem(), AddrgrpExcludeMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddrgrpExcludeMemberArrayInput)(nil)).Elem(), AddrgrpExcludeMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddrgrpMemberInput)(nil)).Elem(), AddrgrpMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddrgrpMemberArrayInput)(nil)).Elem(), AddrgrpMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddrgrpTaggingInput)(nil)).Elem(), AddrgrpTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddrgrpTaggingArrayInput)(nil)).Elem(), AddrgrpTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddrgrpTaggingTagInput)(nil)).Elem(), AddrgrpTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddrgrpTaggingTagArrayInput)(nil)).Elem(), AddrgrpTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthportalGroupInput)(nil)).Elem(), AuthportalGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthportalGroupArrayInput)(nil)).Elem(), AuthportalGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapDstAddr6Input)(nil)).Elem(), CentralsnatmapDstAddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapDstAddr6ArrayInput)(nil)).Elem(), CentralsnatmapDstAddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapDstAddrInput)(nil)).Elem(), CentralsnatmapDstAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapDstAddrArrayInput)(nil)).Elem(), CentralsnatmapDstAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapDstintfInput)(nil)).Elem(), CentralsnatmapDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapDstintfArrayInput)(nil)).Elem(), CentralsnatmapDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapNatIppool6Input)(nil)).Elem(), CentralsnatmapNatIppool6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapNatIppool6ArrayInput)(nil)).Elem(), CentralsnatmapNatIppool6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapNatIppoolInput)(nil)).Elem(), CentralsnatmapNatIppoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapNatIppoolArrayInput)(nil)).Elem(), CentralsnatmapNatIppoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapOrigAddr6Input)(nil)).Elem(), CentralsnatmapOrigAddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapOrigAddr6ArrayInput)(nil)).Elem(), CentralsnatmapOrigAddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapOrigAddrInput)(nil)).Elem(), CentralsnatmapOrigAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapOrigAddrArrayInput)(nil)).Elem(), CentralsnatmapOrigAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapSortStatePolicyListInput)(nil)).Elem(), CentralsnatmapSortStatePolicyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapSortStatePolicyListArrayInput)(nil)).Elem(), CentralsnatmapSortStatePolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapSrcintfInput)(nil)).Elem(), CentralsnatmapSrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapSrcintfArrayInput)(nil)).Elem(), CentralsnatmapSrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CountryRegionInput)(nil)).Elem(), CountryRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CountryRegionArrayInput)(nil)).Elem(), CountryRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DecryptedtrafficmirrorInterfaceInput)(nil)).Elem(), DecryptedtrafficmirrorInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DecryptedtrafficmirrorInterfaceArrayInput)(nil)).Elem(), DecryptedtrafficmirrorInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicy6AnomalyInput)(nil)).Elem(), DoSpolicy6AnomalyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicy6AnomalyArrayInput)(nil)).Elem(), DoSpolicy6AnomalyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicy6DstaddrInput)(nil)).Elem(), DoSpolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicy6DstaddrArrayInput)(nil)).Elem(), DoSpolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicy6ServiceInput)(nil)).Elem(), DoSpolicy6ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicy6ServiceArrayInput)(nil)).Elem(), DoSpolicy6ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicy6SrcaddrInput)(nil)).Elem(), DoSpolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicy6SrcaddrArrayInput)(nil)).Elem(), DoSpolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicyAnomalyInput)(nil)).Elem(), DoSpolicyAnomalyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicyAnomalyArrayInput)(nil)).Elem(), DoSpolicyAnomalyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicyDstaddrInput)(nil)).Elem(), DoSpolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicyDstaddrArrayInput)(nil)).Elem(), DoSpolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicyServiceInput)(nil)).Elem(), DoSpolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicyServiceArrayInput)(nil)).Elem(), DoSpolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicySrcaddrInput)(nil)).Elem(), DoSpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoSpolicySrcaddrArrayInput)(nil)).Elem(), DoSpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitybasedrouteRuleInput)(nil)).Elem(), IdentitybasedrouteRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitybasedrouteRuleArrayInput)(nil)).Elem(), IdentitybasedrouteRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitybasedrouteRuleGroupInput)(nil)).Elem(), IdentitybasedrouteRuleGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitybasedrouteRuleGroupArrayInput)(nil)).Elem(), IdentitybasedrouteRuleGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Interfacepolicy6Dstaddr6Input)(nil)).Elem(), Interfacepolicy6Dstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*Interfacepolicy6Dstaddr6ArrayInput)(nil)).Elem(), Interfacepolicy6Dstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*Interfacepolicy6Service6Input)(nil)).Elem(), Interfacepolicy6Service6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*Interfacepolicy6Service6ArrayInput)(nil)).Elem(), Interfacepolicy6Service6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*Interfacepolicy6Srcaddr6Input)(nil)).Elem(), Interfacepolicy6Srcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*Interfacepolicy6Srcaddr6ArrayInput)(nil)).Elem(), Interfacepolicy6Srcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfacepolicyDstaddrInput)(nil)).Elem(), InterfacepolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfacepolicyDstaddrArrayInput)(nil)).Elem(), InterfacepolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfacepolicyServiceInput)(nil)).Elem(), InterfacepolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfacepolicyServiceArrayInput)(nil)).Elem(), InterfacepolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfacepolicySrcaddrInput)(nil)).Elem(), InterfacepolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfacepolicySrcaddrArrayInput)(nil)).Elem(), InterfacepolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceadditionEntryInput)(nil)).Elem(), InternetserviceadditionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceadditionEntryArrayInput)(nil)).Elem(), InternetserviceadditionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceadditionEntryPortRangeInput)(nil)).Elem(), InternetserviceadditionEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceadditionEntryPortRangeArrayInput)(nil)).Elem(), InternetserviceadditionEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicecustomEntryInput)(nil)).Elem(), InternetservicecustomEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicecustomEntryArrayInput)(nil)).Elem(), InternetservicecustomEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicecustomEntryDst6Input)(nil)).Elem(), InternetservicecustomEntryDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicecustomEntryDst6ArrayInput)(nil)).Elem(), InternetservicecustomEntryDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicecustomEntryDstInput)(nil)).Elem(), InternetservicecustomEntryDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicecustomEntryDstArrayInput)(nil)).Elem(), InternetservicecustomEntryDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicecustomEntryPortRangeInput)(nil)).Elem(), InternetservicecustomEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicecustomEntryPortRangeArrayInput)(nil)).Elem(), InternetservicecustomEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicecustomgroupMemberInput)(nil)).Elem(), InternetservicecustomgroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicecustomgroupMemberArrayInput)(nil)).Elem(), InternetservicecustomgroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicedefinitionEntryInput)(nil)).Elem(), InternetservicedefinitionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicedefinitionEntryArrayInput)(nil)).Elem(), InternetservicedefinitionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicedefinitionEntryPortRangeInput)(nil)).Elem(), InternetservicedefinitionEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicedefinitionEntryPortRangeArrayInput)(nil)).Elem(), InternetservicedefinitionEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionDisableEntryInput)(nil)).Elem(), InternetserviceextensionDisableEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionDisableEntryArrayInput)(nil)).Elem(), InternetserviceextensionDisableEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionDisableEntryIp6RangeInput)(nil)).Elem(), InternetserviceextensionDisableEntryIp6RangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionDisableEntryIp6RangeArrayInput)(nil)).Elem(), InternetserviceextensionDisableEntryIp6RangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionDisableEntryIpRangeInput)(nil)).Elem(), InternetserviceextensionDisableEntryIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionDisableEntryIpRangeArrayInput)(nil)).Elem(), InternetserviceextensionDisableEntryIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionDisableEntryPortRangeInput)(nil)).Elem(), InternetserviceextensionDisableEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionDisableEntryPortRangeArrayInput)(nil)).Elem(), InternetserviceextensionDisableEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionEntryInput)(nil)).Elem(), InternetserviceextensionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionEntryArrayInput)(nil)).Elem(), InternetserviceextensionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionEntryDst6Input)(nil)).Elem(), InternetserviceextensionEntryDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionEntryDst6ArrayInput)(nil)).Elem(), InternetserviceextensionEntryDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionEntryDstInput)(nil)).Elem(), InternetserviceextensionEntryDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionEntryDstArrayInput)(nil)).Elem(), InternetserviceextensionEntryDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionEntryPortRangeInput)(nil)).Elem(), InternetserviceextensionEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetserviceextensionEntryPortRangeArrayInput)(nil)).Elem(), InternetserviceextensionEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicegroupMemberInput)(nil)).Elem(), InternetservicegroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicegroupMemberArrayInput)(nil)).Elem(), InternetservicegroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicesubappSubAppInput)(nil)).Elem(), InternetservicesubappSubAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicesubappSubAppArrayInput)(nil)).Elem(), InternetservicesubappSubAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Localinpolicy6DstaddrInput)(nil)).Elem(), Localinpolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Localinpolicy6DstaddrArrayInput)(nil)).Elem(), Localinpolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Localinpolicy6ServiceInput)(nil)).Elem(), Localinpolicy6ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Localinpolicy6ServiceArrayInput)(nil)).Elem(), Localinpolicy6ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Localinpolicy6SrcaddrInput)(nil)).Elem(), Localinpolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Localinpolicy6SrcaddrArrayInput)(nil)).Elem(), Localinpolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalinpolicyDstaddrInput)(nil)).Elem(), LocalinpolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalinpolicyDstaddrArrayInput)(nil)).Elem(), LocalinpolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalinpolicyServiceInput)(nil)).Elem(), LocalinpolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalinpolicyServiceArrayInput)(nil)).Elem(), LocalinpolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalinpolicySrcaddrInput)(nil)).Elem(), LocalinpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalinpolicySrcaddrArrayInput)(nil)).Elem(), LocalinpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicastaddress6TaggingInput)(nil)).Elem(), Multicastaddress6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicastaddress6TaggingArrayInput)(nil)).Elem(), Multicastaddress6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicastaddress6TaggingTagInput)(nil)).Elem(), Multicastaddress6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicastaddress6TaggingTagArrayInput)(nil)).Elem(), Multicastaddress6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastaddressTaggingInput)(nil)).Elem(), MulticastaddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastaddressTaggingArrayInput)(nil)).Elem(), MulticastaddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastaddressTaggingTagInput)(nil)).Elem(), MulticastaddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastaddressTaggingTagArrayInput)(nil)).Elem(), MulticastaddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicastpolicy6DstaddrInput)(nil)).Elem(), Multicastpolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicastpolicy6DstaddrArrayInput)(nil)).Elem(), Multicastpolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicastpolicy6SrcaddrInput)(nil)).Elem(), Multicastpolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Multicastpolicy6SrcaddrArrayInput)(nil)).Elem(), Multicastpolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastpolicyDstaddrInput)(nil)).Elem(), MulticastpolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastpolicyDstaddrArrayInput)(nil)).Elem(), MulticastpolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastpolicySrcaddrInput)(nil)).Elem(), MulticastpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MulticastpolicySrcaddrArrayInput)(nil)).Elem(), MulticastpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy46DstaddrInput)(nil)).Elem(), Policy46DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy46DstaddrArrayInput)(nil)).Elem(), Policy46DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy46PoolnameInput)(nil)).Elem(), Policy46PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy46PoolnameArrayInput)(nil)).Elem(), Policy46PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy46ServiceInput)(nil)).Elem(), Policy46ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy46ServiceArrayInput)(nil)).Elem(), Policy46ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy46SrcaddrInput)(nil)).Elem(), Policy46SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy46SrcaddrArrayInput)(nil)).Elem(), Policy46SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy64DstaddrInput)(nil)).Elem(), Policy64DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy64DstaddrArrayInput)(nil)).Elem(), Policy64DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy64PoolnameInput)(nil)).Elem(), Policy64PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy64PoolnameArrayInput)(nil)).Elem(), Policy64PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy64ServiceInput)(nil)).Elem(), Policy64ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy64ServiceArrayInput)(nil)).Elem(), Policy64ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy64SrcaddrInput)(nil)).Elem(), Policy64SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy64SrcaddrArrayInput)(nil)).Elem(), Policy64SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6AppCategoryInput)(nil)).Elem(), Policy6AppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6AppCategoryArrayInput)(nil)).Elem(), Policy6AppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6AppGroupInput)(nil)).Elem(), Policy6AppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6AppGroupArrayInput)(nil)).Elem(), Policy6AppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6ApplicationInput)(nil)).Elem(), Policy6ApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6ApplicationArrayInput)(nil)).Elem(), Policy6ApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6CustomLogFieldInput)(nil)).Elem(), Policy6CustomLogFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6CustomLogFieldArrayInput)(nil)).Elem(), Policy6CustomLogFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6DeviceInput)(nil)).Elem(), Policy6DeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6DeviceArrayInput)(nil)).Elem(), Policy6DeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6DstaddrInput)(nil)).Elem(), Policy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6DstaddrArrayInput)(nil)).Elem(), Policy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6DstintfInput)(nil)).Elem(), Policy6DstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6DstintfArrayInput)(nil)).Elem(), Policy6DstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6FssoGroupInput)(nil)).Elem(), Policy6FssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6FssoGroupArrayInput)(nil)).Elem(), Policy6FssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6GroupInput)(nil)).Elem(), Policy6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6GroupArrayInput)(nil)).Elem(), Policy6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6PoolnameInput)(nil)).Elem(), Policy6PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6PoolnameArrayInput)(nil)).Elem(), Policy6PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6ServiceInput)(nil)).Elem(), Policy6ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6ServiceArrayInput)(nil)).Elem(), Policy6ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6SrcaddrInput)(nil)).Elem(), Policy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6SrcaddrArrayInput)(nil)).Elem(), Policy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6SrcintfInput)(nil)).Elem(), Policy6SrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6SrcintfArrayInput)(nil)).Elem(), Policy6SrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6SslMirrorIntfInput)(nil)).Elem(), Policy6SslMirrorIntfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6SslMirrorIntfArrayInput)(nil)).Elem(), Policy6SslMirrorIntfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6UrlCategoryInput)(nil)).Elem(), Policy6UrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6UrlCategoryArrayInput)(nil)).Elem(), Policy6UrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6UserInput)(nil)).Elem(), Policy6UserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Policy6UserArrayInput)(nil)).Elem(), Policy6UserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAppCategoryInput)(nil)).Elem(), PolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAppCategoryArrayInput)(nil)).Elem(), PolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAppGroupInput)(nil)).Elem(), PolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAppGroupArrayInput)(nil)).Elem(), PolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyApplicationInput)(nil)).Elem(), PolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyApplicationArrayInput)(nil)).Elem(), PolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyCustomLogFieldInput)(nil)).Elem(), PolicyCustomLogFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyCustomLogFieldArrayInput)(nil)).Elem(), PolicyCustomLogFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDeviceInput)(nil)).Elem(), PolicyDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDeviceArrayInput)(nil)).Elem(), PolicyDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstaddr6Input)(nil)).Elem(), PolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstaddr6ArrayInput)(nil)).Elem(), PolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstaddrInput)(nil)).Elem(), PolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstaddrArrayInput)(nil)).Elem(), PolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstintfInput)(nil)).Elem(), PolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstintfArrayInput)(nil)).Elem(), PolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyFssoGroupInput)(nil)).Elem(), PolicyFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyFssoGroupArrayInput)(nil)).Elem(), PolicyFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupInput)(nil)).Elem(), PolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupArrayInput)(nil)).Elem(), PolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6CustomInput)(nil)).Elem(), PolicyInternetService6CustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6CustomArrayInput)(nil)).Elem(), PolicyInternetService6CustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6CustomGroupInput)(nil)).Elem(), PolicyInternetService6CustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6CustomGroupArrayInput)(nil)).Elem(), PolicyInternetService6CustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6GroupInput)(nil)).Elem(), PolicyInternetService6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6GroupArrayInput)(nil)).Elem(), PolicyInternetService6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6NameInput)(nil)).Elem(), PolicyInternetService6NameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6NameArrayInput)(nil)).Elem(), PolicyInternetService6NameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6SrcCustomInput)(nil)).Elem(), PolicyInternetService6SrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6SrcCustomArrayInput)(nil)).Elem(), PolicyInternetService6SrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6SrcCustomGroupInput)(nil)).Elem(), PolicyInternetService6SrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6SrcCustomGroupArrayInput)(nil)).Elem(), PolicyInternetService6SrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6SrcGroupInput)(nil)).Elem(), PolicyInternetService6SrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6SrcGroupArrayInput)(nil)).Elem(), PolicyInternetService6SrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6SrcNameInput)(nil)).Elem(), PolicyInternetService6SrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetService6SrcNameArrayInput)(nil)).Elem(), PolicyInternetService6SrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceCustomInput)(nil)).Elem(), PolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceCustomArrayInput)(nil)).Elem(), PolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceCustomGroupInput)(nil)).Elem(), PolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), PolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceGroupInput)(nil)).Elem(), PolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceGroupArrayInput)(nil)).Elem(), PolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceIdInput)(nil)).Elem(), PolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceIdArrayInput)(nil)).Elem(), PolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceNameInput)(nil)).Elem(), PolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceNameArrayInput)(nil)).Elem(), PolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcCustomInput)(nil)).Elem(), PolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), PolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), PolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), PolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcGroupInput)(nil)).Elem(), PolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), PolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcIdInput)(nil)).Elem(), PolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), PolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcNameInput)(nil)).Elem(), PolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), PolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkServiceDynamicInput)(nil)).Elem(), PolicyNetworkServiceDynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkServiceDynamicArrayInput)(nil)).Elem(), PolicyNetworkServiceDynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkServiceSrcDynamicInput)(nil)).Elem(), PolicyNetworkServiceSrcDynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkServiceSrcDynamicArrayInput)(nil)).Elem(), PolicyNetworkServiceSrcDynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNtlmEnabledBrowserInput)(nil)).Elem(), PolicyNtlmEnabledBrowserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNtlmEnabledBrowserArrayInput)(nil)).Elem(), PolicyNtlmEnabledBrowserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyPcpPoolnameInput)(nil)).Elem(), PolicyPcpPoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyPcpPoolnameArrayInput)(nil)).Elem(), PolicyPcpPoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyPoolname6Input)(nil)).Elem(), PolicyPoolname6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyPoolname6ArrayInput)(nil)).Elem(), PolicyPoolname6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyPoolnameInput)(nil)).Elem(), PolicyPoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyPoolnameArrayInput)(nil)).Elem(), PolicyPoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyRtpAddrInput)(nil)).Elem(), PolicyRtpAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyRtpAddrArrayInput)(nil)).Elem(), PolicyRtpAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyServiceInput)(nil)).Elem(), PolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyServiceArrayInput)(nil)).Elem(), PolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySgtInput)(nil)).Elem(), PolicySgtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySgtArrayInput)(nil)).Elem(), PolicySgtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySortStatePolicyListInput)(nil)).Elem(), PolicySortStatePolicyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySortStatePolicyListArrayInput)(nil)).Elem(), PolicySortStatePolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcVendorMacInput)(nil)).Elem(), PolicySrcVendorMacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcVendorMacArrayInput)(nil)).Elem(), PolicySrcVendorMacArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcaddr6Input)(nil)).Elem(), PolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcaddr6ArrayInput)(nil)).Elem(), PolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcaddrInput)(nil)).Elem(), PolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcaddrArrayInput)(nil)).Elem(), PolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcintfInput)(nil)).Elem(), PolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcintfArrayInput)(nil)).Elem(), PolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySslMirrorIntfInput)(nil)).Elem(), PolicySslMirrorIntfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySslMirrorIntfArrayInput)(nil)).Elem(), PolicySslMirrorIntfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyUrlCategoryInput)(nil)).Elem(), PolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyUrlCategoryArrayInput)(nil)).Elem(), PolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyUserInput)(nil)).Elem(), PolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyUserArrayInput)(nil)).Elem(), PolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyZtnaEmsTagInput)(nil)).Elem(), PolicyZtnaEmsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyZtnaEmsTagArrayInput)(nil)).Elem(), PolicyZtnaEmsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyZtnaEmsTagSecondaryInput)(nil)).Elem(), PolicyZtnaEmsTagSecondaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyZtnaEmsTagSecondaryArrayInput)(nil)).Elem(), PolicyZtnaEmsTagSecondaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyZtnaGeoTagInput)(nil)).Elem(), PolicyZtnaGeoTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyZtnaGeoTagArrayInput)(nil)).Elem(), PolicyZtnaGeoTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsCifsInput)(nil)).Elem(), ProfileprotocoloptionsCifsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsCifsPtrInput)(nil)).Elem(), ProfileprotocoloptionsCifsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsCifsServerKeytabInput)(nil)).Elem(), ProfileprotocoloptionsCifsServerKeytabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsCifsServerKeytabArrayInput)(nil)).Elem(), ProfileprotocoloptionsCifsServerKeytabArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsDnsInput)(nil)).Elem(), ProfileprotocoloptionsDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsDnsPtrInput)(nil)).Elem(), ProfileprotocoloptionsDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsFtpInput)(nil)).Elem(), ProfileprotocoloptionsFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsFtpPtrInput)(nil)).Elem(), ProfileprotocoloptionsFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsHttpInput)(nil)).Elem(), ProfileprotocoloptionsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsHttpPtrInput)(nil)).Elem(), ProfileprotocoloptionsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsImapInput)(nil)).Elem(), ProfileprotocoloptionsImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsImapPtrInput)(nil)).Elem(), ProfileprotocoloptionsImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsMailSignatureInput)(nil)).Elem(), ProfileprotocoloptionsMailSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsMailSignaturePtrInput)(nil)).Elem(), ProfileprotocoloptionsMailSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsMapiInput)(nil)).Elem(), ProfileprotocoloptionsMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsMapiPtrInput)(nil)).Elem(), ProfileprotocoloptionsMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsNntpInput)(nil)).Elem(), ProfileprotocoloptionsNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsNntpPtrInput)(nil)).Elem(), ProfileprotocoloptionsNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsPop3Input)(nil)).Elem(), ProfileprotocoloptionsPop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsPop3PtrInput)(nil)).Elem(), ProfileprotocoloptionsPop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsSmtpInput)(nil)).Elem(), ProfileprotocoloptionsSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsSmtpPtrInput)(nil)).Elem(), ProfileprotocoloptionsSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsSshInput)(nil)).Elem(), ProfileprotocoloptionsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileprotocoloptionsSshPtrInput)(nil)).Elem(), ProfileprotocoloptionsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddressApplicationInput)(nil)).Elem(), ProxyaddressApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddressApplicationArrayInput)(nil)).Elem(), ProxyaddressApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddressCategoryInput)(nil)).Elem(), ProxyaddressCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddressCategoryArrayInput)(nil)).Elem(), ProxyaddressCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddressHeaderGroupInput)(nil)).Elem(), ProxyaddressHeaderGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddressHeaderGroupArrayInput)(nil)).Elem(), ProxyaddressHeaderGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddressTaggingInput)(nil)).Elem(), ProxyaddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddressTaggingArrayInput)(nil)).Elem(), ProxyaddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddressTaggingTagInput)(nil)).Elem(), ProxyaddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddressTaggingTagArrayInput)(nil)).Elem(), ProxyaddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddrgrpMemberInput)(nil)).Elem(), ProxyaddrgrpMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddrgrpMemberArrayInput)(nil)).Elem(), ProxyaddrgrpMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddrgrpTaggingInput)(nil)).Elem(), ProxyaddrgrpTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddrgrpTaggingArrayInput)(nil)).Elem(), ProxyaddrgrpTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddrgrpTaggingTagInput)(nil)).Elem(), ProxyaddrgrpTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyaddrgrpTaggingTagArrayInput)(nil)).Elem(), ProxyaddrgrpTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyAccessProxy6Input)(nil)).Elem(), ProxypolicyAccessProxy6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyAccessProxy6ArrayInput)(nil)).Elem(), ProxypolicyAccessProxy6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyAccessProxyInput)(nil)).Elem(), ProxypolicyAccessProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyAccessProxyArrayInput)(nil)).Elem(), ProxypolicyAccessProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyDstaddr6Input)(nil)).Elem(), ProxypolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyDstaddr6ArrayInput)(nil)).Elem(), ProxypolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyDstaddrInput)(nil)).Elem(), ProxypolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyDstaddrArrayInput)(nil)).Elem(), ProxypolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyDstintfInput)(nil)).Elem(), ProxypolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyDstintfArrayInput)(nil)).Elem(), ProxypolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyGroupInput)(nil)).Elem(), ProxypolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyGroupArrayInput)(nil)).Elem(), ProxypolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetService6CustomInput)(nil)).Elem(), ProxypolicyInternetService6CustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetService6CustomArrayInput)(nil)).Elem(), ProxypolicyInternetService6CustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetService6CustomGroupInput)(nil)).Elem(), ProxypolicyInternetService6CustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetService6CustomGroupArrayInput)(nil)).Elem(), ProxypolicyInternetService6CustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetService6GroupInput)(nil)).Elem(), ProxypolicyInternetService6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetService6GroupArrayInput)(nil)).Elem(), ProxypolicyInternetService6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetService6NameInput)(nil)).Elem(), ProxypolicyInternetService6NameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetService6NameArrayInput)(nil)).Elem(), ProxypolicyInternetService6NameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetServiceCustomInput)(nil)).Elem(), ProxypolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetServiceCustomArrayInput)(nil)).Elem(), ProxypolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetServiceCustomGroupInput)(nil)).Elem(), ProxypolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), ProxypolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetServiceGroupInput)(nil)).Elem(), ProxypolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetServiceGroupArrayInput)(nil)).Elem(), ProxypolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetServiceIdInput)(nil)).Elem(), ProxypolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetServiceIdArrayInput)(nil)).Elem(), ProxypolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetServiceNameInput)(nil)).Elem(), ProxypolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyInternetServiceNameArrayInput)(nil)).Elem(), ProxypolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyPoolnameInput)(nil)).Elem(), ProxypolicyPoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyPoolnameArrayInput)(nil)).Elem(), ProxypolicyPoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyServiceInput)(nil)).Elem(), ProxypolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyServiceArrayInput)(nil)).Elem(), ProxypolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicySortStatePolicyListInput)(nil)).Elem(), ProxypolicySortStatePolicyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicySortStatePolicyListArrayInput)(nil)).Elem(), ProxypolicySortStatePolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicySrcaddr6Input)(nil)).Elem(), ProxypolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicySrcaddr6ArrayInput)(nil)).Elem(), ProxypolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicySrcaddrInput)(nil)).Elem(), ProxypolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicySrcaddrArrayInput)(nil)).Elem(), ProxypolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicySrcintfInput)(nil)).Elem(), ProxypolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicySrcintfArrayInput)(nil)).Elem(), ProxypolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyUserInput)(nil)).Elem(), ProxypolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyUserArrayInput)(nil)).Elem(), ProxypolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyZtnaEmsTagInput)(nil)).Elem(), ProxypolicyZtnaEmsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicyZtnaEmsTagArrayInput)(nil)).Elem(), ProxypolicyZtnaEmsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionCityInput)(nil)).Elem(), RegionCityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionCityArrayInput)(nil)).Elem(), RegionCityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyseqStatePolicyListInput)(nil)).Elem(), SecurityPolicyseqStatePolicyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyseqStatePolicyListArrayInput)(nil)).Elem(), SecurityPolicyseqStatePolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyAppCategoryInput)(nil)).Elem(), SecuritypolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyAppCategoryArrayInput)(nil)).Elem(), SecuritypolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyAppGroupInput)(nil)).Elem(), SecuritypolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyAppGroupArrayInput)(nil)).Elem(), SecuritypolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyApplicationInput)(nil)).Elem(), SecuritypolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyApplicationArrayInput)(nil)).Elem(), SecuritypolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyDstaddr4Input)(nil)).Elem(), SecuritypolicyDstaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyDstaddr4ArrayInput)(nil)).Elem(), SecuritypolicyDstaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyDstaddr6Input)(nil)).Elem(), SecuritypolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyDstaddr6ArrayInput)(nil)).Elem(), SecuritypolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyDstaddrInput)(nil)).Elem(), SecuritypolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyDstaddrArrayInput)(nil)).Elem(), SecuritypolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyDstintfInput)(nil)).Elem(), SecuritypolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyDstintfArrayInput)(nil)).Elem(), SecuritypolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyFssoGroupInput)(nil)).Elem(), SecuritypolicyFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyFssoGroupArrayInput)(nil)).Elem(), SecuritypolicyFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyGroupInput)(nil)).Elem(), SecuritypolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyGroupArrayInput)(nil)).Elem(), SecuritypolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6CustomInput)(nil)).Elem(), SecuritypolicyInternetService6CustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6CustomArrayInput)(nil)).Elem(), SecuritypolicyInternetService6CustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6CustomGroupInput)(nil)).Elem(), SecuritypolicyInternetService6CustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6CustomGroupArrayInput)(nil)).Elem(), SecuritypolicyInternetService6CustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6GroupInput)(nil)).Elem(), SecuritypolicyInternetService6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6GroupArrayInput)(nil)).Elem(), SecuritypolicyInternetService6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6NameInput)(nil)).Elem(), SecuritypolicyInternetService6NameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6NameArrayInput)(nil)).Elem(), SecuritypolicyInternetService6NameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6SrcCustomInput)(nil)).Elem(), SecuritypolicyInternetService6SrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6SrcCustomArrayInput)(nil)).Elem(), SecuritypolicyInternetService6SrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6SrcCustomGroupInput)(nil)).Elem(), SecuritypolicyInternetService6SrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6SrcCustomGroupArrayInput)(nil)).Elem(), SecuritypolicyInternetService6SrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6SrcGroupInput)(nil)).Elem(), SecuritypolicyInternetService6SrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6SrcGroupArrayInput)(nil)).Elem(), SecuritypolicyInternetService6SrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6SrcNameInput)(nil)).Elem(), SecuritypolicyInternetService6SrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetService6SrcNameArrayInput)(nil)).Elem(), SecuritypolicyInternetService6SrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceCustomInput)(nil)).Elem(), SecuritypolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceCustomArrayInput)(nil)).Elem(), SecuritypolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceCustomGroupInput)(nil)).Elem(), SecuritypolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), SecuritypolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceGroupInput)(nil)).Elem(), SecuritypolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceGroupArrayInput)(nil)).Elem(), SecuritypolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceIdInput)(nil)).Elem(), SecuritypolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceIdArrayInput)(nil)).Elem(), SecuritypolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceNameInput)(nil)).Elem(), SecuritypolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceNameArrayInput)(nil)).Elem(), SecuritypolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceSrcCustomInput)(nil)).Elem(), SecuritypolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), SecuritypolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), SecuritypolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), SecuritypolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceSrcGroupInput)(nil)).Elem(), SecuritypolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), SecuritypolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceSrcIdInput)(nil)).Elem(), SecuritypolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), SecuritypolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceSrcNameInput)(nil)).Elem(), SecuritypolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), SecuritypolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyServiceInput)(nil)).Elem(), SecuritypolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyServiceArrayInput)(nil)).Elem(), SecuritypolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySortStatePolicyListInput)(nil)).Elem(), SecuritypolicySortStatePolicyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySortStatePolicyListArrayInput)(nil)).Elem(), SecuritypolicySortStatePolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySrcaddr4Input)(nil)).Elem(), SecuritypolicySrcaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySrcaddr4ArrayInput)(nil)).Elem(), SecuritypolicySrcaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySrcaddr6Input)(nil)).Elem(), SecuritypolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySrcaddr6ArrayInput)(nil)).Elem(), SecuritypolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySrcaddrInput)(nil)).Elem(), SecuritypolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySrcaddrArrayInput)(nil)).Elem(), SecuritypolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySrcintfInput)(nil)).Elem(), SecuritypolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySrcintfArrayInput)(nil)).Elem(), SecuritypolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyUrlCategoryInput)(nil)).Elem(), SecuritypolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyUrlCategoryArrayInput)(nil)).Elem(), SecuritypolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyUserInput)(nil)).Elem(), SecuritypolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyUserArrayInput)(nil)).Elem(), SecuritypolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyAppCategoryInput)(nil)).Elem(), ShapingpolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyAppCategoryArrayInput)(nil)).Elem(), ShapingpolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyAppGroupInput)(nil)).Elem(), ShapingpolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyAppGroupArrayInput)(nil)).Elem(), ShapingpolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyApplicationInput)(nil)).Elem(), ShapingpolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyApplicationArrayInput)(nil)).Elem(), ShapingpolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyDstaddr6Input)(nil)).Elem(), ShapingpolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyDstaddr6ArrayInput)(nil)).Elem(), ShapingpolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyDstaddrInput)(nil)).Elem(), ShapingpolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyDstaddrArrayInput)(nil)).Elem(), ShapingpolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyDstintfInput)(nil)).Elem(), ShapingpolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyDstintfArrayInput)(nil)).Elem(), ShapingpolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyGroupInput)(nil)).Elem(), ShapingpolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyGroupArrayInput)(nil)).Elem(), ShapingpolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceCustomInput)(nil)).Elem(), ShapingpolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceCustomArrayInput)(nil)).Elem(), ShapingpolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceCustomGroupInput)(nil)).Elem(), ShapingpolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), ShapingpolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceGroupInput)(nil)).Elem(), ShapingpolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceGroupArrayInput)(nil)).Elem(), ShapingpolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceIdInput)(nil)).Elem(), ShapingpolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceIdArrayInput)(nil)).Elem(), ShapingpolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceNameInput)(nil)).Elem(), ShapingpolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceNameArrayInput)(nil)).Elem(), ShapingpolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceSrcCustomInput)(nil)).Elem(), ShapingpolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), ShapingpolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), ShapingpolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), ShapingpolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceSrcGroupInput)(nil)).Elem(), ShapingpolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), ShapingpolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceSrcIdInput)(nil)).Elem(), ShapingpolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), ShapingpolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceSrcNameInput)(nil)).Elem(), ShapingpolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), ShapingpolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyServiceInput)(nil)).Elem(), ShapingpolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyServiceArrayInput)(nil)).Elem(), ShapingpolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicySrcaddr6Input)(nil)).Elem(), ShapingpolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicySrcaddr6ArrayInput)(nil)).Elem(), ShapingpolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicySrcaddrInput)(nil)).Elem(), ShapingpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicySrcaddrArrayInput)(nil)).Elem(), ShapingpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicySrcintfInput)(nil)).Elem(), ShapingpolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicySrcintfArrayInput)(nil)).Elem(), ShapingpolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyUrlCategoryInput)(nil)).Elem(), ShapingpolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyUrlCategoryArrayInput)(nil)).Elem(), ShapingpolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyUserInput)(nil)).Elem(), ShapingpolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyUserArrayInput)(nil)).Elem(), ShapingpolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingprofileShapingEntryInput)(nil)).Elem(), ShapingprofileShapingEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingprofileShapingEntryArrayInput)(nil)).Elem(), ShapingprofileShapingEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnifferAnomalyInput)(nil)).Elem(), SnifferAnomalyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnifferAnomalyArrayInput)(nil)).Elem(), SnifferAnomalyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnifferIpThreatfeedInput)(nil)).Elem(), SnifferIpThreatfeedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnifferIpThreatfeedArrayInput)(nil)).Elem(), SnifferIpThreatfeedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileDotInput)(nil)).Elem(), SslsshprofileDotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileDotPtrInput)(nil)).Elem(), SslsshprofileDotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileFtpsInput)(nil)).Elem(), SslsshprofileFtpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileFtpsPtrInput)(nil)).Elem(), SslsshprofileFtpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileHttpsInput)(nil)).Elem(), SslsshprofileHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileHttpsPtrInput)(nil)).Elem(), SslsshprofileHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileImapsInput)(nil)).Elem(), SslsshprofileImapsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileImapsPtrInput)(nil)).Elem(), SslsshprofileImapsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofilePop3sInput)(nil)).Elem(), SslsshprofilePop3sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofilePop3sPtrInput)(nil)).Elem(), SslsshprofilePop3sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileSmtpsInput)(nil)).Elem(), SslsshprofileSmtpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileSmtpsPtrInput)(nil)).Elem(), SslsshprofileSmtpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileSshInput)(nil)).Elem(), SslsshprofileSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileSshPtrInput)(nil)).Elem(), SslsshprofileSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileSslInput)(nil)).Elem(), SslsshprofileSslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileSslPtrInput)(nil)).Elem(), SslsshprofileSslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileSslExemptInput)(nil)).Elem(), SslsshprofileSslExemptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileSslExemptArrayInput)(nil)).Elem(), SslsshprofileSslExemptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileSslServerInput)(nil)).Elem(), SslsshprofileSslServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslsshprofileSslServerArrayInput)(nil)).Elem(), SslsshprofileSslServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TtlpolicyServiceInput)(nil)).Elem(), TtlpolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TtlpolicyServiceArrayInput)(nil)).Elem(), TtlpolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TtlpolicySrcaddrInput)(nil)).Elem(), TtlpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TtlpolicySrcaddrArrayInput)(nil)).Elem(), TtlpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip46MonitorInput)(nil)).Elem(), Vip46MonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip46MonitorArrayInput)(nil)).Elem(), Vip46MonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip46RealserverInput)(nil)).Elem(), Vip46RealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip46RealserverArrayInput)(nil)).Elem(), Vip46RealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip46SrcFilterInput)(nil)).Elem(), Vip46SrcFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip46SrcFilterArrayInput)(nil)).Elem(), Vip46SrcFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip46SrcintfFilterInput)(nil)).Elem(), Vip46SrcintfFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip46SrcintfFilterArrayInput)(nil)).Elem(), Vip46SrcintfFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip64MonitorInput)(nil)).Elem(), Vip64MonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip64MonitorArrayInput)(nil)).Elem(), Vip64MonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip64RealserverInput)(nil)).Elem(), Vip64RealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip64RealserverArrayInput)(nil)).Elem(), Vip64RealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip64SrcFilterInput)(nil)).Elem(), Vip64SrcFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip64SrcFilterArrayInput)(nil)).Elem(), Vip64SrcFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6MonitorInput)(nil)).Elem(), Vip6MonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6MonitorArrayInput)(nil)).Elem(), Vip6MonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6QuicInput)(nil)).Elem(), Vip6QuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6QuicPtrInput)(nil)).Elem(), Vip6QuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6RealserverInput)(nil)).Elem(), Vip6RealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6RealserverArrayInput)(nil)).Elem(), Vip6RealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6SrcFilterInput)(nil)).Elem(), Vip6SrcFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6SrcFilterArrayInput)(nil)).Elem(), Vip6SrcFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6SslCipherSuiteInput)(nil)).Elem(), Vip6SslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6SslCipherSuiteArrayInput)(nil)).Elem(), Vip6SslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6SslServerCipherSuiteInput)(nil)).Elem(), Vip6SslServerCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vip6SslServerCipherSuiteArrayInput)(nil)).Elem(), Vip6SslServerCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipExtaddrInput)(nil)).Elem(), VipExtaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipExtaddrArrayInput)(nil)).Elem(), VipExtaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipGslbPublicIpInput)(nil)).Elem(), VipGslbPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipGslbPublicIpArrayInput)(nil)).Elem(), VipGslbPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipMappedipInput)(nil)).Elem(), VipMappedipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipMappedipArrayInput)(nil)).Elem(), VipMappedipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipMonitorInput)(nil)).Elem(), VipMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipMonitorArrayInput)(nil)).Elem(), VipMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipQuicInput)(nil)).Elem(), VipQuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipQuicPtrInput)(nil)).Elem(), VipQuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipRealserverInput)(nil)).Elem(), VipRealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipRealserverArrayInput)(nil)).Elem(), VipRealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipServiceInput)(nil)).Elem(), VipServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipServiceArrayInput)(nil)).Elem(), VipServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipSrcFilterInput)(nil)).Elem(), VipSrcFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipSrcFilterArrayInput)(nil)).Elem(), VipSrcFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipSrcintfFilterInput)(nil)).Elem(), VipSrcintfFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipSrcintfFilterArrayInput)(nil)).Elem(), VipSrcintfFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipSslCipherSuiteInput)(nil)).Elem(), VipSslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipSslCipherSuiteArrayInput)(nil)).Elem(), VipSslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipSslServerCipherSuiteInput)(nil)).Elem(), VipSslServerCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipSslServerCipherSuiteArrayInput)(nil)).Elem(), VipSslServerCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vipgrp46MemberInput)(nil)).Elem(), Vipgrp46MemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vipgrp46MemberArrayInput)(nil)).Elem(), Vipgrp46MemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vipgrp64MemberInput)(nil)).Elem(), Vipgrp64MemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vipgrp64MemberArrayInput)(nil)).Elem(), Vipgrp64MemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vipgrp6MemberInput)(nil)).Elem(), Vipgrp6MemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vipgrp6MemberArrayInput)(nil)).Elem(), Vipgrp6MemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipgrpMemberInput)(nil)).Elem(), VipgrpMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VipgrpMemberArrayInput)(nil)).Elem(), VipgrpMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6ListInput)(nil)).Elem(), GetAddress6ListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6ListArrayInput)(nil)).Elem(), GetAddress6ListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6MacaddrInput)(nil)).Elem(), GetAddress6MacaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6MacaddrArrayInput)(nil)).Elem(), GetAddress6MacaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6SubnetSegmentInput)(nil)).Elem(), GetAddress6SubnetSegmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6SubnetSegmentArrayInput)(nil)).Elem(), GetAddress6SubnetSegmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6TaggingInput)(nil)).Elem(), GetAddress6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6TaggingArrayInput)(nil)).Elem(), GetAddress6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6TaggingTagInput)(nil)).Elem(), GetAddress6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6TaggingTagArrayInput)(nil)).Elem(), GetAddress6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6templateSubnetSegmentInput)(nil)).Elem(), GetAddress6templateSubnetSegmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6templateSubnetSegmentArrayInput)(nil)).Elem(), GetAddress6templateSubnetSegmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6templateSubnetSegmentValueInput)(nil)).Elem(), GetAddress6templateSubnetSegmentValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddress6templateSubnetSegmentValueArrayInput)(nil)).Elem(), GetAddress6templateSubnetSegmentValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressFssoGroupInput)(nil)).Elem(), GetAddressFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressFssoGroupArrayInput)(nil)).Elem(), GetAddressFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressListInput)(nil)).Elem(), GetAddressListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressListArrayInput)(nil)).Elem(), GetAddressListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressMacaddrInput)(nil)).Elem(), GetAddressMacaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressMacaddrArrayInput)(nil)).Elem(), GetAddressMacaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressTaggingInput)(nil)).Elem(), GetAddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressTaggingArrayInput)(nil)).Elem(), GetAddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressTaggingTagInput)(nil)).Elem(), GetAddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressTaggingTagArrayInput)(nil)).Elem(), GetAddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrp6ExcludeMemberInput)(nil)).Elem(), GetAddrgrp6ExcludeMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrp6ExcludeMemberArrayInput)(nil)).Elem(), GetAddrgrp6ExcludeMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrp6MemberInput)(nil)).Elem(), GetAddrgrp6MemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrp6MemberArrayInput)(nil)).Elem(), GetAddrgrp6MemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrp6TaggingInput)(nil)).Elem(), GetAddrgrp6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrp6TaggingArrayInput)(nil)).Elem(), GetAddrgrp6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrp6TaggingTagInput)(nil)).Elem(), GetAddrgrp6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrp6TaggingTagArrayInput)(nil)).Elem(), GetAddrgrp6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrpExcludeMemberInput)(nil)).Elem(), GetAddrgrpExcludeMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrpExcludeMemberArrayInput)(nil)).Elem(), GetAddrgrpExcludeMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrpMemberInput)(nil)).Elem(), GetAddrgrpMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrpMemberArrayInput)(nil)).Elem(), GetAddrgrpMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrpTaggingInput)(nil)).Elem(), GetAddrgrpTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrpTaggingArrayInput)(nil)).Elem(), GetAddrgrpTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrpTaggingTagInput)(nil)).Elem(), GetAddrgrpTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddrgrpTaggingTagArrayInput)(nil)).Elem(), GetAddrgrpTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapDstAddr6Input)(nil)).Elem(), GetCentralsnatmapDstAddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapDstAddr6ArrayInput)(nil)).Elem(), GetCentralsnatmapDstAddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapDstAddrInput)(nil)).Elem(), GetCentralsnatmapDstAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapDstAddrArrayInput)(nil)).Elem(), GetCentralsnatmapDstAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapDstintfInput)(nil)).Elem(), GetCentralsnatmapDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapDstintfArrayInput)(nil)).Elem(), GetCentralsnatmapDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapNatIppool6Input)(nil)).Elem(), GetCentralsnatmapNatIppool6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapNatIppool6ArrayInput)(nil)).Elem(), GetCentralsnatmapNatIppool6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapNatIppoolInput)(nil)).Elem(), GetCentralsnatmapNatIppoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapNatIppoolArrayInput)(nil)).Elem(), GetCentralsnatmapNatIppoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapOrigAddr6Input)(nil)).Elem(), GetCentralsnatmapOrigAddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapOrigAddr6ArrayInput)(nil)).Elem(), GetCentralsnatmapOrigAddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapOrigAddrInput)(nil)).Elem(), GetCentralsnatmapOrigAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapOrigAddrArrayInput)(nil)).Elem(), GetCentralsnatmapOrigAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapSrcintfInput)(nil)).Elem(), GetCentralsnatmapSrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralsnatmapSrcintfArrayInput)(nil)).Elem(), GetCentralsnatmapSrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicy6AnomalyInput)(nil)).Elem(), GetDoSpolicy6AnomalyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicy6AnomalyArrayInput)(nil)).Elem(), GetDoSpolicy6AnomalyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicy6DstaddrInput)(nil)).Elem(), GetDoSpolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicy6DstaddrArrayInput)(nil)).Elem(), GetDoSpolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicy6ServiceInput)(nil)).Elem(), GetDoSpolicy6ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicy6ServiceArrayInput)(nil)).Elem(), GetDoSpolicy6ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicy6SrcaddrInput)(nil)).Elem(), GetDoSpolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicy6SrcaddrArrayInput)(nil)).Elem(), GetDoSpolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicyAnomalyInput)(nil)).Elem(), GetDoSpolicyAnomalyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicyAnomalyArrayInput)(nil)).Elem(), GetDoSpolicyAnomalyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicyDstaddrInput)(nil)).Elem(), GetDoSpolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicyDstaddrArrayInput)(nil)).Elem(), GetDoSpolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicyServiceInput)(nil)).Elem(), GetDoSpolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicyServiceArrayInput)(nil)).Elem(), GetDoSpolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicySrcaddrInput)(nil)).Elem(), GetDoSpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDoSpolicySrcaddrArrayInput)(nil)).Elem(), GetDoSpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicecustomEntryInput)(nil)).Elem(), GetInternetservicecustomEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicecustomEntryArrayInput)(nil)).Elem(), GetInternetservicecustomEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicecustomEntryDst6Input)(nil)).Elem(), GetInternetservicecustomEntryDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicecustomEntryDst6ArrayInput)(nil)).Elem(), GetInternetservicecustomEntryDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicecustomEntryDstInput)(nil)).Elem(), GetInternetservicecustomEntryDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicecustomEntryDstArrayInput)(nil)).Elem(), GetInternetservicecustomEntryDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicecustomEntryPortRangeInput)(nil)).Elem(), GetInternetservicecustomEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicecustomEntryPortRangeArrayInput)(nil)).Elem(), GetInternetservicecustomEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicecustomgroupMemberInput)(nil)).Elem(), GetInternetservicecustomgroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicecustomgroupMemberArrayInput)(nil)).Elem(), GetInternetservicecustomgroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicedefinitionEntryInput)(nil)).Elem(), GetInternetservicedefinitionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicedefinitionEntryArrayInput)(nil)).Elem(), GetInternetservicedefinitionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicedefinitionEntryPortRangeInput)(nil)).Elem(), GetInternetservicedefinitionEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicedefinitionEntryPortRangeArrayInput)(nil)).Elem(), GetInternetservicedefinitionEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionDisableEntryInput)(nil)).Elem(), GetInternetserviceextensionDisableEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionDisableEntryArrayInput)(nil)).Elem(), GetInternetserviceextensionDisableEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionDisableEntryIp6RangeInput)(nil)).Elem(), GetInternetserviceextensionDisableEntryIp6RangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionDisableEntryIp6RangeArrayInput)(nil)).Elem(), GetInternetserviceextensionDisableEntryIp6RangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionDisableEntryIpRangeInput)(nil)).Elem(), GetInternetserviceextensionDisableEntryIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionDisableEntryIpRangeArrayInput)(nil)).Elem(), GetInternetserviceextensionDisableEntryIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionDisableEntryPortRangeInput)(nil)).Elem(), GetInternetserviceextensionDisableEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionDisableEntryPortRangeArrayInput)(nil)).Elem(), GetInternetserviceextensionDisableEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionEntryInput)(nil)).Elem(), GetInternetserviceextensionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionEntryArrayInput)(nil)).Elem(), GetInternetserviceextensionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionEntryDst6Input)(nil)).Elem(), GetInternetserviceextensionEntryDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionEntryDst6ArrayInput)(nil)).Elem(), GetInternetserviceextensionEntryDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionEntryDstInput)(nil)).Elem(), GetInternetserviceextensionEntryDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionEntryDstArrayInput)(nil)).Elem(), GetInternetserviceextensionEntryDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionEntryPortRangeInput)(nil)).Elem(), GetInternetserviceextensionEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetserviceextensionEntryPortRangeArrayInput)(nil)).Elem(), GetInternetserviceextensionEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicegroupMemberInput)(nil)).Elem(), GetInternetservicegroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInternetservicegroupMemberArrayInput)(nil)).Elem(), GetInternetservicegroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastaddress6TaggingInput)(nil)).Elem(), GetMulticastaddress6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastaddress6TaggingArrayInput)(nil)).Elem(), GetMulticastaddress6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastaddress6TaggingTagInput)(nil)).Elem(), GetMulticastaddress6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastaddress6TaggingTagArrayInput)(nil)).Elem(), GetMulticastaddress6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastaddressTaggingInput)(nil)).Elem(), GetMulticastaddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastaddressTaggingArrayInput)(nil)).Elem(), GetMulticastaddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastaddressTaggingTagInput)(nil)).Elem(), GetMulticastaddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastaddressTaggingTagArrayInput)(nil)).Elem(), GetMulticastaddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy46DstaddrInput)(nil)).Elem(), GetPolicy46DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy46DstaddrArrayInput)(nil)).Elem(), GetPolicy46DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy46PoolnameInput)(nil)).Elem(), GetPolicy46PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy46PoolnameArrayInput)(nil)).Elem(), GetPolicy46PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy46ServiceInput)(nil)).Elem(), GetPolicy46ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy46ServiceArrayInput)(nil)).Elem(), GetPolicy46ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy46SrcaddrInput)(nil)).Elem(), GetPolicy46SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy46SrcaddrArrayInput)(nil)).Elem(), GetPolicy46SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy64DstaddrInput)(nil)).Elem(), GetPolicy64DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy64DstaddrArrayInput)(nil)).Elem(), GetPolicy64DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy64PoolnameInput)(nil)).Elem(), GetPolicy64PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy64PoolnameArrayInput)(nil)).Elem(), GetPolicy64PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy64ServiceInput)(nil)).Elem(), GetPolicy64ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy64ServiceArrayInput)(nil)).Elem(), GetPolicy64ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy64SrcaddrInput)(nil)).Elem(), GetPolicy64SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy64SrcaddrArrayInput)(nil)).Elem(), GetPolicy64SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6AppCategoryInput)(nil)).Elem(), GetPolicy6AppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6AppCategoryArrayInput)(nil)).Elem(), GetPolicy6AppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6AppGroupInput)(nil)).Elem(), GetPolicy6AppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6AppGroupArrayInput)(nil)).Elem(), GetPolicy6AppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6ApplicationInput)(nil)).Elem(), GetPolicy6ApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6ApplicationArrayInput)(nil)).Elem(), GetPolicy6ApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6CustomLogFieldInput)(nil)).Elem(), GetPolicy6CustomLogFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6CustomLogFieldArrayInput)(nil)).Elem(), GetPolicy6CustomLogFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6DeviceInput)(nil)).Elem(), GetPolicy6DeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6DeviceArrayInput)(nil)).Elem(), GetPolicy6DeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6DstaddrInput)(nil)).Elem(), GetPolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6DstaddrArrayInput)(nil)).Elem(), GetPolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6DstintfInput)(nil)).Elem(), GetPolicy6DstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6DstintfArrayInput)(nil)).Elem(), GetPolicy6DstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6FssoGroupInput)(nil)).Elem(), GetPolicy6FssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6FssoGroupArrayInput)(nil)).Elem(), GetPolicy6FssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6GroupInput)(nil)).Elem(), GetPolicy6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6GroupArrayInput)(nil)).Elem(), GetPolicy6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6PoolnameInput)(nil)).Elem(), GetPolicy6PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6PoolnameArrayInput)(nil)).Elem(), GetPolicy6PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6ServiceInput)(nil)).Elem(), GetPolicy6ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6ServiceArrayInput)(nil)).Elem(), GetPolicy6ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6SrcaddrInput)(nil)).Elem(), GetPolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6SrcaddrArrayInput)(nil)).Elem(), GetPolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6SrcintfInput)(nil)).Elem(), GetPolicy6SrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6SrcintfArrayInput)(nil)).Elem(), GetPolicy6SrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6SslMirrorIntfInput)(nil)).Elem(), GetPolicy6SslMirrorIntfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6SslMirrorIntfArrayInput)(nil)).Elem(), GetPolicy6SslMirrorIntfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6UrlCategoryInput)(nil)).Elem(), GetPolicy6UrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6UrlCategoryArrayInput)(nil)).Elem(), GetPolicy6UrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6UserInput)(nil)).Elem(), GetPolicy6UserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicy6UserArrayInput)(nil)).Elem(), GetPolicy6UserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAppCategoryInput)(nil)).Elem(), GetPolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAppCategoryArrayInput)(nil)).Elem(), GetPolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAppGroupInput)(nil)).Elem(), GetPolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAppGroupArrayInput)(nil)).Elem(), GetPolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyApplicationInput)(nil)).Elem(), GetPolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyApplicationArrayInput)(nil)).Elem(), GetPolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyCustomLogFieldInput)(nil)).Elem(), GetPolicyCustomLogFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyCustomLogFieldArrayInput)(nil)).Elem(), GetPolicyCustomLogFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDeviceInput)(nil)).Elem(), GetPolicyDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDeviceArrayInput)(nil)).Elem(), GetPolicyDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstaddr6Input)(nil)).Elem(), GetPolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstaddr6ArrayInput)(nil)).Elem(), GetPolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstaddrInput)(nil)).Elem(), GetPolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstaddrArrayInput)(nil)).Elem(), GetPolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstintfInput)(nil)).Elem(), GetPolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstintfArrayInput)(nil)).Elem(), GetPolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyFssoGroupInput)(nil)).Elem(), GetPolicyFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyFssoGroupArrayInput)(nil)).Elem(), GetPolicyFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGroupInput)(nil)).Elem(), GetPolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGroupArrayInput)(nil)).Elem(), GetPolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6CustomInput)(nil)).Elem(), GetPolicyInternetService6CustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6CustomArrayInput)(nil)).Elem(), GetPolicyInternetService6CustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6CustomGroupInput)(nil)).Elem(), GetPolicyInternetService6CustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6CustomGroupArrayInput)(nil)).Elem(), GetPolicyInternetService6CustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6GroupInput)(nil)).Elem(), GetPolicyInternetService6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6GroupArrayInput)(nil)).Elem(), GetPolicyInternetService6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6NameInput)(nil)).Elem(), GetPolicyInternetService6NameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6NameArrayInput)(nil)).Elem(), GetPolicyInternetService6NameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6SrcCustomInput)(nil)).Elem(), GetPolicyInternetService6SrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6SrcCustomArrayInput)(nil)).Elem(), GetPolicyInternetService6SrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6SrcCustomGroupInput)(nil)).Elem(), GetPolicyInternetService6SrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6SrcCustomGroupArrayInput)(nil)).Elem(), GetPolicyInternetService6SrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6SrcGroupInput)(nil)).Elem(), GetPolicyInternetService6SrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6SrcGroupArrayInput)(nil)).Elem(), GetPolicyInternetService6SrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6SrcNameInput)(nil)).Elem(), GetPolicyInternetService6SrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetService6SrcNameArrayInput)(nil)).Elem(), GetPolicyInternetService6SrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceCustomInput)(nil)).Elem(), GetPolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceCustomArrayInput)(nil)).Elem(), GetPolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceCustomGroupInput)(nil)).Elem(), GetPolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), GetPolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceGroupInput)(nil)).Elem(), GetPolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceGroupArrayInput)(nil)).Elem(), GetPolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceIdInput)(nil)).Elem(), GetPolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceIdArrayInput)(nil)).Elem(), GetPolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceNameInput)(nil)).Elem(), GetPolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceNameArrayInput)(nil)).Elem(), GetPolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcCustomInput)(nil)).Elem(), GetPolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), GetPolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), GetPolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), GetPolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcGroupInput)(nil)).Elem(), GetPolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), GetPolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcIdInput)(nil)).Elem(), GetPolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), GetPolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcNameInput)(nil)).Elem(), GetPolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), GetPolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyNetworkServiceDynamicInput)(nil)).Elem(), GetPolicyNetworkServiceDynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyNetworkServiceDynamicArrayInput)(nil)).Elem(), GetPolicyNetworkServiceDynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyNetworkServiceSrcDynamicInput)(nil)).Elem(), GetPolicyNetworkServiceSrcDynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyNetworkServiceSrcDynamicArrayInput)(nil)).Elem(), GetPolicyNetworkServiceSrcDynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyNtlmEnabledBrowserInput)(nil)).Elem(), GetPolicyNtlmEnabledBrowserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyNtlmEnabledBrowserArrayInput)(nil)).Elem(), GetPolicyNtlmEnabledBrowserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyPcpPoolnameInput)(nil)).Elem(), GetPolicyPcpPoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyPcpPoolnameArrayInput)(nil)).Elem(), GetPolicyPcpPoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyPoolname6Input)(nil)).Elem(), GetPolicyPoolname6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyPoolname6ArrayInput)(nil)).Elem(), GetPolicyPoolname6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyPoolnameInput)(nil)).Elem(), GetPolicyPoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyPoolnameArrayInput)(nil)).Elem(), GetPolicyPoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyRtpAddrInput)(nil)).Elem(), GetPolicyRtpAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyRtpAddrArrayInput)(nil)).Elem(), GetPolicyRtpAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyServiceInput)(nil)).Elem(), GetPolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyServiceArrayInput)(nil)).Elem(), GetPolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySgtInput)(nil)).Elem(), GetPolicySgtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySgtArrayInput)(nil)).Elem(), GetPolicySgtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcVendorMacInput)(nil)).Elem(), GetPolicySrcVendorMacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcVendorMacArrayInput)(nil)).Elem(), GetPolicySrcVendorMacArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcaddr6Input)(nil)).Elem(), GetPolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcaddr6ArrayInput)(nil)).Elem(), GetPolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcaddrInput)(nil)).Elem(), GetPolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcaddrArrayInput)(nil)).Elem(), GetPolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcintfInput)(nil)).Elem(), GetPolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcintfArrayInput)(nil)).Elem(), GetPolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySslMirrorIntfInput)(nil)).Elem(), GetPolicySslMirrorIntfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySslMirrorIntfArrayInput)(nil)).Elem(), GetPolicySslMirrorIntfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyUrlCategoryInput)(nil)).Elem(), GetPolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyUrlCategoryArrayInput)(nil)).Elem(), GetPolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyUserInput)(nil)).Elem(), GetPolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyUserArrayInput)(nil)).Elem(), GetPolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyZtnaEmsTagInput)(nil)).Elem(), GetPolicyZtnaEmsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyZtnaEmsTagArrayInput)(nil)).Elem(), GetPolicyZtnaEmsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyZtnaEmsTagSecondaryInput)(nil)).Elem(), GetPolicyZtnaEmsTagSecondaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyZtnaEmsTagSecondaryArrayInput)(nil)).Elem(), GetPolicyZtnaEmsTagSecondaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyZtnaGeoTagInput)(nil)).Elem(), GetPolicyZtnaGeoTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyZtnaGeoTagArrayInput)(nil)).Elem(), GetPolicyZtnaGeoTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsCifInput)(nil)).Elem(), GetProfileprotocoloptionsCifArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsCifArrayInput)(nil)).Elem(), GetProfileprotocoloptionsCifArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsCifServerKeytabInput)(nil)).Elem(), GetProfileprotocoloptionsCifServerKeytabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsCifServerKeytabArrayInput)(nil)).Elem(), GetProfileprotocoloptionsCifServerKeytabArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsDnInput)(nil)).Elem(), GetProfileprotocoloptionsDnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsDnArrayInput)(nil)).Elem(), GetProfileprotocoloptionsDnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsFtpInput)(nil)).Elem(), GetProfileprotocoloptionsFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsFtpArrayInput)(nil)).Elem(), GetProfileprotocoloptionsFtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsHttpInput)(nil)).Elem(), GetProfileprotocoloptionsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsHttpArrayInput)(nil)).Elem(), GetProfileprotocoloptionsHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsImapInput)(nil)).Elem(), GetProfileprotocoloptionsImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsImapArrayInput)(nil)).Elem(), GetProfileprotocoloptionsImapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsMailSignatureInput)(nil)).Elem(), GetProfileprotocoloptionsMailSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsMailSignatureArrayInput)(nil)).Elem(), GetProfileprotocoloptionsMailSignatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsMapiInput)(nil)).Elem(), GetProfileprotocoloptionsMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsMapiArrayInput)(nil)).Elem(), GetProfileprotocoloptionsMapiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsNntpInput)(nil)).Elem(), GetProfileprotocoloptionsNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsNntpArrayInput)(nil)).Elem(), GetProfileprotocoloptionsNntpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsPop3Input)(nil)).Elem(), GetProfileprotocoloptionsPop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsPop3ArrayInput)(nil)).Elem(), GetProfileprotocoloptionsPop3Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsSmtpInput)(nil)).Elem(), GetProfileprotocoloptionsSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsSmtpArrayInput)(nil)).Elem(), GetProfileprotocoloptionsSmtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsSshInput)(nil)).Elem(), GetProfileprotocoloptionsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProfileprotocoloptionsSshArrayInput)(nil)).Elem(), GetProfileprotocoloptionsSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddressApplicationInput)(nil)).Elem(), GetProxyaddressApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddressApplicationArrayInput)(nil)).Elem(), GetProxyaddressApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddressCategoryInput)(nil)).Elem(), GetProxyaddressCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddressCategoryArrayInput)(nil)).Elem(), GetProxyaddressCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddressHeaderGroupInput)(nil)).Elem(), GetProxyaddressHeaderGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddressHeaderGroupArrayInput)(nil)).Elem(), GetProxyaddressHeaderGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddressTaggingInput)(nil)).Elem(), GetProxyaddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddressTaggingArrayInput)(nil)).Elem(), GetProxyaddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddressTaggingTagInput)(nil)).Elem(), GetProxyaddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddressTaggingTagArrayInput)(nil)).Elem(), GetProxyaddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddrgrpMemberInput)(nil)).Elem(), GetProxyaddrgrpMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddrgrpMemberArrayInput)(nil)).Elem(), GetProxyaddrgrpMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddrgrpTaggingInput)(nil)).Elem(), GetProxyaddrgrpTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddrgrpTaggingArrayInput)(nil)).Elem(), GetProxyaddrgrpTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddrgrpTaggingTagInput)(nil)).Elem(), GetProxyaddrgrpTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyaddrgrpTaggingTagArrayInput)(nil)).Elem(), GetProxyaddrgrpTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyAccessProxy6Input)(nil)).Elem(), GetProxypolicyAccessProxy6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyAccessProxy6ArrayInput)(nil)).Elem(), GetProxypolicyAccessProxy6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyAccessProxyInput)(nil)).Elem(), GetProxypolicyAccessProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyAccessProxyArrayInput)(nil)).Elem(), GetProxypolicyAccessProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyDstaddr6Input)(nil)).Elem(), GetProxypolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyDstaddr6ArrayInput)(nil)).Elem(), GetProxypolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyDstaddrInput)(nil)).Elem(), GetProxypolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyDstaddrArrayInput)(nil)).Elem(), GetProxypolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyDstintfInput)(nil)).Elem(), GetProxypolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyDstintfArrayInput)(nil)).Elem(), GetProxypolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyGroupInput)(nil)).Elem(), GetProxypolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyGroupArrayInput)(nil)).Elem(), GetProxypolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetService6CustomInput)(nil)).Elem(), GetProxypolicyInternetService6CustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetService6CustomArrayInput)(nil)).Elem(), GetProxypolicyInternetService6CustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetService6CustomGroupInput)(nil)).Elem(), GetProxypolicyInternetService6CustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetService6CustomGroupArrayInput)(nil)).Elem(), GetProxypolicyInternetService6CustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetService6GroupInput)(nil)).Elem(), GetProxypolicyInternetService6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetService6GroupArrayInput)(nil)).Elem(), GetProxypolicyInternetService6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetService6NameInput)(nil)).Elem(), GetProxypolicyInternetService6NameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetService6NameArrayInput)(nil)).Elem(), GetProxypolicyInternetService6NameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetServiceCustomInput)(nil)).Elem(), GetProxypolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetServiceCustomArrayInput)(nil)).Elem(), GetProxypolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetServiceCustomGroupInput)(nil)).Elem(), GetProxypolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), GetProxypolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetServiceGroupInput)(nil)).Elem(), GetProxypolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetServiceGroupArrayInput)(nil)).Elem(), GetProxypolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetServiceIdInput)(nil)).Elem(), GetProxypolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetServiceIdArrayInput)(nil)).Elem(), GetProxypolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetServiceNameInput)(nil)).Elem(), GetProxypolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyInternetServiceNameArrayInput)(nil)).Elem(), GetProxypolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyPoolnameInput)(nil)).Elem(), GetProxypolicyPoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyPoolnameArrayInput)(nil)).Elem(), GetProxypolicyPoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyServiceInput)(nil)).Elem(), GetProxypolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyServiceArrayInput)(nil)).Elem(), GetProxypolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicySrcaddr6Input)(nil)).Elem(), GetProxypolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicySrcaddr6ArrayInput)(nil)).Elem(), GetProxypolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicySrcaddrInput)(nil)).Elem(), GetProxypolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicySrcaddrArrayInput)(nil)).Elem(), GetProxypolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicySrcintfInput)(nil)).Elem(), GetProxypolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicySrcintfArrayInput)(nil)).Elem(), GetProxypolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyUserInput)(nil)).Elem(), GetProxypolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyUserArrayInput)(nil)).Elem(), GetProxypolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyZtnaEmsTagInput)(nil)).Elem(), GetProxypolicyZtnaEmsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxypolicyZtnaEmsTagArrayInput)(nil)).Elem(), GetProxypolicyZtnaEmsTagArray{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6Output{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6ArrayOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6ApplicationOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6ApplicationArrayOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6QuicOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6QuicPtrOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6RealserverOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6RealserverArrayOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6RealserverSshHostKeyOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6RealserverSshHostKeyArrayOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6SslCipherSuiteOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGateway6SslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewayOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewayArrayOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewayApplicationOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewayApplicationArrayOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewayQuicOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewayQuicPtrOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewayRealserverOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewayRealserverArrayOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewayRealserverSshHostKeyOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewayRealserverSshHostKeyArrayOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewaySslCipherSuiteOutput{})
	pulumi.RegisterOutputType(Accessproxy6ApiGatewaySslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6Output{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6ArrayOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6ApplicationOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6ApplicationArrayOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6QuicOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6QuicPtrOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6RealserverOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6RealserverArrayOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6RealserverSshHostKeyOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6RealserverSshHostKeyArrayOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6SslCipherSuiteOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGateway6SslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewayOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewayArrayOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewayApplicationOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewayApplicationArrayOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewayQuicOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewayQuicPtrOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewayRealserverOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewayRealserverArrayOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewayRealserverSshHostKeyOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewayRealserverSshHostKeyArrayOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewaySslCipherSuiteOutput{})
	pulumi.RegisterOutputType(AccessproxyApiGatewaySslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(AccessproxysshclientcertCertExtensionOutput{})
	pulumi.RegisterOutputType(AccessproxysshclientcertCertExtensionArrayOutput{})
	pulumi.RegisterOutputType(Address6ListOutput{})
	pulumi.RegisterOutputType(Address6ListArrayOutput{})
	pulumi.RegisterOutputType(Address6MacaddrOutput{})
	pulumi.RegisterOutputType(Address6MacaddrArrayOutput{})
	pulumi.RegisterOutputType(Address6SubnetSegmentOutput{})
	pulumi.RegisterOutputType(Address6SubnetSegmentArrayOutput{})
	pulumi.RegisterOutputType(Address6TaggingOutput{})
	pulumi.RegisterOutputType(Address6TaggingArrayOutput{})
	pulumi.RegisterOutputType(Address6TaggingTagOutput{})
	pulumi.RegisterOutputType(Address6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(Address6templateSubnetSegmentOutput{})
	pulumi.RegisterOutputType(Address6templateSubnetSegmentArrayOutput{})
	pulumi.RegisterOutputType(Address6templateSubnetSegmentValueOutput{})
	pulumi.RegisterOutputType(Address6templateSubnetSegmentValueArrayOutput{})
	pulumi.RegisterOutputType(AddressFssoGroupOutput{})
	pulumi.RegisterOutputType(AddressFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(AddressListOutput{})
	pulumi.RegisterOutputType(AddressListArrayOutput{})
	pulumi.RegisterOutputType(AddressMacaddrOutput{})
	pulumi.RegisterOutputType(AddressMacaddrArrayOutput{})
	pulumi.RegisterOutputType(AddressTaggingOutput{})
	pulumi.RegisterOutputType(AddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(AddressTaggingTagOutput{})
	pulumi.RegisterOutputType(AddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(Addrgrp6ExcludeMemberOutput{})
	pulumi.RegisterOutputType(Addrgrp6ExcludeMemberArrayOutput{})
	pulumi.RegisterOutputType(Addrgrp6MemberOutput{})
	pulumi.RegisterOutputType(Addrgrp6MemberArrayOutput{})
	pulumi.RegisterOutputType(Addrgrp6TaggingOutput{})
	pulumi.RegisterOutputType(Addrgrp6TaggingArrayOutput{})
	pulumi.RegisterOutputType(Addrgrp6TaggingTagOutput{})
	pulumi.RegisterOutputType(Addrgrp6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(AddrgrpExcludeMemberOutput{})
	pulumi.RegisterOutputType(AddrgrpExcludeMemberArrayOutput{})
	pulumi.RegisterOutputType(AddrgrpMemberOutput{})
	pulumi.RegisterOutputType(AddrgrpMemberArrayOutput{})
	pulumi.RegisterOutputType(AddrgrpTaggingOutput{})
	pulumi.RegisterOutputType(AddrgrpTaggingArrayOutput{})
	pulumi.RegisterOutputType(AddrgrpTaggingTagOutput{})
	pulumi.RegisterOutputType(AddrgrpTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(AuthportalGroupOutput{})
	pulumi.RegisterOutputType(AuthportalGroupArrayOutput{})
	pulumi.RegisterOutputType(CentralsnatmapDstAddr6Output{})
	pulumi.RegisterOutputType(CentralsnatmapDstAddr6ArrayOutput{})
	pulumi.RegisterOutputType(CentralsnatmapDstAddrOutput{})
	pulumi.RegisterOutputType(CentralsnatmapDstAddrArrayOutput{})
	pulumi.RegisterOutputType(CentralsnatmapDstintfOutput{})
	pulumi.RegisterOutputType(CentralsnatmapDstintfArrayOutput{})
	pulumi.RegisterOutputType(CentralsnatmapNatIppool6Output{})
	pulumi.RegisterOutputType(CentralsnatmapNatIppool6ArrayOutput{})
	pulumi.RegisterOutputType(CentralsnatmapNatIppoolOutput{})
	pulumi.RegisterOutputType(CentralsnatmapNatIppoolArrayOutput{})
	pulumi.RegisterOutputType(CentralsnatmapOrigAddr6Output{})
	pulumi.RegisterOutputType(CentralsnatmapOrigAddr6ArrayOutput{})
	pulumi.RegisterOutputType(CentralsnatmapOrigAddrOutput{})
	pulumi.RegisterOutputType(CentralsnatmapOrigAddrArrayOutput{})
	pulumi.RegisterOutputType(CentralsnatmapSortStatePolicyListOutput{})
	pulumi.RegisterOutputType(CentralsnatmapSortStatePolicyListArrayOutput{})
	pulumi.RegisterOutputType(CentralsnatmapSrcintfOutput{})
	pulumi.RegisterOutputType(CentralsnatmapSrcintfArrayOutput{})
	pulumi.RegisterOutputType(CountryRegionOutput{})
	pulumi.RegisterOutputType(CountryRegionArrayOutput{})
	pulumi.RegisterOutputType(DecryptedtrafficmirrorInterfaceOutput{})
	pulumi.RegisterOutputType(DecryptedtrafficmirrorInterfaceArrayOutput{})
	pulumi.RegisterOutputType(DoSpolicy6AnomalyOutput{})
	pulumi.RegisterOutputType(DoSpolicy6AnomalyArrayOutput{})
	pulumi.RegisterOutputType(DoSpolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(DoSpolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(DoSpolicy6ServiceOutput{})
	pulumi.RegisterOutputType(DoSpolicy6ServiceArrayOutput{})
	pulumi.RegisterOutputType(DoSpolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(DoSpolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(DoSpolicyAnomalyOutput{})
	pulumi.RegisterOutputType(DoSpolicyAnomalyArrayOutput{})
	pulumi.RegisterOutputType(DoSpolicyDstaddrOutput{})
	pulumi.RegisterOutputType(DoSpolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(DoSpolicyServiceOutput{})
	pulumi.RegisterOutputType(DoSpolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(DoSpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(DoSpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(IdentitybasedrouteRuleOutput{})
	pulumi.RegisterOutputType(IdentitybasedrouteRuleArrayOutput{})
	pulumi.RegisterOutputType(IdentitybasedrouteRuleGroupOutput{})
	pulumi.RegisterOutputType(IdentitybasedrouteRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(Interfacepolicy6Dstaddr6Output{})
	pulumi.RegisterOutputType(Interfacepolicy6Dstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(Interfacepolicy6Service6Output{})
	pulumi.RegisterOutputType(Interfacepolicy6Service6ArrayOutput{})
	pulumi.RegisterOutputType(Interfacepolicy6Srcaddr6Output{})
	pulumi.RegisterOutputType(Interfacepolicy6Srcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(InterfacepolicyDstaddrOutput{})
	pulumi.RegisterOutputType(InterfacepolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(InterfacepolicyServiceOutput{})
	pulumi.RegisterOutputType(InterfacepolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(InterfacepolicySrcaddrOutput{})
	pulumi.RegisterOutputType(InterfacepolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(InternetserviceadditionEntryOutput{})
	pulumi.RegisterOutputType(InternetserviceadditionEntryArrayOutput{})
	pulumi.RegisterOutputType(InternetserviceadditionEntryPortRangeOutput{})
	pulumi.RegisterOutputType(InternetserviceadditionEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(InternetservicecustomEntryOutput{})
	pulumi.RegisterOutputType(InternetservicecustomEntryArrayOutput{})
	pulumi.RegisterOutputType(InternetservicecustomEntryDst6Output{})
	pulumi.RegisterOutputType(InternetservicecustomEntryDst6ArrayOutput{})
	pulumi.RegisterOutputType(InternetservicecustomEntryDstOutput{})
	pulumi.RegisterOutputType(InternetservicecustomEntryDstArrayOutput{})
	pulumi.RegisterOutputType(InternetservicecustomEntryPortRangeOutput{})
	pulumi.RegisterOutputType(InternetservicecustomEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(InternetservicecustomgroupMemberOutput{})
	pulumi.RegisterOutputType(InternetservicecustomgroupMemberArrayOutput{})
	pulumi.RegisterOutputType(InternetservicedefinitionEntryOutput{})
	pulumi.RegisterOutputType(InternetservicedefinitionEntryArrayOutput{})
	pulumi.RegisterOutputType(InternetservicedefinitionEntryPortRangeOutput{})
	pulumi.RegisterOutputType(InternetservicedefinitionEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionDisableEntryOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionDisableEntryArrayOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionDisableEntryIp6RangeOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionDisableEntryIp6RangeArrayOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionDisableEntryIpRangeOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionDisableEntryIpRangeArrayOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionDisableEntryPortRangeOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionDisableEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionEntryOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionEntryArrayOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionEntryDst6Output{})
	pulumi.RegisterOutputType(InternetserviceextensionEntryDst6ArrayOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionEntryDstOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionEntryDstArrayOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionEntryPortRangeOutput{})
	pulumi.RegisterOutputType(InternetserviceextensionEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(InternetservicegroupMemberOutput{})
	pulumi.RegisterOutputType(InternetservicegroupMemberArrayOutput{})
	pulumi.RegisterOutputType(InternetservicesubappSubAppOutput{})
	pulumi.RegisterOutputType(InternetservicesubappSubAppArrayOutput{})
	pulumi.RegisterOutputType(Localinpolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(Localinpolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(Localinpolicy6ServiceOutput{})
	pulumi.RegisterOutputType(Localinpolicy6ServiceArrayOutput{})
	pulumi.RegisterOutputType(Localinpolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(Localinpolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(LocalinpolicyDstaddrOutput{})
	pulumi.RegisterOutputType(LocalinpolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(LocalinpolicyServiceOutput{})
	pulumi.RegisterOutputType(LocalinpolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(LocalinpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(LocalinpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(Multicastaddress6TaggingOutput{})
	pulumi.RegisterOutputType(Multicastaddress6TaggingArrayOutput{})
	pulumi.RegisterOutputType(Multicastaddress6TaggingTagOutput{})
	pulumi.RegisterOutputType(Multicastaddress6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(MulticastaddressTaggingOutput{})
	pulumi.RegisterOutputType(MulticastaddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(MulticastaddressTaggingTagOutput{})
	pulumi.RegisterOutputType(MulticastaddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(Multicastpolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(Multicastpolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(Multicastpolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(Multicastpolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(MulticastpolicyDstaddrOutput{})
	pulumi.RegisterOutputType(MulticastpolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(MulticastpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(MulticastpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(Policy46DstaddrOutput{})
	pulumi.RegisterOutputType(Policy46DstaddrArrayOutput{})
	pulumi.RegisterOutputType(Policy46PoolnameOutput{})
	pulumi.RegisterOutputType(Policy46PoolnameArrayOutput{})
	pulumi.RegisterOutputType(Policy46ServiceOutput{})
	pulumi.RegisterOutputType(Policy46ServiceArrayOutput{})
	pulumi.RegisterOutputType(Policy46SrcaddrOutput{})
	pulumi.RegisterOutputType(Policy46SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(Policy64DstaddrOutput{})
	pulumi.RegisterOutputType(Policy64DstaddrArrayOutput{})
	pulumi.RegisterOutputType(Policy64PoolnameOutput{})
	pulumi.RegisterOutputType(Policy64PoolnameArrayOutput{})
	pulumi.RegisterOutputType(Policy64ServiceOutput{})
	pulumi.RegisterOutputType(Policy64ServiceArrayOutput{})
	pulumi.RegisterOutputType(Policy64SrcaddrOutput{})
	pulumi.RegisterOutputType(Policy64SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(Policy6AppCategoryOutput{})
	pulumi.RegisterOutputType(Policy6AppCategoryArrayOutput{})
	pulumi.RegisterOutputType(Policy6AppGroupOutput{})
	pulumi.RegisterOutputType(Policy6AppGroupArrayOutput{})
	pulumi.RegisterOutputType(Policy6ApplicationOutput{})
	pulumi.RegisterOutputType(Policy6ApplicationArrayOutput{})
	pulumi.RegisterOutputType(Policy6CustomLogFieldOutput{})
	pulumi.RegisterOutputType(Policy6CustomLogFieldArrayOutput{})
	pulumi.RegisterOutputType(Policy6DeviceOutput{})
	pulumi.RegisterOutputType(Policy6DeviceArrayOutput{})
	pulumi.RegisterOutputType(Policy6DstaddrOutput{})
	pulumi.RegisterOutputType(Policy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(Policy6DstintfOutput{})
	pulumi.RegisterOutputType(Policy6DstintfArrayOutput{})
	pulumi.RegisterOutputType(Policy6FssoGroupOutput{})
	pulumi.RegisterOutputType(Policy6FssoGroupArrayOutput{})
	pulumi.RegisterOutputType(Policy6GroupOutput{})
	pulumi.RegisterOutputType(Policy6GroupArrayOutput{})
	pulumi.RegisterOutputType(Policy6PoolnameOutput{})
	pulumi.RegisterOutputType(Policy6PoolnameArrayOutput{})
	pulumi.RegisterOutputType(Policy6ServiceOutput{})
	pulumi.RegisterOutputType(Policy6ServiceArrayOutput{})
	pulumi.RegisterOutputType(Policy6SrcaddrOutput{})
	pulumi.RegisterOutputType(Policy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(Policy6SrcintfOutput{})
	pulumi.RegisterOutputType(Policy6SrcintfArrayOutput{})
	pulumi.RegisterOutputType(Policy6SslMirrorIntfOutput{})
	pulumi.RegisterOutputType(Policy6SslMirrorIntfArrayOutput{})
	pulumi.RegisterOutputType(Policy6UrlCategoryOutput{})
	pulumi.RegisterOutputType(Policy6UrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(Policy6UserOutput{})
	pulumi.RegisterOutputType(Policy6UserArrayOutput{})
	pulumi.RegisterOutputType(PolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(PolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(PolicyAppGroupOutput{})
	pulumi.RegisterOutputType(PolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyApplicationOutput{})
	pulumi.RegisterOutputType(PolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(PolicyCustomLogFieldOutput{})
	pulumi.RegisterOutputType(PolicyCustomLogFieldArrayOutput{})
	pulumi.RegisterOutputType(PolicyDeviceOutput{})
	pulumi.RegisterOutputType(PolicyDeviceArrayOutput{})
	pulumi.RegisterOutputType(PolicyDstaddr6Output{})
	pulumi.RegisterOutputType(PolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(PolicyDstaddrOutput{})
	pulumi.RegisterOutputType(PolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(PolicyDstintfOutput{})
	pulumi.RegisterOutputType(PolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(PolicyFssoGroupOutput{})
	pulumi.RegisterOutputType(PolicyFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupOutput{})
	pulumi.RegisterOutputType(PolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6CustomOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6CustomArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6CustomGroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6CustomGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6GroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6GroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6NameOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6NameArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6SrcCustomOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6SrcCustomArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6SrcCustomGroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6SrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6SrcGroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6SrcGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6SrcNameOutput{})
	pulumi.RegisterOutputType(PolicyInternetService6SrcNameArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(PolicyNetworkServiceDynamicOutput{})
	pulumi.RegisterOutputType(PolicyNetworkServiceDynamicArrayOutput{})
	pulumi.RegisterOutputType(PolicyNetworkServiceSrcDynamicOutput{})
	pulumi.RegisterOutputType(PolicyNetworkServiceSrcDynamicArrayOutput{})
	pulumi.RegisterOutputType(PolicyNtlmEnabledBrowserOutput{})
	pulumi.RegisterOutputType(PolicyNtlmEnabledBrowserArrayOutput{})
	pulumi.RegisterOutputType(PolicyPcpPoolnameOutput{})
	pulumi.RegisterOutputType(PolicyPcpPoolnameArrayOutput{})
	pulumi.RegisterOutputType(PolicyPoolname6Output{})
	pulumi.RegisterOutputType(PolicyPoolname6ArrayOutput{})
	pulumi.RegisterOutputType(PolicyPoolnameOutput{})
	pulumi.RegisterOutputType(PolicyPoolnameArrayOutput{})
	pulumi.RegisterOutputType(PolicyRtpAddrOutput{})
	pulumi.RegisterOutputType(PolicyRtpAddrArrayOutput{})
	pulumi.RegisterOutputType(PolicyServiceOutput{})
	pulumi.RegisterOutputType(PolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(PolicySgtOutput{})
	pulumi.RegisterOutputType(PolicySgtArrayOutput{})
	pulumi.RegisterOutputType(PolicySortStatePolicyListOutput{})
	pulumi.RegisterOutputType(PolicySortStatePolicyListArrayOutput{})
	pulumi.RegisterOutputType(PolicySrcVendorMacOutput{})
	pulumi.RegisterOutputType(PolicySrcVendorMacArrayOutput{})
	pulumi.RegisterOutputType(PolicySrcaddr6Output{})
	pulumi.RegisterOutputType(PolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(PolicySrcaddrOutput{})
	pulumi.RegisterOutputType(PolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(PolicySrcintfOutput{})
	pulumi.RegisterOutputType(PolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(PolicySslMirrorIntfOutput{})
	pulumi.RegisterOutputType(PolicySslMirrorIntfArrayOutput{})
	pulumi.RegisterOutputType(PolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(PolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(PolicyUserOutput{})
	pulumi.RegisterOutputType(PolicyUserArrayOutput{})
	pulumi.RegisterOutputType(PolicyZtnaEmsTagOutput{})
	pulumi.RegisterOutputType(PolicyZtnaEmsTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyZtnaEmsTagSecondaryOutput{})
	pulumi.RegisterOutputType(PolicyZtnaEmsTagSecondaryArrayOutput{})
	pulumi.RegisterOutputType(PolicyZtnaGeoTagOutput{})
	pulumi.RegisterOutputType(PolicyZtnaGeoTagArrayOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsCifsOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsCifsPtrOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsCifsServerKeytabOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsCifsServerKeytabArrayOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsDnsOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsDnsPtrOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsFtpOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsFtpPtrOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsHttpOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsHttpPtrOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsImapOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsImapPtrOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsMailSignatureOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsMailSignaturePtrOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsMapiOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsMapiPtrOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsNntpOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsNntpPtrOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsPop3Output{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsPop3PtrOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsSmtpOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsSmtpPtrOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsSshOutput{})
	pulumi.RegisterOutputType(ProfileprotocoloptionsSshPtrOutput{})
	pulumi.RegisterOutputType(ProxyaddressApplicationOutput{})
	pulumi.RegisterOutputType(ProxyaddressApplicationArrayOutput{})
	pulumi.RegisterOutputType(ProxyaddressCategoryOutput{})
	pulumi.RegisterOutputType(ProxyaddressCategoryArrayOutput{})
	pulumi.RegisterOutputType(ProxyaddressHeaderGroupOutput{})
	pulumi.RegisterOutputType(ProxyaddressHeaderGroupArrayOutput{})
	pulumi.RegisterOutputType(ProxyaddressTaggingOutput{})
	pulumi.RegisterOutputType(ProxyaddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(ProxyaddressTaggingTagOutput{})
	pulumi.RegisterOutputType(ProxyaddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(ProxyaddrgrpMemberOutput{})
	pulumi.RegisterOutputType(ProxyaddrgrpMemberArrayOutput{})
	pulumi.RegisterOutputType(ProxyaddrgrpTaggingOutput{})
	pulumi.RegisterOutputType(ProxyaddrgrpTaggingArrayOutput{})
	pulumi.RegisterOutputType(ProxyaddrgrpTaggingTagOutput{})
	pulumi.RegisterOutputType(ProxyaddrgrpTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyAccessProxy6Output{})
	pulumi.RegisterOutputType(ProxypolicyAccessProxy6ArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyAccessProxyOutput{})
	pulumi.RegisterOutputType(ProxypolicyAccessProxyArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyDstaddr6Output{})
	pulumi.RegisterOutputType(ProxypolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyDstaddrOutput{})
	pulumi.RegisterOutputType(ProxypolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyDstintfOutput{})
	pulumi.RegisterOutputType(ProxypolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyGroupOutput{})
	pulumi.RegisterOutputType(ProxypolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetService6CustomOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetService6CustomArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetService6CustomGroupOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetService6CustomGroupArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetService6GroupOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetService6GroupArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetService6NameOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetService6NameArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(ProxypolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyPoolnameOutput{})
	pulumi.RegisterOutputType(ProxypolicyPoolnameArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyServiceOutput{})
	pulumi.RegisterOutputType(ProxypolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicySortStatePolicyListOutput{})
	pulumi.RegisterOutputType(ProxypolicySortStatePolicyListArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicySrcaddr6Output{})
	pulumi.RegisterOutputType(ProxypolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicySrcaddrOutput{})
	pulumi.RegisterOutputType(ProxypolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicySrcintfOutput{})
	pulumi.RegisterOutputType(ProxypolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyUserOutput{})
	pulumi.RegisterOutputType(ProxypolicyUserArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicyZtnaEmsTagOutput{})
	pulumi.RegisterOutputType(ProxypolicyZtnaEmsTagArrayOutput{})
	pulumi.RegisterOutputType(RegionCityOutput{})
	pulumi.RegisterOutputType(RegionCityArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyseqStatePolicyListOutput{})
	pulumi.RegisterOutputType(SecurityPolicyseqStatePolicyListArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(SecuritypolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyAppGroupOutput{})
	pulumi.RegisterOutputType(SecuritypolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyApplicationOutput{})
	pulumi.RegisterOutputType(SecuritypolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyDstaddr4Output{})
	pulumi.RegisterOutputType(SecuritypolicyDstaddr4ArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyDstaddr6Output{})
	pulumi.RegisterOutputType(SecuritypolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyDstaddrOutput{})
	pulumi.RegisterOutputType(SecuritypolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyDstintfOutput{})
	pulumi.RegisterOutputType(SecuritypolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyFssoGroupOutput{})
	pulumi.RegisterOutputType(SecuritypolicyFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyGroupOutput{})
	pulumi.RegisterOutputType(SecuritypolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6CustomOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6CustomArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6CustomGroupOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6CustomGroupArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6GroupOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6GroupArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6NameOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6NameArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6SrcCustomOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6SrcCustomArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6SrcCustomGroupOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6SrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6SrcGroupOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6SrcGroupArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6SrcNameOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetService6SrcNameArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(SecuritypolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyServiceOutput{})
	pulumi.RegisterOutputType(SecuritypolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicySortStatePolicyListOutput{})
	pulumi.RegisterOutputType(SecuritypolicySortStatePolicyListArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicySrcaddr4Output{})
	pulumi.RegisterOutputType(SecuritypolicySrcaddr4ArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicySrcaddr6Output{})
	pulumi.RegisterOutputType(SecuritypolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicySrcaddrOutput{})
	pulumi.RegisterOutputType(SecuritypolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicySrcintfOutput{})
	pulumi.RegisterOutputType(SecuritypolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(SecuritypolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyUserOutput{})
	pulumi.RegisterOutputType(SecuritypolicyUserArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(ShapingpolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyAppGroupOutput{})
	pulumi.RegisterOutputType(ShapingpolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyApplicationOutput{})
	pulumi.RegisterOutputType(ShapingpolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyDstaddr6Output{})
	pulumi.RegisterOutputType(ShapingpolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyDstaddrOutput{})
	pulumi.RegisterOutputType(ShapingpolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyDstintfOutput{})
	pulumi.RegisterOutputType(ShapingpolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyGroupOutput{})
	pulumi.RegisterOutputType(ShapingpolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(ShapingpolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyServiceOutput{})
	pulumi.RegisterOutputType(ShapingpolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicySrcaddr6Output{})
	pulumi.RegisterOutputType(ShapingpolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(ShapingpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicySrcintfOutput{})
	pulumi.RegisterOutputType(ShapingpolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(ShapingpolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyUserOutput{})
	pulumi.RegisterOutputType(ShapingpolicyUserArrayOutput{})
	pulumi.RegisterOutputType(ShapingprofileShapingEntryOutput{})
	pulumi.RegisterOutputType(ShapingprofileShapingEntryArrayOutput{})
	pulumi.RegisterOutputType(SnifferAnomalyOutput{})
	pulumi.RegisterOutputType(SnifferAnomalyArrayOutput{})
	pulumi.RegisterOutputType(SnifferIpThreatfeedOutput{})
	pulumi.RegisterOutputType(SnifferIpThreatfeedArrayOutput{})
	pulumi.RegisterOutputType(SslsshprofileDotOutput{})
	pulumi.RegisterOutputType(SslsshprofileDotPtrOutput{})
	pulumi.RegisterOutputType(SslsshprofileFtpsOutput{})
	pulumi.RegisterOutputType(SslsshprofileFtpsPtrOutput{})
	pulumi.RegisterOutputType(SslsshprofileHttpsOutput{})
	pulumi.RegisterOutputType(SslsshprofileHttpsPtrOutput{})
	pulumi.RegisterOutputType(SslsshprofileImapsOutput{})
	pulumi.RegisterOutputType(SslsshprofileImapsPtrOutput{})
	pulumi.RegisterOutputType(SslsshprofilePop3sOutput{})
	pulumi.RegisterOutputType(SslsshprofilePop3sPtrOutput{})
	pulumi.RegisterOutputType(SslsshprofileSmtpsOutput{})
	pulumi.RegisterOutputType(SslsshprofileSmtpsPtrOutput{})
	pulumi.RegisterOutputType(SslsshprofileSshOutput{})
	pulumi.RegisterOutputType(SslsshprofileSshPtrOutput{})
	pulumi.RegisterOutputType(SslsshprofileSslOutput{})
	pulumi.RegisterOutputType(SslsshprofileSslPtrOutput{})
	pulumi.RegisterOutputType(SslsshprofileSslExemptOutput{})
	pulumi.RegisterOutputType(SslsshprofileSslExemptArrayOutput{})
	pulumi.RegisterOutputType(SslsshprofileSslServerOutput{})
	pulumi.RegisterOutputType(SslsshprofileSslServerArrayOutput{})
	pulumi.RegisterOutputType(TtlpolicyServiceOutput{})
	pulumi.RegisterOutputType(TtlpolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(TtlpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(TtlpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(Vip46MonitorOutput{})
	pulumi.RegisterOutputType(Vip46MonitorArrayOutput{})
	pulumi.RegisterOutputType(Vip46RealserverOutput{})
	pulumi.RegisterOutputType(Vip46RealserverArrayOutput{})
	pulumi.RegisterOutputType(Vip46SrcFilterOutput{})
	pulumi.RegisterOutputType(Vip46SrcFilterArrayOutput{})
	pulumi.RegisterOutputType(Vip46SrcintfFilterOutput{})
	pulumi.RegisterOutputType(Vip46SrcintfFilterArrayOutput{})
	pulumi.RegisterOutputType(Vip64MonitorOutput{})
	pulumi.RegisterOutputType(Vip64MonitorArrayOutput{})
	pulumi.RegisterOutputType(Vip64RealserverOutput{})
	pulumi.RegisterOutputType(Vip64RealserverArrayOutput{})
	pulumi.RegisterOutputType(Vip64SrcFilterOutput{})
	pulumi.RegisterOutputType(Vip64SrcFilterArrayOutput{})
	pulumi.RegisterOutputType(Vip6MonitorOutput{})
	pulumi.RegisterOutputType(Vip6MonitorArrayOutput{})
	pulumi.RegisterOutputType(Vip6QuicOutput{})
	pulumi.RegisterOutputType(Vip6QuicPtrOutput{})
	pulumi.RegisterOutputType(Vip6RealserverOutput{})
	pulumi.RegisterOutputType(Vip6RealserverArrayOutput{})
	pulumi.RegisterOutputType(Vip6SrcFilterOutput{})
	pulumi.RegisterOutputType(Vip6SrcFilterArrayOutput{})
	pulumi.RegisterOutputType(Vip6SslCipherSuiteOutput{})
	pulumi.RegisterOutputType(Vip6SslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(Vip6SslServerCipherSuiteOutput{})
	pulumi.RegisterOutputType(Vip6SslServerCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(VipExtaddrOutput{})
	pulumi.RegisterOutputType(VipExtaddrArrayOutput{})
	pulumi.RegisterOutputType(VipGslbPublicIpOutput{})
	pulumi.RegisterOutputType(VipGslbPublicIpArrayOutput{})
	pulumi.RegisterOutputType(VipMappedipOutput{})
	pulumi.RegisterOutputType(VipMappedipArrayOutput{})
	pulumi.RegisterOutputType(VipMonitorOutput{})
	pulumi.RegisterOutputType(VipMonitorArrayOutput{})
	pulumi.RegisterOutputType(VipQuicOutput{})
	pulumi.RegisterOutputType(VipQuicPtrOutput{})
	pulumi.RegisterOutputType(VipRealserverOutput{})
	pulumi.RegisterOutputType(VipRealserverArrayOutput{})
	pulumi.RegisterOutputType(VipServiceOutput{})
	pulumi.RegisterOutputType(VipServiceArrayOutput{})
	pulumi.RegisterOutputType(VipSrcFilterOutput{})
	pulumi.RegisterOutputType(VipSrcFilterArrayOutput{})
	pulumi.RegisterOutputType(VipSrcintfFilterOutput{})
	pulumi.RegisterOutputType(VipSrcintfFilterArrayOutput{})
	pulumi.RegisterOutputType(VipSslCipherSuiteOutput{})
	pulumi.RegisterOutputType(VipSslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(VipSslServerCipherSuiteOutput{})
	pulumi.RegisterOutputType(VipSslServerCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(Vipgrp46MemberOutput{})
	pulumi.RegisterOutputType(Vipgrp46MemberArrayOutput{})
	pulumi.RegisterOutputType(Vipgrp64MemberOutput{})
	pulumi.RegisterOutputType(Vipgrp64MemberArrayOutput{})
	pulumi.RegisterOutputType(Vipgrp6MemberOutput{})
	pulumi.RegisterOutputType(Vipgrp6MemberArrayOutput{})
	pulumi.RegisterOutputType(VipgrpMemberOutput{})
	pulumi.RegisterOutputType(VipgrpMemberArrayOutput{})
	pulumi.RegisterOutputType(GetAddress6ListOutput{})
	pulumi.RegisterOutputType(GetAddress6ListArrayOutput{})
	pulumi.RegisterOutputType(GetAddress6MacaddrOutput{})
	pulumi.RegisterOutputType(GetAddress6MacaddrArrayOutput{})
	pulumi.RegisterOutputType(GetAddress6SubnetSegmentOutput{})
	pulumi.RegisterOutputType(GetAddress6SubnetSegmentArrayOutput{})
	pulumi.RegisterOutputType(GetAddress6TaggingOutput{})
	pulumi.RegisterOutputType(GetAddress6TaggingArrayOutput{})
	pulumi.RegisterOutputType(GetAddress6TaggingTagOutput{})
	pulumi.RegisterOutputType(GetAddress6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetAddress6templateSubnetSegmentOutput{})
	pulumi.RegisterOutputType(GetAddress6templateSubnetSegmentArrayOutput{})
	pulumi.RegisterOutputType(GetAddress6templateSubnetSegmentValueOutput{})
	pulumi.RegisterOutputType(GetAddress6templateSubnetSegmentValueArrayOutput{})
	pulumi.RegisterOutputType(GetAddressFssoGroupOutput{})
	pulumi.RegisterOutputType(GetAddressFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(GetAddressListOutput{})
	pulumi.RegisterOutputType(GetAddressListArrayOutput{})
	pulumi.RegisterOutputType(GetAddressMacaddrOutput{})
	pulumi.RegisterOutputType(GetAddressMacaddrArrayOutput{})
	pulumi.RegisterOutputType(GetAddressTaggingOutput{})
	pulumi.RegisterOutputType(GetAddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetAddressTaggingTagOutput{})
	pulumi.RegisterOutputType(GetAddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetAddrgrp6ExcludeMemberOutput{})
	pulumi.RegisterOutputType(GetAddrgrp6ExcludeMemberArrayOutput{})
	pulumi.RegisterOutputType(GetAddrgrp6MemberOutput{})
	pulumi.RegisterOutputType(GetAddrgrp6MemberArrayOutput{})
	pulumi.RegisterOutputType(GetAddrgrp6TaggingOutput{})
	pulumi.RegisterOutputType(GetAddrgrp6TaggingArrayOutput{})
	pulumi.RegisterOutputType(GetAddrgrp6TaggingTagOutput{})
	pulumi.RegisterOutputType(GetAddrgrp6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetAddrgrpExcludeMemberOutput{})
	pulumi.RegisterOutputType(GetAddrgrpExcludeMemberArrayOutput{})
	pulumi.RegisterOutputType(GetAddrgrpMemberOutput{})
	pulumi.RegisterOutputType(GetAddrgrpMemberArrayOutput{})
	pulumi.RegisterOutputType(GetAddrgrpTaggingOutput{})
	pulumi.RegisterOutputType(GetAddrgrpTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetAddrgrpTaggingTagOutput{})
	pulumi.RegisterOutputType(GetAddrgrpTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapDstAddr6Output{})
	pulumi.RegisterOutputType(GetCentralsnatmapDstAddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapDstAddrOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapDstAddrArrayOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapDstintfOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapDstintfArrayOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapNatIppool6Output{})
	pulumi.RegisterOutputType(GetCentralsnatmapNatIppool6ArrayOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapNatIppoolOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapNatIppoolArrayOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapOrigAddr6Output{})
	pulumi.RegisterOutputType(GetCentralsnatmapOrigAddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapOrigAddrOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapOrigAddrArrayOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapSrcintfOutput{})
	pulumi.RegisterOutputType(GetCentralsnatmapSrcintfArrayOutput{})
	pulumi.RegisterOutputType(GetDoSpolicy6AnomalyOutput{})
	pulumi.RegisterOutputType(GetDoSpolicy6AnomalyArrayOutput{})
	pulumi.RegisterOutputType(GetDoSpolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(GetDoSpolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetDoSpolicy6ServiceOutput{})
	pulumi.RegisterOutputType(GetDoSpolicy6ServiceArrayOutput{})
	pulumi.RegisterOutputType(GetDoSpolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(GetDoSpolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetDoSpolicyAnomalyOutput{})
	pulumi.RegisterOutputType(GetDoSpolicyAnomalyArrayOutput{})
	pulumi.RegisterOutputType(GetDoSpolicyDstaddrOutput{})
	pulumi.RegisterOutputType(GetDoSpolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetDoSpolicyServiceOutput{})
	pulumi.RegisterOutputType(GetDoSpolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(GetDoSpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(GetDoSpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetInternetservicecustomEntryOutput{})
	pulumi.RegisterOutputType(GetInternetservicecustomEntryArrayOutput{})
	pulumi.RegisterOutputType(GetInternetservicecustomEntryDst6Output{})
	pulumi.RegisterOutputType(GetInternetservicecustomEntryDst6ArrayOutput{})
	pulumi.RegisterOutputType(GetInternetservicecustomEntryDstOutput{})
	pulumi.RegisterOutputType(GetInternetservicecustomEntryDstArrayOutput{})
	pulumi.RegisterOutputType(GetInternetservicecustomEntryPortRangeOutput{})
	pulumi.RegisterOutputType(GetInternetservicecustomEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetInternetservicecustomgroupMemberOutput{})
	pulumi.RegisterOutputType(GetInternetservicecustomgroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GetInternetservicedefinitionEntryOutput{})
	pulumi.RegisterOutputType(GetInternetservicedefinitionEntryArrayOutput{})
	pulumi.RegisterOutputType(GetInternetservicedefinitionEntryPortRangeOutput{})
	pulumi.RegisterOutputType(GetInternetservicedefinitionEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionDisableEntryOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionDisableEntryArrayOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionDisableEntryIp6RangeOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionDisableEntryIp6RangeArrayOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionDisableEntryIpRangeOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionDisableEntryIpRangeArrayOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionDisableEntryPortRangeOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionDisableEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionEntryOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionEntryArrayOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionEntryDst6Output{})
	pulumi.RegisterOutputType(GetInternetserviceextensionEntryDst6ArrayOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionEntryDstOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionEntryDstArrayOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionEntryPortRangeOutput{})
	pulumi.RegisterOutputType(GetInternetserviceextensionEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetInternetservicegroupMemberOutput{})
	pulumi.RegisterOutputType(GetInternetservicegroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastaddress6TaggingOutput{})
	pulumi.RegisterOutputType(GetMulticastaddress6TaggingArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastaddress6TaggingTagOutput{})
	pulumi.RegisterOutputType(GetMulticastaddress6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastaddressTaggingOutput{})
	pulumi.RegisterOutputType(GetMulticastaddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastaddressTaggingTagOutput{})
	pulumi.RegisterOutputType(GetMulticastaddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy46DstaddrOutput{})
	pulumi.RegisterOutputType(GetPolicy46DstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy46PoolnameOutput{})
	pulumi.RegisterOutputType(GetPolicy46PoolnameArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy46ServiceOutput{})
	pulumi.RegisterOutputType(GetPolicy46ServiceArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy46SrcaddrOutput{})
	pulumi.RegisterOutputType(GetPolicy46SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy64DstaddrOutput{})
	pulumi.RegisterOutputType(GetPolicy64DstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy64PoolnameOutput{})
	pulumi.RegisterOutputType(GetPolicy64PoolnameArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy64ServiceOutput{})
	pulumi.RegisterOutputType(GetPolicy64ServiceArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy64SrcaddrOutput{})
	pulumi.RegisterOutputType(GetPolicy64SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6AppCategoryOutput{})
	pulumi.RegisterOutputType(GetPolicy6AppCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6AppGroupOutput{})
	pulumi.RegisterOutputType(GetPolicy6AppGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6ApplicationOutput{})
	pulumi.RegisterOutputType(GetPolicy6ApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6CustomLogFieldOutput{})
	pulumi.RegisterOutputType(GetPolicy6CustomLogFieldArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6DeviceOutput{})
	pulumi.RegisterOutputType(GetPolicy6DeviceArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(GetPolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6DstintfOutput{})
	pulumi.RegisterOutputType(GetPolicy6DstintfArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6FssoGroupOutput{})
	pulumi.RegisterOutputType(GetPolicy6FssoGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6GroupOutput{})
	pulumi.RegisterOutputType(GetPolicy6GroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6PoolnameOutput{})
	pulumi.RegisterOutputType(GetPolicy6PoolnameArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6ServiceOutput{})
	pulumi.RegisterOutputType(GetPolicy6ServiceArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(GetPolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6SrcintfOutput{})
	pulumi.RegisterOutputType(GetPolicy6SrcintfArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6SslMirrorIntfOutput{})
	pulumi.RegisterOutputType(GetPolicy6SslMirrorIntfArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6UrlCategoryOutput{})
	pulumi.RegisterOutputType(GetPolicy6UrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetPolicy6UserOutput{})
	pulumi.RegisterOutputType(GetPolicy6UserArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(GetPolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyAppGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyApplicationOutput{})
	pulumi.RegisterOutputType(GetPolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyCustomLogFieldOutput{})
	pulumi.RegisterOutputType(GetPolicyCustomLogFieldArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDeviceOutput{})
	pulumi.RegisterOutputType(GetPolicyDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDstaddr6Output{})
	pulumi.RegisterOutputType(GetPolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDstaddrOutput{})
	pulumi.RegisterOutputType(GetPolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDstintfOutput{})
	pulumi.RegisterOutputType(GetPolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyFssoGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6CustomOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6CustomArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6CustomGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6CustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6GroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6GroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6NameOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6NameArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6SrcCustomOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6SrcCustomArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6SrcCustomGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6SrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6SrcGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6SrcGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6SrcNameOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetService6SrcNameArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyNetworkServiceDynamicOutput{})
	pulumi.RegisterOutputType(GetPolicyNetworkServiceDynamicArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyNetworkServiceSrcDynamicOutput{})
	pulumi.RegisterOutputType(GetPolicyNetworkServiceSrcDynamicArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyNtlmEnabledBrowserOutput{})
	pulumi.RegisterOutputType(GetPolicyNtlmEnabledBrowserArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyPcpPoolnameOutput{})
	pulumi.RegisterOutputType(GetPolicyPcpPoolnameArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyPoolname6Output{})
	pulumi.RegisterOutputType(GetPolicyPoolname6ArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyPoolnameOutput{})
	pulumi.RegisterOutputType(GetPolicyPoolnameArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyRtpAddrOutput{})
	pulumi.RegisterOutputType(GetPolicyRtpAddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyServiceOutput{})
	pulumi.RegisterOutputType(GetPolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySgtOutput{})
	pulumi.RegisterOutputType(GetPolicySgtArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySrcVendorMacOutput{})
	pulumi.RegisterOutputType(GetPolicySrcVendorMacArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySrcaddr6Output{})
	pulumi.RegisterOutputType(GetPolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySrcaddrOutput{})
	pulumi.RegisterOutputType(GetPolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySrcintfOutput{})
	pulumi.RegisterOutputType(GetPolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySslMirrorIntfOutput{})
	pulumi.RegisterOutputType(GetPolicySslMirrorIntfArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(GetPolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyUserOutput{})
	pulumi.RegisterOutputType(GetPolicyUserArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyZtnaEmsTagOutput{})
	pulumi.RegisterOutputType(GetPolicyZtnaEmsTagArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyZtnaEmsTagSecondaryOutput{})
	pulumi.RegisterOutputType(GetPolicyZtnaEmsTagSecondaryArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyZtnaGeoTagOutput{})
	pulumi.RegisterOutputType(GetPolicyZtnaGeoTagArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsCifOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsCifArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsCifServerKeytabOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsCifServerKeytabArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsDnOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsDnArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsFtpOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsFtpArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsHttpOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsHttpArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsImapOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsImapArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsMailSignatureOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsMailSignatureArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsMapiOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsMapiArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsNntpOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsNntpArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsPop3Output{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsPop3ArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsSmtpOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsSmtpArrayOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsSshOutput{})
	pulumi.RegisterOutputType(GetProfileprotocoloptionsSshArrayOutput{})
	pulumi.RegisterOutputType(GetProxyaddressApplicationOutput{})
	pulumi.RegisterOutputType(GetProxyaddressApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetProxyaddressCategoryOutput{})
	pulumi.RegisterOutputType(GetProxyaddressCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetProxyaddressHeaderGroupOutput{})
	pulumi.RegisterOutputType(GetProxyaddressHeaderGroupArrayOutput{})
	pulumi.RegisterOutputType(GetProxyaddressTaggingOutput{})
	pulumi.RegisterOutputType(GetProxyaddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetProxyaddressTaggingTagOutput{})
	pulumi.RegisterOutputType(GetProxyaddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetProxyaddrgrpMemberOutput{})
	pulumi.RegisterOutputType(GetProxyaddrgrpMemberArrayOutput{})
	pulumi.RegisterOutputType(GetProxyaddrgrpTaggingOutput{})
	pulumi.RegisterOutputType(GetProxyaddrgrpTaggingArrayOutput{})
	pulumi.RegisterOutputType(GetProxyaddrgrpTaggingTagOutput{})
	pulumi.RegisterOutputType(GetProxyaddrgrpTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyAccessProxy6Output{})
	pulumi.RegisterOutputType(GetProxypolicyAccessProxy6ArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyAccessProxyOutput{})
	pulumi.RegisterOutputType(GetProxypolicyAccessProxyArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyDstaddr6Output{})
	pulumi.RegisterOutputType(GetProxypolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyDstaddrOutput{})
	pulumi.RegisterOutputType(GetProxypolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyDstintfOutput{})
	pulumi.RegisterOutputType(GetProxypolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyGroupOutput{})
	pulumi.RegisterOutputType(GetProxypolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetService6CustomOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetService6CustomArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetService6CustomGroupOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetService6CustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetService6GroupOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetService6GroupArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetService6NameOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetService6NameArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(GetProxypolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyPoolnameOutput{})
	pulumi.RegisterOutputType(GetProxypolicyPoolnameArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyServiceOutput{})
	pulumi.RegisterOutputType(GetProxypolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicySrcaddr6Output{})
	pulumi.RegisterOutputType(GetProxypolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicySrcaddrOutput{})
	pulumi.RegisterOutputType(GetProxypolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicySrcintfOutput{})
	pulumi.RegisterOutputType(GetProxypolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyUserOutput{})
	pulumi.RegisterOutputType(GetProxypolicyUserArrayOutput{})
	pulumi.RegisterOutputType(GetProxypolicyZtnaEmsTagOutput{})
	pulumi.RegisterOutputType(GetProxypolicyZtnaEmsTagArrayOutput{})
}
