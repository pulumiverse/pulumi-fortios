// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure firewall authentication portals.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firewall.NewAuthportal(ctx, "trname", &firewall.AuthportalArgs{
//				Groups: firewall.AuthportalGroupArray{
//					&firewall.AuthportalGroupArgs{
//						Name: pulumi.String("Guest-group"),
//					},
//				},
//				PortalAddr: pulumi.String("1.1.1.1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Firewall AuthPortal can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/authportal:Authportal labelname FirewallAuthPortal
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/authportal:Authportal labelname FirewallAuthPortal
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Authportal struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
	Groups AuthportalGroupArrayOutput `pulumi:"groups"`
	// Name of the identity-based route that applies to this portal.
	IdentityBasedRoute pulumi.StringOutput `pulumi:"identityBasedRoute"`
	// Address (or FQDN) of the authentication portal.
	PortalAddr pulumi.StringOutput `pulumi:"portalAddr"`
	// IPv6 address (or FQDN) of authentication portal.
	PortalAddr6 pulumi.StringOutput `pulumi:"portalAddr6"`
	// Enable/disable authentication by proxy daemon (default = disable). Valid values: `enable`, `disable`.
	ProxyAuth pulumi.StringOutput `pulumi:"proxyAuth"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAuthportal registers a new resource with the given unique name, arguments, and options.
func NewAuthportal(ctx *pulumi.Context,
	name string, args *AuthportalArgs, opts ...pulumi.ResourceOption) (*Authportal, error) {
	if args == nil {
		args = &AuthportalArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Authportal
	err := ctx.RegisterResource("fortios:firewall/authportal:Authportal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthportal gets an existing Authportal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthportal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthportalState, opts ...pulumi.ResourceOption) (*Authportal, error) {
	var resource Authportal
	err := ctx.ReadResource("fortios:firewall/authportal:Authportal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Authportal resources.
type authportalState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
	Groups []AuthportalGroup `pulumi:"groups"`
	// Name of the identity-based route that applies to this portal.
	IdentityBasedRoute *string `pulumi:"identityBasedRoute"`
	// Address (or FQDN) of the authentication portal.
	PortalAddr *string `pulumi:"portalAddr"`
	// IPv6 address (or FQDN) of authentication portal.
	PortalAddr6 *string `pulumi:"portalAddr6"`
	// Enable/disable authentication by proxy daemon (default = disable). Valid values: `enable`, `disable`.
	ProxyAuth *string `pulumi:"proxyAuth"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AuthportalState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
	Groups AuthportalGroupArrayInput
	// Name of the identity-based route that applies to this portal.
	IdentityBasedRoute pulumi.StringPtrInput
	// Address (or FQDN) of the authentication portal.
	PortalAddr pulumi.StringPtrInput
	// IPv6 address (or FQDN) of authentication portal.
	PortalAddr6 pulumi.StringPtrInput
	// Enable/disable authentication by proxy daemon (default = disable). Valid values: `enable`, `disable`.
	ProxyAuth pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AuthportalState) ElementType() reflect.Type {
	return reflect.TypeOf((*authportalState)(nil)).Elem()
}

type authportalArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
	Groups []AuthportalGroup `pulumi:"groups"`
	// Name of the identity-based route that applies to this portal.
	IdentityBasedRoute *string `pulumi:"identityBasedRoute"`
	// Address (or FQDN) of the authentication portal.
	PortalAddr *string `pulumi:"portalAddr"`
	// IPv6 address (or FQDN) of authentication portal.
	PortalAddr6 *string `pulumi:"portalAddr6"`
	// Enable/disable authentication by proxy daemon (default = disable). Valid values: `enable`, `disable`.
	ProxyAuth *string `pulumi:"proxyAuth"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Authportal resource.
type AuthportalArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
	Groups AuthportalGroupArrayInput
	// Name of the identity-based route that applies to this portal.
	IdentityBasedRoute pulumi.StringPtrInput
	// Address (or FQDN) of the authentication portal.
	PortalAddr pulumi.StringPtrInput
	// IPv6 address (or FQDN) of authentication portal.
	PortalAddr6 pulumi.StringPtrInput
	// Enable/disable authentication by proxy daemon (default = disable). Valid values: `enable`, `disable`.
	ProxyAuth pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AuthportalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authportalArgs)(nil)).Elem()
}

type AuthportalInput interface {
	pulumi.Input

	ToAuthportalOutput() AuthportalOutput
	ToAuthportalOutputWithContext(ctx context.Context) AuthportalOutput
}

func (*Authportal) ElementType() reflect.Type {
	return reflect.TypeOf((**Authportal)(nil)).Elem()
}

func (i *Authportal) ToAuthportalOutput() AuthportalOutput {
	return i.ToAuthportalOutputWithContext(context.Background())
}

func (i *Authportal) ToAuthportalOutputWithContext(ctx context.Context) AuthportalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthportalOutput)
}

// AuthportalArrayInput is an input type that accepts AuthportalArray and AuthportalArrayOutput values.
// You can construct a concrete instance of `AuthportalArrayInput` via:
//
//	AuthportalArray{ AuthportalArgs{...} }
type AuthportalArrayInput interface {
	pulumi.Input

	ToAuthportalArrayOutput() AuthportalArrayOutput
	ToAuthportalArrayOutputWithContext(context.Context) AuthportalArrayOutput
}

type AuthportalArray []AuthportalInput

func (AuthportalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Authportal)(nil)).Elem()
}

func (i AuthportalArray) ToAuthportalArrayOutput() AuthportalArrayOutput {
	return i.ToAuthportalArrayOutputWithContext(context.Background())
}

func (i AuthportalArray) ToAuthportalArrayOutputWithContext(ctx context.Context) AuthportalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthportalArrayOutput)
}

// AuthportalMapInput is an input type that accepts AuthportalMap and AuthportalMapOutput values.
// You can construct a concrete instance of `AuthportalMapInput` via:
//
//	AuthportalMap{ "key": AuthportalArgs{...} }
type AuthportalMapInput interface {
	pulumi.Input

	ToAuthportalMapOutput() AuthportalMapOutput
	ToAuthportalMapOutputWithContext(context.Context) AuthportalMapOutput
}

type AuthportalMap map[string]AuthportalInput

func (AuthportalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Authportal)(nil)).Elem()
}

func (i AuthportalMap) ToAuthportalMapOutput() AuthportalMapOutput {
	return i.ToAuthportalMapOutputWithContext(context.Background())
}

func (i AuthportalMap) ToAuthportalMapOutputWithContext(ctx context.Context) AuthportalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthportalMapOutput)
}

type AuthportalOutput struct{ *pulumi.OutputState }

func (AuthportalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authportal)(nil)).Elem()
}

func (o AuthportalOutput) ToAuthportalOutput() AuthportalOutput {
	return o
}

func (o AuthportalOutput) ToAuthportalOutputWithContext(ctx context.Context) AuthportalOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o AuthportalOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authportal) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o AuthportalOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authportal) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
func (o AuthportalOutput) Groups() AuthportalGroupArrayOutput {
	return o.ApplyT(func(v *Authportal) AuthportalGroupArrayOutput { return v.Groups }).(AuthportalGroupArrayOutput)
}

// Name of the identity-based route that applies to this portal.
func (o AuthportalOutput) IdentityBasedRoute() pulumi.StringOutput {
	return o.ApplyT(func(v *Authportal) pulumi.StringOutput { return v.IdentityBasedRoute }).(pulumi.StringOutput)
}

// Address (or FQDN) of the authentication portal.
func (o AuthportalOutput) PortalAddr() pulumi.StringOutput {
	return o.ApplyT(func(v *Authportal) pulumi.StringOutput { return v.PortalAddr }).(pulumi.StringOutput)
}

// IPv6 address (or FQDN) of authentication portal.
func (o AuthportalOutput) PortalAddr6() pulumi.StringOutput {
	return o.ApplyT(func(v *Authportal) pulumi.StringOutput { return v.PortalAddr6 }).(pulumi.StringOutput)
}

// Enable/disable authentication by proxy daemon (default = disable). Valid values: `enable`, `disable`.
func (o AuthportalOutput) ProxyAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *Authportal) pulumi.StringOutput { return v.ProxyAuth }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o AuthportalOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authportal) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type AuthportalArrayOutput struct{ *pulumi.OutputState }

func (AuthportalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Authportal)(nil)).Elem()
}

func (o AuthportalArrayOutput) ToAuthportalArrayOutput() AuthportalArrayOutput {
	return o
}

func (o AuthportalArrayOutput) ToAuthportalArrayOutputWithContext(ctx context.Context) AuthportalArrayOutput {
	return o
}

func (o AuthportalArrayOutput) Index(i pulumi.IntInput) AuthportalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Authportal {
		return vs[0].([]*Authportal)[vs[1].(int)]
	}).(AuthportalOutput)
}

type AuthportalMapOutput struct{ *pulumi.OutputState }

func (AuthportalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Authportal)(nil)).Elem()
}

func (o AuthportalMapOutput) ToAuthportalMapOutput() AuthportalMapOutput {
	return o
}

func (o AuthportalMapOutput) ToAuthportalMapOutputWithContext(ctx context.Context) AuthportalMapOutput {
	return o
}

func (o AuthportalMapOutput) MapIndex(k pulumi.StringInput) AuthportalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Authportal {
		return vs[0].(map[string]*Authportal)[vs[1].(string)]
	}).(AuthportalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthportalInput)(nil)).Elem(), &Authportal{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthportalArrayInput)(nil)).Elem(), AuthportalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthportalMapInput)(nil)).Elem(), AuthportalMap{})
	pulumi.RegisterOutputType(AuthportalOutput{})
	pulumi.RegisterOutputType(AuthportalArrayOutput{})
	pulumi.RegisterOutputType(AuthportalMapOutput{})
}
