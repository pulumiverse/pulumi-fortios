// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure IPv6 IP pools.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firewall.NewIppool6(ctx, "trname", &firewall.Ippool6Args{
//				Endip:   pulumi.String("2001:3ca1:10f:1a:121b::19"),
//				Startip: pulumi.String("2001:3ca1:10f:1a:121b::10"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Firewall Ippool6 can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/ippool6:Ippool6 labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/ippool6:Ippool6 labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Ippool6 struct {
	pulumi.CustomResourceState

	// Enable/disable adding NAT46 route. Valid values: `disable`, `enable`.
	AddNat46Route pulumi.StringOutput `pulumi:"addNat46Route"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Final IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
	Endip pulumi.StringOutput `pulumi:"endip"`
	// IPv6 IP pool name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable NAT46. Valid values: `disable`, `enable`.
	Nat46 pulumi.StringOutput `pulumi:"nat46"`
	// First IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
	Startip pulumi.StringOutput `pulumi:"startip"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewIppool6 registers a new resource with the given unique name, arguments, and options.
func NewIppool6(ctx *pulumi.Context,
	name string, args *Ippool6Args, opts ...pulumi.ResourceOption) (*Ippool6, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endip == nil {
		return nil, errors.New("invalid value for required argument 'Endip'")
	}
	if args.Startip == nil {
		return nil, errors.New("invalid value for required argument 'Startip'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ippool6
	err := ctx.RegisterResource("fortios:firewall/ippool6:Ippool6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIppool6 gets an existing Ippool6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIppool6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ippool6State, opts ...pulumi.ResourceOption) (*Ippool6, error) {
	var resource Ippool6
	err := ctx.ReadResource("fortios:firewall/ippool6:Ippool6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ippool6 resources.
type ippool6State struct {
	// Enable/disable adding NAT46 route. Valid values: `disable`, `enable`.
	AddNat46Route *string `pulumi:"addNat46Route"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Final IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
	Endip *string `pulumi:"endip"`
	// IPv6 IP pool name.
	Name *string `pulumi:"name"`
	// Enable/disable NAT46. Valid values: `disable`, `enable`.
	Nat46 *string `pulumi:"nat46"`
	// First IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
	Startip *string `pulumi:"startip"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Ippool6State struct {
	// Enable/disable adding NAT46 route. Valid values: `disable`, `enable`.
	AddNat46Route pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Final IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
	Endip pulumi.StringPtrInput
	// IPv6 IP pool name.
	Name pulumi.StringPtrInput
	// Enable/disable NAT46. Valid values: `disable`, `enable`.
	Nat46 pulumi.StringPtrInput
	// First IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
	Startip pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Ippool6State) ElementType() reflect.Type {
	return reflect.TypeOf((*ippool6State)(nil)).Elem()
}

type ippool6Args struct {
	// Enable/disable adding NAT46 route. Valid values: `disable`, `enable`.
	AddNat46Route *string `pulumi:"addNat46Route"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Final IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
	Endip string `pulumi:"endip"`
	// IPv6 IP pool name.
	Name *string `pulumi:"name"`
	// Enable/disable NAT46. Valid values: `disable`, `enable`.
	Nat46 *string `pulumi:"nat46"`
	// First IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
	Startip string `pulumi:"startip"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Ippool6 resource.
type Ippool6Args struct {
	// Enable/disable adding NAT46 route. Valid values: `disable`, `enable`.
	AddNat46Route pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Final IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
	Endip pulumi.StringInput
	// IPv6 IP pool name.
	Name pulumi.StringPtrInput
	// Enable/disable NAT46. Valid values: `disable`, `enable`.
	Nat46 pulumi.StringPtrInput
	// First IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
	Startip pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Ippool6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ippool6Args)(nil)).Elem()
}

type Ippool6Input interface {
	pulumi.Input

	ToIppool6Output() Ippool6Output
	ToIppool6OutputWithContext(ctx context.Context) Ippool6Output
}

func (*Ippool6) ElementType() reflect.Type {
	return reflect.TypeOf((**Ippool6)(nil)).Elem()
}

func (i *Ippool6) ToIppool6Output() Ippool6Output {
	return i.ToIppool6OutputWithContext(context.Background())
}

func (i *Ippool6) ToIppool6OutputWithContext(ctx context.Context) Ippool6Output {
	return pulumi.ToOutputWithContext(ctx, i).(Ippool6Output)
}

// Ippool6ArrayInput is an input type that accepts Ippool6Array and Ippool6ArrayOutput values.
// You can construct a concrete instance of `Ippool6ArrayInput` via:
//
//	Ippool6Array{ Ippool6Args{...} }
type Ippool6ArrayInput interface {
	pulumi.Input

	ToIppool6ArrayOutput() Ippool6ArrayOutput
	ToIppool6ArrayOutputWithContext(context.Context) Ippool6ArrayOutput
}

type Ippool6Array []Ippool6Input

func (Ippool6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ippool6)(nil)).Elem()
}

func (i Ippool6Array) ToIppool6ArrayOutput() Ippool6ArrayOutput {
	return i.ToIppool6ArrayOutputWithContext(context.Background())
}

func (i Ippool6Array) ToIppool6ArrayOutputWithContext(ctx context.Context) Ippool6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ippool6ArrayOutput)
}

// Ippool6MapInput is an input type that accepts Ippool6Map and Ippool6MapOutput values.
// You can construct a concrete instance of `Ippool6MapInput` via:
//
//	Ippool6Map{ "key": Ippool6Args{...} }
type Ippool6MapInput interface {
	pulumi.Input

	ToIppool6MapOutput() Ippool6MapOutput
	ToIppool6MapOutputWithContext(context.Context) Ippool6MapOutput
}

type Ippool6Map map[string]Ippool6Input

func (Ippool6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ippool6)(nil)).Elem()
}

func (i Ippool6Map) ToIppool6MapOutput() Ippool6MapOutput {
	return i.ToIppool6MapOutputWithContext(context.Background())
}

func (i Ippool6Map) ToIppool6MapOutputWithContext(ctx context.Context) Ippool6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ippool6MapOutput)
}

type Ippool6Output struct{ *pulumi.OutputState }

func (Ippool6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**Ippool6)(nil)).Elem()
}

func (o Ippool6Output) ToIppool6Output() Ippool6Output {
	return o
}

func (o Ippool6Output) ToIppool6OutputWithContext(ctx context.Context) Ippool6Output {
	return o
}

// Enable/disable adding NAT46 route. Valid values: `disable`, `enable`.
func (o Ippool6Output) AddNat46Route() pulumi.StringOutput {
	return o.ApplyT(func(v *Ippool6) pulumi.StringOutput { return v.AddNat46Route }).(pulumi.StringOutput)
}

// Comment.
func (o Ippool6Output) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ippool6) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// Final IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
func (o Ippool6Output) Endip() pulumi.StringOutput {
	return o.ApplyT(func(v *Ippool6) pulumi.StringOutput { return v.Endip }).(pulumi.StringOutput)
}

// IPv6 IP pool name.
func (o Ippool6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Ippool6) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable NAT46. Valid values: `disable`, `enable`.
func (o Ippool6Output) Nat46() pulumi.StringOutput {
	return o.ApplyT(func(v *Ippool6) pulumi.StringOutput { return v.Nat46 }).(pulumi.StringOutput)
}

// First IPv6 address (inclusive) in the range for the address pool (format xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, Default: ::).
func (o Ippool6Output) Startip() pulumi.StringOutput {
	return o.ApplyT(func(v *Ippool6) pulumi.StringOutput { return v.Startip }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Ippool6Output) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Ippool6) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type Ippool6ArrayOutput struct{ *pulumi.OutputState }

func (Ippool6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ippool6)(nil)).Elem()
}

func (o Ippool6ArrayOutput) ToIppool6ArrayOutput() Ippool6ArrayOutput {
	return o
}

func (o Ippool6ArrayOutput) ToIppool6ArrayOutputWithContext(ctx context.Context) Ippool6ArrayOutput {
	return o
}

func (o Ippool6ArrayOutput) Index(i pulumi.IntInput) Ippool6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ippool6 {
		return vs[0].([]*Ippool6)[vs[1].(int)]
	}).(Ippool6Output)
}

type Ippool6MapOutput struct{ *pulumi.OutputState }

func (Ippool6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ippool6)(nil)).Elem()
}

func (o Ippool6MapOutput) ToIppool6MapOutput() Ippool6MapOutput {
	return o
}

func (o Ippool6MapOutput) ToIppool6MapOutputWithContext(ctx context.Context) Ippool6MapOutput {
	return o
}

func (o Ippool6MapOutput) MapIndex(k pulumi.StringInput) Ippool6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ippool6 {
		return vs[0].(map[string]*Ippool6)[vs[1].(string)]
	}).(Ippool6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ippool6Input)(nil)).Elem(), &Ippool6{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ippool6ArrayInput)(nil)).Elem(), Ippool6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ippool6MapInput)(nil)).Elem(), Ippool6Map{})
	pulumi.RegisterOutputType(Ippool6Output{})
	pulumi.RegisterOutputType(Ippool6ArrayOutput{})
	pulumi.RegisterOutputType(Ippool6MapOutput{})
}
