// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure user defined IPv4 local-in policies.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firewall.NewLocalinpolicy(ctx, "trname", &firewall.LocalinpolicyArgs{
//				Action: pulumi.String("accept"),
//				Dstaddrs: firewall.LocalinpolicyDstaddrArray{
//					&firewall.LocalinpolicyDstaddrArgs{
//						Name: pulumi.String("all"),
//					},
//				},
//				HaMgmtIntfOnly: pulumi.String("disable"),
//				Intf:           pulumi.String("port4"),
//				Policyid:       pulumi.Int(1),
//				Schedule:       pulumi.String("always"),
//				Services: firewall.LocalinpolicyServiceArray{
//					&firewall.LocalinpolicyServiceArgs{
//						Name: pulumi.String("ALL"),
//					},
//				},
//				Srcaddrs: firewall.LocalinpolicySrcaddrArray{
//					&firewall.LocalinpolicySrcaddrArgs{
//						Name: pulumi.String("all"),
//					},
//				},
//				Status: pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Firewall LocalInPolicy can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/localinpolicy:Localinpolicy labelname {{policyid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/localinpolicy:Localinpolicy labelname {{policyid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Localinpolicy struct {
	pulumi.CustomResourceState

	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action pulumi.StringOutput `pulumi:"action"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringOutput `pulumi:"dstaddrNegate"`
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs LocalinpolicyDstaddrArrayOutput `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Enable/disable dedicating the HA management interface only for local-in policy. Valid values: `enable`, `disable`.
	HaMgmtIntfOnly pulumi.StringOutput `pulumi:"haMgmtIntfOnly"`
	// Incoming interface name from available options.
	Intf pulumi.StringOutput `pulumi:"intf"`
	// User defined local in policy ID.
	Policyid pulumi.IntOutput `pulumi:"policyid"`
	// Schedule object from available options.
	Schedule pulumi.StringOutput `pulumi:"schedule"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringOutput `pulumi:"serviceNegate"`
	// Service object from available options. The structure of `service` block is documented below.
	Services LocalinpolicyServiceArrayOutput `pulumi:"services"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringOutput `pulumi:"srcaddrNegate"`
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs LocalinpolicySrcaddrArrayOutput `pulumi:"srcaddrs"`
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable virtual patching. Valid values: `enable`, `disable`.
	VirtualPatch pulumi.StringOutput `pulumi:"virtualPatch"`
}

// NewLocalinpolicy registers a new resource with the given unique name, arguments, and options.
func NewLocalinpolicy(ctx *pulumi.Context,
	name string, args *LocalinpolicyArgs, opts ...pulumi.ResourceOption) (*Localinpolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dstaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Dstaddrs'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	if args.Srcaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Srcaddrs'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Localinpolicy
	err := ctx.RegisterResource("fortios:firewall/localinpolicy:Localinpolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalinpolicy gets an existing Localinpolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalinpolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalinpolicyState, opts ...pulumi.ResourceOption) (*Localinpolicy, error) {
	var resource Localinpolicy
	err := ctx.ReadResource("fortios:firewall/localinpolicy:Localinpolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Localinpolicy resources.
type localinpolicyState struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action *string `pulumi:"action"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate *string `pulumi:"dstaddrNegate"`
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs []LocalinpolicyDstaddr `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable dedicating the HA management interface only for local-in policy. Valid values: `enable`, `disable`.
	HaMgmtIntfOnly *string `pulumi:"haMgmtIntfOnly"`
	// Incoming interface name from available options.
	Intf *string `pulumi:"intf"`
	// User defined local in policy ID.
	Policyid *int `pulumi:"policyid"`
	// Schedule object from available options.
	Schedule *string `pulumi:"schedule"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate *string `pulumi:"serviceNegate"`
	// Service object from available options. The structure of `service` block is documented below.
	Services []LocalinpolicyService `pulumi:"services"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate *string `pulumi:"srcaddrNegate"`
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs []LocalinpolicySrcaddr `pulumi:"srcaddrs"`
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable virtual patching. Valid values: `enable`, `disable`.
	VirtualPatch *string `pulumi:"virtualPatch"`
}

type LocalinpolicyState struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringPtrInput
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs LocalinpolicyDstaddrArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable dedicating the HA management interface only for local-in policy. Valid values: `enable`, `disable`.
	HaMgmtIntfOnly pulumi.StringPtrInput
	// Incoming interface name from available options.
	Intf pulumi.StringPtrInput
	// User defined local in policy ID.
	Policyid pulumi.IntPtrInput
	// Schedule object from available options.
	Schedule pulumi.StringPtrInput
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringPtrInput
	// Service object from available options. The structure of `service` block is documented below.
	Services LocalinpolicyServiceArrayInput
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringPtrInput
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs LocalinpolicySrcaddrArrayInput
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable virtual patching. Valid values: `enable`, `disable`.
	VirtualPatch pulumi.StringPtrInput
}

func (LocalinpolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*localinpolicyState)(nil)).Elem()
}

type localinpolicyArgs struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action *string `pulumi:"action"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate *string `pulumi:"dstaddrNegate"`
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs []LocalinpolicyDstaddr `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable dedicating the HA management interface only for local-in policy. Valid values: `enable`, `disable`.
	HaMgmtIntfOnly *string `pulumi:"haMgmtIntfOnly"`
	// Incoming interface name from available options.
	Intf *string `pulumi:"intf"`
	// User defined local in policy ID.
	Policyid *int `pulumi:"policyid"`
	// Schedule object from available options.
	Schedule string `pulumi:"schedule"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate *string `pulumi:"serviceNegate"`
	// Service object from available options. The structure of `service` block is documented below.
	Services []LocalinpolicyService `pulumi:"services"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate *string `pulumi:"srcaddrNegate"`
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs []LocalinpolicySrcaddr `pulumi:"srcaddrs"`
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable virtual patching. Valid values: `enable`, `disable`.
	VirtualPatch *string `pulumi:"virtualPatch"`
}

// The set of arguments for constructing a Localinpolicy resource.
type LocalinpolicyArgs struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringPtrInput
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs LocalinpolicyDstaddrArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable dedicating the HA management interface only for local-in policy. Valid values: `enable`, `disable`.
	HaMgmtIntfOnly pulumi.StringPtrInput
	// Incoming interface name from available options.
	Intf pulumi.StringPtrInput
	// User defined local in policy ID.
	Policyid pulumi.IntPtrInput
	// Schedule object from available options.
	Schedule pulumi.StringInput
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringPtrInput
	// Service object from available options. The structure of `service` block is documented below.
	Services LocalinpolicyServiceArrayInput
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringPtrInput
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs LocalinpolicySrcaddrArrayInput
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable virtual patching. Valid values: `enable`, `disable`.
	VirtualPatch pulumi.StringPtrInput
}

func (LocalinpolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localinpolicyArgs)(nil)).Elem()
}

type LocalinpolicyInput interface {
	pulumi.Input

	ToLocalinpolicyOutput() LocalinpolicyOutput
	ToLocalinpolicyOutputWithContext(ctx context.Context) LocalinpolicyOutput
}

func (*Localinpolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**Localinpolicy)(nil)).Elem()
}

func (i *Localinpolicy) ToLocalinpolicyOutput() LocalinpolicyOutput {
	return i.ToLocalinpolicyOutputWithContext(context.Background())
}

func (i *Localinpolicy) ToLocalinpolicyOutputWithContext(ctx context.Context) LocalinpolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalinpolicyOutput)
}

// LocalinpolicyArrayInput is an input type that accepts LocalinpolicyArray and LocalinpolicyArrayOutput values.
// You can construct a concrete instance of `LocalinpolicyArrayInput` via:
//
//	LocalinpolicyArray{ LocalinpolicyArgs{...} }
type LocalinpolicyArrayInput interface {
	pulumi.Input

	ToLocalinpolicyArrayOutput() LocalinpolicyArrayOutput
	ToLocalinpolicyArrayOutputWithContext(context.Context) LocalinpolicyArrayOutput
}

type LocalinpolicyArray []LocalinpolicyInput

func (LocalinpolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Localinpolicy)(nil)).Elem()
}

func (i LocalinpolicyArray) ToLocalinpolicyArrayOutput() LocalinpolicyArrayOutput {
	return i.ToLocalinpolicyArrayOutputWithContext(context.Background())
}

func (i LocalinpolicyArray) ToLocalinpolicyArrayOutputWithContext(ctx context.Context) LocalinpolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalinpolicyArrayOutput)
}

// LocalinpolicyMapInput is an input type that accepts LocalinpolicyMap and LocalinpolicyMapOutput values.
// You can construct a concrete instance of `LocalinpolicyMapInput` via:
//
//	LocalinpolicyMap{ "key": LocalinpolicyArgs{...} }
type LocalinpolicyMapInput interface {
	pulumi.Input

	ToLocalinpolicyMapOutput() LocalinpolicyMapOutput
	ToLocalinpolicyMapOutputWithContext(context.Context) LocalinpolicyMapOutput
}

type LocalinpolicyMap map[string]LocalinpolicyInput

func (LocalinpolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Localinpolicy)(nil)).Elem()
}

func (i LocalinpolicyMap) ToLocalinpolicyMapOutput() LocalinpolicyMapOutput {
	return i.ToLocalinpolicyMapOutputWithContext(context.Background())
}

func (i LocalinpolicyMap) ToLocalinpolicyMapOutputWithContext(ctx context.Context) LocalinpolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalinpolicyMapOutput)
}

type LocalinpolicyOutput struct{ *pulumi.OutputState }

func (LocalinpolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Localinpolicy)(nil)).Elem()
}

func (o LocalinpolicyOutput) ToLocalinpolicyOutput() LocalinpolicyOutput {
	return o
}

func (o LocalinpolicyOutput) ToLocalinpolicyOutputWithContext(ctx context.Context) LocalinpolicyOutput {
	return o
}

// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
func (o LocalinpolicyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Comment.
func (o LocalinpolicyOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
func (o LocalinpolicyOutput) DstaddrNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringOutput { return v.DstaddrNegate }).(pulumi.StringOutput)
}

// Destination address object from available options. The structure of `dstaddr` block is documented below.
func (o LocalinpolicyOutput) Dstaddrs() LocalinpolicyDstaddrArrayOutput {
	return o.ApplyT(func(v *Localinpolicy) LocalinpolicyDstaddrArrayOutput { return v.Dstaddrs }).(LocalinpolicyDstaddrArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o LocalinpolicyOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o LocalinpolicyOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Enable/disable dedicating the HA management interface only for local-in policy. Valid values: `enable`, `disable`.
func (o LocalinpolicyOutput) HaMgmtIntfOnly() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringOutput { return v.HaMgmtIntfOnly }).(pulumi.StringOutput)
}

// Incoming interface name from available options.
func (o LocalinpolicyOutput) Intf() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringOutput { return v.Intf }).(pulumi.StringOutput)
}

// User defined local in policy ID.
func (o LocalinpolicyOutput) Policyid() pulumi.IntOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.IntOutput { return v.Policyid }).(pulumi.IntOutput)
}

// Schedule object from available options.
func (o LocalinpolicyOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringOutput { return v.Schedule }).(pulumi.StringOutput)
}

// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
func (o LocalinpolicyOutput) ServiceNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringOutput { return v.ServiceNegate }).(pulumi.StringOutput)
}

// Service object from available options. The structure of `service` block is documented below.
func (o LocalinpolicyOutput) Services() LocalinpolicyServiceArrayOutput {
	return o.ApplyT(func(v *Localinpolicy) LocalinpolicyServiceArrayOutput { return v.Services }).(LocalinpolicyServiceArrayOutput)
}

// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
func (o LocalinpolicyOutput) SrcaddrNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringOutput { return v.SrcaddrNegate }).(pulumi.StringOutput)
}

// Source address object from available options. The structure of `srcaddr` block is documented below.
func (o LocalinpolicyOutput) Srcaddrs() LocalinpolicySrcaddrArrayOutput {
	return o.ApplyT(func(v *Localinpolicy) LocalinpolicySrcaddrArrayOutput { return v.Srcaddrs }).(LocalinpolicySrcaddrArrayOutput)
}

// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
func (o LocalinpolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
func (o LocalinpolicyOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o LocalinpolicyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable virtual patching. Valid values: `enable`, `disable`.
func (o LocalinpolicyOutput) VirtualPatch() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy) pulumi.StringOutput { return v.VirtualPatch }).(pulumi.StringOutput)
}

type LocalinpolicyArrayOutput struct{ *pulumi.OutputState }

func (LocalinpolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Localinpolicy)(nil)).Elem()
}

func (o LocalinpolicyArrayOutput) ToLocalinpolicyArrayOutput() LocalinpolicyArrayOutput {
	return o
}

func (o LocalinpolicyArrayOutput) ToLocalinpolicyArrayOutputWithContext(ctx context.Context) LocalinpolicyArrayOutput {
	return o
}

func (o LocalinpolicyArrayOutput) Index(i pulumi.IntInput) LocalinpolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Localinpolicy {
		return vs[0].([]*Localinpolicy)[vs[1].(int)]
	}).(LocalinpolicyOutput)
}

type LocalinpolicyMapOutput struct{ *pulumi.OutputState }

func (LocalinpolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Localinpolicy)(nil)).Elem()
}

func (o LocalinpolicyMapOutput) ToLocalinpolicyMapOutput() LocalinpolicyMapOutput {
	return o
}

func (o LocalinpolicyMapOutput) ToLocalinpolicyMapOutputWithContext(ctx context.Context) LocalinpolicyMapOutput {
	return o
}

func (o LocalinpolicyMapOutput) MapIndex(k pulumi.StringInput) LocalinpolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Localinpolicy {
		return vs[0].(map[string]*Localinpolicy)[vs[1].(string)]
	}).(LocalinpolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalinpolicyInput)(nil)).Elem(), &Localinpolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalinpolicyArrayInput)(nil)).Elem(), LocalinpolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalinpolicyMapInput)(nil)).Elem(), LocalinpolicyMap{})
	pulumi.RegisterOutputType(LocalinpolicyOutput{})
	pulumi.RegisterOutputType(LocalinpolicyArrayOutput{})
	pulumi.RegisterOutputType(LocalinpolicyMapOutput{})
}
