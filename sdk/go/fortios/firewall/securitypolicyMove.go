// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

type SecuritypolicyMove struct {
	pulumi.CustomResourceState

	Comment              pulumi.StringPtrOutput `pulumi:"comment"`
	Move                 pulumi.StringOutput    `pulumi:"move"`
	PolicyidDst          pulumi.IntOutput       `pulumi:"policyidDst"`
	PolicyidSrc          pulumi.IntOutput       `pulumi:"policyidSrc"`
	StatePolicySrcdstPos pulumi.StringPtrOutput `pulumi:"statePolicySrcdstPos"`
	Vdomparam            pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSecuritypolicyMove registers a new resource with the given unique name, arguments, and options.
func NewSecuritypolicyMove(ctx *pulumi.Context,
	name string, args *SecuritypolicyMoveArgs, opts ...pulumi.ResourceOption) (*SecuritypolicyMove, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Move == nil {
		return nil, errors.New("invalid value for required argument 'Move'")
	}
	if args.PolicyidDst == nil {
		return nil, errors.New("invalid value for required argument 'PolicyidDst'")
	}
	if args.PolicyidSrc == nil {
		return nil, errors.New("invalid value for required argument 'PolicyidSrc'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecuritypolicyMove
	err := ctx.RegisterResource("fortios:firewall/securitypolicyMove:SecuritypolicyMove", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecuritypolicyMove gets an existing SecuritypolicyMove resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecuritypolicyMove(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecuritypolicyMoveState, opts ...pulumi.ResourceOption) (*SecuritypolicyMove, error) {
	var resource SecuritypolicyMove
	err := ctx.ReadResource("fortios:firewall/securitypolicyMove:SecuritypolicyMove", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecuritypolicyMove resources.
type securitypolicyMoveState struct {
	Comment              *string `pulumi:"comment"`
	Move                 *string `pulumi:"move"`
	PolicyidDst          *int    `pulumi:"policyidDst"`
	PolicyidSrc          *int    `pulumi:"policyidSrc"`
	StatePolicySrcdstPos *string `pulumi:"statePolicySrcdstPos"`
	Vdomparam            *string `pulumi:"vdomparam"`
}

type SecuritypolicyMoveState struct {
	Comment              pulumi.StringPtrInput
	Move                 pulumi.StringPtrInput
	PolicyidDst          pulumi.IntPtrInput
	PolicyidSrc          pulumi.IntPtrInput
	StatePolicySrcdstPos pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (SecuritypolicyMoveState) ElementType() reflect.Type {
	return reflect.TypeOf((*securitypolicyMoveState)(nil)).Elem()
}

type securitypolicyMoveArgs struct {
	Comment              *string `pulumi:"comment"`
	Move                 string  `pulumi:"move"`
	PolicyidDst          int     `pulumi:"policyidDst"`
	PolicyidSrc          int     `pulumi:"policyidSrc"`
	StatePolicySrcdstPos *string `pulumi:"statePolicySrcdstPos"`
	Vdomparam            *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SecuritypolicyMove resource.
type SecuritypolicyMoveArgs struct {
	Comment              pulumi.StringPtrInput
	Move                 pulumi.StringInput
	PolicyidDst          pulumi.IntInput
	PolicyidSrc          pulumi.IntInput
	StatePolicySrcdstPos pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (SecuritypolicyMoveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securitypolicyMoveArgs)(nil)).Elem()
}

type SecuritypolicyMoveInput interface {
	pulumi.Input

	ToSecuritypolicyMoveOutput() SecuritypolicyMoveOutput
	ToSecuritypolicyMoveOutputWithContext(ctx context.Context) SecuritypolicyMoveOutput
}

func (*SecuritypolicyMove) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritypolicyMove)(nil)).Elem()
}

func (i *SecuritypolicyMove) ToSecuritypolicyMoveOutput() SecuritypolicyMoveOutput {
	return i.ToSecuritypolicyMoveOutputWithContext(context.Background())
}

func (i *SecuritypolicyMove) ToSecuritypolicyMoveOutputWithContext(ctx context.Context) SecuritypolicyMoveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyMoveOutput)
}

// SecuritypolicyMoveArrayInput is an input type that accepts SecuritypolicyMoveArray and SecuritypolicyMoveArrayOutput values.
// You can construct a concrete instance of `SecuritypolicyMoveArrayInput` via:
//
//	SecuritypolicyMoveArray{ SecuritypolicyMoveArgs{...} }
type SecuritypolicyMoveArrayInput interface {
	pulumi.Input

	ToSecuritypolicyMoveArrayOutput() SecuritypolicyMoveArrayOutput
	ToSecuritypolicyMoveArrayOutputWithContext(context.Context) SecuritypolicyMoveArrayOutput
}

type SecuritypolicyMoveArray []SecuritypolicyMoveInput

func (SecuritypolicyMoveArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecuritypolicyMove)(nil)).Elem()
}

func (i SecuritypolicyMoveArray) ToSecuritypolicyMoveArrayOutput() SecuritypolicyMoveArrayOutput {
	return i.ToSecuritypolicyMoveArrayOutputWithContext(context.Background())
}

func (i SecuritypolicyMoveArray) ToSecuritypolicyMoveArrayOutputWithContext(ctx context.Context) SecuritypolicyMoveArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyMoveArrayOutput)
}

// SecuritypolicyMoveMapInput is an input type that accepts SecuritypolicyMoveMap and SecuritypolicyMoveMapOutput values.
// You can construct a concrete instance of `SecuritypolicyMoveMapInput` via:
//
//	SecuritypolicyMoveMap{ "key": SecuritypolicyMoveArgs{...} }
type SecuritypolicyMoveMapInput interface {
	pulumi.Input

	ToSecuritypolicyMoveMapOutput() SecuritypolicyMoveMapOutput
	ToSecuritypolicyMoveMapOutputWithContext(context.Context) SecuritypolicyMoveMapOutput
}

type SecuritypolicyMoveMap map[string]SecuritypolicyMoveInput

func (SecuritypolicyMoveMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecuritypolicyMove)(nil)).Elem()
}

func (i SecuritypolicyMoveMap) ToSecuritypolicyMoveMapOutput() SecuritypolicyMoveMapOutput {
	return i.ToSecuritypolicyMoveMapOutputWithContext(context.Background())
}

func (i SecuritypolicyMoveMap) ToSecuritypolicyMoveMapOutputWithContext(ctx context.Context) SecuritypolicyMoveMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicyMoveMapOutput)
}

type SecuritypolicyMoveOutput struct{ *pulumi.OutputState }

func (SecuritypolicyMoveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritypolicyMove)(nil)).Elem()
}

func (o SecuritypolicyMoveOutput) ToSecuritypolicyMoveOutput() SecuritypolicyMoveOutput {
	return o
}

func (o SecuritypolicyMoveOutput) ToSecuritypolicyMoveOutputWithContext(ctx context.Context) SecuritypolicyMoveOutput {
	return o
}

func (o SecuritypolicyMoveOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecuritypolicyMove) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o SecuritypolicyMoveOutput) Move() pulumi.StringOutput {
	return o.ApplyT(func(v *SecuritypolicyMove) pulumi.StringOutput { return v.Move }).(pulumi.StringOutput)
}

func (o SecuritypolicyMoveOutput) PolicyidDst() pulumi.IntOutput {
	return o.ApplyT(func(v *SecuritypolicyMove) pulumi.IntOutput { return v.PolicyidDst }).(pulumi.IntOutput)
}

func (o SecuritypolicyMoveOutput) PolicyidSrc() pulumi.IntOutput {
	return o.ApplyT(func(v *SecuritypolicyMove) pulumi.IntOutput { return v.PolicyidSrc }).(pulumi.IntOutput)
}

func (o SecuritypolicyMoveOutput) StatePolicySrcdstPos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecuritypolicyMove) pulumi.StringPtrOutput { return v.StatePolicySrcdstPos }).(pulumi.StringPtrOutput)
}

func (o SecuritypolicyMoveOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecuritypolicyMove) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SecuritypolicyMoveArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicyMoveArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecuritypolicyMove)(nil)).Elem()
}

func (o SecuritypolicyMoveArrayOutput) ToSecuritypolicyMoveArrayOutput() SecuritypolicyMoveArrayOutput {
	return o
}

func (o SecuritypolicyMoveArrayOutput) ToSecuritypolicyMoveArrayOutputWithContext(ctx context.Context) SecuritypolicyMoveArrayOutput {
	return o
}

func (o SecuritypolicyMoveArrayOutput) Index(i pulumi.IntInput) SecuritypolicyMoveOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecuritypolicyMove {
		return vs[0].([]*SecuritypolicyMove)[vs[1].(int)]
	}).(SecuritypolicyMoveOutput)
}

type SecuritypolicyMoveMapOutput struct{ *pulumi.OutputState }

func (SecuritypolicyMoveMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecuritypolicyMove)(nil)).Elem()
}

func (o SecuritypolicyMoveMapOutput) ToSecuritypolicyMoveMapOutput() SecuritypolicyMoveMapOutput {
	return o
}

func (o SecuritypolicyMoveMapOutput) ToSecuritypolicyMoveMapOutputWithContext(ctx context.Context) SecuritypolicyMoveMapOutput {
	return o
}

func (o SecuritypolicyMoveMapOutput) MapIndex(k pulumi.StringInput) SecuritypolicyMoveOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecuritypolicyMove {
		return vs[0].(map[string]*SecuritypolicyMove)[vs[1].(string)]
	}).(SecuritypolicyMoveOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyMoveInput)(nil)).Elem(), &SecuritypolicyMove{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyMoveArrayInput)(nil)).Elem(), SecuritypolicyMoveArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicyMoveMapInput)(nil)).Elem(), SecuritypolicyMoveMap{})
	pulumi.RegisterOutputType(SecuritypolicyMoveOutput{})
	pulumi.RegisterOutputType(SecuritypolicyMoveArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicyMoveMapOutput{})
}
