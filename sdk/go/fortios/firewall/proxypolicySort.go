// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

type ProxypolicySort struct {
	pulumi.CustomResourceState

	Comment          pulumi.StringPtrOutput                    `pulumi:"comment"`
	ForceRecreate    pulumi.StringOutput                       `pulumi:"forceRecreate"`
	ManualOrders     pulumi.StringArrayOutput                  `pulumi:"manualOrders"`
	Sortby           pulumi.StringOutput                       `pulumi:"sortby"`
	Sortdirection    pulumi.StringOutput                       `pulumi:"sortdirection"`
	StatePolicyLists ProxypolicySortStatePolicyListArrayOutput `pulumi:"statePolicyLists"`
	Status           pulumi.StringOutput                       `pulumi:"status"`
	Vdomparam        pulumi.StringPtrOutput                    `pulumi:"vdomparam"`
}

// NewProxypolicySort registers a new resource with the given unique name, arguments, and options.
func NewProxypolicySort(ctx *pulumi.Context,
	name string, args *ProxypolicySortArgs, opts ...pulumi.ResourceOption) (*ProxypolicySort, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Sortby == nil {
		return nil, errors.New("invalid value for required argument 'Sortby'")
	}
	if args.Sortdirection == nil {
		return nil, errors.New("invalid value for required argument 'Sortdirection'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProxypolicySort
	err := ctx.RegisterResource("fortios:firewall/proxypolicySort:ProxypolicySort", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProxypolicySort gets an existing ProxypolicySort resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProxypolicySort(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProxypolicySortState, opts ...pulumi.ResourceOption) (*ProxypolicySort, error) {
	var resource ProxypolicySort
	err := ctx.ReadResource("fortios:firewall/proxypolicySort:ProxypolicySort", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProxypolicySort resources.
type proxypolicySortState struct {
	Comment          *string                          `pulumi:"comment"`
	ForceRecreate    *string                          `pulumi:"forceRecreate"`
	ManualOrders     []string                         `pulumi:"manualOrders"`
	Sortby           *string                          `pulumi:"sortby"`
	Sortdirection    *string                          `pulumi:"sortdirection"`
	StatePolicyLists []ProxypolicySortStatePolicyList `pulumi:"statePolicyLists"`
	Status           *string                          `pulumi:"status"`
	Vdomparam        *string                          `pulumi:"vdomparam"`
}

type ProxypolicySortState struct {
	Comment          pulumi.StringPtrInput
	ForceRecreate    pulumi.StringPtrInput
	ManualOrders     pulumi.StringArrayInput
	Sortby           pulumi.StringPtrInput
	Sortdirection    pulumi.StringPtrInput
	StatePolicyLists ProxypolicySortStatePolicyListArrayInput
	Status           pulumi.StringPtrInput
	Vdomparam        pulumi.StringPtrInput
}

func (ProxypolicySortState) ElementType() reflect.Type {
	return reflect.TypeOf((*proxypolicySortState)(nil)).Elem()
}

type proxypolicySortArgs struct {
	Comment       *string  `pulumi:"comment"`
	ForceRecreate *string  `pulumi:"forceRecreate"`
	ManualOrders  []string `pulumi:"manualOrders"`
	Sortby        string   `pulumi:"sortby"`
	Sortdirection string   `pulumi:"sortdirection"`
	Status        *string  `pulumi:"status"`
	Vdomparam     *string  `pulumi:"vdomparam"`
}

// The set of arguments for constructing a ProxypolicySort resource.
type ProxypolicySortArgs struct {
	Comment       pulumi.StringPtrInput
	ForceRecreate pulumi.StringPtrInput
	ManualOrders  pulumi.StringArrayInput
	Sortby        pulumi.StringInput
	Sortdirection pulumi.StringInput
	Status        pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
}

func (ProxypolicySortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proxypolicySortArgs)(nil)).Elem()
}

type ProxypolicySortInput interface {
	pulumi.Input

	ToProxypolicySortOutput() ProxypolicySortOutput
	ToProxypolicySortOutputWithContext(ctx context.Context) ProxypolicySortOutput
}

func (*ProxypolicySort) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxypolicySort)(nil)).Elem()
}

func (i *ProxypolicySort) ToProxypolicySortOutput() ProxypolicySortOutput {
	return i.ToProxypolicySortOutputWithContext(context.Background())
}

func (i *ProxypolicySort) ToProxypolicySortOutputWithContext(ctx context.Context) ProxypolicySortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicySortOutput)
}

// ProxypolicySortArrayInput is an input type that accepts ProxypolicySortArray and ProxypolicySortArrayOutput values.
// You can construct a concrete instance of `ProxypolicySortArrayInput` via:
//
//	ProxypolicySortArray{ ProxypolicySortArgs{...} }
type ProxypolicySortArrayInput interface {
	pulumi.Input

	ToProxypolicySortArrayOutput() ProxypolicySortArrayOutput
	ToProxypolicySortArrayOutputWithContext(context.Context) ProxypolicySortArrayOutput
}

type ProxypolicySortArray []ProxypolicySortInput

func (ProxypolicySortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxypolicySort)(nil)).Elem()
}

func (i ProxypolicySortArray) ToProxypolicySortArrayOutput() ProxypolicySortArrayOutput {
	return i.ToProxypolicySortArrayOutputWithContext(context.Background())
}

func (i ProxypolicySortArray) ToProxypolicySortArrayOutputWithContext(ctx context.Context) ProxypolicySortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicySortArrayOutput)
}

// ProxypolicySortMapInput is an input type that accepts ProxypolicySortMap and ProxypolicySortMapOutput values.
// You can construct a concrete instance of `ProxypolicySortMapInput` via:
//
//	ProxypolicySortMap{ "key": ProxypolicySortArgs{...} }
type ProxypolicySortMapInput interface {
	pulumi.Input

	ToProxypolicySortMapOutput() ProxypolicySortMapOutput
	ToProxypolicySortMapOutputWithContext(context.Context) ProxypolicySortMapOutput
}

type ProxypolicySortMap map[string]ProxypolicySortInput

func (ProxypolicySortMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxypolicySort)(nil)).Elem()
}

func (i ProxypolicySortMap) ToProxypolicySortMapOutput() ProxypolicySortMapOutput {
	return i.ToProxypolicySortMapOutputWithContext(context.Background())
}

func (i ProxypolicySortMap) ToProxypolicySortMapOutputWithContext(ctx context.Context) ProxypolicySortMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxypolicySortMapOutput)
}

type ProxypolicySortOutput struct{ *pulumi.OutputState }

func (ProxypolicySortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxypolicySort)(nil)).Elem()
}

func (o ProxypolicySortOutput) ToProxypolicySortOutput() ProxypolicySortOutput {
	return o
}

func (o ProxypolicySortOutput) ToProxypolicySortOutputWithContext(ctx context.Context) ProxypolicySortOutput {
	return o
}

func (o ProxypolicySortOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxypolicySort) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ProxypolicySortOutput) ForceRecreate() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxypolicySort) pulumi.StringOutput { return v.ForceRecreate }).(pulumi.StringOutput)
}

func (o ProxypolicySortOutput) ManualOrders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProxypolicySort) pulumi.StringArrayOutput { return v.ManualOrders }).(pulumi.StringArrayOutput)
}

func (o ProxypolicySortOutput) Sortby() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxypolicySort) pulumi.StringOutput { return v.Sortby }).(pulumi.StringOutput)
}

func (o ProxypolicySortOutput) Sortdirection() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxypolicySort) pulumi.StringOutput { return v.Sortdirection }).(pulumi.StringOutput)
}

func (o ProxypolicySortOutput) StatePolicyLists() ProxypolicySortStatePolicyListArrayOutput {
	return o.ApplyT(func(v *ProxypolicySort) ProxypolicySortStatePolicyListArrayOutput { return v.StatePolicyLists }).(ProxypolicySortStatePolicyListArrayOutput)
}

func (o ProxypolicySortOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxypolicySort) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o ProxypolicySortOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxypolicySort) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ProxypolicySortArrayOutput struct{ *pulumi.OutputState }

func (ProxypolicySortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxypolicySort)(nil)).Elem()
}

func (o ProxypolicySortArrayOutput) ToProxypolicySortArrayOutput() ProxypolicySortArrayOutput {
	return o
}

func (o ProxypolicySortArrayOutput) ToProxypolicySortArrayOutputWithContext(ctx context.Context) ProxypolicySortArrayOutput {
	return o
}

func (o ProxypolicySortArrayOutput) Index(i pulumi.IntInput) ProxypolicySortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProxypolicySort {
		return vs[0].([]*ProxypolicySort)[vs[1].(int)]
	}).(ProxypolicySortOutput)
}

type ProxypolicySortMapOutput struct{ *pulumi.OutputState }

func (ProxypolicySortMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxypolicySort)(nil)).Elem()
}

func (o ProxypolicySortMapOutput) ToProxypolicySortMapOutput() ProxypolicySortMapOutput {
	return o
}

func (o ProxypolicySortMapOutput) ToProxypolicySortMapOutputWithContext(ctx context.Context) ProxypolicySortMapOutput {
	return o
}

func (o ProxypolicySortMapOutput) MapIndex(k pulumi.StringInput) ProxypolicySortOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProxypolicySort {
		return vs[0].(map[string]*ProxypolicySort)[vs[1].(string)]
	}).(ProxypolicySortOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicySortInput)(nil)).Elem(), &ProxypolicySort{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicySortArrayInput)(nil)).Elem(), ProxypolicySortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxypolicySortMapInput)(nil)).Elem(), ProxypolicySortMap{})
	pulumi.RegisterOutputType(ProxypolicySortOutput{})
	pulumi.RegisterOutputType(ProxypolicySortArrayOutput{})
	pulumi.RegisterOutputType(ProxypolicySortMapOutput{})
}
