// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure IPv6 access proxy. Applies to FortiOS Version `>= 7.0.1`.
//
// ## Import
//
// Firewall AccessProxy6 can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/accessproxy6:Accessproxy6 labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/accessproxy6:Accessproxy6 labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Accessproxy6 struct {
	pulumi.CustomResourceState

	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb pulumi.StringOutput `pulumi:"addVhostDomainToDnsdb"`
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s Accessproxy6ApiGateway6ArrayOutput `pulumi:"apiGateway6s"`
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways Accessproxy6ApiGatewayArrayOutput `pulumi:"apiGateways"`
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal pulumi.StringOutput `pulumi:"authPortal"`
	// Virtual host for authentication portal.
	AuthVirtualHost pulumi.StringOutput `pulumi:"authVirtualHost"`
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert pulumi.StringOutput `pulumi:"clientCert"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringOutput `pulumi:"decryptedTrafficMirror"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Action of an empty client certificate.
	EmptyCertAction pulumi.StringOutput `pulumi:"emptyCertAction"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Maximum supported HTTP versions. default = HTTP2 Valid values: `http1`, `http2`.
	HttpSupportedMaxVersion pulumi.StringOutput `pulumi:"httpSupportedMaxVersion"`
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic pulumi.StringOutput `pulumi:"logBlockedTraffic"`
	// Access Proxy name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable server pool multiplexing. Share connected server in HTTP, HTTPS, and web-portal api-gateway. Valid values: `enable`, `disable`.
	SvrPoolMultiplex pulumi.StringOutput `pulumi:"svrPoolMultiplex"`
	// Maximum number of concurrent requests that servers in server pool could handle (default = unlimited).
	SvrPoolServerMaxConcurrentRequest pulumi.IntOutput `pulumi:"svrPoolServerMaxConcurrentRequest"`
	// Maximum number of requests that servers in server pool handle before disconnecting (default = unlimited).
	SvrPoolServerMaxRequest pulumi.IntOutput `pulumi:"svrPoolServerMaxRequest"`
	// Time-to-live in the server pool for idle connections to servers.
	SvrPoolTtl pulumi.IntOutput `pulumi:"svrPoolTtl"`
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect pulumi.StringOutput `pulumi:"userAgentDetect"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Virtual IP name.
	Vip pulumi.StringOutput `pulumi:"vip"`
}

// NewAccessproxy6 registers a new resource with the given unique name, arguments, and options.
func NewAccessproxy6(ctx *pulumi.Context,
	name string, args *Accessproxy6Args, opts ...pulumi.ResourceOption) (*Accessproxy6, error) {
	if args == nil {
		args = &Accessproxy6Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Accessproxy6
	err := ctx.RegisterResource("fortios:firewall/accessproxy6:Accessproxy6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessproxy6 gets an existing Accessproxy6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessproxy6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Accessproxy6State, opts ...pulumi.ResourceOption) (*Accessproxy6, error) {
	var resource Accessproxy6
	err := ctx.ReadResource("fortios:firewall/accessproxy6:Accessproxy6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Accessproxy6 resources.
type accessproxy6State struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb *string `pulumi:"addVhostDomainToDnsdb"`
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s []Accessproxy6ApiGateway6 `pulumi:"apiGateway6s"`
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways []Accessproxy6ApiGateway `pulumi:"apiGateways"`
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal *string `pulumi:"authPortal"`
	// Virtual host for authentication portal.
	AuthVirtualHost *string `pulumi:"authVirtualHost"`
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert *string `pulumi:"clientCert"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror *string `pulumi:"decryptedTrafficMirror"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Action of an empty client certificate.
	EmptyCertAction *string `pulumi:"emptyCertAction"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Maximum supported HTTP versions. default = HTTP2 Valid values: `http1`, `http2`.
	HttpSupportedMaxVersion *string `pulumi:"httpSupportedMaxVersion"`
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic *string `pulumi:"logBlockedTraffic"`
	// Access Proxy name.
	Name *string `pulumi:"name"`
	// Enable/disable server pool multiplexing. Share connected server in HTTP, HTTPS, and web-portal api-gateway. Valid values: `enable`, `disable`.
	SvrPoolMultiplex *string `pulumi:"svrPoolMultiplex"`
	// Maximum number of concurrent requests that servers in server pool could handle (default = unlimited).
	SvrPoolServerMaxConcurrentRequest *int `pulumi:"svrPoolServerMaxConcurrentRequest"`
	// Maximum number of requests that servers in server pool handle before disconnecting (default = unlimited).
	SvrPoolServerMaxRequest *int `pulumi:"svrPoolServerMaxRequest"`
	// Time-to-live in the server pool for idle connections to servers.
	SvrPoolTtl *int `pulumi:"svrPoolTtl"`
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect *string `pulumi:"userAgentDetect"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual IP name.
	Vip *string `pulumi:"vip"`
}

type Accessproxy6State struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb pulumi.StringPtrInput
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s Accessproxy6ApiGateway6ArrayInput
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways Accessproxy6ApiGatewayArrayInput
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal pulumi.StringPtrInput
	// Virtual host for authentication portal.
	AuthVirtualHost pulumi.StringPtrInput
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert pulumi.StringPtrInput
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Action of an empty client certificate.
	EmptyCertAction pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Maximum supported HTTP versions. default = HTTP2 Valid values: `http1`, `http2`.
	HttpSupportedMaxVersion pulumi.StringPtrInput
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic pulumi.StringPtrInput
	// Access Proxy name.
	Name pulumi.StringPtrInput
	// Enable/disable server pool multiplexing. Share connected server in HTTP, HTTPS, and web-portal api-gateway. Valid values: `enable`, `disable`.
	SvrPoolMultiplex pulumi.StringPtrInput
	// Maximum number of concurrent requests that servers in server pool could handle (default = unlimited).
	SvrPoolServerMaxConcurrentRequest pulumi.IntPtrInput
	// Maximum number of requests that servers in server pool handle before disconnecting (default = unlimited).
	SvrPoolServerMaxRequest pulumi.IntPtrInput
	// Time-to-live in the server pool for idle connections to servers.
	SvrPoolTtl pulumi.IntPtrInput
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual IP name.
	Vip pulumi.StringPtrInput
}

func (Accessproxy6State) ElementType() reflect.Type {
	return reflect.TypeOf((*accessproxy6State)(nil)).Elem()
}

type accessproxy6Args struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb *string `pulumi:"addVhostDomainToDnsdb"`
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s []Accessproxy6ApiGateway6 `pulumi:"apiGateway6s"`
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways []Accessproxy6ApiGateway `pulumi:"apiGateways"`
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal *string `pulumi:"authPortal"`
	// Virtual host for authentication portal.
	AuthVirtualHost *string `pulumi:"authVirtualHost"`
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert *string `pulumi:"clientCert"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror *string `pulumi:"decryptedTrafficMirror"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Action of an empty client certificate.
	EmptyCertAction *string `pulumi:"emptyCertAction"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Maximum supported HTTP versions. default = HTTP2 Valid values: `http1`, `http2`.
	HttpSupportedMaxVersion *string `pulumi:"httpSupportedMaxVersion"`
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic *string `pulumi:"logBlockedTraffic"`
	// Access Proxy name.
	Name *string `pulumi:"name"`
	// Enable/disable server pool multiplexing. Share connected server in HTTP, HTTPS, and web-portal api-gateway. Valid values: `enable`, `disable`.
	SvrPoolMultiplex *string `pulumi:"svrPoolMultiplex"`
	// Maximum number of concurrent requests that servers in server pool could handle (default = unlimited).
	SvrPoolServerMaxConcurrentRequest *int `pulumi:"svrPoolServerMaxConcurrentRequest"`
	// Maximum number of requests that servers in server pool handle before disconnecting (default = unlimited).
	SvrPoolServerMaxRequest *int `pulumi:"svrPoolServerMaxRequest"`
	// Time-to-live in the server pool for idle connections to servers.
	SvrPoolTtl *int `pulumi:"svrPoolTtl"`
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect *string `pulumi:"userAgentDetect"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual IP name.
	Vip *string `pulumi:"vip"`
}

// The set of arguments for constructing a Accessproxy6 resource.
type Accessproxy6Args struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb pulumi.StringPtrInput
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s Accessproxy6ApiGateway6ArrayInput
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways Accessproxy6ApiGatewayArrayInput
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal pulumi.StringPtrInput
	// Virtual host for authentication portal.
	AuthVirtualHost pulumi.StringPtrInput
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert pulumi.StringPtrInput
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Action of an empty client certificate.
	EmptyCertAction pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Maximum supported HTTP versions. default = HTTP2 Valid values: `http1`, `http2`.
	HttpSupportedMaxVersion pulumi.StringPtrInput
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic pulumi.StringPtrInput
	// Access Proxy name.
	Name pulumi.StringPtrInput
	// Enable/disable server pool multiplexing. Share connected server in HTTP, HTTPS, and web-portal api-gateway. Valid values: `enable`, `disable`.
	SvrPoolMultiplex pulumi.StringPtrInput
	// Maximum number of concurrent requests that servers in server pool could handle (default = unlimited).
	SvrPoolServerMaxConcurrentRequest pulumi.IntPtrInput
	// Maximum number of requests that servers in server pool handle before disconnecting (default = unlimited).
	SvrPoolServerMaxRequest pulumi.IntPtrInput
	// Time-to-live in the server pool for idle connections to servers.
	SvrPoolTtl pulumi.IntPtrInput
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual IP name.
	Vip pulumi.StringPtrInput
}

func (Accessproxy6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*accessproxy6Args)(nil)).Elem()
}

type Accessproxy6Input interface {
	pulumi.Input

	ToAccessproxy6Output() Accessproxy6Output
	ToAccessproxy6OutputWithContext(ctx context.Context) Accessproxy6Output
}

func (*Accessproxy6) ElementType() reflect.Type {
	return reflect.TypeOf((**Accessproxy6)(nil)).Elem()
}

func (i *Accessproxy6) ToAccessproxy6Output() Accessproxy6Output {
	return i.ToAccessproxy6OutputWithContext(context.Background())
}

func (i *Accessproxy6) ToAccessproxy6OutputWithContext(ctx context.Context) Accessproxy6Output {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6Output)
}

// Accessproxy6ArrayInput is an input type that accepts Accessproxy6Array and Accessproxy6ArrayOutput values.
// You can construct a concrete instance of `Accessproxy6ArrayInput` via:
//
//	Accessproxy6Array{ Accessproxy6Args{...} }
type Accessproxy6ArrayInput interface {
	pulumi.Input

	ToAccessproxy6ArrayOutput() Accessproxy6ArrayOutput
	ToAccessproxy6ArrayOutputWithContext(context.Context) Accessproxy6ArrayOutput
}

type Accessproxy6Array []Accessproxy6Input

func (Accessproxy6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Accessproxy6)(nil)).Elem()
}

func (i Accessproxy6Array) ToAccessproxy6ArrayOutput() Accessproxy6ArrayOutput {
	return i.ToAccessproxy6ArrayOutputWithContext(context.Background())
}

func (i Accessproxy6Array) ToAccessproxy6ArrayOutputWithContext(ctx context.Context) Accessproxy6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6ArrayOutput)
}

// Accessproxy6MapInput is an input type that accepts Accessproxy6Map and Accessproxy6MapOutput values.
// You can construct a concrete instance of `Accessproxy6MapInput` via:
//
//	Accessproxy6Map{ "key": Accessproxy6Args{...} }
type Accessproxy6MapInput interface {
	pulumi.Input

	ToAccessproxy6MapOutput() Accessproxy6MapOutput
	ToAccessproxy6MapOutputWithContext(context.Context) Accessproxy6MapOutput
}

type Accessproxy6Map map[string]Accessproxy6Input

func (Accessproxy6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Accessproxy6)(nil)).Elem()
}

func (i Accessproxy6Map) ToAccessproxy6MapOutput() Accessproxy6MapOutput {
	return i.ToAccessproxy6MapOutputWithContext(context.Background())
}

func (i Accessproxy6Map) ToAccessproxy6MapOutputWithContext(ctx context.Context) Accessproxy6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Accessproxy6MapOutput)
}

type Accessproxy6Output struct{ *pulumi.OutputState }

func (Accessproxy6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**Accessproxy6)(nil)).Elem()
}

func (o Accessproxy6Output) ToAccessproxy6Output() Accessproxy6Output {
	return o
}

func (o Accessproxy6Output) ToAccessproxy6OutputWithContext(ctx context.Context) Accessproxy6Output {
	return o
}

// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
func (o Accessproxy6Output) AddVhostDomainToDnsdb() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.AddVhostDomainToDnsdb }).(pulumi.StringOutput)
}

// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
func (o Accessproxy6Output) ApiGateway6s() Accessproxy6ApiGateway6ArrayOutput {
	return o.ApplyT(func(v *Accessproxy6) Accessproxy6ApiGateway6ArrayOutput { return v.ApiGateway6s }).(Accessproxy6ApiGateway6ArrayOutput)
}

// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
func (o Accessproxy6Output) ApiGateways() Accessproxy6ApiGatewayArrayOutput {
	return o.ApplyT(func(v *Accessproxy6) Accessproxy6ApiGatewayArrayOutput { return v.ApiGateways }).(Accessproxy6ApiGatewayArrayOutput)
}

// Enable/disable authentication portal. Valid values: `disable`, `enable`.
func (o Accessproxy6Output) AuthPortal() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.AuthPortal }).(pulumi.StringOutput)
}

// Virtual host for authentication portal.
func (o Accessproxy6Output) AuthVirtualHost() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.AuthVirtualHost }).(pulumi.StringOutput)
}

// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
func (o Accessproxy6Output) ClientCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.ClientCert }).(pulumi.StringOutput)
}

// Decrypted traffic mirror.
func (o Accessproxy6Output) DecryptedTrafficMirror() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.DecryptedTrafficMirror }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o Accessproxy6Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Action of an empty client certificate.
func (o Accessproxy6Output) EmptyCertAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.EmptyCertAction }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o Accessproxy6Output) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Maximum supported HTTP versions. default = HTTP2 Valid values: `http1`, `http2`.
func (o Accessproxy6Output) HttpSupportedMaxVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.HttpSupportedMaxVersion }).(pulumi.StringOutput)
}

// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
func (o Accessproxy6Output) LogBlockedTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.LogBlockedTraffic }).(pulumi.StringOutput)
}

// Access Proxy name.
func (o Accessproxy6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable server pool multiplexing. Share connected server in HTTP, HTTPS, and web-portal api-gateway. Valid values: `enable`, `disable`.
func (o Accessproxy6Output) SvrPoolMultiplex() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.SvrPoolMultiplex }).(pulumi.StringOutput)
}

// Maximum number of concurrent requests that servers in server pool could handle (default = unlimited).
func (o Accessproxy6Output) SvrPoolServerMaxConcurrentRequest() pulumi.IntOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.IntOutput { return v.SvrPoolServerMaxConcurrentRequest }).(pulumi.IntOutput)
}

// Maximum number of requests that servers in server pool handle before disconnecting (default = unlimited).
func (o Accessproxy6Output) SvrPoolServerMaxRequest() pulumi.IntOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.IntOutput { return v.SvrPoolServerMaxRequest }).(pulumi.IntOutput)
}

// Time-to-live in the server pool for idle connections to servers.
func (o Accessproxy6Output) SvrPoolTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.IntOutput { return v.SvrPoolTtl }).(pulumi.IntOutput)
}

// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
func (o Accessproxy6Output) UserAgentDetect() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.UserAgentDetect }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Accessproxy6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Virtual IP name.
func (o Accessproxy6Output) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxy6) pulumi.StringOutput { return v.Vip }).(pulumi.StringOutput)
}

type Accessproxy6ArrayOutput struct{ *pulumi.OutputState }

func (Accessproxy6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Accessproxy6)(nil)).Elem()
}

func (o Accessproxy6ArrayOutput) ToAccessproxy6ArrayOutput() Accessproxy6ArrayOutput {
	return o
}

func (o Accessproxy6ArrayOutput) ToAccessproxy6ArrayOutputWithContext(ctx context.Context) Accessproxy6ArrayOutput {
	return o
}

func (o Accessproxy6ArrayOutput) Index(i pulumi.IntInput) Accessproxy6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Accessproxy6 {
		return vs[0].([]*Accessproxy6)[vs[1].(int)]
	}).(Accessproxy6Output)
}

type Accessproxy6MapOutput struct{ *pulumi.OutputState }

func (Accessproxy6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Accessproxy6)(nil)).Elem()
}

func (o Accessproxy6MapOutput) ToAccessproxy6MapOutput() Accessproxy6MapOutput {
	return o
}

func (o Accessproxy6MapOutput) ToAccessproxy6MapOutputWithContext(ctx context.Context) Accessproxy6MapOutput {
	return o
}

func (o Accessproxy6MapOutput) MapIndex(k pulumi.StringInput) Accessproxy6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Accessproxy6 {
		return vs[0].(map[string]*Accessproxy6)[vs[1].(string)]
	}).(Accessproxy6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6Input)(nil)).Elem(), &Accessproxy6{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6ArrayInput)(nil)).Elem(), Accessproxy6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*Accessproxy6MapInput)(nil)).Elem(), Accessproxy6Map{})
	pulumi.RegisterOutputType(Accessproxy6Output{})
	pulumi.RegisterOutputType(Accessproxy6ArrayOutput{})
	pulumi.RegisterOutputType(Accessproxy6MapOutput{})
}
