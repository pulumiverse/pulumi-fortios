// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Use this data source to get information on an fortios firewall address
func LookupAddress(ctx *pulumi.Context, args *LookupAddressArgs, opts ...pulumi.InvokeOption) (*LookupAddressResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAddressResult
	err := ctx.Invoke("fortios:firewall/getAddress:getAddress", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAddress.
type LookupAddressArgs struct {
	// Specify the name of the desired firewall address.
	Name string `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getAddress.
type LookupAddressResult struct {
	// Enable/disable use of this address in the static route configuration.
	AllowRouting string `pulumi:"allowRouting"`
	// Network interface associated with address.
	AssociatedInterface string `pulumi:"associatedInterface"`
	// Defines the minimal TTL of individual IP addresses in FQDN cache measured in seconds.
	CacheTtl int `pulumi:"cacheTtl"`
	// SPT (System Posture Token) value.
	ClearpassSpt string `pulumi:"clearpassSpt"`
	// Color of icon on the GUI.
	Color int `pulumi:"color"`
	// Comment.
	Comment string `pulumi:"comment"`
	// IP addresses associated to a specific country.
	Country string `pulumi:"country"`
	// Final IP address (inclusive) in the range for the address.
	EndIp string `pulumi:"endIp"`
	// Last MAC address in the range.
	EndMac string `pulumi:"endMac"`
	// Endpoint group name.
	EpgName string `pulumi:"epgName"`
	// Security Fabric global object setting.
	FabricObject string `pulumi:"fabricObject"`
	// Match criteria filter.
	Filter string `pulumi:"filter"`
	// Fully Qualified Domain Name address.
	Fqdn string `pulumi:"fqdn"`
	// FSSO group(s). The structure of `fssoGroup` block is documented below.
	FssoGroups []GetAddressFssoGroup `pulumi:"fssoGroups"`
	// Dynamic address matching hardware model.
	HwModel string `pulumi:"hwModel"`
	// Dynamic address matching hardware vendor.
	HwVendor string `pulumi:"hwVendor"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of interface whose IP address is to be used.
	Interface string `pulumi:"interface"`
	// IP address list. The structure of `list` block is documented below.
	Lists []GetAddressList `pulumi:"lists"`
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddrs []GetAddressMacaddr `pulumi:"macaddrs"`
	// Tag name.
	Name string `pulumi:"name"`
	// Enable/disable collection of node addresses only in Kubernetes.
	NodeIpOnly string `pulumi:"nodeIpOnly"`
	// Object ID for NSX.
	ObjId string `pulumi:"objId"`
	// Tag of dynamic address object.
	ObjTag string `pulumi:"objTag"`
	// Object type.
	ObjType string `pulumi:"objType"`
	// Organization domain name (Syntax: organization/domain).
	Organization string `pulumi:"organization"`
	// Dynamic address matching operating system.
	Os string `pulumi:"os"`
	// Policy group name.
	PolicyGroup string `pulumi:"policyGroup"`
	// route-tag address.
	RouteTag int `pulumi:"routeTag"`
	// SDN.
	Sdn string `pulumi:"sdn"`
	// Type of addresses to collect.
	SdnAddrType string `pulumi:"sdnAddrType"`
	// SDN Tag.
	SdnTag string `pulumi:"sdnTag"`
	// First IP address (inclusive) in the range for the address.
	StartIp string `pulumi:"startIp"`
	// First MAC address in the range.
	StartMac string `pulumi:"startMac"`
	// Sub-type of address.
	SubType string `pulumi:"subType"`
	// IP address and subnet mask of address.
	Subnet string `pulumi:"subnet"`
	// Subnet name.
	SubnetName string `pulumi:"subnetName"`
	// Dynamic address matching software version.
	SwVersion string `pulumi:"swVersion"`
	// Tag detection level of dynamic address object.
	TagDetectionLevel string `pulumi:"tagDetectionLevel"`
	// Tag type of dynamic address object.
	TagType string `pulumi:"tagType"`
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings []GetAddressTagging `pulumi:"taggings"`
	// Tenant.
	Tenant string `pulumi:"tenant"`
	// Type of address.
	Type string `pulumi:"type"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid      string  `pulumi:"uuid"`
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable address visibility in the GUI.
	Visibility string `pulumi:"visibility"`
	// IP address and wildcard netmask.
	Wildcard string `pulumi:"wildcard"`
	// Fully Qualified Domain Name with wildcard characters.
	WildcardFqdn string `pulumi:"wildcardFqdn"`
}

func LookupAddressOutput(ctx *pulumi.Context, args LookupAddressOutputArgs, opts ...pulumi.InvokeOption) LookupAddressResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAddressResult, error) {
			args := v.(LookupAddressArgs)
			r, err := LookupAddress(ctx, &args, opts...)
			var s LookupAddressResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAddressResultOutput)
}

// A collection of arguments for invoking getAddress.
type LookupAddressOutputArgs struct {
	// Specify the name of the desired firewall address.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupAddressOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddressArgs)(nil)).Elem()
}

// A collection of values returned by getAddress.
type LookupAddressResultOutput struct{ *pulumi.OutputState }

func (LookupAddressResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddressResult)(nil)).Elem()
}

func (o LookupAddressResultOutput) ToLookupAddressResultOutput() LookupAddressResultOutput {
	return o
}

func (o LookupAddressResultOutput) ToLookupAddressResultOutputWithContext(ctx context.Context) LookupAddressResultOutput {
	return o
}

// Enable/disable use of this address in the static route configuration.
func (o LookupAddressResultOutput) AllowRouting() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.AllowRouting }).(pulumi.StringOutput)
}

// Network interface associated with address.
func (o LookupAddressResultOutput) AssociatedInterface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.AssociatedInterface }).(pulumi.StringOutput)
}

// Defines the minimal TTL of individual IP addresses in FQDN cache measured in seconds.
func (o LookupAddressResultOutput) CacheTtl() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAddressResult) int { return v.CacheTtl }).(pulumi.IntOutput)
}

// SPT (System Posture Token) value.
func (o LookupAddressResultOutput) ClearpassSpt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.ClearpassSpt }).(pulumi.StringOutput)
}

// Color of icon on the GUI.
func (o LookupAddressResultOutput) Color() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAddressResult) int { return v.Color }).(pulumi.IntOutput)
}

// Comment.
func (o LookupAddressResultOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Comment }).(pulumi.StringOutput)
}

// IP addresses associated to a specific country.
func (o LookupAddressResultOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Country }).(pulumi.StringOutput)
}

// Final IP address (inclusive) in the range for the address.
func (o LookupAddressResultOutput) EndIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.EndIp }).(pulumi.StringOutput)
}

// Last MAC address in the range.
func (o LookupAddressResultOutput) EndMac() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.EndMac }).(pulumi.StringOutput)
}

// Endpoint group name.
func (o LookupAddressResultOutput) EpgName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.EpgName }).(pulumi.StringOutput)
}

// Security Fabric global object setting.
func (o LookupAddressResultOutput) FabricObject() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.FabricObject }).(pulumi.StringOutput)
}

// Match criteria filter.
func (o LookupAddressResultOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Filter }).(pulumi.StringOutput)
}

// Fully Qualified Domain Name address.
func (o LookupAddressResultOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Fqdn }).(pulumi.StringOutput)
}

// FSSO group(s). The structure of `fssoGroup` block is documented below.
func (o LookupAddressResultOutput) FssoGroups() GetAddressFssoGroupArrayOutput {
	return o.ApplyT(func(v LookupAddressResult) []GetAddressFssoGroup { return v.FssoGroups }).(GetAddressFssoGroupArrayOutput)
}

// Dynamic address matching hardware model.
func (o LookupAddressResultOutput) HwModel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.HwModel }).(pulumi.StringOutput)
}

// Dynamic address matching hardware vendor.
func (o LookupAddressResultOutput) HwVendor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.HwVendor }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAddressResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of interface whose IP address is to be used.
func (o LookupAddressResultOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Interface }).(pulumi.StringOutput)
}

// IP address list. The structure of `list` block is documented below.
func (o LookupAddressResultOutput) Lists() GetAddressListArrayOutput {
	return o.ApplyT(func(v LookupAddressResult) []GetAddressList { return v.Lists }).(GetAddressListArrayOutput)
}

// MAC address ranges <start>[-<end>] separated by space.
func (o LookupAddressResultOutput) Macaddrs() GetAddressMacaddrArrayOutput {
	return o.ApplyT(func(v LookupAddressResult) []GetAddressMacaddr { return v.Macaddrs }).(GetAddressMacaddrArrayOutput)
}

// Tag name.
func (o LookupAddressResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable collection of node addresses only in Kubernetes.
func (o LookupAddressResultOutput) NodeIpOnly() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.NodeIpOnly }).(pulumi.StringOutput)
}

// Object ID for NSX.
func (o LookupAddressResultOutput) ObjId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.ObjId }).(pulumi.StringOutput)
}

// Tag of dynamic address object.
func (o LookupAddressResultOutput) ObjTag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.ObjTag }).(pulumi.StringOutput)
}

// Object type.
func (o LookupAddressResultOutput) ObjType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.ObjType }).(pulumi.StringOutput)
}

// Organization domain name (Syntax: organization/domain).
func (o LookupAddressResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Organization }).(pulumi.StringOutput)
}

// Dynamic address matching operating system.
func (o LookupAddressResultOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Os }).(pulumi.StringOutput)
}

// Policy group name.
func (o LookupAddressResultOutput) PolicyGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.PolicyGroup }).(pulumi.StringOutput)
}

// route-tag address.
func (o LookupAddressResultOutput) RouteTag() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAddressResult) int { return v.RouteTag }).(pulumi.IntOutput)
}

// SDN.
func (o LookupAddressResultOutput) Sdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Sdn }).(pulumi.StringOutput)
}

// Type of addresses to collect.
func (o LookupAddressResultOutput) SdnAddrType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.SdnAddrType }).(pulumi.StringOutput)
}

// SDN Tag.
func (o LookupAddressResultOutput) SdnTag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.SdnTag }).(pulumi.StringOutput)
}

// First IP address (inclusive) in the range for the address.
func (o LookupAddressResultOutput) StartIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.StartIp }).(pulumi.StringOutput)
}

// First MAC address in the range.
func (o LookupAddressResultOutput) StartMac() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.StartMac }).(pulumi.StringOutput)
}

// Sub-type of address.
func (o LookupAddressResultOutput) SubType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.SubType }).(pulumi.StringOutput)
}

// IP address and subnet mask of address.
func (o LookupAddressResultOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Subnet }).(pulumi.StringOutput)
}

// Subnet name.
func (o LookupAddressResultOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.SubnetName }).(pulumi.StringOutput)
}

// Dynamic address matching software version.
func (o LookupAddressResultOutput) SwVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.SwVersion }).(pulumi.StringOutput)
}

// Tag detection level of dynamic address object.
func (o LookupAddressResultOutput) TagDetectionLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.TagDetectionLevel }).(pulumi.StringOutput)
}

// Tag type of dynamic address object.
func (o LookupAddressResultOutput) TagType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.TagType }).(pulumi.StringOutput)
}

// Config object tagging. The structure of `tagging` block is documented below.
func (o LookupAddressResultOutput) Taggings() GetAddressTaggingArrayOutput {
	return o.ApplyT(func(v LookupAddressResult) []GetAddressTagging { return v.Taggings }).(GetAddressTaggingArrayOutput)
}

// Tenant.
func (o LookupAddressResultOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Tenant }).(pulumi.StringOutput)
}

// Type of address.
func (o LookupAddressResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Type }).(pulumi.StringOutput)
}

// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
func (o LookupAddressResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func (o LookupAddressResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAddressResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable address visibility in the GUI.
func (o LookupAddressResultOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Visibility }).(pulumi.StringOutput)
}

// IP address and wildcard netmask.
func (o LookupAddressResultOutput) Wildcard() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Wildcard }).(pulumi.StringOutput)
}

// Fully Qualified Domain Name with wildcard characters.
func (o LookupAddressResultOutput) WildcardFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.WildcardFqdn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAddressResultOutput{})
}
