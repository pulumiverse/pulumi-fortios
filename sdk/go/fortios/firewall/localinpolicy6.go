// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure user defined IPv6 local-in policies.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firewall.NewLocalinpolicy6(ctx, "trname", &firewall.Localinpolicy6Args{
//				Action: pulumi.String("accept"),
//				Dstaddrs: firewall.Localinpolicy6DstaddrArray{
//					&firewall.Localinpolicy6DstaddrArgs{
//						Name: pulumi.String("all"),
//					},
//				},
//				Intf:     pulumi.String("port4"),
//				Policyid: pulumi.Int(1),
//				Schedule: pulumi.String("always"),
//				Services: firewall.Localinpolicy6ServiceArray{
//					&firewall.Localinpolicy6ServiceArgs{
//						Name: pulumi.String("ALL"),
//					},
//				},
//				Srcaddrs: firewall.Localinpolicy6SrcaddrArray{
//					&firewall.Localinpolicy6SrcaddrArgs{
//						Name: pulumi.String("all"),
//					},
//				},
//				Status: pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Firewall LocalInPolicy6 can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/localinpolicy6:Localinpolicy6 labelname {{policyid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/localinpolicy6:Localinpolicy6 labelname {{policyid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Localinpolicy6 struct {
	pulumi.CustomResourceState

	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action pulumi.StringOutput `pulumi:"action"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringOutput `pulumi:"dstaddrNegate"`
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs Localinpolicy6DstaddrArrayOutput `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Incoming interface name from available options.
	Intf pulumi.StringOutput `pulumi:"intf"`
	// User defined local in policy ID.
	Policyid pulumi.IntOutput `pulumi:"policyid"`
	// Schedule object from available options.
	Schedule pulumi.StringOutput `pulumi:"schedule"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringOutput `pulumi:"serviceNegate"`
	// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
	Services Localinpolicy6ServiceArrayOutput `pulumi:"services"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringOutput `pulumi:"srcaddrNegate"`
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs Localinpolicy6SrcaddrArrayOutput `pulumi:"srcaddrs"`
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable the virtual patching feature. Valid values: `enable`, `disable`.
	VirtualPatch pulumi.StringOutput `pulumi:"virtualPatch"`
}

// NewLocalinpolicy6 registers a new resource with the given unique name, arguments, and options.
func NewLocalinpolicy6(ctx *pulumi.Context,
	name string, args *Localinpolicy6Args, opts ...pulumi.ResourceOption) (*Localinpolicy6, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dstaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Dstaddrs'")
	}
	if args.Intf == nil {
		return nil, errors.New("invalid value for required argument 'Intf'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	if args.Services == nil {
		return nil, errors.New("invalid value for required argument 'Services'")
	}
	if args.Srcaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Srcaddrs'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Localinpolicy6
	err := ctx.RegisterResource("fortios:firewall/localinpolicy6:Localinpolicy6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalinpolicy6 gets an existing Localinpolicy6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalinpolicy6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Localinpolicy6State, opts ...pulumi.ResourceOption) (*Localinpolicy6, error) {
	var resource Localinpolicy6
	err := ctx.ReadResource("fortios:firewall/localinpolicy6:Localinpolicy6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Localinpolicy6 resources.
type localinpolicy6State struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action *string `pulumi:"action"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate *string `pulumi:"dstaddrNegate"`
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs []Localinpolicy6Dstaddr `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Incoming interface name from available options.
	Intf *string `pulumi:"intf"`
	// User defined local in policy ID.
	Policyid *int `pulumi:"policyid"`
	// Schedule object from available options.
	Schedule *string `pulumi:"schedule"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate *string `pulumi:"serviceNegate"`
	// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
	Services []Localinpolicy6Service `pulumi:"services"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate *string `pulumi:"srcaddrNegate"`
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs []Localinpolicy6Srcaddr `pulumi:"srcaddrs"`
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable the virtual patching feature. Valid values: `enable`, `disable`.
	VirtualPatch *string `pulumi:"virtualPatch"`
}

type Localinpolicy6State struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringPtrInput
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs Localinpolicy6DstaddrArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Incoming interface name from available options.
	Intf pulumi.StringPtrInput
	// User defined local in policy ID.
	Policyid pulumi.IntPtrInput
	// Schedule object from available options.
	Schedule pulumi.StringPtrInput
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringPtrInput
	// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
	Services Localinpolicy6ServiceArrayInput
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringPtrInput
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs Localinpolicy6SrcaddrArrayInput
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable the virtual patching feature. Valid values: `enable`, `disable`.
	VirtualPatch pulumi.StringPtrInput
}

func (Localinpolicy6State) ElementType() reflect.Type {
	return reflect.TypeOf((*localinpolicy6State)(nil)).Elem()
}

type localinpolicy6Args struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action *string `pulumi:"action"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate *string `pulumi:"dstaddrNegate"`
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs []Localinpolicy6Dstaddr `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Incoming interface name from available options.
	Intf string `pulumi:"intf"`
	// User defined local in policy ID.
	Policyid *int `pulumi:"policyid"`
	// Schedule object from available options.
	Schedule string `pulumi:"schedule"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate *string `pulumi:"serviceNegate"`
	// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
	Services []Localinpolicy6Service `pulumi:"services"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate *string `pulumi:"srcaddrNegate"`
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs []Localinpolicy6Srcaddr `pulumi:"srcaddrs"`
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable the virtual patching feature. Valid values: `enable`, `disable`.
	VirtualPatch *string `pulumi:"virtualPatch"`
}

// The set of arguments for constructing a Localinpolicy6 resource.
type Localinpolicy6Args struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringPtrInput
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs Localinpolicy6DstaddrArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Incoming interface name from available options.
	Intf pulumi.StringInput
	// User defined local in policy ID.
	Policyid pulumi.IntPtrInput
	// Schedule object from available options.
	Schedule pulumi.StringInput
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringPtrInput
	// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
	Services Localinpolicy6ServiceArrayInput
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringPtrInput
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs Localinpolicy6SrcaddrArrayInput
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable the virtual patching feature. Valid values: `enable`, `disable`.
	VirtualPatch pulumi.StringPtrInput
}

func (Localinpolicy6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*localinpolicy6Args)(nil)).Elem()
}

type Localinpolicy6Input interface {
	pulumi.Input

	ToLocalinpolicy6Output() Localinpolicy6Output
	ToLocalinpolicy6OutputWithContext(ctx context.Context) Localinpolicy6Output
}

func (*Localinpolicy6) ElementType() reflect.Type {
	return reflect.TypeOf((**Localinpolicy6)(nil)).Elem()
}

func (i *Localinpolicy6) ToLocalinpolicy6Output() Localinpolicy6Output {
	return i.ToLocalinpolicy6OutputWithContext(context.Background())
}

func (i *Localinpolicy6) ToLocalinpolicy6OutputWithContext(ctx context.Context) Localinpolicy6Output {
	return pulumi.ToOutputWithContext(ctx, i).(Localinpolicy6Output)
}

// Localinpolicy6ArrayInput is an input type that accepts Localinpolicy6Array and Localinpolicy6ArrayOutput values.
// You can construct a concrete instance of `Localinpolicy6ArrayInput` via:
//
//	Localinpolicy6Array{ Localinpolicy6Args{...} }
type Localinpolicy6ArrayInput interface {
	pulumi.Input

	ToLocalinpolicy6ArrayOutput() Localinpolicy6ArrayOutput
	ToLocalinpolicy6ArrayOutputWithContext(context.Context) Localinpolicy6ArrayOutput
}

type Localinpolicy6Array []Localinpolicy6Input

func (Localinpolicy6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Localinpolicy6)(nil)).Elem()
}

func (i Localinpolicy6Array) ToLocalinpolicy6ArrayOutput() Localinpolicy6ArrayOutput {
	return i.ToLocalinpolicy6ArrayOutputWithContext(context.Background())
}

func (i Localinpolicy6Array) ToLocalinpolicy6ArrayOutputWithContext(ctx context.Context) Localinpolicy6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Localinpolicy6ArrayOutput)
}

// Localinpolicy6MapInput is an input type that accepts Localinpolicy6Map and Localinpolicy6MapOutput values.
// You can construct a concrete instance of `Localinpolicy6MapInput` via:
//
//	Localinpolicy6Map{ "key": Localinpolicy6Args{...} }
type Localinpolicy6MapInput interface {
	pulumi.Input

	ToLocalinpolicy6MapOutput() Localinpolicy6MapOutput
	ToLocalinpolicy6MapOutputWithContext(context.Context) Localinpolicy6MapOutput
}

type Localinpolicy6Map map[string]Localinpolicy6Input

func (Localinpolicy6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Localinpolicy6)(nil)).Elem()
}

func (i Localinpolicy6Map) ToLocalinpolicy6MapOutput() Localinpolicy6MapOutput {
	return i.ToLocalinpolicy6MapOutputWithContext(context.Background())
}

func (i Localinpolicy6Map) ToLocalinpolicy6MapOutputWithContext(ctx context.Context) Localinpolicy6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Localinpolicy6MapOutput)
}

type Localinpolicy6Output struct{ *pulumi.OutputState }

func (Localinpolicy6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**Localinpolicy6)(nil)).Elem()
}

func (o Localinpolicy6Output) ToLocalinpolicy6Output() Localinpolicy6Output {
	return o
}

func (o Localinpolicy6Output) ToLocalinpolicy6OutputWithContext(ctx context.Context) Localinpolicy6Output {
	return o
}

// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
func (o Localinpolicy6Output) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Comment.
func (o Localinpolicy6Output) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
func (o Localinpolicy6Output) DstaddrNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringOutput { return v.DstaddrNegate }).(pulumi.StringOutput)
}

// Destination address object from available options. The structure of `dstaddr` block is documented below.
func (o Localinpolicy6Output) Dstaddrs() Localinpolicy6DstaddrArrayOutput {
	return o.ApplyT(func(v *Localinpolicy6) Localinpolicy6DstaddrArrayOutput { return v.Dstaddrs }).(Localinpolicy6DstaddrArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o Localinpolicy6Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o Localinpolicy6Output) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Incoming interface name from available options.
func (o Localinpolicy6Output) Intf() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringOutput { return v.Intf }).(pulumi.StringOutput)
}

// User defined local in policy ID.
func (o Localinpolicy6Output) Policyid() pulumi.IntOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.IntOutput { return v.Policyid }).(pulumi.IntOutput)
}

// Schedule object from available options.
func (o Localinpolicy6Output) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringOutput { return v.Schedule }).(pulumi.StringOutput)
}

// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
func (o Localinpolicy6Output) ServiceNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringOutput { return v.ServiceNegate }).(pulumi.StringOutput)
}

// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
func (o Localinpolicy6Output) Services() Localinpolicy6ServiceArrayOutput {
	return o.ApplyT(func(v *Localinpolicy6) Localinpolicy6ServiceArrayOutput { return v.Services }).(Localinpolicy6ServiceArrayOutput)
}

// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
func (o Localinpolicy6Output) SrcaddrNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringOutput { return v.SrcaddrNegate }).(pulumi.StringOutput)
}

// Source address object from available options. The structure of `srcaddr` block is documented below.
func (o Localinpolicy6Output) Srcaddrs() Localinpolicy6SrcaddrArrayOutput {
	return o.ApplyT(func(v *Localinpolicy6) Localinpolicy6SrcaddrArrayOutput { return v.Srcaddrs }).(Localinpolicy6SrcaddrArrayOutput)
}

// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
func (o Localinpolicy6Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
func (o Localinpolicy6Output) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Localinpolicy6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable the virtual patching feature. Valid values: `enable`, `disable`.
func (o Localinpolicy6Output) VirtualPatch() pulumi.StringOutput {
	return o.ApplyT(func(v *Localinpolicy6) pulumi.StringOutput { return v.VirtualPatch }).(pulumi.StringOutput)
}

type Localinpolicy6ArrayOutput struct{ *pulumi.OutputState }

func (Localinpolicy6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Localinpolicy6)(nil)).Elem()
}

func (o Localinpolicy6ArrayOutput) ToLocalinpolicy6ArrayOutput() Localinpolicy6ArrayOutput {
	return o
}

func (o Localinpolicy6ArrayOutput) ToLocalinpolicy6ArrayOutputWithContext(ctx context.Context) Localinpolicy6ArrayOutput {
	return o
}

func (o Localinpolicy6ArrayOutput) Index(i pulumi.IntInput) Localinpolicy6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Localinpolicy6 {
		return vs[0].([]*Localinpolicy6)[vs[1].(int)]
	}).(Localinpolicy6Output)
}

type Localinpolicy6MapOutput struct{ *pulumi.OutputState }

func (Localinpolicy6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Localinpolicy6)(nil)).Elem()
}

func (o Localinpolicy6MapOutput) ToLocalinpolicy6MapOutput() Localinpolicy6MapOutput {
	return o
}

func (o Localinpolicy6MapOutput) ToLocalinpolicy6MapOutputWithContext(ctx context.Context) Localinpolicy6MapOutput {
	return o
}

func (o Localinpolicy6MapOutput) MapIndex(k pulumi.StringInput) Localinpolicy6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Localinpolicy6 {
		return vs[0].(map[string]*Localinpolicy6)[vs[1].(string)]
	}).(Localinpolicy6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Localinpolicy6Input)(nil)).Elem(), &Localinpolicy6{})
	pulumi.RegisterInputType(reflect.TypeOf((*Localinpolicy6ArrayInput)(nil)).Elem(), Localinpolicy6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*Localinpolicy6MapInput)(nil)).Elem(), Localinpolicy6Map{})
	pulumi.RegisterOutputType(Localinpolicy6Output{})
	pulumi.RegisterOutputType(Localinpolicy6ArrayOutput{})
	pulumi.RegisterOutputType(Localinpolicy6MapOutput{})
}
