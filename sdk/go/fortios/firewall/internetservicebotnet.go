// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Show Internet Service botnet. Applies to FortiOS Version `>= 6.4.0`.
//
// ## Import
//
// Firewall InternetServiceBotnet can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/internetservicebotnet:Internetservicebotnet labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/internetservicebotnet:Internetservicebotnet labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Internetservicebotnet struct {
	pulumi.CustomResourceState

	// Internet Service Botnet ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Internet Service Botnet name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewInternetservicebotnet registers a new resource with the given unique name, arguments, and options.
func NewInternetservicebotnet(ctx *pulumi.Context,
	name string, args *InternetservicebotnetArgs, opts ...pulumi.ResourceOption) (*Internetservicebotnet, error) {
	if args == nil {
		args = &InternetservicebotnetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Internetservicebotnet
	err := ctx.RegisterResource("fortios:firewall/internetservicebotnet:Internetservicebotnet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInternetservicebotnet gets an existing Internetservicebotnet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInternetservicebotnet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InternetservicebotnetState, opts ...pulumi.ResourceOption) (*Internetservicebotnet, error) {
	var resource Internetservicebotnet
	err := ctx.ReadResource("fortios:firewall/internetservicebotnet:Internetservicebotnet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Internetservicebotnet resources.
type internetservicebotnetState struct {
	// Internet Service Botnet ID.
	Fosid *int `pulumi:"fosid"`
	// Internet Service Botnet name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type InternetservicebotnetState struct {
	// Internet Service Botnet ID.
	Fosid pulumi.IntPtrInput
	// Internet Service Botnet name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (InternetservicebotnetState) ElementType() reflect.Type {
	return reflect.TypeOf((*internetservicebotnetState)(nil)).Elem()
}

type internetservicebotnetArgs struct {
	// Internet Service Botnet ID.
	Fosid *int `pulumi:"fosid"`
	// Internet Service Botnet name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Internetservicebotnet resource.
type InternetservicebotnetArgs struct {
	// Internet Service Botnet ID.
	Fosid pulumi.IntPtrInput
	// Internet Service Botnet name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (InternetservicebotnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*internetservicebotnetArgs)(nil)).Elem()
}

type InternetservicebotnetInput interface {
	pulumi.Input

	ToInternetservicebotnetOutput() InternetservicebotnetOutput
	ToInternetservicebotnetOutputWithContext(ctx context.Context) InternetservicebotnetOutput
}

func (*Internetservicebotnet) ElementType() reflect.Type {
	return reflect.TypeOf((**Internetservicebotnet)(nil)).Elem()
}

func (i *Internetservicebotnet) ToInternetservicebotnetOutput() InternetservicebotnetOutput {
	return i.ToInternetservicebotnetOutputWithContext(context.Background())
}

func (i *Internetservicebotnet) ToInternetservicebotnetOutputWithContext(ctx context.Context) InternetservicebotnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicebotnetOutput)
}

// InternetservicebotnetArrayInput is an input type that accepts InternetservicebotnetArray and InternetservicebotnetArrayOutput values.
// You can construct a concrete instance of `InternetservicebotnetArrayInput` via:
//
//	InternetservicebotnetArray{ InternetservicebotnetArgs{...} }
type InternetservicebotnetArrayInput interface {
	pulumi.Input

	ToInternetservicebotnetArrayOutput() InternetservicebotnetArrayOutput
	ToInternetservicebotnetArrayOutputWithContext(context.Context) InternetservicebotnetArrayOutput
}

type InternetservicebotnetArray []InternetservicebotnetInput

func (InternetservicebotnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Internetservicebotnet)(nil)).Elem()
}

func (i InternetservicebotnetArray) ToInternetservicebotnetArrayOutput() InternetservicebotnetArrayOutput {
	return i.ToInternetservicebotnetArrayOutputWithContext(context.Background())
}

func (i InternetservicebotnetArray) ToInternetservicebotnetArrayOutputWithContext(ctx context.Context) InternetservicebotnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicebotnetArrayOutput)
}

// InternetservicebotnetMapInput is an input type that accepts InternetservicebotnetMap and InternetservicebotnetMapOutput values.
// You can construct a concrete instance of `InternetservicebotnetMapInput` via:
//
//	InternetservicebotnetMap{ "key": InternetservicebotnetArgs{...} }
type InternetservicebotnetMapInput interface {
	pulumi.Input

	ToInternetservicebotnetMapOutput() InternetservicebotnetMapOutput
	ToInternetservicebotnetMapOutputWithContext(context.Context) InternetservicebotnetMapOutput
}

type InternetservicebotnetMap map[string]InternetservicebotnetInput

func (InternetservicebotnetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Internetservicebotnet)(nil)).Elem()
}

func (i InternetservicebotnetMap) ToInternetservicebotnetMapOutput() InternetservicebotnetMapOutput {
	return i.ToInternetservicebotnetMapOutputWithContext(context.Background())
}

func (i InternetservicebotnetMap) ToInternetservicebotnetMapOutputWithContext(ctx context.Context) InternetservicebotnetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicebotnetMapOutput)
}

type InternetservicebotnetOutput struct{ *pulumi.OutputState }

func (InternetservicebotnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Internetservicebotnet)(nil)).Elem()
}

func (o InternetservicebotnetOutput) ToInternetservicebotnetOutput() InternetservicebotnetOutput {
	return o
}

func (o InternetservicebotnetOutput) ToInternetservicebotnetOutputWithContext(ctx context.Context) InternetservicebotnetOutput {
	return o
}

// Internet Service Botnet ID.
func (o InternetservicebotnetOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *Internetservicebotnet) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Internet Service Botnet name.
func (o InternetservicebotnetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Internetservicebotnet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o InternetservicebotnetOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Internetservicebotnet) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type InternetservicebotnetArrayOutput struct{ *pulumi.OutputState }

func (InternetservicebotnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Internetservicebotnet)(nil)).Elem()
}

func (o InternetservicebotnetArrayOutput) ToInternetservicebotnetArrayOutput() InternetservicebotnetArrayOutput {
	return o
}

func (o InternetservicebotnetArrayOutput) ToInternetservicebotnetArrayOutputWithContext(ctx context.Context) InternetservicebotnetArrayOutput {
	return o
}

func (o InternetservicebotnetArrayOutput) Index(i pulumi.IntInput) InternetservicebotnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Internetservicebotnet {
		return vs[0].([]*Internetservicebotnet)[vs[1].(int)]
	}).(InternetservicebotnetOutput)
}

type InternetservicebotnetMapOutput struct{ *pulumi.OutputState }

func (InternetservicebotnetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Internetservicebotnet)(nil)).Elem()
}

func (o InternetservicebotnetMapOutput) ToInternetservicebotnetMapOutput() InternetservicebotnetMapOutput {
	return o
}

func (o InternetservicebotnetMapOutput) ToInternetservicebotnetMapOutputWithContext(ctx context.Context) InternetservicebotnetMapOutput {
	return o
}

func (o InternetservicebotnetMapOutput) MapIndex(k pulumi.StringInput) InternetservicebotnetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Internetservicebotnet {
		return vs[0].(map[string]*Internetservicebotnet)[vs[1].(string)]
	}).(InternetservicebotnetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicebotnetInput)(nil)).Elem(), &Internetservicebotnet{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicebotnetArrayInput)(nil)).Elem(), InternetservicebotnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicebotnetMapInput)(nil)).Elem(), InternetservicebotnetMap{})
	pulumi.RegisterOutputType(InternetservicebotnetOutput{})
	pulumi.RegisterOutputType(InternetservicebotnetArrayOutput{})
	pulumi.RegisterOutputType(InternetservicebotnetMapOutput{})
}
