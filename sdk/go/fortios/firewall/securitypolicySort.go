// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

type SecuritypolicySort struct {
	pulumi.CustomResourceState

	Comment          pulumi.StringPtrOutput                       `pulumi:"comment"`
	ForceRecreate    pulumi.StringOutput                          `pulumi:"forceRecreate"`
	ManualOrders     pulumi.StringArrayOutput                     `pulumi:"manualOrders"`
	Sortby           pulumi.StringOutput                          `pulumi:"sortby"`
	Sortdirection    pulumi.StringOutput                          `pulumi:"sortdirection"`
	StatePolicyLists SecuritypolicySortStatePolicyListArrayOutput `pulumi:"statePolicyLists"`
	Status           pulumi.StringOutput                          `pulumi:"status"`
	Vdomparam        pulumi.StringPtrOutput                       `pulumi:"vdomparam"`
}

// NewSecuritypolicySort registers a new resource with the given unique name, arguments, and options.
func NewSecuritypolicySort(ctx *pulumi.Context,
	name string, args *SecuritypolicySortArgs, opts ...pulumi.ResourceOption) (*SecuritypolicySort, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Sortby == nil {
		return nil, errors.New("invalid value for required argument 'Sortby'")
	}
	if args.Sortdirection == nil {
		return nil, errors.New("invalid value for required argument 'Sortdirection'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecuritypolicySort
	err := ctx.RegisterResource("fortios:firewall/securitypolicySort:SecuritypolicySort", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecuritypolicySort gets an existing SecuritypolicySort resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecuritypolicySort(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecuritypolicySortState, opts ...pulumi.ResourceOption) (*SecuritypolicySort, error) {
	var resource SecuritypolicySort
	err := ctx.ReadResource("fortios:firewall/securitypolicySort:SecuritypolicySort", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecuritypolicySort resources.
type securitypolicySortState struct {
	Comment          *string                             `pulumi:"comment"`
	ForceRecreate    *string                             `pulumi:"forceRecreate"`
	ManualOrders     []string                            `pulumi:"manualOrders"`
	Sortby           *string                             `pulumi:"sortby"`
	Sortdirection    *string                             `pulumi:"sortdirection"`
	StatePolicyLists []SecuritypolicySortStatePolicyList `pulumi:"statePolicyLists"`
	Status           *string                             `pulumi:"status"`
	Vdomparam        *string                             `pulumi:"vdomparam"`
}

type SecuritypolicySortState struct {
	Comment          pulumi.StringPtrInput
	ForceRecreate    pulumi.StringPtrInput
	ManualOrders     pulumi.StringArrayInput
	Sortby           pulumi.StringPtrInput
	Sortdirection    pulumi.StringPtrInput
	StatePolicyLists SecuritypolicySortStatePolicyListArrayInput
	Status           pulumi.StringPtrInput
	Vdomparam        pulumi.StringPtrInput
}

func (SecuritypolicySortState) ElementType() reflect.Type {
	return reflect.TypeOf((*securitypolicySortState)(nil)).Elem()
}

type securitypolicySortArgs struct {
	Comment       *string  `pulumi:"comment"`
	ForceRecreate *string  `pulumi:"forceRecreate"`
	ManualOrders  []string `pulumi:"manualOrders"`
	Sortby        string   `pulumi:"sortby"`
	Sortdirection string   `pulumi:"sortdirection"`
	Status        *string  `pulumi:"status"`
	Vdomparam     *string  `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SecuritypolicySort resource.
type SecuritypolicySortArgs struct {
	Comment       pulumi.StringPtrInput
	ForceRecreate pulumi.StringPtrInput
	ManualOrders  pulumi.StringArrayInput
	Sortby        pulumi.StringInput
	Sortdirection pulumi.StringInput
	Status        pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
}

func (SecuritypolicySortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securitypolicySortArgs)(nil)).Elem()
}

type SecuritypolicySortInput interface {
	pulumi.Input

	ToSecuritypolicySortOutput() SecuritypolicySortOutput
	ToSecuritypolicySortOutputWithContext(ctx context.Context) SecuritypolicySortOutput
}

func (*SecuritypolicySort) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritypolicySort)(nil)).Elem()
}

func (i *SecuritypolicySort) ToSecuritypolicySortOutput() SecuritypolicySortOutput {
	return i.ToSecuritypolicySortOutputWithContext(context.Background())
}

func (i *SecuritypolicySort) ToSecuritypolicySortOutputWithContext(ctx context.Context) SecuritypolicySortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySortOutput)
}

// SecuritypolicySortArrayInput is an input type that accepts SecuritypolicySortArray and SecuritypolicySortArrayOutput values.
// You can construct a concrete instance of `SecuritypolicySortArrayInput` via:
//
//	SecuritypolicySortArray{ SecuritypolicySortArgs{...} }
type SecuritypolicySortArrayInput interface {
	pulumi.Input

	ToSecuritypolicySortArrayOutput() SecuritypolicySortArrayOutput
	ToSecuritypolicySortArrayOutputWithContext(context.Context) SecuritypolicySortArrayOutput
}

type SecuritypolicySortArray []SecuritypolicySortInput

func (SecuritypolicySortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecuritypolicySort)(nil)).Elem()
}

func (i SecuritypolicySortArray) ToSecuritypolicySortArrayOutput() SecuritypolicySortArrayOutput {
	return i.ToSecuritypolicySortArrayOutputWithContext(context.Background())
}

func (i SecuritypolicySortArray) ToSecuritypolicySortArrayOutputWithContext(ctx context.Context) SecuritypolicySortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySortArrayOutput)
}

// SecuritypolicySortMapInput is an input type that accepts SecuritypolicySortMap and SecuritypolicySortMapOutput values.
// You can construct a concrete instance of `SecuritypolicySortMapInput` via:
//
//	SecuritypolicySortMap{ "key": SecuritypolicySortArgs{...} }
type SecuritypolicySortMapInput interface {
	pulumi.Input

	ToSecuritypolicySortMapOutput() SecuritypolicySortMapOutput
	ToSecuritypolicySortMapOutputWithContext(context.Context) SecuritypolicySortMapOutput
}

type SecuritypolicySortMap map[string]SecuritypolicySortInput

func (SecuritypolicySortMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecuritypolicySort)(nil)).Elem()
}

func (i SecuritypolicySortMap) ToSecuritypolicySortMapOutput() SecuritypolicySortMapOutput {
	return i.ToSecuritypolicySortMapOutputWithContext(context.Background())
}

func (i SecuritypolicySortMap) ToSecuritypolicySortMapOutputWithContext(ctx context.Context) SecuritypolicySortMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritypolicySortMapOutput)
}

type SecuritypolicySortOutput struct{ *pulumi.OutputState }

func (SecuritypolicySortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritypolicySort)(nil)).Elem()
}

func (o SecuritypolicySortOutput) ToSecuritypolicySortOutput() SecuritypolicySortOutput {
	return o
}

func (o SecuritypolicySortOutput) ToSecuritypolicySortOutputWithContext(ctx context.Context) SecuritypolicySortOutput {
	return o
}

func (o SecuritypolicySortOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecuritypolicySort) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o SecuritypolicySortOutput) ForceRecreate() pulumi.StringOutput {
	return o.ApplyT(func(v *SecuritypolicySort) pulumi.StringOutput { return v.ForceRecreate }).(pulumi.StringOutput)
}

func (o SecuritypolicySortOutput) ManualOrders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecuritypolicySort) pulumi.StringArrayOutput { return v.ManualOrders }).(pulumi.StringArrayOutput)
}

func (o SecuritypolicySortOutput) Sortby() pulumi.StringOutput {
	return o.ApplyT(func(v *SecuritypolicySort) pulumi.StringOutput { return v.Sortby }).(pulumi.StringOutput)
}

func (o SecuritypolicySortOutput) Sortdirection() pulumi.StringOutput {
	return o.ApplyT(func(v *SecuritypolicySort) pulumi.StringOutput { return v.Sortdirection }).(pulumi.StringOutput)
}

func (o SecuritypolicySortOutput) StatePolicyLists() SecuritypolicySortStatePolicyListArrayOutput {
	return o.ApplyT(func(v *SecuritypolicySort) SecuritypolicySortStatePolicyListArrayOutput { return v.StatePolicyLists }).(SecuritypolicySortStatePolicyListArrayOutput)
}

func (o SecuritypolicySortOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SecuritypolicySort) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SecuritypolicySortOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecuritypolicySort) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SecuritypolicySortArrayOutput struct{ *pulumi.OutputState }

func (SecuritypolicySortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecuritypolicySort)(nil)).Elem()
}

func (o SecuritypolicySortArrayOutput) ToSecuritypolicySortArrayOutput() SecuritypolicySortArrayOutput {
	return o
}

func (o SecuritypolicySortArrayOutput) ToSecuritypolicySortArrayOutputWithContext(ctx context.Context) SecuritypolicySortArrayOutput {
	return o
}

func (o SecuritypolicySortArrayOutput) Index(i pulumi.IntInput) SecuritypolicySortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecuritypolicySort {
		return vs[0].([]*SecuritypolicySort)[vs[1].(int)]
	}).(SecuritypolicySortOutput)
}

type SecuritypolicySortMapOutput struct{ *pulumi.OutputState }

func (SecuritypolicySortMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecuritypolicySort)(nil)).Elem()
}

func (o SecuritypolicySortMapOutput) ToSecuritypolicySortMapOutput() SecuritypolicySortMapOutput {
	return o
}

func (o SecuritypolicySortMapOutput) ToSecuritypolicySortMapOutputWithContext(ctx context.Context) SecuritypolicySortMapOutput {
	return o
}

func (o SecuritypolicySortMapOutput) MapIndex(k pulumi.StringInput) SecuritypolicySortOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecuritypolicySort {
		return vs[0].(map[string]*SecuritypolicySort)[vs[1].(string)]
	}).(SecuritypolicySortOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySortInput)(nil)).Elem(), &SecuritypolicySort{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySortArrayInput)(nil)).Elem(), SecuritypolicySortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritypolicySortMapInput)(nil)).Elem(), SecuritypolicySortMap{})
	pulumi.RegisterOutputType(SecuritypolicySortOutput{})
	pulumi.RegisterOutputType(SecuritypolicySortArrayOutput{})
	pulumi.RegisterOutputType(SecuritypolicySortMapOutput{})
}
