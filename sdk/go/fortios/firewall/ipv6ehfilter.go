// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure IPv6 extension header filter.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firewall.NewIpv6ehfilter(ctx, "trname", &firewall.Ipv6ehfilterArgs{
//				Auth:     pulumi.String("disable"),
//				DestOpt:  pulumi.String("disable"),
//				Fragment: pulumi.String("disable"),
//				HopOpt:   pulumi.String("disable"),
//				NoNext:   pulumi.String("disable"),
//				Routing:  pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Firewall Ipv6EhFilter can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/ipv6ehfilter:Ipv6ehfilter labelname FirewallIpv6EhFilter
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/ipv6ehfilter:Ipv6ehfilter labelname FirewallIpv6EhFilter
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Ipv6ehfilter struct {
	pulumi.CustomResourceState

	// Enable/disable blocking packets with the Authentication header (default = disable). Valid values: `enable`, `disable`.
	Auth pulumi.StringOutput `pulumi:"auth"`
	// Enable/disable blocking packets with Destination Options headers (default = disable). Valid values: `enable`, `disable`.
	DestOpt pulumi.StringOutput `pulumi:"destOpt"`
	// Enable/disable blocking packets with the Fragment header (default = disable). Valid values: `enable`, `disable`.
	Fragment pulumi.StringOutput `pulumi:"fragment"`
	// Block specific Hop-by-Hop and/or Destination Option types (max. 7 types, each between 0 and 255).
	HdoptType pulumi.IntOutput `pulumi:"hdoptType"`
	// Enable/disable blocking packets with the Hop-by-Hop Options header (default = disable). Valid values: `enable`, `disable`.
	HopOpt pulumi.StringOutput `pulumi:"hopOpt"`
	// Enable/disable blocking packets with the No Next header (default = disable) Valid values: `enable`, `disable`.
	NoNext pulumi.StringOutput `pulumi:"noNext"`
	// Enable/disable blocking packets with Routing headers (default = enable). Valid values: `enable`, `disable`.
	Routing pulumi.StringOutput `pulumi:"routing"`
	// Block specific Routing header types (max. 7 types, each between 0 and 255, default =  0).
	RoutingType pulumi.IntOutput `pulumi:"routingType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewIpv6ehfilter registers a new resource with the given unique name, arguments, and options.
func NewIpv6ehfilter(ctx *pulumi.Context,
	name string, args *Ipv6ehfilterArgs, opts ...pulumi.ResourceOption) (*Ipv6ehfilter, error) {
	if args == nil {
		args = &Ipv6ehfilterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ipv6ehfilter
	err := ctx.RegisterResource("fortios:firewall/ipv6ehfilter:Ipv6ehfilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpv6ehfilter gets an existing Ipv6ehfilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpv6ehfilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ipv6ehfilterState, opts ...pulumi.ResourceOption) (*Ipv6ehfilter, error) {
	var resource Ipv6ehfilter
	err := ctx.ReadResource("fortios:firewall/ipv6ehfilter:Ipv6ehfilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ipv6ehfilter resources.
type ipv6ehfilterState struct {
	// Enable/disable blocking packets with the Authentication header (default = disable). Valid values: `enable`, `disable`.
	Auth *string `pulumi:"auth"`
	// Enable/disable blocking packets with Destination Options headers (default = disable). Valid values: `enable`, `disable`.
	DestOpt *string `pulumi:"destOpt"`
	// Enable/disable blocking packets with the Fragment header (default = disable). Valid values: `enable`, `disable`.
	Fragment *string `pulumi:"fragment"`
	// Block specific Hop-by-Hop and/or Destination Option types (max. 7 types, each between 0 and 255).
	HdoptType *int `pulumi:"hdoptType"`
	// Enable/disable blocking packets with the Hop-by-Hop Options header (default = disable). Valid values: `enable`, `disable`.
	HopOpt *string `pulumi:"hopOpt"`
	// Enable/disable blocking packets with the No Next header (default = disable) Valid values: `enable`, `disable`.
	NoNext *string `pulumi:"noNext"`
	// Enable/disable blocking packets with Routing headers (default = enable). Valid values: `enable`, `disable`.
	Routing *string `pulumi:"routing"`
	// Block specific Routing header types (max. 7 types, each between 0 and 255, default =  0).
	RoutingType *int `pulumi:"routingType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Ipv6ehfilterState struct {
	// Enable/disable blocking packets with the Authentication header (default = disable). Valid values: `enable`, `disable`.
	Auth pulumi.StringPtrInput
	// Enable/disable blocking packets with Destination Options headers (default = disable). Valid values: `enable`, `disable`.
	DestOpt pulumi.StringPtrInput
	// Enable/disable blocking packets with the Fragment header (default = disable). Valid values: `enable`, `disable`.
	Fragment pulumi.StringPtrInput
	// Block specific Hop-by-Hop and/or Destination Option types (max. 7 types, each between 0 and 255).
	HdoptType pulumi.IntPtrInput
	// Enable/disable blocking packets with the Hop-by-Hop Options header (default = disable). Valid values: `enable`, `disable`.
	HopOpt pulumi.StringPtrInput
	// Enable/disable blocking packets with the No Next header (default = disable) Valid values: `enable`, `disable`.
	NoNext pulumi.StringPtrInput
	// Enable/disable blocking packets with Routing headers (default = enable). Valid values: `enable`, `disable`.
	Routing pulumi.StringPtrInput
	// Block specific Routing header types (max. 7 types, each between 0 and 255, default =  0).
	RoutingType pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Ipv6ehfilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv6ehfilterState)(nil)).Elem()
}

type ipv6ehfilterArgs struct {
	// Enable/disable blocking packets with the Authentication header (default = disable). Valid values: `enable`, `disable`.
	Auth *string `pulumi:"auth"`
	// Enable/disable blocking packets with Destination Options headers (default = disable). Valid values: `enable`, `disable`.
	DestOpt *string `pulumi:"destOpt"`
	// Enable/disable blocking packets with the Fragment header (default = disable). Valid values: `enable`, `disable`.
	Fragment *string `pulumi:"fragment"`
	// Block specific Hop-by-Hop and/or Destination Option types (max. 7 types, each between 0 and 255).
	HdoptType *int `pulumi:"hdoptType"`
	// Enable/disable blocking packets with the Hop-by-Hop Options header (default = disable). Valid values: `enable`, `disable`.
	HopOpt *string `pulumi:"hopOpt"`
	// Enable/disable blocking packets with the No Next header (default = disable) Valid values: `enable`, `disable`.
	NoNext *string `pulumi:"noNext"`
	// Enable/disable blocking packets with Routing headers (default = enable). Valid values: `enable`, `disable`.
	Routing *string `pulumi:"routing"`
	// Block specific Routing header types (max. 7 types, each between 0 and 255, default =  0).
	RoutingType *int `pulumi:"routingType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Ipv6ehfilter resource.
type Ipv6ehfilterArgs struct {
	// Enable/disable blocking packets with the Authentication header (default = disable). Valid values: `enable`, `disable`.
	Auth pulumi.StringPtrInput
	// Enable/disable blocking packets with Destination Options headers (default = disable). Valid values: `enable`, `disable`.
	DestOpt pulumi.StringPtrInput
	// Enable/disable blocking packets with the Fragment header (default = disable). Valid values: `enable`, `disable`.
	Fragment pulumi.StringPtrInput
	// Block specific Hop-by-Hop and/or Destination Option types (max. 7 types, each between 0 and 255).
	HdoptType pulumi.IntPtrInput
	// Enable/disable blocking packets with the Hop-by-Hop Options header (default = disable). Valid values: `enable`, `disable`.
	HopOpt pulumi.StringPtrInput
	// Enable/disable blocking packets with the No Next header (default = disable) Valid values: `enable`, `disable`.
	NoNext pulumi.StringPtrInput
	// Enable/disable blocking packets with Routing headers (default = enable). Valid values: `enable`, `disable`.
	Routing pulumi.StringPtrInput
	// Block specific Routing header types (max. 7 types, each between 0 and 255, default =  0).
	RoutingType pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Ipv6ehfilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv6ehfilterArgs)(nil)).Elem()
}

type Ipv6ehfilterInput interface {
	pulumi.Input

	ToIpv6ehfilterOutput() Ipv6ehfilterOutput
	ToIpv6ehfilterOutputWithContext(ctx context.Context) Ipv6ehfilterOutput
}

func (*Ipv6ehfilter) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ehfilter)(nil)).Elem()
}

func (i *Ipv6ehfilter) ToIpv6ehfilterOutput() Ipv6ehfilterOutput {
	return i.ToIpv6ehfilterOutputWithContext(context.Background())
}

func (i *Ipv6ehfilter) ToIpv6ehfilterOutputWithContext(ctx context.Context) Ipv6ehfilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ehfilterOutput)
}

// Ipv6ehfilterArrayInput is an input type that accepts Ipv6ehfilterArray and Ipv6ehfilterArrayOutput values.
// You can construct a concrete instance of `Ipv6ehfilterArrayInput` via:
//
//	Ipv6ehfilterArray{ Ipv6ehfilterArgs{...} }
type Ipv6ehfilterArrayInput interface {
	pulumi.Input

	ToIpv6ehfilterArrayOutput() Ipv6ehfilterArrayOutput
	ToIpv6ehfilterArrayOutputWithContext(context.Context) Ipv6ehfilterArrayOutput
}

type Ipv6ehfilterArray []Ipv6ehfilterInput

func (Ipv6ehfilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv6ehfilter)(nil)).Elem()
}

func (i Ipv6ehfilterArray) ToIpv6ehfilterArrayOutput() Ipv6ehfilterArrayOutput {
	return i.ToIpv6ehfilterArrayOutputWithContext(context.Background())
}

func (i Ipv6ehfilterArray) ToIpv6ehfilterArrayOutputWithContext(ctx context.Context) Ipv6ehfilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ehfilterArrayOutput)
}

// Ipv6ehfilterMapInput is an input type that accepts Ipv6ehfilterMap and Ipv6ehfilterMapOutput values.
// You can construct a concrete instance of `Ipv6ehfilterMapInput` via:
//
//	Ipv6ehfilterMap{ "key": Ipv6ehfilterArgs{...} }
type Ipv6ehfilterMapInput interface {
	pulumi.Input

	ToIpv6ehfilterMapOutput() Ipv6ehfilterMapOutput
	ToIpv6ehfilterMapOutputWithContext(context.Context) Ipv6ehfilterMapOutput
}

type Ipv6ehfilterMap map[string]Ipv6ehfilterInput

func (Ipv6ehfilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv6ehfilter)(nil)).Elem()
}

func (i Ipv6ehfilterMap) ToIpv6ehfilterMapOutput() Ipv6ehfilterMapOutput {
	return i.ToIpv6ehfilterMapOutputWithContext(context.Background())
}

func (i Ipv6ehfilterMap) ToIpv6ehfilterMapOutputWithContext(ctx context.Context) Ipv6ehfilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ehfilterMapOutput)
}

type Ipv6ehfilterOutput struct{ *pulumi.OutputState }

func (Ipv6ehfilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ehfilter)(nil)).Elem()
}

func (o Ipv6ehfilterOutput) ToIpv6ehfilterOutput() Ipv6ehfilterOutput {
	return o
}

func (o Ipv6ehfilterOutput) ToIpv6ehfilterOutputWithContext(ctx context.Context) Ipv6ehfilterOutput {
	return o
}

// Enable/disable blocking packets with the Authentication header (default = disable). Valid values: `enable`, `disable`.
func (o Ipv6ehfilterOutput) Auth() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6ehfilter) pulumi.StringOutput { return v.Auth }).(pulumi.StringOutput)
}

// Enable/disable blocking packets with Destination Options headers (default = disable). Valid values: `enable`, `disable`.
func (o Ipv6ehfilterOutput) DestOpt() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6ehfilter) pulumi.StringOutput { return v.DestOpt }).(pulumi.StringOutput)
}

// Enable/disable blocking packets with the Fragment header (default = disable). Valid values: `enable`, `disable`.
func (o Ipv6ehfilterOutput) Fragment() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6ehfilter) pulumi.StringOutput { return v.Fragment }).(pulumi.StringOutput)
}

// Block specific Hop-by-Hop and/or Destination Option types (max. 7 types, each between 0 and 255).
func (o Ipv6ehfilterOutput) HdoptType() pulumi.IntOutput {
	return o.ApplyT(func(v *Ipv6ehfilter) pulumi.IntOutput { return v.HdoptType }).(pulumi.IntOutput)
}

// Enable/disable blocking packets with the Hop-by-Hop Options header (default = disable). Valid values: `enable`, `disable`.
func (o Ipv6ehfilterOutput) HopOpt() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6ehfilter) pulumi.StringOutput { return v.HopOpt }).(pulumi.StringOutput)
}

// Enable/disable blocking packets with the No Next header (default = disable) Valid values: `enable`, `disable`.
func (o Ipv6ehfilterOutput) NoNext() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6ehfilter) pulumi.StringOutput { return v.NoNext }).(pulumi.StringOutput)
}

// Enable/disable blocking packets with Routing headers (default = enable). Valid values: `enable`, `disable`.
func (o Ipv6ehfilterOutput) Routing() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6ehfilter) pulumi.StringOutput { return v.Routing }).(pulumi.StringOutput)
}

// Block specific Routing header types (max. 7 types, each between 0 and 255, default =  0).
func (o Ipv6ehfilterOutput) RoutingType() pulumi.IntOutput {
	return o.ApplyT(func(v *Ipv6ehfilter) pulumi.IntOutput { return v.RoutingType }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Ipv6ehfilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ehfilter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Ipv6ehfilterArrayOutput struct{ *pulumi.OutputState }

func (Ipv6ehfilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv6ehfilter)(nil)).Elem()
}

func (o Ipv6ehfilterArrayOutput) ToIpv6ehfilterArrayOutput() Ipv6ehfilterArrayOutput {
	return o
}

func (o Ipv6ehfilterArrayOutput) ToIpv6ehfilterArrayOutputWithContext(ctx context.Context) Ipv6ehfilterArrayOutput {
	return o
}

func (o Ipv6ehfilterArrayOutput) Index(i pulumi.IntInput) Ipv6ehfilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ipv6ehfilter {
		return vs[0].([]*Ipv6ehfilter)[vs[1].(int)]
	}).(Ipv6ehfilterOutput)
}

type Ipv6ehfilterMapOutput struct{ *pulumi.OutputState }

func (Ipv6ehfilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv6ehfilter)(nil)).Elem()
}

func (o Ipv6ehfilterMapOutput) ToIpv6ehfilterMapOutput() Ipv6ehfilterMapOutput {
	return o
}

func (o Ipv6ehfilterMapOutput) ToIpv6ehfilterMapOutputWithContext(ctx context.Context) Ipv6ehfilterMapOutput {
	return o
}

func (o Ipv6ehfilterMapOutput) MapIndex(k pulumi.StringInput) Ipv6ehfilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ipv6ehfilter {
		return vs[0].(map[string]*Ipv6ehfilter)[vs[1].(string)]
	}).(Ipv6ehfilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6ehfilterInput)(nil)).Elem(), &Ipv6ehfilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6ehfilterArrayInput)(nil)).Elem(), Ipv6ehfilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6ehfilterMapInput)(nil)).Elem(), Ipv6ehfilterMap{})
	pulumi.RegisterOutputType(Ipv6ehfilterOutput{})
	pulumi.RegisterOutputType(Ipv6ehfilterArrayOutput{})
	pulumi.RegisterOutputType(Ipv6ehfilterMapOutput{})
}
