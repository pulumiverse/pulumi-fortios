// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Provides a resource to configure firewall service category of FortiOS.
//
// !> **Warning:** The resource will be deprecated and replaced by new resource `firewall/service.Category`, we recommend that you use the new resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firewall.NewObjectServicecategory(ctx, "testCategoryName", &firewall.ObjectServicecategoryArgs{
//				Comment: pulumi.String("comment"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ObjectServicecategory struct {
	pulumi.CustomResourceState

	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Category name.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewObjectServicecategory registers a new resource with the given unique name, arguments, and options.
func NewObjectServicecategory(ctx *pulumi.Context,
	name string, args *ObjectServicecategoryArgs, opts ...pulumi.ResourceOption) (*ObjectServicecategory, error) {
	if args == nil {
		args = &ObjectServicecategoryArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObjectServicecategory
	err := ctx.RegisterResource("fortios:firewall/objectServicecategory:ObjectServicecategory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectServicecategory gets an existing ObjectServicecategory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectServicecategory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectServicecategoryState, opts ...pulumi.ResourceOption) (*ObjectServicecategory, error) {
	var resource ObjectServicecategory
	err := ctx.ReadResource("fortios:firewall/objectServicecategory:ObjectServicecategory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectServicecategory resources.
type objectServicecategoryState struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Category name.
	Name *string `pulumi:"name"`
}

type ObjectServicecategoryState struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Category name.
	Name pulumi.StringPtrInput
}

func (ObjectServicecategoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectServicecategoryState)(nil)).Elem()
}

type objectServicecategoryArgs struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Category name.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ObjectServicecategory resource.
type ObjectServicecategoryArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Category name.
	Name pulumi.StringPtrInput
}

func (ObjectServicecategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectServicecategoryArgs)(nil)).Elem()
}

type ObjectServicecategoryInput interface {
	pulumi.Input

	ToObjectServicecategoryOutput() ObjectServicecategoryOutput
	ToObjectServicecategoryOutputWithContext(ctx context.Context) ObjectServicecategoryOutput
}

func (*ObjectServicecategory) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectServicecategory)(nil)).Elem()
}

func (i *ObjectServicecategory) ToObjectServicecategoryOutput() ObjectServicecategoryOutput {
	return i.ToObjectServicecategoryOutputWithContext(context.Background())
}

func (i *ObjectServicecategory) ToObjectServicecategoryOutputWithContext(ctx context.Context) ObjectServicecategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectServicecategoryOutput)
}

// ObjectServicecategoryArrayInput is an input type that accepts ObjectServicecategoryArray and ObjectServicecategoryArrayOutput values.
// You can construct a concrete instance of `ObjectServicecategoryArrayInput` via:
//
//	ObjectServicecategoryArray{ ObjectServicecategoryArgs{...} }
type ObjectServicecategoryArrayInput interface {
	pulumi.Input

	ToObjectServicecategoryArrayOutput() ObjectServicecategoryArrayOutput
	ToObjectServicecategoryArrayOutputWithContext(context.Context) ObjectServicecategoryArrayOutput
}

type ObjectServicecategoryArray []ObjectServicecategoryInput

func (ObjectServicecategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectServicecategory)(nil)).Elem()
}

func (i ObjectServicecategoryArray) ToObjectServicecategoryArrayOutput() ObjectServicecategoryArrayOutput {
	return i.ToObjectServicecategoryArrayOutputWithContext(context.Background())
}

func (i ObjectServicecategoryArray) ToObjectServicecategoryArrayOutputWithContext(ctx context.Context) ObjectServicecategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectServicecategoryArrayOutput)
}

// ObjectServicecategoryMapInput is an input type that accepts ObjectServicecategoryMap and ObjectServicecategoryMapOutput values.
// You can construct a concrete instance of `ObjectServicecategoryMapInput` via:
//
//	ObjectServicecategoryMap{ "key": ObjectServicecategoryArgs{...} }
type ObjectServicecategoryMapInput interface {
	pulumi.Input

	ToObjectServicecategoryMapOutput() ObjectServicecategoryMapOutput
	ToObjectServicecategoryMapOutputWithContext(context.Context) ObjectServicecategoryMapOutput
}

type ObjectServicecategoryMap map[string]ObjectServicecategoryInput

func (ObjectServicecategoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectServicecategory)(nil)).Elem()
}

func (i ObjectServicecategoryMap) ToObjectServicecategoryMapOutput() ObjectServicecategoryMapOutput {
	return i.ToObjectServicecategoryMapOutputWithContext(context.Background())
}

func (i ObjectServicecategoryMap) ToObjectServicecategoryMapOutputWithContext(ctx context.Context) ObjectServicecategoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectServicecategoryMapOutput)
}

type ObjectServicecategoryOutput struct{ *pulumi.OutputState }

func (ObjectServicecategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectServicecategory)(nil)).Elem()
}

func (o ObjectServicecategoryOutput) ToObjectServicecategoryOutput() ObjectServicecategoryOutput {
	return o
}

func (o ObjectServicecategoryOutput) ToObjectServicecategoryOutputWithContext(ctx context.Context) ObjectServicecategoryOutput {
	return o
}

// Comment.
func (o ObjectServicecategoryOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectServicecategory) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Category name.
func (o ObjectServicecategoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectServicecategory) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type ObjectServicecategoryArrayOutput struct{ *pulumi.OutputState }

func (ObjectServicecategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectServicecategory)(nil)).Elem()
}

func (o ObjectServicecategoryArrayOutput) ToObjectServicecategoryArrayOutput() ObjectServicecategoryArrayOutput {
	return o
}

func (o ObjectServicecategoryArrayOutput) ToObjectServicecategoryArrayOutputWithContext(ctx context.Context) ObjectServicecategoryArrayOutput {
	return o
}

func (o ObjectServicecategoryArrayOutput) Index(i pulumi.IntInput) ObjectServicecategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObjectServicecategory {
		return vs[0].([]*ObjectServicecategory)[vs[1].(int)]
	}).(ObjectServicecategoryOutput)
}

type ObjectServicecategoryMapOutput struct{ *pulumi.OutputState }

func (ObjectServicecategoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectServicecategory)(nil)).Elem()
}

func (o ObjectServicecategoryMapOutput) ToObjectServicecategoryMapOutput() ObjectServicecategoryMapOutput {
	return o
}

func (o ObjectServicecategoryMapOutput) ToObjectServicecategoryMapOutputWithContext(ctx context.Context) ObjectServicecategoryMapOutput {
	return o
}

func (o ObjectServicecategoryMapOutput) MapIndex(k pulumi.StringInput) ObjectServicecategoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObjectServicecategory {
		return vs[0].(map[string]*ObjectServicecategory)[vs[1].(string)]
	}).(ObjectServicecategoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectServicecategoryInput)(nil)).Elem(), &ObjectServicecategory{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectServicecategoryArrayInput)(nil)).Elem(), ObjectServicecategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectServicecategoryMapInput)(nil)).Elem(), ObjectServicecategoryMap{})
	pulumi.RegisterOutputType(ObjectServicecategoryOutput{})
	pulumi.RegisterOutputType(ObjectServicecategoryArrayOutput{})
	pulumi.RegisterOutputType(ObjectServicecategoryMapOutput{})
}
