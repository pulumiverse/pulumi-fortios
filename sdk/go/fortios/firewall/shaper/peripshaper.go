// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package shaper

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure per-IP traffic shaper.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firewall.NewPeripshaper(ctx, "trname", &firewall.PeripshaperArgs{
//				BandwidthUnit:        pulumi.String("kbps"),
//				DiffservForward:      pulumi.String("disable"),
//				DiffservReverse:      pulumi.String("disable"),
//				DiffservcodeForward:  pulumi.String("000000"),
//				DiffservcodeRev:      pulumi.String("000000"),
//				MaxBandwidth:         pulumi.Int(1024),
//				MaxConcurrentSession: pulumi.Int(33),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// FirewallShaper PerIpShaper can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/shaper/peripshaper:Peripshaper labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/shaper/peripshaper:Peripshaper labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Peripshaper struct {
	pulumi.CustomResourceState

	// Unit of measurement for maximum bandwidth for this shaper (Kbps, Mbps or Gbps). Valid values: `kbps`, `mbps`, `gbps`.
	BandwidthUnit pulumi.StringOutput `pulumi:"bandwidthUnit"`
	// Enable/disable changing the Forward (original) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	DiffservForward pulumi.StringOutput `pulumi:"diffservForward"`
	// Enable/disable changing the Reverse (reply) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	DiffservReverse pulumi.StringOutput `pulumi:"diffservReverse"`
	// Forward (original) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeForward pulumi.StringOutput `pulumi:"diffservcodeForward"`
	// Reverse (reply) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeRev pulumi.StringOutput `pulumi:"diffservcodeRev"`
	// Upper bandwidth limit enforced by this shaper. 0 means no limit. Units depend on the bandwidth-unit setting. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: 0 - 16776000. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: 0 - 80000000.
	MaxBandwidth pulumi.IntOutput `pulumi:"maxBandwidth"`
	// Maximum number of concurrent sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentSession pulumi.IntOutput `pulumi:"maxConcurrentSession"`
	// Maximum number of concurrent TCP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentTcpSession pulumi.IntOutput `pulumi:"maxConcurrentTcpSession"`
	// Maximum number of concurrent UDP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentUdpSession pulumi.IntOutput `pulumi:"maxConcurrentUdpSession"`
	// Traffic shaper name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewPeripshaper registers a new resource with the given unique name, arguments, and options.
func NewPeripshaper(ctx *pulumi.Context,
	name string, args *PeripshaperArgs, opts ...pulumi.ResourceOption) (*Peripshaper, error) {
	if args == nil {
		args = &PeripshaperArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Peripshaper
	err := ctx.RegisterResource("fortios:firewall/shaper/peripshaper:Peripshaper", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPeripshaper gets an existing Peripshaper resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPeripshaper(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PeripshaperState, opts ...pulumi.ResourceOption) (*Peripshaper, error) {
	var resource Peripshaper
	err := ctx.ReadResource("fortios:firewall/shaper/peripshaper:Peripshaper", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Peripshaper resources.
type peripshaperState struct {
	// Unit of measurement for maximum bandwidth for this shaper (Kbps, Mbps or Gbps). Valid values: `kbps`, `mbps`, `gbps`.
	BandwidthUnit *string `pulumi:"bandwidthUnit"`
	// Enable/disable changing the Forward (original) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	DiffservForward *string `pulumi:"diffservForward"`
	// Enable/disable changing the Reverse (reply) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	DiffservReverse *string `pulumi:"diffservReverse"`
	// Forward (original) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeForward *string `pulumi:"diffservcodeForward"`
	// Reverse (reply) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeRev *string `pulumi:"diffservcodeRev"`
	// Upper bandwidth limit enforced by this shaper. 0 means no limit. Units depend on the bandwidth-unit setting. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: 0 - 16776000. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: 0 - 80000000.
	MaxBandwidth *int `pulumi:"maxBandwidth"`
	// Maximum number of concurrent sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentSession *int `pulumi:"maxConcurrentSession"`
	// Maximum number of concurrent TCP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentTcpSession *int `pulumi:"maxConcurrentTcpSession"`
	// Maximum number of concurrent UDP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentUdpSession *int `pulumi:"maxConcurrentUdpSession"`
	// Traffic shaper name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type PeripshaperState struct {
	// Unit of measurement for maximum bandwidth for this shaper (Kbps, Mbps or Gbps). Valid values: `kbps`, `mbps`, `gbps`.
	BandwidthUnit pulumi.StringPtrInput
	// Enable/disable changing the Forward (original) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	DiffservForward pulumi.StringPtrInput
	// Enable/disable changing the Reverse (reply) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	DiffservReverse pulumi.StringPtrInput
	// Forward (original) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeForward pulumi.StringPtrInput
	// Reverse (reply) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeRev pulumi.StringPtrInput
	// Upper bandwidth limit enforced by this shaper. 0 means no limit. Units depend on the bandwidth-unit setting. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: 0 - 16776000. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: 0 - 80000000.
	MaxBandwidth pulumi.IntPtrInput
	// Maximum number of concurrent sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentSession pulumi.IntPtrInput
	// Maximum number of concurrent TCP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentTcpSession pulumi.IntPtrInput
	// Maximum number of concurrent UDP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentUdpSession pulumi.IntPtrInput
	// Traffic shaper name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (PeripshaperState) ElementType() reflect.Type {
	return reflect.TypeOf((*peripshaperState)(nil)).Elem()
}

type peripshaperArgs struct {
	// Unit of measurement for maximum bandwidth for this shaper (Kbps, Mbps or Gbps). Valid values: `kbps`, `mbps`, `gbps`.
	BandwidthUnit *string `pulumi:"bandwidthUnit"`
	// Enable/disable changing the Forward (original) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	DiffservForward *string `pulumi:"diffservForward"`
	// Enable/disable changing the Reverse (reply) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	DiffservReverse *string `pulumi:"diffservReverse"`
	// Forward (original) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeForward *string `pulumi:"diffservcodeForward"`
	// Reverse (reply) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeRev *string `pulumi:"diffservcodeRev"`
	// Upper bandwidth limit enforced by this shaper. 0 means no limit. Units depend on the bandwidth-unit setting. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: 0 - 16776000. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: 0 - 80000000.
	MaxBandwidth *int `pulumi:"maxBandwidth"`
	// Maximum number of concurrent sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentSession *int `pulumi:"maxConcurrentSession"`
	// Maximum number of concurrent TCP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentTcpSession *int `pulumi:"maxConcurrentTcpSession"`
	// Maximum number of concurrent UDP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentUdpSession *int `pulumi:"maxConcurrentUdpSession"`
	// Traffic shaper name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Peripshaper resource.
type PeripshaperArgs struct {
	// Unit of measurement for maximum bandwidth for this shaper (Kbps, Mbps or Gbps). Valid values: `kbps`, `mbps`, `gbps`.
	BandwidthUnit pulumi.StringPtrInput
	// Enable/disable changing the Forward (original) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	DiffservForward pulumi.StringPtrInput
	// Enable/disable changing the Reverse (reply) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	DiffservReverse pulumi.StringPtrInput
	// Forward (original) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeForward pulumi.StringPtrInput
	// Reverse (reply) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeRev pulumi.StringPtrInput
	// Upper bandwidth limit enforced by this shaper. 0 means no limit. Units depend on the bandwidth-unit setting. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: 0 - 16776000. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: 0 - 80000000.
	MaxBandwidth pulumi.IntPtrInput
	// Maximum number of concurrent sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentSession pulumi.IntPtrInput
	// Maximum number of concurrent TCP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentTcpSession pulumi.IntPtrInput
	// Maximum number of concurrent UDP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentUdpSession pulumi.IntPtrInput
	// Traffic shaper name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (PeripshaperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*peripshaperArgs)(nil)).Elem()
}

type PeripshaperInput interface {
	pulumi.Input

	ToPeripshaperOutput() PeripshaperOutput
	ToPeripshaperOutputWithContext(ctx context.Context) PeripshaperOutput
}

func (*Peripshaper) ElementType() reflect.Type {
	return reflect.TypeOf((**Peripshaper)(nil)).Elem()
}

func (i *Peripshaper) ToPeripshaperOutput() PeripshaperOutput {
	return i.ToPeripshaperOutputWithContext(context.Background())
}

func (i *Peripshaper) ToPeripshaperOutputWithContext(ctx context.Context) PeripshaperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeripshaperOutput)
}

// PeripshaperArrayInput is an input type that accepts PeripshaperArray and PeripshaperArrayOutput values.
// You can construct a concrete instance of `PeripshaperArrayInput` via:
//
//	PeripshaperArray{ PeripshaperArgs{...} }
type PeripshaperArrayInput interface {
	pulumi.Input

	ToPeripshaperArrayOutput() PeripshaperArrayOutput
	ToPeripshaperArrayOutputWithContext(context.Context) PeripshaperArrayOutput
}

type PeripshaperArray []PeripshaperInput

func (PeripshaperArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Peripshaper)(nil)).Elem()
}

func (i PeripshaperArray) ToPeripshaperArrayOutput() PeripshaperArrayOutput {
	return i.ToPeripshaperArrayOutputWithContext(context.Background())
}

func (i PeripshaperArray) ToPeripshaperArrayOutputWithContext(ctx context.Context) PeripshaperArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeripshaperArrayOutput)
}

// PeripshaperMapInput is an input type that accepts PeripshaperMap and PeripshaperMapOutput values.
// You can construct a concrete instance of `PeripshaperMapInput` via:
//
//	PeripshaperMap{ "key": PeripshaperArgs{...} }
type PeripshaperMapInput interface {
	pulumi.Input

	ToPeripshaperMapOutput() PeripshaperMapOutput
	ToPeripshaperMapOutputWithContext(context.Context) PeripshaperMapOutput
}

type PeripshaperMap map[string]PeripshaperInput

func (PeripshaperMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Peripshaper)(nil)).Elem()
}

func (i PeripshaperMap) ToPeripshaperMapOutput() PeripshaperMapOutput {
	return i.ToPeripshaperMapOutputWithContext(context.Background())
}

func (i PeripshaperMap) ToPeripshaperMapOutputWithContext(ctx context.Context) PeripshaperMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeripshaperMapOutput)
}

type PeripshaperOutput struct{ *pulumi.OutputState }

func (PeripshaperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Peripshaper)(nil)).Elem()
}

func (o PeripshaperOutput) ToPeripshaperOutput() PeripshaperOutput {
	return o
}

func (o PeripshaperOutput) ToPeripshaperOutputWithContext(ctx context.Context) PeripshaperOutput {
	return o
}

// Unit of measurement for maximum bandwidth for this shaper (Kbps, Mbps or Gbps). Valid values: `kbps`, `mbps`, `gbps`.
func (o PeripshaperOutput) BandwidthUnit() pulumi.StringOutput {
	return o.ApplyT(func(v *Peripshaper) pulumi.StringOutput { return v.BandwidthUnit }).(pulumi.StringOutput)
}

// Enable/disable changing the Forward (original) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
func (o PeripshaperOutput) DiffservForward() pulumi.StringOutput {
	return o.ApplyT(func(v *Peripshaper) pulumi.StringOutput { return v.DiffservForward }).(pulumi.StringOutput)
}

// Enable/disable changing the Reverse (reply) DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
func (o PeripshaperOutput) DiffservReverse() pulumi.StringOutput {
	return o.ApplyT(func(v *Peripshaper) pulumi.StringOutput { return v.DiffservReverse }).(pulumi.StringOutput)
}

// Forward (original) DiffServ setting to be applied to traffic accepted by this shaper.
func (o PeripshaperOutput) DiffservcodeForward() pulumi.StringOutput {
	return o.ApplyT(func(v *Peripshaper) pulumi.StringOutput { return v.DiffservcodeForward }).(pulumi.StringOutput)
}

// Reverse (reply) DiffServ setting to be applied to traffic accepted by this shaper.
func (o PeripshaperOutput) DiffservcodeRev() pulumi.StringOutput {
	return o.ApplyT(func(v *Peripshaper) pulumi.StringOutput { return v.DiffservcodeRev }).(pulumi.StringOutput)
}

// Upper bandwidth limit enforced by this shaper. 0 means no limit. Units depend on the bandwidth-unit setting. On FortiOS versions 6.2.0-6.4.2, 7.0.0-7.0.5, 7.2.0: 0 - 16776000. On FortiOS versions 6.4.10-6.4.14, 7.0.6-7.0.13, >= 7.2.1: 0 - 80000000.
func (o PeripshaperOutput) MaxBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *Peripshaper) pulumi.IntOutput { return v.MaxBandwidth }).(pulumi.IntOutput)
}

// Maximum number of concurrent sessions allowed by this shaper (0 - 2097000). 0 means no limit.
func (o PeripshaperOutput) MaxConcurrentSession() pulumi.IntOutput {
	return o.ApplyT(func(v *Peripshaper) pulumi.IntOutput { return v.MaxConcurrentSession }).(pulumi.IntOutput)
}

// Maximum number of concurrent TCP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
func (o PeripshaperOutput) MaxConcurrentTcpSession() pulumi.IntOutput {
	return o.ApplyT(func(v *Peripshaper) pulumi.IntOutput { return v.MaxConcurrentTcpSession }).(pulumi.IntOutput)
}

// Maximum number of concurrent UDP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
func (o PeripshaperOutput) MaxConcurrentUdpSession() pulumi.IntOutput {
	return o.ApplyT(func(v *Peripshaper) pulumi.IntOutput { return v.MaxConcurrentUdpSession }).(pulumi.IntOutput)
}

// Traffic shaper name.
func (o PeripshaperOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Peripshaper) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o PeripshaperOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Peripshaper) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type PeripshaperArrayOutput struct{ *pulumi.OutputState }

func (PeripshaperArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Peripshaper)(nil)).Elem()
}

func (o PeripshaperArrayOutput) ToPeripshaperArrayOutput() PeripshaperArrayOutput {
	return o
}

func (o PeripshaperArrayOutput) ToPeripshaperArrayOutputWithContext(ctx context.Context) PeripshaperArrayOutput {
	return o
}

func (o PeripshaperArrayOutput) Index(i pulumi.IntInput) PeripshaperOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Peripshaper {
		return vs[0].([]*Peripshaper)[vs[1].(int)]
	}).(PeripshaperOutput)
}

type PeripshaperMapOutput struct{ *pulumi.OutputState }

func (PeripshaperMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Peripshaper)(nil)).Elem()
}

func (o PeripshaperMapOutput) ToPeripshaperMapOutput() PeripshaperMapOutput {
	return o
}

func (o PeripshaperMapOutput) ToPeripshaperMapOutputWithContext(ctx context.Context) PeripshaperMapOutput {
	return o
}

func (o PeripshaperMapOutput) MapIndex(k pulumi.StringInput) PeripshaperOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Peripshaper {
		return vs[0].(map[string]*Peripshaper)[vs[1].(string)]
	}).(PeripshaperOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PeripshaperInput)(nil)).Elem(), &Peripshaper{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeripshaperArrayInput)(nil)).Elem(), PeripshaperArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeripshaperMapInput)(nil)).Elem(), PeripshaperMap{})
	pulumi.RegisterOutputType(PeripshaperOutput{})
	pulumi.RegisterOutputType(PeripshaperArrayOutput{})
	pulumi.RegisterOutputType(PeripshaperMapOutput{})
}
