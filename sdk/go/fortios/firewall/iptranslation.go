// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure firewall IP-translation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firewall.NewIptranslation(ctx, "trname", &firewall.IptranslationArgs{
//				Endip:      pulumi.String("2.2.2.2"),
//				MapStartip: pulumi.String("0.0.0.0"),
//				Startip:    pulumi.String("1.1.1.1"),
//				Transid:    pulumi.Int(1),
//				Type:       pulumi.String("SCTP"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Firewall IpTranslation can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/iptranslation:Iptranslation labelname {{transid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/iptranslation:Iptranslation labelname {{transid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Iptranslation struct {
	pulumi.CustomResourceState

	// Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	Endip pulumi.StringOutput `pulumi:"endip"`
	// Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	MapStartip pulumi.StringOutput `pulumi:"mapStartip"`
	// First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	Startip pulumi.StringOutput `pulumi:"startip"`
	// IP translation ID.
	Transid pulumi.IntOutput `pulumi:"transid"`
	// IP translation type (option: SCTP). Valid values: `SCTP`.
	Type pulumi.StringOutput `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewIptranslation registers a new resource with the given unique name, arguments, and options.
func NewIptranslation(ctx *pulumi.Context,
	name string, args *IptranslationArgs, opts ...pulumi.ResourceOption) (*Iptranslation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endip == nil {
		return nil, errors.New("invalid value for required argument 'Endip'")
	}
	if args.MapStartip == nil {
		return nil, errors.New("invalid value for required argument 'MapStartip'")
	}
	if args.Startip == nil {
		return nil, errors.New("invalid value for required argument 'Startip'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Iptranslation
	err := ctx.RegisterResource("fortios:firewall/iptranslation:Iptranslation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIptranslation gets an existing Iptranslation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIptranslation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IptranslationState, opts ...pulumi.ResourceOption) (*Iptranslation, error) {
	var resource Iptranslation
	err := ctx.ReadResource("fortios:firewall/iptranslation:Iptranslation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Iptranslation resources.
type iptranslationState struct {
	// Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	Endip *string `pulumi:"endip"`
	// Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	MapStartip *string `pulumi:"mapStartip"`
	// First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	Startip *string `pulumi:"startip"`
	// IP translation ID.
	Transid *int `pulumi:"transid"`
	// IP translation type (option: SCTP). Valid values: `SCTP`.
	Type *string `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type IptranslationState struct {
	// Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	Endip pulumi.StringPtrInput
	// Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	MapStartip pulumi.StringPtrInput
	// First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	Startip pulumi.StringPtrInput
	// IP translation ID.
	Transid pulumi.IntPtrInput
	// IP translation type (option: SCTP). Valid values: `SCTP`.
	Type pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (IptranslationState) ElementType() reflect.Type {
	return reflect.TypeOf((*iptranslationState)(nil)).Elem()
}

type iptranslationArgs struct {
	// Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	Endip string `pulumi:"endip"`
	// Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	MapStartip string `pulumi:"mapStartip"`
	// First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	Startip string `pulumi:"startip"`
	// IP translation ID.
	Transid *int `pulumi:"transid"`
	// IP translation type (option: SCTP). Valid values: `SCTP`.
	Type *string `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Iptranslation resource.
type IptranslationArgs struct {
	// Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	Endip pulumi.StringInput
	// Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	MapStartip pulumi.StringInput
	// First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
	Startip pulumi.StringInput
	// IP translation ID.
	Transid pulumi.IntPtrInput
	// IP translation type (option: SCTP). Valid values: `SCTP`.
	Type pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (IptranslationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iptranslationArgs)(nil)).Elem()
}

type IptranslationInput interface {
	pulumi.Input

	ToIptranslationOutput() IptranslationOutput
	ToIptranslationOutputWithContext(ctx context.Context) IptranslationOutput
}

func (*Iptranslation) ElementType() reflect.Type {
	return reflect.TypeOf((**Iptranslation)(nil)).Elem()
}

func (i *Iptranslation) ToIptranslationOutput() IptranslationOutput {
	return i.ToIptranslationOutputWithContext(context.Background())
}

func (i *Iptranslation) ToIptranslationOutputWithContext(ctx context.Context) IptranslationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IptranslationOutput)
}

// IptranslationArrayInput is an input type that accepts IptranslationArray and IptranslationArrayOutput values.
// You can construct a concrete instance of `IptranslationArrayInput` via:
//
//	IptranslationArray{ IptranslationArgs{...} }
type IptranslationArrayInput interface {
	pulumi.Input

	ToIptranslationArrayOutput() IptranslationArrayOutput
	ToIptranslationArrayOutputWithContext(context.Context) IptranslationArrayOutput
}

type IptranslationArray []IptranslationInput

func (IptranslationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Iptranslation)(nil)).Elem()
}

func (i IptranslationArray) ToIptranslationArrayOutput() IptranslationArrayOutput {
	return i.ToIptranslationArrayOutputWithContext(context.Background())
}

func (i IptranslationArray) ToIptranslationArrayOutputWithContext(ctx context.Context) IptranslationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IptranslationArrayOutput)
}

// IptranslationMapInput is an input type that accepts IptranslationMap and IptranslationMapOutput values.
// You can construct a concrete instance of `IptranslationMapInput` via:
//
//	IptranslationMap{ "key": IptranslationArgs{...} }
type IptranslationMapInput interface {
	pulumi.Input

	ToIptranslationMapOutput() IptranslationMapOutput
	ToIptranslationMapOutputWithContext(context.Context) IptranslationMapOutput
}

type IptranslationMap map[string]IptranslationInput

func (IptranslationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Iptranslation)(nil)).Elem()
}

func (i IptranslationMap) ToIptranslationMapOutput() IptranslationMapOutput {
	return i.ToIptranslationMapOutputWithContext(context.Background())
}

func (i IptranslationMap) ToIptranslationMapOutputWithContext(ctx context.Context) IptranslationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IptranslationMapOutput)
}

type IptranslationOutput struct{ *pulumi.OutputState }

func (IptranslationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Iptranslation)(nil)).Elem()
}

func (o IptranslationOutput) ToIptranslationOutput() IptranslationOutput {
	return o
}

func (o IptranslationOutput) ToIptranslationOutputWithContext(ctx context.Context) IptranslationOutput {
	return o
}

// Final IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
func (o IptranslationOutput) Endip() pulumi.StringOutput {
	return o.ApplyT(func(v *Iptranslation) pulumi.StringOutput { return v.Endip }).(pulumi.StringOutput)
}

// Address to be used as the starting point for translation in the range (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
func (o IptranslationOutput) MapStartip() pulumi.StringOutput {
	return o.ApplyT(func(v *Iptranslation) pulumi.StringOutput { return v.MapStartip }).(pulumi.StringOutput)
}

// First IPv4 address (inclusive) in the range of the addresses to be translated (format xxx.xxx.xxx.xxx, default: 0.0.0.0).
func (o IptranslationOutput) Startip() pulumi.StringOutput {
	return o.ApplyT(func(v *Iptranslation) pulumi.StringOutput { return v.Startip }).(pulumi.StringOutput)
}

// IP translation ID.
func (o IptranslationOutput) Transid() pulumi.IntOutput {
	return o.ApplyT(func(v *Iptranslation) pulumi.IntOutput { return v.Transid }).(pulumi.IntOutput)
}

// IP translation type (option: SCTP). Valid values: `SCTP`.
func (o IptranslationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Iptranslation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o IptranslationOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Iptranslation) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type IptranslationArrayOutput struct{ *pulumi.OutputState }

func (IptranslationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Iptranslation)(nil)).Elem()
}

func (o IptranslationArrayOutput) ToIptranslationArrayOutput() IptranslationArrayOutput {
	return o
}

func (o IptranslationArrayOutput) ToIptranslationArrayOutputWithContext(ctx context.Context) IptranslationArrayOutput {
	return o
}

func (o IptranslationArrayOutput) Index(i pulumi.IntInput) IptranslationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Iptranslation {
		return vs[0].([]*Iptranslation)[vs[1].(int)]
	}).(IptranslationOutput)
}

type IptranslationMapOutput struct{ *pulumi.OutputState }

func (IptranslationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Iptranslation)(nil)).Elem()
}

func (o IptranslationMapOutput) ToIptranslationMapOutput() IptranslationMapOutput {
	return o
}

func (o IptranslationMapOutput) ToIptranslationMapOutputWithContext(ctx context.Context) IptranslationMapOutput {
	return o
}

func (o IptranslationMapOutput) MapIndex(k pulumi.StringInput) IptranslationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Iptranslation {
		return vs[0].(map[string]*Iptranslation)[vs[1].(string)]
	}).(IptranslationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IptranslationInput)(nil)).Elem(), &Iptranslation{})
	pulumi.RegisterInputType(reflect.TypeOf((*IptranslationArrayInput)(nil)).Elem(), IptranslationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IptranslationMapInput)(nil)).Elem(), IptranslationMap{})
	pulumi.RegisterOutputType(IptranslationOutput{})
	pulumi.RegisterOutputType(IptranslationArrayOutput{})
	pulumi.RegisterOutputType(IptranslationMapOutput{})
}
