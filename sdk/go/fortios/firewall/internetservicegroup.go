// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure group of Internet Service.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firewall.NewInternetservicegroup(ctx, "trname", &firewall.InternetservicegroupArgs{
//				Direction: pulumi.String("both"),
//				Members: firewall.InternetservicegroupMemberArray{
//					&firewall.InternetservicegroupMemberArgs{
//						Id: pulumi.Int(65641),
//					},
//					&firewall.InternetservicegroupMemberArgs{
//						Id: pulumi.Int(65646),
//					},
//					&firewall.InternetservicegroupMemberArgs{
//						Id: pulumi.Int(196747),
//					},
//					&firewall.InternetservicegroupMemberArgs{
//						Id: pulumi.Int(327781),
//					},
//					&firewall.InternetservicegroupMemberArgs{
//						Id: pulumi.Int(327786),
//					},
//					&firewall.InternetservicegroupMemberArgs{
//						Id: pulumi.Int(327791),
//					},
//					&firewall.InternetservicegroupMemberArgs{
//						Id: pulumi.Int(327839),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Firewall InternetServiceGroup can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/internetservicegroup:Internetservicegroup labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/internetservicegroup:Internetservicegroup labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Internetservicegroup struct {
	pulumi.CustomResourceState

	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// How this service may be used (source, destination or both). Valid values: `source`, `destination`, `both`.
	Direction pulumi.StringOutput `pulumi:"direction"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Internet Service group member. The structure of `member` block is documented below.
	Members InternetservicegroupMemberArrayOutput `pulumi:"members"`
	// Internet Service group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewInternetservicegroup registers a new resource with the given unique name, arguments, and options.
func NewInternetservicegroup(ctx *pulumi.Context,
	name string, args *InternetservicegroupArgs, opts ...pulumi.ResourceOption) (*Internetservicegroup, error) {
	if args == nil {
		args = &InternetservicegroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Internetservicegroup
	err := ctx.RegisterResource("fortios:firewall/internetservicegroup:Internetservicegroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInternetservicegroup gets an existing Internetservicegroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInternetservicegroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InternetservicegroupState, opts ...pulumi.ResourceOption) (*Internetservicegroup, error) {
	var resource Internetservicegroup
	err := ctx.ReadResource("fortios:firewall/internetservicegroup:Internetservicegroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Internetservicegroup resources.
type internetservicegroupState struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// How this service may be used (source, destination or both). Valid values: `source`, `destination`, `both`.
	Direction *string `pulumi:"direction"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Internet Service group member. The structure of `member` block is documented below.
	Members []InternetservicegroupMember `pulumi:"members"`
	// Internet Service group name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type InternetservicegroupState struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// How this service may be used (source, destination or both). Valid values: `source`, `destination`, `both`.
	Direction pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Internet Service group member. The structure of `member` block is documented below.
	Members InternetservicegroupMemberArrayInput
	// Internet Service group name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (InternetservicegroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*internetservicegroupState)(nil)).Elem()
}

type internetservicegroupArgs struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// How this service may be used (source, destination or both). Valid values: `source`, `destination`, `both`.
	Direction *string `pulumi:"direction"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Internet Service group member. The structure of `member` block is documented below.
	Members []InternetservicegroupMember `pulumi:"members"`
	// Internet Service group name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Internetservicegroup resource.
type InternetservicegroupArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// How this service may be used (source, destination or both). Valid values: `source`, `destination`, `both`.
	Direction pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Internet Service group member. The structure of `member` block is documented below.
	Members InternetservicegroupMemberArrayInput
	// Internet Service group name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (InternetservicegroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*internetservicegroupArgs)(nil)).Elem()
}

type InternetservicegroupInput interface {
	pulumi.Input

	ToInternetservicegroupOutput() InternetservicegroupOutput
	ToInternetservicegroupOutputWithContext(ctx context.Context) InternetservicegroupOutput
}

func (*Internetservicegroup) ElementType() reflect.Type {
	return reflect.TypeOf((**Internetservicegroup)(nil)).Elem()
}

func (i *Internetservicegroup) ToInternetservicegroupOutput() InternetservicegroupOutput {
	return i.ToInternetservicegroupOutputWithContext(context.Background())
}

func (i *Internetservicegroup) ToInternetservicegroupOutputWithContext(ctx context.Context) InternetservicegroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicegroupOutput)
}

// InternetservicegroupArrayInput is an input type that accepts InternetservicegroupArray and InternetservicegroupArrayOutput values.
// You can construct a concrete instance of `InternetservicegroupArrayInput` via:
//
//	InternetservicegroupArray{ InternetservicegroupArgs{...} }
type InternetservicegroupArrayInput interface {
	pulumi.Input

	ToInternetservicegroupArrayOutput() InternetservicegroupArrayOutput
	ToInternetservicegroupArrayOutputWithContext(context.Context) InternetservicegroupArrayOutput
}

type InternetservicegroupArray []InternetservicegroupInput

func (InternetservicegroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Internetservicegroup)(nil)).Elem()
}

func (i InternetservicegroupArray) ToInternetservicegroupArrayOutput() InternetservicegroupArrayOutput {
	return i.ToInternetservicegroupArrayOutputWithContext(context.Background())
}

func (i InternetservicegroupArray) ToInternetservicegroupArrayOutputWithContext(ctx context.Context) InternetservicegroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicegroupArrayOutput)
}

// InternetservicegroupMapInput is an input type that accepts InternetservicegroupMap and InternetservicegroupMapOutput values.
// You can construct a concrete instance of `InternetservicegroupMapInput` via:
//
//	InternetservicegroupMap{ "key": InternetservicegroupArgs{...} }
type InternetservicegroupMapInput interface {
	pulumi.Input

	ToInternetservicegroupMapOutput() InternetservicegroupMapOutput
	ToInternetservicegroupMapOutputWithContext(context.Context) InternetservicegroupMapOutput
}

type InternetservicegroupMap map[string]InternetservicegroupInput

func (InternetservicegroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Internetservicegroup)(nil)).Elem()
}

func (i InternetservicegroupMap) ToInternetservicegroupMapOutput() InternetservicegroupMapOutput {
	return i.ToInternetservicegroupMapOutputWithContext(context.Background())
}

func (i InternetservicegroupMap) ToInternetservicegroupMapOutputWithContext(ctx context.Context) InternetservicegroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetservicegroupMapOutput)
}

type InternetservicegroupOutput struct{ *pulumi.OutputState }

func (InternetservicegroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Internetservicegroup)(nil)).Elem()
}

func (o InternetservicegroupOutput) ToInternetservicegroupOutput() InternetservicegroupOutput {
	return o
}

func (o InternetservicegroupOutput) ToInternetservicegroupOutputWithContext(ctx context.Context) InternetservicegroupOutput {
	return o
}

// Comment.
func (o InternetservicegroupOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Internetservicegroup) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// How this service may be used (source, destination or both). Valid values: `source`, `destination`, `both`.
func (o InternetservicegroupOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *Internetservicegroup) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o InternetservicegroupOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Internetservicegroup) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o InternetservicegroupOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Internetservicegroup) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Internet Service group member. The structure of `member` block is documented below.
func (o InternetservicegroupOutput) Members() InternetservicegroupMemberArrayOutput {
	return o.ApplyT(func(v *Internetservicegroup) InternetservicegroupMemberArrayOutput { return v.Members }).(InternetservicegroupMemberArrayOutput)
}

// Internet Service group name.
func (o InternetservicegroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Internetservicegroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o InternetservicegroupOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Internetservicegroup) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type InternetservicegroupArrayOutput struct{ *pulumi.OutputState }

func (InternetservicegroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Internetservicegroup)(nil)).Elem()
}

func (o InternetservicegroupArrayOutput) ToInternetservicegroupArrayOutput() InternetservicegroupArrayOutput {
	return o
}

func (o InternetservicegroupArrayOutput) ToInternetservicegroupArrayOutputWithContext(ctx context.Context) InternetservicegroupArrayOutput {
	return o
}

func (o InternetservicegroupArrayOutput) Index(i pulumi.IntInput) InternetservicegroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Internetservicegroup {
		return vs[0].([]*Internetservicegroup)[vs[1].(int)]
	}).(InternetservicegroupOutput)
}

type InternetservicegroupMapOutput struct{ *pulumi.OutputState }

func (InternetservicegroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Internetservicegroup)(nil)).Elem()
}

func (o InternetservicegroupMapOutput) ToInternetservicegroupMapOutput() InternetservicegroupMapOutput {
	return o
}

func (o InternetservicegroupMapOutput) ToInternetservicegroupMapOutputWithContext(ctx context.Context) InternetservicegroupMapOutput {
	return o
}

func (o InternetservicegroupMapOutput) MapIndex(k pulumi.StringInput) InternetservicegroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Internetservicegroup {
		return vs[0].(map[string]*Internetservicegroup)[vs[1].(string)]
	}).(InternetservicegroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicegroupInput)(nil)).Elem(), &Internetservicegroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicegroupArrayInput)(nil)).Elem(), InternetservicegroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetservicegroupMapInput)(nil)).Elem(), InternetservicegroupMap{})
	pulumi.RegisterOutputType(InternetservicegroupOutput{})
	pulumi.RegisterOutputType(InternetservicegroupArrayOutput{})
	pulumi.RegisterOutputType(InternetservicegroupMapOutput{})
}
