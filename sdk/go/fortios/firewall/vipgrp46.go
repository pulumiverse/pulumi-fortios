// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure IPv4 to IPv6 virtual IP groups. Applies to FortiOS Version `<= 7.0.0`.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			trname1, err := firewall.NewVip46(ctx, "trname1", &firewall.Vip46Args{
//				ArpReply:    pulumi.String("enable"),
//				Color:       pulumi.Int(0),
//				Extip:       pulumi.String("10.202.1.100"),
//				Extport:     pulumi.String("0-65535"),
//				Fosid:       pulumi.Int(0),
//				LdbMethod:   pulumi.String("static"),
//				Mappedip:    pulumi.String("2001:1:1:2::100"),
//				Mappedport:  pulumi.String("0-65535"),
//				Portforward: pulumi.String("disable"),
//				Protocol:    pulumi.String("tcp"),
//				Type:        pulumi.String("static-nat"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = firewall.NewVipgrp46(ctx, "trname", &firewall.Vipgrp46Args{
//				Color: pulumi.Int(0),
//				Members: firewall.Vipgrp46MemberArray{
//					&firewall.Vipgrp46MemberArgs{
//						Name: trname1.Name,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Firewall Vipgrp46 can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/vipgrp46:Vipgrp46 labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/vipgrp46:Vipgrp46 labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Vipgrp46 struct {
	pulumi.CustomResourceState

	// Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
	Color pulumi.IntOutput `pulumi:"color"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Member VIP objects of the group (Separate multiple objects with a space). The structure of `member` block is documented below.
	Members Vipgrp46MemberArrayOutput `pulumi:"members"`
	// VIP46 group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewVipgrp46 registers a new resource with the given unique name, arguments, and options.
func NewVipgrp46(ctx *pulumi.Context,
	name string, args *Vipgrp46Args, opts ...pulumi.ResourceOption) (*Vipgrp46, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Vipgrp46
	err := ctx.RegisterResource("fortios:firewall/vipgrp46:Vipgrp46", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVipgrp46 gets an existing Vipgrp46 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVipgrp46(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Vipgrp46State, opts ...pulumi.ResourceOption) (*Vipgrp46, error) {
	var resource Vipgrp46
	err := ctx.ReadResource("fortios:firewall/vipgrp46:Vipgrp46", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Vipgrp46 resources.
type vipgrp46State struct {
	// Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
	Color *int `pulumi:"color"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Member VIP objects of the group (Separate multiple objects with a space). The structure of `member` block is documented below.
	Members []Vipgrp46Member `pulumi:"members"`
	// VIP46 group name.
	Name *string `pulumi:"name"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Vipgrp46State struct {
	// Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
	Color pulumi.IntPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Member VIP objects of the group (Separate multiple objects with a space). The structure of `member` block is documented below.
	Members Vipgrp46MemberArrayInput
	// VIP46 group name.
	Name pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Vipgrp46State) ElementType() reflect.Type {
	return reflect.TypeOf((*vipgrp46State)(nil)).Elem()
}

type vipgrp46Args struct {
	// Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
	Color *int `pulumi:"color"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Member VIP objects of the group (Separate multiple objects with a space). The structure of `member` block is documented below.
	Members []Vipgrp46Member `pulumi:"members"`
	// VIP46 group name.
	Name *string `pulumi:"name"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Vipgrp46 resource.
type Vipgrp46Args struct {
	// Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
	Color pulumi.IntPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Member VIP objects of the group (Separate multiple objects with a space). The structure of `member` block is documented below.
	Members Vipgrp46MemberArrayInput
	// VIP46 group name.
	Name pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Vipgrp46Args) ElementType() reflect.Type {
	return reflect.TypeOf((*vipgrp46Args)(nil)).Elem()
}

type Vipgrp46Input interface {
	pulumi.Input

	ToVipgrp46Output() Vipgrp46Output
	ToVipgrp46OutputWithContext(ctx context.Context) Vipgrp46Output
}

func (*Vipgrp46) ElementType() reflect.Type {
	return reflect.TypeOf((**Vipgrp46)(nil)).Elem()
}

func (i *Vipgrp46) ToVipgrp46Output() Vipgrp46Output {
	return i.ToVipgrp46OutputWithContext(context.Background())
}

func (i *Vipgrp46) ToVipgrp46OutputWithContext(ctx context.Context) Vipgrp46Output {
	return pulumi.ToOutputWithContext(ctx, i).(Vipgrp46Output)
}

// Vipgrp46ArrayInput is an input type that accepts Vipgrp46Array and Vipgrp46ArrayOutput values.
// You can construct a concrete instance of `Vipgrp46ArrayInput` via:
//
//	Vipgrp46Array{ Vipgrp46Args{...} }
type Vipgrp46ArrayInput interface {
	pulumi.Input

	ToVipgrp46ArrayOutput() Vipgrp46ArrayOutput
	ToVipgrp46ArrayOutputWithContext(context.Context) Vipgrp46ArrayOutput
}

type Vipgrp46Array []Vipgrp46Input

func (Vipgrp46Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Vipgrp46)(nil)).Elem()
}

func (i Vipgrp46Array) ToVipgrp46ArrayOutput() Vipgrp46ArrayOutput {
	return i.ToVipgrp46ArrayOutputWithContext(context.Background())
}

func (i Vipgrp46Array) ToVipgrp46ArrayOutputWithContext(ctx context.Context) Vipgrp46ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vipgrp46ArrayOutput)
}

// Vipgrp46MapInput is an input type that accepts Vipgrp46Map and Vipgrp46MapOutput values.
// You can construct a concrete instance of `Vipgrp46MapInput` via:
//
//	Vipgrp46Map{ "key": Vipgrp46Args{...} }
type Vipgrp46MapInput interface {
	pulumi.Input

	ToVipgrp46MapOutput() Vipgrp46MapOutput
	ToVipgrp46MapOutputWithContext(context.Context) Vipgrp46MapOutput
}

type Vipgrp46Map map[string]Vipgrp46Input

func (Vipgrp46Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Vipgrp46)(nil)).Elem()
}

func (i Vipgrp46Map) ToVipgrp46MapOutput() Vipgrp46MapOutput {
	return i.ToVipgrp46MapOutputWithContext(context.Background())
}

func (i Vipgrp46Map) ToVipgrp46MapOutputWithContext(ctx context.Context) Vipgrp46MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Vipgrp46MapOutput)
}

type Vipgrp46Output struct{ *pulumi.OutputState }

func (Vipgrp46Output) ElementType() reflect.Type {
	return reflect.TypeOf((**Vipgrp46)(nil)).Elem()
}

func (o Vipgrp46Output) ToVipgrp46Output() Vipgrp46Output {
	return o
}

func (o Vipgrp46Output) ToVipgrp46OutputWithContext(ctx context.Context) Vipgrp46Output {
	return o
}

// Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
func (o Vipgrp46Output) Color() pulumi.IntOutput {
	return o.ApplyT(func(v *Vipgrp46) pulumi.IntOutput { return v.Color }).(pulumi.IntOutput)
}

// Comment.
func (o Vipgrp46Output) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vipgrp46) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o Vipgrp46Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vipgrp46) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o Vipgrp46Output) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vipgrp46) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Member VIP objects of the group (Separate multiple objects with a space). The structure of `member` block is documented below.
func (o Vipgrp46Output) Members() Vipgrp46MemberArrayOutput {
	return o.ApplyT(func(v *Vipgrp46) Vipgrp46MemberArrayOutput { return v.Members }).(Vipgrp46MemberArrayOutput)
}

// VIP46 group name.
func (o Vipgrp46Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Vipgrp46) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
func (o Vipgrp46Output) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *Vipgrp46) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Vipgrp46Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vipgrp46) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Vipgrp46ArrayOutput struct{ *pulumi.OutputState }

func (Vipgrp46ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Vipgrp46)(nil)).Elem()
}

func (o Vipgrp46ArrayOutput) ToVipgrp46ArrayOutput() Vipgrp46ArrayOutput {
	return o
}

func (o Vipgrp46ArrayOutput) ToVipgrp46ArrayOutputWithContext(ctx context.Context) Vipgrp46ArrayOutput {
	return o
}

func (o Vipgrp46ArrayOutput) Index(i pulumi.IntInput) Vipgrp46Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Vipgrp46 {
		return vs[0].([]*Vipgrp46)[vs[1].(int)]
	}).(Vipgrp46Output)
}

type Vipgrp46MapOutput struct{ *pulumi.OutputState }

func (Vipgrp46MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Vipgrp46)(nil)).Elem()
}

func (o Vipgrp46MapOutput) ToVipgrp46MapOutput() Vipgrp46MapOutput {
	return o
}

func (o Vipgrp46MapOutput) ToVipgrp46MapOutputWithContext(ctx context.Context) Vipgrp46MapOutput {
	return o
}

func (o Vipgrp46MapOutput) MapIndex(k pulumi.StringInput) Vipgrp46Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Vipgrp46 {
		return vs[0].(map[string]*Vipgrp46)[vs[1].(string)]
	}).(Vipgrp46Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Vipgrp46Input)(nil)).Elem(), &Vipgrp46{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vipgrp46ArrayInput)(nil)).Elem(), Vipgrp46Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*Vipgrp46MapInput)(nil)).Elem(), Vipgrp46Map{})
	pulumi.RegisterOutputType(Vipgrp46Output{})
	pulumi.RegisterOutputType(Vipgrp46ArrayOutput{})
	pulumi.RegisterOutputType(Vipgrp46MapOutput{})
}
