// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

type CentralsnatmapSort struct {
	pulumi.CustomResourceState

	Comment          pulumi.StringPtrOutput                       `pulumi:"comment"`
	ForceRecreate    pulumi.StringOutput                          `pulumi:"forceRecreate"`
	ManualOrders     pulumi.StringArrayOutput                     `pulumi:"manualOrders"`
	Sortby           pulumi.StringOutput                          `pulumi:"sortby"`
	Sortdirection    pulumi.StringOutput                          `pulumi:"sortdirection"`
	StatePolicyLists CentralsnatmapSortStatePolicyListArrayOutput `pulumi:"statePolicyLists"`
	Status           pulumi.StringOutput                          `pulumi:"status"`
	Vdomparam        pulumi.StringPtrOutput                       `pulumi:"vdomparam"`
}

// NewCentralsnatmapSort registers a new resource with the given unique name, arguments, and options.
func NewCentralsnatmapSort(ctx *pulumi.Context,
	name string, args *CentralsnatmapSortArgs, opts ...pulumi.ResourceOption) (*CentralsnatmapSort, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Sortby == nil {
		return nil, errors.New("invalid value for required argument 'Sortby'")
	}
	if args.Sortdirection == nil {
		return nil, errors.New("invalid value for required argument 'Sortdirection'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CentralsnatmapSort
	err := ctx.RegisterResource("fortios:firewall/centralsnatmapSort:CentralsnatmapSort", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCentralsnatmapSort gets an existing CentralsnatmapSort resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCentralsnatmapSort(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CentralsnatmapSortState, opts ...pulumi.ResourceOption) (*CentralsnatmapSort, error) {
	var resource CentralsnatmapSort
	err := ctx.ReadResource("fortios:firewall/centralsnatmapSort:CentralsnatmapSort", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CentralsnatmapSort resources.
type centralsnatmapSortState struct {
	Comment          *string                             `pulumi:"comment"`
	ForceRecreate    *string                             `pulumi:"forceRecreate"`
	ManualOrders     []string                            `pulumi:"manualOrders"`
	Sortby           *string                             `pulumi:"sortby"`
	Sortdirection    *string                             `pulumi:"sortdirection"`
	StatePolicyLists []CentralsnatmapSortStatePolicyList `pulumi:"statePolicyLists"`
	Status           *string                             `pulumi:"status"`
	Vdomparam        *string                             `pulumi:"vdomparam"`
}

type CentralsnatmapSortState struct {
	Comment          pulumi.StringPtrInput
	ForceRecreate    pulumi.StringPtrInput
	ManualOrders     pulumi.StringArrayInput
	Sortby           pulumi.StringPtrInput
	Sortdirection    pulumi.StringPtrInput
	StatePolicyLists CentralsnatmapSortStatePolicyListArrayInput
	Status           pulumi.StringPtrInput
	Vdomparam        pulumi.StringPtrInput
}

func (CentralsnatmapSortState) ElementType() reflect.Type {
	return reflect.TypeOf((*centralsnatmapSortState)(nil)).Elem()
}

type centralsnatmapSortArgs struct {
	Comment       *string  `pulumi:"comment"`
	ForceRecreate *string  `pulumi:"forceRecreate"`
	ManualOrders  []string `pulumi:"manualOrders"`
	Sortby        string   `pulumi:"sortby"`
	Sortdirection string   `pulumi:"sortdirection"`
	Status        *string  `pulumi:"status"`
	Vdomparam     *string  `pulumi:"vdomparam"`
}

// The set of arguments for constructing a CentralsnatmapSort resource.
type CentralsnatmapSortArgs struct {
	Comment       pulumi.StringPtrInput
	ForceRecreate pulumi.StringPtrInput
	ManualOrders  pulumi.StringArrayInput
	Sortby        pulumi.StringInput
	Sortdirection pulumi.StringInput
	Status        pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
}

func (CentralsnatmapSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*centralsnatmapSortArgs)(nil)).Elem()
}

type CentralsnatmapSortInput interface {
	pulumi.Input

	ToCentralsnatmapSortOutput() CentralsnatmapSortOutput
	ToCentralsnatmapSortOutputWithContext(ctx context.Context) CentralsnatmapSortOutput
}

func (*CentralsnatmapSort) ElementType() reflect.Type {
	return reflect.TypeOf((**CentralsnatmapSort)(nil)).Elem()
}

func (i *CentralsnatmapSort) ToCentralsnatmapSortOutput() CentralsnatmapSortOutput {
	return i.ToCentralsnatmapSortOutputWithContext(context.Background())
}

func (i *CentralsnatmapSort) ToCentralsnatmapSortOutputWithContext(ctx context.Context) CentralsnatmapSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapSortOutput)
}

// CentralsnatmapSortArrayInput is an input type that accepts CentralsnatmapSortArray and CentralsnatmapSortArrayOutput values.
// You can construct a concrete instance of `CentralsnatmapSortArrayInput` via:
//
//	CentralsnatmapSortArray{ CentralsnatmapSortArgs{...} }
type CentralsnatmapSortArrayInput interface {
	pulumi.Input

	ToCentralsnatmapSortArrayOutput() CentralsnatmapSortArrayOutput
	ToCentralsnatmapSortArrayOutputWithContext(context.Context) CentralsnatmapSortArrayOutput
}

type CentralsnatmapSortArray []CentralsnatmapSortInput

func (CentralsnatmapSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CentralsnatmapSort)(nil)).Elem()
}

func (i CentralsnatmapSortArray) ToCentralsnatmapSortArrayOutput() CentralsnatmapSortArrayOutput {
	return i.ToCentralsnatmapSortArrayOutputWithContext(context.Background())
}

func (i CentralsnatmapSortArray) ToCentralsnatmapSortArrayOutputWithContext(ctx context.Context) CentralsnatmapSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapSortArrayOutput)
}

// CentralsnatmapSortMapInput is an input type that accepts CentralsnatmapSortMap and CentralsnatmapSortMapOutput values.
// You can construct a concrete instance of `CentralsnatmapSortMapInput` via:
//
//	CentralsnatmapSortMap{ "key": CentralsnatmapSortArgs{...} }
type CentralsnatmapSortMapInput interface {
	pulumi.Input

	ToCentralsnatmapSortMapOutput() CentralsnatmapSortMapOutput
	ToCentralsnatmapSortMapOutputWithContext(context.Context) CentralsnatmapSortMapOutput
}

type CentralsnatmapSortMap map[string]CentralsnatmapSortInput

func (CentralsnatmapSortMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CentralsnatmapSort)(nil)).Elem()
}

func (i CentralsnatmapSortMap) ToCentralsnatmapSortMapOutput() CentralsnatmapSortMapOutput {
	return i.ToCentralsnatmapSortMapOutputWithContext(context.Background())
}

func (i CentralsnatmapSortMap) ToCentralsnatmapSortMapOutputWithContext(ctx context.Context) CentralsnatmapSortMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CentralsnatmapSortMapOutput)
}

type CentralsnatmapSortOutput struct{ *pulumi.OutputState }

func (CentralsnatmapSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CentralsnatmapSort)(nil)).Elem()
}

func (o CentralsnatmapSortOutput) ToCentralsnatmapSortOutput() CentralsnatmapSortOutput {
	return o
}

func (o CentralsnatmapSortOutput) ToCentralsnatmapSortOutputWithContext(ctx context.Context) CentralsnatmapSortOutput {
	return o
}

func (o CentralsnatmapSortOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CentralsnatmapSort) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o CentralsnatmapSortOutput) ForceRecreate() pulumi.StringOutput {
	return o.ApplyT(func(v *CentralsnatmapSort) pulumi.StringOutput { return v.ForceRecreate }).(pulumi.StringOutput)
}

func (o CentralsnatmapSortOutput) ManualOrders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CentralsnatmapSort) pulumi.StringArrayOutput { return v.ManualOrders }).(pulumi.StringArrayOutput)
}

func (o CentralsnatmapSortOutput) Sortby() pulumi.StringOutput {
	return o.ApplyT(func(v *CentralsnatmapSort) pulumi.StringOutput { return v.Sortby }).(pulumi.StringOutput)
}

func (o CentralsnatmapSortOutput) Sortdirection() pulumi.StringOutput {
	return o.ApplyT(func(v *CentralsnatmapSort) pulumi.StringOutput { return v.Sortdirection }).(pulumi.StringOutput)
}

func (o CentralsnatmapSortOutput) StatePolicyLists() CentralsnatmapSortStatePolicyListArrayOutput {
	return o.ApplyT(func(v *CentralsnatmapSort) CentralsnatmapSortStatePolicyListArrayOutput { return v.StatePolicyLists }).(CentralsnatmapSortStatePolicyListArrayOutput)
}

func (o CentralsnatmapSortOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CentralsnatmapSort) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CentralsnatmapSortOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CentralsnatmapSort) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type CentralsnatmapSortArrayOutput struct{ *pulumi.OutputState }

func (CentralsnatmapSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CentralsnatmapSort)(nil)).Elem()
}

func (o CentralsnatmapSortArrayOutput) ToCentralsnatmapSortArrayOutput() CentralsnatmapSortArrayOutput {
	return o
}

func (o CentralsnatmapSortArrayOutput) ToCentralsnatmapSortArrayOutputWithContext(ctx context.Context) CentralsnatmapSortArrayOutput {
	return o
}

func (o CentralsnatmapSortArrayOutput) Index(i pulumi.IntInput) CentralsnatmapSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CentralsnatmapSort {
		return vs[0].([]*CentralsnatmapSort)[vs[1].(int)]
	}).(CentralsnatmapSortOutput)
}

type CentralsnatmapSortMapOutput struct{ *pulumi.OutputState }

func (CentralsnatmapSortMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CentralsnatmapSort)(nil)).Elem()
}

func (o CentralsnatmapSortMapOutput) ToCentralsnatmapSortMapOutput() CentralsnatmapSortMapOutput {
	return o
}

func (o CentralsnatmapSortMapOutput) ToCentralsnatmapSortMapOutputWithContext(ctx context.Context) CentralsnatmapSortMapOutput {
	return o
}

func (o CentralsnatmapSortMapOutput) MapIndex(k pulumi.StringInput) CentralsnatmapSortOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CentralsnatmapSort {
		return vs[0].(map[string]*CentralsnatmapSort)[vs[1].(string)]
	}).(CentralsnatmapSortOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapSortInput)(nil)).Elem(), &CentralsnatmapSort{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapSortArrayInput)(nil)).Elem(), CentralsnatmapSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CentralsnatmapSortMapInput)(nil)).Elem(), CentralsnatmapSortMap{})
	pulumi.RegisterOutputType(CentralsnatmapSortOutput{})
	pulumi.RegisterOutputType(CentralsnatmapSortArrayOutput{})
	pulumi.RegisterOutputType(CentralsnatmapSortMapOutput{})
}
