// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure Access Proxy SSH client certificate. Applies to FortiOS Version `>= 7.0.1`.
//
// ## Import
//
// Firewall AccessProxySshClientCert can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/accessproxysshclientcert:Accessproxysshclientcert labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/accessproxysshclientcert:Accessproxysshclientcert labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Accessproxysshclientcert struct {
	pulumi.CustomResourceState

	// Name of the SSH server public key authentication CA.
	AuthCa pulumi.StringOutput `pulumi:"authCa"`
	// Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
	CertExtensions AccessproxysshclientcertCertExtensionArrayOutput `pulumi:"certExtensions"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// SSH client certificate name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitAgentForwarding pulumi.StringOutput `pulumi:"permitAgentForwarding"`
	// Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitPortForwarding pulumi.StringOutput `pulumi:"permitPortForwarding"`
	// Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
	PermitPty pulumi.StringOutput `pulumi:"permitPty"`
	// Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
	PermitUserRc pulumi.StringOutput `pulumi:"permitUserRc"`
	// Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitX11Forwarding pulumi.StringOutput `pulumi:"permitX11Forwarding"`
	// Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
	SourceAddress pulumi.StringOutput `pulumi:"sourceAddress"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAccessproxysshclientcert registers a new resource with the given unique name, arguments, and options.
func NewAccessproxysshclientcert(ctx *pulumi.Context,
	name string, args *AccessproxysshclientcertArgs, opts ...pulumi.ResourceOption) (*Accessproxysshclientcert, error) {
	if args == nil {
		args = &AccessproxysshclientcertArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Accessproxysshclientcert
	err := ctx.RegisterResource("fortios:firewall/accessproxysshclientcert:Accessproxysshclientcert", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessproxysshclientcert gets an existing Accessproxysshclientcert resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessproxysshclientcert(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessproxysshclientcertState, opts ...pulumi.ResourceOption) (*Accessproxysshclientcert, error) {
	var resource Accessproxysshclientcert
	err := ctx.ReadResource("fortios:firewall/accessproxysshclientcert:Accessproxysshclientcert", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Accessproxysshclientcert resources.
type accessproxysshclientcertState struct {
	// Name of the SSH server public key authentication CA.
	AuthCa *string `pulumi:"authCa"`
	// Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
	CertExtensions []AccessproxysshclientcertCertExtension `pulumi:"certExtensions"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// SSH client certificate name.
	Name *string `pulumi:"name"`
	// Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitAgentForwarding *string `pulumi:"permitAgentForwarding"`
	// Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitPortForwarding *string `pulumi:"permitPortForwarding"`
	// Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
	PermitPty *string `pulumi:"permitPty"`
	// Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
	PermitUserRc *string `pulumi:"permitUserRc"`
	// Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitX11Forwarding *string `pulumi:"permitX11Forwarding"`
	// Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
	SourceAddress *string `pulumi:"sourceAddress"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AccessproxysshclientcertState struct {
	// Name of the SSH server public key authentication CA.
	AuthCa pulumi.StringPtrInput
	// Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
	CertExtensions AccessproxysshclientcertCertExtensionArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// SSH client certificate name.
	Name pulumi.StringPtrInput
	// Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitAgentForwarding pulumi.StringPtrInput
	// Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitPortForwarding pulumi.StringPtrInput
	// Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
	PermitPty pulumi.StringPtrInput
	// Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
	PermitUserRc pulumi.StringPtrInput
	// Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitX11Forwarding pulumi.StringPtrInput
	// Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
	SourceAddress pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AccessproxysshclientcertState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessproxysshclientcertState)(nil)).Elem()
}

type accessproxysshclientcertArgs struct {
	// Name of the SSH server public key authentication CA.
	AuthCa *string `pulumi:"authCa"`
	// Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
	CertExtensions []AccessproxysshclientcertCertExtension `pulumi:"certExtensions"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// SSH client certificate name.
	Name *string `pulumi:"name"`
	// Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitAgentForwarding *string `pulumi:"permitAgentForwarding"`
	// Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitPortForwarding *string `pulumi:"permitPortForwarding"`
	// Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
	PermitPty *string `pulumi:"permitPty"`
	// Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
	PermitUserRc *string `pulumi:"permitUserRc"`
	// Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitX11Forwarding *string `pulumi:"permitX11Forwarding"`
	// Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
	SourceAddress *string `pulumi:"sourceAddress"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Accessproxysshclientcert resource.
type AccessproxysshclientcertArgs struct {
	// Name of the SSH server public key authentication CA.
	AuthCa pulumi.StringPtrInput
	// Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
	CertExtensions AccessproxysshclientcertCertExtensionArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// SSH client certificate name.
	Name pulumi.StringPtrInput
	// Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitAgentForwarding pulumi.StringPtrInput
	// Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitPortForwarding pulumi.StringPtrInput
	// Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
	PermitPty pulumi.StringPtrInput
	// Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
	PermitUserRc pulumi.StringPtrInput
	// Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitX11Forwarding pulumi.StringPtrInput
	// Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
	SourceAddress pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AccessproxysshclientcertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessproxysshclientcertArgs)(nil)).Elem()
}

type AccessproxysshclientcertInput interface {
	pulumi.Input

	ToAccessproxysshclientcertOutput() AccessproxysshclientcertOutput
	ToAccessproxysshclientcertOutputWithContext(ctx context.Context) AccessproxysshclientcertOutput
}

func (*Accessproxysshclientcert) ElementType() reflect.Type {
	return reflect.TypeOf((**Accessproxysshclientcert)(nil)).Elem()
}

func (i *Accessproxysshclientcert) ToAccessproxysshclientcertOutput() AccessproxysshclientcertOutput {
	return i.ToAccessproxysshclientcertOutputWithContext(context.Background())
}

func (i *Accessproxysshclientcert) ToAccessproxysshclientcertOutputWithContext(ctx context.Context) AccessproxysshclientcertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxysshclientcertOutput)
}

// AccessproxysshclientcertArrayInput is an input type that accepts AccessproxysshclientcertArray and AccessproxysshclientcertArrayOutput values.
// You can construct a concrete instance of `AccessproxysshclientcertArrayInput` via:
//
//	AccessproxysshclientcertArray{ AccessproxysshclientcertArgs{...} }
type AccessproxysshclientcertArrayInput interface {
	pulumi.Input

	ToAccessproxysshclientcertArrayOutput() AccessproxysshclientcertArrayOutput
	ToAccessproxysshclientcertArrayOutputWithContext(context.Context) AccessproxysshclientcertArrayOutput
}

type AccessproxysshclientcertArray []AccessproxysshclientcertInput

func (AccessproxysshclientcertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Accessproxysshclientcert)(nil)).Elem()
}

func (i AccessproxysshclientcertArray) ToAccessproxysshclientcertArrayOutput() AccessproxysshclientcertArrayOutput {
	return i.ToAccessproxysshclientcertArrayOutputWithContext(context.Background())
}

func (i AccessproxysshclientcertArray) ToAccessproxysshclientcertArrayOutputWithContext(ctx context.Context) AccessproxysshclientcertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxysshclientcertArrayOutput)
}

// AccessproxysshclientcertMapInput is an input type that accepts AccessproxysshclientcertMap and AccessproxysshclientcertMapOutput values.
// You can construct a concrete instance of `AccessproxysshclientcertMapInput` via:
//
//	AccessproxysshclientcertMap{ "key": AccessproxysshclientcertArgs{...} }
type AccessproxysshclientcertMapInput interface {
	pulumi.Input

	ToAccessproxysshclientcertMapOutput() AccessproxysshclientcertMapOutput
	ToAccessproxysshclientcertMapOutputWithContext(context.Context) AccessproxysshclientcertMapOutput
}

type AccessproxysshclientcertMap map[string]AccessproxysshclientcertInput

func (AccessproxysshclientcertMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Accessproxysshclientcert)(nil)).Elem()
}

func (i AccessproxysshclientcertMap) ToAccessproxysshclientcertMapOutput() AccessproxysshclientcertMapOutput {
	return i.ToAccessproxysshclientcertMapOutputWithContext(context.Background())
}

func (i AccessproxysshclientcertMap) ToAccessproxysshclientcertMapOutputWithContext(ctx context.Context) AccessproxysshclientcertMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessproxysshclientcertMapOutput)
}

type AccessproxysshclientcertOutput struct{ *pulumi.OutputState }

func (AccessproxysshclientcertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Accessproxysshclientcert)(nil)).Elem()
}

func (o AccessproxysshclientcertOutput) ToAccessproxysshclientcertOutput() AccessproxysshclientcertOutput {
	return o
}

func (o AccessproxysshclientcertOutput) ToAccessproxysshclientcertOutputWithContext(ctx context.Context) AccessproxysshclientcertOutput {
	return o
}

// Name of the SSH server public key authentication CA.
func (o AccessproxysshclientcertOutput) AuthCa() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) pulumi.StringOutput { return v.AuthCa }).(pulumi.StringOutput)
}

// Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
func (o AccessproxysshclientcertOutput) CertExtensions() AccessproxysshclientcertCertExtensionArrayOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) AccessproxysshclientcertCertExtensionArrayOutput {
		return v.CertExtensions
	}).(AccessproxysshclientcertCertExtensionArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o AccessproxysshclientcertOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o AccessproxysshclientcertOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// SSH client certificate name.
func (o AccessproxysshclientcertOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
func (o AccessproxysshclientcertOutput) PermitAgentForwarding() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) pulumi.StringOutput { return v.PermitAgentForwarding }).(pulumi.StringOutput)
}

// Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
func (o AccessproxysshclientcertOutput) PermitPortForwarding() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) pulumi.StringOutput { return v.PermitPortForwarding }).(pulumi.StringOutput)
}

// Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
func (o AccessproxysshclientcertOutput) PermitPty() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) pulumi.StringOutput { return v.PermitPty }).(pulumi.StringOutput)
}

// Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
func (o AccessproxysshclientcertOutput) PermitUserRc() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) pulumi.StringOutput { return v.PermitUserRc }).(pulumi.StringOutput)
}

// Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
func (o AccessproxysshclientcertOutput) PermitX11Forwarding() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) pulumi.StringOutput { return v.PermitX11Forwarding }).(pulumi.StringOutput)
}

// Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
func (o AccessproxysshclientcertOutput) SourceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) pulumi.StringOutput { return v.SourceAddress }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o AccessproxysshclientcertOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Accessproxysshclientcert) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type AccessproxysshclientcertArrayOutput struct{ *pulumi.OutputState }

func (AccessproxysshclientcertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Accessproxysshclientcert)(nil)).Elem()
}

func (o AccessproxysshclientcertArrayOutput) ToAccessproxysshclientcertArrayOutput() AccessproxysshclientcertArrayOutput {
	return o
}

func (o AccessproxysshclientcertArrayOutput) ToAccessproxysshclientcertArrayOutputWithContext(ctx context.Context) AccessproxysshclientcertArrayOutput {
	return o
}

func (o AccessproxysshclientcertArrayOutput) Index(i pulumi.IntInput) AccessproxysshclientcertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Accessproxysshclientcert {
		return vs[0].([]*Accessproxysshclientcert)[vs[1].(int)]
	}).(AccessproxysshclientcertOutput)
}

type AccessproxysshclientcertMapOutput struct{ *pulumi.OutputState }

func (AccessproxysshclientcertMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Accessproxysshclientcert)(nil)).Elem()
}

func (o AccessproxysshclientcertMapOutput) ToAccessproxysshclientcertMapOutput() AccessproxysshclientcertMapOutput {
	return o
}

func (o AccessproxysshclientcertMapOutput) ToAccessproxysshclientcertMapOutputWithContext(ctx context.Context) AccessproxysshclientcertMapOutput {
	return o
}

func (o AccessproxysshclientcertMapOutput) MapIndex(k pulumi.StringInput) AccessproxysshclientcertOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Accessproxysshclientcert {
		return vs[0].(map[string]*Accessproxysshclientcert)[vs[1].(string)]
	}).(AccessproxysshclientcertOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxysshclientcertInput)(nil)).Elem(), &Accessproxysshclientcert{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxysshclientcertArrayInput)(nil)).Elem(), AccessproxysshclientcertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessproxysshclientcertMapInput)(nil)).Elem(), AccessproxysshclientcertMap{})
	pulumi.RegisterOutputType(AccessproxysshclientcertOutput{})
	pulumi.RegisterOutputType(AccessproxysshclientcertArrayOutput{})
	pulumi.RegisterOutputType(AccessproxysshclientcertMapOutput{})
}
