// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Provides a resource to configure firewall service group of FortiOS.
//
// !> **Warning:** The resource will be deprecated and replaced by new resource `firewall/service.Group`, we recommend that you use the new resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firewall.NewObjectServicegroup(ctx, "v11", &firewall.ObjectServicegroupArgs{
//				Comment: pulumi.String("fdsafdsa"),
//				Members: pulumi.StringArray{
//					pulumi.String("DCE-RPC"),
//					pulumi.String("DNS"),
//					pulumi.String("HTTPS"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ObjectServicegroup struct {
	pulumi.CustomResourceState

	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Service objects contained within the group.
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// Service group name.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewObjectServicegroup registers a new resource with the given unique name, arguments, and options.
func NewObjectServicegroup(ctx *pulumi.Context,
	name string, args *ObjectServicegroupArgs, opts ...pulumi.ResourceOption) (*ObjectServicegroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObjectServicegroup
	err := ctx.RegisterResource("fortios:firewall/objectServicegroup:ObjectServicegroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectServicegroup gets an existing ObjectServicegroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectServicegroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectServicegroupState, opts ...pulumi.ResourceOption) (*ObjectServicegroup, error) {
	var resource ObjectServicegroup
	err := ctx.ReadResource("fortios:firewall/objectServicegroup:ObjectServicegroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectServicegroup resources.
type objectServicegroupState struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Service objects contained within the group.
	Members []string `pulumi:"members"`
	// Service group name.
	Name *string `pulumi:"name"`
}

type ObjectServicegroupState struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Service objects contained within the group.
	Members pulumi.StringArrayInput
	// Service group name.
	Name pulumi.StringPtrInput
}

func (ObjectServicegroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectServicegroupState)(nil)).Elem()
}

type objectServicegroupArgs struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Service objects contained within the group.
	Members []string `pulumi:"members"`
	// Service group name.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ObjectServicegroup resource.
type ObjectServicegroupArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Service objects contained within the group.
	Members pulumi.StringArrayInput
	// Service group name.
	Name pulumi.StringPtrInput
}

func (ObjectServicegroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectServicegroupArgs)(nil)).Elem()
}

type ObjectServicegroupInput interface {
	pulumi.Input

	ToObjectServicegroupOutput() ObjectServicegroupOutput
	ToObjectServicegroupOutputWithContext(ctx context.Context) ObjectServicegroupOutput
}

func (*ObjectServicegroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectServicegroup)(nil)).Elem()
}

func (i *ObjectServicegroup) ToObjectServicegroupOutput() ObjectServicegroupOutput {
	return i.ToObjectServicegroupOutputWithContext(context.Background())
}

func (i *ObjectServicegroup) ToObjectServicegroupOutputWithContext(ctx context.Context) ObjectServicegroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectServicegroupOutput)
}

// ObjectServicegroupArrayInput is an input type that accepts ObjectServicegroupArray and ObjectServicegroupArrayOutput values.
// You can construct a concrete instance of `ObjectServicegroupArrayInput` via:
//
//	ObjectServicegroupArray{ ObjectServicegroupArgs{...} }
type ObjectServicegroupArrayInput interface {
	pulumi.Input

	ToObjectServicegroupArrayOutput() ObjectServicegroupArrayOutput
	ToObjectServicegroupArrayOutputWithContext(context.Context) ObjectServicegroupArrayOutput
}

type ObjectServicegroupArray []ObjectServicegroupInput

func (ObjectServicegroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectServicegroup)(nil)).Elem()
}

func (i ObjectServicegroupArray) ToObjectServicegroupArrayOutput() ObjectServicegroupArrayOutput {
	return i.ToObjectServicegroupArrayOutputWithContext(context.Background())
}

func (i ObjectServicegroupArray) ToObjectServicegroupArrayOutputWithContext(ctx context.Context) ObjectServicegroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectServicegroupArrayOutput)
}

// ObjectServicegroupMapInput is an input type that accepts ObjectServicegroupMap and ObjectServicegroupMapOutput values.
// You can construct a concrete instance of `ObjectServicegroupMapInput` via:
//
//	ObjectServicegroupMap{ "key": ObjectServicegroupArgs{...} }
type ObjectServicegroupMapInput interface {
	pulumi.Input

	ToObjectServicegroupMapOutput() ObjectServicegroupMapOutput
	ToObjectServicegroupMapOutputWithContext(context.Context) ObjectServicegroupMapOutput
}

type ObjectServicegroupMap map[string]ObjectServicegroupInput

func (ObjectServicegroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectServicegroup)(nil)).Elem()
}

func (i ObjectServicegroupMap) ToObjectServicegroupMapOutput() ObjectServicegroupMapOutput {
	return i.ToObjectServicegroupMapOutputWithContext(context.Background())
}

func (i ObjectServicegroupMap) ToObjectServicegroupMapOutputWithContext(ctx context.Context) ObjectServicegroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectServicegroupMapOutput)
}

type ObjectServicegroupOutput struct{ *pulumi.OutputState }

func (ObjectServicegroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectServicegroup)(nil)).Elem()
}

func (o ObjectServicegroupOutput) ToObjectServicegroupOutput() ObjectServicegroupOutput {
	return o
}

func (o ObjectServicegroupOutput) ToObjectServicegroupOutputWithContext(ctx context.Context) ObjectServicegroupOutput {
	return o
}

// Comment.
func (o ObjectServicegroupOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectServicegroup) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Service objects contained within the group.
func (o ObjectServicegroupOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObjectServicegroup) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// Service group name.
func (o ObjectServicegroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectServicegroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type ObjectServicegroupArrayOutput struct{ *pulumi.OutputState }

func (ObjectServicegroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectServicegroup)(nil)).Elem()
}

func (o ObjectServicegroupArrayOutput) ToObjectServicegroupArrayOutput() ObjectServicegroupArrayOutput {
	return o
}

func (o ObjectServicegroupArrayOutput) ToObjectServicegroupArrayOutputWithContext(ctx context.Context) ObjectServicegroupArrayOutput {
	return o
}

func (o ObjectServicegroupArrayOutput) Index(i pulumi.IntInput) ObjectServicegroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObjectServicegroup {
		return vs[0].([]*ObjectServicegroup)[vs[1].(int)]
	}).(ObjectServicegroupOutput)
}

type ObjectServicegroupMapOutput struct{ *pulumi.OutputState }

func (ObjectServicegroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectServicegroup)(nil)).Elem()
}

func (o ObjectServicegroupMapOutput) ToObjectServicegroupMapOutput() ObjectServicegroupMapOutput {
	return o
}

func (o ObjectServicegroupMapOutput) ToObjectServicegroupMapOutputWithContext(ctx context.Context) ObjectServicegroupMapOutput {
	return o
}

func (o ObjectServicegroupMapOutput) MapIndex(k pulumi.StringInput) ObjectServicegroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObjectServicegroup {
		return vs[0].(map[string]*ObjectServicegroup)[vs[1].(string)]
	}).(ObjectServicegroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectServicegroupInput)(nil)).Elem(), &ObjectServicegroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectServicegroupArrayInput)(nil)).Elem(), ObjectServicegroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectServicegroupMapInput)(nil)).Elem(), ObjectServicegroupMap{})
	pulumi.RegisterOutputType(ObjectServicegroupOutput{})
	pulumi.RegisterOutputType(ObjectServicegroupArrayOutput{})
	pulumi.RegisterOutputType(ObjectServicegroupMapOutput{})
}
