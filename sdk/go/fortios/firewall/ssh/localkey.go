// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// SSH proxy local keys.
//
// ## Import
//
// FirewallSsh LocalKey can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/ssh/localkey:Localkey labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/ssh/localkey:Localkey labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Localkey struct {
	pulumi.CustomResourceState

	// SSH proxy local key name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Password for SSH private key.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// SSH proxy private key, encrypted with a password.
	PrivateKey pulumi.StringOutput `pulumi:"privateKey"`
	// SSH proxy public key.
	PublicKey pulumi.StringOutput `pulumi:"publicKey"`
	// SSH proxy local key source type. Valid values: `built-in`, `user`.
	Source pulumi.StringOutput `pulumi:"source"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewLocalkey registers a new resource with the given unique name, arguments, and options.
func NewLocalkey(ctx *pulumi.Context,
	name string, args *LocalkeyArgs, opts ...pulumi.ResourceOption) (*Localkey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrivateKey == nil {
		return nil, errors.New("invalid value for required argument 'PrivateKey'")
	}
	if args.PublicKey == nil {
		return nil, errors.New("invalid value for required argument 'PublicKey'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.PrivateKey != nil {
		args.PrivateKey = pulumi.ToSecret(args.PrivateKey).(pulumi.StringInput)
	}
	if args.PublicKey != nil {
		args.PublicKey = pulumi.ToSecret(args.PublicKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
		"privateKey",
		"publicKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Localkey
	err := ctx.RegisterResource("fortios:firewall/ssh/localkey:Localkey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalkey gets an existing Localkey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalkey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalkeyState, opts ...pulumi.ResourceOption) (*Localkey, error) {
	var resource Localkey
	err := ctx.ReadResource("fortios:firewall/ssh/localkey:Localkey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Localkey resources.
type localkeyState struct {
	// SSH proxy local key name.
	Name *string `pulumi:"name"`
	// Password for SSH private key.
	Password *string `pulumi:"password"`
	// SSH proxy private key, encrypted with a password.
	PrivateKey *string `pulumi:"privateKey"`
	// SSH proxy public key.
	PublicKey *string `pulumi:"publicKey"`
	// SSH proxy local key source type. Valid values: `built-in`, `user`.
	Source *string `pulumi:"source"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type LocalkeyState struct {
	// SSH proxy local key name.
	Name pulumi.StringPtrInput
	// Password for SSH private key.
	Password pulumi.StringPtrInput
	// SSH proxy private key, encrypted with a password.
	PrivateKey pulumi.StringPtrInput
	// SSH proxy public key.
	PublicKey pulumi.StringPtrInput
	// SSH proxy local key source type. Valid values: `built-in`, `user`.
	Source pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (LocalkeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*localkeyState)(nil)).Elem()
}

type localkeyArgs struct {
	// SSH proxy local key name.
	Name *string `pulumi:"name"`
	// Password for SSH private key.
	Password *string `pulumi:"password"`
	// SSH proxy private key, encrypted with a password.
	PrivateKey string `pulumi:"privateKey"`
	// SSH proxy public key.
	PublicKey string `pulumi:"publicKey"`
	// SSH proxy local key source type. Valid values: `built-in`, `user`.
	Source *string `pulumi:"source"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Localkey resource.
type LocalkeyArgs struct {
	// SSH proxy local key name.
	Name pulumi.StringPtrInput
	// Password for SSH private key.
	Password pulumi.StringPtrInput
	// SSH proxy private key, encrypted with a password.
	PrivateKey pulumi.StringInput
	// SSH proxy public key.
	PublicKey pulumi.StringInput
	// SSH proxy local key source type. Valid values: `built-in`, `user`.
	Source pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (LocalkeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localkeyArgs)(nil)).Elem()
}

type LocalkeyInput interface {
	pulumi.Input

	ToLocalkeyOutput() LocalkeyOutput
	ToLocalkeyOutputWithContext(ctx context.Context) LocalkeyOutput
}

func (*Localkey) ElementType() reflect.Type {
	return reflect.TypeOf((**Localkey)(nil)).Elem()
}

func (i *Localkey) ToLocalkeyOutput() LocalkeyOutput {
	return i.ToLocalkeyOutputWithContext(context.Background())
}

func (i *Localkey) ToLocalkeyOutputWithContext(ctx context.Context) LocalkeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalkeyOutput)
}

// LocalkeyArrayInput is an input type that accepts LocalkeyArray and LocalkeyArrayOutput values.
// You can construct a concrete instance of `LocalkeyArrayInput` via:
//
//	LocalkeyArray{ LocalkeyArgs{...} }
type LocalkeyArrayInput interface {
	pulumi.Input

	ToLocalkeyArrayOutput() LocalkeyArrayOutput
	ToLocalkeyArrayOutputWithContext(context.Context) LocalkeyArrayOutput
}

type LocalkeyArray []LocalkeyInput

func (LocalkeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Localkey)(nil)).Elem()
}

func (i LocalkeyArray) ToLocalkeyArrayOutput() LocalkeyArrayOutput {
	return i.ToLocalkeyArrayOutputWithContext(context.Background())
}

func (i LocalkeyArray) ToLocalkeyArrayOutputWithContext(ctx context.Context) LocalkeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalkeyArrayOutput)
}

// LocalkeyMapInput is an input type that accepts LocalkeyMap and LocalkeyMapOutput values.
// You can construct a concrete instance of `LocalkeyMapInput` via:
//
//	LocalkeyMap{ "key": LocalkeyArgs{...} }
type LocalkeyMapInput interface {
	pulumi.Input

	ToLocalkeyMapOutput() LocalkeyMapOutput
	ToLocalkeyMapOutputWithContext(context.Context) LocalkeyMapOutput
}

type LocalkeyMap map[string]LocalkeyInput

func (LocalkeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Localkey)(nil)).Elem()
}

func (i LocalkeyMap) ToLocalkeyMapOutput() LocalkeyMapOutput {
	return i.ToLocalkeyMapOutputWithContext(context.Background())
}

func (i LocalkeyMap) ToLocalkeyMapOutputWithContext(ctx context.Context) LocalkeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalkeyMapOutput)
}

type LocalkeyOutput struct{ *pulumi.OutputState }

func (LocalkeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Localkey)(nil)).Elem()
}

func (o LocalkeyOutput) ToLocalkeyOutput() LocalkeyOutput {
	return o
}

func (o LocalkeyOutput) ToLocalkeyOutputWithContext(ctx context.Context) LocalkeyOutput {
	return o
}

// SSH proxy local key name.
func (o LocalkeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Localkey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Password for SSH private key.
func (o LocalkeyOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Localkey) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// SSH proxy private key, encrypted with a password.
func (o LocalkeyOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Localkey) pulumi.StringOutput { return v.PrivateKey }).(pulumi.StringOutput)
}

// SSH proxy public key.
func (o LocalkeyOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Localkey) pulumi.StringOutput { return v.PublicKey }).(pulumi.StringOutput)
}

// SSH proxy local key source type. Valid values: `built-in`, `user`.
func (o LocalkeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *Localkey) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o LocalkeyOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Localkey) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type LocalkeyArrayOutput struct{ *pulumi.OutputState }

func (LocalkeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Localkey)(nil)).Elem()
}

func (o LocalkeyArrayOutput) ToLocalkeyArrayOutput() LocalkeyArrayOutput {
	return o
}

func (o LocalkeyArrayOutput) ToLocalkeyArrayOutputWithContext(ctx context.Context) LocalkeyArrayOutput {
	return o
}

func (o LocalkeyArrayOutput) Index(i pulumi.IntInput) LocalkeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Localkey {
		return vs[0].([]*Localkey)[vs[1].(int)]
	}).(LocalkeyOutput)
}

type LocalkeyMapOutput struct{ *pulumi.OutputState }

func (LocalkeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Localkey)(nil)).Elem()
}

func (o LocalkeyMapOutput) ToLocalkeyMapOutput() LocalkeyMapOutput {
	return o
}

func (o LocalkeyMapOutput) ToLocalkeyMapOutputWithContext(ctx context.Context) LocalkeyMapOutput {
	return o
}

func (o LocalkeyMapOutput) MapIndex(k pulumi.StringInput) LocalkeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Localkey {
		return vs[0].(map[string]*Localkey)[vs[1].(string)]
	}).(LocalkeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalkeyInput)(nil)).Elem(), &Localkey{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalkeyArrayInput)(nil)).Elem(), LocalkeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalkeyMapInput)(nil)).Elem(), LocalkeyMap{})
	pulumi.RegisterOutputType(LocalkeyOutput{})
	pulumi.RegisterOutputType(LocalkeyArrayOutput{})
	pulumi.RegisterOutputType(LocalkeyMapOutput{})
}
