// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure shaping policies.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firewall.NewShapingpolicy(ctx, "trname", &firewall.ShapingpolicyArgs{
//				ClassId:             pulumi.Int(0),
//				DiffservForward:     pulumi.String("disable"),
//				DiffservReverse:     pulumi.String("disable"),
//				DiffservcodeForward: pulumi.String("000000"),
//				DiffservcodeRev:     pulumi.String("000000"),
//				Dstaddrs: firewall.ShapingpolicyDstaddrArray{
//					&firewall.ShapingpolicyDstaddrArgs{
//						Name: pulumi.String("all"),
//					},
//				},
//				Dstintfs: firewall.ShapingpolicyDstintfArray{
//					&firewall.ShapingpolicyDstintfArgs{
//						Name: pulumi.String("port4"),
//					},
//				},
//				Fosid:              pulumi.Int(1),
//				InternetService:    pulumi.String("disable"),
//				InternetServiceSrc: pulumi.String("disable"),
//				IpVersion:          pulumi.String("4"),
//				Services: firewall.ShapingpolicyServiceArray{
//					&firewall.ShapingpolicyServiceArgs{
//						Name: pulumi.String("ALL"),
//					},
//				},
//				Srcaddrs: firewall.ShapingpolicySrcaddrArray{
//					&firewall.ShapingpolicySrcaddrArgs{
//						Name: pulumi.String("all"),
//					},
//				},
//				Status:    pulumi.String("enable"),
//				Tos:       pulumi.String("0x00"),
//				TosMask:   pulumi.String("0x00"),
//				TosNegate: pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Firewall ShapingPolicy can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:firewall/shapingpolicy:Shapingpolicy labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:firewall/shapingpolicy:Shapingpolicy labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Shapingpolicy struct {
	pulumi.CustomResourceState

	// IDs of one or more application categories that this shaper applies application control traffic shaping to. The structure of `appCategory` block is documented below.
	AppCategories ShapingpolicyAppCategoryArrayOutput `pulumi:"appCategories"`
	// One or more application group names. The structure of `appGroup` block is documented below.
	AppGroups ShapingpolicyAppGroupArrayOutput `pulumi:"appGroups"`
	// IDs of one or more applications that this shaper applies application control traffic shaping to. The structure of `application` block is documented below.
	Applications ShapingpolicyApplicationArrayOutput `pulumi:"applications"`
	// Traffic class ID.
	ClassId pulumi.IntOutput `pulumi:"classId"`
	// Comments.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// VLAN CoS bit pattern.
	Cos pulumi.StringOutput `pulumi:"cos"`
	// VLAN CoS evaluated bits.
	CosMask pulumi.StringOutput `pulumi:"cosMask"`
	// Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`.
	DiffservForward pulumi.StringOutput `pulumi:"diffservForward"`
	// Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`.
	DiffservReverse pulumi.StringOutput `pulumi:"diffservReverse"`
	// Change packet's DiffServ to this value.
	DiffservcodeForward pulumi.StringOutput `pulumi:"diffservcodeForward"`
	// Change packet's reverse (reply) DiffServ to this value.
	DiffservcodeRev pulumi.StringOutput `pulumi:"diffservcodeRev"`
	// IPv6 destination address and address group names. The structure of `dstaddr6` block is documented below.
	Dstaddr6s ShapingpolicyDstaddr6ArrayOutput `pulumi:"dstaddr6s"`
	// IPv4 destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs ShapingpolicyDstaddrArrayOutput `pulumi:"dstaddrs"`
	// One or more outgoing (egress) interfaces. The structure of `dstintf` block is documented below.
	Dstintfs ShapingpolicyDstintfArrayOutput `pulumi:"dstintfs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Shaping policy ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Apply this traffic shaping policy to user groups that have authenticated with the FortiGate. The structure of `groups` block is documented below.
	Groups ShapingpolicyGroupArrayOutput `pulumi:"groups"`
	// Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used.  Valid values: `enable`, `disable`.
	InternetService pulumi.StringOutput `pulumi:"internetService"`
	// Custom Internet Service group name. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups ShapingpolicyInternetServiceCustomGroupArrayOutput `pulumi:"internetServiceCustomGroups"`
	// Custom Internet Service name. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms ShapingpolicyInternetServiceCustomArrayOutput `pulumi:"internetServiceCustoms"`
	// Internet Service group name. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups ShapingpolicyInternetServiceGroupArrayOutput `pulumi:"internetServiceGroups"`
	// Internet Service ID. The structure of `internetServiceId` block is documented below.
	InternetServiceIds ShapingpolicyInternetServiceIdArrayOutput `pulumi:"internetServiceIds"`
	// Internet Service ID. The structure of `internetServiceName` block is documented below.
	InternetServiceNames ShapingpolicyInternetServiceNameArrayOutput `pulumi:"internetServiceNames"`
	// Enable/disable use of Internet Services in source for this policy. If enabled, source address is not used.  Valid values: `enable`, `disable`.
	InternetServiceSrc pulumi.StringOutput `pulumi:"internetServiceSrc"`
	// Custom Internet Service source group name. The structure of `internetServiceSrcCustomGroup` block is documented below.
	InternetServiceSrcCustomGroups ShapingpolicyInternetServiceSrcCustomGroupArrayOutput `pulumi:"internetServiceSrcCustomGroups"`
	// Custom Internet Service source name. The structure of `internetServiceSrcCustom` block is documented below.
	InternetServiceSrcCustoms ShapingpolicyInternetServiceSrcCustomArrayOutput `pulumi:"internetServiceSrcCustoms"`
	// Internet Service source group name. The structure of `internetServiceSrcGroup` block is documented below.
	InternetServiceSrcGroups ShapingpolicyInternetServiceSrcGroupArrayOutput `pulumi:"internetServiceSrcGroups"`
	// Internet Service source ID. The structure of `internetServiceSrcId` block is documented below.
	InternetServiceSrcIds ShapingpolicyInternetServiceSrcIdArrayOutput `pulumi:"internetServiceSrcIds"`
	// Internet Service source name. The structure of `internetServiceSrcName` block is documented below.
	InternetServiceSrcNames ShapingpolicyInternetServiceSrcNameArrayOutput `pulumi:"internetServiceSrcNames"`
	// Apply this traffic shaping policy to IPv4 or IPv6 traffic. Valid values: `4`, `6`.
	IpVersion pulumi.StringOutput `pulumi:"ipVersion"`
	// Shaping policy name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Per-IP traffic shaper to apply with this policy.
	PerIpShaper pulumi.StringOutput `pulumi:"perIpShaper"`
	// Schedule name.
	Schedule pulumi.StringOutput `pulumi:"schedule"`
	// Service and service group names. The structure of `service` block is documented below.
	Services ShapingpolicyServiceArrayOutput `pulumi:"services"`
	// IPv6 source address and address group names. The structure of `srcaddr6` block is documented below.
	Srcaddr6s ShapingpolicySrcaddr6ArrayOutput `pulumi:"srcaddr6s"`
	// IPv4 source address and address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs ShapingpolicySrcaddrArrayOutput `pulumi:"srcaddrs"`
	// One or more incoming (ingress) interfaces. The structure of `srcintf` block is documented below.
	Srcintfs ShapingpolicySrcintfArrayOutput `pulumi:"srcintfs"`
	// Enable/disable this traffic shaping policy. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// ToS (Type of Service) value used for comparison.
	Tos pulumi.StringOutput `pulumi:"tos"`
	// Non-zero bit positions are used for comparison while zero bit positions are ignored.
	TosMask pulumi.StringOutput `pulumi:"tosMask"`
	// Enable negated TOS match. Valid values: `enable`, `disable`.
	TosNegate pulumi.StringOutput `pulumi:"tosNegate"`
	// Traffic shaper to apply to traffic forwarded by the firewall policy.
	TrafficShaper pulumi.StringOutput `pulumi:"trafficShaper"`
	// Traffic shaper to apply to response traffic received by the firewall policy.
	TrafficShaperReverse pulumi.StringOutput `pulumi:"trafficShaperReverse"`
	// Traffic type. Valid values: `forwarding`, `local-in`, `local-out`.
	TrafficType pulumi.StringOutput `pulumi:"trafficType"`
	// IDs of one or more FortiGuard Web Filtering categories that this shaper applies traffic shaping to. The structure of `urlCategory` block is documented below.
	UrlCategories ShapingpolicyUrlCategoryArrayOutput `pulumi:"urlCategories"`
	// Apply this traffic shaping policy to individual users that have authenticated with the FortiGate. The structure of `users` block is documented below.
	Users ShapingpolicyUserArrayOutput `pulumi:"users"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewShapingpolicy registers a new resource with the given unique name, arguments, and options.
func NewShapingpolicy(ctx *pulumi.Context,
	name string, args *ShapingpolicyArgs, opts ...pulumi.ResourceOption) (*Shapingpolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dstintfs == nil {
		return nil, errors.New("invalid value for required argument 'Dstintfs'")
	}
	if args.Srcaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Srcaddrs'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Shapingpolicy
	err := ctx.RegisterResource("fortios:firewall/shapingpolicy:Shapingpolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetShapingpolicy gets an existing Shapingpolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetShapingpolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ShapingpolicyState, opts ...pulumi.ResourceOption) (*Shapingpolicy, error) {
	var resource Shapingpolicy
	err := ctx.ReadResource("fortios:firewall/shapingpolicy:Shapingpolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Shapingpolicy resources.
type shapingpolicyState struct {
	// IDs of one or more application categories that this shaper applies application control traffic shaping to. The structure of `appCategory` block is documented below.
	AppCategories []ShapingpolicyAppCategory `pulumi:"appCategories"`
	// One or more application group names. The structure of `appGroup` block is documented below.
	AppGroups []ShapingpolicyAppGroup `pulumi:"appGroups"`
	// IDs of one or more applications that this shaper applies application control traffic shaping to. The structure of `application` block is documented below.
	Applications []ShapingpolicyApplication `pulumi:"applications"`
	// Traffic class ID.
	ClassId *int `pulumi:"classId"`
	// Comments.
	Comment *string `pulumi:"comment"`
	// VLAN CoS bit pattern.
	Cos *string `pulumi:"cos"`
	// VLAN CoS evaluated bits.
	CosMask *string `pulumi:"cosMask"`
	// Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`.
	DiffservForward *string `pulumi:"diffservForward"`
	// Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`.
	DiffservReverse *string `pulumi:"diffservReverse"`
	// Change packet's DiffServ to this value.
	DiffservcodeForward *string `pulumi:"diffservcodeForward"`
	// Change packet's reverse (reply) DiffServ to this value.
	DiffservcodeRev *string `pulumi:"diffservcodeRev"`
	// IPv6 destination address and address group names. The structure of `dstaddr6` block is documented below.
	Dstaddr6s []ShapingpolicyDstaddr6 `pulumi:"dstaddr6s"`
	// IPv4 destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs []ShapingpolicyDstaddr `pulumi:"dstaddrs"`
	// One or more outgoing (egress) interfaces. The structure of `dstintf` block is documented below.
	Dstintfs []ShapingpolicyDstintf `pulumi:"dstintfs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Shaping policy ID.
	Fosid *int `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Apply this traffic shaping policy to user groups that have authenticated with the FortiGate. The structure of `groups` block is documented below.
	Groups []ShapingpolicyGroup `pulumi:"groups"`
	// Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used.  Valid values: `enable`, `disable`.
	InternetService *string `pulumi:"internetService"`
	// Custom Internet Service group name. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups []ShapingpolicyInternetServiceCustomGroup `pulumi:"internetServiceCustomGroups"`
	// Custom Internet Service name. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms []ShapingpolicyInternetServiceCustom `pulumi:"internetServiceCustoms"`
	// Internet Service group name. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups []ShapingpolicyInternetServiceGroup `pulumi:"internetServiceGroups"`
	// Internet Service ID. The structure of `internetServiceId` block is documented below.
	InternetServiceIds []ShapingpolicyInternetServiceId `pulumi:"internetServiceIds"`
	// Internet Service ID. The structure of `internetServiceName` block is documented below.
	InternetServiceNames []ShapingpolicyInternetServiceName `pulumi:"internetServiceNames"`
	// Enable/disable use of Internet Services in source for this policy. If enabled, source address is not used.  Valid values: `enable`, `disable`.
	InternetServiceSrc *string `pulumi:"internetServiceSrc"`
	// Custom Internet Service source group name. The structure of `internetServiceSrcCustomGroup` block is documented below.
	InternetServiceSrcCustomGroups []ShapingpolicyInternetServiceSrcCustomGroup `pulumi:"internetServiceSrcCustomGroups"`
	// Custom Internet Service source name. The structure of `internetServiceSrcCustom` block is documented below.
	InternetServiceSrcCustoms []ShapingpolicyInternetServiceSrcCustom `pulumi:"internetServiceSrcCustoms"`
	// Internet Service source group name. The structure of `internetServiceSrcGroup` block is documented below.
	InternetServiceSrcGroups []ShapingpolicyInternetServiceSrcGroup `pulumi:"internetServiceSrcGroups"`
	// Internet Service source ID. The structure of `internetServiceSrcId` block is documented below.
	InternetServiceSrcIds []ShapingpolicyInternetServiceSrcId `pulumi:"internetServiceSrcIds"`
	// Internet Service source name. The structure of `internetServiceSrcName` block is documented below.
	InternetServiceSrcNames []ShapingpolicyInternetServiceSrcName `pulumi:"internetServiceSrcNames"`
	// Apply this traffic shaping policy to IPv4 or IPv6 traffic. Valid values: `4`, `6`.
	IpVersion *string `pulumi:"ipVersion"`
	// Shaping policy name.
	Name *string `pulumi:"name"`
	// Per-IP traffic shaper to apply with this policy.
	PerIpShaper *string `pulumi:"perIpShaper"`
	// Schedule name.
	Schedule *string `pulumi:"schedule"`
	// Service and service group names. The structure of `service` block is documented below.
	Services []ShapingpolicyService `pulumi:"services"`
	// IPv6 source address and address group names. The structure of `srcaddr6` block is documented below.
	Srcaddr6s []ShapingpolicySrcaddr6 `pulumi:"srcaddr6s"`
	// IPv4 source address and address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs []ShapingpolicySrcaddr `pulumi:"srcaddrs"`
	// One or more incoming (ingress) interfaces. The structure of `srcintf` block is documented below.
	Srcintfs []ShapingpolicySrcintf `pulumi:"srcintfs"`
	// Enable/disable this traffic shaping policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// ToS (Type of Service) value used for comparison.
	Tos *string `pulumi:"tos"`
	// Non-zero bit positions are used for comparison while zero bit positions are ignored.
	TosMask *string `pulumi:"tosMask"`
	// Enable negated TOS match. Valid values: `enable`, `disable`.
	TosNegate *string `pulumi:"tosNegate"`
	// Traffic shaper to apply to traffic forwarded by the firewall policy.
	TrafficShaper *string `pulumi:"trafficShaper"`
	// Traffic shaper to apply to response traffic received by the firewall policy.
	TrafficShaperReverse *string `pulumi:"trafficShaperReverse"`
	// Traffic type. Valid values: `forwarding`, `local-in`, `local-out`.
	TrafficType *string `pulumi:"trafficType"`
	// IDs of one or more FortiGuard Web Filtering categories that this shaper applies traffic shaping to. The structure of `urlCategory` block is documented below.
	UrlCategories []ShapingpolicyUrlCategory `pulumi:"urlCategories"`
	// Apply this traffic shaping policy to individual users that have authenticated with the FortiGate. The structure of `users` block is documented below.
	Users []ShapingpolicyUser `pulumi:"users"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ShapingpolicyState struct {
	// IDs of one or more application categories that this shaper applies application control traffic shaping to. The structure of `appCategory` block is documented below.
	AppCategories ShapingpolicyAppCategoryArrayInput
	// One or more application group names. The structure of `appGroup` block is documented below.
	AppGroups ShapingpolicyAppGroupArrayInput
	// IDs of one or more applications that this shaper applies application control traffic shaping to. The structure of `application` block is documented below.
	Applications ShapingpolicyApplicationArrayInput
	// Traffic class ID.
	ClassId pulumi.IntPtrInput
	// Comments.
	Comment pulumi.StringPtrInput
	// VLAN CoS bit pattern.
	Cos pulumi.StringPtrInput
	// VLAN CoS evaluated bits.
	CosMask pulumi.StringPtrInput
	// Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`.
	DiffservForward pulumi.StringPtrInput
	// Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`.
	DiffservReverse pulumi.StringPtrInput
	// Change packet's DiffServ to this value.
	DiffservcodeForward pulumi.StringPtrInput
	// Change packet's reverse (reply) DiffServ to this value.
	DiffservcodeRev pulumi.StringPtrInput
	// IPv6 destination address and address group names. The structure of `dstaddr6` block is documented below.
	Dstaddr6s ShapingpolicyDstaddr6ArrayInput
	// IPv4 destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs ShapingpolicyDstaddrArrayInput
	// One or more outgoing (egress) interfaces. The structure of `dstintf` block is documented below.
	Dstintfs ShapingpolicyDstintfArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Shaping policy ID.
	Fosid pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Apply this traffic shaping policy to user groups that have authenticated with the FortiGate. The structure of `groups` block is documented below.
	Groups ShapingpolicyGroupArrayInput
	// Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used.  Valid values: `enable`, `disable`.
	InternetService pulumi.StringPtrInput
	// Custom Internet Service group name. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups ShapingpolicyInternetServiceCustomGroupArrayInput
	// Custom Internet Service name. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms ShapingpolicyInternetServiceCustomArrayInput
	// Internet Service group name. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups ShapingpolicyInternetServiceGroupArrayInput
	// Internet Service ID. The structure of `internetServiceId` block is documented below.
	InternetServiceIds ShapingpolicyInternetServiceIdArrayInput
	// Internet Service ID. The structure of `internetServiceName` block is documented below.
	InternetServiceNames ShapingpolicyInternetServiceNameArrayInput
	// Enable/disable use of Internet Services in source for this policy. If enabled, source address is not used.  Valid values: `enable`, `disable`.
	InternetServiceSrc pulumi.StringPtrInput
	// Custom Internet Service source group name. The structure of `internetServiceSrcCustomGroup` block is documented below.
	InternetServiceSrcCustomGroups ShapingpolicyInternetServiceSrcCustomGroupArrayInput
	// Custom Internet Service source name. The structure of `internetServiceSrcCustom` block is documented below.
	InternetServiceSrcCustoms ShapingpolicyInternetServiceSrcCustomArrayInput
	// Internet Service source group name. The structure of `internetServiceSrcGroup` block is documented below.
	InternetServiceSrcGroups ShapingpolicyInternetServiceSrcGroupArrayInput
	// Internet Service source ID. The structure of `internetServiceSrcId` block is documented below.
	InternetServiceSrcIds ShapingpolicyInternetServiceSrcIdArrayInput
	// Internet Service source name. The structure of `internetServiceSrcName` block is documented below.
	InternetServiceSrcNames ShapingpolicyInternetServiceSrcNameArrayInput
	// Apply this traffic shaping policy to IPv4 or IPv6 traffic. Valid values: `4`, `6`.
	IpVersion pulumi.StringPtrInput
	// Shaping policy name.
	Name pulumi.StringPtrInput
	// Per-IP traffic shaper to apply with this policy.
	PerIpShaper pulumi.StringPtrInput
	// Schedule name.
	Schedule pulumi.StringPtrInput
	// Service and service group names. The structure of `service` block is documented below.
	Services ShapingpolicyServiceArrayInput
	// IPv6 source address and address group names. The structure of `srcaddr6` block is documented below.
	Srcaddr6s ShapingpolicySrcaddr6ArrayInput
	// IPv4 source address and address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs ShapingpolicySrcaddrArrayInput
	// One or more incoming (ingress) interfaces. The structure of `srcintf` block is documented below.
	Srcintfs ShapingpolicySrcintfArrayInput
	// Enable/disable this traffic shaping policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// ToS (Type of Service) value used for comparison.
	Tos pulumi.StringPtrInput
	// Non-zero bit positions are used for comparison while zero bit positions are ignored.
	TosMask pulumi.StringPtrInput
	// Enable negated TOS match. Valid values: `enable`, `disable`.
	TosNegate pulumi.StringPtrInput
	// Traffic shaper to apply to traffic forwarded by the firewall policy.
	TrafficShaper pulumi.StringPtrInput
	// Traffic shaper to apply to response traffic received by the firewall policy.
	TrafficShaperReverse pulumi.StringPtrInput
	// Traffic type. Valid values: `forwarding`, `local-in`, `local-out`.
	TrafficType pulumi.StringPtrInput
	// IDs of one or more FortiGuard Web Filtering categories that this shaper applies traffic shaping to. The structure of `urlCategory` block is documented below.
	UrlCategories ShapingpolicyUrlCategoryArrayInput
	// Apply this traffic shaping policy to individual users that have authenticated with the FortiGate. The structure of `users` block is documented below.
	Users ShapingpolicyUserArrayInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ShapingpolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*shapingpolicyState)(nil)).Elem()
}

type shapingpolicyArgs struct {
	// IDs of one or more application categories that this shaper applies application control traffic shaping to. The structure of `appCategory` block is documented below.
	AppCategories []ShapingpolicyAppCategory `pulumi:"appCategories"`
	// One or more application group names. The structure of `appGroup` block is documented below.
	AppGroups []ShapingpolicyAppGroup `pulumi:"appGroups"`
	// IDs of one or more applications that this shaper applies application control traffic shaping to. The structure of `application` block is documented below.
	Applications []ShapingpolicyApplication `pulumi:"applications"`
	// Traffic class ID.
	ClassId *int `pulumi:"classId"`
	// Comments.
	Comment *string `pulumi:"comment"`
	// VLAN CoS bit pattern.
	Cos *string `pulumi:"cos"`
	// VLAN CoS evaluated bits.
	CosMask *string `pulumi:"cosMask"`
	// Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`.
	DiffservForward *string `pulumi:"diffservForward"`
	// Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`.
	DiffservReverse *string `pulumi:"diffservReverse"`
	// Change packet's DiffServ to this value.
	DiffservcodeForward *string `pulumi:"diffservcodeForward"`
	// Change packet's reverse (reply) DiffServ to this value.
	DiffservcodeRev *string `pulumi:"diffservcodeRev"`
	// IPv6 destination address and address group names. The structure of `dstaddr6` block is documented below.
	Dstaddr6s []ShapingpolicyDstaddr6 `pulumi:"dstaddr6s"`
	// IPv4 destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs []ShapingpolicyDstaddr `pulumi:"dstaddrs"`
	// One or more outgoing (egress) interfaces. The structure of `dstintf` block is documented below.
	Dstintfs []ShapingpolicyDstintf `pulumi:"dstintfs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Shaping policy ID.
	Fosid *int `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Apply this traffic shaping policy to user groups that have authenticated with the FortiGate. The structure of `groups` block is documented below.
	Groups []ShapingpolicyGroup `pulumi:"groups"`
	// Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used.  Valid values: `enable`, `disable`.
	InternetService *string `pulumi:"internetService"`
	// Custom Internet Service group name. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups []ShapingpolicyInternetServiceCustomGroup `pulumi:"internetServiceCustomGroups"`
	// Custom Internet Service name. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms []ShapingpolicyInternetServiceCustom `pulumi:"internetServiceCustoms"`
	// Internet Service group name. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups []ShapingpolicyInternetServiceGroup `pulumi:"internetServiceGroups"`
	// Internet Service ID. The structure of `internetServiceId` block is documented below.
	InternetServiceIds []ShapingpolicyInternetServiceId `pulumi:"internetServiceIds"`
	// Internet Service ID. The structure of `internetServiceName` block is documented below.
	InternetServiceNames []ShapingpolicyInternetServiceName `pulumi:"internetServiceNames"`
	// Enable/disable use of Internet Services in source for this policy. If enabled, source address is not used.  Valid values: `enable`, `disable`.
	InternetServiceSrc *string `pulumi:"internetServiceSrc"`
	// Custom Internet Service source group name. The structure of `internetServiceSrcCustomGroup` block is documented below.
	InternetServiceSrcCustomGroups []ShapingpolicyInternetServiceSrcCustomGroup `pulumi:"internetServiceSrcCustomGroups"`
	// Custom Internet Service source name. The structure of `internetServiceSrcCustom` block is documented below.
	InternetServiceSrcCustoms []ShapingpolicyInternetServiceSrcCustom `pulumi:"internetServiceSrcCustoms"`
	// Internet Service source group name. The structure of `internetServiceSrcGroup` block is documented below.
	InternetServiceSrcGroups []ShapingpolicyInternetServiceSrcGroup `pulumi:"internetServiceSrcGroups"`
	// Internet Service source ID. The structure of `internetServiceSrcId` block is documented below.
	InternetServiceSrcIds []ShapingpolicyInternetServiceSrcId `pulumi:"internetServiceSrcIds"`
	// Internet Service source name. The structure of `internetServiceSrcName` block is documented below.
	InternetServiceSrcNames []ShapingpolicyInternetServiceSrcName `pulumi:"internetServiceSrcNames"`
	// Apply this traffic shaping policy to IPv4 or IPv6 traffic. Valid values: `4`, `6`.
	IpVersion *string `pulumi:"ipVersion"`
	// Shaping policy name.
	Name *string `pulumi:"name"`
	// Per-IP traffic shaper to apply with this policy.
	PerIpShaper *string `pulumi:"perIpShaper"`
	// Schedule name.
	Schedule *string `pulumi:"schedule"`
	// Service and service group names. The structure of `service` block is documented below.
	Services []ShapingpolicyService `pulumi:"services"`
	// IPv6 source address and address group names. The structure of `srcaddr6` block is documented below.
	Srcaddr6s []ShapingpolicySrcaddr6 `pulumi:"srcaddr6s"`
	// IPv4 source address and address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs []ShapingpolicySrcaddr `pulumi:"srcaddrs"`
	// One or more incoming (ingress) interfaces. The structure of `srcintf` block is documented below.
	Srcintfs []ShapingpolicySrcintf `pulumi:"srcintfs"`
	// Enable/disable this traffic shaping policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// ToS (Type of Service) value used for comparison.
	Tos *string `pulumi:"tos"`
	// Non-zero bit positions are used for comparison while zero bit positions are ignored.
	TosMask *string `pulumi:"tosMask"`
	// Enable negated TOS match. Valid values: `enable`, `disable`.
	TosNegate *string `pulumi:"tosNegate"`
	// Traffic shaper to apply to traffic forwarded by the firewall policy.
	TrafficShaper *string `pulumi:"trafficShaper"`
	// Traffic shaper to apply to response traffic received by the firewall policy.
	TrafficShaperReverse *string `pulumi:"trafficShaperReverse"`
	// Traffic type. Valid values: `forwarding`, `local-in`, `local-out`.
	TrafficType *string `pulumi:"trafficType"`
	// IDs of one or more FortiGuard Web Filtering categories that this shaper applies traffic shaping to. The structure of `urlCategory` block is documented below.
	UrlCategories []ShapingpolicyUrlCategory `pulumi:"urlCategories"`
	// Apply this traffic shaping policy to individual users that have authenticated with the FortiGate. The structure of `users` block is documented below.
	Users []ShapingpolicyUser `pulumi:"users"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Shapingpolicy resource.
type ShapingpolicyArgs struct {
	// IDs of one or more application categories that this shaper applies application control traffic shaping to. The structure of `appCategory` block is documented below.
	AppCategories ShapingpolicyAppCategoryArrayInput
	// One or more application group names. The structure of `appGroup` block is documented below.
	AppGroups ShapingpolicyAppGroupArrayInput
	// IDs of one or more applications that this shaper applies application control traffic shaping to. The structure of `application` block is documented below.
	Applications ShapingpolicyApplicationArrayInput
	// Traffic class ID.
	ClassId pulumi.IntPtrInput
	// Comments.
	Comment pulumi.StringPtrInput
	// VLAN CoS bit pattern.
	Cos pulumi.StringPtrInput
	// VLAN CoS evaluated bits.
	CosMask pulumi.StringPtrInput
	// Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`.
	DiffservForward pulumi.StringPtrInput
	// Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`.
	DiffservReverse pulumi.StringPtrInput
	// Change packet's DiffServ to this value.
	DiffservcodeForward pulumi.StringPtrInput
	// Change packet's reverse (reply) DiffServ to this value.
	DiffservcodeRev pulumi.StringPtrInput
	// IPv6 destination address and address group names. The structure of `dstaddr6` block is documented below.
	Dstaddr6s ShapingpolicyDstaddr6ArrayInput
	// IPv4 destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs ShapingpolicyDstaddrArrayInput
	// One or more outgoing (egress) interfaces. The structure of `dstintf` block is documented below.
	Dstintfs ShapingpolicyDstintfArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Shaping policy ID.
	Fosid pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Apply this traffic shaping policy to user groups that have authenticated with the FortiGate. The structure of `groups` block is documented below.
	Groups ShapingpolicyGroupArrayInput
	// Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used.  Valid values: `enable`, `disable`.
	InternetService pulumi.StringPtrInput
	// Custom Internet Service group name. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups ShapingpolicyInternetServiceCustomGroupArrayInput
	// Custom Internet Service name. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms ShapingpolicyInternetServiceCustomArrayInput
	// Internet Service group name. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups ShapingpolicyInternetServiceGroupArrayInput
	// Internet Service ID. The structure of `internetServiceId` block is documented below.
	InternetServiceIds ShapingpolicyInternetServiceIdArrayInput
	// Internet Service ID. The structure of `internetServiceName` block is documented below.
	InternetServiceNames ShapingpolicyInternetServiceNameArrayInput
	// Enable/disable use of Internet Services in source for this policy. If enabled, source address is not used.  Valid values: `enable`, `disable`.
	InternetServiceSrc pulumi.StringPtrInput
	// Custom Internet Service source group name. The structure of `internetServiceSrcCustomGroup` block is documented below.
	InternetServiceSrcCustomGroups ShapingpolicyInternetServiceSrcCustomGroupArrayInput
	// Custom Internet Service source name. The structure of `internetServiceSrcCustom` block is documented below.
	InternetServiceSrcCustoms ShapingpolicyInternetServiceSrcCustomArrayInput
	// Internet Service source group name. The structure of `internetServiceSrcGroup` block is documented below.
	InternetServiceSrcGroups ShapingpolicyInternetServiceSrcGroupArrayInput
	// Internet Service source ID. The structure of `internetServiceSrcId` block is documented below.
	InternetServiceSrcIds ShapingpolicyInternetServiceSrcIdArrayInput
	// Internet Service source name. The structure of `internetServiceSrcName` block is documented below.
	InternetServiceSrcNames ShapingpolicyInternetServiceSrcNameArrayInput
	// Apply this traffic shaping policy to IPv4 or IPv6 traffic. Valid values: `4`, `6`.
	IpVersion pulumi.StringPtrInput
	// Shaping policy name.
	Name pulumi.StringPtrInput
	// Per-IP traffic shaper to apply with this policy.
	PerIpShaper pulumi.StringPtrInput
	// Schedule name.
	Schedule pulumi.StringPtrInput
	// Service and service group names. The structure of `service` block is documented below.
	Services ShapingpolicyServiceArrayInput
	// IPv6 source address and address group names. The structure of `srcaddr6` block is documented below.
	Srcaddr6s ShapingpolicySrcaddr6ArrayInput
	// IPv4 source address and address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs ShapingpolicySrcaddrArrayInput
	// One or more incoming (ingress) interfaces. The structure of `srcintf` block is documented below.
	Srcintfs ShapingpolicySrcintfArrayInput
	// Enable/disable this traffic shaping policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// ToS (Type of Service) value used for comparison.
	Tos pulumi.StringPtrInput
	// Non-zero bit positions are used for comparison while zero bit positions are ignored.
	TosMask pulumi.StringPtrInput
	// Enable negated TOS match. Valid values: `enable`, `disable`.
	TosNegate pulumi.StringPtrInput
	// Traffic shaper to apply to traffic forwarded by the firewall policy.
	TrafficShaper pulumi.StringPtrInput
	// Traffic shaper to apply to response traffic received by the firewall policy.
	TrafficShaperReverse pulumi.StringPtrInput
	// Traffic type. Valid values: `forwarding`, `local-in`, `local-out`.
	TrafficType pulumi.StringPtrInput
	// IDs of one or more FortiGuard Web Filtering categories that this shaper applies traffic shaping to. The structure of `urlCategory` block is documented below.
	UrlCategories ShapingpolicyUrlCategoryArrayInput
	// Apply this traffic shaping policy to individual users that have authenticated with the FortiGate. The structure of `users` block is documented below.
	Users ShapingpolicyUserArrayInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ShapingpolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*shapingpolicyArgs)(nil)).Elem()
}

type ShapingpolicyInput interface {
	pulumi.Input

	ToShapingpolicyOutput() ShapingpolicyOutput
	ToShapingpolicyOutputWithContext(ctx context.Context) ShapingpolicyOutput
}

func (*Shapingpolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**Shapingpolicy)(nil)).Elem()
}

func (i *Shapingpolicy) ToShapingpolicyOutput() ShapingpolicyOutput {
	return i.ToShapingpolicyOutputWithContext(context.Background())
}

func (i *Shapingpolicy) ToShapingpolicyOutputWithContext(ctx context.Context) ShapingpolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyOutput)
}

// ShapingpolicyArrayInput is an input type that accepts ShapingpolicyArray and ShapingpolicyArrayOutput values.
// You can construct a concrete instance of `ShapingpolicyArrayInput` via:
//
//	ShapingpolicyArray{ ShapingpolicyArgs{...} }
type ShapingpolicyArrayInput interface {
	pulumi.Input

	ToShapingpolicyArrayOutput() ShapingpolicyArrayOutput
	ToShapingpolicyArrayOutputWithContext(context.Context) ShapingpolicyArrayOutput
}

type ShapingpolicyArray []ShapingpolicyInput

func (ShapingpolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Shapingpolicy)(nil)).Elem()
}

func (i ShapingpolicyArray) ToShapingpolicyArrayOutput() ShapingpolicyArrayOutput {
	return i.ToShapingpolicyArrayOutputWithContext(context.Background())
}

func (i ShapingpolicyArray) ToShapingpolicyArrayOutputWithContext(ctx context.Context) ShapingpolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyArrayOutput)
}

// ShapingpolicyMapInput is an input type that accepts ShapingpolicyMap and ShapingpolicyMapOutput values.
// You can construct a concrete instance of `ShapingpolicyMapInput` via:
//
//	ShapingpolicyMap{ "key": ShapingpolicyArgs{...} }
type ShapingpolicyMapInput interface {
	pulumi.Input

	ToShapingpolicyMapOutput() ShapingpolicyMapOutput
	ToShapingpolicyMapOutputWithContext(context.Context) ShapingpolicyMapOutput
}

type ShapingpolicyMap map[string]ShapingpolicyInput

func (ShapingpolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Shapingpolicy)(nil)).Elem()
}

func (i ShapingpolicyMap) ToShapingpolicyMapOutput() ShapingpolicyMapOutput {
	return i.ToShapingpolicyMapOutputWithContext(context.Background())
}

func (i ShapingpolicyMap) ToShapingpolicyMapOutputWithContext(ctx context.Context) ShapingpolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShapingpolicyMapOutput)
}

type ShapingpolicyOutput struct{ *pulumi.OutputState }

func (ShapingpolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Shapingpolicy)(nil)).Elem()
}

func (o ShapingpolicyOutput) ToShapingpolicyOutput() ShapingpolicyOutput {
	return o
}

func (o ShapingpolicyOutput) ToShapingpolicyOutputWithContext(ctx context.Context) ShapingpolicyOutput {
	return o
}

// IDs of one or more application categories that this shaper applies application control traffic shaping to. The structure of `appCategory` block is documented below.
func (o ShapingpolicyOutput) AppCategories() ShapingpolicyAppCategoryArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyAppCategoryArrayOutput { return v.AppCategories }).(ShapingpolicyAppCategoryArrayOutput)
}

// One or more application group names. The structure of `appGroup` block is documented below.
func (o ShapingpolicyOutput) AppGroups() ShapingpolicyAppGroupArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyAppGroupArrayOutput { return v.AppGroups }).(ShapingpolicyAppGroupArrayOutput)
}

// IDs of one or more applications that this shaper applies application control traffic shaping to. The structure of `application` block is documented below.
func (o ShapingpolicyOutput) Applications() ShapingpolicyApplicationArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyApplicationArrayOutput { return v.Applications }).(ShapingpolicyApplicationArrayOutput)
}

// Traffic class ID.
func (o ShapingpolicyOutput) ClassId() pulumi.IntOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.IntOutput { return v.ClassId }).(pulumi.IntOutput)
}

// Comments.
func (o ShapingpolicyOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// VLAN CoS bit pattern.
func (o ShapingpolicyOutput) Cos() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.Cos }).(pulumi.StringOutput)
}

// VLAN CoS evaluated bits.
func (o ShapingpolicyOutput) CosMask() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.CosMask }).(pulumi.StringOutput)
}

// Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`.
func (o ShapingpolicyOutput) DiffservForward() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.DiffservForward }).(pulumi.StringOutput)
}

// Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`.
func (o ShapingpolicyOutput) DiffservReverse() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.DiffservReverse }).(pulumi.StringOutput)
}

// Change packet's DiffServ to this value.
func (o ShapingpolicyOutput) DiffservcodeForward() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.DiffservcodeForward }).(pulumi.StringOutput)
}

// Change packet's reverse (reply) DiffServ to this value.
func (o ShapingpolicyOutput) DiffservcodeRev() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.DiffservcodeRev }).(pulumi.StringOutput)
}

// IPv6 destination address and address group names. The structure of `dstaddr6` block is documented below.
func (o ShapingpolicyOutput) Dstaddr6s() ShapingpolicyDstaddr6ArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyDstaddr6ArrayOutput { return v.Dstaddr6s }).(ShapingpolicyDstaddr6ArrayOutput)
}

// IPv4 destination address and address group names. The structure of `dstaddr` block is documented below.
func (o ShapingpolicyOutput) Dstaddrs() ShapingpolicyDstaddrArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyDstaddrArrayOutput { return v.Dstaddrs }).(ShapingpolicyDstaddrArrayOutput)
}

// One or more outgoing (egress) interfaces. The structure of `dstintf` block is documented below.
func (o ShapingpolicyOutput) Dstintfs() ShapingpolicyDstintfArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyDstintfArrayOutput { return v.Dstintfs }).(ShapingpolicyDstintfArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o ShapingpolicyOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Shaping policy ID.
func (o ShapingpolicyOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o ShapingpolicyOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Apply this traffic shaping policy to user groups that have authenticated with the FortiGate. The structure of `groups` block is documented below.
func (o ShapingpolicyOutput) Groups() ShapingpolicyGroupArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyGroupArrayOutput { return v.Groups }).(ShapingpolicyGroupArrayOutput)
}

// Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used.  Valid values: `enable`, `disable`.
func (o ShapingpolicyOutput) InternetService() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.InternetService }).(pulumi.StringOutput)
}

// Custom Internet Service group name. The structure of `internetServiceCustomGroup` block is documented below.
func (o ShapingpolicyOutput) InternetServiceCustomGroups() ShapingpolicyInternetServiceCustomGroupArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyInternetServiceCustomGroupArrayOutput {
		return v.InternetServiceCustomGroups
	}).(ShapingpolicyInternetServiceCustomGroupArrayOutput)
}

// Custom Internet Service name. The structure of `internetServiceCustom` block is documented below.
func (o ShapingpolicyOutput) InternetServiceCustoms() ShapingpolicyInternetServiceCustomArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyInternetServiceCustomArrayOutput { return v.InternetServiceCustoms }).(ShapingpolicyInternetServiceCustomArrayOutput)
}

// Internet Service group name. The structure of `internetServiceGroup` block is documented below.
func (o ShapingpolicyOutput) InternetServiceGroups() ShapingpolicyInternetServiceGroupArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyInternetServiceGroupArrayOutput { return v.InternetServiceGroups }).(ShapingpolicyInternetServiceGroupArrayOutput)
}

// Internet Service ID. The structure of `internetServiceId` block is documented below.
func (o ShapingpolicyOutput) InternetServiceIds() ShapingpolicyInternetServiceIdArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyInternetServiceIdArrayOutput { return v.InternetServiceIds }).(ShapingpolicyInternetServiceIdArrayOutput)
}

// Internet Service ID. The structure of `internetServiceName` block is documented below.
func (o ShapingpolicyOutput) InternetServiceNames() ShapingpolicyInternetServiceNameArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyInternetServiceNameArrayOutput { return v.InternetServiceNames }).(ShapingpolicyInternetServiceNameArrayOutput)
}

// Enable/disable use of Internet Services in source for this policy. If enabled, source address is not used.  Valid values: `enable`, `disable`.
func (o ShapingpolicyOutput) InternetServiceSrc() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.InternetServiceSrc }).(pulumi.StringOutput)
}

// Custom Internet Service source group name. The structure of `internetServiceSrcCustomGroup` block is documented below.
func (o ShapingpolicyOutput) InternetServiceSrcCustomGroups() ShapingpolicyInternetServiceSrcCustomGroupArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyInternetServiceSrcCustomGroupArrayOutput {
		return v.InternetServiceSrcCustomGroups
	}).(ShapingpolicyInternetServiceSrcCustomGroupArrayOutput)
}

// Custom Internet Service source name. The structure of `internetServiceSrcCustom` block is documented below.
func (o ShapingpolicyOutput) InternetServiceSrcCustoms() ShapingpolicyInternetServiceSrcCustomArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyInternetServiceSrcCustomArrayOutput {
		return v.InternetServiceSrcCustoms
	}).(ShapingpolicyInternetServiceSrcCustomArrayOutput)
}

// Internet Service source group name. The structure of `internetServiceSrcGroup` block is documented below.
func (o ShapingpolicyOutput) InternetServiceSrcGroups() ShapingpolicyInternetServiceSrcGroupArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyInternetServiceSrcGroupArrayOutput {
		return v.InternetServiceSrcGroups
	}).(ShapingpolicyInternetServiceSrcGroupArrayOutput)
}

// Internet Service source ID. The structure of `internetServiceSrcId` block is documented below.
func (o ShapingpolicyOutput) InternetServiceSrcIds() ShapingpolicyInternetServiceSrcIdArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyInternetServiceSrcIdArrayOutput { return v.InternetServiceSrcIds }).(ShapingpolicyInternetServiceSrcIdArrayOutput)
}

// Internet Service source name. The structure of `internetServiceSrcName` block is documented below.
func (o ShapingpolicyOutput) InternetServiceSrcNames() ShapingpolicyInternetServiceSrcNameArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyInternetServiceSrcNameArrayOutput {
		return v.InternetServiceSrcNames
	}).(ShapingpolicyInternetServiceSrcNameArrayOutput)
}

// Apply this traffic shaping policy to IPv4 or IPv6 traffic. Valid values: `4`, `6`.
func (o ShapingpolicyOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.IpVersion }).(pulumi.StringOutput)
}

// Shaping policy name.
func (o ShapingpolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Per-IP traffic shaper to apply with this policy.
func (o ShapingpolicyOutput) PerIpShaper() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.PerIpShaper }).(pulumi.StringOutput)
}

// Schedule name.
func (o ShapingpolicyOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.Schedule }).(pulumi.StringOutput)
}

// Service and service group names. The structure of `service` block is documented below.
func (o ShapingpolicyOutput) Services() ShapingpolicyServiceArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyServiceArrayOutput { return v.Services }).(ShapingpolicyServiceArrayOutput)
}

// IPv6 source address and address group names. The structure of `srcaddr6` block is documented below.
func (o ShapingpolicyOutput) Srcaddr6s() ShapingpolicySrcaddr6ArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicySrcaddr6ArrayOutput { return v.Srcaddr6s }).(ShapingpolicySrcaddr6ArrayOutput)
}

// IPv4 source address and address group names. The structure of `srcaddr` block is documented below.
func (o ShapingpolicyOutput) Srcaddrs() ShapingpolicySrcaddrArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicySrcaddrArrayOutput { return v.Srcaddrs }).(ShapingpolicySrcaddrArrayOutput)
}

// One or more incoming (ingress) interfaces. The structure of `srcintf` block is documented below.
func (o ShapingpolicyOutput) Srcintfs() ShapingpolicySrcintfArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicySrcintfArrayOutput { return v.Srcintfs }).(ShapingpolicySrcintfArrayOutput)
}

// Enable/disable this traffic shaping policy. Valid values: `enable`, `disable`.
func (o ShapingpolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// ToS (Type of Service) value used for comparison.
func (o ShapingpolicyOutput) Tos() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.Tos }).(pulumi.StringOutput)
}

// Non-zero bit positions are used for comparison while zero bit positions are ignored.
func (o ShapingpolicyOutput) TosMask() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.TosMask }).(pulumi.StringOutput)
}

// Enable negated TOS match. Valid values: `enable`, `disable`.
func (o ShapingpolicyOutput) TosNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.TosNegate }).(pulumi.StringOutput)
}

// Traffic shaper to apply to traffic forwarded by the firewall policy.
func (o ShapingpolicyOutput) TrafficShaper() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.TrafficShaper }).(pulumi.StringOutput)
}

// Traffic shaper to apply to response traffic received by the firewall policy.
func (o ShapingpolicyOutput) TrafficShaperReverse() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.TrafficShaperReverse }).(pulumi.StringOutput)
}

// Traffic type. Valid values: `forwarding`, `local-in`, `local-out`.
func (o ShapingpolicyOutput) TrafficType() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.TrafficType }).(pulumi.StringOutput)
}

// IDs of one or more FortiGuard Web Filtering categories that this shaper applies traffic shaping to. The structure of `urlCategory` block is documented below.
func (o ShapingpolicyOutput) UrlCategories() ShapingpolicyUrlCategoryArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyUrlCategoryArrayOutput { return v.UrlCategories }).(ShapingpolicyUrlCategoryArrayOutput)
}

// Apply this traffic shaping policy to individual users that have authenticated with the FortiGate. The structure of `users` block is documented below.
func (o ShapingpolicyOutput) Users() ShapingpolicyUserArrayOutput {
	return o.ApplyT(func(v *Shapingpolicy) ShapingpolicyUserArrayOutput { return v.Users }).(ShapingpolicyUserArrayOutput)
}

// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
func (o ShapingpolicyOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ShapingpolicyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Shapingpolicy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ShapingpolicyArrayOutput struct{ *pulumi.OutputState }

func (ShapingpolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Shapingpolicy)(nil)).Elem()
}

func (o ShapingpolicyArrayOutput) ToShapingpolicyArrayOutput() ShapingpolicyArrayOutput {
	return o
}

func (o ShapingpolicyArrayOutput) ToShapingpolicyArrayOutputWithContext(ctx context.Context) ShapingpolicyArrayOutput {
	return o
}

func (o ShapingpolicyArrayOutput) Index(i pulumi.IntInput) ShapingpolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Shapingpolicy {
		return vs[0].([]*Shapingpolicy)[vs[1].(int)]
	}).(ShapingpolicyOutput)
}

type ShapingpolicyMapOutput struct{ *pulumi.OutputState }

func (ShapingpolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Shapingpolicy)(nil)).Elem()
}

func (o ShapingpolicyMapOutput) ToShapingpolicyMapOutput() ShapingpolicyMapOutput {
	return o
}

func (o ShapingpolicyMapOutput) ToShapingpolicyMapOutputWithContext(ctx context.Context) ShapingpolicyMapOutput {
	return o
}

func (o ShapingpolicyMapOutput) MapIndex(k pulumi.StringInput) ShapingpolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Shapingpolicy {
		return vs[0].(map[string]*Shapingpolicy)[vs[1].(string)]
	}).(ShapingpolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyInput)(nil)).Elem(), &Shapingpolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyArrayInput)(nil)).Elem(), ShapingpolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShapingpolicyMapInput)(nil)).Elem(), ShapingpolicyMap{})
	pulumi.RegisterOutputType(ShapingpolicyOutput{})
	pulumi.RegisterOutputType(ShapingpolicyArrayOutput{})
	pulumi.RegisterOutputType(ShapingpolicyMapOutput{})
}
