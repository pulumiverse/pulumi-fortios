// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package extendercontroller

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Extender controller configuration.
// The resource applies to FortiOS Version < 7.2.1. For FortiOS version >= 7.2.1, see `extensioncontroller.Extender`
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/extendercontroller"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := extendercontroller.NewExtender(ctx, "trname", &extendercontroller.ExtenderArgs{
//				Admin:             pulumi.String("disable"),
//				BillingStartDay:   pulumi.Int(1),
//				ConnStatus:        pulumi.Int(0),
//				DialMode:          pulumi.String("always-connect"),
//				DialStatus:        pulumi.Int(0),
//				ExtName:           pulumi.String("332"),
//				Fosid:             pulumi.String("1"),
//				InitiatedUpdate:   pulumi.String("disable"),
//				Mode:              pulumi.String("standalone"),
//				ModemType:         pulumi.String("gsm/lte"),
//				MultiMode:         pulumi.String("auto"),
//				PppAuthProtocol:   pulumi.String("auto"),
//				PppEchoRequest:    pulumi.String("disable"),
//				QuotaLimitMb:      pulumi.Int(0),
//				Redial:            pulumi.String("none"),
//				Roaming:           pulumi.String("disable"),
//				Role:              pulumi.String("primary"),
//				Vdom:              pulumi.Int(0),
//				WimaxAuthProtocol: pulumi.String("tls"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// ExtenderController Extender can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:extendercontroller/extender:Extender labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:extendercontroller/extender:Extender labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Extender struct {
	pulumi.CustomResourceState

	// AAA shared secret.
	AaaSharedSecret pulumi.StringPtrOutput `pulumi:"aaaSharedSecret"`
	// Access point name(APN).
	AccessPointName pulumi.StringOutput `pulumi:"accessPointName"`
	// FortiExtender Administration (enable or disable). Valid values: `disable`, `discovered`, `enable`.
	Admin pulumi.StringOutput `pulumi:"admin"`
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess pulumi.StringOutput `pulumi:"allowaccess"`
	// Initialization AT commands specific to the MODEM.
	AtDialScript pulumi.StringOutput `pulumi:"atDialScript"`
	// FortiExtender Administration (enable or disable). Valid values: `disable`, `enable`.
	Authorized pulumi.StringOutput `pulumi:"authorized"`
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit pulumi.IntOutput `pulumi:"bandwidthLimit"`
	// Billing start day.
	BillingStartDay pulumi.IntOutput `pulumi:"billingStartDay"`
	// CDMA AAA SPI.
	CdmaAaaSpi pulumi.StringOutput `pulumi:"cdmaAaaSpi"`
	// CDMA HA SPI.
	CdmaHaSpi pulumi.StringOutput `pulumi:"cdmaHaSpi"`
	// NAI for CDMA MODEMS.
	CdmaNai pulumi.StringOutput `pulumi:"cdmaNai"`
	// Connection status.
	ConnStatus pulumi.IntOutput `pulumi:"connStatus"`
	// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
	ControllerReport ExtenderControllerReportOutput `pulumi:"controllerReport"`
	// Description.
	Description pulumi.StringOutput `pulumi:"description"`
	// device-id
	DeviceId pulumi.IntOutput `pulumi:"deviceId"`
	// Dial mode (dial-on-demand or always-connect). Valid values: `dial-on-demand`, `always-connect`.
	DialMode pulumi.StringOutput `pulumi:"dialMode"`
	// Dial status.
	DialStatus pulumi.IntOutput `pulumi:"dialStatus"`
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth pulumi.StringOutput `pulumi:"enforceBandwidth"`
	// FortiExtender name.
	ExtName pulumi.StringOutput `pulumi:"extName"`
	// Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
	ExtensionType pulumi.StringOutput `pulumi:"extensionType"`
	// FortiExtender serial number.
	Fosid pulumi.StringOutput `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// HA shared secret.
	HaSharedSecret pulumi.StringPtrOutput `pulumi:"haSharedSecret"`
	// FortiExtender interface name.
	Ifname pulumi.StringOutput `pulumi:"ifname"`
	// Allow/disallow network initiated updates to the MODEM. Valid values: `enable`, `disable`.
	InitiatedUpdate pulumi.StringOutput `pulumi:"initiatedUpdate"`
	// FortiExtender login password.
	LoginPassword pulumi.StringPtrOutput `pulumi:"loginPassword"`
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange pulumi.StringOutput `pulumi:"loginPasswordChange"`
	// FortiExtender mode. Valid values: `standalone`, `redundant`.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Configuration options for modem 1. The structure of `modem1` block is documented below.
	Modem1 ExtenderModem1Output `pulumi:"modem1"`
	// Configuration options for modem 2. The structure of `modem2` block is documented below.
	Modem2 ExtenderModem2Output `pulumi:"modem2"`
	// MODEM password.
	ModemPasswd pulumi.StringPtrOutput `pulumi:"modemPasswd"`
	// MODEM type (CDMA, GSM/LTE or WIMAX). Valid values: `cdma`, `gsm/lte`, `wimax`.
	ModemType pulumi.StringOutput `pulumi:"modemType"`
	// MODEM mode of operation(3G,LTE,etc). Valid values: `auto`, `auto-3g`, `force-lte`, `force-3g`, `force-2g`.
	MultiMode pulumi.StringOutput `pulumi:"multiMode"`
	// FortiExtender entry name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
	OverrideAllowaccess pulumi.StringOutput `pulumi:"overrideAllowaccess"`
	// Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
	OverrideEnforceBandwidth pulumi.StringOutput `pulumi:"overrideEnforceBandwidth"`
	// Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
	OverrideLoginPasswordChange pulumi.StringOutput `pulumi:"overrideLoginPasswordChange"`
	// PPP authentication protocol (PAP,CHAP or auto). Valid values: `auto`, `pap`, `chap`.
	PppAuthProtocol pulumi.StringOutput `pulumi:"pppAuthProtocol"`
	// Enable/disable PPP echo request. Valid values: `enable`, `disable`.
	PppEchoRequest pulumi.StringOutput `pulumi:"pppEchoRequest"`
	// PPP password.
	PppPassword pulumi.StringPtrOutput `pulumi:"pppPassword"`
	// PPP username.
	PppUsername pulumi.StringOutput `pulumi:"pppUsername"`
	// Primary HA.
	PrimaryHa pulumi.StringOutput `pulumi:"primaryHa"`
	// FortiExtender profile configuration.
	Profile pulumi.StringOutput `pulumi:"profile"`
	// Monthly quota limit (MB).
	QuotaLimitMb pulumi.IntOutput `pulumi:"quotaLimitMb"`
	// Number of redials allowed based on failed attempts. Valid values: `none`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`.
	Redial pulumi.StringOutput `pulumi:"redial"`
	// Redundant interface.
	RedundantIntf pulumi.StringOutput `pulumi:"redundantIntf"`
	// Enable/disable MODEM roaming. Valid values: `enable`, `disable`.
	Roaming pulumi.StringOutput `pulumi:"roaming"`
	// FortiExtender work role(Primary, Secondary, None). Valid values: `none`, `primary`, `secondary`.
	Role pulumi.StringOutput `pulumi:"role"`
	// Secondary HA.
	SecondaryHa pulumi.StringOutput `pulumi:"secondaryHa"`
	// SIM PIN.
	SimPin pulumi.StringPtrOutput `pulumi:"simPin"`
	// VDOM
	Vdom pulumi.IntOutput `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// FortiExtender wan extension configuration. The structure of `wanExtension` block is documented below.
	WanExtension ExtenderWanExtensionOutput `pulumi:"wanExtension"`
	// WiMax authentication protocol(TLS or TTLS). Valid values: `tls`, `ttls`.
	WimaxAuthProtocol pulumi.StringOutput `pulumi:"wimaxAuthProtocol"`
	// WiMax carrier.
	WimaxCarrier pulumi.StringOutput `pulumi:"wimaxCarrier"`
	// WiMax realm.
	WimaxRealm pulumi.StringOutput `pulumi:"wimaxRealm"`
}

// NewExtender registers a new resource with the given unique name, arguments, and options.
func NewExtender(ctx *pulumi.Context,
	name string, args *ExtenderArgs, opts ...pulumi.ResourceOption) (*Extender, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Admin == nil {
		return nil, errors.New("invalid value for required argument 'Admin'")
	}
	if args.Fosid == nil {
		return nil, errors.New("invalid value for required argument 'Fosid'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.AaaSharedSecret != nil {
		args.AaaSharedSecret = pulumi.ToSecret(args.AaaSharedSecret).(pulumi.StringPtrInput)
	}
	if args.HaSharedSecret != nil {
		args.HaSharedSecret = pulumi.ToSecret(args.HaSharedSecret).(pulumi.StringPtrInput)
	}
	if args.ModemPasswd != nil {
		args.ModemPasswd = pulumi.ToSecret(args.ModemPasswd).(pulumi.StringPtrInput)
	}
	if args.PppPassword != nil {
		args.PppPassword = pulumi.ToSecret(args.PppPassword).(pulumi.StringPtrInput)
	}
	if args.SimPin != nil {
		args.SimPin = pulumi.ToSecret(args.SimPin).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"aaaSharedSecret",
		"haSharedSecret",
		"modemPasswd",
		"pppPassword",
		"simPin",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Extender
	err := ctx.RegisterResource("fortios:extendercontroller/extender:Extender", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExtender gets an existing Extender resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExtender(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExtenderState, opts ...pulumi.ResourceOption) (*Extender, error) {
	var resource Extender
	err := ctx.ReadResource("fortios:extendercontroller/extender:Extender", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Extender resources.
type extenderState struct {
	// AAA shared secret.
	AaaSharedSecret *string `pulumi:"aaaSharedSecret"`
	// Access point name(APN).
	AccessPointName *string `pulumi:"accessPointName"`
	// FortiExtender Administration (enable or disable). Valid values: `disable`, `discovered`, `enable`.
	Admin *string `pulumi:"admin"`
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess *string `pulumi:"allowaccess"`
	// Initialization AT commands specific to the MODEM.
	AtDialScript *string `pulumi:"atDialScript"`
	// FortiExtender Administration (enable or disable). Valid values: `disable`, `enable`.
	Authorized *string `pulumi:"authorized"`
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit *int `pulumi:"bandwidthLimit"`
	// Billing start day.
	BillingStartDay *int `pulumi:"billingStartDay"`
	// CDMA AAA SPI.
	CdmaAaaSpi *string `pulumi:"cdmaAaaSpi"`
	// CDMA HA SPI.
	CdmaHaSpi *string `pulumi:"cdmaHaSpi"`
	// NAI for CDMA MODEMS.
	CdmaNai *string `pulumi:"cdmaNai"`
	// Connection status.
	ConnStatus *int `pulumi:"connStatus"`
	// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
	ControllerReport *ExtenderControllerReport `pulumi:"controllerReport"`
	// Description.
	Description *string `pulumi:"description"`
	// device-id
	DeviceId *int `pulumi:"deviceId"`
	// Dial mode (dial-on-demand or always-connect). Valid values: `dial-on-demand`, `always-connect`.
	DialMode *string `pulumi:"dialMode"`
	// Dial status.
	DialStatus *int `pulumi:"dialStatus"`
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth *string `pulumi:"enforceBandwidth"`
	// FortiExtender name.
	ExtName *string `pulumi:"extName"`
	// Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
	ExtensionType *string `pulumi:"extensionType"`
	// FortiExtender serial number.
	Fosid *string `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// HA shared secret.
	HaSharedSecret *string `pulumi:"haSharedSecret"`
	// FortiExtender interface name.
	Ifname *string `pulumi:"ifname"`
	// Allow/disallow network initiated updates to the MODEM. Valid values: `enable`, `disable`.
	InitiatedUpdate *string `pulumi:"initiatedUpdate"`
	// FortiExtender login password.
	LoginPassword *string `pulumi:"loginPassword"`
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange *string `pulumi:"loginPasswordChange"`
	// FortiExtender mode. Valid values: `standalone`, `redundant`.
	Mode *string `pulumi:"mode"`
	// Configuration options for modem 1. The structure of `modem1` block is documented below.
	Modem1 *ExtenderModem1 `pulumi:"modem1"`
	// Configuration options for modem 2. The structure of `modem2` block is documented below.
	Modem2 *ExtenderModem2 `pulumi:"modem2"`
	// MODEM password.
	ModemPasswd *string `pulumi:"modemPasswd"`
	// MODEM type (CDMA, GSM/LTE or WIMAX). Valid values: `cdma`, `gsm/lte`, `wimax`.
	ModemType *string `pulumi:"modemType"`
	// MODEM mode of operation(3G,LTE,etc). Valid values: `auto`, `auto-3g`, `force-lte`, `force-3g`, `force-2g`.
	MultiMode *string `pulumi:"multiMode"`
	// FortiExtender entry name.
	Name *string `pulumi:"name"`
	// Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
	OverrideAllowaccess *string `pulumi:"overrideAllowaccess"`
	// Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
	OverrideEnforceBandwidth *string `pulumi:"overrideEnforceBandwidth"`
	// Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
	OverrideLoginPasswordChange *string `pulumi:"overrideLoginPasswordChange"`
	// PPP authentication protocol (PAP,CHAP or auto). Valid values: `auto`, `pap`, `chap`.
	PppAuthProtocol *string `pulumi:"pppAuthProtocol"`
	// Enable/disable PPP echo request. Valid values: `enable`, `disable`.
	PppEchoRequest *string `pulumi:"pppEchoRequest"`
	// PPP password.
	PppPassword *string `pulumi:"pppPassword"`
	// PPP username.
	PppUsername *string `pulumi:"pppUsername"`
	// Primary HA.
	PrimaryHa *string `pulumi:"primaryHa"`
	// FortiExtender profile configuration.
	Profile *string `pulumi:"profile"`
	// Monthly quota limit (MB).
	QuotaLimitMb *int `pulumi:"quotaLimitMb"`
	// Number of redials allowed based on failed attempts. Valid values: `none`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`.
	Redial *string `pulumi:"redial"`
	// Redundant interface.
	RedundantIntf *string `pulumi:"redundantIntf"`
	// Enable/disable MODEM roaming. Valid values: `enable`, `disable`.
	Roaming *string `pulumi:"roaming"`
	// FortiExtender work role(Primary, Secondary, None). Valid values: `none`, `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// Secondary HA.
	SecondaryHa *string `pulumi:"secondaryHa"`
	// SIM PIN.
	SimPin *string `pulumi:"simPin"`
	// VDOM
	Vdom *int `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// FortiExtender wan extension configuration. The structure of `wanExtension` block is documented below.
	WanExtension *ExtenderWanExtension `pulumi:"wanExtension"`
	// WiMax authentication protocol(TLS or TTLS). Valid values: `tls`, `ttls`.
	WimaxAuthProtocol *string `pulumi:"wimaxAuthProtocol"`
	// WiMax carrier.
	WimaxCarrier *string `pulumi:"wimaxCarrier"`
	// WiMax realm.
	WimaxRealm *string `pulumi:"wimaxRealm"`
}

type ExtenderState struct {
	// AAA shared secret.
	AaaSharedSecret pulumi.StringPtrInput
	// Access point name(APN).
	AccessPointName pulumi.StringPtrInput
	// FortiExtender Administration (enable or disable). Valid values: `disable`, `discovered`, `enable`.
	Admin pulumi.StringPtrInput
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess pulumi.StringPtrInput
	// Initialization AT commands specific to the MODEM.
	AtDialScript pulumi.StringPtrInput
	// FortiExtender Administration (enable or disable). Valid values: `disable`, `enable`.
	Authorized pulumi.StringPtrInput
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit pulumi.IntPtrInput
	// Billing start day.
	BillingStartDay pulumi.IntPtrInput
	// CDMA AAA SPI.
	CdmaAaaSpi pulumi.StringPtrInput
	// CDMA HA SPI.
	CdmaHaSpi pulumi.StringPtrInput
	// NAI for CDMA MODEMS.
	CdmaNai pulumi.StringPtrInput
	// Connection status.
	ConnStatus pulumi.IntPtrInput
	// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
	ControllerReport ExtenderControllerReportPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// device-id
	DeviceId pulumi.IntPtrInput
	// Dial mode (dial-on-demand or always-connect). Valid values: `dial-on-demand`, `always-connect`.
	DialMode pulumi.StringPtrInput
	// Dial status.
	DialStatus pulumi.IntPtrInput
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth pulumi.StringPtrInput
	// FortiExtender name.
	ExtName pulumi.StringPtrInput
	// Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
	ExtensionType pulumi.StringPtrInput
	// FortiExtender serial number.
	Fosid pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// HA shared secret.
	HaSharedSecret pulumi.StringPtrInput
	// FortiExtender interface name.
	Ifname pulumi.StringPtrInput
	// Allow/disallow network initiated updates to the MODEM. Valid values: `enable`, `disable`.
	InitiatedUpdate pulumi.StringPtrInput
	// FortiExtender login password.
	LoginPassword pulumi.StringPtrInput
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange pulumi.StringPtrInput
	// FortiExtender mode. Valid values: `standalone`, `redundant`.
	Mode pulumi.StringPtrInput
	// Configuration options for modem 1. The structure of `modem1` block is documented below.
	Modem1 ExtenderModem1PtrInput
	// Configuration options for modem 2. The structure of `modem2` block is documented below.
	Modem2 ExtenderModem2PtrInput
	// MODEM password.
	ModemPasswd pulumi.StringPtrInput
	// MODEM type (CDMA, GSM/LTE or WIMAX). Valid values: `cdma`, `gsm/lte`, `wimax`.
	ModemType pulumi.StringPtrInput
	// MODEM mode of operation(3G,LTE,etc). Valid values: `auto`, `auto-3g`, `force-lte`, `force-3g`, `force-2g`.
	MultiMode pulumi.StringPtrInput
	// FortiExtender entry name.
	Name pulumi.StringPtrInput
	// Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
	OverrideAllowaccess pulumi.StringPtrInput
	// Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
	OverrideEnforceBandwidth pulumi.StringPtrInput
	// Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
	OverrideLoginPasswordChange pulumi.StringPtrInput
	// PPP authentication protocol (PAP,CHAP or auto). Valid values: `auto`, `pap`, `chap`.
	PppAuthProtocol pulumi.StringPtrInput
	// Enable/disable PPP echo request. Valid values: `enable`, `disable`.
	PppEchoRequest pulumi.StringPtrInput
	// PPP password.
	PppPassword pulumi.StringPtrInput
	// PPP username.
	PppUsername pulumi.StringPtrInput
	// Primary HA.
	PrimaryHa pulumi.StringPtrInput
	// FortiExtender profile configuration.
	Profile pulumi.StringPtrInput
	// Monthly quota limit (MB).
	QuotaLimitMb pulumi.IntPtrInput
	// Number of redials allowed based on failed attempts. Valid values: `none`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`.
	Redial pulumi.StringPtrInput
	// Redundant interface.
	RedundantIntf pulumi.StringPtrInput
	// Enable/disable MODEM roaming. Valid values: `enable`, `disable`.
	Roaming pulumi.StringPtrInput
	// FortiExtender work role(Primary, Secondary, None). Valid values: `none`, `primary`, `secondary`.
	Role pulumi.StringPtrInput
	// Secondary HA.
	SecondaryHa pulumi.StringPtrInput
	// SIM PIN.
	SimPin pulumi.StringPtrInput
	// VDOM
	Vdom pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// FortiExtender wan extension configuration. The structure of `wanExtension` block is documented below.
	WanExtension ExtenderWanExtensionPtrInput
	// WiMax authentication protocol(TLS or TTLS). Valid values: `tls`, `ttls`.
	WimaxAuthProtocol pulumi.StringPtrInput
	// WiMax carrier.
	WimaxCarrier pulumi.StringPtrInput
	// WiMax realm.
	WimaxRealm pulumi.StringPtrInput
}

func (ExtenderState) ElementType() reflect.Type {
	return reflect.TypeOf((*extenderState)(nil)).Elem()
}

type extenderArgs struct {
	// AAA shared secret.
	AaaSharedSecret *string `pulumi:"aaaSharedSecret"`
	// Access point name(APN).
	AccessPointName *string `pulumi:"accessPointName"`
	// FortiExtender Administration (enable or disable). Valid values: `disable`, `discovered`, `enable`.
	Admin string `pulumi:"admin"`
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess *string `pulumi:"allowaccess"`
	// Initialization AT commands specific to the MODEM.
	AtDialScript *string `pulumi:"atDialScript"`
	// FortiExtender Administration (enable or disable). Valid values: `disable`, `enable`.
	Authorized *string `pulumi:"authorized"`
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit *int `pulumi:"bandwidthLimit"`
	// Billing start day.
	BillingStartDay *int `pulumi:"billingStartDay"`
	// CDMA AAA SPI.
	CdmaAaaSpi *string `pulumi:"cdmaAaaSpi"`
	// CDMA HA SPI.
	CdmaHaSpi *string `pulumi:"cdmaHaSpi"`
	// NAI for CDMA MODEMS.
	CdmaNai *string `pulumi:"cdmaNai"`
	// Connection status.
	ConnStatus *int `pulumi:"connStatus"`
	// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
	ControllerReport *ExtenderControllerReport `pulumi:"controllerReport"`
	// Description.
	Description *string `pulumi:"description"`
	// device-id
	DeviceId *int `pulumi:"deviceId"`
	// Dial mode (dial-on-demand or always-connect). Valid values: `dial-on-demand`, `always-connect`.
	DialMode *string `pulumi:"dialMode"`
	// Dial status.
	DialStatus *int `pulumi:"dialStatus"`
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth *string `pulumi:"enforceBandwidth"`
	// FortiExtender name.
	ExtName *string `pulumi:"extName"`
	// Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
	ExtensionType *string `pulumi:"extensionType"`
	// FortiExtender serial number.
	Fosid string `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// HA shared secret.
	HaSharedSecret *string `pulumi:"haSharedSecret"`
	// FortiExtender interface name.
	Ifname *string `pulumi:"ifname"`
	// Allow/disallow network initiated updates to the MODEM. Valid values: `enable`, `disable`.
	InitiatedUpdate *string `pulumi:"initiatedUpdate"`
	// FortiExtender login password.
	LoginPassword *string `pulumi:"loginPassword"`
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange *string `pulumi:"loginPasswordChange"`
	// FortiExtender mode. Valid values: `standalone`, `redundant`.
	Mode *string `pulumi:"mode"`
	// Configuration options for modem 1. The structure of `modem1` block is documented below.
	Modem1 *ExtenderModem1 `pulumi:"modem1"`
	// Configuration options for modem 2. The structure of `modem2` block is documented below.
	Modem2 *ExtenderModem2 `pulumi:"modem2"`
	// MODEM password.
	ModemPasswd *string `pulumi:"modemPasswd"`
	// MODEM type (CDMA, GSM/LTE or WIMAX). Valid values: `cdma`, `gsm/lte`, `wimax`.
	ModemType *string `pulumi:"modemType"`
	// MODEM mode of operation(3G,LTE,etc). Valid values: `auto`, `auto-3g`, `force-lte`, `force-3g`, `force-2g`.
	MultiMode *string `pulumi:"multiMode"`
	// FortiExtender entry name.
	Name *string `pulumi:"name"`
	// Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
	OverrideAllowaccess *string `pulumi:"overrideAllowaccess"`
	// Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
	OverrideEnforceBandwidth *string `pulumi:"overrideEnforceBandwidth"`
	// Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
	OverrideLoginPasswordChange *string `pulumi:"overrideLoginPasswordChange"`
	// PPP authentication protocol (PAP,CHAP or auto). Valid values: `auto`, `pap`, `chap`.
	PppAuthProtocol *string `pulumi:"pppAuthProtocol"`
	// Enable/disable PPP echo request. Valid values: `enable`, `disable`.
	PppEchoRequest *string `pulumi:"pppEchoRequest"`
	// PPP password.
	PppPassword *string `pulumi:"pppPassword"`
	// PPP username.
	PppUsername *string `pulumi:"pppUsername"`
	// Primary HA.
	PrimaryHa *string `pulumi:"primaryHa"`
	// FortiExtender profile configuration.
	Profile *string `pulumi:"profile"`
	// Monthly quota limit (MB).
	QuotaLimitMb *int `pulumi:"quotaLimitMb"`
	// Number of redials allowed based on failed attempts. Valid values: `none`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`.
	Redial *string `pulumi:"redial"`
	// Redundant interface.
	RedundantIntf *string `pulumi:"redundantIntf"`
	// Enable/disable MODEM roaming. Valid values: `enable`, `disable`.
	Roaming *string `pulumi:"roaming"`
	// FortiExtender work role(Primary, Secondary, None). Valid values: `none`, `primary`, `secondary`.
	Role string `pulumi:"role"`
	// Secondary HA.
	SecondaryHa *string `pulumi:"secondaryHa"`
	// SIM PIN.
	SimPin *string `pulumi:"simPin"`
	// VDOM
	Vdom *int `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// FortiExtender wan extension configuration. The structure of `wanExtension` block is documented below.
	WanExtension *ExtenderWanExtension `pulumi:"wanExtension"`
	// WiMax authentication protocol(TLS or TTLS). Valid values: `tls`, `ttls`.
	WimaxAuthProtocol *string `pulumi:"wimaxAuthProtocol"`
	// WiMax carrier.
	WimaxCarrier *string `pulumi:"wimaxCarrier"`
	// WiMax realm.
	WimaxRealm *string `pulumi:"wimaxRealm"`
}

// The set of arguments for constructing a Extender resource.
type ExtenderArgs struct {
	// AAA shared secret.
	AaaSharedSecret pulumi.StringPtrInput
	// Access point name(APN).
	AccessPointName pulumi.StringPtrInput
	// FortiExtender Administration (enable or disable). Valid values: `disable`, `discovered`, `enable`.
	Admin pulumi.StringInput
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess pulumi.StringPtrInput
	// Initialization AT commands specific to the MODEM.
	AtDialScript pulumi.StringPtrInput
	// FortiExtender Administration (enable or disable). Valid values: `disable`, `enable`.
	Authorized pulumi.StringPtrInput
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit pulumi.IntPtrInput
	// Billing start day.
	BillingStartDay pulumi.IntPtrInput
	// CDMA AAA SPI.
	CdmaAaaSpi pulumi.StringPtrInput
	// CDMA HA SPI.
	CdmaHaSpi pulumi.StringPtrInput
	// NAI for CDMA MODEMS.
	CdmaNai pulumi.StringPtrInput
	// Connection status.
	ConnStatus pulumi.IntPtrInput
	// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
	ControllerReport ExtenderControllerReportPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// device-id
	DeviceId pulumi.IntPtrInput
	// Dial mode (dial-on-demand or always-connect). Valid values: `dial-on-demand`, `always-connect`.
	DialMode pulumi.StringPtrInput
	// Dial status.
	DialStatus pulumi.IntPtrInput
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth pulumi.StringPtrInput
	// FortiExtender name.
	ExtName pulumi.StringPtrInput
	// Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
	ExtensionType pulumi.StringPtrInput
	// FortiExtender serial number.
	Fosid pulumi.StringInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// HA shared secret.
	HaSharedSecret pulumi.StringPtrInput
	// FortiExtender interface name.
	Ifname pulumi.StringPtrInput
	// Allow/disallow network initiated updates to the MODEM. Valid values: `enable`, `disable`.
	InitiatedUpdate pulumi.StringPtrInput
	// FortiExtender login password.
	LoginPassword pulumi.StringPtrInput
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange pulumi.StringPtrInput
	// FortiExtender mode. Valid values: `standalone`, `redundant`.
	Mode pulumi.StringPtrInput
	// Configuration options for modem 1. The structure of `modem1` block is documented below.
	Modem1 ExtenderModem1PtrInput
	// Configuration options for modem 2. The structure of `modem2` block is documented below.
	Modem2 ExtenderModem2PtrInput
	// MODEM password.
	ModemPasswd pulumi.StringPtrInput
	// MODEM type (CDMA, GSM/LTE or WIMAX). Valid values: `cdma`, `gsm/lte`, `wimax`.
	ModemType pulumi.StringPtrInput
	// MODEM mode of operation(3G,LTE,etc). Valid values: `auto`, `auto-3g`, `force-lte`, `force-3g`, `force-2g`.
	MultiMode pulumi.StringPtrInput
	// FortiExtender entry name.
	Name pulumi.StringPtrInput
	// Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
	OverrideAllowaccess pulumi.StringPtrInput
	// Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
	OverrideEnforceBandwidth pulumi.StringPtrInput
	// Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
	OverrideLoginPasswordChange pulumi.StringPtrInput
	// PPP authentication protocol (PAP,CHAP or auto). Valid values: `auto`, `pap`, `chap`.
	PppAuthProtocol pulumi.StringPtrInput
	// Enable/disable PPP echo request. Valid values: `enable`, `disable`.
	PppEchoRequest pulumi.StringPtrInput
	// PPP password.
	PppPassword pulumi.StringPtrInput
	// PPP username.
	PppUsername pulumi.StringPtrInput
	// Primary HA.
	PrimaryHa pulumi.StringPtrInput
	// FortiExtender profile configuration.
	Profile pulumi.StringPtrInput
	// Monthly quota limit (MB).
	QuotaLimitMb pulumi.IntPtrInput
	// Number of redials allowed based on failed attempts. Valid values: `none`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`.
	Redial pulumi.StringPtrInput
	// Redundant interface.
	RedundantIntf pulumi.StringPtrInput
	// Enable/disable MODEM roaming. Valid values: `enable`, `disable`.
	Roaming pulumi.StringPtrInput
	// FortiExtender work role(Primary, Secondary, None). Valid values: `none`, `primary`, `secondary`.
	Role pulumi.StringInput
	// Secondary HA.
	SecondaryHa pulumi.StringPtrInput
	// SIM PIN.
	SimPin pulumi.StringPtrInput
	// VDOM
	Vdom pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// FortiExtender wan extension configuration. The structure of `wanExtension` block is documented below.
	WanExtension ExtenderWanExtensionPtrInput
	// WiMax authentication protocol(TLS or TTLS). Valid values: `tls`, `ttls`.
	WimaxAuthProtocol pulumi.StringPtrInput
	// WiMax carrier.
	WimaxCarrier pulumi.StringPtrInput
	// WiMax realm.
	WimaxRealm pulumi.StringPtrInput
}

func (ExtenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*extenderArgs)(nil)).Elem()
}

type ExtenderInput interface {
	pulumi.Input

	ToExtenderOutput() ExtenderOutput
	ToExtenderOutputWithContext(ctx context.Context) ExtenderOutput
}

func (*Extender) ElementType() reflect.Type {
	return reflect.TypeOf((**Extender)(nil)).Elem()
}

func (i *Extender) ToExtenderOutput() ExtenderOutput {
	return i.ToExtenderOutputWithContext(context.Background())
}

func (i *Extender) ToExtenderOutputWithContext(ctx context.Context) ExtenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderOutput)
}

// ExtenderArrayInput is an input type that accepts ExtenderArray and ExtenderArrayOutput values.
// You can construct a concrete instance of `ExtenderArrayInput` via:
//
//	ExtenderArray{ ExtenderArgs{...} }
type ExtenderArrayInput interface {
	pulumi.Input

	ToExtenderArrayOutput() ExtenderArrayOutput
	ToExtenderArrayOutputWithContext(context.Context) ExtenderArrayOutput
}

type ExtenderArray []ExtenderInput

func (ExtenderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Extender)(nil)).Elem()
}

func (i ExtenderArray) ToExtenderArrayOutput() ExtenderArrayOutput {
	return i.ToExtenderArrayOutputWithContext(context.Background())
}

func (i ExtenderArray) ToExtenderArrayOutputWithContext(ctx context.Context) ExtenderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderArrayOutput)
}

// ExtenderMapInput is an input type that accepts ExtenderMap and ExtenderMapOutput values.
// You can construct a concrete instance of `ExtenderMapInput` via:
//
//	ExtenderMap{ "key": ExtenderArgs{...} }
type ExtenderMapInput interface {
	pulumi.Input

	ToExtenderMapOutput() ExtenderMapOutput
	ToExtenderMapOutputWithContext(context.Context) ExtenderMapOutput
}

type ExtenderMap map[string]ExtenderInput

func (ExtenderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Extender)(nil)).Elem()
}

func (i ExtenderMap) ToExtenderMapOutput() ExtenderMapOutput {
	return i.ToExtenderMapOutputWithContext(context.Background())
}

func (i ExtenderMap) ToExtenderMapOutputWithContext(ctx context.Context) ExtenderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderMapOutput)
}

type ExtenderOutput struct{ *pulumi.OutputState }

func (ExtenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Extender)(nil)).Elem()
}

func (o ExtenderOutput) ToExtenderOutput() ExtenderOutput {
	return o
}

func (o ExtenderOutput) ToExtenderOutputWithContext(ctx context.Context) ExtenderOutput {
	return o
}

// AAA shared secret.
func (o ExtenderOutput) AaaSharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringPtrOutput { return v.AaaSharedSecret }).(pulumi.StringPtrOutput)
}

// Access point name(APN).
func (o ExtenderOutput) AccessPointName() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.AccessPointName }).(pulumi.StringOutput)
}

// FortiExtender Administration (enable or disable). Valid values: `disable`, `discovered`, `enable`.
func (o ExtenderOutput) Admin() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Admin }).(pulumi.StringOutput)
}

// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
func (o ExtenderOutput) Allowaccess() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Allowaccess }).(pulumi.StringOutput)
}

// Initialization AT commands specific to the MODEM.
func (o ExtenderOutput) AtDialScript() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.AtDialScript }).(pulumi.StringOutput)
}

// FortiExtender Administration (enable or disable). Valid values: `disable`, `enable`.
func (o ExtenderOutput) Authorized() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Authorized }).(pulumi.StringOutput)
}

// FortiExtender LAN extension bandwidth limit (Mbps).
func (o ExtenderOutput) BandwidthLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *Extender) pulumi.IntOutput { return v.BandwidthLimit }).(pulumi.IntOutput)
}

// Billing start day.
func (o ExtenderOutput) BillingStartDay() pulumi.IntOutput {
	return o.ApplyT(func(v *Extender) pulumi.IntOutput { return v.BillingStartDay }).(pulumi.IntOutput)
}

// CDMA AAA SPI.
func (o ExtenderOutput) CdmaAaaSpi() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.CdmaAaaSpi }).(pulumi.StringOutput)
}

// CDMA HA SPI.
func (o ExtenderOutput) CdmaHaSpi() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.CdmaHaSpi }).(pulumi.StringOutput)
}

// NAI for CDMA MODEMS.
func (o ExtenderOutput) CdmaNai() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.CdmaNai }).(pulumi.StringOutput)
}

// Connection status.
func (o ExtenderOutput) ConnStatus() pulumi.IntOutput {
	return o.ApplyT(func(v *Extender) pulumi.IntOutput { return v.ConnStatus }).(pulumi.IntOutput)
}

// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
func (o ExtenderOutput) ControllerReport() ExtenderControllerReportOutput {
	return o.ApplyT(func(v *Extender) ExtenderControllerReportOutput { return v.ControllerReport }).(ExtenderControllerReportOutput)
}

// Description.
func (o ExtenderOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// device-id
func (o ExtenderOutput) DeviceId() pulumi.IntOutput {
	return o.ApplyT(func(v *Extender) pulumi.IntOutput { return v.DeviceId }).(pulumi.IntOutput)
}

// Dial mode (dial-on-demand or always-connect). Valid values: `dial-on-demand`, `always-connect`.
func (o ExtenderOutput) DialMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.DialMode }).(pulumi.StringOutput)
}

// Dial status.
func (o ExtenderOutput) DialStatus() pulumi.IntOutput {
	return o.ApplyT(func(v *Extender) pulumi.IntOutput { return v.DialStatus }).(pulumi.IntOutput)
}

// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
func (o ExtenderOutput) EnforceBandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.EnforceBandwidth }).(pulumi.StringOutput)
}

// FortiExtender name.
func (o ExtenderOutput) ExtName() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.ExtName }).(pulumi.StringOutput)
}

// Extension type for this FortiExtender. Valid values: `wan-extension`, `lan-extension`.
func (o ExtenderOutput) ExtensionType() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.ExtensionType }).(pulumi.StringOutput)
}

// FortiExtender serial number.
func (o ExtenderOutput) Fosid() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Fosid }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o ExtenderOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// HA shared secret.
func (o ExtenderOutput) HaSharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringPtrOutput { return v.HaSharedSecret }).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtenderOutput) Ifname() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Ifname }).(pulumi.StringOutput)
}

// Allow/disallow network initiated updates to the MODEM. Valid values: `enable`, `disable`.
func (o ExtenderOutput) InitiatedUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.InitiatedUpdate }).(pulumi.StringOutput)
}

// FortiExtender login password.
func (o ExtenderOutput) LoginPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringPtrOutput { return v.LoginPassword }).(pulumi.StringPtrOutput)
}

// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
func (o ExtenderOutput) LoginPasswordChange() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.LoginPasswordChange }).(pulumi.StringOutput)
}

// FortiExtender mode. Valid values: `standalone`, `redundant`.
func (o ExtenderOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// Configuration options for modem 1. The structure of `modem1` block is documented below.
func (o ExtenderOutput) Modem1() ExtenderModem1Output {
	return o.ApplyT(func(v *Extender) ExtenderModem1Output { return v.Modem1 }).(ExtenderModem1Output)
}

// Configuration options for modem 2. The structure of `modem2` block is documented below.
func (o ExtenderOutput) Modem2() ExtenderModem2Output {
	return o.ApplyT(func(v *Extender) ExtenderModem2Output { return v.Modem2 }).(ExtenderModem2Output)
}

// MODEM password.
func (o ExtenderOutput) ModemPasswd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringPtrOutput { return v.ModemPasswd }).(pulumi.StringPtrOutput)
}

// MODEM type (CDMA, GSM/LTE or WIMAX). Valid values: `cdma`, `gsm/lte`, `wimax`.
func (o ExtenderOutput) ModemType() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.ModemType }).(pulumi.StringOutput)
}

// MODEM mode of operation(3G,LTE,etc). Valid values: `auto`, `auto-3g`, `force-lte`, `force-3g`, `force-2g`.
func (o ExtenderOutput) MultiMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.MultiMode }).(pulumi.StringOutput)
}

// FortiExtender entry name.
func (o ExtenderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable to override the extender profile management access configuration. Valid values: `enable`, `disable`.
func (o ExtenderOutput) OverrideAllowaccess() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.OverrideAllowaccess }).(pulumi.StringOutput)
}

// Enable to override the extender profile enforce-bandwidth setting. Valid values: `enable`, `disable`.
func (o ExtenderOutput) OverrideEnforceBandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.OverrideEnforceBandwidth }).(pulumi.StringOutput)
}

// Enable to override the extender profile login-password (administrator password) setting. Valid values: `enable`, `disable`.
func (o ExtenderOutput) OverrideLoginPasswordChange() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.OverrideLoginPasswordChange }).(pulumi.StringOutput)
}

// PPP authentication protocol (PAP,CHAP or auto). Valid values: `auto`, `pap`, `chap`.
func (o ExtenderOutput) PppAuthProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.PppAuthProtocol }).(pulumi.StringOutput)
}

// Enable/disable PPP echo request. Valid values: `enable`, `disable`.
func (o ExtenderOutput) PppEchoRequest() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.PppEchoRequest }).(pulumi.StringOutput)
}

// PPP password.
func (o ExtenderOutput) PppPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringPtrOutput { return v.PppPassword }).(pulumi.StringPtrOutput)
}

// PPP username.
func (o ExtenderOutput) PppUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.PppUsername }).(pulumi.StringOutput)
}

// Primary HA.
func (o ExtenderOutput) PrimaryHa() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.PrimaryHa }).(pulumi.StringOutput)
}

// FortiExtender profile configuration.
func (o ExtenderOutput) Profile() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Profile }).(pulumi.StringOutput)
}

// Monthly quota limit (MB).
func (o ExtenderOutput) QuotaLimitMb() pulumi.IntOutput {
	return o.ApplyT(func(v *Extender) pulumi.IntOutput { return v.QuotaLimitMb }).(pulumi.IntOutput)
}

// Number of redials allowed based on failed attempts. Valid values: `none`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`.
func (o ExtenderOutput) Redial() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Redial }).(pulumi.StringOutput)
}

// Redundant interface.
func (o ExtenderOutput) RedundantIntf() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.RedundantIntf }).(pulumi.StringOutput)
}

// Enable/disable MODEM roaming. Valid values: `enable`, `disable`.
func (o ExtenderOutput) Roaming() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Roaming }).(pulumi.StringOutput)
}

// FortiExtender work role(Primary, Secondary, None). Valid values: `none`, `primary`, `secondary`.
func (o ExtenderOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// Secondary HA.
func (o ExtenderOutput) SecondaryHa() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.SecondaryHa }).(pulumi.StringOutput)
}

// SIM PIN.
func (o ExtenderOutput) SimPin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringPtrOutput { return v.SimPin }).(pulumi.StringPtrOutput)
}

// VDOM
func (o ExtenderOutput) Vdom() pulumi.IntOutput {
	return o.ApplyT(func(v *Extender) pulumi.IntOutput { return v.Vdom }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ExtenderOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// FortiExtender wan extension configuration. The structure of `wanExtension` block is documented below.
func (o ExtenderOutput) WanExtension() ExtenderWanExtensionOutput {
	return o.ApplyT(func(v *Extender) ExtenderWanExtensionOutput { return v.WanExtension }).(ExtenderWanExtensionOutput)
}

// WiMax authentication protocol(TLS or TTLS). Valid values: `tls`, `ttls`.
func (o ExtenderOutput) WimaxAuthProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.WimaxAuthProtocol }).(pulumi.StringOutput)
}

// WiMax carrier.
func (o ExtenderOutput) WimaxCarrier() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.WimaxCarrier }).(pulumi.StringOutput)
}

// WiMax realm.
func (o ExtenderOutput) WimaxRealm() pulumi.StringOutput {
	return o.ApplyT(func(v *Extender) pulumi.StringOutput { return v.WimaxRealm }).(pulumi.StringOutput)
}

type ExtenderArrayOutput struct{ *pulumi.OutputState }

func (ExtenderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Extender)(nil)).Elem()
}

func (o ExtenderArrayOutput) ToExtenderArrayOutput() ExtenderArrayOutput {
	return o
}

func (o ExtenderArrayOutput) ToExtenderArrayOutputWithContext(ctx context.Context) ExtenderArrayOutput {
	return o
}

func (o ExtenderArrayOutput) Index(i pulumi.IntInput) ExtenderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Extender {
		return vs[0].([]*Extender)[vs[1].(int)]
	}).(ExtenderOutput)
}

type ExtenderMapOutput struct{ *pulumi.OutputState }

func (ExtenderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Extender)(nil)).Elem()
}

func (o ExtenderMapOutput) ToExtenderMapOutput() ExtenderMapOutput {
	return o
}

func (o ExtenderMapOutput) ToExtenderMapOutputWithContext(ctx context.Context) ExtenderMapOutput {
	return o
}

func (o ExtenderMapOutput) MapIndex(k pulumi.StringInput) ExtenderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Extender {
		return vs[0].(map[string]*Extender)[vs[1].(string)]
	}).(ExtenderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderInput)(nil)).Elem(), &Extender{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderArrayInput)(nil)).Elem(), ExtenderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderMapInput)(nil)).Elem(), ExtenderMap{})
	pulumi.RegisterOutputType(ExtenderOutput{})
	pulumi.RegisterOutputType(ExtenderArrayOutput{})
	pulumi.RegisterOutputType(ExtenderMapOutput{})
}
