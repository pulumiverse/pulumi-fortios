// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package endpointcontrol

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure FortiClient Enterprise Management Server (EMS) entries. Applies to FortiOS Version `<= 6.2.0`.
//
// ## Import
//
// EndpointControl ForticlientEms can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:endpointcontrol/forticlientems:Forticlientems labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:endpointcontrol/forticlientems:Forticlientems labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Forticlientems struct {
	pulumi.CustomResourceState

	// Firewall address name.
	Address pulumi.StringOutput `pulumi:"address"`
	// FortiClient EMS admin password.
	AdminPassword pulumi.StringPtrOutput `pulumi:"adminPassword"`
	// FortiClient EMS admin type. Valid values: `Windows`, `LDAP`.
	AdminType pulumi.StringOutput `pulumi:"adminType"`
	// FortiClient EMS admin username.
	AdminUsername pulumi.StringOutput `pulumi:"adminUsername"`
	// FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
	HttpsPort pulumi.IntOutput `pulumi:"httpsPort"`
	// FortiClient EMS telemetry listen port number. (1 - 65535, default: 8013).
	ListenPort pulumi.IntOutput `pulumi:"listenPort"`
	// FortiClient Enterprise Management Server (EMS) name.
	Name pulumi.StringOutput `pulumi:"name"`
	// FortiClient EMS REST API authentication. Valid values: `disable`, `userpass`.
	RestApiAuth pulumi.StringOutput `pulumi:"restApiAuth"`
	// FortiClient EMS Serial Number.
	SerialNumber pulumi.StringOutput `pulumi:"serialNumber"`
	// FortiClient EMS telemetry upload port number. (1 - 65535, default: 8014).
	UploadPort pulumi.IntOutput `pulumi:"uploadPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewForticlientems registers a new resource with the given unique name, arguments, and options.
func NewForticlientems(ctx *pulumi.Context,
	name string, args *ForticlientemsArgs, opts ...pulumi.ResourceOption) (*Forticlientems, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.AdminUsername == nil {
		return nil, errors.New("invalid value for required argument 'AdminUsername'")
	}
	if args.SerialNumber == nil {
		return nil, errors.New("invalid value for required argument 'SerialNumber'")
	}
	if args.AdminPassword != nil {
		args.AdminPassword = pulumi.ToSecret(args.AdminPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"adminPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Forticlientems
	err := ctx.RegisterResource("fortios:endpointcontrol/forticlientems:Forticlientems", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetForticlientems gets an existing Forticlientems resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetForticlientems(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ForticlientemsState, opts ...pulumi.ResourceOption) (*Forticlientems, error) {
	var resource Forticlientems
	err := ctx.ReadResource("fortios:endpointcontrol/forticlientems:Forticlientems", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Forticlientems resources.
type forticlientemsState struct {
	// Firewall address name.
	Address *string `pulumi:"address"`
	// FortiClient EMS admin password.
	AdminPassword *string `pulumi:"adminPassword"`
	// FortiClient EMS admin type. Valid values: `Windows`, `LDAP`.
	AdminType *string `pulumi:"adminType"`
	// FortiClient EMS admin username.
	AdminUsername *string `pulumi:"adminUsername"`
	// FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
	HttpsPort *int `pulumi:"httpsPort"`
	// FortiClient EMS telemetry listen port number. (1 - 65535, default: 8013).
	ListenPort *int `pulumi:"listenPort"`
	// FortiClient Enterprise Management Server (EMS) name.
	Name *string `pulumi:"name"`
	// FortiClient EMS REST API authentication. Valid values: `disable`, `userpass`.
	RestApiAuth *string `pulumi:"restApiAuth"`
	// FortiClient EMS Serial Number.
	SerialNumber *string `pulumi:"serialNumber"`
	// FortiClient EMS telemetry upload port number. (1 - 65535, default: 8014).
	UploadPort *int `pulumi:"uploadPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ForticlientemsState struct {
	// Firewall address name.
	Address pulumi.StringPtrInput
	// FortiClient EMS admin password.
	AdminPassword pulumi.StringPtrInput
	// FortiClient EMS admin type. Valid values: `Windows`, `LDAP`.
	AdminType pulumi.StringPtrInput
	// FortiClient EMS admin username.
	AdminUsername pulumi.StringPtrInput
	// FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
	HttpsPort pulumi.IntPtrInput
	// FortiClient EMS telemetry listen port number. (1 - 65535, default: 8013).
	ListenPort pulumi.IntPtrInput
	// FortiClient Enterprise Management Server (EMS) name.
	Name pulumi.StringPtrInput
	// FortiClient EMS REST API authentication. Valid values: `disable`, `userpass`.
	RestApiAuth pulumi.StringPtrInput
	// FortiClient EMS Serial Number.
	SerialNumber pulumi.StringPtrInput
	// FortiClient EMS telemetry upload port number. (1 - 65535, default: 8014).
	UploadPort pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ForticlientemsState) ElementType() reflect.Type {
	return reflect.TypeOf((*forticlientemsState)(nil)).Elem()
}

type forticlientemsArgs struct {
	// Firewall address name.
	Address string `pulumi:"address"`
	// FortiClient EMS admin password.
	AdminPassword *string `pulumi:"adminPassword"`
	// FortiClient EMS admin type. Valid values: `Windows`, `LDAP`.
	AdminType *string `pulumi:"adminType"`
	// FortiClient EMS admin username.
	AdminUsername string `pulumi:"adminUsername"`
	// FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
	HttpsPort *int `pulumi:"httpsPort"`
	// FortiClient EMS telemetry listen port number. (1 - 65535, default: 8013).
	ListenPort *int `pulumi:"listenPort"`
	// FortiClient Enterprise Management Server (EMS) name.
	Name *string `pulumi:"name"`
	// FortiClient EMS REST API authentication. Valid values: `disable`, `userpass`.
	RestApiAuth *string `pulumi:"restApiAuth"`
	// FortiClient EMS Serial Number.
	SerialNumber string `pulumi:"serialNumber"`
	// FortiClient EMS telemetry upload port number. (1 - 65535, default: 8014).
	UploadPort *int `pulumi:"uploadPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Forticlientems resource.
type ForticlientemsArgs struct {
	// Firewall address name.
	Address pulumi.StringInput
	// FortiClient EMS admin password.
	AdminPassword pulumi.StringPtrInput
	// FortiClient EMS admin type. Valid values: `Windows`, `LDAP`.
	AdminType pulumi.StringPtrInput
	// FortiClient EMS admin username.
	AdminUsername pulumi.StringInput
	// FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
	HttpsPort pulumi.IntPtrInput
	// FortiClient EMS telemetry listen port number. (1 - 65535, default: 8013).
	ListenPort pulumi.IntPtrInput
	// FortiClient Enterprise Management Server (EMS) name.
	Name pulumi.StringPtrInput
	// FortiClient EMS REST API authentication. Valid values: `disable`, `userpass`.
	RestApiAuth pulumi.StringPtrInput
	// FortiClient EMS Serial Number.
	SerialNumber pulumi.StringInput
	// FortiClient EMS telemetry upload port number. (1 - 65535, default: 8014).
	UploadPort pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ForticlientemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*forticlientemsArgs)(nil)).Elem()
}

type ForticlientemsInput interface {
	pulumi.Input

	ToForticlientemsOutput() ForticlientemsOutput
	ToForticlientemsOutputWithContext(ctx context.Context) ForticlientemsOutput
}

func (*Forticlientems) ElementType() reflect.Type {
	return reflect.TypeOf((**Forticlientems)(nil)).Elem()
}

func (i *Forticlientems) ToForticlientemsOutput() ForticlientemsOutput {
	return i.ToForticlientemsOutputWithContext(context.Background())
}

func (i *Forticlientems) ToForticlientemsOutputWithContext(ctx context.Context) ForticlientemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForticlientemsOutput)
}

// ForticlientemsArrayInput is an input type that accepts ForticlientemsArray and ForticlientemsArrayOutput values.
// You can construct a concrete instance of `ForticlientemsArrayInput` via:
//
//	ForticlientemsArray{ ForticlientemsArgs{...} }
type ForticlientemsArrayInput interface {
	pulumi.Input

	ToForticlientemsArrayOutput() ForticlientemsArrayOutput
	ToForticlientemsArrayOutputWithContext(context.Context) ForticlientemsArrayOutput
}

type ForticlientemsArray []ForticlientemsInput

func (ForticlientemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Forticlientems)(nil)).Elem()
}

func (i ForticlientemsArray) ToForticlientemsArrayOutput() ForticlientemsArrayOutput {
	return i.ToForticlientemsArrayOutputWithContext(context.Background())
}

func (i ForticlientemsArray) ToForticlientemsArrayOutputWithContext(ctx context.Context) ForticlientemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForticlientemsArrayOutput)
}

// ForticlientemsMapInput is an input type that accepts ForticlientemsMap and ForticlientemsMapOutput values.
// You can construct a concrete instance of `ForticlientemsMapInput` via:
//
//	ForticlientemsMap{ "key": ForticlientemsArgs{...} }
type ForticlientemsMapInput interface {
	pulumi.Input

	ToForticlientemsMapOutput() ForticlientemsMapOutput
	ToForticlientemsMapOutputWithContext(context.Context) ForticlientemsMapOutput
}

type ForticlientemsMap map[string]ForticlientemsInput

func (ForticlientemsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Forticlientems)(nil)).Elem()
}

func (i ForticlientemsMap) ToForticlientemsMapOutput() ForticlientemsMapOutput {
	return i.ToForticlientemsMapOutputWithContext(context.Background())
}

func (i ForticlientemsMap) ToForticlientemsMapOutputWithContext(ctx context.Context) ForticlientemsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForticlientemsMapOutput)
}

type ForticlientemsOutput struct{ *pulumi.OutputState }

func (ForticlientemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Forticlientems)(nil)).Elem()
}

func (o ForticlientemsOutput) ToForticlientemsOutput() ForticlientemsOutput {
	return o
}

func (o ForticlientemsOutput) ToForticlientemsOutputWithContext(ctx context.Context) ForticlientemsOutput {
	return o
}

// Firewall address name.
func (o ForticlientemsOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *Forticlientems) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// FortiClient EMS admin password.
func (o ForticlientemsOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Forticlientems) pulumi.StringPtrOutput { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// FortiClient EMS admin type. Valid values: `Windows`, `LDAP`.
func (o ForticlientemsOutput) AdminType() pulumi.StringOutput {
	return o.ApplyT(func(v *Forticlientems) pulumi.StringOutput { return v.AdminType }).(pulumi.StringOutput)
}

// FortiClient EMS admin username.
func (o ForticlientemsOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *Forticlientems) pulumi.StringOutput { return v.AdminUsername }).(pulumi.StringOutput)
}

// FortiClient EMS HTTPS access port number. (1 - 65535, default: 443).
func (o ForticlientemsOutput) HttpsPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Forticlientems) pulumi.IntOutput { return v.HttpsPort }).(pulumi.IntOutput)
}

// FortiClient EMS telemetry listen port number. (1 - 65535, default: 8013).
func (o ForticlientemsOutput) ListenPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Forticlientems) pulumi.IntOutput { return v.ListenPort }).(pulumi.IntOutput)
}

// FortiClient Enterprise Management Server (EMS) name.
func (o ForticlientemsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Forticlientems) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// FortiClient EMS REST API authentication. Valid values: `disable`, `userpass`.
func (o ForticlientemsOutput) RestApiAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *Forticlientems) pulumi.StringOutput { return v.RestApiAuth }).(pulumi.StringOutput)
}

// FortiClient EMS Serial Number.
func (o ForticlientemsOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *Forticlientems) pulumi.StringOutput { return v.SerialNumber }).(pulumi.StringOutput)
}

// FortiClient EMS telemetry upload port number. (1 - 65535, default: 8014).
func (o ForticlientemsOutput) UploadPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Forticlientems) pulumi.IntOutput { return v.UploadPort }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ForticlientemsOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Forticlientems) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type ForticlientemsArrayOutput struct{ *pulumi.OutputState }

func (ForticlientemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Forticlientems)(nil)).Elem()
}

func (o ForticlientemsArrayOutput) ToForticlientemsArrayOutput() ForticlientemsArrayOutput {
	return o
}

func (o ForticlientemsArrayOutput) ToForticlientemsArrayOutputWithContext(ctx context.Context) ForticlientemsArrayOutput {
	return o
}

func (o ForticlientemsArrayOutput) Index(i pulumi.IntInput) ForticlientemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Forticlientems {
		return vs[0].([]*Forticlientems)[vs[1].(int)]
	}).(ForticlientemsOutput)
}

type ForticlientemsMapOutput struct{ *pulumi.OutputState }

func (ForticlientemsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Forticlientems)(nil)).Elem()
}

func (o ForticlientemsMapOutput) ToForticlientemsMapOutput() ForticlientemsMapOutput {
	return o
}

func (o ForticlientemsMapOutput) ToForticlientemsMapOutputWithContext(ctx context.Context) ForticlientemsMapOutput {
	return o
}

func (o ForticlientemsMapOutput) MapIndex(k pulumi.StringInput) ForticlientemsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Forticlientems {
		return vs[0].(map[string]*Forticlientems)[vs[1].(string)]
	}).(ForticlientemsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ForticlientemsInput)(nil)).Elem(), &Forticlientems{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForticlientemsArrayInput)(nil)).Elem(), ForticlientemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForticlientemsMapInput)(nil)).Elem(), ForticlientemsMap{})
	pulumi.RegisterOutputType(ForticlientemsOutput{})
	pulumi.RegisterOutputType(ForticlientemsArrayOutput{})
	pulumi.RegisterOutputType(ForticlientemsMapOutput{})
}
