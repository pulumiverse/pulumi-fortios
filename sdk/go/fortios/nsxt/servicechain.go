// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure NSX-T service chain. Applies to FortiOS Version `>= 6.4.10`.
//
// ## Import
//
// Nsxt ServiceChain can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:nsxt/servicechain:Servicechain labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:nsxt/servicechain:Servicechain labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Servicechain struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Chain ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Chain name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Configure service index. The structure of `serviceIndex` block is documented below.
	ServiceIndices ServicechainServiceIndexArrayOutput `pulumi:"serviceIndices"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewServicechain registers a new resource with the given unique name, arguments, and options.
func NewServicechain(ctx *pulumi.Context,
	name string, args *ServicechainArgs, opts ...pulumi.ResourceOption) (*Servicechain, error) {
	if args == nil {
		args = &ServicechainArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Servicechain
	err := ctx.RegisterResource("fortios:nsxt/servicechain:Servicechain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServicechain gets an existing Servicechain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicechain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServicechainState, opts ...pulumi.ResourceOption) (*Servicechain, error) {
	var resource Servicechain
	err := ctx.ReadResource("fortios:nsxt/servicechain:Servicechain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Servicechain resources.
type servicechainState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Chain ID.
	Fosid *int `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Chain name.
	Name *string `pulumi:"name"`
	// Configure service index. The structure of `serviceIndex` block is documented below.
	ServiceIndices []ServicechainServiceIndex `pulumi:"serviceIndices"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ServicechainState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Chain ID.
	Fosid pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Chain name.
	Name pulumi.StringPtrInput
	// Configure service index. The structure of `serviceIndex` block is documented below.
	ServiceIndices ServicechainServiceIndexArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ServicechainState) ElementType() reflect.Type {
	return reflect.TypeOf((*servicechainState)(nil)).Elem()
}

type servicechainArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Chain ID.
	Fosid *int `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Chain name.
	Name *string `pulumi:"name"`
	// Configure service index. The structure of `serviceIndex` block is documented below.
	ServiceIndices []ServicechainServiceIndex `pulumi:"serviceIndices"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Servicechain resource.
type ServicechainArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Chain ID.
	Fosid pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Chain name.
	Name pulumi.StringPtrInput
	// Configure service index. The structure of `serviceIndex` block is documented below.
	ServiceIndices ServicechainServiceIndexArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ServicechainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*servicechainArgs)(nil)).Elem()
}

type ServicechainInput interface {
	pulumi.Input

	ToServicechainOutput() ServicechainOutput
	ToServicechainOutputWithContext(ctx context.Context) ServicechainOutput
}

func (*Servicechain) ElementType() reflect.Type {
	return reflect.TypeOf((**Servicechain)(nil)).Elem()
}

func (i *Servicechain) ToServicechainOutput() ServicechainOutput {
	return i.ToServicechainOutputWithContext(context.Background())
}

func (i *Servicechain) ToServicechainOutputWithContext(ctx context.Context) ServicechainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicechainOutput)
}

// ServicechainArrayInput is an input type that accepts ServicechainArray and ServicechainArrayOutput values.
// You can construct a concrete instance of `ServicechainArrayInput` via:
//
//	ServicechainArray{ ServicechainArgs{...} }
type ServicechainArrayInput interface {
	pulumi.Input

	ToServicechainArrayOutput() ServicechainArrayOutput
	ToServicechainArrayOutputWithContext(context.Context) ServicechainArrayOutput
}

type ServicechainArray []ServicechainInput

func (ServicechainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Servicechain)(nil)).Elem()
}

func (i ServicechainArray) ToServicechainArrayOutput() ServicechainArrayOutput {
	return i.ToServicechainArrayOutputWithContext(context.Background())
}

func (i ServicechainArray) ToServicechainArrayOutputWithContext(ctx context.Context) ServicechainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicechainArrayOutput)
}

// ServicechainMapInput is an input type that accepts ServicechainMap and ServicechainMapOutput values.
// You can construct a concrete instance of `ServicechainMapInput` via:
//
//	ServicechainMap{ "key": ServicechainArgs{...} }
type ServicechainMapInput interface {
	pulumi.Input

	ToServicechainMapOutput() ServicechainMapOutput
	ToServicechainMapOutputWithContext(context.Context) ServicechainMapOutput
}

type ServicechainMap map[string]ServicechainInput

func (ServicechainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Servicechain)(nil)).Elem()
}

func (i ServicechainMap) ToServicechainMapOutput() ServicechainMapOutput {
	return i.ToServicechainMapOutputWithContext(context.Background())
}

func (i ServicechainMap) ToServicechainMapOutputWithContext(ctx context.Context) ServicechainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicechainMapOutput)
}

type ServicechainOutput struct{ *pulumi.OutputState }

func (ServicechainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Servicechain)(nil)).Elem()
}

func (o ServicechainOutput) ToServicechainOutput() ServicechainOutput {
	return o
}

func (o ServicechainOutput) ToServicechainOutputWithContext(ctx context.Context) ServicechainOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o ServicechainOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Servicechain) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Chain ID.
func (o ServicechainOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *Servicechain) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o ServicechainOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Servicechain) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Chain name.
func (o ServicechainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Servicechain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Configure service index. The structure of `serviceIndex` block is documented below.
func (o ServicechainOutput) ServiceIndices() ServicechainServiceIndexArrayOutput {
	return o.ApplyT(func(v *Servicechain) ServicechainServiceIndexArrayOutput { return v.ServiceIndices }).(ServicechainServiceIndexArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ServicechainOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Servicechain) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ServicechainArrayOutput struct{ *pulumi.OutputState }

func (ServicechainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Servicechain)(nil)).Elem()
}

func (o ServicechainArrayOutput) ToServicechainArrayOutput() ServicechainArrayOutput {
	return o
}

func (o ServicechainArrayOutput) ToServicechainArrayOutputWithContext(ctx context.Context) ServicechainArrayOutput {
	return o
}

func (o ServicechainArrayOutput) Index(i pulumi.IntInput) ServicechainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Servicechain {
		return vs[0].([]*Servicechain)[vs[1].(int)]
	}).(ServicechainOutput)
}

type ServicechainMapOutput struct{ *pulumi.OutputState }

func (ServicechainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Servicechain)(nil)).Elem()
}

func (o ServicechainMapOutput) ToServicechainMapOutput() ServicechainMapOutput {
	return o
}

func (o ServicechainMapOutput) ToServicechainMapOutputWithContext(ctx context.Context) ServicechainMapOutput {
	return o
}

func (o ServicechainMapOutput) MapIndex(k pulumi.StringInput) ServicechainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Servicechain {
		return vs[0].(map[string]*Servicechain)[vs[1].(string)]
	}).(ServicechainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServicechainInput)(nil)).Elem(), &Servicechain{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicechainArrayInput)(nil)).Elem(), ServicechainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicechainMapInput)(nil)).Elem(), ServicechainMap{})
	pulumi.RegisterOutputType(ServicechainOutput{})
	pulumi.RegisterOutputType(ServicechainArrayOutput{})
	pulumi.RegisterOutputType(ServicechainMapOutput{})
}
