// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ips

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure IPS VDOM parameter.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/ips"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ips.NewSettings(ctx, "trname", &ips.SettingsArgs{
//				IpsPacketQuota:      pulumi.Int(0),
//				PacketLogHistory:    pulumi.Int(1),
//				PacketLogMemory:     pulumi.Int(256),
//				PacketLogPostAttack: pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Ips Settings can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:ips/settings:Settings labelname IpsSettings
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:ips/settings:Settings labelname IpsSettings
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Settings struct {
	pulumi.CustomResourceState

	// Maximum amount of disk space in MB for logged packets when logging to disk. Range depends on disk size.
	IpsPacketQuota pulumi.IntOutput `pulumi:"ipsPacketQuota"`
	// Number of packets to capture before and including the one in which the IPS signature is detected (1 - 255).
	PacketLogHistory pulumi.IntOutput `pulumi:"packetLogHistory"`
	// Maximum memory can be used by packet log (64 - 8192 kB).
	PacketLogMemory pulumi.IntOutput `pulumi:"packetLogMemory"`
	// Number of packets to log after the IPS signature is detected (0 - 255).
	PacketLogPostAttack pulumi.IntOutput `pulumi:"packetLogPostAttack"`
	// Enable/disable proxy-mode policy inline IPS support. Valid values: `disable`, `enable`.
	ProxyInlineIps pulumi.StringOutput `pulumi:"proxyInlineIps"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSettings registers a new resource with the given unique name, arguments, and options.
func NewSettings(ctx *pulumi.Context,
	name string, args *SettingsArgs, opts ...pulumi.ResourceOption) (*Settings, error) {
	if args == nil {
		args = &SettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Settings
	err := ctx.RegisterResource("fortios:ips/settings:Settings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSettings gets an existing Settings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SettingsState, opts ...pulumi.ResourceOption) (*Settings, error) {
	var resource Settings
	err := ctx.ReadResource("fortios:ips/settings:Settings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Settings resources.
type settingsState struct {
	// Maximum amount of disk space in MB for logged packets when logging to disk. Range depends on disk size.
	IpsPacketQuota *int `pulumi:"ipsPacketQuota"`
	// Number of packets to capture before and including the one in which the IPS signature is detected (1 - 255).
	PacketLogHistory *int `pulumi:"packetLogHistory"`
	// Maximum memory can be used by packet log (64 - 8192 kB).
	PacketLogMemory *int `pulumi:"packetLogMemory"`
	// Number of packets to log after the IPS signature is detected (0 - 255).
	PacketLogPostAttack *int `pulumi:"packetLogPostAttack"`
	// Enable/disable proxy-mode policy inline IPS support. Valid values: `disable`, `enable`.
	ProxyInlineIps *string `pulumi:"proxyInlineIps"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SettingsState struct {
	// Maximum amount of disk space in MB for logged packets when logging to disk. Range depends on disk size.
	IpsPacketQuota pulumi.IntPtrInput
	// Number of packets to capture before and including the one in which the IPS signature is detected (1 - 255).
	PacketLogHistory pulumi.IntPtrInput
	// Maximum memory can be used by packet log (64 - 8192 kB).
	PacketLogMemory pulumi.IntPtrInput
	// Number of packets to log after the IPS signature is detected (0 - 255).
	PacketLogPostAttack pulumi.IntPtrInput
	// Enable/disable proxy-mode policy inline IPS support. Valid values: `disable`, `enable`.
	ProxyInlineIps pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*settingsState)(nil)).Elem()
}

type settingsArgs struct {
	// Maximum amount of disk space in MB for logged packets when logging to disk. Range depends on disk size.
	IpsPacketQuota *int `pulumi:"ipsPacketQuota"`
	// Number of packets to capture before and including the one in which the IPS signature is detected (1 - 255).
	PacketLogHistory *int `pulumi:"packetLogHistory"`
	// Maximum memory can be used by packet log (64 - 8192 kB).
	PacketLogMemory *int `pulumi:"packetLogMemory"`
	// Number of packets to log after the IPS signature is detected (0 - 255).
	PacketLogPostAttack *int `pulumi:"packetLogPostAttack"`
	// Enable/disable proxy-mode policy inline IPS support. Valid values: `disable`, `enable`.
	ProxyInlineIps *string `pulumi:"proxyInlineIps"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Settings resource.
type SettingsArgs struct {
	// Maximum amount of disk space in MB for logged packets when logging to disk. Range depends on disk size.
	IpsPacketQuota pulumi.IntPtrInput
	// Number of packets to capture before and including the one in which the IPS signature is detected (1 - 255).
	PacketLogHistory pulumi.IntPtrInput
	// Maximum memory can be used by packet log (64 - 8192 kB).
	PacketLogMemory pulumi.IntPtrInput
	// Number of packets to log after the IPS signature is detected (0 - 255).
	PacketLogPostAttack pulumi.IntPtrInput
	// Enable/disable proxy-mode policy inline IPS support. Valid values: `disable`, `enable`.
	ProxyInlineIps pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*settingsArgs)(nil)).Elem()
}

type SettingsInput interface {
	pulumi.Input

	ToSettingsOutput() SettingsOutput
	ToSettingsOutputWithContext(ctx context.Context) SettingsOutput
}

func (*Settings) ElementType() reflect.Type {
	return reflect.TypeOf((**Settings)(nil)).Elem()
}

func (i *Settings) ToSettingsOutput() SettingsOutput {
	return i.ToSettingsOutputWithContext(context.Background())
}

func (i *Settings) ToSettingsOutputWithContext(ctx context.Context) SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsOutput)
}

// SettingsArrayInput is an input type that accepts SettingsArray and SettingsArrayOutput values.
// You can construct a concrete instance of `SettingsArrayInput` via:
//
//	SettingsArray{ SettingsArgs{...} }
type SettingsArrayInput interface {
	pulumi.Input

	ToSettingsArrayOutput() SettingsArrayOutput
	ToSettingsArrayOutputWithContext(context.Context) SettingsArrayOutput
}

type SettingsArray []SettingsInput

func (SettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Settings)(nil)).Elem()
}

func (i SettingsArray) ToSettingsArrayOutput() SettingsArrayOutput {
	return i.ToSettingsArrayOutputWithContext(context.Background())
}

func (i SettingsArray) ToSettingsArrayOutputWithContext(ctx context.Context) SettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsArrayOutput)
}

// SettingsMapInput is an input type that accepts SettingsMap and SettingsMapOutput values.
// You can construct a concrete instance of `SettingsMapInput` via:
//
//	SettingsMap{ "key": SettingsArgs{...} }
type SettingsMapInput interface {
	pulumi.Input

	ToSettingsMapOutput() SettingsMapOutput
	ToSettingsMapOutputWithContext(context.Context) SettingsMapOutput
}

type SettingsMap map[string]SettingsInput

func (SettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Settings)(nil)).Elem()
}

func (i SettingsMap) ToSettingsMapOutput() SettingsMapOutput {
	return i.ToSettingsMapOutputWithContext(context.Background())
}

func (i SettingsMap) ToSettingsMapOutputWithContext(ctx context.Context) SettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsMapOutput)
}

type SettingsOutput struct{ *pulumi.OutputState }

func (SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Settings)(nil)).Elem()
}

func (o SettingsOutput) ToSettingsOutput() SettingsOutput {
	return o
}

func (o SettingsOutput) ToSettingsOutputWithContext(ctx context.Context) SettingsOutput {
	return o
}

// Maximum amount of disk space in MB for logged packets when logging to disk. Range depends on disk size.
func (o SettingsOutput) IpsPacketQuota() pulumi.IntOutput {
	return o.ApplyT(func(v *Settings) pulumi.IntOutput { return v.IpsPacketQuota }).(pulumi.IntOutput)
}

// Number of packets to capture before and including the one in which the IPS signature is detected (1 - 255).
func (o SettingsOutput) PacketLogHistory() pulumi.IntOutput {
	return o.ApplyT(func(v *Settings) pulumi.IntOutput { return v.PacketLogHistory }).(pulumi.IntOutput)
}

// Maximum memory can be used by packet log (64 - 8192 kB).
func (o SettingsOutput) PacketLogMemory() pulumi.IntOutput {
	return o.ApplyT(func(v *Settings) pulumi.IntOutput { return v.PacketLogMemory }).(pulumi.IntOutput)
}

// Number of packets to log after the IPS signature is detected (0 - 255).
func (o SettingsOutput) PacketLogPostAttack() pulumi.IntOutput {
	return o.ApplyT(func(v *Settings) pulumi.IntOutput { return v.PacketLogPostAttack }).(pulumi.IntOutput)
}

// Enable/disable proxy-mode policy inline IPS support. Valid values: `disable`, `enable`.
func (o SettingsOutput) ProxyInlineIps() pulumi.StringOutput {
	return o.ApplyT(func(v *Settings) pulumi.StringOutput { return v.ProxyInlineIps }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SettingsOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Settings) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SettingsArrayOutput struct{ *pulumi.OutputState }

func (SettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Settings)(nil)).Elem()
}

func (o SettingsArrayOutput) ToSettingsArrayOutput() SettingsArrayOutput {
	return o
}

func (o SettingsArrayOutput) ToSettingsArrayOutputWithContext(ctx context.Context) SettingsArrayOutput {
	return o
}

func (o SettingsArrayOutput) Index(i pulumi.IntInput) SettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Settings {
		return vs[0].([]*Settings)[vs[1].(int)]
	}).(SettingsOutput)
}

type SettingsMapOutput struct{ *pulumi.OutputState }

func (SettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Settings)(nil)).Elem()
}

func (o SettingsMapOutput) ToSettingsMapOutput() SettingsMapOutput {
	return o
}

func (o SettingsMapOutput) ToSettingsMapOutputWithContext(ctx context.Context) SettingsMapOutput {
	return o
}

func (o SettingsMapOutput) MapIndex(k pulumi.StringInput) SettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Settings {
		return vs[0].(map[string]*Settings)[vs[1].(string)]
	}).(SettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsInput)(nil)).Elem(), &Settings{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsArrayInput)(nil)).Elem(), SettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsMapInput)(nil)).Elem(), SettingsMap{})
	pulumi.RegisterOutputType(SettingsOutput{})
	pulumi.RegisterOutputType(SettingsArrayOutput{})
	pulumi.RegisterOutputType(SettingsMapOutput{})
}
