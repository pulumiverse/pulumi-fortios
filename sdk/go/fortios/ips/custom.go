// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ips

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure IPS custom signature.
//
// ## Import
//
// Ips Custom can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:ips/custom:Custom labelname {{tag}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:ips/custom:Custom labelname {{tag}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Custom struct {
	pulumi.CustomResourceState

	// Default action (pass or block) for this signature. Valid values: `pass`, `block`.
	Action pulumi.StringOutput `pulumi:"action"`
	// Applications to be protected. Blank for all applications.
	Application pulumi.StringOutput `pulumi:"application"`
	// Comment.
	Comment pulumi.StringOutput `pulumi:"comment"`
	// Protect client or server traffic.
	Location pulumi.StringOutput `pulumi:"location"`
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log pulumi.StringOutput `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringOutput `pulumi:"logPacket"`
	// Operating system(s) that the signature protects. Blank for all operating systems.
	Os pulumi.StringOutput `pulumi:"os"`
	// Protocol(s) that the signature scans. Blank for all protocols.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// Signature ID.
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity.
	Severity pulumi.StringOutput `pulumi:"severity"`
	// Signature name.
	SigName pulumi.StringOutput `pulumi:"sigName"`
	// Custom signature enclosed in single quotes.
	Signature pulumi.StringOutput `pulumi:"signature"`
	// Enable/disable this signature. Valid values: `disable`, `enable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Signature tag.
	Tag pulumi.StringOutput `pulumi:"tag"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewCustom registers a new resource with the given unique name, arguments, and options.
func NewCustom(ctx *pulumi.Context,
	name string, args *CustomArgs, opts ...pulumi.ResourceOption) (*Custom, error) {
	if args == nil {
		args = &CustomArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Custom
	err := ctx.RegisterResource("fortios:ips/custom:Custom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustom gets an existing Custom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomState, opts ...pulumi.ResourceOption) (*Custom, error) {
	var resource Custom
	err := ctx.ReadResource("fortios:ips/custom:Custom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Custom resources.
type customState struct {
	// Default action (pass or block) for this signature. Valid values: `pass`, `block`.
	Action *string `pulumi:"action"`
	// Applications to be protected. Blank for all applications.
	Application *string `pulumi:"application"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Protect client or server traffic.
	Location *string `pulumi:"location"`
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log *string `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Operating system(s) that the signature protects. Blank for all operating systems.
	Os *string `pulumi:"os"`
	// Protocol(s) that the signature scans. Blank for all protocols.
	Protocol *string `pulumi:"protocol"`
	// Signature ID.
	RuleId *int `pulumi:"ruleId"`
	// Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity.
	Severity *string `pulumi:"severity"`
	// Signature name.
	SigName *string `pulumi:"sigName"`
	// Custom signature enclosed in single quotes.
	Signature *string `pulumi:"signature"`
	// Enable/disable this signature. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Signature tag.
	Tag *string `pulumi:"tag"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type CustomState struct {
	// Default action (pass or block) for this signature. Valid values: `pass`, `block`.
	Action pulumi.StringPtrInput
	// Applications to be protected. Blank for all applications.
	Application pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Protect client or server traffic.
	Location pulumi.StringPtrInput
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log pulumi.StringPtrInput
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput
	// Operating system(s) that the signature protects. Blank for all operating systems.
	Os pulumi.StringPtrInput
	// Protocol(s) that the signature scans. Blank for all protocols.
	Protocol pulumi.StringPtrInput
	// Signature ID.
	RuleId pulumi.IntPtrInput
	// Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity.
	Severity pulumi.StringPtrInput
	// Signature name.
	SigName pulumi.StringPtrInput
	// Custom signature enclosed in single quotes.
	Signature pulumi.StringPtrInput
	// Enable/disable this signature. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Signature tag.
	Tag pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (CustomState) ElementType() reflect.Type {
	return reflect.TypeOf((*customState)(nil)).Elem()
}

type customArgs struct {
	// Default action (pass or block) for this signature. Valid values: `pass`, `block`.
	Action *string `pulumi:"action"`
	// Applications to be protected. Blank for all applications.
	Application *string `pulumi:"application"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Protect client or server traffic.
	Location *string `pulumi:"location"`
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log *string `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Operating system(s) that the signature protects. Blank for all operating systems.
	Os *string `pulumi:"os"`
	// Protocol(s) that the signature scans. Blank for all protocols.
	Protocol *string `pulumi:"protocol"`
	// Signature ID.
	RuleId *int `pulumi:"ruleId"`
	// Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity.
	Severity *string `pulumi:"severity"`
	// Signature name.
	SigName *string `pulumi:"sigName"`
	// Custom signature enclosed in single quotes.
	Signature *string `pulumi:"signature"`
	// Enable/disable this signature. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Signature tag.
	Tag *string `pulumi:"tag"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Custom resource.
type CustomArgs struct {
	// Default action (pass or block) for this signature. Valid values: `pass`, `block`.
	Action pulumi.StringPtrInput
	// Applications to be protected. Blank for all applications.
	Application pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Protect client or server traffic.
	Location pulumi.StringPtrInput
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log pulumi.StringPtrInput
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput
	// Operating system(s) that the signature protects. Blank for all operating systems.
	Os pulumi.StringPtrInput
	// Protocol(s) that the signature scans. Blank for all protocols.
	Protocol pulumi.StringPtrInput
	// Signature ID.
	RuleId pulumi.IntPtrInput
	// Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity.
	Severity pulumi.StringPtrInput
	// Signature name.
	SigName pulumi.StringPtrInput
	// Custom signature enclosed in single quotes.
	Signature pulumi.StringPtrInput
	// Enable/disable this signature. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Signature tag.
	Tag pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (CustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customArgs)(nil)).Elem()
}

type CustomInput interface {
	pulumi.Input

	ToCustomOutput() CustomOutput
	ToCustomOutputWithContext(ctx context.Context) CustomOutput
}

func (*Custom) ElementType() reflect.Type {
	return reflect.TypeOf((**Custom)(nil)).Elem()
}

func (i *Custom) ToCustomOutput() CustomOutput {
	return i.ToCustomOutputWithContext(context.Background())
}

func (i *Custom) ToCustomOutputWithContext(ctx context.Context) CustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomOutput)
}

// CustomArrayInput is an input type that accepts CustomArray and CustomArrayOutput values.
// You can construct a concrete instance of `CustomArrayInput` via:
//
//	CustomArray{ CustomArgs{...} }
type CustomArrayInput interface {
	pulumi.Input

	ToCustomArrayOutput() CustomArrayOutput
	ToCustomArrayOutputWithContext(context.Context) CustomArrayOutput
}

type CustomArray []CustomInput

func (CustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Custom)(nil)).Elem()
}

func (i CustomArray) ToCustomArrayOutput() CustomArrayOutput {
	return i.ToCustomArrayOutputWithContext(context.Background())
}

func (i CustomArray) ToCustomArrayOutputWithContext(ctx context.Context) CustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomArrayOutput)
}

// CustomMapInput is an input type that accepts CustomMap and CustomMapOutput values.
// You can construct a concrete instance of `CustomMapInput` via:
//
//	CustomMap{ "key": CustomArgs{...} }
type CustomMapInput interface {
	pulumi.Input

	ToCustomMapOutput() CustomMapOutput
	ToCustomMapOutputWithContext(context.Context) CustomMapOutput
}

type CustomMap map[string]CustomInput

func (CustomMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Custom)(nil)).Elem()
}

func (i CustomMap) ToCustomMapOutput() CustomMapOutput {
	return i.ToCustomMapOutputWithContext(context.Background())
}

func (i CustomMap) ToCustomMapOutputWithContext(ctx context.Context) CustomMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomMapOutput)
}

type CustomOutput struct{ *pulumi.OutputState }

func (CustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Custom)(nil)).Elem()
}

func (o CustomOutput) ToCustomOutput() CustomOutput {
	return o
}

func (o CustomOutput) ToCustomOutputWithContext(ctx context.Context) CustomOutput {
	return o
}

// Default action (pass or block) for this signature. Valid values: `pass`, `block`.
func (o CustomOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Applications to be protected. Blank for all applications.
func (o CustomOutput) Application() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Application }).(pulumi.StringOutput)
}

// Comment.
func (o CustomOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Comment }).(pulumi.StringOutput)
}

// Protect client or server traffic.
func (o CustomOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Enable/disable logging. Valid values: `disable`, `enable`.
func (o CustomOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Log }).(pulumi.StringOutput)
}

// Enable/disable packet logging. Valid values: `disable`, `enable`.
func (o CustomOutput) LogPacket() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.LogPacket }).(pulumi.StringOutput)
}

// Operating system(s) that the signature protects. Blank for all operating systems.
func (o CustomOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Os }).(pulumi.StringOutput)
}

// Protocol(s) that the signature scans. Blank for all protocols.
func (o CustomOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// Signature ID.
func (o CustomOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *Custom) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity.
func (o CustomOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

// Signature name.
func (o CustomOutput) SigName() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.SigName }).(pulumi.StringOutput)
}

// Custom signature enclosed in single quotes.
func (o CustomOutput) Signature() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Signature }).(pulumi.StringOutput)
}

// Enable/disable this signature. Valid values: `disable`, `enable`.
func (o CustomOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Signature tag.
func (o CustomOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Tag }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o CustomOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Custom) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type CustomArrayOutput struct{ *pulumi.OutputState }

func (CustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Custom)(nil)).Elem()
}

func (o CustomArrayOutput) ToCustomArrayOutput() CustomArrayOutput {
	return o
}

func (o CustomArrayOutput) ToCustomArrayOutputWithContext(ctx context.Context) CustomArrayOutput {
	return o
}

func (o CustomArrayOutput) Index(i pulumi.IntInput) CustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Custom {
		return vs[0].([]*Custom)[vs[1].(int)]
	}).(CustomOutput)
}

type CustomMapOutput struct{ *pulumi.OutputState }

func (CustomMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Custom)(nil)).Elem()
}

func (o CustomMapOutput) ToCustomMapOutput() CustomMapOutput {
	return o
}

func (o CustomMapOutput) ToCustomMapOutputWithContext(ctx context.Context) CustomMapOutput {
	return o
}

func (o CustomMapOutput) MapIndex(k pulumi.StringInput) CustomOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Custom {
		return vs[0].(map[string]*Custom)[vs[1].(string)]
	}).(CustomOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomInput)(nil)).Elem(), &Custom{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomArrayInput)(nil)).Elem(), CustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomMapInput)(nil)).Elem(), CustomMap{})
	pulumi.RegisterOutputType(CustomOutput{})
	pulumi.RegisterOutputType(CustomArrayOutput{})
	pulumi.RegisterOutputType(CustomMapOutput{})
}
