// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Portal.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/vpn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpn.NewPortal(ctx, "trname", &vpn.PortalArgs{
//				AllowUserAccess:                 pulumi.String("web ftp smb sftp telnet ssh vnc rdp ping citrix portforward"),
//				AutoConnect:                     pulumi.String("disable"),
//				CustomizeForticlientDownloadUrl: pulumi.String("disable"),
//				DisplayBookmark:                 pulumi.String("enable"),
//				DisplayConnectionTools:          pulumi.String("enable"),
//				DisplayHistory:                  pulumi.String("enable"),
//				DisplayStatus:                   pulumi.String("enable"),
//				DnsServer1:                      pulumi.String("0.0.0.0"),
//				DnsServer2:                      pulumi.String("0.0.0.0"),
//				ExclusiveRouting:                pulumi.String("disable"),
//				ForticlientDownload:             pulumi.String("enable"),
//				ForticlientDownloadMethod:       pulumi.String("direct"),
//				Heading:                         pulumi.String("SSL-VPN Portal"),
//				HideSsoCredential:               pulumi.String("enable"),
//				HostCheck:                       pulumi.String("none"),
//				IpMode:                          pulumi.String("range"),
//				IpPools: ssl / web.PortalIpPoolArray{
//					&ssl / web.PortalIpPoolArgs{
//						Name: pulumi.String("SSLVPN_TUNNEL_ADDR1"),
//					},
//				},
//				Ipv6DnsServer1:       pulumi.String("::"),
//				Ipv6DnsServer2:       pulumi.String("::"),
//				Ipv6ExclusiveRouting: pulumi.String("disable"),
//				Ipv6Pools: ssl / web.PortalIpv6PoolArray{
//					&ssl / web.PortalIpv6PoolArgs{
//						Name: pulumi.String("SSLVPN_TUNNEL_IPv6_ADDR1"),
//					},
//				},
//				Ipv6ServiceRestriction:    pulumi.String("disable"),
//				Ipv6SplitTunneling:        pulumi.String("enable"),
//				Ipv6TunnelMode:            pulumi.String("enable"),
//				Ipv6WinsServer1:           pulumi.String("::"),
//				Ipv6WinsServer2:           pulumi.String("::"),
//				KeepAlive:                 pulumi.String("disable"),
//				LimitUserLogins:           pulumi.String("disable"),
//				MacAddrAction:             pulumi.String("allow"),
//				MacAddrCheck:              pulumi.String("disable"),
//				OsCheck:                   pulumi.String("disable"),
//				SavePassword:              pulumi.String("disable"),
//				ServiceRestriction:        pulumi.String("disable"),
//				SkipCheckForBrowser:       pulumi.String("enable"),
//				SkipCheckForUnsupportedOs: pulumi.String("enable"),
//				SmbNtlmv1Auth:             pulumi.String("disable"),
//				Smbv1:                     pulumi.String("disable"),
//				SplitTunneling:            pulumi.String("enable"),
//				Theme:                     pulumi.String("blue"),
//				TunnelMode:                pulumi.String("enable"),
//				UserBookmark:              pulumi.String("enable"),
//				UserGroupBookmark:         pulumi.String("enable"),
//				WebMode:                   pulumi.String("disable"),
//				WinsServer1:               pulumi.String("0.0.0.0"),
//				WinsServer2:               pulumi.String("0.0.0.0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// VpnSslWeb Portal can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:vpn/ssl/web/portal:Portal labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:vpn/ssl/web/portal:Portal labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Portal struct {
	pulumi.CustomResourceState

	// Allow user access to SSL-VPN applications.
	AllowUserAccess pulumi.StringOutput `pulumi:"allowUserAccess"`
	// Enable/disable automatic connect by client when system is up. Valid values: `enable`, `disable`.
	AutoConnect pulumi.StringOutput `pulumi:"autoConnect"`
	// Portal bookmark group. The structure of `bookmarkGroup` block is documented below.
	BookmarkGroups PortalBookmarkGroupArrayOutput `pulumi:"bookmarkGroups"`
	// Allow client to add source range for the tunnel traffic. Valid values: `enable`, `disable`.
	ClientSrcRange pulumi.StringOutput `pulumi:"clientSrcRange"`
	// Enable to support RDP/VPC clipboard functionality. Valid values: `enable`, `disable`.
	Clipboard pulumi.StringOutput `pulumi:"clipboard"`
	// Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.
	CustomLang pulumi.StringOutput `pulumi:"customLang"`
	// Enable support of customized download URL for FortiClient. Valid values: `enable`, `disable`.
	CustomizeForticlientDownloadUrl pulumi.StringOutput `pulumi:"customizeForticlientDownloadUrl"`
	// Application type that is set by default. Valid values: `web`, `ftp`, `telnet`, `smb`, `vnc`, `rdp`, `ssh`, `sftp`.
	DefaultProtocol pulumi.StringOutput `pulumi:"defaultProtocol"`
	// Screen height (range from 0 - 65535, default = 768).
	DefaultWindowHeight pulumi.IntOutput `pulumi:"defaultWindowHeight"`
	// Screen width (range from 0 - 65535, default = 1024).
	DefaultWindowWidth pulumi.IntOutput `pulumi:"defaultWindowWidth"`
	// Relay agent IPv6 link address to use in DHCP6 requests.
	Dhcp6RaLinkaddr pulumi.StringOutput `pulumi:"dhcp6RaLinkaddr"`
	// Configure overlapping DHCP IP allocation assignment. Valid values: `use-new`, `use-old`.
	DhcpIpOverlap pulumi.StringOutput `pulumi:"dhcpIpOverlap"`
	// Relay agent gateway IP address to use in the giaddr field of DHCP requests.
	DhcpRaGiaddr pulumi.StringOutput `pulumi:"dhcpRaGiaddr"`
	// Enable to display the web portal bookmark widget. Valid values: `enable`, `disable`.
	DisplayBookmark pulumi.StringOutput `pulumi:"displayBookmark"`
	// Enable to display the web portal connection tools widget. Valid values: `enable`, `disable`.
	DisplayConnectionTools pulumi.StringOutput `pulumi:"displayConnectionTools"`
	// Enable to display the web portal user login history widget. Valid values: `enable`, `disable`.
	DisplayHistory pulumi.StringOutput `pulumi:"displayHistory"`
	// Enable to display the web portal status widget. Valid values: `enable`, `disable`.
	DisplayStatus pulumi.StringOutput `pulumi:"displayStatus"`
	// IPv4 DNS server 1.
	DnsServer1 pulumi.StringOutput `pulumi:"dnsServer1"`
	// IPv4 DNS server 2.
	DnsServer2 pulumi.StringOutput `pulumi:"dnsServer2"`
	// DNS suffix.
	DnsSuffix pulumi.StringPtrOutput `pulumi:"dnsSuffix"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable all traffic go through tunnel only. Valid values: `enable`, `disable`.
	ExclusiveRouting pulumi.StringOutput `pulumi:"exclusiveRouting"`
	// Enable to prioritize the placement of the bookmark section over the quick-connection section in the SSL-VPN application. Valid values: `enable`, `disable`.
	FocusBookmark pulumi.StringOutput `pulumi:"focusBookmark"`
	// Enable/disable download option for FortiClient. Valid values: `enable`, `disable`.
	ForticlientDownload pulumi.StringOutput `pulumi:"forticlientDownload"`
	// FortiClient download method. Valid values: `direct`, `ssl-vpn`.
	ForticlientDownloadMethod pulumi.StringOutput `pulumi:"forticlientDownloadMethod"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Web portal heading message.
	Heading pulumi.StringOutput `pulumi:"heading"`
	// Enable to prevent SSO credential being sent to client. Valid values: `enable`, `disable`.
	HideSsoCredential pulumi.StringOutput `pulumi:"hideSsoCredential"`
	// Type of host checking performed on endpoints. Valid values: `none`, `av`, `fw`, `av-fw`, `custom`.
	HostCheck pulumi.StringOutput `pulumi:"hostCheck"`
	// Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.
	HostCheckInterval pulumi.IntOutput `pulumi:"hostCheckInterval"`
	// One or more policies to require the endpoint to have specific security software. The structure of `hostCheckPolicy` block is documented below.
	HostCheckPolicies PortalHostCheckPolicyArrayOutput `pulumi:"hostCheckPolicies"`
	// Method by which users of this SSL-VPN tunnel obtain IP addresses.
	IpMode pulumi.StringOutput `pulumi:"ipMode"`
	// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipPools` block is documented below.
	IpPools PortalIpPoolArrayOutput `pulumi:"ipPools"`
	// IPv6 DNS server 1.
	Ipv6DnsServer1 pulumi.StringOutput `pulumi:"ipv6DnsServer1"`
	// IPv6 DNS server 2.
	Ipv6DnsServer2 pulumi.StringOutput `pulumi:"ipv6DnsServer2"`
	// Enable/disable all IPv6 traffic go through tunnel only. Valid values: `enable`, `disable`.
	Ipv6ExclusiveRouting pulumi.StringOutput `pulumi:"ipv6ExclusiveRouting"`
	// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipv6Pools` block is documented below.
	Ipv6Pools PortalIpv6PoolArrayOutput `pulumi:"ipv6Pools"`
	// Enable/disable IPv6 tunnel service restriction. Valid values: `enable`, `disable`.
	Ipv6ServiceRestriction pulumi.StringOutput `pulumi:"ipv6ServiceRestriction"`
	// Enable/disable IPv6 split tunneling. Valid values: `enable`, `disable`.
	Ipv6SplitTunneling pulumi.StringOutput `pulumi:"ipv6SplitTunneling"`
	// IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `ipv6SplitTunnelingRoutingAddress` block is documented below.
	Ipv6SplitTunnelingRoutingAddresses PortalIpv6SplitTunnelingRoutingAddressArrayOutput `pulumi:"ipv6SplitTunnelingRoutingAddresses"`
	// Enable to negate IPv6 split tunneling routing address. Valid values: `enable`, `disable`.
	Ipv6SplitTunnelingRoutingNegate pulumi.StringOutput `pulumi:"ipv6SplitTunnelingRoutingNegate"`
	// Enable/disable IPv6 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
	Ipv6TunnelMode pulumi.StringOutput `pulumi:"ipv6TunnelMode"`
	// IPv6 WINS server 1.
	Ipv6WinsServer1 pulumi.StringOutput `pulumi:"ipv6WinsServer1"`
	// IPv6 WINS server 2.
	Ipv6WinsServer2 pulumi.StringOutput `pulumi:"ipv6WinsServer2"`
	// Enable/disable automatic reconnect for FortiClient connections. Valid values: `enable`, `disable`.
	KeepAlive pulumi.StringOutput `pulumi:"keepAlive"`
	// Landing page options. The structure of `landingPage` block is documented below.
	LandingPage PortalLandingPageOutput `pulumi:"landingPage"`
	// Enable/disable SSL-VPN landing page mode. Valid values: `enable`, `disable`.
	LandingPageMode pulumi.StringOutput `pulumi:"landingPageMode"`
	// Enable to limit each user to one SSL-VPN session at a time. Valid values: `enable`, `disable`.
	LimitUserLogins pulumi.StringOutput `pulumi:"limitUserLogins"`
	// Client MAC address action. Valid values: `allow`, `deny`.
	MacAddrAction pulumi.StringOutput `pulumi:"macAddrAction"`
	// Enable/disable MAC address host checking. Valid values: `enable`, `disable`.
	MacAddrCheck pulumi.StringOutput `pulumi:"macAddrCheck"`
	// Client MAC address check rule. The structure of `macAddrCheckRule` block is documented below.
	MacAddrCheckRules PortalMacAddrCheckRuleArrayOutput `pulumi:"macAddrCheckRules"`
	// Download URL for Mac FortiClient.
	MacosForticlientDownloadUrl pulumi.StringPtrOutput `pulumi:"macosForticlientDownloadUrl"`
	// Portal name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable to let the FortiGate decide action based on client OS. Valid values: `enable`, `disable`.
	OsCheck pulumi.StringOutput `pulumi:"osCheck"`
	// SSL VPN OS checks. The structure of `osCheckList` block is documented below.
	OsCheckLists PortalOsCheckListArrayOutput `pulumi:"osCheckLists"`
	// prefer to query IPv6 dns first if enabled. Valid values: `enable`, `disable`.
	PreferIpv6Dns pulumi.StringOutput `pulumi:"preferIpv6Dns"`
	// Client login redirect URL.
	RedirUrl pulumi.StringPtrOutput `pulumi:"redirUrl"`
	// Rewrite contents for URI contains IP and "/ui/". (default = disable) Valid values: `enable`, `disable`.
	RewriteIpUriUi pulumi.StringOutput `pulumi:"rewriteIpUriUi"`
	// Enable/disable FortiClient saving the user's password. Valid values: `enable`, `disable`.
	SavePassword pulumi.StringOutput `pulumi:"savePassword"`
	// Enable/disable tunnel service restriction. Valid values: `enable`, `disable`.
	ServiceRestriction pulumi.StringOutput `pulumi:"serviceRestriction"`
	// Enable to skip host check for browser support. Valid values: `enable`, `disable`.
	SkipCheckForBrowser pulumi.StringOutput `pulumi:"skipCheckForBrowser"`
	// Enable to skip host check if client OS does not support it. Valid values: `enable`, `disable`.
	SkipCheckForUnsupportedOs pulumi.StringOutput `pulumi:"skipCheckForUnsupportedOs"`
	// SMB maximum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
	SmbMaxVersion pulumi.StringOutput `pulumi:"smbMaxVersion"`
	// SMB minimum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
	SmbMinVersion pulumi.StringOutput `pulumi:"smbMinVersion"`
	// Enable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
	SmbNtlmv1Auth pulumi.StringOutput `pulumi:"smbNtlmv1Auth"`
	// Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
	Smbv1 pulumi.StringOutput `pulumi:"smbv1"`
	// Split DNS for SSL VPN. The structure of `splitDns` block is documented below.
	SplitDns PortalSplitDnArrayOutput `pulumi:"splitDns"`
	// Enable/disable IPv4 split tunneling. Valid values: `enable`, `disable`.
	SplitTunneling pulumi.StringOutput `pulumi:"splitTunneling"`
	// IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `splitTunnelingRoutingAddress` block is documented below.
	SplitTunnelingRoutingAddresses PortalSplitTunnelingRoutingAddressArrayOutput `pulumi:"splitTunnelingRoutingAddresses"`
	// Enable to negate split tunneling routing address. Valid values: `enable`, `disable`.
	SplitTunnelingRoutingNegate pulumi.StringOutput `pulumi:"splitTunnelingRoutingNegate"`
	// Web portal color scheme.
	Theme pulumi.StringOutput `pulumi:"theme"`
	// Transform backward slashes to forward slashes in URLs. Valid values: `enable`, `disable`.
	TransformBackwardSlashes pulumi.StringOutput `pulumi:"transformBackwardSlashes"`
	// Enable/disable IPv4 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
	TunnelMode pulumi.StringOutput `pulumi:"tunnelMode"`
	// Use SD-WAN rules to get output interface. Valid values: `enable`, `disable`.
	UseSdwan pulumi.StringOutput `pulumi:"useSdwan"`
	// Enable to allow web portal users to create their own bookmarks. Valid values: `enable`, `disable`.
	UserBookmark pulumi.StringOutput `pulumi:"userBookmark"`
	// Enable to allow web portal users to create bookmarks for all users in the same user group. Valid values: `enable`, `disable`.
	UserGroupBookmark pulumi.StringOutput `pulumi:"userGroupBookmark"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable SSL VPN web mode. Valid values: `enable`, `disable`.
	WebMode pulumi.StringOutput `pulumi:"webMode"`
	// Download URL for Windows FortiClient.
	WindowsForticlientDownloadUrl pulumi.StringPtrOutput `pulumi:"windowsForticlientDownloadUrl"`
	// IPv4 WINS server 1.
	WinsServer1 pulumi.StringOutput `pulumi:"winsServer1"`
	// IPv4 WINS server 1.
	WinsServer2 pulumi.StringOutput `pulumi:"winsServer2"`
}

// NewPortal registers a new resource with the given unique name, arguments, and options.
func NewPortal(ctx *pulumi.Context,
	name string, args *PortalArgs, opts ...pulumi.ResourceOption) (*Portal, error) {
	if args == nil {
		args = &PortalArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Portal
	err := ctx.RegisterResource("fortios:vpn/ssl/web/portal:Portal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPortal gets an existing Portal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPortal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PortalState, opts ...pulumi.ResourceOption) (*Portal, error) {
	var resource Portal
	err := ctx.ReadResource("fortios:vpn/ssl/web/portal:Portal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Portal resources.
type portalState struct {
	// Allow user access to SSL-VPN applications.
	AllowUserAccess *string `pulumi:"allowUserAccess"`
	// Enable/disable automatic connect by client when system is up. Valid values: `enable`, `disable`.
	AutoConnect *string `pulumi:"autoConnect"`
	// Portal bookmark group. The structure of `bookmarkGroup` block is documented below.
	BookmarkGroups []PortalBookmarkGroup `pulumi:"bookmarkGroups"`
	// Allow client to add source range for the tunnel traffic. Valid values: `enable`, `disable`.
	ClientSrcRange *string `pulumi:"clientSrcRange"`
	// Enable to support RDP/VPC clipboard functionality. Valid values: `enable`, `disable`.
	Clipboard *string `pulumi:"clipboard"`
	// Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.
	CustomLang *string `pulumi:"customLang"`
	// Enable support of customized download URL for FortiClient. Valid values: `enable`, `disable`.
	CustomizeForticlientDownloadUrl *string `pulumi:"customizeForticlientDownloadUrl"`
	// Application type that is set by default. Valid values: `web`, `ftp`, `telnet`, `smb`, `vnc`, `rdp`, `ssh`, `sftp`.
	DefaultProtocol *string `pulumi:"defaultProtocol"`
	// Screen height (range from 0 - 65535, default = 768).
	DefaultWindowHeight *int `pulumi:"defaultWindowHeight"`
	// Screen width (range from 0 - 65535, default = 1024).
	DefaultWindowWidth *int `pulumi:"defaultWindowWidth"`
	// Relay agent IPv6 link address to use in DHCP6 requests.
	Dhcp6RaLinkaddr *string `pulumi:"dhcp6RaLinkaddr"`
	// Configure overlapping DHCP IP allocation assignment. Valid values: `use-new`, `use-old`.
	DhcpIpOverlap *string `pulumi:"dhcpIpOverlap"`
	// Relay agent gateway IP address to use in the giaddr field of DHCP requests.
	DhcpRaGiaddr *string `pulumi:"dhcpRaGiaddr"`
	// Enable to display the web portal bookmark widget. Valid values: `enable`, `disable`.
	DisplayBookmark *string `pulumi:"displayBookmark"`
	// Enable to display the web portal connection tools widget. Valid values: `enable`, `disable`.
	DisplayConnectionTools *string `pulumi:"displayConnectionTools"`
	// Enable to display the web portal user login history widget. Valid values: `enable`, `disable`.
	DisplayHistory *string `pulumi:"displayHistory"`
	// Enable to display the web portal status widget. Valid values: `enable`, `disable`.
	DisplayStatus *string `pulumi:"displayStatus"`
	// IPv4 DNS server 1.
	DnsServer1 *string `pulumi:"dnsServer1"`
	// IPv4 DNS server 2.
	DnsServer2 *string `pulumi:"dnsServer2"`
	// DNS suffix.
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable all traffic go through tunnel only. Valid values: `enable`, `disable`.
	ExclusiveRouting *string `pulumi:"exclusiveRouting"`
	// Enable to prioritize the placement of the bookmark section over the quick-connection section in the SSL-VPN application. Valid values: `enable`, `disable`.
	FocusBookmark *string `pulumi:"focusBookmark"`
	// Enable/disable download option for FortiClient. Valid values: `enable`, `disable`.
	ForticlientDownload *string `pulumi:"forticlientDownload"`
	// FortiClient download method. Valid values: `direct`, `ssl-vpn`.
	ForticlientDownloadMethod *string `pulumi:"forticlientDownloadMethod"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Web portal heading message.
	Heading *string `pulumi:"heading"`
	// Enable to prevent SSO credential being sent to client. Valid values: `enable`, `disable`.
	HideSsoCredential *string `pulumi:"hideSsoCredential"`
	// Type of host checking performed on endpoints. Valid values: `none`, `av`, `fw`, `av-fw`, `custom`.
	HostCheck *string `pulumi:"hostCheck"`
	// Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.
	HostCheckInterval *int `pulumi:"hostCheckInterval"`
	// One or more policies to require the endpoint to have specific security software. The structure of `hostCheckPolicy` block is documented below.
	HostCheckPolicies []PortalHostCheckPolicy `pulumi:"hostCheckPolicies"`
	// Method by which users of this SSL-VPN tunnel obtain IP addresses.
	IpMode *string `pulumi:"ipMode"`
	// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipPools` block is documented below.
	IpPools []PortalIpPool `pulumi:"ipPools"`
	// IPv6 DNS server 1.
	Ipv6DnsServer1 *string `pulumi:"ipv6DnsServer1"`
	// IPv6 DNS server 2.
	Ipv6DnsServer2 *string `pulumi:"ipv6DnsServer2"`
	// Enable/disable all IPv6 traffic go through tunnel only. Valid values: `enable`, `disable`.
	Ipv6ExclusiveRouting *string `pulumi:"ipv6ExclusiveRouting"`
	// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipv6Pools` block is documented below.
	Ipv6Pools []PortalIpv6Pool `pulumi:"ipv6Pools"`
	// Enable/disable IPv6 tunnel service restriction. Valid values: `enable`, `disable`.
	Ipv6ServiceRestriction *string `pulumi:"ipv6ServiceRestriction"`
	// Enable/disable IPv6 split tunneling. Valid values: `enable`, `disable`.
	Ipv6SplitTunneling *string `pulumi:"ipv6SplitTunneling"`
	// IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `ipv6SplitTunnelingRoutingAddress` block is documented below.
	Ipv6SplitTunnelingRoutingAddresses []PortalIpv6SplitTunnelingRoutingAddress `pulumi:"ipv6SplitTunnelingRoutingAddresses"`
	// Enable to negate IPv6 split tunneling routing address. Valid values: `enable`, `disable`.
	Ipv6SplitTunnelingRoutingNegate *string `pulumi:"ipv6SplitTunnelingRoutingNegate"`
	// Enable/disable IPv6 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
	Ipv6TunnelMode *string `pulumi:"ipv6TunnelMode"`
	// IPv6 WINS server 1.
	Ipv6WinsServer1 *string `pulumi:"ipv6WinsServer1"`
	// IPv6 WINS server 2.
	Ipv6WinsServer2 *string `pulumi:"ipv6WinsServer2"`
	// Enable/disable automatic reconnect for FortiClient connections. Valid values: `enable`, `disable`.
	KeepAlive *string `pulumi:"keepAlive"`
	// Landing page options. The structure of `landingPage` block is documented below.
	LandingPage *PortalLandingPage `pulumi:"landingPage"`
	// Enable/disable SSL-VPN landing page mode. Valid values: `enable`, `disable`.
	LandingPageMode *string `pulumi:"landingPageMode"`
	// Enable to limit each user to one SSL-VPN session at a time. Valid values: `enable`, `disable`.
	LimitUserLogins *string `pulumi:"limitUserLogins"`
	// Client MAC address action. Valid values: `allow`, `deny`.
	MacAddrAction *string `pulumi:"macAddrAction"`
	// Enable/disable MAC address host checking. Valid values: `enable`, `disable`.
	MacAddrCheck *string `pulumi:"macAddrCheck"`
	// Client MAC address check rule. The structure of `macAddrCheckRule` block is documented below.
	MacAddrCheckRules []PortalMacAddrCheckRule `pulumi:"macAddrCheckRules"`
	// Download URL for Mac FortiClient.
	MacosForticlientDownloadUrl *string `pulumi:"macosForticlientDownloadUrl"`
	// Portal name.
	Name *string `pulumi:"name"`
	// Enable to let the FortiGate decide action based on client OS. Valid values: `enable`, `disable`.
	OsCheck *string `pulumi:"osCheck"`
	// SSL VPN OS checks. The structure of `osCheckList` block is documented below.
	OsCheckLists []PortalOsCheckList `pulumi:"osCheckLists"`
	// prefer to query IPv6 dns first if enabled. Valid values: `enable`, `disable`.
	PreferIpv6Dns *string `pulumi:"preferIpv6Dns"`
	// Client login redirect URL.
	RedirUrl *string `pulumi:"redirUrl"`
	// Rewrite contents for URI contains IP and "/ui/". (default = disable) Valid values: `enable`, `disable`.
	RewriteIpUriUi *string `pulumi:"rewriteIpUriUi"`
	// Enable/disable FortiClient saving the user's password. Valid values: `enable`, `disable`.
	SavePassword *string `pulumi:"savePassword"`
	// Enable/disable tunnel service restriction. Valid values: `enable`, `disable`.
	ServiceRestriction *string `pulumi:"serviceRestriction"`
	// Enable to skip host check for browser support. Valid values: `enable`, `disable`.
	SkipCheckForBrowser *string `pulumi:"skipCheckForBrowser"`
	// Enable to skip host check if client OS does not support it. Valid values: `enable`, `disable`.
	SkipCheckForUnsupportedOs *string `pulumi:"skipCheckForUnsupportedOs"`
	// SMB maximum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
	SmbMaxVersion *string `pulumi:"smbMaxVersion"`
	// SMB minimum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
	SmbMinVersion *string `pulumi:"smbMinVersion"`
	// Enable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
	SmbNtlmv1Auth *string `pulumi:"smbNtlmv1Auth"`
	// Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
	Smbv1 *string `pulumi:"smbv1"`
	// Split DNS for SSL VPN. The structure of `splitDns` block is documented below.
	SplitDns []PortalSplitDn `pulumi:"splitDns"`
	// Enable/disable IPv4 split tunneling. Valid values: `enable`, `disable`.
	SplitTunneling *string `pulumi:"splitTunneling"`
	// IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `splitTunnelingRoutingAddress` block is documented below.
	SplitTunnelingRoutingAddresses []PortalSplitTunnelingRoutingAddress `pulumi:"splitTunnelingRoutingAddresses"`
	// Enable to negate split tunneling routing address. Valid values: `enable`, `disable`.
	SplitTunnelingRoutingNegate *string `pulumi:"splitTunnelingRoutingNegate"`
	// Web portal color scheme.
	Theme *string `pulumi:"theme"`
	// Transform backward slashes to forward slashes in URLs. Valid values: `enable`, `disable`.
	TransformBackwardSlashes *string `pulumi:"transformBackwardSlashes"`
	// Enable/disable IPv4 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
	TunnelMode *string `pulumi:"tunnelMode"`
	// Use SD-WAN rules to get output interface. Valid values: `enable`, `disable`.
	UseSdwan *string `pulumi:"useSdwan"`
	// Enable to allow web portal users to create their own bookmarks. Valid values: `enable`, `disable`.
	UserBookmark *string `pulumi:"userBookmark"`
	// Enable to allow web portal users to create bookmarks for all users in the same user group. Valid values: `enable`, `disable`.
	UserGroupBookmark *string `pulumi:"userGroupBookmark"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable SSL VPN web mode. Valid values: `enable`, `disable`.
	WebMode *string `pulumi:"webMode"`
	// Download URL for Windows FortiClient.
	WindowsForticlientDownloadUrl *string `pulumi:"windowsForticlientDownloadUrl"`
	// IPv4 WINS server 1.
	WinsServer1 *string `pulumi:"winsServer1"`
	// IPv4 WINS server 1.
	WinsServer2 *string `pulumi:"winsServer2"`
}

type PortalState struct {
	// Allow user access to SSL-VPN applications.
	AllowUserAccess pulumi.StringPtrInput
	// Enable/disable automatic connect by client when system is up. Valid values: `enable`, `disable`.
	AutoConnect pulumi.StringPtrInput
	// Portal bookmark group. The structure of `bookmarkGroup` block is documented below.
	BookmarkGroups PortalBookmarkGroupArrayInput
	// Allow client to add source range for the tunnel traffic. Valid values: `enable`, `disable`.
	ClientSrcRange pulumi.StringPtrInput
	// Enable to support RDP/VPC clipboard functionality. Valid values: `enable`, `disable`.
	Clipboard pulumi.StringPtrInput
	// Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.
	CustomLang pulumi.StringPtrInput
	// Enable support of customized download URL for FortiClient. Valid values: `enable`, `disable`.
	CustomizeForticlientDownloadUrl pulumi.StringPtrInput
	// Application type that is set by default. Valid values: `web`, `ftp`, `telnet`, `smb`, `vnc`, `rdp`, `ssh`, `sftp`.
	DefaultProtocol pulumi.StringPtrInput
	// Screen height (range from 0 - 65535, default = 768).
	DefaultWindowHeight pulumi.IntPtrInput
	// Screen width (range from 0 - 65535, default = 1024).
	DefaultWindowWidth pulumi.IntPtrInput
	// Relay agent IPv6 link address to use in DHCP6 requests.
	Dhcp6RaLinkaddr pulumi.StringPtrInput
	// Configure overlapping DHCP IP allocation assignment. Valid values: `use-new`, `use-old`.
	DhcpIpOverlap pulumi.StringPtrInput
	// Relay agent gateway IP address to use in the giaddr field of DHCP requests.
	DhcpRaGiaddr pulumi.StringPtrInput
	// Enable to display the web portal bookmark widget. Valid values: `enable`, `disable`.
	DisplayBookmark pulumi.StringPtrInput
	// Enable to display the web portal connection tools widget. Valid values: `enable`, `disable`.
	DisplayConnectionTools pulumi.StringPtrInput
	// Enable to display the web portal user login history widget. Valid values: `enable`, `disable`.
	DisplayHistory pulumi.StringPtrInput
	// Enable to display the web portal status widget. Valid values: `enable`, `disable`.
	DisplayStatus pulumi.StringPtrInput
	// IPv4 DNS server 1.
	DnsServer1 pulumi.StringPtrInput
	// IPv4 DNS server 2.
	DnsServer2 pulumi.StringPtrInput
	// DNS suffix.
	DnsSuffix pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable all traffic go through tunnel only. Valid values: `enable`, `disable`.
	ExclusiveRouting pulumi.StringPtrInput
	// Enable to prioritize the placement of the bookmark section over the quick-connection section in the SSL-VPN application. Valid values: `enable`, `disable`.
	FocusBookmark pulumi.StringPtrInput
	// Enable/disable download option for FortiClient. Valid values: `enable`, `disable`.
	ForticlientDownload pulumi.StringPtrInput
	// FortiClient download method. Valid values: `direct`, `ssl-vpn`.
	ForticlientDownloadMethod pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Web portal heading message.
	Heading pulumi.StringPtrInput
	// Enable to prevent SSO credential being sent to client. Valid values: `enable`, `disable`.
	HideSsoCredential pulumi.StringPtrInput
	// Type of host checking performed on endpoints. Valid values: `none`, `av`, `fw`, `av-fw`, `custom`.
	HostCheck pulumi.StringPtrInput
	// Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.
	HostCheckInterval pulumi.IntPtrInput
	// One or more policies to require the endpoint to have specific security software. The structure of `hostCheckPolicy` block is documented below.
	HostCheckPolicies PortalHostCheckPolicyArrayInput
	// Method by which users of this SSL-VPN tunnel obtain IP addresses.
	IpMode pulumi.StringPtrInput
	// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipPools` block is documented below.
	IpPools PortalIpPoolArrayInput
	// IPv6 DNS server 1.
	Ipv6DnsServer1 pulumi.StringPtrInput
	// IPv6 DNS server 2.
	Ipv6DnsServer2 pulumi.StringPtrInput
	// Enable/disable all IPv6 traffic go through tunnel only. Valid values: `enable`, `disable`.
	Ipv6ExclusiveRouting pulumi.StringPtrInput
	// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipv6Pools` block is documented below.
	Ipv6Pools PortalIpv6PoolArrayInput
	// Enable/disable IPv6 tunnel service restriction. Valid values: `enable`, `disable`.
	Ipv6ServiceRestriction pulumi.StringPtrInput
	// Enable/disable IPv6 split tunneling. Valid values: `enable`, `disable`.
	Ipv6SplitTunneling pulumi.StringPtrInput
	// IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `ipv6SplitTunnelingRoutingAddress` block is documented below.
	Ipv6SplitTunnelingRoutingAddresses PortalIpv6SplitTunnelingRoutingAddressArrayInput
	// Enable to negate IPv6 split tunneling routing address. Valid values: `enable`, `disable`.
	Ipv6SplitTunnelingRoutingNegate pulumi.StringPtrInput
	// Enable/disable IPv6 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
	Ipv6TunnelMode pulumi.StringPtrInput
	// IPv6 WINS server 1.
	Ipv6WinsServer1 pulumi.StringPtrInput
	// IPv6 WINS server 2.
	Ipv6WinsServer2 pulumi.StringPtrInput
	// Enable/disable automatic reconnect for FortiClient connections. Valid values: `enable`, `disable`.
	KeepAlive pulumi.StringPtrInput
	// Landing page options. The structure of `landingPage` block is documented below.
	LandingPage PortalLandingPagePtrInput
	// Enable/disable SSL-VPN landing page mode. Valid values: `enable`, `disable`.
	LandingPageMode pulumi.StringPtrInput
	// Enable to limit each user to one SSL-VPN session at a time. Valid values: `enable`, `disable`.
	LimitUserLogins pulumi.StringPtrInput
	// Client MAC address action. Valid values: `allow`, `deny`.
	MacAddrAction pulumi.StringPtrInput
	// Enable/disable MAC address host checking. Valid values: `enable`, `disable`.
	MacAddrCheck pulumi.StringPtrInput
	// Client MAC address check rule. The structure of `macAddrCheckRule` block is documented below.
	MacAddrCheckRules PortalMacAddrCheckRuleArrayInput
	// Download URL for Mac FortiClient.
	MacosForticlientDownloadUrl pulumi.StringPtrInput
	// Portal name.
	Name pulumi.StringPtrInput
	// Enable to let the FortiGate decide action based on client OS. Valid values: `enable`, `disable`.
	OsCheck pulumi.StringPtrInput
	// SSL VPN OS checks. The structure of `osCheckList` block is documented below.
	OsCheckLists PortalOsCheckListArrayInput
	// prefer to query IPv6 dns first if enabled. Valid values: `enable`, `disable`.
	PreferIpv6Dns pulumi.StringPtrInput
	// Client login redirect URL.
	RedirUrl pulumi.StringPtrInput
	// Rewrite contents for URI contains IP and "/ui/". (default = disable) Valid values: `enable`, `disable`.
	RewriteIpUriUi pulumi.StringPtrInput
	// Enable/disable FortiClient saving the user's password. Valid values: `enable`, `disable`.
	SavePassword pulumi.StringPtrInput
	// Enable/disable tunnel service restriction. Valid values: `enable`, `disable`.
	ServiceRestriction pulumi.StringPtrInput
	// Enable to skip host check for browser support. Valid values: `enable`, `disable`.
	SkipCheckForBrowser pulumi.StringPtrInput
	// Enable to skip host check if client OS does not support it. Valid values: `enable`, `disable`.
	SkipCheckForUnsupportedOs pulumi.StringPtrInput
	// SMB maximum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
	SmbMaxVersion pulumi.StringPtrInput
	// SMB minimum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
	SmbMinVersion pulumi.StringPtrInput
	// Enable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
	SmbNtlmv1Auth pulumi.StringPtrInput
	// Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
	Smbv1 pulumi.StringPtrInput
	// Split DNS for SSL VPN. The structure of `splitDns` block is documented below.
	SplitDns PortalSplitDnArrayInput
	// Enable/disable IPv4 split tunneling. Valid values: `enable`, `disable`.
	SplitTunneling pulumi.StringPtrInput
	// IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `splitTunnelingRoutingAddress` block is documented below.
	SplitTunnelingRoutingAddresses PortalSplitTunnelingRoutingAddressArrayInput
	// Enable to negate split tunneling routing address. Valid values: `enable`, `disable`.
	SplitTunnelingRoutingNegate pulumi.StringPtrInput
	// Web portal color scheme.
	Theme pulumi.StringPtrInput
	// Transform backward slashes to forward slashes in URLs. Valid values: `enable`, `disable`.
	TransformBackwardSlashes pulumi.StringPtrInput
	// Enable/disable IPv4 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
	TunnelMode pulumi.StringPtrInput
	// Use SD-WAN rules to get output interface. Valid values: `enable`, `disable`.
	UseSdwan pulumi.StringPtrInput
	// Enable to allow web portal users to create their own bookmarks. Valid values: `enable`, `disable`.
	UserBookmark pulumi.StringPtrInput
	// Enable to allow web portal users to create bookmarks for all users in the same user group. Valid values: `enable`, `disable`.
	UserGroupBookmark pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable SSL VPN web mode. Valid values: `enable`, `disable`.
	WebMode pulumi.StringPtrInput
	// Download URL for Windows FortiClient.
	WindowsForticlientDownloadUrl pulumi.StringPtrInput
	// IPv4 WINS server 1.
	WinsServer1 pulumi.StringPtrInput
	// IPv4 WINS server 1.
	WinsServer2 pulumi.StringPtrInput
}

func (PortalState) ElementType() reflect.Type {
	return reflect.TypeOf((*portalState)(nil)).Elem()
}

type portalArgs struct {
	// Allow user access to SSL-VPN applications.
	AllowUserAccess *string `pulumi:"allowUserAccess"`
	// Enable/disable automatic connect by client when system is up. Valid values: `enable`, `disable`.
	AutoConnect *string `pulumi:"autoConnect"`
	// Portal bookmark group. The structure of `bookmarkGroup` block is documented below.
	BookmarkGroups []PortalBookmarkGroup `pulumi:"bookmarkGroups"`
	// Allow client to add source range for the tunnel traffic. Valid values: `enable`, `disable`.
	ClientSrcRange *string `pulumi:"clientSrcRange"`
	// Enable to support RDP/VPC clipboard functionality. Valid values: `enable`, `disable`.
	Clipboard *string `pulumi:"clipboard"`
	// Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.
	CustomLang *string `pulumi:"customLang"`
	// Enable support of customized download URL for FortiClient. Valid values: `enable`, `disable`.
	CustomizeForticlientDownloadUrl *string `pulumi:"customizeForticlientDownloadUrl"`
	// Application type that is set by default. Valid values: `web`, `ftp`, `telnet`, `smb`, `vnc`, `rdp`, `ssh`, `sftp`.
	DefaultProtocol *string `pulumi:"defaultProtocol"`
	// Screen height (range from 0 - 65535, default = 768).
	DefaultWindowHeight *int `pulumi:"defaultWindowHeight"`
	// Screen width (range from 0 - 65535, default = 1024).
	DefaultWindowWidth *int `pulumi:"defaultWindowWidth"`
	// Relay agent IPv6 link address to use in DHCP6 requests.
	Dhcp6RaLinkaddr *string `pulumi:"dhcp6RaLinkaddr"`
	// Configure overlapping DHCP IP allocation assignment. Valid values: `use-new`, `use-old`.
	DhcpIpOverlap *string `pulumi:"dhcpIpOverlap"`
	// Relay agent gateway IP address to use in the giaddr field of DHCP requests.
	DhcpRaGiaddr *string `pulumi:"dhcpRaGiaddr"`
	// Enable to display the web portal bookmark widget. Valid values: `enable`, `disable`.
	DisplayBookmark *string `pulumi:"displayBookmark"`
	// Enable to display the web portal connection tools widget. Valid values: `enable`, `disable`.
	DisplayConnectionTools *string `pulumi:"displayConnectionTools"`
	// Enable to display the web portal user login history widget. Valid values: `enable`, `disable`.
	DisplayHistory *string `pulumi:"displayHistory"`
	// Enable to display the web portal status widget. Valid values: `enable`, `disable`.
	DisplayStatus *string `pulumi:"displayStatus"`
	// IPv4 DNS server 1.
	DnsServer1 *string `pulumi:"dnsServer1"`
	// IPv4 DNS server 2.
	DnsServer2 *string `pulumi:"dnsServer2"`
	// DNS suffix.
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable all traffic go through tunnel only. Valid values: `enable`, `disable`.
	ExclusiveRouting *string `pulumi:"exclusiveRouting"`
	// Enable to prioritize the placement of the bookmark section over the quick-connection section in the SSL-VPN application. Valid values: `enable`, `disable`.
	FocusBookmark *string `pulumi:"focusBookmark"`
	// Enable/disable download option for FortiClient. Valid values: `enable`, `disable`.
	ForticlientDownload *string `pulumi:"forticlientDownload"`
	// FortiClient download method. Valid values: `direct`, `ssl-vpn`.
	ForticlientDownloadMethod *string `pulumi:"forticlientDownloadMethod"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Web portal heading message.
	Heading *string `pulumi:"heading"`
	// Enable to prevent SSO credential being sent to client. Valid values: `enable`, `disable`.
	HideSsoCredential *string `pulumi:"hideSsoCredential"`
	// Type of host checking performed on endpoints. Valid values: `none`, `av`, `fw`, `av-fw`, `custom`.
	HostCheck *string `pulumi:"hostCheck"`
	// Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.
	HostCheckInterval *int `pulumi:"hostCheckInterval"`
	// One or more policies to require the endpoint to have specific security software. The structure of `hostCheckPolicy` block is documented below.
	HostCheckPolicies []PortalHostCheckPolicy `pulumi:"hostCheckPolicies"`
	// Method by which users of this SSL-VPN tunnel obtain IP addresses.
	IpMode *string `pulumi:"ipMode"`
	// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipPools` block is documented below.
	IpPools []PortalIpPool `pulumi:"ipPools"`
	// IPv6 DNS server 1.
	Ipv6DnsServer1 *string `pulumi:"ipv6DnsServer1"`
	// IPv6 DNS server 2.
	Ipv6DnsServer2 *string `pulumi:"ipv6DnsServer2"`
	// Enable/disable all IPv6 traffic go through tunnel only. Valid values: `enable`, `disable`.
	Ipv6ExclusiveRouting *string `pulumi:"ipv6ExclusiveRouting"`
	// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipv6Pools` block is documented below.
	Ipv6Pools []PortalIpv6Pool `pulumi:"ipv6Pools"`
	// Enable/disable IPv6 tunnel service restriction. Valid values: `enable`, `disable`.
	Ipv6ServiceRestriction *string `pulumi:"ipv6ServiceRestriction"`
	// Enable/disable IPv6 split tunneling. Valid values: `enable`, `disable`.
	Ipv6SplitTunneling *string `pulumi:"ipv6SplitTunneling"`
	// IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `ipv6SplitTunnelingRoutingAddress` block is documented below.
	Ipv6SplitTunnelingRoutingAddresses []PortalIpv6SplitTunnelingRoutingAddress `pulumi:"ipv6SplitTunnelingRoutingAddresses"`
	// Enable to negate IPv6 split tunneling routing address. Valid values: `enable`, `disable`.
	Ipv6SplitTunnelingRoutingNegate *string `pulumi:"ipv6SplitTunnelingRoutingNegate"`
	// Enable/disable IPv6 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
	Ipv6TunnelMode *string `pulumi:"ipv6TunnelMode"`
	// IPv6 WINS server 1.
	Ipv6WinsServer1 *string `pulumi:"ipv6WinsServer1"`
	// IPv6 WINS server 2.
	Ipv6WinsServer2 *string `pulumi:"ipv6WinsServer2"`
	// Enable/disable automatic reconnect for FortiClient connections. Valid values: `enable`, `disable`.
	KeepAlive *string `pulumi:"keepAlive"`
	// Landing page options. The structure of `landingPage` block is documented below.
	LandingPage *PortalLandingPage `pulumi:"landingPage"`
	// Enable/disable SSL-VPN landing page mode. Valid values: `enable`, `disable`.
	LandingPageMode *string `pulumi:"landingPageMode"`
	// Enable to limit each user to one SSL-VPN session at a time. Valid values: `enable`, `disable`.
	LimitUserLogins *string `pulumi:"limitUserLogins"`
	// Client MAC address action. Valid values: `allow`, `deny`.
	MacAddrAction *string `pulumi:"macAddrAction"`
	// Enable/disable MAC address host checking. Valid values: `enable`, `disable`.
	MacAddrCheck *string `pulumi:"macAddrCheck"`
	// Client MAC address check rule. The structure of `macAddrCheckRule` block is documented below.
	MacAddrCheckRules []PortalMacAddrCheckRule `pulumi:"macAddrCheckRules"`
	// Download URL for Mac FortiClient.
	MacosForticlientDownloadUrl *string `pulumi:"macosForticlientDownloadUrl"`
	// Portal name.
	Name *string `pulumi:"name"`
	// Enable to let the FortiGate decide action based on client OS. Valid values: `enable`, `disable`.
	OsCheck *string `pulumi:"osCheck"`
	// SSL VPN OS checks. The structure of `osCheckList` block is documented below.
	OsCheckLists []PortalOsCheckList `pulumi:"osCheckLists"`
	// prefer to query IPv6 dns first if enabled. Valid values: `enable`, `disable`.
	PreferIpv6Dns *string `pulumi:"preferIpv6Dns"`
	// Client login redirect URL.
	RedirUrl *string `pulumi:"redirUrl"`
	// Rewrite contents for URI contains IP and "/ui/". (default = disable) Valid values: `enable`, `disable`.
	RewriteIpUriUi *string `pulumi:"rewriteIpUriUi"`
	// Enable/disable FortiClient saving the user's password. Valid values: `enable`, `disable`.
	SavePassword *string `pulumi:"savePassword"`
	// Enable/disable tunnel service restriction. Valid values: `enable`, `disable`.
	ServiceRestriction *string `pulumi:"serviceRestriction"`
	// Enable to skip host check for browser support. Valid values: `enable`, `disable`.
	SkipCheckForBrowser *string `pulumi:"skipCheckForBrowser"`
	// Enable to skip host check if client OS does not support it. Valid values: `enable`, `disable`.
	SkipCheckForUnsupportedOs *string `pulumi:"skipCheckForUnsupportedOs"`
	// SMB maximum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
	SmbMaxVersion *string `pulumi:"smbMaxVersion"`
	// SMB minimum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
	SmbMinVersion *string `pulumi:"smbMinVersion"`
	// Enable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
	SmbNtlmv1Auth *string `pulumi:"smbNtlmv1Auth"`
	// Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
	Smbv1 *string `pulumi:"smbv1"`
	// Split DNS for SSL VPN. The structure of `splitDns` block is documented below.
	SplitDns []PortalSplitDn `pulumi:"splitDns"`
	// Enable/disable IPv4 split tunneling. Valid values: `enable`, `disable`.
	SplitTunneling *string `pulumi:"splitTunneling"`
	// IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `splitTunnelingRoutingAddress` block is documented below.
	SplitTunnelingRoutingAddresses []PortalSplitTunnelingRoutingAddress `pulumi:"splitTunnelingRoutingAddresses"`
	// Enable to negate split tunneling routing address. Valid values: `enable`, `disable`.
	SplitTunnelingRoutingNegate *string `pulumi:"splitTunnelingRoutingNegate"`
	// Web portal color scheme.
	Theme *string `pulumi:"theme"`
	// Transform backward slashes to forward slashes in URLs. Valid values: `enable`, `disable`.
	TransformBackwardSlashes *string `pulumi:"transformBackwardSlashes"`
	// Enable/disable IPv4 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
	TunnelMode *string `pulumi:"tunnelMode"`
	// Use SD-WAN rules to get output interface. Valid values: `enable`, `disable`.
	UseSdwan *string `pulumi:"useSdwan"`
	// Enable to allow web portal users to create their own bookmarks. Valid values: `enable`, `disable`.
	UserBookmark *string `pulumi:"userBookmark"`
	// Enable to allow web portal users to create bookmarks for all users in the same user group. Valid values: `enable`, `disable`.
	UserGroupBookmark *string `pulumi:"userGroupBookmark"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable SSL VPN web mode. Valid values: `enable`, `disable`.
	WebMode *string `pulumi:"webMode"`
	// Download URL for Windows FortiClient.
	WindowsForticlientDownloadUrl *string `pulumi:"windowsForticlientDownloadUrl"`
	// IPv4 WINS server 1.
	WinsServer1 *string `pulumi:"winsServer1"`
	// IPv4 WINS server 1.
	WinsServer2 *string `pulumi:"winsServer2"`
}

// The set of arguments for constructing a Portal resource.
type PortalArgs struct {
	// Allow user access to SSL-VPN applications.
	AllowUserAccess pulumi.StringPtrInput
	// Enable/disable automatic connect by client when system is up. Valid values: `enable`, `disable`.
	AutoConnect pulumi.StringPtrInput
	// Portal bookmark group. The structure of `bookmarkGroup` block is documented below.
	BookmarkGroups PortalBookmarkGroupArrayInput
	// Allow client to add source range for the tunnel traffic. Valid values: `enable`, `disable`.
	ClientSrcRange pulumi.StringPtrInput
	// Enable to support RDP/VPC clipboard functionality. Valid values: `enable`, `disable`.
	Clipboard pulumi.StringPtrInput
	// Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.
	CustomLang pulumi.StringPtrInput
	// Enable support of customized download URL for FortiClient. Valid values: `enable`, `disable`.
	CustomizeForticlientDownloadUrl pulumi.StringPtrInput
	// Application type that is set by default. Valid values: `web`, `ftp`, `telnet`, `smb`, `vnc`, `rdp`, `ssh`, `sftp`.
	DefaultProtocol pulumi.StringPtrInput
	// Screen height (range from 0 - 65535, default = 768).
	DefaultWindowHeight pulumi.IntPtrInput
	// Screen width (range from 0 - 65535, default = 1024).
	DefaultWindowWidth pulumi.IntPtrInput
	// Relay agent IPv6 link address to use in DHCP6 requests.
	Dhcp6RaLinkaddr pulumi.StringPtrInput
	// Configure overlapping DHCP IP allocation assignment. Valid values: `use-new`, `use-old`.
	DhcpIpOverlap pulumi.StringPtrInput
	// Relay agent gateway IP address to use in the giaddr field of DHCP requests.
	DhcpRaGiaddr pulumi.StringPtrInput
	// Enable to display the web portal bookmark widget. Valid values: `enable`, `disable`.
	DisplayBookmark pulumi.StringPtrInput
	// Enable to display the web portal connection tools widget. Valid values: `enable`, `disable`.
	DisplayConnectionTools pulumi.StringPtrInput
	// Enable to display the web portal user login history widget. Valid values: `enable`, `disable`.
	DisplayHistory pulumi.StringPtrInput
	// Enable to display the web portal status widget. Valid values: `enable`, `disable`.
	DisplayStatus pulumi.StringPtrInput
	// IPv4 DNS server 1.
	DnsServer1 pulumi.StringPtrInput
	// IPv4 DNS server 2.
	DnsServer2 pulumi.StringPtrInput
	// DNS suffix.
	DnsSuffix pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable all traffic go through tunnel only. Valid values: `enable`, `disable`.
	ExclusiveRouting pulumi.StringPtrInput
	// Enable to prioritize the placement of the bookmark section over the quick-connection section in the SSL-VPN application. Valid values: `enable`, `disable`.
	FocusBookmark pulumi.StringPtrInput
	// Enable/disable download option for FortiClient. Valid values: `enable`, `disable`.
	ForticlientDownload pulumi.StringPtrInput
	// FortiClient download method. Valid values: `direct`, `ssl-vpn`.
	ForticlientDownloadMethod pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Web portal heading message.
	Heading pulumi.StringPtrInput
	// Enable to prevent SSO credential being sent to client. Valid values: `enable`, `disable`.
	HideSsoCredential pulumi.StringPtrInput
	// Type of host checking performed on endpoints. Valid values: `none`, `av`, `fw`, `av-fw`, `custom`.
	HostCheck pulumi.StringPtrInput
	// Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.
	HostCheckInterval pulumi.IntPtrInput
	// One or more policies to require the endpoint to have specific security software. The structure of `hostCheckPolicy` block is documented below.
	HostCheckPolicies PortalHostCheckPolicyArrayInput
	// Method by which users of this SSL-VPN tunnel obtain IP addresses.
	IpMode pulumi.StringPtrInput
	// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipPools` block is documented below.
	IpPools PortalIpPoolArrayInput
	// IPv6 DNS server 1.
	Ipv6DnsServer1 pulumi.StringPtrInput
	// IPv6 DNS server 2.
	Ipv6DnsServer2 pulumi.StringPtrInput
	// Enable/disable all IPv6 traffic go through tunnel only. Valid values: `enable`, `disable`.
	Ipv6ExclusiveRouting pulumi.StringPtrInput
	// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipv6Pools` block is documented below.
	Ipv6Pools PortalIpv6PoolArrayInput
	// Enable/disable IPv6 tunnel service restriction. Valid values: `enable`, `disable`.
	Ipv6ServiceRestriction pulumi.StringPtrInput
	// Enable/disable IPv6 split tunneling. Valid values: `enable`, `disable`.
	Ipv6SplitTunneling pulumi.StringPtrInput
	// IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `ipv6SplitTunnelingRoutingAddress` block is documented below.
	Ipv6SplitTunnelingRoutingAddresses PortalIpv6SplitTunnelingRoutingAddressArrayInput
	// Enable to negate IPv6 split tunneling routing address. Valid values: `enable`, `disable`.
	Ipv6SplitTunnelingRoutingNegate pulumi.StringPtrInput
	// Enable/disable IPv6 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
	Ipv6TunnelMode pulumi.StringPtrInput
	// IPv6 WINS server 1.
	Ipv6WinsServer1 pulumi.StringPtrInput
	// IPv6 WINS server 2.
	Ipv6WinsServer2 pulumi.StringPtrInput
	// Enable/disable automatic reconnect for FortiClient connections. Valid values: `enable`, `disable`.
	KeepAlive pulumi.StringPtrInput
	// Landing page options. The structure of `landingPage` block is documented below.
	LandingPage PortalLandingPagePtrInput
	// Enable/disable SSL-VPN landing page mode. Valid values: `enable`, `disable`.
	LandingPageMode pulumi.StringPtrInput
	// Enable to limit each user to one SSL-VPN session at a time. Valid values: `enable`, `disable`.
	LimitUserLogins pulumi.StringPtrInput
	// Client MAC address action. Valid values: `allow`, `deny`.
	MacAddrAction pulumi.StringPtrInput
	// Enable/disable MAC address host checking. Valid values: `enable`, `disable`.
	MacAddrCheck pulumi.StringPtrInput
	// Client MAC address check rule. The structure of `macAddrCheckRule` block is documented below.
	MacAddrCheckRules PortalMacAddrCheckRuleArrayInput
	// Download URL for Mac FortiClient.
	MacosForticlientDownloadUrl pulumi.StringPtrInput
	// Portal name.
	Name pulumi.StringPtrInput
	// Enable to let the FortiGate decide action based on client OS. Valid values: `enable`, `disable`.
	OsCheck pulumi.StringPtrInput
	// SSL VPN OS checks. The structure of `osCheckList` block is documented below.
	OsCheckLists PortalOsCheckListArrayInput
	// prefer to query IPv6 dns first if enabled. Valid values: `enable`, `disable`.
	PreferIpv6Dns pulumi.StringPtrInput
	// Client login redirect URL.
	RedirUrl pulumi.StringPtrInput
	// Rewrite contents for URI contains IP and "/ui/". (default = disable) Valid values: `enable`, `disable`.
	RewriteIpUriUi pulumi.StringPtrInput
	// Enable/disable FortiClient saving the user's password. Valid values: `enable`, `disable`.
	SavePassword pulumi.StringPtrInput
	// Enable/disable tunnel service restriction. Valid values: `enable`, `disable`.
	ServiceRestriction pulumi.StringPtrInput
	// Enable to skip host check for browser support. Valid values: `enable`, `disable`.
	SkipCheckForBrowser pulumi.StringPtrInput
	// Enable to skip host check if client OS does not support it. Valid values: `enable`, `disable`.
	SkipCheckForUnsupportedOs pulumi.StringPtrInput
	// SMB maximum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
	SmbMaxVersion pulumi.StringPtrInput
	// SMB minimum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
	SmbMinVersion pulumi.StringPtrInput
	// Enable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
	SmbNtlmv1Auth pulumi.StringPtrInput
	// Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
	Smbv1 pulumi.StringPtrInput
	// Split DNS for SSL VPN. The structure of `splitDns` block is documented below.
	SplitDns PortalSplitDnArrayInput
	// Enable/disable IPv4 split tunneling. Valid values: `enable`, `disable`.
	SplitTunneling pulumi.StringPtrInput
	// IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `splitTunnelingRoutingAddress` block is documented below.
	SplitTunnelingRoutingAddresses PortalSplitTunnelingRoutingAddressArrayInput
	// Enable to negate split tunneling routing address. Valid values: `enable`, `disable`.
	SplitTunnelingRoutingNegate pulumi.StringPtrInput
	// Web portal color scheme.
	Theme pulumi.StringPtrInput
	// Transform backward slashes to forward slashes in URLs. Valid values: `enable`, `disable`.
	TransformBackwardSlashes pulumi.StringPtrInput
	// Enable/disable IPv4 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
	TunnelMode pulumi.StringPtrInput
	// Use SD-WAN rules to get output interface. Valid values: `enable`, `disable`.
	UseSdwan pulumi.StringPtrInput
	// Enable to allow web portal users to create their own bookmarks. Valid values: `enable`, `disable`.
	UserBookmark pulumi.StringPtrInput
	// Enable to allow web portal users to create bookmarks for all users in the same user group. Valid values: `enable`, `disable`.
	UserGroupBookmark pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable SSL VPN web mode. Valid values: `enable`, `disable`.
	WebMode pulumi.StringPtrInput
	// Download URL for Windows FortiClient.
	WindowsForticlientDownloadUrl pulumi.StringPtrInput
	// IPv4 WINS server 1.
	WinsServer1 pulumi.StringPtrInput
	// IPv4 WINS server 1.
	WinsServer2 pulumi.StringPtrInput
}

func (PortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*portalArgs)(nil)).Elem()
}

type PortalInput interface {
	pulumi.Input

	ToPortalOutput() PortalOutput
	ToPortalOutputWithContext(ctx context.Context) PortalOutput
}

func (*Portal) ElementType() reflect.Type {
	return reflect.TypeOf((**Portal)(nil)).Elem()
}

func (i *Portal) ToPortalOutput() PortalOutput {
	return i.ToPortalOutputWithContext(context.Background())
}

func (i *Portal) ToPortalOutputWithContext(ctx context.Context) PortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalOutput)
}

// PortalArrayInput is an input type that accepts PortalArray and PortalArrayOutput values.
// You can construct a concrete instance of `PortalArrayInput` via:
//
//	PortalArray{ PortalArgs{...} }
type PortalArrayInput interface {
	pulumi.Input

	ToPortalArrayOutput() PortalArrayOutput
	ToPortalArrayOutputWithContext(context.Context) PortalArrayOutput
}

type PortalArray []PortalInput

func (PortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Portal)(nil)).Elem()
}

func (i PortalArray) ToPortalArrayOutput() PortalArrayOutput {
	return i.ToPortalArrayOutputWithContext(context.Background())
}

func (i PortalArray) ToPortalArrayOutputWithContext(ctx context.Context) PortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalArrayOutput)
}

// PortalMapInput is an input type that accepts PortalMap and PortalMapOutput values.
// You can construct a concrete instance of `PortalMapInput` via:
//
//	PortalMap{ "key": PortalArgs{...} }
type PortalMapInput interface {
	pulumi.Input

	ToPortalMapOutput() PortalMapOutput
	ToPortalMapOutputWithContext(context.Context) PortalMapOutput
}

type PortalMap map[string]PortalInput

func (PortalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Portal)(nil)).Elem()
}

func (i PortalMap) ToPortalMapOutput() PortalMapOutput {
	return i.ToPortalMapOutputWithContext(context.Background())
}

func (i PortalMap) ToPortalMapOutputWithContext(ctx context.Context) PortalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalMapOutput)
}

type PortalOutput struct{ *pulumi.OutputState }

func (PortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Portal)(nil)).Elem()
}

func (o PortalOutput) ToPortalOutput() PortalOutput {
	return o
}

func (o PortalOutput) ToPortalOutputWithContext(ctx context.Context) PortalOutput {
	return o
}

// Allow user access to SSL-VPN applications.
func (o PortalOutput) AllowUserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.AllowUserAccess }).(pulumi.StringOutput)
}

// Enable/disable automatic connect by client when system is up. Valid values: `enable`, `disable`.
func (o PortalOutput) AutoConnect() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.AutoConnect }).(pulumi.StringOutput)
}

// Portal bookmark group. The structure of `bookmarkGroup` block is documented below.
func (o PortalOutput) BookmarkGroups() PortalBookmarkGroupArrayOutput {
	return o.ApplyT(func(v *Portal) PortalBookmarkGroupArrayOutput { return v.BookmarkGroups }).(PortalBookmarkGroupArrayOutput)
}

// Allow client to add source range for the tunnel traffic. Valid values: `enable`, `disable`.
func (o PortalOutput) ClientSrcRange() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.ClientSrcRange }).(pulumi.StringOutput)
}

// Enable to support RDP/VPC clipboard functionality. Valid values: `enable`, `disable`.
func (o PortalOutput) Clipboard() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Clipboard }).(pulumi.StringOutput)
}

// Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.
func (o PortalOutput) CustomLang() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.CustomLang }).(pulumi.StringOutput)
}

// Enable support of customized download URL for FortiClient. Valid values: `enable`, `disable`.
func (o PortalOutput) CustomizeForticlientDownloadUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.CustomizeForticlientDownloadUrl }).(pulumi.StringOutput)
}

// Application type that is set by default. Valid values: `web`, `ftp`, `telnet`, `smb`, `vnc`, `rdp`, `ssh`, `sftp`.
func (o PortalOutput) DefaultProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.DefaultProtocol }).(pulumi.StringOutput)
}

// Screen height (range from 0 - 65535, default = 768).
func (o PortalOutput) DefaultWindowHeight() pulumi.IntOutput {
	return o.ApplyT(func(v *Portal) pulumi.IntOutput { return v.DefaultWindowHeight }).(pulumi.IntOutput)
}

// Screen width (range from 0 - 65535, default = 1024).
func (o PortalOutput) DefaultWindowWidth() pulumi.IntOutput {
	return o.ApplyT(func(v *Portal) pulumi.IntOutput { return v.DefaultWindowWidth }).(pulumi.IntOutput)
}

// Relay agent IPv6 link address to use in DHCP6 requests.
func (o PortalOutput) Dhcp6RaLinkaddr() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Dhcp6RaLinkaddr }).(pulumi.StringOutput)
}

// Configure overlapping DHCP IP allocation assignment. Valid values: `use-new`, `use-old`.
func (o PortalOutput) DhcpIpOverlap() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.DhcpIpOverlap }).(pulumi.StringOutput)
}

// Relay agent gateway IP address to use in the giaddr field of DHCP requests.
func (o PortalOutput) DhcpRaGiaddr() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.DhcpRaGiaddr }).(pulumi.StringOutput)
}

// Enable to display the web portal bookmark widget. Valid values: `enable`, `disable`.
func (o PortalOutput) DisplayBookmark() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.DisplayBookmark }).(pulumi.StringOutput)
}

// Enable to display the web portal connection tools widget. Valid values: `enable`, `disable`.
func (o PortalOutput) DisplayConnectionTools() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.DisplayConnectionTools }).(pulumi.StringOutput)
}

// Enable to display the web portal user login history widget. Valid values: `enable`, `disable`.
func (o PortalOutput) DisplayHistory() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.DisplayHistory }).(pulumi.StringOutput)
}

// Enable to display the web portal status widget. Valid values: `enable`, `disable`.
func (o PortalOutput) DisplayStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.DisplayStatus }).(pulumi.StringOutput)
}

// IPv4 DNS server 1.
func (o PortalOutput) DnsServer1() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.DnsServer1 }).(pulumi.StringOutput)
}

// IPv4 DNS server 2.
func (o PortalOutput) DnsServer2() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.DnsServer2 }).(pulumi.StringOutput)
}

// DNS suffix.
func (o PortalOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringPtrOutput { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o PortalOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable all traffic go through tunnel only. Valid values: `enable`, `disable`.
func (o PortalOutput) ExclusiveRouting() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.ExclusiveRouting }).(pulumi.StringOutput)
}

// Enable to prioritize the placement of the bookmark section over the quick-connection section in the SSL-VPN application. Valid values: `enable`, `disable`.
func (o PortalOutput) FocusBookmark() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.FocusBookmark }).(pulumi.StringOutput)
}

// Enable/disable download option for FortiClient. Valid values: `enable`, `disable`.
func (o PortalOutput) ForticlientDownload() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.ForticlientDownload }).(pulumi.StringOutput)
}

// FortiClient download method. Valid values: `direct`, `ssl-vpn`.
func (o PortalOutput) ForticlientDownloadMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.ForticlientDownloadMethod }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o PortalOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Web portal heading message.
func (o PortalOutput) Heading() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Heading }).(pulumi.StringOutput)
}

// Enable to prevent SSO credential being sent to client. Valid values: `enable`, `disable`.
func (o PortalOutput) HideSsoCredential() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.HideSsoCredential }).(pulumi.StringOutput)
}

// Type of host checking performed on endpoints. Valid values: `none`, `av`, `fw`, `av-fw`, `custom`.
func (o PortalOutput) HostCheck() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.HostCheck }).(pulumi.StringOutput)
}

// Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.
func (o PortalOutput) HostCheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Portal) pulumi.IntOutput { return v.HostCheckInterval }).(pulumi.IntOutput)
}

// One or more policies to require the endpoint to have specific security software. The structure of `hostCheckPolicy` block is documented below.
func (o PortalOutput) HostCheckPolicies() PortalHostCheckPolicyArrayOutput {
	return o.ApplyT(func(v *Portal) PortalHostCheckPolicyArrayOutput { return v.HostCheckPolicies }).(PortalHostCheckPolicyArrayOutput)
}

// Method by which users of this SSL-VPN tunnel obtain IP addresses.
func (o PortalOutput) IpMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.IpMode }).(pulumi.StringOutput)
}

// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipPools` block is documented below.
func (o PortalOutput) IpPools() PortalIpPoolArrayOutput {
	return o.ApplyT(func(v *Portal) PortalIpPoolArrayOutput { return v.IpPools }).(PortalIpPoolArrayOutput)
}

// IPv6 DNS server 1.
func (o PortalOutput) Ipv6DnsServer1() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Ipv6DnsServer1 }).(pulumi.StringOutput)
}

// IPv6 DNS server 2.
func (o PortalOutput) Ipv6DnsServer2() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Ipv6DnsServer2 }).(pulumi.StringOutput)
}

// Enable/disable all IPv6 traffic go through tunnel only. Valid values: `enable`, `disable`.
func (o PortalOutput) Ipv6ExclusiveRouting() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Ipv6ExclusiveRouting }).(pulumi.StringOutput)
}

// IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipv6Pools` block is documented below.
func (o PortalOutput) Ipv6Pools() PortalIpv6PoolArrayOutput {
	return o.ApplyT(func(v *Portal) PortalIpv6PoolArrayOutput { return v.Ipv6Pools }).(PortalIpv6PoolArrayOutput)
}

// Enable/disable IPv6 tunnel service restriction. Valid values: `enable`, `disable`.
func (o PortalOutput) Ipv6ServiceRestriction() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Ipv6ServiceRestriction }).(pulumi.StringOutput)
}

// Enable/disable IPv6 split tunneling. Valid values: `enable`, `disable`.
func (o PortalOutput) Ipv6SplitTunneling() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Ipv6SplitTunneling }).(pulumi.StringOutput)
}

// IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `ipv6SplitTunnelingRoutingAddress` block is documented below.
func (o PortalOutput) Ipv6SplitTunnelingRoutingAddresses() PortalIpv6SplitTunnelingRoutingAddressArrayOutput {
	return o.ApplyT(func(v *Portal) PortalIpv6SplitTunnelingRoutingAddressArrayOutput {
		return v.Ipv6SplitTunnelingRoutingAddresses
	}).(PortalIpv6SplitTunnelingRoutingAddressArrayOutput)
}

// Enable to negate IPv6 split tunneling routing address. Valid values: `enable`, `disable`.
func (o PortalOutput) Ipv6SplitTunnelingRoutingNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Ipv6SplitTunnelingRoutingNegate }).(pulumi.StringOutput)
}

// Enable/disable IPv6 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
func (o PortalOutput) Ipv6TunnelMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Ipv6TunnelMode }).(pulumi.StringOutput)
}

// IPv6 WINS server 1.
func (o PortalOutput) Ipv6WinsServer1() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Ipv6WinsServer1 }).(pulumi.StringOutput)
}

// IPv6 WINS server 2.
func (o PortalOutput) Ipv6WinsServer2() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Ipv6WinsServer2 }).(pulumi.StringOutput)
}

// Enable/disable automatic reconnect for FortiClient connections. Valid values: `enable`, `disable`.
func (o PortalOutput) KeepAlive() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.KeepAlive }).(pulumi.StringOutput)
}

// Landing page options. The structure of `landingPage` block is documented below.
func (o PortalOutput) LandingPage() PortalLandingPageOutput {
	return o.ApplyT(func(v *Portal) PortalLandingPageOutput { return v.LandingPage }).(PortalLandingPageOutput)
}

// Enable/disable SSL-VPN landing page mode. Valid values: `enable`, `disable`.
func (o PortalOutput) LandingPageMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.LandingPageMode }).(pulumi.StringOutput)
}

// Enable to limit each user to one SSL-VPN session at a time. Valid values: `enable`, `disable`.
func (o PortalOutput) LimitUserLogins() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.LimitUserLogins }).(pulumi.StringOutput)
}

// Client MAC address action. Valid values: `allow`, `deny`.
func (o PortalOutput) MacAddrAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.MacAddrAction }).(pulumi.StringOutput)
}

// Enable/disable MAC address host checking. Valid values: `enable`, `disable`.
func (o PortalOutput) MacAddrCheck() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.MacAddrCheck }).(pulumi.StringOutput)
}

// Client MAC address check rule. The structure of `macAddrCheckRule` block is documented below.
func (o PortalOutput) MacAddrCheckRules() PortalMacAddrCheckRuleArrayOutput {
	return o.ApplyT(func(v *Portal) PortalMacAddrCheckRuleArrayOutput { return v.MacAddrCheckRules }).(PortalMacAddrCheckRuleArrayOutput)
}

// Download URL for Mac FortiClient.
func (o PortalOutput) MacosForticlientDownloadUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringPtrOutput { return v.MacosForticlientDownloadUrl }).(pulumi.StringPtrOutput)
}

// Portal name.
func (o PortalOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable to let the FortiGate decide action based on client OS. Valid values: `enable`, `disable`.
func (o PortalOutput) OsCheck() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.OsCheck }).(pulumi.StringOutput)
}

// SSL VPN OS checks. The structure of `osCheckList` block is documented below.
func (o PortalOutput) OsCheckLists() PortalOsCheckListArrayOutput {
	return o.ApplyT(func(v *Portal) PortalOsCheckListArrayOutput { return v.OsCheckLists }).(PortalOsCheckListArrayOutput)
}

// prefer to query IPv6 dns first if enabled. Valid values: `enable`, `disable`.
func (o PortalOutput) PreferIpv6Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.PreferIpv6Dns }).(pulumi.StringOutput)
}

// Client login redirect URL.
func (o PortalOutput) RedirUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringPtrOutput { return v.RedirUrl }).(pulumi.StringPtrOutput)
}

// Rewrite contents for URI contains IP and "/ui/". (default = disable) Valid values: `enable`, `disable`.
func (o PortalOutput) RewriteIpUriUi() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.RewriteIpUriUi }).(pulumi.StringOutput)
}

// Enable/disable FortiClient saving the user's password. Valid values: `enable`, `disable`.
func (o PortalOutput) SavePassword() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.SavePassword }).(pulumi.StringOutput)
}

// Enable/disable tunnel service restriction. Valid values: `enable`, `disable`.
func (o PortalOutput) ServiceRestriction() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.ServiceRestriction }).(pulumi.StringOutput)
}

// Enable to skip host check for browser support. Valid values: `enable`, `disable`.
func (o PortalOutput) SkipCheckForBrowser() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.SkipCheckForBrowser }).(pulumi.StringOutput)
}

// Enable to skip host check if client OS does not support it. Valid values: `enable`, `disable`.
func (o PortalOutput) SkipCheckForUnsupportedOs() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.SkipCheckForUnsupportedOs }).(pulumi.StringOutput)
}

// SMB maximum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
func (o PortalOutput) SmbMaxVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.SmbMaxVersion }).(pulumi.StringOutput)
}

// SMB minimum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
func (o PortalOutput) SmbMinVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.SmbMinVersion }).(pulumi.StringOutput)
}

// Enable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
func (o PortalOutput) SmbNtlmv1Auth() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.SmbNtlmv1Auth }).(pulumi.StringOutput)
}

// Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
func (o PortalOutput) Smbv1() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Smbv1 }).(pulumi.StringOutput)
}

// Split DNS for SSL VPN. The structure of `splitDns` block is documented below.
func (o PortalOutput) SplitDns() PortalSplitDnArrayOutput {
	return o.ApplyT(func(v *Portal) PortalSplitDnArrayOutput { return v.SplitDns }).(PortalSplitDnArrayOutput)
}

// Enable/disable IPv4 split tunneling. Valid values: `enable`, `disable`.
func (o PortalOutput) SplitTunneling() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.SplitTunneling }).(pulumi.StringOutput)
}

// IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `splitTunnelingRoutingAddress` block is documented below.
func (o PortalOutput) SplitTunnelingRoutingAddresses() PortalSplitTunnelingRoutingAddressArrayOutput {
	return o.ApplyT(func(v *Portal) PortalSplitTunnelingRoutingAddressArrayOutput { return v.SplitTunnelingRoutingAddresses }).(PortalSplitTunnelingRoutingAddressArrayOutput)
}

// Enable to negate split tunneling routing address. Valid values: `enable`, `disable`.
func (o PortalOutput) SplitTunnelingRoutingNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.SplitTunnelingRoutingNegate }).(pulumi.StringOutput)
}

// Web portal color scheme.
func (o PortalOutput) Theme() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.Theme }).(pulumi.StringOutput)
}

// Transform backward slashes to forward slashes in URLs. Valid values: `enable`, `disable`.
func (o PortalOutput) TransformBackwardSlashes() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.TransformBackwardSlashes }).(pulumi.StringOutput)
}

// Enable/disable IPv4 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
func (o PortalOutput) TunnelMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.TunnelMode }).(pulumi.StringOutput)
}

// Use SD-WAN rules to get output interface. Valid values: `enable`, `disable`.
func (o PortalOutput) UseSdwan() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.UseSdwan }).(pulumi.StringOutput)
}

// Enable to allow web portal users to create their own bookmarks. Valid values: `enable`, `disable`.
func (o PortalOutput) UserBookmark() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.UserBookmark }).(pulumi.StringOutput)
}

// Enable to allow web portal users to create bookmarks for all users in the same user group. Valid values: `enable`, `disable`.
func (o PortalOutput) UserGroupBookmark() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.UserGroupBookmark }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o PortalOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable SSL VPN web mode. Valid values: `enable`, `disable`.
func (o PortalOutput) WebMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.WebMode }).(pulumi.StringOutput)
}

// Download URL for Windows FortiClient.
func (o PortalOutput) WindowsForticlientDownloadUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringPtrOutput { return v.WindowsForticlientDownloadUrl }).(pulumi.StringPtrOutput)
}

// IPv4 WINS server 1.
func (o PortalOutput) WinsServer1() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.WinsServer1 }).(pulumi.StringOutput)
}

// IPv4 WINS server 1.
func (o PortalOutput) WinsServer2() pulumi.StringOutput {
	return o.ApplyT(func(v *Portal) pulumi.StringOutput { return v.WinsServer2 }).(pulumi.StringOutput)
}

type PortalArrayOutput struct{ *pulumi.OutputState }

func (PortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Portal)(nil)).Elem()
}

func (o PortalArrayOutput) ToPortalArrayOutput() PortalArrayOutput {
	return o
}

func (o PortalArrayOutput) ToPortalArrayOutputWithContext(ctx context.Context) PortalArrayOutput {
	return o
}

func (o PortalArrayOutput) Index(i pulumi.IntInput) PortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Portal {
		return vs[0].([]*Portal)[vs[1].(int)]
	}).(PortalOutput)
}

type PortalMapOutput struct{ *pulumi.OutputState }

func (PortalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Portal)(nil)).Elem()
}

func (o PortalMapOutput) ToPortalMapOutput() PortalMapOutput {
	return o
}

func (o PortalMapOutput) ToPortalMapOutputWithContext(ctx context.Context) PortalMapOutput {
	return o
}

func (o PortalMapOutput) MapIndex(k pulumi.StringInput) PortalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Portal {
		return vs[0].(map[string]*Portal)[vs[1].(string)]
	}).(PortalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PortalInput)(nil)).Elem(), &Portal{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalArrayInput)(nil)).Elem(), PortalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalMapInput)(nil)).Elem(), PortalMap{})
	pulumi.RegisterOutputType(PortalOutput{})
	pulumi.RegisterOutputType(PortalArrayOutput{})
	pulumi.RegisterOutputType(PortalMapOutput{})
}
