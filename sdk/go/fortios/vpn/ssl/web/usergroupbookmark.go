// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure SSL VPN user group bookmark.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/vpn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpn.NewUsergroupbookmark(ctx, "trname", &vpn.UsergroupbookmarkArgs{
//				Bookmarks: ssl / web.UsergroupbookmarkBookmarkArray{
//					&ssl / web.UsergroupbookmarkBookmarkArgs{
//						Apptype:               pulumi.String("citrix"),
//						ListeningPort:         pulumi.Int(0),
//						Name:                  pulumi.String("b1"),
//						Port:                  pulumi.Int(0),
//						RemotePort:            pulumi.Int(0),
//						Security:              pulumi.String("rdp"),
//						ServerLayout:          pulumi.String("en-us-qwerty"),
//						ShowStatusWindow:      pulumi.String("disable"),
//						Sso:                   pulumi.String("disable"),
//						SsoCredential:         pulumi.String("sslvpn-login"),
//						SsoCredentialSentOnce: pulumi.String("disable"),
//						Url:                   pulumi.String("www.aaa.com"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// VpnSslWeb UserGroupBookmark can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:vpn/ssl/web/usergroupbookmark:Usergroupbookmark labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:vpn/ssl/web/usergroupbookmark:Usergroupbookmark labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Usergroupbookmark struct {
	pulumi.CustomResourceState

	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks UsergroupbookmarkBookmarkArrayOutput `pulumi:"bookmarks"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewUsergroupbookmark registers a new resource with the given unique name, arguments, and options.
func NewUsergroupbookmark(ctx *pulumi.Context,
	name string, args *UsergroupbookmarkArgs, opts ...pulumi.ResourceOption) (*Usergroupbookmark, error) {
	if args == nil {
		args = &UsergroupbookmarkArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Usergroupbookmark
	err := ctx.RegisterResource("fortios:vpn/ssl/web/usergroupbookmark:Usergroupbookmark", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUsergroupbookmark gets an existing Usergroupbookmark resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUsergroupbookmark(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UsergroupbookmarkState, opts ...pulumi.ResourceOption) (*Usergroupbookmark, error) {
	var resource Usergroupbookmark
	err := ctx.ReadResource("fortios:vpn/ssl/web/usergroupbookmark:Usergroupbookmark", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Usergroupbookmark resources.
type usergroupbookmarkState struct {
	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks []UsergroupbookmarkBookmark `pulumi:"bookmarks"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Group name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type UsergroupbookmarkState struct {
	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks UsergroupbookmarkBookmarkArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Group name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (UsergroupbookmarkState) ElementType() reflect.Type {
	return reflect.TypeOf((*usergroupbookmarkState)(nil)).Elem()
}

type usergroupbookmarkArgs struct {
	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks []UsergroupbookmarkBookmark `pulumi:"bookmarks"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Group name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Usergroupbookmark resource.
type UsergroupbookmarkArgs struct {
	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks UsergroupbookmarkBookmarkArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Group name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (UsergroupbookmarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*usergroupbookmarkArgs)(nil)).Elem()
}

type UsergroupbookmarkInput interface {
	pulumi.Input

	ToUsergroupbookmarkOutput() UsergroupbookmarkOutput
	ToUsergroupbookmarkOutputWithContext(ctx context.Context) UsergroupbookmarkOutput
}

func (*Usergroupbookmark) ElementType() reflect.Type {
	return reflect.TypeOf((**Usergroupbookmark)(nil)).Elem()
}

func (i *Usergroupbookmark) ToUsergroupbookmarkOutput() UsergroupbookmarkOutput {
	return i.ToUsergroupbookmarkOutputWithContext(context.Background())
}

func (i *Usergroupbookmark) ToUsergroupbookmarkOutputWithContext(ctx context.Context) UsergroupbookmarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsergroupbookmarkOutput)
}

// UsergroupbookmarkArrayInput is an input type that accepts UsergroupbookmarkArray and UsergroupbookmarkArrayOutput values.
// You can construct a concrete instance of `UsergroupbookmarkArrayInput` via:
//
//	UsergroupbookmarkArray{ UsergroupbookmarkArgs{...} }
type UsergroupbookmarkArrayInput interface {
	pulumi.Input

	ToUsergroupbookmarkArrayOutput() UsergroupbookmarkArrayOutput
	ToUsergroupbookmarkArrayOutputWithContext(context.Context) UsergroupbookmarkArrayOutput
}

type UsergroupbookmarkArray []UsergroupbookmarkInput

func (UsergroupbookmarkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Usergroupbookmark)(nil)).Elem()
}

func (i UsergroupbookmarkArray) ToUsergroupbookmarkArrayOutput() UsergroupbookmarkArrayOutput {
	return i.ToUsergroupbookmarkArrayOutputWithContext(context.Background())
}

func (i UsergroupbookmarkArray) ToUsergroupbookmarkArrayOutputWithContext(ctx context.Context) UsergroupbookmarkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsergroupbookmarkArrayOutput)
}

// UsergroupbookmarkMapInput is an input type that accepts UsergroupbookmarkMap and UsergroupbookmarkMapOutput values.
// You can construct a concrete instance of `UsergroupbookmarkMapInput` via:
//
//	UsergroupbookmarkMap{ "key": UsergroupbookmarkArgs{...} }
type UsergroupbookmarkMapInput interface {
	pulumi.Input

	ToUsergroupbookmarkMapOutput() UsergroupbookmarkMapOutput
	ToUsergroupbookmarkMapOutputWithContext(context.Context) UsergroupbookmarkMapOutput
}

type UsergroupbookmarkMap map[string]UsergroupbookmarkInput

func (UsergroupbookmarkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Usergroupbookmark)(nil)).Elem()
}

func (i UsergroupbookmarkMap) ToUsergroupbookmarkMapOutput() UsergroupbookmarkMapOutput {
	return i.ToUsergroupbookmarkMapOutputWithContext(context.Background())
}

func (i UsergroupbookmarkMap) ToUsergroupbookmarkMapOutputWithContext(ctx context.Context) UsergroupbookmarkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsergroupbookmarkMapOutput)
}

type UsergroupbookmarkOutput struct{ *pulumi.OutputState }

func (UsergroupbookmarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Usergroupbookmark)(nil)).Elem()
}

func (o UsergroupbookmarkOutput) ToUsergroupbookmarkOutput() UsergroupbookmarkOutput {
	return o
}

func (o UsergroupbookmarkOutput) ToUsergroupbookmarkOutputWithContext(ctx context.Context) UsergroupbookmarkOutput {
	return o
}

// Bookmark table. The structure of `bookmarks` block is documented below.
func (o UsergroupbookmarkOutput) Bookmarks() UsergroupbookmarkBookmarkArrayOutput {
	return o.ApplyT(func(v *Usergroupbookmark) UsergroupbookmarkBookmarkArrayOutput { return v.Bookmarks }).(UsergroupbookmarkBookmarkArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o UsergroupbookmarkOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Usergroupbookmark) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o UsergroupbookmarkOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Usergroupbookmark) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Group name.
func (o UsergroupbookmarkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Usergroupbookmark) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o UsergroupbookmarkOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Usergroupbookmark) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type UsergroupbookmarkArrayOutput struct{ *pulumi.OutputState }

func (UsergroupbookmarkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Usergroupbookmark)(nil)).Elem()
}

func (o UsergroupbookmarkArrayOutput) ToUsergroupbookmarkArrayOutput() UsergroupbookmarkArrayOutput {
	return o
}

func (o UsergroupbookmarkArrayOutput) ToUsergroupbookmarkArrayOutputWithContext(ctx context.Context) UsergroupbookmarkArrayOutput {
	return o
}

func (o UsergroupbookmarkArrayOutput) Index(i pulumi.IntInput) UsergroupbookmarkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Usergroupbookmark {
		return vs[0].([]*Usergroupbookmark)[vs[1].(int)]
	}).(UsergroupbookmarkOutput)
}

type UsergroupbookmarkMapOutput struct{ *pulumi.OutputState }

func (UsergroupbookmarkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Usergroupbookmark)(nil)).Elem()
}

func (o UsergroupbookmarkMapOutput) ToUsergroupbookmarkMapOutput() UsergroupbookmarkMapOutput {
	return o
}

func (o UsergroupbookmarkMapOutput) ToUsergroupbookmarkMapOutputWithContext(ctx context.Context) UsergroupbookmarkMapOutput {
	return o
}

func (o UsergroupbookmarkMapOutput) MapIndex(k pulumi.StringInput) UsergroupbookmarkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Usergroupbookmark {
		return vs[0].(map[string]*Usergroupbookmark)[vs[1].(string)]
	}).(UsergroupbookmarkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UsergroupbookmarkInput)(nil)).Elem(), &Usergroupbookmark{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsergroupbookmarkArrayInput)(nil)).Elem(), UsergroupbookmarkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsergroupbookmarkMapInput)(nil)).Elem(), UsergroupbookmarkMap{})
	pulumi.RegisterOutputType(UsergroupbookmarkOutput{})
	pulumi.RegisterOutputType(UsergroupbookmarkArrayOutput{})
	pulumi.RegisterOutputType(UsergroupbookmarkMapOutput{})
}
