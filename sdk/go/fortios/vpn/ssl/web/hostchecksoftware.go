// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// SSL-VPN host check software.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/vpn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpn.NewHostchecksoftware(ctx, "trname", &vpn.HostchecksoftwareArgs{
//				OsType: pulumi.String("windows"),
//				Type:   pulumi.String("fw"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// VpnSslWeb HostCheckSoftware can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:vpn/ssl/web/hostchecksoftware:Hostchecksoftware labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:vpn/ssl/web/hostchecksoftware:Hostchecksoftware labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Hostchecksoftware struct {
	pulumi.CustomResourceState

	// Check item list. The structure of `checkItemList` block is documented below.
	CheckItemLists HostchecksoftwareCheckItemListArrayOutput `pulumi:"checkItemLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Globally unique ID.
	Guid pulumi.StringOutput `pulumi:"guid"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// OS type. Valid values: `windows`, `macos`.
	OsType pulumi.StringOutput `pulumi:"osType"`
	// Type. Valid values: `av`, `fw`.
	Type pulumi.StringOutput `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Version.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewHostchecksoftware registers a new resource with the given unique name, arguments, and options.
func NewHostchecksoftware(ctx *pulumi.Context,
	name string, args *HostchecksoftwareArgs, opts ...pulumi.ResourceOption) (*Hostchecksoftware, error) {
	if args == nil {
		args = &HostchecksoftwareArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Hostchecksoftware
	err := ctx.RegisterResource("fortios:vpn/ssl/web/hostchecksoftware:Hostchecksoftware", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostchecksoftware gets an existing Hostchecksoftware resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostchecksoftware(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostchecksoftwareState, opts ...pulumi.ResourceOption) (*Hostchecksoftware, error) {
	var resource Hostchecksoftware
	err := ctx.ReadResource("fortios:vpn/ssl/web/hostchecksoftware:Hostchecksoftware", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Hostchecksoftware resources.
type hostchecksoftwareState struct {
	// Check item list. The structure of `checkItemList` block is documented below.
	CheckItemLists []HostchecksoftwareCheckItemList `pulumi:"checkItemLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Globally unique ID.
	Guid *string `pulumi:"guid"`
	// Name.
	Name *string `pulumi:"name"`
	// OS type. Valid values: `windows`, `macos`.
	OsType *string `pulumi:"osType"`
	// Type. Valid values: `av`, `fw`.
	Type *string `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Version.
	Version *string `pulumi:"version"`
}

type HostchecksoftwareState struct {
	// Check item list. The structure of `checkItemList` block is documented below.
	CheckItemLists HostchecksoftwareCheckItemListArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Globally unique ID.
	Guid pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// OS type. Valid values: `windows`, `macos`.
	OsType pulumi.StringPtrInput
	// Type. Valid values: `av`, `fw`.
	Type pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Version.
	Version pulumi.StringPtrInput
}

func (HostchecksoftwareState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostchecksoftwareState)(nil)).Elem()
}

type hostchecksoftwareArgs struct {
	// Check item list. The structure of `checkItemList` block is documented below.
	CheckItemLists []HostchecksoftwareCheckItemList `pulumi:"checkItemLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Globally unique ID.
	Guid *string `pulumi:"guid"`
	// Name.
	Name *string `pulumi:"name"`
	// OS type. Valid values: `windows`, `macos`.
	OsType *string `pulumi:"osType"`
	// Type. Valid values: `av`, `fw`.
	Type *string `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Version.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a Hostchecksoftware resource.
type HostchecksoftwareArgs struct {
	// Check item list. The structure of `checkItemList` block is documented below.
	CheckItemLists HostchecksoftwareCheckItemListArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Globally unique ID.
	Guid pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// OS type. Valid values: `windows`, `macos`.
	OsType pulumi.StringPtrInput
	// Type. Valid values: `av`, `fw`.
	Type pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Version.
	Version pulumi.StringPtrInput
}

func (HostchecksoftwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostchecksoftwareArgs)(nil)).Elem()
}

type HostchecksoftwareInput interface {
	pulumi.Input

	ToHostchecksoftwareOutput() HostchecksoftwareOutput
	ToHostchecksoftwareOutputWithContext(ctx context.Context) HostchecksoftwareOutput
}

func (*Hostchecksoftware) ElementType() reflect.Type {
	return reflect.TypeOf((**Hostchecksoftware)(nil)).Elem()
}

func (i *Hostchecksoftware) ToHostchecksoftwareOutput() HostchecksoftwareOutput {
	return i.ToHostchecksoftwareOutputWithContext(context.Background())
}

func (i *Hostchecksoftware) ToHostchecksoftwareOutputWithContext(ctx context.Context) HostchecksoftwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostchecksoftwareOutput)
}

// HostchecksoftwareArrayInput is an input type that accepts HostchecksoftwareArray and HostchecksoftwareArrayOutput values.
// You can construct a concrete instance of `HostchecksoftwareArrayInput` via:
//
//	HostchecksoftwareArray{ HostchecksoftwareArgs{...} }
type HostchecksoftwareArrayInput interface {
	pulumi.Input

	ToHostchecksoftwareArrayOutput() HostchecksoftwareArrayOutput
	ToHostchecksoftwareArrayOutputWithContext(context.Context) HostchecksoftwareArrayOutput
}

type HostchecksoftwareArray []HostchecksoftwareInput

func (HostchecksoftwareArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Hostchecksoftware)(nil)).Elem()
}

func (i HostchecksoftwareArray) ToHostchecksoftwareArrayOutput() HostchecksoftwareArrayOutput {
	return i.ToHostchecksoftwareArrayOutputWithContext(context.Background())
}

func (i HostchecksoftwareArray) ToHostchecksoftwareArrayOutputWithContext(ctx context.Context) HostchecksoftwareArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostchecksoftwareArrayOutput)
}

// HostchecksoftwareMapInput is an input type that accepts HostchecksoftwareMap and HostchecksoftwareMapOutput values.
// You can construct a concrete instance of `HostchecksoftwareMapInput` via:
//
//	HostchecksoftwareMap{ "key": HostchecksoftwareArgs{...} }
type HostchecksoftwareMapInput interface {
	pulumi.Input

	ToHostchecksoftwareMapOutput() HostchecksoftwareMapOutput
	ToHostchecksoftwareMapOutputWithContext(context.Context) HostchecksoftwareMapOutput
}

type HostchecksoftwareMap map[string]HostchecksoftwareInput

func (HostchecksoftwareMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Hostchecksoftware)(nil)).Elem()
}

func (i HostchecksoftwareMap) ToHostchecksoftwareMapOutput() HostchecksoftwareMapOutput {
	return i.ToHostchecksoftwareMapOutputWithContext(context.Background())
}

func (i HostchecksoftwareMap) ToHostchecksoftwareMapOutputWithContext(ctx context.Context) HostchecksoftwareMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostchecksoftwareMapOutput)
}

type HostchecksoftwareOutput struct{ *pulumi.OutputState }

func (HostchecksoftwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Hostchecksoftware)(nil)).Elem()
}

func (o HostchecksoftwareOutput) ToHostchecksoftwareOutput() HostchecksoftwareOutput {
	return o
}

func (o HostchecksoftwareOutput) ToHostchecksoftwareOutputWithContext(ctx context.Context) HostchecksoftwareOutput {
	return o
}

// Check item list. The structure of `checkItemList` block is documented below.
func (o HostchecksoftwareOutput) CheckItemLists() HostchecksoftwareCheckItemListArrayOutput {
	return o.ApplyT(func(v *Hostchecksoftware) HostchecksoftwareCheckItemListArrayOutput { return v.CheckItemLists }).(HostchecksoftwareCheckItemListArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o HostchecksoftwareOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hostchecksoftware) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o HostchecksoftwareOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hostchecksoftware) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Globally unique ID.
func (o HostchecksoftwareOutput) Guid() pulumi.StringOutput {
	return o.ApplyT(func(v *Hostchecksoftware) pulumi.StringOutput { return v.Guid }).(pulumi.StringOutput)
}

// Name.
func (o HostchecksoftwareOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Hostchecksoftware) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// OS type. Valid values: `windows`, `macos`.
func (o HostchecksoftwareOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v *Hostchecksoftware) pulumi.StringOutput { return v.OsType }).(pulumi.StringOutput)
}

// Type. Valid values: `av`, `fw`.
func (o HostchecksoftwareOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Hostchecksoftware) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o HostchecksoftwareOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hostchecksoftware) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Version.
func (o HostchecksoftwareOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Hostchecksoftware) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type HostchecksoftwareArrayOutput struct{ *pulumi.OutputState }

func (HostchecksoftwareArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Hostchecksoftware)(nil)).Elem()
}

func (o HostchecksoftwareArrayOutput) ToHostchecksoftwareArrayOutput() HostchecksoftwareArrayOutput {
	return o
}

func (o HostchecksoftwareArrayOutput) ToHostchecksoftwareArrayOutputWithContext(ctx context.Context) HostchecksoftwareArrayOutput {
	return o
}

func (o HostchecksoftwareArrayOutput) Index(i pulumi.IntInput) HostchecksoftwareOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Hostchecksoftware {
		return vs[0].([]*Hostchecksoftware)[vs[1].(int)]
	}).(HostchecksoftwareOutput)
}

type HostchecksoftwareMapOutput struct{ *pulumi.OutputState }

func (HostchecksoftwareMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Hostchecksoftware)(nil)).Elem()
}

func (o HostchecksoftwareMapOutput) ToHostchecksoftwareMapOutput() HostchecksoftwareMapOutput {
	return o
}

func (o HostchecksoftwareMapOutput) ToHostchecksoftwareMapOutputWithContext(ctx context.Context) HostchecksoftwareMapOutput {
	return o
}

func (o HostchecksoftwareMapOutput) MapIndex(k pulumi.StringInput) HostchecksoftwareOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Hostchecksoftware {
		return vs[0].(map[string]*Hostchecksoftware)[vs[1].(string)]
	}).(HostchecksoftwareOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostchecksoftwareInput)(nil)).Elem(), &Hostchecksoftware{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostchecksoftwareArrayInput)(nil)).Elem(), HostchecksoftwareArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostchecksoftwareMapInput)(nil)).Elem(), HostchecksoftwareMap{})
	pulumi.RegisterOutputType(HostchecksoftwareOutput{})
	pulumi.RegisterOutputType(HostchecksoftwareArrayOutput{})
	pulumi.RegisterOutputType(HostchecksoftwareMapOutput{})
}
