// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// KMIP server entry configuration. Applies to FortiOS Version `>= 7.4.0`.
//
// ## Import
//
// Vpn KmipServer can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:vpn/kmipserver:Kmipserver labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:vpn/kmipserver:Kmipserver labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Kmipserver struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// KMIP server entry name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Password to use for connectivity to the KMIP server.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Enable/disable KMIP server identity check (verify server FQDN/IP address against the server certificate). Valid values: `enable`, `disable`.
	ServerIdentityCheck pulumi.StringOutput `pulumi:"serverIdentityCheck"`
	// KMIP server list. The structure of `serverList` block is documented below.
	ServerLists KmipserverServerListArrayOutput `pulumi:"serverLists"`
	// FortiGate IP address to be used for communication with the KMIP server.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
	SslMinProtoVersion pulumi.StringOutput `pulumi:"sslMinProtoVersion"`
	// User name to use for connectivity to the KMIP server.
	Username pulumi.StringOutput `pulumi:"username"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewKmipserver registers a new resource with the given unique name, arguments, and options.
func NewKmipserver(ctx *pulumi.Context,
	name string, args *KmipserverArgs, opts ...pulumi.ResourceOption) (*Kmipserver, error) {
	if args == nil {
		args = &KmipserverArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Kmipserver
	err := ctx.RegisterResource("fortios:vpn/kmipserver:Kmipserver", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmipserver gets an existing Kmipserver resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmipserver(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmipserverState, opts ...pulumi.ResourceOption) (*Kmipserver, error) {
	var resource Kmipserver
	err := ctx.ReadResource("fortios:vpn/kmipserver:Kmipserver", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Kmipserver resources.
type kmipserverState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// KMIP server entry name.
	Name *string `pulumi:"name"`
	// Password to use for connectivity to the KMIP server.
	Password *string `pulumi:"password"`
	// Enable/disable KMIP server identity check (verify server FQDN/IP address against the server certificate). Valid values: `enable`, `disable`.
	ServerIdentityCheck *string `pulumi:"serverIdentityCheck"`
	// KMIP server list. The structure of `serverList` block is documented below.
	ServerLists []KmipserverServerList `pulumi:"serverLists"`
	// FortiGate IP address to be used for communication with the KMIP server.
	SourceIp *string `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
	SslMinProtoVersion *string `pulumi:"sslMinProtoVersion"`
	// User name to use for connectivity to the KMIP server.
	Username *string `pulumi:"username"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type KmipserverState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// KMIP server entry name.
	Name pulumi.StringPtrInput
	// Password to use for connectivity to the KMIP server.
	Password pulumi.StringPtrInput
	// Enable/disable KMIP server identity check (verify server FQDN/IP address against the server certificate). Valid values: `enable`, `disable`.
	ServerIdentityCheck pulumi.StringPtrInput
	// KMIP server list. The structure of `serverList` block is documented below.
	ServerLists KmipserverServerListArrayInput
	// FortiGate IP address to be used for communication with the KMIP server.
	SourceIp pulumi.StringPtrInput
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
	SslMinProtoVersion pulumi.StringPtrInput
	// User name to use for connectivity to the KMIP server.
	Username pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (KmipserverState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmipserverState)(nil)).Elem()
}

type kmipserverArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// KMIP server entry name.
	Name *string `pulumi:"name"`
	// Password to use for connectivity to the KMIP server.
	Password *string `pulumi:"password"`
	// Enable/disable KMIP server identity check (verify server FQDN/IP address against the server certificate). Valid values: `enable`, `disable`.
	ServerIdentityCheck *string `pulumi:"serverIdentityCheck"`
	// KMIP server list. The structure of `serverList` block is documented below.
	ServerLists []KmipserverServerList `pulumi:"serverLists"`
	// FortiGate IP address to be used for communication with the KMIP server.
	SourceIp *string `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
	SslMinProtoVersion *string `pulumi:"sslMinProtoVersion"`
	// User name to use for connectivity to the KMIP server.
	Username *string `pulumi:"username"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Kmipserver resource.
type KmipserverArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// KMIP server entry name.
	Name pulumi.StringPtrInput
	// Password to use for connectivity to the KMIP server.
	Password pulumi.StringPtrInput
	// Enable/disable KMIP server identity check (verify server FQDN/IP address against the server certificate). Valid values: `enable`, `disable`.
	ServerIdentityCheck pulumi.StringPtrInput
	// KMIP server list. The structure of `serverList` block is documented below.
	ServerLists KmipserverServerListArrayInput
	// FortiGate IP address to be used for communication with the KMIP server.
	SourceIp pulumi.StringPtrInput
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
	SslMinProtoVersion pulumi.StringPtrInput
	// User name to use for connectivity to the KMIP server.
	Username pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (KmipserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmipserverArgs)(nil)).Elem()
}

type KmipserverInput interface {
	pulumi.Input

	ToKmipserverOutput() KmipserverOutput
	ToKmipserverOutputWithContext(ctx context.Context) KmipserverOutput
}

func (*Kmipserver) ElementType() reflect.Type {
	return reflect.TypeOf((**Kmipserver)(nil)).Elem()
}

func (i *Kmipserver) ToKmipserverOutput() KmipserverOutput {
	return i.ToKmipserverOutputWithContext(context.Background())
}

func (i *Kmipserver) ToKmipserverOutputWithContext(ctx context.Context) KmipserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmipserverOutput)
}

// KmipserverArrayInput is an input type that accepts KmipserverArray and KmipserverArrayOutput values.
// You can construct a concrete instance of `KmipserverArrayInput` via:
//
//	KmipserverArray{ KmipserverArgs{...} }
type KmipserverArrayInput interface {
	pulumi.Input

	ToKmipserverArrayOutput() KmipserverArrayOutput
	ToKmipserverArrayOutputWithContext(context.Context) KmipserverArrayOutput
}

type KmipserverArray []KmipserverInput

func (KmipserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Kmipserver)(nil)).Elem()
}

func (i KmipserverArray) ToKmipserverArrayOutput() KmipserverArrayOutput {
	return i.ToKmipserverArrayOutputWithContext(context.Background())
}

func (i KmipserverArray) ToKmipserverArrayOutputWithContext(ctx context.Context) KmipserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmipserverArrayOutput)
}

// KmipserverMapInput is an input type that accepts KmipserverMap and KmipserverMapOutput values.
// You can construct a concrete instance of `KmipserverMapInput` via:
//
//	KmipserverMap{ "key": KmipserverArgs{...} }
type KmipserverMapInput interface {
	pulumi.Input

	ToKmipserverMapOutput() KmipserverMapOutput
	ToKmipserverMapOutputWithContext(context.Context) KmipserverMapOutput
}

type KmipserverMap map[string]KmipserverInput

func (KmipserverMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Kmipserver)(nil)).Elem()
}

func (i KmipserverMap) ToKmipserverMapOutput() KmipserverMapOutput {
	return i.ToKmipserverMapOutputWithContext(context.Background())
}

func (i KmipserverMap) ToKmipserverMapOutputWithContext(ctx context.Context) KmipserverMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmipserverMapOutput)
}

type KmipserverOutput struct{ *pulumi.OutputState }

func (KmipserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Kmipserver)(nil)).Elem()
}

func (o KmipserverOutput) ToKmipserverOutput() KmipserverOutput {
	return o
}

func (o KmipserverOutput) ToKmipserverOutputWithContext(ctx context.Context) KmipserverOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o KmipserverOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Kmipserver) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o KmipserverOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Kmipserver) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Specify outgoing interface to reach server.
func (o KmipserverOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Kmipserver) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o KmipserverOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Kmipserver) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// KMIP server entry name.
func (o KmipserverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Kmipserver) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Password to use for connectivity to the KMIP server.
func (o KmipserverOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Kmipserver) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Enable/disable KMIP server identity check (verify server FQDN/IP address against the server certificate). Valid values: `enable`, `disable`.
func (o KmipserverOutput) ServerIdentityCheck() pulumi.StringOutput {
	return o.ApplyT(func(v *Kmipserver) pulumi.StringOutput { return v.ServerIdentityCheck }).(pulumi.StringOutput)
}

// KMIP server list. The structure of `serverList` block is documented below.
func (o KmipserverOutput) ServerLists() KmipserverServerListArrayOutput {
	return o.ApplyT(func(v *Kmipserver) KmipserverServerListArrayOutput { return v.ServerLists }).(KmipserverServerListArrayOutput)
}

// FortiGate IP address to be used for communication with the KMIP server.
func (o KmipserverOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Kmipserver) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting).
func (o KmipserverOutput) SslMinProtoVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Kmipserver) pulumi.StringOutput { return v.SslMinProtoVersion }).(pulumi.StringOutput)
}

// User name to use for connectivity to the KMIP server.
func (o KmipserverOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *Kmipserver) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o KmipserverOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Kmipserver) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type KmipserverArrayOutput struct{ *pulumi.OutputState }

func (KmipserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Kmipserver)(nil)).Elem()
}

func (o KmipserverArrayOutput) ToKmipserverArrayOutput() KmipserverArrayOutput {
	return o
}

func (o KmipserverArrayOutput) ToKmipserverArrayOutputWithContext(ctx context.Context) KmipserverArrayOutput {
	return o
}

func (o KmipserverArrayOutput) Index(i pulumi.IntInput) KmipserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Kmipserver {
		return vs[0].([]*Kmipserver)[vs[1].(int)]
	}).(KmipserverOutput)
}

type KmipserverMapOutput struct{ *pulumi.OutputState }

func (KmipserverMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Kmipserver)(nil)).Elem()
}

func (o KmipserverMapOutput) ToKmipserverMapOutput() KmipserverMapOutput {
	return o
}

func (o KmipserverMapOutput) ToKmipserverMapOutputWithContext(ctx context.Context) KmipserverMapOutput {
	return o
}

func (o KmipserverMapOutput) MapIndex(k pulumi.StringInput) KmipserverOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Kmipserver {
		return vs[0].(map[string]*Kmipserver)[vs[1].(string)]
	}).(KmipserverOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KmipserverInput)(nil)).Elem(), &Kmipserver{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmipserverArrayInput)(nil)).Elem(), KmipserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmipserverMapInput)(nil)).Elem(), KmipserverMap{})
	pulumi.RegisterOutputType(KmipserverOutput{})
	pulumi.RegisterOutputType(KmipserverArrayOutput{})
	pulumi.RegisterOutputType(KmipserverMapOutput{})
}
