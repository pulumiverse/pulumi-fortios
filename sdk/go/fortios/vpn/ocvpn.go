// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure Overlay Controller VPN settings. Applies to FortiOS Version `6.2.4,6.2.6,6.4.0,6.4.1,6.4.2,6.4.10,6.4.11,6.4.12,6.4.13,6.4.14,7.0.0,7.0.1,7.0.2,7.0.3,7.0.4,7.0.5,7.0.6,7.0.7,7.0.8,7.0.9,7.0.10,7.0.11,7.0.12,7.0.13,7.2.0,7.2.1,7.2.2,7.2.3,7.2.4,7.2.6`.
//
// ## Import
//
// Vpn Ocvpn can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:vpn/ocvpn:Ocvpn labelname VpnOcvpn
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:vpn/ocvpn:Ocvpn labelname VpnOcvpn
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Ocvpn struct {
	pulumi.CustomResourceState

	// Enable/disable auto-discovery shortcuts. Valid values: `enable`, `disable`.
	AutoDiscovery pulumi.StringOutput `pulumi:"autoDiscovery"`
	// Control deletion of child short-cut tunnels when the parent tunnel goes down. Valid values: `independent`, `dependent`.
	AutoDiscoveryShortcutMode pulumi.StringOutput `pulumi:"autoDiscoveryShortcutMode"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable EAP client authentication. Valid values: `enable`, `disable`.
	Eap pulumi.StringOutput `pulumi:"eap"`
	// EAP authentication user group.
	EapUsers pulumi.StringOutput `pulumi:"eapUsers"`
	// Configure FortiClient settings. The structure of `forticlientAccess` block is documented below.
	ForticlientAccess OcvpnForticlientAccessOutput `pulumi:"forticlientAccess"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Class B subnet reserved for private IP address assignment.
	IpAllocationBlock pulumi.StringOutput `pulumi:"ipAllocationBlock"`
	// Enable/disable multipath redundancy. Valid values: `enable`, `disable`.
	Multipath pulumi.StringOutput `pulumi:"multipath"`
	// Enable/disable inter-overlay source NAT. Valid values: `enable`, `disable`.
	Nat pulumi.StringOutput `pulumi:"nat"`
	// Network overlays to register with Overlay Controller VPN service. The structure of `overlays` block is documented below.
	Overlays OcvpnOverlayArrayOutput `pulumi:"overlays"`
	// Overlay Controller VPN polling interval.
	PollInterval pulumi.IntOutput `pulumi:"pollInterval"`
	// Set device role. Valid values: `spoke`, `primary-hub`, `secondary-hub`.
	Role pulumi.StringOutput `pulumi:"role"`
	// Enable/disable adding OCVPN tunnels to SDWAN. Valid values: `enable`, `disable`.
	Sdwan pulumi.StringOutput `pulumi:"sdwan"`
	// Set SD-WAN zone.
	SdwanZone pulumi.StringOutput `pulumi:"sdwanZone"`
	// Enable/disable Overlay Controller cloud assisted VPN. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// FortiGate WAN interfaces to use with OCVPN. The structure of `wanInterface` block is documented below.
	WanInterfaces OcvpnWanInterfaceArrayOutput `pulumi:"wanInterfaces"`
}

// NewOcvpn registers a new resource with the given unique name, arguments, and options.
func NewOcvpn(ctx *pulumi.Context,
	name string, args *OcvpnArgs, opts ...pulumi.ResourceOption) (*Ocvpn, error) {
	if args == nil {
		args = &OcvpnArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ocvpn
	err := ctx.RegisterResource("fortios:vpn/ocvpn:Ocvpn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOcvpn gets an existing Ocvpn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOcvpn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OcvpnState, opts ...pulumi.ResourceOption) (*Ocvpn, error) {
	var resource Ocvpn
	err := ctx.ReadResource("fortios:vpn/ocvpn:Ocvpn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ocvpn resources.
type ocvpnState struct {
	// Enable/disable auto-discovery shortcuts. Valid values: `enable`, `disable`.
	AutoDiscovery *string `pulumi:"autoDiscovery"`
	// Control deletion of child short-cut tunnels when the parent tunnel goes down. Valid values: `independent`, `dependent`.
	AutoDiscoveryShortcutMode *string `pulumi:"autoDiscoveryShortcutMode"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable EAP client authentication. Valid values: `enable`, `disable`.
	Eap *string `pulumi:"eap"`
	// EAP authentication user group.
	EapUsers *string `pulumi:"eapUsers"`
	// Configure FortiClient settings. The structure of `forticlientAccess` block is documented below.
	ForticlientAccess *OcvpnForticlientAccess `pulumi:"forticlientAccess"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Class B subnet reserved for private IP address assignment.
	IpAllocationBlock *string `pulumi:"ipAllocationBlock"`
	// Enable/disable multipath redundancy. Valid values: `enable`, `disable`.
	Multipath *string `pulumi:"multipath"`
	// Enable/disable inter-overlay source NAT. Valid values: `enable`, `disable`.
	Nat *string `pulumi:"nat"`
	// Network overlays to register with Overlay Controller VPN service. The structure of `overlays` block is documented below.
	Overlays []OcvpnOverlay `pulumi:"overlays"`
	// Overlay Controller VPN polling interval.
	PollInterval *int `pulumi:"pollInterval"`
	// Set device role. Valid values: `spoke`, `primary-hub`, `secondary-hub`.
	Role *string `pulumi:"role"`
	// Enable/disable adding OCVPN tunnels to SDWAN. Valid values: `enable`, `disable`.
	Sdwan *string `pulumi:"sdwan"`
	// Set SD-WAN zone.
	SdwanZone *string `pulumi:"sdwanZone"`
	// Enable/disable Overlay Controller cloud assisted VPN. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// FortiGate WAN interfaces to use with OCVPN. The structure of `wanInterface` block is documented below.
	WanInterfaces []OcvpnWanInterface `pulumi:"wanInterfaces"`
}

type OcvpnState struct {
	// Enable/disable auto-discovery shortcuts. Valid values: `enable`, `disable`.
	AutoDiscovery pulumi.StringPtrInput
	// Control deletion of child short-cut tunnels when the parent tunnel goes down. Valid values: `independent`, `dependent`.
	AutoDiscoveryShortcutMode pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable EAP client authentication. Valid values: `enable`, `disable`.
	Eap pulumi.StringPtrInput
	// EAP authentication user group.
	EapUsers pulumi.StringPtrInput
	// Configure FortiClient settings. The structure of `forticlientAccess` block is documented below.
	ForticlientAccess OcvpnForticlientAccessPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Class B subnet reserved for private IP address assignment.
	IpAllocationBlock pulumi.StringPtrInput
	// Enable/disable multipath redundancy. Valid values: `enable`, `disable`.
	Multipath pulumi.StringPtrInput
	// Enable/disable inter-overlay source NAT. Valid values: `enable`, `disable`.
	Nat pulumi.StringPtrInput
	// Network overlays to register with Overlay Controller VPN service. The structure of `overlays` block is documented below.
	Overlays OcvpnOverlayArrayInput
	// Overlay Controller VPN polling interval.
	PollInterval pulumi.IntPtrInput
	// Set device role. Valid values: `spoke`, `primary-hub`, `secondary-hub`.
	Role pulumi.StringPtrInput
	// Enable/disable adding OCVPN tunnels to SDWAN. Valid values: `enable`, `disable`.
	Sdwan pulumi.StringPtrInput
	// Set SD-WAN zone.
	SdwanZone pulumi.StringPtrInput
	// Enable/disable Overlay Controller cloud assisted VPN. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// FortiGate WAN interfaces to use with OCVPN. The structure of `wanInterface` block is documented below.
	WanInterfaces OcvpnWanInterfaceArrayInput
}

func (OcvpnState) ElementType() reflect.Type {
	return reflect.TypeOf((*ocvpnState)(nil)).Elem()
}

type ocvpnArgs struct {
	// Enable/disable auto-discovery shortcuts. Valid values: `enable`, `disable`.
	AutoDiscovery *string `pulumi:"autoDiscovery"`
	// Control deletion of child short-cut tunnels when the parent tunnel goes down. Valid values: `independent`, `dependent`.
	AutoDiscoveryShortcutMode *string `pulumi:"autoDiscoveryShortcutMode"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable EAP client authentication. Valid values: `enable`, `disable`.
	Eap *string `pulumi:"eap"`
	// EAP authentication user group.
	EapUsers *string `pulumi:"eapUsers"`
	// Configure FortiClient settings. The structure of `forticlientAccess` block is documented below.
	ForticlientAccess *OcvpnForticlientAccess `pulumi:"forticlientAccess"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Class B subnet reserved for private IP address assignment.
	IpAllocationBlock *string `pulumi:"ipAllocationBlock"`
	// Enable/disable multipath redundancy. Valid values: `enable`, `disable`.
	Multipath *string `pulumi:"multipath"`
	// Enable/disable inter-overlay source NAT. Valid values: `enable`, `disable`.
	Nat *string `pulumi:"nat"`
	// Network overlays to register with Overlay Controller VPN service. The structure of `overlays` block is documented below.
	Overlays []OcvpnOverlay `pulumi:"overlays"`
	// Overlay Controller VPN polling interval.
	PollInterval *int `pulumi:"pollInterval"`
	// Set device role. Valid values: `spoke`, `primary-hub`, `secondary-hub`.
	Role *string `pulumi:"role"`
	// Enable/disable adding OCVPN tunnels to SDWAN. Valid values: `enable`, `disable`.
	Sdwan *string `pulumi:"sdwan"`
	// Set SD-WAN zone.
	SdwanZone *string `pulumi:"sdwanZone"`
	// Enable/disable Overlay Controller cloud assisted VPN. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// FortiGate WAN interfaces to use with OCVPN. The structure of `wanInterface` block is documented below.
	WanInterfaces []OcvpnWanInterface `pulumi:"wanInterfaces"`
}

// The set of arguments for constructing a Ocvpn resource.
type OcvpnArgs struct {
	// Enable/disable auto-discovery shortcuts. Valid values: `enable`, `disable`.
	AutoDiscovery pulumi.StringPtrInput
	// Control deletion of child short-cut tunnels when the parent tunnel goes down. Valid values: `independent`, `dependent`.
	AutoDiscoveryShortcutMode pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable EAP client authentication. Valid values: `enable`, `disable`.
	Eap pulumi.StringPtrInput
	// EAP authentication user group.
	EapUsers pulumi.StringPtrInput
	// Configure FortiClient settings. The structure of `forticlientAccess` block is documented below.
	ForticlientAccess OcvpnForticlientAccessPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Class B subnet reserved for private IP address assignment.
	IpAllocationBlock pulumi.StringPtrInput
	// Enable/disable multipath redundancy. Valid values: `enable`, `disable`.
	Multipath pulumi.StringPtrInput
	// Enable/disable inter-overlay source NAT. Valid values: `enable`, `disable`.
	Nat pulumi.StringPtrInput
	// Network overlays to register with Overlay Controller VPN service. The structure of `overlays` block is documented below.
	Overlays OcvpnOverlayArrayInput
	// Overlay Controller VPN polling interval.
	PollInterval pulumi.IntPtrInput
	// Set device role. Valid values: `spoke`, `primary-hub`, `secondary-hub`.
	Role pulumi.StringPtrInput
	// Enable/disable adding OCVPN tunnels to SDWAN. Valid values: `enable`, `disable`.
	Sdwan pulumi.StringPtrInput
	// Set SD-WAN zone.
	SdwanZone pulumi.StringPtrInput
	// Enable/disable Overlay Controller cloud assisted VPN. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// FortiGate WAN interfaces to use with OCVPN. The structure of `wanInterface` block is documented below.
	WanInterfaces OcvpnWanInterfaceArrayInput
}

func (OcvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ocvpnArgs)(nil)).Elem()
}

type OcvpnInput interface {
	pulumi.Input

	ToOcvpnOutput() OcvpnOutput
	ToOcvpnOutputWithContext(ctx context.Context) OcvpnOutput
}

func (*Ocvpn) ElementType() reflect.Type {
	return reflect.TypeOf((**Ocvpn)(nil)).Elem()
}

func (i *Ocvpn) ToOcvpnOutput() OcvpnOutput {
	return i.ToOcvpnOutputWithContext(context.Background())
}

func (i *Ocvpn) ToOcvpnOutputWithContext(ctx context.Context) OcvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OcvpnOutput)
}

// OcvpnArrayInput is an input type that accepts OcvpnArray and OcvpnArrayOutput values.
// You can construct a concrete instance of `OcvpnArrayInput` via:
//
//	OcvpnArray{ OcvpnArgs{...} }
type OcvpnArrayInput interface {
	pulumi.Input

	ToOcvpnArrayOutput() OcvpnArrayOutput
	ToOcvpnArrayOutputWithContext(context.Context) OcvpnArrayOutput
}

type OcvpnArray []OcvpnInput

func (OcvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ocvpn)(nil)).Elem()
}

func (i OcvpnArray) ToOcvpnArrayOutput() OcvpnArrayOutput {
	return i.ToOcvpnArrayOutputWithContext(context.Background())
}

func (i OcvpnArray) ToOcvpnArrayOutputWithContext(ctx context.Context) OcvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OcvpnArrayOutput)
}

// OcvpnMapInput is an input type that accepts OcvpnMap and OcvpnMapOutput values.
// You can construct a concrete instance of `OcvpnMapInput` via:
//
//	OcvpnMap{ "key": OcvpnArgs{...} }
type OcvpnMapInput interface {
	pulumi.Input

	ToOcvpnMapOutput() OcvpnMapOutput
	ToOcvpnMapOutputWithContext(context.Context) OcvpnMapOutput
}

type OcvpnMap map[string]OcvpnInput

func (OcvpnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ocvpn)(nil)).Elem()
}

func (i OcvpnMap) ToOcvpnMapOutput() OcvpnMapOutput {
	return i.ToOcvpnMapOutputWithContext(context.Background())
}

func (i OcvpnMap) ToOcvpnMapOutputWithContext(ctx context.Context) OcvpnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OcvpnMapOutput)
}

type OcvpnOutput struct{ *pulumi.OutputState }

func (OcvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ocvpn)(nil)).Elem()
}

func (o OcvpnOutput) ToOcvpnOutput() OcvpnOutput {
	return o
}

func (o OcvpnOutput) ToOcvpnOutputWithContext(ctx context.Context) OcvpnOutput {
	return o
}

// Enable/disable auto-discovery shortcuts. Valid values: `enable`, `disable`.
func (o OcvpnOutput) AutoDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringOutput { return v.AutoDiscovery }).(pulumi.StringOutput)
}

// Control deletion of child short-cut tunnels when the parent tunnel goes down. Valid values: `independent`, `dependent`.
func (o OcvpnOutput) AutoDiscoveryShortcutMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringOutput { return v.AutoDiscoveryShortcutMode }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o OcvpnOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable EAP client authentication. Valid values: `enable`, `disable`.
func (o OcvpnOutput) Eap() pulumi.StringOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringOutput { return v.Eap }).(pulumi.StringOutput)
}

// EAP authentication user group.
func (o OcvpnOutput) EapUsers() pulumi.StringOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringOutput { return v.EapUsers }).(pulumi.StringOutput)
}

// Configure FortiClient settings. The structure of `forticlientAccess` block is documented below.
func (o OcvpnOutput) ForticlientAccess() OcvpnForticlientAccessOutput {
	return o.ApplyT(func(v *Ocvpn) OcvpnForticlientAccessOutput { return v.ForticlientAccess }).(OcvpnForticlientAccessOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o OcvpnOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Class B subnet reserved for private IP address assignment.
func (o OcvpnOutput) IpAllocationBlock() pulumi.StringOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringOutput { return v.IpAllocationBlock }).(pulumi.StringOutput)
}

// Enable/disable multipath redundancy. Valid values: `enable`, `disable`.
func (o OcvpnOutput) Multipath() pulumi.StringOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringOutput { return v.Multipath }).(pulumi.StringOutput)
}

// Enable/disable inter-overlay source NAT. Valid values: `enable`, `disable`.
func (o OcvpnOutput) Nat() pulumi.StringOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringOutput { return v.Nat }).(pulumi.StringOutput)
}

// Network overlays to register with Overlay Controller VPN service. The structure of `overlays` block is documented below.
func (o OcvpnOutput) Overlays() OcvpnOverlayArrayOutput {
	return o.ApplyT(func(v *Ocvpn) OcvpnOverlayArrayOutput { return v.Overlays }).(OcvpnOverlayArrayOutput)
}

// Overlay Controller VPN polling interval.
func (o OcvpnOutput) PollInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.IntOutput { return v.PollInterval }).(pulumi.IntOutput)
}

// Set device role. Valid values: `spoke`, `primary-hub`, `secondary-hub`.
func (o OcvpnOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// Enable/disable adding OCVPN tunnels to SDWAN. Valid values: `enable`, `disable`.
func (o OcvpnOutput) Sdwan() pulumi.StringOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringOutput { return v.Sdwan }).(pulumi.StringOutput)
}

// Set SD-WAN zone.
func (o OcvpnOutput) SdwanZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringOutput { return v.SdwanZone }).(pulumi.StringOutput)
}

// Enable/disable Overlay Controller cloud assisted VPN. Valid values: `enable`, `disable`.
func (o OcvpnOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o OcvpnOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ocvpn) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// FortiGate WAN interfaces to use with OCVPN. The structure of `wanInterface` block is documented below.
func (o OcvpnOutput) WanInterfaces() OcvpnWanInterfaceArrayOutput {
	return o.ApplyT(func(v *Ocvpn) OcvpnWanInterfaceArrayOutput { return v.WanInterfaces }).(OcvpnWanInterfaceArrayOutput)
}

type OcvpnArrayOutput struct{ *pulumi.OutputState }

func (OcvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ocvpn)(nil)).Elem()
}

func (o OcvpnArrayOutput) ToOcvpnArrayOutput() OcvpnArrayOutput {
	return o
}

func (o OcvpnArrayOutput) ToOcvpnArrayOutputWithContext(ctx context.Context) OcvpnArrayOutput {
	return o
}

func (o OcvpnArrayOutput) Index(i pulumi.IntInput) OcvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ocvpn {
		return vs[0].([]*Ocvpn)[vs[1].(int)]
	}).(OcvpnOutput)
}

type OcvpnMapOutput struct{ *pulumi.OutputState }

func (OcvpnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ocvpn)(nil)).Elem()
}

func (o OcvpnMapOutput) ToOcvpnMapOutput() OcvpnMapOutput {
	return o
}

func (o OcvpnMapOutput) ToOcvpnMapOutputWithContext(ctx context.Context) OcvpnMapOutput {
	return o
}

func (o OcvpnMapOutput) MapIndex(k pulumi.StringInput) OcvpnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ocvpn {
		return vs[0].(map[string]*Ocvpn)[vs[1].(string)]
	}).(OcvpnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OcvpnInput)(nil)).Elem(), &Ocvpn{})
	pulumi.RegisterInputType(reflect.TypeOf((*OcvpnArrayInput)(nil)).Elem(), OcvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OcvpnMapInput)(nil)).Elem(), OcvpnMap{})
	pulumi.RegisterOutputType(OcvpnOutput{})
	pulumi.RegisterOutputType(OcvpnArrayOutput{})
	pulumi.RegisterOutputType(OcvpnMapOutput{})
}
