// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rule

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Show FMWP signatures. Applies to FortiOS Version `>= 7.4.2`.
//
// ## Import
//
// Rule Fmwp can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:rule/fmwp:Fmwp labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:rule/fmwp:Fmwp labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Fmwp struct {
	pulumi.CustomResourceState

	// Action. Valid values: `pass`, `block`.
	Action pulumi.StringOutput `pulumi:"action"`
	// Vulnerable applications.
	Application pulumi.StringOutput `pulumi:"application"`
	// Date.
	Date pulumi.IntOutput `pulumi:"date"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Group.
	Group pulumi.StringOutput `pulumi:"group"`
	// Vulnerable location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log pulumi.StringOutput `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringOutput `pulumi:"logPacket"`
	// Meta data. The structure of `metadata` block is documented below.
	Metadatas FmwpMetadataArrayOutput `pulumi:"metadatas"`
	// Rule name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Vulnerable operation systems.
	Os pulumi.StringOutput `pulumi:"os"`
	// Revision.
	Rev pulumi.IntOutput `pulumi:"rev"`
	// Rule ID.
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// Vulnerable service.
	Service pulumi.StringOutput `pulumi:"service"`
	// Severity.
	Severity pulumi.StringOutput `pulumi:"severity"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFmwp registers a new resource with the given unique name, arguments, and options.
func NewFmwp(ctx *pulumi.Context,
	name string, args *FmwpArgs, opts ...pulumi.ResourceOption) (*Fmwp, error) {
	if args == nil {
		args = &FmwpArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Fmwp
	err := ctx.RegisterResource("fortios:rule/fmwp:Fmwp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFmwp gets an existing Fmwp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFmwp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FmwpState, opts ...pulumi.ResourceOption) (*Fmwp, error) {
	var resource Fmwp
	err := ctx.ReadResource("fortios:rule/fmwp:Fmwp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Fmwp resources.
type fmwpState struct {
	// Action. Valid values: `pass`, `block`.
	Action *string `pulumi:"action"`
	// Vulnerable applications.
	Application *string `pulumi:"application"`
	// Date.
	Date *int `pulumi:"date"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Group.
	Group *string `pulumi:"group"`
	// Vulnerable location.
	Location *string `pulumi:"location"`
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log *string `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Meta data. The structure of `metadata` block is documented below.
	Metadatas []FmwpMetadata `pulumi:"metadatas"`
	// Rule name.
	Name *string `pulumi:"name"`
	// Vulnerable operation systems.
	Os *string `pulumi:"os"`
	// Revision.
	Rev *int `pulumi:"rev"`
	// Rule ID.
	RuleId *int `pulumi:"ruleId"`
	// Vulnerable service.
	Service *string `pulumi:"service"`
	// Severity.
	Severity *string `pulumi:"severity"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FmwpState struct {
	// Action. Valid values: `pass`, `block`.
	Action pulumi.StringPtrInput
	// Vulnerable applications.
	Application pulumi.StringPtrInput
	// Date.
	Date pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Group.
	Group pulumi.StringPtrInput
	// Vulnerable location.
	Location pulumi.StringPtrInput
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log pulumi.StringPtrInput
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput
	// Meta data. The structure of `metadata` block is documented below.
	Metadatas FmwpMetadataArrayInput
	// Rule name.
	Name pulumi.StringPtrInput
	// Vulnerable operation systems.
	Os pulumi.StringPtrInput
	// Revision.
	Rev pulumi.IntPtrInput
	// Rule ID.
	RuleId pulumi.IntPtrInput
	// Vulnerable service.
	Service pulumi.StringPtrInput
	// Severity.
	Severity pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FmwpState) ElementType() reflect.Type {
	return reflect.TypeOf((*fmwpState)(nil)).Elem()
}

type fmwpArgs struct {
	// Action. Valid values: `pass`, `block`.
	Action *string `pulumi:"action"`
	// Vulnerable applications.
	Application *string `pulumi:"application"`
	// Date.
	Date *int `pulumi:"date"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Group.
	Group *string `pulumi:"group"`
	// Vulnerable location.
	Location *string `pulumi:"location"`
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log *string `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Meta data. The structure of `metadata` block is documented below.
	Metadatas []FmwpMetadata `pulumi:"metadatas"`
	// Rule name.
	Name *string `pulumi:"name"`
	// Vulnerable operation systems.
	Os *string `pulumi:"os"`
	// Revision.
	Rev *int `pulumi:"rev"`
	// Rule ID.
	RuleId *int `pulumi:"ruleId"`
	// Vulnerable service.
	Service *string `pulumi:"service"`
	// Severity.
	Severity *string `pulumi:"severity"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Fmwp resource.
type FmwpArgs struct {
	// Action. Valid values: `pass`, `block`.
	Action pulumi.StringPtrInput
	// Vulnerable applications.
	Application pulumi.StringPtrInput
	// Date.
	Date pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Group.
	Group pulumi.StringPtrInput
	// Vulnerable location.
	Location pulumi.StringPtrInput
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log pulumi.StringPtrInput
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput
	// Meta data. The structure of `metadata` block is documented below.
	Metadatas FmwpMetadataArrayInput
	// Rule name.
	Name pulumi.StringPtrInput
	// Vulnerable operation systems.
	Os pulumi.StringPtrInput
	// Revision.
	Rev pulumi.IntPtrInput
	// Rule ID.
	RuleId pulumi.IntPtrInput
	// Vulnerable service.
	Service pulumi.StringPtrInput
	// Severity.
	Severity pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FmwpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fmwpArgs)(nil)).Elem()
}

type FmwpInput interface {
	pulumi.Input

	ToFmwpOutput() FmwpOutput
	ToFmwpOutputWithContext(ctx context.Context) FmwpOutput
}

func (*Fmwp) ElementType() reflect.Type {
	return reflect.TypeOf((**Fmwp)(nil)).Elem()
}

func (i *Fmwp) ToFmwpOutput() FmwpOutput {
	return i.ToFmwpOutputWithContext(context.Background())
}

func (i *Fmwp) ToFmwpOutputWithContext(ctx context.Context) FmwpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmwpOutput)
}

// FmwpArrayInput is an input type that accepts FmwpArray and FmwpArrayOutput values.
// You can construct a concrete instance of `FmwpArrayInput` via:
//
//	FmwpArray{ FmwpArgs{...} }
type FmwpArrayInput interface {
	pulumi.Input

	ToFmwpArrayOutput() FmwpArrayOutput
	ToFmwpArrayOutputWithContext(context.Context) FmwpArrayOutput
}

type FmwpArray []FmwpInput

func (FmwpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fmwp)(nil)).Elem()
}

func (i FmwpArray) ToFmwpArrayOutput() FmwpArrayOutput {
	return i.ToFmwpArrayOutputWithContext(context.Background())
}

func (i FmwpArray) ToFmwpArrayOutputWithContext(ctx context.Context) FmwpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmwpArrayOutput)
}

// FmwpMapInput is an input type that accepts FmwpMap and FmwpMapOutput values.
// You can construct a concrete instance of `FmwpMapInput` via:
//
//	FmwpMap{ "key": FmwpArgs{...} }
type FmwpMapInput interface {
	pulumi.Input

	ToFmwpMapOutput() FmwpMapOutput
	ToFmwpMapOutputWithContext(context.Context) FmwpMapOutput
}

type FmwpMap map[string]FmwpInput

func (FmwpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fmwp)(nil)).Elem()
}

func (i FmwpMap) ToFmwpMapOutput() FmwpMapOutput {
	return i.ToFmwpMapOutputWithContext(context.Background())
}

func (i FmwpMap) ToFmwpMapOutputWithContext(ctx context.Context) FmwpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmwpMapOutput)
}

type FmwpOutput struct{ *pulumi.OutputState }

func (FmwpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Fmwp)(nil)).Elem()
}

func (o FmwpOutput) ToFmwpOutput() FmwpOutput {
	return o
}

func (o FmwpOutput) ToFmwpOutputWithContext(ctx context.Context) FmwpOutput {
	return o
}

// Action. Valid values: `pass`, `block`.
func (o FmwpOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Vulnerable applications.
func (o FmwpOutput) Application() pulumi.StringOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringOutput { return v.Application }).(pulumi.StringOutput)
}

// Date.
func (o FmwpOutput) Date() pulumi.IntOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.IntOutput { return v.Date }).(pulumi.IntOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o FmwpOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o FmwpOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Group.
func (o FmwpOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringOutput { return v.Group }).(pulumi.StringOutput)
}

// Vulnerable location.
func (o FmwpOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Enable/disable logging. Valid values: `disable`, `enable`.
func (o FmwpOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringOutput { return v.Log }).(pulumi.StringOutput)
}

// Enable/disable packet logging. Valid values: `disable`, `enable`.
func (o FmwpOutput) LogPacket() pulumi.StringOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringOutput { return v.LogPacket }).(pulumi.StringOutput)
}

// Meta data. The structure of `metadata` block is documented below.
func (o FmwpOutput) Metadatas() FmwpMetadataArrayOutput {
	return o.ApplyT(func(v *Fmwp) FmwpMetadataArrayOutput { return v.Metadatas }).(FmwpMetadataArrayOutput)
}

// Rule name.
func (o FmwpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Vulnerable operation systems.
func (o FmwpOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringOutput { return v.Os }).(pulumi.StringOutput)
}

// Revision.
func (o FmwpOutput) Rev() pulumi.IntOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.IntOutput { return v.Rev }).(pulumi.IntOutput)
}

// Rule ID.
func (o FmwpOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// Vulnerable service.
func (o FmwpOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

// Severity.
func (o FmwpOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FmwpOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fmwp) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FmwpArrayOutput struct{ *pulumi.OutputState }

func (FmwpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fmwp)(nil)).Elem()
}

func (o FmwpArrayOutput) ToFmwpArrayOutput() FmwpArrayOutput {
	return o
}

func (o FmwpArrayOutput) ToFmwpArrayOutputWithContext(ctx context.Context) FmwpArrayOutput {
	return o
}

func (o FmwpArrayOutput) Index(i pulumi.IntInput) FmwpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Fmwp {
		return vs[0].([]*Fmwp)[vs[1].(int)]
	}).(FmwpOutput)
}

type FmwpMapOutput struct{ *pulumi.OutputState }

func (FmwpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fmwp)(nil)).Elem()
}

func (o FmwpMapOutput) ToFmwpMapOutput() FmwpMapOutput {
	return o
}

func (o FmwpMapOutput) ToFmwpMapOutputWithContext(ctx context.Context) FmwpMapOutput {
	return o
}

func (o FmwpMapOutput) MapIndex(k pulumi.StringInput) FmwpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Fmwp {
		return vs[0].(map[string]*Fmwp)[vs[1].(string)]
	}).(FmwpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FmwpInput)(nil)).Elem(), &Fmwp{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmwpArrayInput)(nil)).Elem(), FmwpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmwpMapInput)(nil)).Elem(), FmwpMap{})
	pulumi.RegisterOutputType(FmwpOutput{})
	pulumi.RegisterOutputType(FmwpArrayOutput{})
	pulumi.RegisterOutputType(FmwpMapOutput{})
}
