// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rule

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Show OT patch signatures. Applies to FortiOS Version `>= 7.4.1`.
//
// ## Import
//
// Rule Otvp can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:rule/otvp:Otvp labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:rule/otvp:Otvp labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Otvp struct {
	pulumi.CustomResourceState

	// Action. Valid values: `pass`, `block`.
	Action pulumi.StringOutput `pulumi:"action"`
	// Vulnerable applications.
	Application pulumi.StringOutput `pulumi:"application"`
	// Date.
	Date pulumi.IntOutput `pulumi:"date"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Group.
	Group pulumi.StringOutput `pulumi:"group"`
	// Vulnerable location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log pulumi.StringOutput `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringOutput `pulumi:"logPacket"`
	// Meta data. The structure of `metadata` block is documented below.
	Metadatas OtvpMetadataArrayOutput `pulumi:"metadatas"`
	// Rule name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Vulnerable operation systems.
	Os pulumi.StringOutput `pulumi:"os"`
	// Revision.
	Rev pulumi.IntOutput `pulumi:"rev"`
	// Rule ID.
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// Vulnerable service.
	Service pulumi.StringOutput `pulumi:"service"`
	// Severity.
	Severity pulumi.StringOutput `pulumi:"severity"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewOtvp registers a new resource with the given unique name, arguments, and options.
func NewOtvp(ctx *pulumi.Context,
	name string, args *OtvpArgs, opts ...pulumi.ResourceOption) (*Otvp, error) {
	if args == nil {
		args = &OtvpArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Otvp
	err := ctx.RegisterResource("fortios:rule/otvp:Otvp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOtvp gets an existing Otvp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOtvp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OtvpState, opts ...pulumi.ResourceOption) (*Otvp, error) {
	var resource Otvp
	err := ctx.ReadResource("fortios:rule/otvp:Otvp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Otvp resources.
type otvpState struct {
	// Action. Valid values: `pass`, `block`.
	Action *string `pulumi:"action"`
	// Vulnerable applications.
	Application *string `pulumi:"application"`
	// Date.
	Date *int `pulumi:"date"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Group.
	Group *string `pulumi:"group"`
	// Vulnerable location.
	Location *string `pulumi:"location"`
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log *string `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Meta data. The structure of `metadata` block is documented below.
	Metadatas []OtvpMetadata `pulumi:"metadatas"`
	// Rule name.
	Name *string `pulumi:"name"`
	// Vulnerable operation systems.
	Os *string `pulumi:"os"`
	// Revision.
	Rev *int `pulumi:"rev"`
	// Rule ID.
	RuleId *int `pulumi:"ruleId"`
	// Vulnerable service.
	Service *string `pulumi:"service"`
	// Severity.
	Severity *string `pulumi:"severity"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type OtvpState struct {
	// Action. Valid values: `pass`, `block`.
	Action pulumi.StringPtrInput
	// Vulnerable applications.
	Application pulumi.StringPtrInput
	// Date.
	Date pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Group.
	Group pulumi.StringPtrInput
	// Vulnerable location.
	Location pulumi.StringPtrInput
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log pulumi.StringPtrInput
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput
	// Meta data. The structure of `metadata` block is documented below.
	Metadatas OtvpMetadataArrayInput
	// Rule name.
	Name pulumi.StringPtrInput
	// Vulnerable operation systems.
	Os pulumi.StringPtrInput
	// Revision.
	Rev pulumi.IntPtrInput
	// Rule ID.
	RuleId pulumi.IntPtrInput
	// Vulnerable service.
	Service pulumi.StringPtrInput
	// Severity.
	Severity pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (OtvpState) ElementType() reflect.Type {
	return reflect.TypeOf((*otvpState)(nil)).Elem()
}

type otvpArgs struct {
	// Action. Valid values: `pass`, `block`.
	Action *string `pulumi:"action"`
	// Vulnerable applications.
	Application *string `pulumi:"application"`
	// Date.
	Date *int `pulumi:"date"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Group.
	Group *string `pulumi:"group"`
	// Vulnerable location.
	Location *string `pulumi:"location"`
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log *string `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Meta data. The structure of `metadata` block is documented below.
	Metadatas []OtvpMetadata `pulumi:"metadatas"`
	// Rule name.
	Name *string `pulumi:"name"`
	// Vulnerable operation systems.
	Os *string `pulumi:"os"`
	// Revision.
	Rev *int `pulumi:"rev"`
	// Rule ID.
	RuleId *int `pulumi:"ruleId"`
	// Vulnerable service.
	Service *string `pulumi:"service"`
	// Severity.
	Severity *string `pulumi:"severity"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Otvp resource.
type OtvpArgs struct {
	// Action. Valid values: `pass`, `block`.
	Action pulumi.StringPtrInput
	// Vulnerable applications.
	Application pulumi.StringPtrInput
	// Date.
	Date pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Group.
	Group pulumi.StringPtrInput
	// Vulnerable location.
	Location pulumi.StringPtrInput
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log pulumi.StringPtrInput
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput
	// Meta data. The structure of `metadata` block is documented below.
	Metadatas OtvpMetadataArrayInput
	// Rule name.
	Name pulumi.StringPtrInput
	// Vulnerable operation systems.
	Os pulumi.StringPtrInput
	// Revision.
	Rev pulumi.IntPtrInput
	// Rule ID.
	RuleId pulumi.IntPtrInput
	// Vulnerable service.
	Service pulumi.StringPtrInput
	// Severity.
	Severity pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (OtvpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*otvpArgs)(nil)).Elem()
}

type OtvpInput interface {
	pulumi.Input

	ToOtvpOutput() OtvpOutput
	ToOtvpOutputWithContext(ctx context.Context) OtvpOutput
}

func (*Otvp) ElementType() reflect.Type {
	return reflect.TypeOf((**Otvp)(nil)).Elem()
}

func (i *Otvp) ToOtvpOutput() OtvpOutput {
	return i.ToOtvpOutputWithContext(context.Background())
}

func (i *Otvp) ToOtvpOutputWithContext(ctx context.Context) OtvpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OtvpOutput)
}

// OtvpArrayInput is an input type that accepts OtvpArray and OtvpArrayOutput values.
// You can construct a concrete instance of `OtvpArrayInput` via:
//
//	OtvpArray{ OtvpArgs{...} }
type OtvpArrayInput interface {
	pulumi.Input

	ToOtvpArrayOutput() OtvpArrayOutput
	ToOtvpArrayOutputWithContext(context.Context) OtvpArrayOutput
}

type OtvpArray []OtvpInput

func (OtvpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Otvp)(nil)).Elem()
}

func (i OtvpArray) ToOtvpArrayOutput() OtvpArrayOutput {
	return i.ToOtvpArrayOutputWithContext(context.Background())
}

func (i OtvpArray) ToOtvpArrayOutputWithContext(ctx context.Context) OtvpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OtvpArrayOutput)
}

// OtvpMapInput is an input type that accepts OtvpMap and OtvpMapOutput values.
// You can construct a concrete instance of `OtvpMapInput` via:
//
//	OtvpMap{ "key": OtvpArgs{...} }
type OtvpMapInput interface {
	pulumi.Input

	ToOtvpMapOutput() OtvpMapOutput
	ToOtvpMapOutputWithContext(context.Context) OtvpMapOutput
}

type OtvpMap map[string]OtvpInput

func (OtvpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Otvp)(nil)).Elem()
}

func (i OtvpMap) ToOtvpMapOutput() OtvpMapOutput {
	return i.ToOtvpMapOutputWithContext(context.Background())
}

func (i OtvpMap) ToOtvpMapOutputWithContext(ctx context.Context) OtvpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OtvpMapOutput)
}

type OtvpOutput struct{ *pulumi.OutputState }

func (OtvpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Otvp)(nil)).Elem()
}

func (o OtvpOutput) ToOtvpOutput() OtvpOutput {
	return o
}

func (o OtvpOutput) ToOtvpOutputWithContext(ctx context.Context) OtvpOutput {
	return o
}

// Action. Valid values: `pass`, `block`.
func (o OtvpOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Vulnerable applications.
func (o OtvpOutput) Application() pulumi.StringOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringOutput { return v.Application }).(pulumi.StringOutput)
}

// Date.
func (o OtvpOutput) Date() pulumi.IntOutput {
	return o.ApplyT(func(v *Otvp) pulumi.IntOutput { return v.Date }).(pulumi.IntOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o OtvpOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o OtvpOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Group.
func (o OtvpOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringOutput { return v.Group }).(pulumi.StringOutput)
}

// Vulnerable location.
func (o OtvpOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Enable/disable logging. Valid values: `disable`, `enable`.
func (o OtvpOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringOutput { return v.Log }).(pulumi.StringOutput)
}

// Enable/disable packet logging. Valid values: `disable`, `enable`.
func (o OtvpOutput) LogPacket() pulumi.StringOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringOutput { return v.LogPacket }).(pulumi.StringOutput)
}

// Meta data. The structure of `metadata` block is documented below.
func (o OtvpOutput) Metadatas() OtvpMetadataArrayOutput {
	return o.ApplyT(func(v *Otvp) OtvpMetadataArrayOutput { return v.Metadatas }).(OtvpMetadataArrayOutput)
}

// Rule name.
func (o OtvpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Vulnerable operation systems.
func (o OtvpOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringOutput { return v.Os }).(pulumi.StringOutput)
}

// Revision.
func (o OtvpOutput) Rev() pulumi.IntOutput {
	return o.ApplyT(func(v *Otvp) pulumi.IntOutput { return v.Rev }).(pulumi.IntOutput)
}

// Rule ID.
func (o OtvpOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *Otvp) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// Vulnerable service.
func (o OtvpOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

// Severity.
func (o OtvpOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o OtvpOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Otvp) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type OtvpArrayOutput struct{ *pulumi.OutputState }

func (OtvpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Otvp)(nil)).Elem()
}

func (o OtvpArrayOutput) ToOtvpArrayOutput() OtvpArrayOutput {
	return o
}

func (o OtvpArrayOutput) ToOtvpArrayOutputWithContext(ctx context.Context) OtvpArrayOutput {
	return o
}

func (o OtvpArrayOutput) Index(i pulumi.IntInput) OtvpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Otvp {
		return vs[0].([]*Otvp)[vs[1].(int)]
	}).(OtvpOutput)
}

type OtvpMapOutput struct{ *pulumi.OutputState }

func (OtvpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Otvp)(nil)).Elem()
}

func (o OtvpMapOutput) ToOtvpMapOutput() OtvpMapOutput {
	return o
}

func (o OtvpMapOutput) ToOtvpMapOutputWithContext(ctx context.Context) OtvpMapOutput {
	return o
}

func (o OtvpMapOutput) MapIndex(k pulumi.StringInput) OtvpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Otvp {
		return vs[0].(map[string]*Otvp)[vs[1].(string)]
	}).(OtvpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OtvpInput)(nil)).Elem(), &Otvp{})
	pulumi.RegisterInputType(reflect.TypeOf((*OtvpArrayInput)(nil)).Elem(), OtvpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OtvpMapInput)(nil)).Elem(), OtvpMap{})
	pulumi.RegisterOutputType(OtvpOutput{})
	pulumi.RegisterOutputType(OtvpArrayOutput{})
	pulumi.RegisterOutputType(OtvpMapOutput{})
}
