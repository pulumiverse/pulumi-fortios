// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webproxy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure debug URL addresses.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/webproxy"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := webproxy.NewDebugurl(ctx, "trname", &webproxy.DebugurlArgs{
//				Exact:      pulumi.String("enable"),
//				Status:     pulumi.String("enable"),
//				UrlPattern: pulumi.String("/examples/servlet/*Servlet"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WebProxy DebugUrl can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:webproxy/debugurl:Debugurl labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:webproxy/debugurl:Debugurl labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Debugurl struct {
	pulumi.CustomResourceState

	// Enable/disable matching the exact path. Valid values: `enable`, `disable`.
	Exact pulumi.StringOutput `pulumi:"exact"`
	// Debug URL name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable this URL exemption. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// URL exemption pattern.
	UrlPattern pulumi.StringOutput `pulumi:"urlPattern"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewDebugurl registers a new resource with the given unique name, arguments, and options.
func NewDebugurl(ctx *pulumi.Context,
	name string, args *DebugurlArgs, opts ...pulumi.ResourceOption) (*Debugurl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UrlPattern == nil {
		return nil, errors.New("invalid value for required argument 'UrlPattern'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Debugurl
	err := ctx.RegisterResource("fortios:webproxy/debugurl:Debugurl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDebugurl gets an existing Debugurl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDebugurl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DebugurlState, opts ...pulumi.ResourceOption) (*Debugurl, error) {
	var resource Debugurl
	err := ctx.ReadResource("fortios:webproxy/debugurl:Debugurl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Debugurl resources.
type debugurlState struct {
	// Enable/disable matching the exact path. Valid values: `enable`, `disable`.
	Exact *string `pulumi:"exact"`
	// Debug URL name.
	Name *string `pulumi:"name"`
	// Enable/disable this URL exemption. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// URL exemption pattern.
	UrlPattern *string `pulumi:"urlPattern"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type DebugurlState struct {
	// Enable/disable matching the exact path. Valid values: `enable`, `disable`.
	Exact pulumi.StringPtrInput
	// Debug URL name.
	Name pulumi.StringPtrInput
	// Enable/disable this URL exemption. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// URL exemption pattern.
	UrlPattern pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (DebugurlState) ElementType() reflect.Type {
	return reflect.TypeOf((*debugurlState)(nil)).Elem()
}

type debugurlArgs struct {
	// Enable/disable matching the exact path. Valid values: `enable`, `disable`.
	Exact *string `pulumi:"exact"`
	// Debug URL name.
	Name *string `pulumi:"name"`
	// Enable/disable this URL exemption. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// URL exemption pattern.
	UrlPattern string `pulumi:"urlPattern"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Debugurl resource.
type DebugurlArgs struct {
	// Enable/disable matching the exact path. Valid values: `enable`, `disable`.
	Exact pulumi.StringPtrInput
	// Debug URL name.
	Name pulumi.StringPtrInput
	// Enable/disable this URL exemption. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// URL exemption pattern.
	UrlPattern pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (DebugurlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*debugurlArgs)(nil)).Elem()
}

type DebugurlInput interface {
	pulumi.Input

	ToDebugurlOutput() DebugurlOutput
	ToDebugurlOutputWithContext(ctx context.Context) DebugurlOutput
}

func (*Debugurl) ElementType() reflect.Type {
	return reflect.TypeOf((**Debugurl)(nil)).Elem()
}

func (i *Debugurl) ToDebugurlOutput() DebugurlOutput {
	return i.ToDebugurlOutputWithContext(context.Background())
}

func (i *Debugurl) ToDebugurlOutputWithContext(ctx context.Context) DebugurlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DebugurlOutput)
}

// DebugurlArrayInput is an input type that accepts DebugurlArray and DebugurlArrayOutput values.
// You can construct a concrete instance of `DebugurlArrayInput` via:
//
//	DebugurlArray{ DebugurlArgs{...} }
type DebugurlArrayInput interface {
	pulumi.Input

	ToDebugurlArrayOutput() DebugurlArrayOutput
	ToDebugurlArrayOutputWithContext(context.Context) DebugurlArrayOutput
}

type DebugurlArray []DebugurlInput

func (DebugurlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Debugurl)(nil)).Elem()
}

func (i DebugurlArray) ToDebugurlArrayOutput() DebugurlArrayOutput {
	return i.ToDebugurlArrayOutputWithContext(context.Background())
}

func (i DebugurlArray) ToDebugurlArrayOutputWithContext(ctx context.Context) DebugurlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DebugurlArrayOutput)
}

// DebugurlMapInput is an input type that accepts DebugurlMap and DebugurlMapOutput values.
// You can construct a concrete instance of `DebugurlMapInput` via:
//
//	DebugurlMap{ "key": DebugurlArgs{...} }
type DebugurlMapInput interface {
	pulumi.Input

	ToDebugurlMapOutput() DebugurlMapOutput
	ToDebugurlMapOutputWithContext(context.Context) DebugurlMapOutput
}

type DebugurlMap map[string]DebugurlInput

func (DebugurlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Debugurl)(nil)).Elem()
}

func (i DebugurlMap) ToDebugurlMapOutput() DebugurlMapOutput {
	return i.ToDebugurlMapOutputWithContext(context.Background())
}

func (i DebugurlMap) ToDebugurlMapOutputWithContext(ctx context.Context) DebugurlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DebugurlMapOutput)
}

type DebugurlOutput struct{ *pulumi.OutputState }

func (DebugurlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Debugurl)(nil)).Elem()
}

func (o DebugurlOutput) ToDebugurlOutput() DebugurlOutput {
	return o
}

func (o DebugurlOutput) ToDebugurlOutputWithContext(ctx context.Context) DebugurlOutput {
	return o
}

// Enable/disable matching the exact path. Valid values: `enable`, `disable`.
func (o DebugurlOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v *Debugurl) pulumi.StringOutput { return v.Exact }).(pulumi.StringOutput)
}

// Debug URL name.
func (o DebugurlOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Debugurl) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable this URL exemption. Valid values: `enable`, `disable`.
func (o DebugurlOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Debugurl) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// URL exemption pattern.
func (o DebugurlOutput) UrlPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *Debugurl) pulumi.StringOutput { return v.UrlPattern }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o DebugurlOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Debugurl) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type DebugurlArrayOutput struct{ *pulumi.OutputState }

func (DebugurlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Debugurl)(nil)).Elem()
}

func (o DebugurlArrayOutput) ToDebugurlArrayOutput() DebugurlArrayOutput {
	return o
}

func (o DebugurlArrayOutput) ToDebugurlArrayOutputWithContext(ctx context.Context) DebugurlArrayOutput {
	return o
}

func (o DebugurlArrayOutput) Index(i pulumi.IntInput) DebugurlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Debugurl {
		return vs[0].([]*Debugurl)[vs[1].(int)]
	}).(DebugurlOutput)
}

type DebugurlMapOutput struct{ *pulumi.OutputState }

func (DebugurlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Debugurl)(nil)).Elem()
}

func (o DebugurlMapOutput) ToDebugurlMapOutput() DebugurlMapOutput {
	return o
}

func (o DebugurlMapOutput) ToDebugurlMapOutputWithContext(ctx context.Context) DebugurlMapOutput {
	return o
}

func (o DebugurlMapOutput) MapIndex(k pulumi.StringInput) DebugurlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Debugurl {
		return vs[0].(map[string]*Debugurl)[vs[1].(string)]
	}).(DebugurlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DebugurlInput)(nil)).Elem(), &Debugurl{})
	pulumi.RegisterInputType(reflect.TypeOf((*DebugurlArrayInput)(nil)).Elem(), DebugurlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DebugurlMapInput)(nil)).Elem(), DebugurlMap{})
	pulumi.RegisterOutputType(DebugurlOutput{})
	pulumi.RegisterOutputType(DebugurlArrayOutput{})
	pulumi.RegisterOutputType(DebugurlMapOutput{})
}
