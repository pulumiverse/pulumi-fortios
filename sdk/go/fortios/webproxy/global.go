// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webproxy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure Web proxy global settings.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/webproxy"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := webproxy.NewGlobal(ctx, "trname", &webproxy.GlobalArgs{
//				FastPolicyMatch:              pulumi.String("enable"),
//				ForwardProxyAuth:             pulumi.String("disable"),
//				ForwardServerAffinityTimeout: pulumi.Int(30),
//				LearnClientIp:                pulumi.String("disable"),
//				MaxMessageLength:             pulumi.Int(32),
//				MaxRequestLength:             pulumi.Int(4),
//				MaxWafBodyCacheLength:        pulumi.Int(32),
//				ProxyFqdn:                    pulumi.String("default.fqdn"),
//				SslCaCert:                    pulumi.String("Fortinet_CA_SSL"),
//				SslCert:                      pulumi.String("Fortinet_Factory"),
//				StrictWebCheck:               pulumi.String("disable"),
//				TunnelNonHttp:                pulumi.String("enable"),
//				UnknownHttpVersion:           pulumi.String("best-effort"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// WebProxy Global can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:webproxy/global:Global labelname WebProxyGlobal
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:webproxy/global:Global labelname WebProxyGlobal
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Global struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
	FastPolicyMatch pulumi.StringOutput `pulumi:"fastPolicyMatch"`
	// Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
	ForwardProxyAuth pulumi.StringOutput `pulumi:"forwardProxyAuth"`
	// Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
	ForwardServerAffinityTimeout pulumi.IntOutput `pulumi:"forwardServerAffinityTimeout"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
	LdapUserCache pulumi.StringOutput `pulumi:"ldapUserCache"`
	// Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
	LearnClientIp pulumi.StringOutput `pulumi:"learnClientIp"`
	// Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
	LearnClientIpFromHeader pulumi.StringOutput `pulumi:"learnClientIpFromHeader"`
	// IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
	LearnClientIpSrcaddr6s GlobalLearnClientIpSrcaddr6ArrayOutput `pulumi:"learnClientIpSrcaddr6s"`
	// Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
	LearnClientIpSrcaddrs GlobalLearnClientIpSrcaddrArrayOutput `pulumi:"learnClientIpSrcaddrs"`
	// Enable/disable always log application type in traffic log. Valid values: `enable`, `disable`.
	LogAppId pulumi.StringOutput `pulumi:"logAppId"`
	// Enable/disable forward server name logging in forward traffic log. Valid values: `enable`, `disable`.
	LogForwardServer pulumi.StringOutput `pulumi:"logForwardServer"`
	// Enable/disable logging sessions that are pending on policy matching. Valid values: `enable`, `disable`.
	LogPolicyPending pulumi.StringOutput `pulumi:"logPolicyPending"`
	// Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
	MaxMessageLength pulumi.IntOutput `pulumi:"maxMessageLength"`
	// Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
	MaxRequestLength pulumi.IntOutput `pulumi:"maxRequestLength"`
	// Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
	MaxWafBodyCacheLength pulumi.IntOutput `pulumi:"maxWafBodyCacheLength"`
	// Enable/disable deep inspection for application level category policy matching. Valid values: `enable`, `disable`.
	PolicyCategoryDeepInspect pulumi.StringOutput `pulumi:"policyCategoryDeepInspect"`
	// Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
	ProxyFqdn pulumi.StringOutput `pulumi:"proxyFqdn"`
	// IPv4 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr pulumi.StringOutput `pulumi:"srcAffinityExemptAddr"`
	// IPv6 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr6 pulumi.StringOutput `pulumi:"srcAffinityExemptAddr6"`
	// SSL CA certificate for SSL interception.
	SslCaCert pulumi.StringOutput `pulumi:"sslCaCert"`
	// SSL certificate for SSL interception.
	SslCert pulumi.StringOutput `pulumi:"sslCert"`
	// Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
	StrictWebCheck pulumi.StringOutput `pulumi:"strictWebCheck"`
	// Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
	TunnelNonHttp pulumi.StringOutput `pulumi:"tunnelNonHttp"`
	// Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion pulumi.StringOutput `pulumi:"unknownHttpVersion"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
	WebproxyProfile pulumi.StringOutput `pulumi:"webproxyProfile"`
}

// NewGlobal registers a new resource with the given unique name, arguments, and options.
func NewGlobal(ctx *pulumi.Context,
	name string, args *GlobalArgs, opts ...pulumi.ResourceOption) (*Global, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProxyFqdn == nil {
		return nil, errors.New("invalid value for required argument 'ProxyFqdn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Global
	err := ctx.RegisterResource("fortios:webproxy/global:Global", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobal gets an existing Global resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalState, opts ...pulumi.ResourceOption) (*Global, error) {
	var resource Global
	err := ctx.ReadResource("fortios:webproxy/global:Global", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Global resources.
type globalState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
	FastPolicyMatch *string `pulumi:"fastPolicyMatch"`
	// Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
	ForwardProxyAuth *string `pulumi:"forwardProxyAuth"`
	// Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
	ForwardServerAffinityTimeout *int `pulumi:"forwardServerAffinityTimeout"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
	LdapUserCache *string `pulumi:"ldapUserCache"`
	// Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
	LearnClientIp *string `pulumi:"learnClientIp"`
	// Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
	LearnClientIpFromHeader *string `pulumi:"learnClientIpFromHeader"`
	// IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
	LearnClientIpSrcaddr6s []GlobalLearnClientIpSrcaddr6 `pulumi:"learnClientIpSrcaddr6s"`
	// Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
	LearnClientIpSrcaddrs []GlobalLearnClientIpSrcaddr `pulumi:"learnClientIpSrcaddrs"`
	// Enable/disable always log application type in traffic log. Valid values: `enable`, `disable`.
	LogAppId *string `pulumi:"logAppId"`
	// Enable/disable forward server name logging in forward traffic log. Valid values: `enable`, `disable`.
	LogForwardServer *string `pulumi:"logForwardServer"`
	// Enable/disable logging sessions that are pending on policy matching. Valid values: `enable`, `disable`.
	LogPolicyPending *string `pulumi:"logPolicyPending"`
	// Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
	MaxMessageLength *int `pulumi:"maxMessageLength"`
	// Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
	MaxRequestLength *int `pulumi:"maxRequestLength"`
	// Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
	MaxWafBodyCacheLength *int `pulumi:"maxWafBodyCacheLength"`
	// Enable/disable deep inspection for application level category policy matching. Valid values: `enable`, `disable`.
	PolicyCategoryDeepInspect *string `pulumi:"policyCategoryDeepInspect"`
	// Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
	ProxyFqdn *string `pulumi:"proxyFqdn"`
	// IPv4 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr *string `pulumi:"srcAffinityExemptAddr"`
	// IPv6 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr6 *string `pulumi:"srcAffinityExemptAddr6"`
	// SSL CA certificate for SSL interception.
	SslCaCert *string `pulumi:"sslCaCert"`
	// SSL certificate for SSL interception.
	SslCert *string `pulumi:"sslCert"`
	// Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
	StrictWebCheck *string `pulumi:"strictWebCheck"`
	// Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
	TunnelNonHttp *string `pulumi:"tunnelNonHttp"`
	// Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion *string `pulumi:"unknownHttpVersion"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
	WebproxyProfile *string `pulumi:"webproxyProfile"`
}

type GlobalState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
	FastPolicyMatch pulumi.StringPtrInput
	// Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
	ForwardProxyAuth pulumi.StringPtrInput
	// Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
	ForwardServerAffinityTimeout pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
	LdapUserCache pulumi.StringPtrInput
	// Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
	LearnClientIp pulumi.StringPtrInput
	// Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
	LearnClientIpFromHeader pulumi.StringPtrInput
	// IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
	LearnClientIpSrcaddr6s GlobalLearnClientIpSrcaddr6ArrayInput
	// Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
	LearnClientIpSrcaddrs GlobalLearnClientIpSrcaddrArrayInput
	// Enable/disable always log application type in traffic log. Valid values: `enable`, `disable`.
	LogAppId pulumi.StringPtrInput
	// Enable/disable forward server name logging in forward traffic log. Valid values: `enable`, `disable`.
	LogForwardServer pulumi.StringPtrInput
	// Enable/disable logging sessions that are pending on policy matching. Valid values: `enable`, `disable`.
	LogPolicyPending pulumi.StringPtrInput
	// Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
	MaxMessageLength pulumi.IntPtrInput
	// Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
	MaxRequestLength pulumi.IntPtrInput
	// Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
	MaxWafBodyCacheLength pulumi.IntPtrInput
	// Enable/disable deep inspection for application level category policy matching. Valid values: `enable`, `disable`.
	PolicyCategoryDeepInspect pulumi.StringPtrInput
	// Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
	ProxyFqdn pulumi.StringPtrInput
	// IPv4 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr pulumi.StringPtrInput
	// IPv6 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr6 pulumi.StringPtrInput
	// SSL CA certificate for SSL interception.
	SslCaCert pulumi.StringPtrInput
	// SSL certificate for SSL interception.
	SslCert pulumi.StringPtrInput
	// Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
	StrictWebCheck pulumi.StringPtrInput
	// Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
	TunnelNonHttp pulumi.StringPtrInput
	// Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
	WebproxyProfile pulumi.StringPtrInput
}

func (GlobalState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalState)(nil)).Elem()
}

type globalArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
	FastPolicyMatch *string `pulumi:"fastPolicyMatch"`
	// Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
	ForwardProxyAuth *string `pulumi:"forwardProxyAuth"`
	// Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
	ForwardServerAffinityTimeout *int `pulumi:"forwardServerAffinityTimeout"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
	LdapUserCache *string `pulumi:"ldapUserCache"`
	// Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
	LearnClientIp *string `pulumi:"learnClientIp"`
	// Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
	LearnClientIpFromHeader *string `pulumi:"learnClientIpFromHeader"`
	// IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
	LearnClientIpSrcaddr6s []GlobalLearnClientIpSrcaddr6 `pulumi:"learnClientIpSrcaddr6s"`
	// Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
	LearnClientIpSrcaddrs []GlobalLearnClientIpSrcaddr `pulumi:"learnClientIpSrcaddrs"`
	// Enable/disable always log application type in traffic log. Valid values: `enable`, `disable`.
	LogAppId *string `pulumi:"logAppId"`
	// Enable/disable forward server name logging in forward traffic log. Valid values: `enable`, `disable`.
	LogForwardServer *string `pulumi:"logForwardServer"`
	// Enable/disable logging sessions that are pending on policy matching. Valid values: `enable`, `disable`.
	LogPolicyPending *string `pulumi:"logPolicyPending"`
	// Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
	MaxMessageLength *int `pulumi:"maxMessageLength"`
	// Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
	MaxRequestLength *int `pulumi:"maxRequestLength"`
	// Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
	MaxWafBodyCacheLength *int `pulumi:"maxWafBodyCacheLength"`
	// Enable/disable deep inspection for application level category policy matching. Valid values: `enable`, `disable`.
	PolicyCategoryDeepInspect *string `pulumi:"policyCategoryDeepInspect"`
	// Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
	ProxyFqdn string `pulumi:"proxyFqdn"`
	// IPv4 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr *string `pulumi:"srcAffinityExemptAddr"`
	// IPv6 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr6 *string `pulumi:"srcAffinityExemptAddr6"`
	// SSL CA certificate for SSL interception.
	SslCaCert *string `pulumi:"sslCaCert"`
	// SSL certificate for SSL interception.
	SslCert *string `pulumi:"sslCert"`
	// Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
	StrictWebCheck *string `pulumi:"strictWebCheck"`
	// Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
	TunnelNonHttp *string `pulumi:"tunnelNonHttp"`
	// Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion *string `pulumi:"unknownHttpVersion"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
	WebproxyProfile *string `pulumi:"webproxyProfile"`
}

// The set of arguments for constructing a Global resource.
type GlobalArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
	FastPolicyMatch pulumi.StringPtrInput
	// Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
	ForwardProxyAuth pulumi.StringPtrInput
	// Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
	ForwardServerAffinityTimeout pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
	LdapUserCache pulumi.StringPtrInput
	// Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
	LearnClientIp pulumi.StringPtrInput
	// Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
	LearnClientIpFromHeader pulumi.StringPtrInput
	// IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
	LearnClientIpSrcaddr6s GlobalLearnClientIpSrcaddr6ArrayInput
	// Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
	LearnClientIpSrcaddrs GlobalLearnClientIpSrcaddrArrayInput
	// Enable/disable always log application type in traffic log. Valid values: `enable`, `disable`.
	LogAppId pulumi.StringPtrInput
	// Enable/disable forward server name logging in forward traffic log. Valid values: `enable`, `disable`.
	LogForwardServer pulumi.StringPtrInput
	// Enable/disable logging sessions that are pending on policy matching. Valid values: `enable`, `disable`.
	LogPolicyPending pulumi.StringPtrInput
	// Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
	MaxMessageLength pulumi.IntPtrInput
	// Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
	MaxRequestLength pulumi.IntPtrInput
	// Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
	MaxWafBodyCacheLength pulumi.IntPtrInput
	// Enable/disable deep inspection for application level category policy matching. Valid values: `enable`, `disable`.
	PolicyCategoryDeepInspect pulumi.StringPtrInput
	// Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
	ProxyFqdn pulumi.StringInput
	// IPv4 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr pulumi.StringPtrInput
	// IPv6 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr6 pulumi.StringPtrInput
	// SSL CA certificate for SSL interception.
	SslCaCert pulumi.StringPtrInput
	// SSL certificate for SSL interception.
	SslCert pulumi.StringPtrInput
	// Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
	StrictWebCheck pulumi.StringPtrInput
	// Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
	TunnelNonHttp pulumi.StringPtrInput
	// Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
	WebproxyProfile pulumi.StringPtrInput
}

func (GlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalArgs)(nil)).Elem()
}

type GlobalInput interface {
	pulumi.Input

	ToGlobalOutput() GlobalOutput
	ToGlobalOutputWithContext(ctx context.Context) GlobalOutput
}

func (*Global) ElementType() reflect.Type {
	return reflect.TypeOf((**Global)(nil)).Elem()
}

func (i *Global) ToGlobalOutput() GlobalOutput {
	return i.ToGlobalOutputWithContext(context.Background())
}

func (i *Global) ToGlobalOutputWithContext(ctx context.Context) GlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalOutput)
}

// GlobalArrayInput is an input type that accepts GlobalArray and GlobalArrayOutput values.
// You can construct a concrete instance of `GlobalArrayInput` via:
//
//	GlobalArray{ GlobalArgs{...} }
type GlobalArrayInput interface {
	pulumi.Input

	ToGlobalArrayOutput() GlobalArrayOutput
	ToGlobalArrayOutputWithContext(context.Context) GlobalArrayOutput
}

type GlobalArray []GlobalInput

func (GlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Global)(nil)).Elem()
}

func (i GlobalArray) ToGlobalArrayOutput() GlobalArrayOutput {
	return i.ToGlobalArrayOutputWithContext(context.Background())
}

func (i GlobalArray) ToGlobalArrayOutputWithContext(ctx context.Context) GlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalArrayOutput)
}

// GlobalMapInput is an input type that accepts GlobalMap and GlobalMapOutput values.
// You can construct a concrete instance of `GlobalMapInput` via:
//
//	GlobalMap{ "key": GlobalArgs{...} }
type GlobalMapInput interface {
	pulumi.Input

	ToGlobalMapOutput() GlobalMapOutput
	ToGlobalMapOutputWithContext(context.Context) GlobalMapOutput
}

type GlobalMap map[string]GlobalInput

func (GlobalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Global)(nil)).Elem()
}

func (i GlobalMap) ToGlobalMapOutput() GlobalMapOutput {
	return i.ToGlobalMapOutputWithContext(context.Background())
}

func (i GlobalMap) ToGlobalMapOutputWithContext(ctx context.Context) GlobalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalMapOutput)
}

type GlobalOutput struct{ *pulumi.OutputState }

func (GlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Global)(nil)).Elem()
}

func (o GlobalOutput) ToGlobalOutput() GlobalOutput {
	return o
}

func (o GlobalOutput) ToGlobalOutputWithContext(ctx context.Context) GlobalOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o GlobalOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Global) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
func (o GlobalOutput) FastPolicyMatch() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.FastPolicyMatch }).(pulumi.StringOutput)
}

// Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
func (o GlobalOutput) ForwardProxyAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.ForwardProxyAuth }).(pulumi.StringOutput)
}

// Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
func (o GlobalOutput) ForwardServerAffinityTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Global) pulumi.IntOutput { return v.ForwardServerAffinityTimeout }).(pulumi.IntOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o GlobalOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Global) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
func (o GlobalOutput) LdapUserCache() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.LdapUserCache }).(pulumi.StringOutput)
}

// Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
func (o GlobalOutput) LearnClientIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.LearnClientIp }).(pulumi.StringOutput)
}

// Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
func (o GlobalOutput) LearnClientIpFromHeader() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.LearnClientIpFromHeader }).(pulumi.StringOutput)
}

// IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
func (o GlobalOutput) LearnClientIpSrcaddr6s() GlobalLearnClientIpSrcaddr6ArrayOutput {
	return o.ApplyT(func(v *Global) GlobalLearnClientIpSrcaddr6ArrayOutput { return v.LearnClientIpSrcaddr6s }).(GlobalLearnClientIpSrcaddr6ArrayOutput)
}

// Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
func (o GlobalOutput) LearnClientIpSrcaddrs() GlobalLearnClientIpSrcaddrArrayOutput {
	return o.ApplyT(func(v *Global) GlobalLearnClientIpSrcaddrArrayOutput { return v.LearnClientIpSrcaddrs }).(GlobalLearnClientIpSrcaddrArrayOutput)
}

// Enable/disable always log application type in traffic log. Valid values: `enable`, `disable`.
func (o GlobalOutput) LogAppId() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.LogAppId }).(pulumi.StringOutput)
}

// Enable/disable forward server name logging in forward traffic log. Valid values: `enable`, `disable`.
func (o GlobalOutput) LogForwardServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.LogForwardServer }).(pulumi.StringOutput)
}

// Enable/disable logging sessions that are pending on policy matching. Valid values: `enable`, `disable`.
func (o GlobalOutput) LogPolicyPending() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.LogPolicyPending }).(pulumi.StringOutput)
}

// Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
func (o GlobalOutput) MaxMessageLength() pulumi.IntOutput {
	return o.ApplyT(func(v *Global) pulumi.IntOutput { return v.MaxMessageLength }).(pulumi.IntOutput)
}

// Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
func (o GlobalOutput) MaxRequestLength() pulumi.IntOutput {
	return o.ApplyT(func(v *Global) pulumi.IntOutput { return v.MaxRequestLength }).(pulumi.IntOutput)
}

// Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
func (o GlobalOutput) MaxWafBodyCacheLength() pulumi.IntOutput {
	return o.ApplyT(func(v *Global) pulumi.IntOutput { return v.MaxWafBodyCacheLength }).(pulumi.IntOutput)
}

// Enable/disable deep inspection for application level category policy matching. Valid values: `enable`, `disable`.
func (o GlobalOutput) PolicyCategoryDeepInspect() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.PolicyCategoryDeepInspect }).(pulumi.StringOutput)
}

// Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
func (o GlobalOutput) ProxyFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.ProxyFqdn }).(pulumi.StringOutput)
}

// IPv4 source addresses to exempt proxy affinity.
func (o GlobalOutput) SrcAffinityExemptAddr() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.SrcAffinityExemptAddr }).(pulumi.StringOutput)
}

// IPv6 source addresses to exempt proxy affinity.
func (o GlobalOutput) SrcAffinityExemptAddr6() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.SrcAffinityExemptAddr6 }).(pulumi.StringOutput)
}

// SSL CA certificate for SSL interception.
func (o GlobalOutput) SslCaCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.SslCaCert }).(pulumi.StringOutput)
}

// SSL certificate for SSL interception.
func (o GlobalOutput) SslCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.SslCert }).(pulumi.StringOutput)
}

// Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
func (o GlobalOutput) StrictWebCheck() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.StrictWebCheck }).(pulumi.StringOutput)
}

// Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
func (o GlobalOutput) TunnelNonHttp() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.TunnelNonHttp }).(pulumi.StringOutput)
}

// Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
func (o GlobalOutput) UnknownHttpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.UnknownHttpVersion }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o GlobalOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Global) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
func (o GlobalOutput) WebproxyProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *Global) pulumi.StringOutput { return v.WebproxyProfile }).(pulumi.StringOutput)
}

type GlobalArrayOutput struct{ *pulumi.OutputState }

func (GlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Global)(nil)).Elem()
}

func (o GlobalArrayOutput) ToGlobalArrayOutput() GlobalArrayOutput {
	return o
}

func (o GlobalArrayOutput) ToGlobalArrayOutputWithContext(ctx context.Context) GlobalArrayOutput {
	return o
}

func (o GlobalArrayOutput) Index(i pulumi.IntInput) GlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Global {
		return vs[0].([]*Global)[vs[1].(int)]
	}).(GlobalOutput)
}

type GlobalMapOutput struct{ *pulumi.OutputState }

func (GlobalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Global)(nil)).Elem()
}

func (o GlobalMapOutput) ToGlobalMapOutput() GlobalMapOutput {
	return o
}

func (o GlobalMapOutput) ToGlobalMapOutputWithContext(ctx context.Context) GlobalMapOutput {
	return o
}

func (o GlobalMapOutput) MapIndex(k pulumi.StringInput) GlobalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Global {
		return vs[0].(map[string]*Global)[vs[1].(string)]
	}).(GlobalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalInput)(nil)).Elem(), &Global{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalArrayInput)(nil)).Elem(), GlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalMapInput)(nil)).Elem(), GlobalMap{})
	pulumi.RegisterOutputType(GlobalOutput{})
	pulumi.RegisterOutputType(GlobalArrayOutput{})
	pulumi.RegisterOutputType(GlobalMapOutput{})
}
