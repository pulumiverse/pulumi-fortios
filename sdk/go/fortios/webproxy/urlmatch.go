// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webproxy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Exempt URLs from web proxy forwarding and caching.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/webproxy"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			trname2, err := webproxy.NewForwardserver(ctx, "trname2", &webproxy.ForwardserverArgs{
//				AddrType:         pulumi.String("fqdn"),
//				Healthcheck:      pulumi.String("disable"),
//				Ip:               pulumi.String("0.0.0.0"),
//				Monitor:          pulumi.String("http://www.google.com"),
//				Port:             pulumi.Int(3128),
//				ServerDownOption: pulumi.String("block"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = webproxy.NewUrlmatch(ctx, "trname", &webproxy.UrlmatchArgs{
//				CacheExemption: pulumi.String("disable"),
//				ForwardServer:  trname2.Name,
//				Status:         pulumi.String("enable"),
//				UrlPattern:     pulumi.String("/examples/servlet/*Servlet"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// WebProxy UrlMatch can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:webproxy/urlmatch:Urlmatch labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:webproxy/urlmatch:Urlmatch labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Urlmatch struct {
	pulumi.CustomResourceState

	// Enable/disable exempting this URL pattern from caching. Valid values: `enable`, `disable`.
	CacheExemption pulumi.StringOutput `pulumi:"cacheExemption"`
	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Fast fallback configuration entry name.
	FastFallback pulumi.StringOutput `pulumi:"fastFallback"`
	// Forward server name.
	ForwardServer pulumi.StringOutput `pulumi:"forwardServer"`
	// Configure a name for the URL to be exempted.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// URL pattern to be exempted from web proxy forwarding and caching.
	UrlPattern pulumi.StringOutput `pulumi:"urlPattern"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewUrlmatch registers a new resource with the given unique name, arguments, and options.
func NewUrlmatch(ctx *pulumi.Context,
	name string, args *UrlmatchArgs, opts ...pulumi.ResourceOption) (*Urlmatch, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UrlPattern == nil {
		return nil, errors.New("invalid value for required argument 'UrlPattern'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Urlmatch
	err := ctx.RegisterResource("fortios:webproxy/urlmatch:Urlmatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUrlmatch gets an existing Urlmatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUrlmatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UrlmatchState, opts ...pulumi.ResourceOption) (*Urlmatch, error) {
	var resource Urlmatch
	err := ctx.ReadResource("fortios:webproxy/urlmatch:Urlmatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Urlmatch resources.
type urlmatchState struct {
	// Enable/disable exempting this URL pattern from caching. Valid values: `enable`, `disable`.
	CacheExemption *string `pulumi:"cacheExemption"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Fast fallback configuration entry name.
	FastFallback *string `pulumi:"fastFallback"`
	// Forward server name.
	ForwardServer *string `pulumi:"forwardServer"`
	// Configure a name for the URL to be exempted.
	Name *string `pulumi:"name"`
	// Enable/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// URL pattern to be exempted from web proxy forwarding and caching.
	UrlPattern *string `pulumi:"urlPattern"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type UrlmatchState struct {
	// Enable/disable exempting this URL pattern from caching. Valid values: `enable`, `disable`.
	CacheExemption pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Fast fallback configuration entry name.
	FastFallback pulumi.StringPtrInput
	// Forward server name.
	ForwardServer pulumi.StringPtrInput
	// Configure a name for the URL to be exempted.
	Name pulumi.StringPtrInput
	// Enable/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// URL pattern to be exempted from web proxy forwarding and caching.
	UrlPattern pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (UrlmatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*urlmatchState)(nil)).Elem()
}

type urlmatchArgs struct {
	// Enable/disable exempting this URL pattern from caching. Valid values: `enable`, `disable`.
	CacheExemption *string `pulumi:"cacheExemption"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Fast fallback configuration entry name.
	FastFallback *string `pulumi:"fastFallback"`
	// Forward server name.
	ForwardServer *string `pulumi:"forwardServer"`
	// Configure a name for the URL to be exempted.
	Name *string `pulumi:"name"`
	// Enable/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// URL pattern to be exempted from web proxy forwarding and caching.
	UrlPattern string `pulumi:"urlPattern"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Urlmatch resource.
type UrlmatchArgs struct {
	// Enable/disable exempting this URL pattern from caching. Valid values: `enable`, `disable`.
	CacheExemption pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Fast fallback configuration entry name.
	FastFallback pulumi.StringPtrInput
	// Forward server name.
	ForwardServer pulumi.StringPtrInput
	// Configure a name for the URL to be exempted.
	Name pulumi.StringPtrInput
	// Enable/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// URL pattern to be exempted from web proxy forwarding and caching.
	UrlPattern pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (UrlmatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*urlmatchArgs)(nil)).Elem()
}

type UrlmatchInput interface {
	pulumi.Input

	ToUrlmatchOutput() UrlmatchOutput
	ToUrlmatchOutputWithContext(ctx context.Context) UrlmatchOutput
}

func (*Urlmatch) ElementType() reflect.Type {
	return reflect.TypeOf((**Urlmatch)(nil)).Elem()
}

func (i *Urlmatch) ToUrlmatchOutput() UrlmatchOutput {
	return i.ToUrlmatchOutputWithContext(context.Background())
}

func (i *Urlmatch) ToUrlmatchOutputWithContext(ctx context.Context) UrlmatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlmatchOutput)
}

// UrlmatchArrayInput is an input type that accepts UrlmatchArray and UrlmatchArrayOutput values.
// You can construct a concrete instance of `UrlmatchArrayInput` via:
//
//	UrlmatchArray{ UrlmatchArgs{...} }
type UrlmatchArrayInput interface {
	pulumi.Input

	ToUrlmatchArrayOutput() UrlmatchArrayOutput
	ToUrlmatchArrayOutputWithContext(context.Context) UrlmatchArrayOutput
}

type UrlmatchArray []UrlmatchInput

func (UrlmatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Urlmatch)(nil)).Elem()
}

func (i UrlmatchArray) ToUrlmatchArrayOutput() UrlmatchArrayOutput {
	return i.ToUrlmatchArrayOutputWithContext(context.Background())
}

func (i UrlmatchArray) ToUrlmatchArrayOutputWithContext(ctx context.Context) UrlmatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlmatchArrayOutput)
}

// UrlmatchMapInput is an input type that accepts UrlmatchMap and UrlmatchMapOutput values.
// You can construct a concrete instance of `UrlmatchMapInput` via:
//
//	UrlmatchMap{ "key": UrlmatchArgs{...} }
type UrlmatchMapInput interface {
	pulumi.Input

	ToUrlmatchMapOutput() UrlmatchMapOutput
	ToUrlmatchMapOutputWithContext(context.Context) UrlmatchMapOutput
}

type UrlmatchMap map[string]UrlmatchInput

func (UrlmatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Urlmatch)(nil)).Elem()
}

func (i UrlmatchMap) ToUrlmatchMapOutput() UrlmatchMapOutput {
	return i.ToUrlmatchMapOutputWithContext(context.Background())
}

func (i UrlmatchMap) ToUrlmatchMapOutputWithContext(ctx context.Context) UrlmatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlmatchMapOutput)
}

type UrlmatchOutput struct{ *pulumi.OutputState }

func (UrlmatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Urlmatch)(nil)).Elem()
}

func (o UrlmatchOutput) ToUrlmatchOutput() UrlmatchOutput {
	return o
}

func (o UrlmatchOutput) ToUrlmatchOutputWithContext(ctx context.Context) UrlmatchOutput {
	return o
}

// Enable/disable exempting this URL pattern from caching. Valid values: `enable`, `disable`.
func (o UrlmatchOutput) CacheExemption() pulumi.StringOutput {
	return o.ApplyT(func(v *Urlmatch) pulumi.StringOutput { return v.CacheExemption }).(pulumi.StringOutput)
}

// Comment.
func (o UrlmatchOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Urlmatch) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Fast fallback configuration entry name.
func (o UrlmatchOutput) FastFallback() pulumi.StringOutput {
	return o.ApplyT(func(v *Urlmatch) pulumi.StringOutput { return v.FastFallback }).(pulumi.StringOutput)
}

// Forward server name.
func (o UrlmatchOutput) ForwardServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Urlmatch) pulumi.StringOutput { return v.ForwardServer }).(pulumi.StringOutput)
}

// Configure a name for the URL to be exempted.
func (o UrlmatchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Urlmatch) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching. Valid values: `enable`, `disable`.
func (o UrlmatchOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Urlmatch) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// URL pattern to be exempted from web proxy forwarding and caching.
func (o UrlmatchOutput) UrlPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *Urlmatch) pulumi.StringOutput { return v.UrlPattern }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o UrlmatchOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Urlmatch) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type UrlmatchArrayOutput struct{ *pulumi.OutputState }

func (UrlmatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Urlmatch)(nil)).Elem()
}

func (o UrlmatchArrayOutput) ToUrlmatchArrayOutput() UrlmatchArrayOutput {
	return o
}

func (o UrlmatchArrayOutput) ToUrlmatchArrayOutputWithContext(ctx context.Context) UrlmatchArrayOutput {
	return o
}

func (o UrlmatchArrayOutput) Index(i pulumi.IntInput) UrlmatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Urlmatch {
		return vs[0].([]*Urlmatch)[vs[1].(int)]
	}).(UrlmatchOutput)
}

type UrlmatchMapOutput struct{ *pulumi.OutputState }

func (UrlmatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Urlmatch)(nil)).Elem()
}

func (o UrlmatchMapOutput) ToUrlmatchMapOutput() UrlmatchMapOutput {
	return o
}

func (o UrlmatchMapOutput) ToUrlmatchMapOutputWithContext(ctx context.Context) UrlmatchMapOutput {
	return o
}

func (o UrlmatchMapOutput) MapIndex(k pulumi.StringInput) UrlmatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Urlmatch {
		return vs[0].(map[string]*Urlmatch)[vs[1].(string)]
	}).(UrlmatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UrlmatchInput)(nil)).Elem(), &Urlmatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlmatchArrayInput)(nil)).Elem(), UrlmatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlmatchMapInput)(nil)).Elem(), UrlmatchMap{})
	pulumi.RegisterOutputType(UrlmatchOutput{})
	pulumi.RegisterOutputType(UrlmatchArrayOutput{})
	pulumi.RegisterOutputType(UrlmatchMapOutput{})
}
