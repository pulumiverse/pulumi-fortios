// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webproxy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

var _ = internal.GetEnvOrDefault

type ExplicitPacPolicy struct {
	// Optional comments.
	Comments *string `pulumi:"comments"`
	// Destination address objects. The structure of `dstaddr` block is documented below.
	Dstaddrs []ExplicitPacPolicyDstaddr `pulumi:"dstaddrs"`
	// PAC file contents enclosed in quotes (maximum of 256K bytes).
	PacFileData *string `pulumi:"pacFileData"`
	// Pac file name.
	PacFileName *string `pulumi:"pacFileName"`
	// Policy ID.
	Policyid *int `pulumi:"policyid"`
	// Source address6 objects. The structure of `srcaddr6` block is documented below.
	Srcaddr6s []ExplicitPacPolicySrcaddr6 `pulumi:"srcaddr6s"`
	// Source address objects. The structure of `srcaddr` block is documented below.
	Srcaddrs []ExplicitPacPolicySrcaddr `pulumi:"srcaddrs"`
	// Enable/disable policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// ExplicitPacPolicyInput is an input type that accepts ExplicitPacPolicyArgs and ExplicitPacPolicyOutput values.
// You can construct a concrete instance of `ExplicitPacPolicyInput` via:
//
//	ExplicitPacPolicyArgs{...}
type ExplicitPacPolicyInput interface {
	pulumi.Input

	ToExplicitPacPolicyOutput() ExplicitPacPolicyOutput
	ToExplicitPacPolicyOutputWithContext(context.Context) ExplicitPacPolicyOutput
}

type ExplicitPacPolicyArgs struct {
	// Optional comments.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Destination address objects. The structure of `dstaddr` block is documented below.
	Dstaddrs ExplicitPacPolicyDstaddrArrayInput `pulumi:"dstaddrs"`
	// PAC file contents enclosed in quotes (maximum of 256K bytes).
	PacFileData pulumi.StringPtrInput `pulumi:"pacFileData"`
	// Pac file name.
	PacFileName pulumi.StringPtrInput `pulumi:"pacFileName"`
	// Policy ID.
	Policyid pulumi.IntPtrInput `pulumi:"policyid"`
	// Source address6 objects. The structure of `srcaddr6` block is documented below.
	Srcaddr6s ExplicitPacPolicySrcaddr6ArrayInput `pulumi:"srcaddr6s"`
	// Source address objects. The structure of `srcaddr` block is documented below.
	Srcaddrs ExplicitPacPolicySrcaddrArrayInput `pulumi:"srcaddrs"`
	// Enable/disable policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExplicitPacPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitPacPolicy)(nil)).Elem()
}

func (i ExplicitPacPolicyArgs) ToExplicitPacPolicyOutput() ExplicitPacPolicyOutput {
	return i.ToExplicitPacPolicyOutputWithContext(context.Background())
}

func (i ExplicitPacPolicyArgs) ToExplicitPacPolicyOutputWithContext(ctx context.Context) ExplicitPacPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitPacPolicyOutput)
}

// ExplicitPacPolicyArrayInput is an input type that accepts ExplicitPacPolicyArray and ExplicitPacPolicyArrayOutput values.
// You can construct a concrete instance of `ExplicitPacPolicyArrayInput` via:
//
//	ExplicitPacPolicyArray{ ExplicitPacPolicyArgs{...} }
type ExplicitPacPolicyArrayInput interface {
	pulumi.Input

	ToExplicitPacPolicyArrayOutput() ExplicitPacPolicyArrayOutput
	ToExplicitPacPolicyArrayOutputWithContext(context.Context) ExplicitPacPolicyArrayOutput
}

type ExplicitPacPolicyArray []ExplicitPacPolicyInput

func (ExplicitPacPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExplicitPacPolicy)(nil)).Elem()
}

func (i ExplicitPacPolicyArray) ToExplicitPacPolicyArrayOutput() ExplicitPacPolicyArrayOutput {
	return i.ToExplicitPacPolicyArrayOutputWithContext(context.Background())
}

func (i ExplicitPacPolicyArray) ToExplicitPacPolicyArrayOutputWithContext(ctx context.Context) ExplicitPacPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitPacPolicyArrayOutput)
}

type ExplicitPacPolicyOutput struct{ *pulumi.OutputState }

func (ExplicitPacPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitPacPolicy)(nil)).Elem()
}

func (o ExplicitPacPolicyOutput) ToExplicitPacPolicyOutput() ExplicitPacPolicyOutput {
	return o
}

func (o ExplicitPacPolicyOutput) ToExplicitPacPolicyOutputWithContext(ctx context.Context) ExplicitPacPolicyOutput {
	return o
}

// Optional comments.
func (o ExplicitPacPolicyOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExplicitPacPolicy) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Destination address objects. The structure of `dstaddr` block is documented below.
func (o ExplicitPacPolicyOutput) Dstaddrs() ExplicitPacPolicyDstaddrArrayOutput {
	return o.ApplyT(func(v ExplicitPacPolicy) []ExplicitPacPolicyDstaddr { return v.Dstaddrs }).(ExplicitPacPolicyDstaddrArrayOutput)
}

// PAC file contents enclosed in quotes (maximum of 256K bytes).
func (o ExplicitPacPolicyOutput) PacFileData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExplicitPacPolicy) *string { return v.PacFileData }).(pulumi.StringPtrOutput)
}

// Pac file name.
func (o ExplicitPacPolicyOutput) PacFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExplicitPacPolicy) *string { return v.PacFileName }).(pulumi.StringPtrOutput)
}

// Policy ID.
func (o ExplicitPacPolicyOutput) Policyid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExplicitPacPolicy) *int { return v.Policyid }).(pulumi.IntPtrOutput)
}

// Source address6 objects. The structure of `srcaddr6` block is documented below.
func (o ExplicitPacPolicyOutput) Srcaddr6s() ExplicitPacPolicySrcaddr6ArrayOutput {
	return o.ApplyT(func(v ExplicitPacPolicy) []ExplicitPacPolicySrcaddr6 { return v.Srcaddr6s }).(ExplicitPacPolicySrcaddr6ArrayOutput)
}

// Source address objects. The structure of `srcaddr` block is documented below.
func (o ExplicitPacPolicyOutput) Srcaddrs() ExplicitPacPolicySrcaddrArrayOutput {
	return o.ApplyT(func(v ExplicitPacPolicy) []ExplicitPacPolicySrcaddr { return v.Srcaddrs }).(ExplicitPacPolicySrcaddrArrayOutput)
}

// Enable/disable policy. Valid values: `enable`, `disable`.
func (o ExplicitPacPolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExplicitPacPolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExplicitPacPolicyArrayOutput struct{ *pulumi.OutputState }

func (ExplicitPacPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExplicitPacPolicy)(nil)).Elem()
}

func (o ExplicitPacPolicyArrayOutput) ToExplicitPacPolicyArrayOutput() ExplicitPacPolicyArrayOutput {
	return o
}

func (o ExplicitPacPolicyArrayOutput) ToExplicitPacPolicyArrayOutputWithContext(ctx context.Context) ExplicitPacPolicyArrayOutput {
	return o
}

func (o ExplicitPacPolicyArrayOutput) Index(i pulumi.IntInput) ExplicitPacPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExplicitPacPolicy {
		return vs[0].([]ExplicitPacPolicy)[vs[1].(int)]
	}).(ExplicitPacPolicyOutput)
}

type ExplicitPacPolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// ExplicitPacPolicyDstaddrInput is an input type that accepts ExplicitPacPolicyDstaddrArgs and ExplicitPacPolicyDstaddrOutput values.
// You can construct a concrete instance of `ExplicitPacPolicyDstaddrInput` via:
//
//	ExplicitPacPolicyDstaddrArgs{...}
type ExplicitPacPolicyDstaddrInput interface {
	pulumi.Input

	ToExplicitPacPolicyDstaddrOutput() ExplicitPacPolicyDstaddrOutput
	ToExplicitPacPolicyDstaddrOutputWithContext(context.Context) ExplicitPacPolicyDstaddrOutput
}

type ExplicitPacPolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExplicitPacPolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitPacPolicyDstaddr)(nil)).Elem()
}

func (i ExplicitPacPolicyDstaddrArgs) ToExplicitPacPolicyDstaddrOutput() ExplicitPacPolicyDstaddrOutput {
	return i.ToExplicitPacPolicyDstaddrOutputWithContext(context.Background())
}

func (i ExplicitPacPolicyDstaddrArgs) ToExplicitPacPolicyDstaddrOutputWithContext(ctx context.Context) ExplicitPacPolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitPacPolicyDstaddrOutput)
}

// ExplicitPacPolicyDstaddrArrayInput is an input type that accepts ExplicitPacPolicyDstaddrArray and ExplicitPacPolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `ExplicitPacPolicyDstaddrArrayInput` via:
//
//	ExplicitPacPolicyDstaddrArray{ ExplicitPacPolicyDstaddrArgs{...} }
type ExplicitPacPolicyDstaddrArrayInput interface {
	pulumi.Input

	ToExplicitPacPolicyDstaddrArrayOutput() ExplicitPacPolicyDstaddrArrayOutput
	ToExplicitPacPolicyDstaddrArrayOutputWithContext(context.Context) ExplicitPacPolicyDstaddrArrayOutput
}

type ExplicitPacPolicyDstaddrArray []ExplicitPacPolicyDstaddrInput

func (ExplicitPacPolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExplicitPacPolicyDstaddr)(nil)).Elem()
}

func (i ExplicitPacPolicyDstaddrArray) ToExplicitPacPolicyDstaddrArrayOutput() ExplicitPacPolicyDstaddrArrayOutput {
	return i.ToExplicitPacPolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i ExplicitPacPolicyDstaddrArray) ToExplicitPacPolicyDstaddrArrayOutputWithContext(ctx context.Context) ExplicitPacPolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitPacPolicyDstaddrArrayOutput)
}

type ExplicitPacPolicyDstaddrOutput struct{ *pulumi.OutputState }

func (ExplicitPacPolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitPacPolicyDstaddr)(nil)).Elem()
}

func (o ExplicitPacPolicyDstaddrOutput) ToExplicitPacPolicyDstaddrOutput() ExplicitPacPolicyDstaddrOutput {
	return o
}

func (o ExplicitPacPolicyDstaddrOutput) ToExplicitPacPolicyDstaddrOutputWithContext(ctx context.Context) ExplicitPacPolicyDstaddrOutput {
	return o
}

// Address name.
func (o ExplicitPacPolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExplicitPacPolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExplicitPacPolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (ExplicitPacPolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExplicitPacPolicyDstaddr)(nil)).Elem()
}

func (o ExplicitPacPolicyDstaddrArrayOutput) ToExplicitPacPolicyDstaddrArrayOutput() ExplicitPacPolicyDstaddrArrayOutput {
	return o
}

func (o ExplicitPacPolicyDstaddrArrayOutput) ToExplicitPacPolicyDstaddrArrayOutputWithContext(ctx context.Context) ExplicitPacPolicyDstaddrArrayOutput {
	return o
}

func (o ExplicitPacPolicyDstaddrArrayOutput) Index(i pulumi.IntInput) ExplicitPacPolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExplicitPacPolicyDstaddr {
		return vs[0].([]ExplicitPacPolicyDstaddr)[vs[1].(int)]
	}).(ExplicitPacPolicyDstaddrOutput)
}

type ExplicitPacPolicySrcaddr6 struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// ExplicitPacPolicySrcaddr6Input is an input type that accepts ExplicitPacPolicySrcaddr6Args and ExplicitPacPolicySrcaddr6Output values.
// You can construct a concrete instance of `ExplicitPacPolicySrcaddr6Input` via:
//
//	ExplicitPacPolicySrcaddr6Args{...}
type ExplicitPacPolicySrcaddr6Input interface {
	pulumi.Input

	ToExplicitPacPolicySrcaddr6Output() ExplicitPacPolicySrcaddr6Output
	ToExplicitPacPolicySrcaddr6OutputWithContext(context.Context) ExplicitPacPolicySrcaddr6Output
}

type ExplicitPacPolicySrcaddr6Args struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExplicitPacPolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitPacPolicySrcaddr6)(nil)).Elem()
}

func (i ExplicitPacPolicySrcaddr6Args) ToExplicitPacPolicySrcaddr6Output() ExplicitPacPolicySrcaddr6Output {
	return i.ToExplicitPacPolicySrcaddr6OutputWithContext(context.Background())
}

func (i ExplicitPacPolicySrcaddr6Args) ToExplicitPacPolicySrcaddr6OutputWithContext(ctx context.Context) ExplicitPacPolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitPacPolicySrcaddr6Output)
}

// ExplicitPacPolicySrcaddr6ArrayInput is an input type that accepts ExplicitPacPolicySrcaddr6Array and ExplicitPacPolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `ExplicitPacPolicySrcaddr6ArrayInput` via:
//
//	ExplicitPacPolicySrcaddr6Array{ ExplicitPacPolicySrcaddr6Args{...} }
type ExplicitPacPolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToExplicitPacPolicySrcaddr6ArrayOutput() ExplicitPacPolicySrcaddr6ArrayOutput
	ToExplicitPacPolicySrcaddr6ArrayOutputWithContext(context.Context) ExplicitPacPolicySrcaddr6ArrayOutput
}

type ExplicitPacPolicySrcaddr6Array []ExplicitPacPolicySrcaddr6Input

func (ExplicitPacPolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExplicitPacPolicySrcaddr6)(nil)).Elem()
}

func (i ExplicitPacPolicySrcaddr6Array) ToExplicitPacPolicySrcaddr6ArrayOutput() ExplicitPacPolicySrcaddr6ArrayOutput {
	return i.ToExplicitPacPolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i ExplicitPacPolicySrcaddr6Array) ToExplicitPacPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) ExplicitPacPolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitPacPolicySrcaddr6ArrayOutput)
}

type ExplicitPacPolicySrcaddr6Output struct{ *pulumi.OutputState }

func (ExplicitPacPolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitPacPolicySrcaddr6)(nil)).Elem()
}

func (o ExplicitPacPolicySrcaddr6Output) ToExplicitPacPolicySrcaddr6Output() ExplicitPacPolicySrcaddr6Output {
	return o
}

func (o ExplicitPacPolicySrcaddr6Output) ToExplicitPacPolicySrcaddr6OutputWithContext(ctx context.Context) ExplicitPacPolicySrcaddr6Output {
	return o
}

// Address name.
func (o ExplicitPacPolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExplicitPacPolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExplicitPacPolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (ExplicitPacPolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExplicitPacPolicySrcaddr6)(nil)).Elem()
}

func (o ExplicitPacPolicySrcaddr6ArrayOutput) ToExplicitPacPolicySrcaddr6ArrayOutput() ExplicitPacPolicySrcaddr6ArrayOutput {
	return o
}

func (o ExplicitPacPolicySrcaddr6ArrayOutput) ToExplicitPacPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) ExplicitPacPolicySrcaddr6ArrayOutput {
	return o
}

func (o ExplicitPacPolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) ExplicitPacPolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExplicitPacPolicySrcaddr6 {
		return vs[0].([]ExplicitPacPolicySrcaddr6)[vs[1].(int)]
	}).(ExplicitPacPolicySrcaddr6Output)
}

type ExplicitPacPolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// ExplicitPacPolicySrcaddrInput is an input type that accepts ExplicitPacPolicySrcaddrArgs and ExplicitPacPolicySrcaddrOutput values.
// You can construct a concrete instance of `ExplicitPacPolicySrcaddrInput` via:
//
//	ExplicitPacPolicySrcaddrArgs{...}
type ExplicitPacPolicySrcaddrInput interface {
	pulumi.Input

	ToExplicitPacPolicySrcaddrOutput() ExplicitPacPolicySrcaddrOutput
	ToExplicitPacPolicySrcaddrOutputWithContext(context.Context) ExplicitPacPolicySrcaddrOutput
}

type ExplicitPacPolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExplicitPacPolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitPacPolicySrcaddr)(nil)).Elem()
}

func (i ExplicitPacPolicySrcaddrArgs) ToExplicitPacPolicySrcaddrOutput() ExplicitPacPolicySrcaddrOutput {
	return i.ToExplicitPacPolicySrcaddrOutputWithContext(context.Background())
}

func (i ExplicitPacPolicySrcaddrArgs) ToExplicitPacPolicySrcaddrOutputWithContext(ctx context.Context) ExplicitPacPolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitPacPolicySrcaddrOutput)
}

// ExplicitPacPolicySrcaddrArrayInput is an input type that accepts ExplicitPacPolicySrcaddrArray and ExplicitPacPolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `ExplicitPacPolicySrcaddrArrayInput` via:
//
//	ExplicitPacPolicySrcaddrArray{ ExplicitPacPolicySrcaddrArgs{...} }
type ExplicitPacPolicySrcaddrArrayInput interface {
	pulumi.Input

	ToExplicitPacPolicySrcaddrArrayOutput() ExplicitPacPolicySrcaddrArrayOutput
	ToExplicitPacPolicySrcaddrArrayOutputWithContext(context.Context) ExplicitPacPolicySrcaddrArrayOutput
}

type ExplicitPacPolicySrcaddrArray []ExplicitPacPolicySrcaddrInput

func (ExplicitPacPolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExplicitPacPolicySrcaddr)(nil)).Elem()
}

func (i ExplicitPacPolicySrcaddrArray) ToExplicitPacPolicySrcaddrArrayOutput() ExplicitPacPolicySrcaddrArrayOutput {
	return i.ToExplicitPacPolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i ExplicitPacPolicySrcaddrArray) ToExplicitPacPolicySrcaddrArrayOutputWithContext(ctx context.Context) ExplicitPacPolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitPacPolicySrcaddrArrayOutput)
}

type ExplicitPacPolicySrcaddrOutput struct{ *pulumi.OutputState }

func (ExplicitPacPolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitPacPolicySrcaddr)(nil)).Elem()
}

func (o ExplicitPacPolicySrcaddrOutput) ToExplicitPacPolicySrcaddrOutput() ExplicitPacPolicySrcaddrOutput {
	return o
}

func (o ExplicitPacPolicySrcaddrOutput) ToExplicitPacPolicySrcaddrOutputWithContext(ctx context.Context) ExplicitPacPolicySrcaddrOutput {
	return o
}

// Address name.
func (o ExplicitPacPolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExplicitPacPolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExplicitPacPolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (ExplicitPacPolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExplicitPacPolicySrcaddr)(nil)).Elem()
}

func (o ExplicitPacPolicySrcaddrArrayOutput) ToExplicitPacPolicySrcaddrArrayOutput() ExplicitPacPolicySrcaddrArrayOutput {
	return o
}

func (o ExplicitPacPolicySrcaddrArrayOutput) ToExplicitPacPolicySrcaddrArrayOutputWithContext(ctx context.Context) ExplicitPacPolicySrcaddrArrayOutput {
	return o
}

func (o ExplicitPacPolicySrcaddrArrayOutput) Index(i pulumi.IntInput) ExplicitPacPolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExplicitPacPolicySrcaddr {
		return vs[0].([]ExplicitPacPolicySrcaddr)[vs[1].(int)]
	}).(ExplicitPacPolicySrcaddrOutput)
}

type ExplicitSecureWebProxyCert struct {
	// Certificate list.
	Name *string `pulumi:"name"`
}

// ExplicitSecureWebProxyCertInput is an input type that accepts ExplicitSecureWebProxyCertArgs and ExplicitSecureWebProxyCertOutput values.
// You can construct a concrete instance of `ExplicitSecureWebProxyCertInput` via:
//
//	ExplicitSecureWebProxyCertArgs{...}
type ExplicitSecureWebProxyCertInput interface {
	pulumi.Input

	ToExplicitSecureWebProxyCertOutput() ExplicitSecureWebProxyCertOutput
	ToExplicitSecureWebProxyCertOutputWithContext(context.Context) ExplicitSecureWebProxyCertOutput
}

type ExplicitSecureWebProxyCertArgs struct {
	// Certificate list.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExplicitSecureWebProxyCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitSecureWebProxyCert)(nil)).Elem()
}

func (i ExplicitSecureWebProxyCertArgs) ToExplicitSecureWebProxyCertOutput() ExplicitSecureWebProxyCertOutput {
	return i.ToExplicitSecureWebProxyCertOutputWithContext(context.Background())
}

func (i ExplicitSecureWebProxyCertArgs) ToExplicitSecureWebProxyCertOutputWithContext(ctx context.Context) ExplicitSecureWebProxyCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitSecureWebProxyCertOutput)
}

// ExplicitSecureWebProxyCertArrayInput is an input type that accepts ExplicitSecureWebProxyCertArray and ExplicitSecureWebProxyCertArrayOutput values.
// You can construct a concrete instance of `ExplicitSecureWebProxyCertArrayInput` via:
//
//	ExplicitSecureWebProxyCertArray{ ExplicitSecureWebProxyCertArgs{...} }
type ExplicitSecureWebProxyCertArrayInput interface {
	pulumi.Input

	ToExplicitSecureWebProxyCertArrayOutput() ExplicitSecureWebProxyCertArrayOutput
	ToExplicitSecureWebProxyCertArrayOutputWithContext(context.Context) ExplicitSecureWebProxyCertArrayOutput
}

type ExplicitSecureWebProxyCertArray []ExplicitSecureWebProxyCertInput

func (ExplicitSecureWebProxyCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExplicitSecureWebProxyCert)(nil)).Elem()
}

func (i ExplicitSecureWebProxyCertArray) ToExplicitSecureWebProxyCertArrayOutput() ExplicitSecureWebProxyCertArrayOutput {
	return i.ToExplicitSecureWebProxyCertArrayOutputWithContext(context.Background())
}

func (i ExplicitSecureWebProxyCertArray) ToExplicitSecureWebProxyCertArrayOutputWithContext(ctx context.Context) ExplicitSecureWebProxyCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitSecureWebProxyCertArrayOutput)
}

type ExplicitSecureWebProxyCertOutput struct{ *pulumi.OutputState }

func (ExplicitSecureWebProxyCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitSecureWebProxyCert)(nil)).Elem()
}

func (o ExplicitSecureWebProxyCertOutput) ToExplicitSecureWebProxyCertOutput() ExplicitSecureWebProxyCertOutput {
	return o
}

func (o ExplicitSecureWebProxyCertOutput) ToExplicitSecureWebProxyCertOutputWithContext(ctx context.Context) ExplicitSecureWebProxyCertOutput {
	return o
}

// Certificate list.
func (o ExplicitSecureWebProxyCertOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExplicitSecureWebProxyCert) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExplicitSecureWebProxyCertArrayOutput struct{ *pulumi.OutputState }

func (ExplicitSecureWebProxyCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExplicitSecureWebProxyCert)(nil)).Elem()
}

func (o ExplicitSecureWebProxyCertArrayOutput) ToExplicitSecureWebProxyCertArrayOutput() ExplicitSecureWebProxyCertArrayOutput {
	return o
}

func (o ExplicitSecureWebProxyCertArrayOutput) ToExplicitSecureWebProxyCertArrayOutputWithContext(ctx context.Context) ExplicitSecureWebProxyCertArrayOutput {
	return o
}

func (o ExplicitSecureWebProxyCertArrayOutput) Index(i pulumi.IntInput) ExplicitSecureWebProxyCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExplicitSecureWebProxyCert {
		return vs[0].([]ExplicitSecureWebProxyCert)[vs[1].(int)]
	}).(ExplicitSecureWebProxyCertOutput)
}

type ForwardservergroupServerList struct {
	// Forward server name.
	Name *string `pulumi:"name"`
	// Optionally assign a weight of the forwarding server for weighted load balancing (1 - 100, default = 10)
	Weight *int `pulumi:"weight"`
}

// ForwardservergroupServerListInput is an input type that accepts ForwardservergroupServerListArgs and ForwardservergroupServerListOutput values.
// You can construct a concrete instance of `ForwardservergroupServerListInput` via:
//
//	ForwardservergroupServerListArgs{...}
type ForwardservergroupServerListInput interface {
	pulumi.Input

	ToForwardservergroupServerListOutput() ForwardservergroupServerListOutput
	ToForwardservergroupServerListOutputWithContext(context.Context) ForwardservergroupServerListOutput
}

type ForwardservergroupServerListArgs struct {
	// Forward server name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optionally assign a weight of the forwarding server for weighted load balancing (1 - 100, default = 10)
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ForwardservergroupServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardservergroupServerList)(nil)).Elem()
}

func (i ForwardservergroupServerListArgs) ToForwardservergroupServerListOutput() ForwardservergroupServerListOutput {
	return i.ToForwardservergroupServerListOutputWithContext(context.Background())
}

func (i ForwardservergroupServerListArgs) ToForwardservergroupServerListOutputWithContext(ctx context.Context) ForwardservergroupServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardservergroupServerListOutput)
}

// ForwardservergroupServerListArrayInput is an input type that accepts ForwardservergroupServerListArray and ForwardservergroupServerListArrayOutput values.
// You can construct a concrete instance of `ForwardservergroupServerListArrayInput` via:
//
//	ForwardservergroupServerListArray{ ForwardservergroupServerListArgs{...} }
type ForwardservergroupServerListArrayInput interface {
	pulumi.Input

	ToForwardservergroupServerListArrayOutput() ForwardservergroupServerListArrayOutput
	ToForwardservergroupServerListArrayOutputWithContext(context.Context) ForwardservergroupServerListArrayOutput
}

type ForwardservergroupServerListArray []ForwardservergroupServerListInput

func (ForwardservergroupServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardservergroupServerList)(nil)).Elem()
}

func (i ForwardservergroupServerListArray) ToForwardservergroupServerListArrayOutput() ForwardservergroupServerListArrayOutput {
	return i.ToForwardservergroupServerListArrayOutputWithContext(context.Background())
}

func (i ForwardservergroupServerListArray) ToForwardservergroupServerListArrayOutputWithContext(ctx context.Context) ForwardservergroupServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardservergroupServerListArrayOutput)
}

type ForwardservergroupServerListOutput struct{ *pulumi.OutputState }

func (ForwardservergroupServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardservergroupServerList)(nil)).Elem()
}

func (o ForwardservergroupServerListOutput) ToForwardservergroupServerListOutput() ForwardservergroupServerListOutput {
	return o
}

func (o ForwardservergroupServerListOutput) ToForwardservergroupServerListOutputWithContext(ctx context.Context) ForwardservergroupServerListOutput {
	return o
}

// Forward server name.
func (o ForwardservergroupServerListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardservergroupServerList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Optionally assign a weight of the forwarding server for weighted load balancing (1 - 100, default = 10)
func (o ForwardservergroupServerListOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ForwardservergroupServerList) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ForwardservergroupServerListArrayOutput struct{ *pulumi.OutputState }

func (ForwardservergroupServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardservergroupServerList)(nil)).Elem()
}

func (o ForwardservergroupServerListArrayOutput) ToForwardservergroupServerListArrayOutput() ForwardservergroupServerListArrayOutput {
	return o
}

func (o ForwardservergroupServerListArrayOutput) ToForwardservergroupServerListArrayOutputWithContext(ctx context.Context) ForwardservergroupServerListArrayOutput {
	return o
}

func (o ForwardservergroupServerListArrayOutput) Index(i pulumi.IntInput) ForwardservergroupServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ForwardservergroupServerList {
		return vs[0].([]ForwardservergroupServerList)[vs[1].(int)]
	}).(ForwardservergroupServerListOutput)
}

type GlobalLearnClientIpSrcaddr6 struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// GlobalLearnClientIpSrcaddr6Input is an input type that accepts GlobalLearnClientIpSrcaddr6Args and GlobalLearnClientIpSrcaddr6Output values.
// You can construct a concrete instance of `GlobalLearnClientIpSrcaddr6Input` via:
//
//	GlobalLearnClientIpSrcaddr6Args{...}
type GlobalLearnClientIpSrcaddr6Input interface {
	pulumi.Input

	ToGlobalLearnClientIpSrcaddr6Output() GlobalLearnClientIpSrcaddr6Output
	ToGlobalLearnClientIpSrcaddr6OutputWithContext(context.Context) GlobalLearnClientIpSrcaddr6Output
}

type GlobalLearnClientIpSrcaddr6Args struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GlobalLearnClientIpSrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalLearnClientIpSrcaddr6)(nil)).Elem()
}

func (i GlobalLearnClientIpSrcaddr6Args) ToGlobalLearnClientIpSrcaddr6Output() GlobalLearnClientIpSrcaddr6Output {
	return i.ToGlobalLearnClientIpSrcaddr6OutputWithContext(context.Background())
}

func (i GlobalLearnClientIpSrcaddr6Args) ToGlobalLearnClientIpSrcaddr6OutputWithContext(ctx context.Context) GlobalLearnClientIpSrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalLearnClientIpSrcaddr6Output)
}

// GlobalLearnClientIpSrcaddr6ArrayInput is an input type that accepts GlobalLearnClientIpSrcaddr6Array and GlobalLearnClientIpSrcaddr6ArrayOutput values.
// You can construct a concrete instance of `GlobalLearnClientIpSrcaddr6ArrayInput` via:
//
//	GlobalLearnClientIpSrcaddr6Array{ GlobalLearnClientIpSrcaddr6Args{...} }
type GlobalLearnClientIpSrcaddr6ArrayInput interface {
	pulumi.Input

	ToGlobalLearnClientIpSrcaddr6ArrayOutput() GlobalLearnClientIpSrcaddr6ArrayOutput
	ToGlobalLearnClientIpSrcaddr6ArrayOutputWithContext(context.Context) GlobalLearnClientIpSrcaddr6ArrayOutput
}

type GlobalLearnClientIpSrcaddr6Array []GlobalLearnClientIpSrcaddr6Input

func (GlobalLearnClientIpSrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalLearnClientIpSrcaddr6)(nil)).Elem()
}

func (i GlobalLearnClientIpSrcaddr6Array) ToGlobalLearnClientIpSrcaddr6ArrayOutput() GlobalLearnClientIpSrcaddr6ArrayOutput {
	return i.ToGlobalLearnClientIpSrcaddr6ArrayOutputWithContext(context.Background())
}

func (i GlobalLearnClientIpSrcaddr6Array) ToGlobalLearnClientIpSrcaddr6ArrayOutputWithContext(ctx context.Context) GlobalLearnClientIpSrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalLearnClientIpSrcaddr6ArrayOutput)
}

type GlobalLearnClientIpSrcaddr6Output struct{ *pulumi.OutputState }

func (GlobalLearnClientIpSrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalLearnClientIpSrcaddr6)(nil)).Elem()
}

func (o GlobalLearnClientIpSrcaddr6Output) ToGlobalLearnClientIpSrcaddr6Output() GlobalLearnClientIpSrcaddr6Output {
	return o
}

func (o GlobalLearnClientIpSrcaddr6Output) ToGlobalLearnClientIpSrcaddr6OutputWithContext(ctx context.Context) GlobalLearnClientIpSrcaddr6Output {
	return o
}

// Address name.
func (o GlobalLearnClientIpSrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalLearnClientIpSrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GlobalLearnClientIpSrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GlobalLearnClientIpSrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalLearnClientIpSrcaddr6)(nil)).Elem()
}

func (o GlobalLearnClientIpSrcaddr6ArrayOutput) ToGlobalLearnClientIpSrcaddr6ArrayOutput() GlobalLearnClientIpSrcaddr6ArrayOutput {
	return o
}

func (o GlobalLearnClientIpSrcaddr6ArrayOutput) ToGlobalLearnClientIpSrcaddr6ArrayOutputWithContext(ctx context.Context) GlobalLearnClientIpSrcaddr6ArrayOutput {
	return o
}

func (o GlobalLearnClientIpSrcaddr6ArrayOutput) Index(i pulumi.IntInput) GlobalLearnClientIpSrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalLearnClientIpSrcaddr6 {
		return vs[0].([]GlobalLearnClientIpSrcaddr6)[vs[1].(int)]
	}).(GlobalLearnClientIpSrcaddr6Output)
}

type GlobalLearnClientIpSrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// GlobalLearnClientIpSrcaddrInput is an input type that accepts GlobalLearnClientIpSrcaddrArgs and GlobalLearnClientIpSrcaddrOutput values.
// You can construct a concrete instance of `GlobalLearnClientIpSrcaddrInput` via:
//
//	GlobalLearnClientIpSrcaddrArgs{...}
type GlobalLearnClientIpSrcaddrInput interface {
	pulumi.Input

	ToGlobalLearnClientIpSrcaddrOutput() GlobalLearnClientIpSrcaddrOutput
	ToGlobalLearnClientIpSrcaddrOutputWithContext(context.Context) GlobalLearnClientIpSrcaddrOutput
}

type GlobalLearnClientIpSrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GlobalLearnClientIpSrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalLearnClientIpSrcaddr)(nil)).Elem()
}

func (i GlobalLearnClientIpSrcaddrArgs) ToGlobalLearnClientIpSrcaddrOutput() GlobalLearnClientIpSrcaddrOutput {
	return i.ToGlobalLearnClientIpSrcaddrOutputWithContext(context.Background())
}

func (i GlobalLearnClientIpSrcaddrArgs) ToGlobalLearnClientIpSrcaddrOutputWithContext(ctx context.Context) GlobalLearnClientIpSrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalLearnClientIpSrcaddrOutput)
}

// GlobalLearnClientIpSrcaddrArrayInput is an input type that accepts GlobalLearnClientIpSrcaddrArray and GlobalLearnClientIpSrcaddrArrayOutput values.
// You can construct a concrete instance of `GlobalLearnClientIpSrcaddrArrayInput` via:
//
//	GlobalLearnClientIpSrcaddrArray{ GlobalLearnClientIpSrcaddrArgs{...} }
type GlobalLearnClientIpSrcaddrArrayInput interface {
	pulumi.Input

	ToGlobalLearnClientIpSrcaddrArrayOutput() GlobalLearnClientIpSrcaddrArrayOutput
	ToGlobalLearnClientIpSrcaddrArrayOutputWithContext(context.Context) GlobalLearnClientIpSrcaddrArrayOutput
}

type GlobalLearnClientIpSrcaddrArray []GlobalLearnClientIpSrcaddrInput

func (GlobalLearnClientIpSrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalLearnClientIpSrcaddr)(nil)).Elem()
}

func (i GlobalLearnClientIpSrcaddrArray) ToGlobalLearnClientIpSrcaddrArrayOutput() GlobalLearnClientIpSrcaddrArrayOutput {
	return i.ToGlobalLearnClientIpSrcaddrArrayOutputWithContext(context.Background())
}

func (i GlobalLearnClientIpSrcaddrArray) ToGlobalLearnClientIpSrcaddrArrayOutputWithContext(ctx context.Context) GlobalLearnClientIpSrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalLearnClientIpSrcaddrArrayOutput)
}

type GlobalLearnClientIpSrcaddrOutput struct{ *pulumi.OutputState }

func (GlobalLearnClientIpSrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalLearnClientIpSrcaddr)(nil)).Elem()
}

func (o GlobalLearnClientIpSrcaddrOutput) ToGlobalLearnClientIpSrcaddrOutput() GlobalLearnClientIpSrcaddrOutput {
	return o
}

func (o GlobalLearnClientIpSrcaddrOutput) ToGlobalLearnClientIpSrcaddrOutputWithContext(ctx context.Context) GlobalLearnClientIpSrcaddrOutput {
	return o
}

// Address name.
func (o GlobalLearnClientIpSrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalLearnClientIpSrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GlobalLearnClientIpSrcaddrArrayOutput struct{ *pulumi.OutputState }

func (GlobalLearnClientIpSrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalLearnClientIpSrcaddr)(nil)).Elem()
}

func (o GlobalLearnClientIpSrcaddrArrayOutput) ToGlobalLearnClientIpSrcaddrArrayOutput() GlobalLearnClientIpSrcaddrArrayOutput {
	return o
}

func (o GlobalLearnClientIpSrcaddrArrayOutput) ToGlobalLearnClientIpSrcaddrArrayOutputWithContext(ctx context.Context) GlobalLearnClientIpSrcaddrArrayOutput {
	return o
}

func (o GlobalLearnClientIpSrcaddrArrayOutput) Index(i pulumi.IntInput) GlobalLearnClientIpSrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalLearnClientIpSrcaddr {
		return vs[0].([]GlobalLearnClientIpSrcaddr)[vs[1].(int)]
	}).(GlobalLearnClientIpSrcaddrOutput)
}

type ProfileHeader struct {
	// Action when the HTTP header is forwarded.
	Action *string `pulumi:"action"`
	// Configure options to append content to existing HTTP header or add new HTTP header. Valid values: `append`, `new-on-not-found`, `new`.
	AddOption *string `pulumi:"addOption"`
	// Enable/disable use of base64 encoding of HTTP content. Valid values: `disable`, `enable`.
	Base64Encoding *string `pulumi:"base64Encoding"`
	// HTTP header content.
	Content *string `pulumi:"content"`
	// Destination address and address group names (IPv6). The structure of `dstaddr6` block is documented below.
	Dstaddr6s []ProfileHeaderDstaddr6 `pulumi:"dstaddr6s"`
	// Destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs []ProfileHeaderDstaddr `pulumi:"dstaddrs"`
	// HTTP forwarded header id.
	Id *int `pulumi:"id"`
	// HTTP forwarded header name.
	Name *string `pulumi:"name"`
	// Configure protocol(s) to take add-option action on (HTTP, HTTPS, or both). Valid values: `https`, `http`.
	Protocol *string `pulumi:"protocol"`
}

// ProfileHeaderInput is an input type that accepts ProfileHeaderArgs and ProfileHeaderOutput values.
// You can construct a concrete instance of `ProfileHeaderInput` via:
//
//	ProfileHeaderArgs{...}
type ProfileHeaderInput interface {
	pulumi.Input

	ToProfileHeaderOutput() ProfileHeaderOutput
	ToProfileHeaderOutputWithContext(context.Context) ProfileHeaderOutput
}

type ProfileHeaderArgs struct {
	// Action when the HTTP header is forwarded.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Configure options to append content to existing HTTP header or add new HTTP header. Valid values: `append`, `new-on-not-found`, `new`.
	AddOption pulumi.StringPtrInput `pulumi:"addOption"`
	// Enable/disable use of base64 encoding of HTTP content. Valid values: `disable`, `enable`.
	Base64Encoding pulumi.StringPtrInput `pulumi:"base64Encoding"`
	// HTTP header content.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Destination address and address group names (IPv6). The structure of `dstaddr6` block is documented below.
	Dstaddr6s ProfileHeaderDstaddr6ArrayInput `pulumi:"dstaddr6s"`
	// Destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs ProfileHeaderDstaddrArrayInput `pulumi:"dstaddrs"`
	// HTTP forwarded header id.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// HTTP forwarded header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configure protocol(s) to take add-option action on (HTTP, HTTPS, or both). Valid values: `https`, `http`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ProfileHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileHeader)(nil)).Elem()
}

func (i ProfileHeaderArgs) ToProfileHeaderOutput() ProfileHeaderOutput {
	return i.ToProfileHeaderOutputWithContext(context.Background())
}

func (i ProfileHeaderArgs) ToProfileHeaderOutputWithContext(ctx context.Context) ProfileHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileHeaderOutput)
}

// ProfileHeaderArrayInput is an input type that accepts ProfileHeaderArray and ProfileHeaderArrayOutput values.
// You can construct a concrete instance of `ProfileHeaderArrayInput` via:
//
//	ProfileHeaderArray{ ProfileHeaderArgs{...} }
type ProfileHeaderArrayInput interface {
	pulumi.Input

	ToProfileHeaderArrayOutput() ProfileHeaderArrayOutput
	ToProfileHeaderArrayOutputWithContext(context.Context) ProfileHeaderArrayOutput
}

type ProfileHeaderArray []ProfileHeaderInput

func (ProfileHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileHeader)(nil)).Elem()
}

func (i ProfileHeaderArray) ToProfileHeaderArrayOutput() ProfileHeaderArrayOutput {
	return i.ToProfileHeaderArrayOutputWithContext(context.Background())
}

func (i ProfileHeaderArray) ToProfileHeaderArrayOutputWithContext(ctx context.Context) ProfileHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileHeaderArrayOutput)
}

type ProfileHeaderOutput struct{ *pulumi.OutputState }

func (ProfileHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileHeader)(nil)).Elem()
}

func (o ProfileHeaderOutput) ToProfileHeaderOutput() ProfileHeaderOutput {
	return o
}

func (o ProfileHeaderOutput) ToProfileHeaderOutputWithContext(ctx context.Context) ProfileHeaderOutput {
	return o
}

// Action when the HTTP header is forwarded.
func (o ProfileHeaderOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHeader) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Configure options to append content to existing HTTP header or add new HTTP header. Valid values: `append`, `new-on-not-found`, `new`.
func (o ProfileHeaderOutput) AddOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHeader) *string { return v.AddOption }).(pulumi.StringPtrOutput)
}

// Enable/disable use of base64 encoding of HTTP content. Valid values: `disable`, `enable`.
func (o ProfileHeaderOutput) Base64Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHeader) *string { return v.Base64Encoding }).(pulumi.StringPtrOutput)
}

// HTTP header content.
func (o ProfileHeaderOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHeader) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Destination address and address group names (IPv6). The structure of `dstaddr6` block is documented below.
func (o ProfileHeaderOutput) Dstaddr6s() ProfileHeaderDstaddr6ArrayOutput {
	return o.ApplyT(func(v ProfileHeader) []ProfileHeaderDstaddr6 { return v.Dstaddr6s }).(ProfileHeaderDstaddr6ArrayOutput)
}

// Destination address and address group names. The structure of `dstaddr` block is documented below.
func (o ProfileHeaderOutput) Dstaddrs() ProfileHeaderDstaddrArrayOutput {
	return o.ApplyT(func(v ProfileHeader) []ProfileHeaderDstaddr { return v.Dstaddrs }).(ProfileHeaderDstaddrArrayOutput)
}

// HTTP forwarded header id.
func (o ProfileHeaderOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileHeader) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// HTTP forwarded header name.
func (o ProfileHeaderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHeader) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configure protocol(s) to take add-option action on (HTTP, HTTPS, or both). Valid values: `https`, `http`.
func (o ProfileHeaderOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHeader) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ProfileHeaderArrayOutput struct{ *pulumi.OutputState }

func (ProfileHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileHeader)(nil)).Elem()
}

func (o ProfileHeaderArrayOutput) ToProfileHeaderArrayOutput() ProfileHeaderArrayOutput {
	return o
}

func (o ProfileHeaderArrayOutput) ToProfileHeaderArrayOutputWithContext(ctx context.Context) ProfileHeaderArrayOutput {
	return o
}

func (o ProfileHeaderArrayOutput) Index(i pulumi.IntInput) ProfileHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileHeader {
		return vs[0].([]ProfileHeader)[vs[1].(int)]
	}).(ProfileHeaderOutput)
}

type ProfileHeaderDstaddr6 struct {
	// Profile name.
	Name *string `pulumi:"name"`
}

// ProfileHeaderDstaddr6Input is an input type that accepts ProfileHeaderDstaddr6Args and ProfileHeaderDstaddr6Output values.
// You can construct a concrete instance of `ProfileHeaderDstaddr6Input` via:
//
//	ProfileHeaderDstaddr6Args{...}
type ProfileHeaderDstaddr6Input interface {
	pulumi.Input

	ToProfileHeaderDstaddr6Output() ProfileHeaderDstaddr6Output
	ToProfileHeaderDstaddr6OutputWithContext(context.Context) ProfileHeaderDstaddr6Output
}

type ProfileHeaderDstaddr6Args struct {
	// Profile name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProfileHeaderDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileHeaderDstaddr6)(nil)).Elem()
}

func (i ProfileHeaderDstaddr6Args) ToProfileHeaderDstaddr6Output() ProfileHeaderDstaddr6Output {
	return i.ToProfileHeaderDstaddr6OutputWithContext(context.Background())
}

func (i ProfileHeaderDstaddr6Args) ToProfileHeaderDstaddr6OutputWithContext(ctx context.Context) ProfileHeaderDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileHeaderDstaddr6Output)
}

// ProfileHeaderDstaddr6ArrayInput is an input type that accepts ProfileHeaderDstaddr6Array and ProfileHeaderDstaddr6ArrayOutput values.
// You can construct a concrete instance of `ProfileHeaderDstaddr6ArrayInput` via:
//
//	ProfileHeaderDstaddr6Array{ ProfileHeaderDstaddr6Args{...} }
type ProfileHeaderDstaddr6ArrayInput interface {
	pulumi.Input

	ToProfileHeaderDstaddr6ArrayOutput() ProfileHeaderDstaddr6ArrayOutput
	ToProfileHeaderDstaddr6ArrayOutputWithContext(context.Context) ProfileHeaderDstaddr6ArrayOutput
}

type ProfileHeaderDstaddr6Array []ProfileHeaderDstaddr6Input

func (ProfileHeaderDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileHeaderDstaddr6)(nil)).Elem()
}

func (i ProfileHeaderDstaddr6Array) ToProfileHeaderDstaddr6ArrayOutput() ProfileHeaderDstaddr6ArrayOutput {
	return i.ToProfileHeaderDstaddr6ArrayOutputWithContext(context.Background())
}

func (i ProfileHeaderDstaddr6Array) ToProfileHeaderDstaddr6ArrayOutputWithContext(ctx context.Context) ProfileHeaderDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileHeaderDstaddr6ArrayOutput)
}

type ProfileHeaderDstaddr6Output struct{ *pulumi.OutputState }

func (ProfileHeaderDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileHeaderDstaddr6)(nil)).Elem()
}

func (o ProfileHeaderDstaddr6Output) ToProfileHeaderDstaddr6Output() ProfileHeaderDstaddr6Output {
	return o
}

func (o ProfileHeaderDstaddr6Output) ToProfileHeaderDstaddr6OutputWithContext(ctx context.Context) ProfileHeaderDstaddr6Output {
	return o
}

// Profile name.
func (o ProfileHeaderDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHeaderDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProfileHeaderDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (ProfileHeaderDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileHeaderDstaddr6)(nil)).Elem()
}

func (o ProfileHeaderDstaddr6ArrayOutput) ToProfileHeaderDstaddr6ArrayOutput() ProfileHeaderDstaddr6ArrayOutput {
	return o
}

func (o ProfileHeaderDstaddr6ArrayOutput) ToProfileHeaderDstaddr6ArrayOutputWithContext(ctx context.Context) ProfileHeaderDstaddr6ArrayOutput {
	return o
}

func (o ProfileHeaderDstaddr6ArrayOutput) Index(i pulumi.IntInput) ProfileHeaderDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileHeaderDstaddr6 {
		return vs[0].([]ProfileHeaderDstaddr6)[vs[1].(int)]
	}).(ProfileHeaderDstaddr6Output)
}

type ProfileHeaderDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// ProfileHeaderDstaddrInput is an input type that accepts ProfileHeaderDstaddrArgs and ProfileHeaderDstaddrOutput values.
// You can construct a concrete instance of `ProfileHeaderDstaddrInput` via:
//
//	ProfileHeaderDstaddrArgs{...}
type ProfileHeaderDstaddrInput interface {
	pulumi.Input

	ToProfileHeaderDstaddrOutput() ProfileHeaderDstaddrOutput
	ToProfileHeaderDstaddrOutputWithContext(context.Context) ProfileHeaderDstaddrOutput
}

type ProfileHeaderDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProfileHeaderDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileHeaderDstaddr)(nil)).Elem()
}

func (i ProfileHeaderDstaddrArgs) ToProfileHeaderDstaddrOutput() ProfileHeaderDstaddrOutput {
	return i.ToProfileHeaderDstaddrOutputWithContext(context.Background())
}

func (i ProfileHeaderDstaddrArgs) ToProfileHeaderDstaddrOutputWithContext(ctx context.Context) ProfileHeaderDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileHeaderDstaddrOutput)
}

// ProfileHeaderDstaddrArrayInput is an input type that accepts ProfileHeaderDstaddrArray and ProfileHeaderDstaddrArrayOutput values.
// You can construct a concrete instance of `ProfileHeaderDstaddrArrayInput` via:
//
//	ProfileHeaderDstaddrArray{ ProfileHeaderDstaddrArgs{...} }
type ProfileHeaderDstaddrArrayInput interface {
	pulumi.Input

	ToProfileHeaderDstaddrArrayOutput() ProfileHeaderDstaddrArrayOutput
	ToProfileHeaderDstaddrArrayOutputWithContext(context.Context) ProfileHeaderDstaddrArrayOutput
}

type ProfileHeaderDstaddrArray []ProfileHeaderDstaddrInput

func (ProfileHeaderDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileHeaderDstaddr)(nil)).Elem()
}

func (i ProfileHeaderDstaddrArray) ToProfileHeaderDstaddrArrayOutput() ProfileHeaderDstaddrArrayOutput {
	return i.ToProfileHeaderDstaddrArrayOutputWithContext(context.Background())
}

func (i ProfileHeaderDstaddrArray) ToProfileHeaderDstaddrArrayOutputWithContext(ctx context.Context) ProfileHeaderDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileHeaderDstaddrArrayOutput)
}

type ProfileHeaderDstaddrOutput struct{ *pulumi.OutputState }

func (ProfileHeaderDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileHeaderDstaddr)(nil)).Elem()
}

func (o ProfileHeaderDstaddrOutput) ToProfileHeaderDstaddrOutput() ProfileHeaderDstaddrOutput {
	return o
}

func (o ProfileHeaderDstaddrOutput) ToProfileHeaderDstaddrOutputWithContext(ctx context.Context) ProfileHeaderDstaddrOutput {
	return o
}

// Address name.
func (o ProfileHeaderDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileHeaderDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProfileHeaderDstaddrArrayOutput struct{ *pulumi.OutputState }

func (ProfileHeaderDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileHeaderDstaddr)(nil)).Elem()
}

func (o ProfileHeaderDstaddrArrayOutput) ToProfileHeaderDstaddrArrayOutput() ProfileHeaderDstaddrArrayOutput {
	return o
}

func (o ProfileHeaderDstaddrArrayOutput) ToProfileHeaderDstaddrArrayOutputWithContext(ctx context.Context) ProfileHeaderDstaddrArrayOutput {
	return o
}

func (o ProfileHeaderDstaddrArrayOutput) Index(i pulumi.IntInput) ProfileHeaderDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileHeaderDstaddr {
		return vs[0].([]ProfileHeaderDstaddr)[vs[1].(int)]
	}).(ProfileHeaderDstaddrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExplicitPacPolicyInput)(nil)).Elem(), ExplicitPacPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExplicitPacPolicyArrayInput)(nil)).Elem(), ExplicitPacPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExplicitPacPolicyDstaddrInput)(nil)).Elem(), ExplicitPacPolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExplicitPacPolicyDstaddrArrayInput)(nil)).Elem(), ExplicitPacPolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExplicitPacPolicySrcaddr6Input)(nil)).Elem(), ExplicitPacPolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExplicitPacPolicySrcaddr6ArrayInput)(nil)).Elem(), ExplicitPacPolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExplicitPacPolicySrcaddrInput)(nil)).Elem(), ExplicitPacPolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExplicitPacPolicySrcaddrArrayInput)(nil)).Elem(), ExplicitPacPolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExplicitSecureWebProxyCertInput)(nil)).Elem(), ExplicitSecureWebProxyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExplicitSecureWebProxyCertArrayInput)(nil)).Elem(), ExplicitSecureWebProxyCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardservergroupServerListInput)(nil)).Elem(), ForwardservergroupServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardservergroupServerListArrayInput)(nil)).Elem(), ForwardservergroupServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalLearnClientIpSrcaddr6Input)(nil)).Elem(), GlobalLearnClientIpSrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalLearnClientIpSrcaddr6ArrayInput)(nil)).Elem(), GlobalLearnClientIpSrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalLearnClientIpSrcaddrInput)(nil)).Elem(), GlobalLearnClientIpSrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalLearnClientIpSrcaddrArrayInput)(nil)).Elem(), GlobalLearnClientIpSrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileHeaderInput)(nil)).Elem(), ProfileHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileHeaderArrayInput)(nil)).Elem(), ProfileHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileHeaderDstaddr6Input)(nil)).Elem(), ProfileHeaderDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileHeaderDstaddr6ArrayInput)(nil)).Elem(), ProfileHeaderDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileHeaderDstaddrInput)(nil)).Elem(), ProfileHeaderDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileHeaderDstaddrArrayInput)(nil)).Elem(), ProfileHeaderDstaddrArray{})
	pulumi.RegisterOutputType(ExplicitPacPolicyOutput{})
	pulumi.RegisterOutputType(ExplicitPacPolicyArrayOutput{})
	pulumi.RegisterOutputType(ExplicitPacPolicyDstaddrOutput{})
	pulumi.RegisterOutputType(ExplicitPacPolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(ExplicitPacPolicySrcaddr6Output{})
	pulumi.RegisterOutputType(ExplicitPacPolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(ExplicitPacPolicySrcaddrOutput{})
	pulumi.RegisterOutputType(ExplicitPacPolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(ExplicitSecureWebProxyCertOutput{})
	pulumi.RegisterOutputType(ExplicitSecureWebProxyCertArrayOutput{})
	pulumi.RegisterOutputType(ForwardservergroupServerListOutput{})
	pulumi.RegisterOutputType(ForwardservergroupServerListArrayOutput{})
	pulumi.RegisterOutputType(GlobalLearnClientIpSrcaddr6Output{})
	pulumi.RegisterOutputType(GlobalLearnClientIpSrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GlobalLearnClientIpSrcaddrOutput{})
	pulumi.RegisterOutputType(GlobalLearnClientIpSrcaddrArrayOutput{})
	pulumi.RegisterOutputType(ProfileHeaderOutput{})
	pulumi.RegisterOutputType(ProfileHeaderArrayOutput{})
	pulumi.RegisterOutputType(ProfileHeaderDstaddr6Output{})
	pulumi.RegisterOutputType(ProfileHeaderDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(ProfileHeaderDstaddrOutput{})
	pulumi.RegisterOutputType(ProfileHeaderDstaddrArrayOutput{})
}
