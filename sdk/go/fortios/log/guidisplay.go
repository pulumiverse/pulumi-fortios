// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package log

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure how log messages are displayed on the GUI.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/log"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := log.NewGuidisplay(ctx, "trname", &log.GuidisplayArgs{
//				FortiviewUnscannedApps: pulumi.String("disable"),
//				ResolveApps:            pulumi.String("enable"),
//				ResolveHosts:           pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Log GuiDisplay can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:log/guidisplay:Guidisplay labelname LogGuiDisplay
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:log/guidisplay:Guidisplay labelname LogGuiDisplay
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Guidisplay struct {
	pulumi.CustomResourceState

	// Enable/disable showing unscanned traffic in FortiView application charts. Valid values: `enable`, `disable`.
	FortiviewUnscannedApps pulumi.StringOutput `pulumi:"fortiviewUnscannedApps"`
	// Resolve unknown applications on the GUI using Fortinet's remote application database. Valid values: `enable`, `disable`.
	ResolveApps pulumi.StringOutput `pulumi:"resolveApps"`
	// Enable/disable resolving IP addresses to hostname in log messages on the GUI using reverse DNS lookup Valid values: `enable`, `disable`.
	ResolveHosts pulumi.StringOutput `pulumi:"resolveHosts"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewGuidisplay registers a new resource with the given unique name, arguments, and options.
func NewGuidisplay(ctx *pulumi.Context,
	name string, args *GuidisplayArgs, opts ...pulumi.ResourceOption) (*Guidisplay, error) {
	if args == nil {
		args = &GuidisplayArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Guidisplay
	err := ctx.RegisterResource("fortios:log/guidisplay:Guidisplay", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGuidisplay gets an existing Guidisplay resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGuidisplay(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GuidisplayState, opts ...pulumi.ResourceOption) (*Guidisplay, error) {
	var resource Guidisplay
	err := ctx.ReadResource("fortios:log/guidisplay:Guidisplay", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Guidisplay resources.
type guidisplayState struct {
	// Enable/disable showing unscanned traffic in FortiView application charts. Valid values: `enable`, `disable`.
	FortiviewUnscannedApps *string `pulumi:"fortiviewUnscannedApps"`
	// Resolve unknown applications on the GUI using Fortinet's remote application database. Valid values: `enable`, `disable`.
	ResolveApps *string `pulumi:"resolveApps"`
	// Enable/disable resolving IP addresses to hostname in log messages on the GUI using reverse DNS lookup Valid values: `enable`, `disable`.
	ResolveHosts *string `pulumi:"resolveHosts"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type GuidisplayState struct {
	// Enable/disable showing unscanned traffic in FortiView application charts. Valid values: `enable`, `disable`.
	FortiviewUnscannedApps pulumi.StringPtrInput
	// Resolve unknown applications on the GUI using Fortinet's remote application database. Valid values: `enable`, `disable`.
	ResolveApps pulumi.StringPtrInput
	// Enable/disable resolving IP addresses to hostname in log messages on the GUI using reverse DNS lookup Valid values: `enable`, `disable`.
	ResolveHosts pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (GuidisplayState) ElementType() reflect.Type {
	return reflect.TypeOf((*guidisplayState)(nil)).Elem()
}

type guidisplayArgs struct {
	// Enable/disable showing unscanned traffic in FortiView application charts. Valid values: `enable`, `disable`.
	FortiviewUnscannedApps *string `pulumi:"fortiviewUnscannedApps"`
	// Resolve unknown applications on the GUI using Fortinet's remote application database. Valid values: `enable`, `disable`.
	ResolveApps *string `pulumi:"resolveApps"`
	// Enable/disable resolving IP addresses to hostname in log messages on the GUI using reverse DNS lookup Valid values: `enable`, `disable`.
	ResolveHosts *string `pulumi:"resolveHosts"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Guidisplay resource.
type GuidisplayArgs struct {
	// Enable/disable showing unscanned traffic in FortiView application charts. Valid values: `enable`, `disable`.
	FortiviewUnscannedApps pulumi.StringPtrInput
	// Resolve unknown applications on the GUI using Fortinet's remote application database. Valid values: `enable`, `disable`.
	ResolveApps pulumi.StringPtrInput
	// Enable/disable resolving IP addresses to hostname in log messages on the GUI using reverse DNS lookup Valid values: `enable`, `disable`.
	ResolveHosts pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (GuidisplayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*guidisplayArgs)(nil)).Elem()
}

type GuidisplayInput interface {
	pulumi.Input

	ToGuidisplayOutput() GuidisplayOutput
	ToGuidisplayOutputWithContext(ctx context.Context) GuidisplayOutput
}

func (*Guidisplay) ElementType() reflect.Type {
	return reflect.TypeOf((**Guidisplay)(nil)).Elem()
}

func (i *Guidisplay) ToGuidisplayOutput() GuidisplayOutput {
	return i.ToGuidisplayOutputWithContext(context.Background())
}

func (i *Guidisplay) ToGuidisplayOutputWithContext(ctx context.Context) GuidisplayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuidisplayOutput)
}

// GuidisplayArrayInput is an input type that accepts GuidisplayArray and GuidisplayArrayOutput values.
// You can construct a concrete instance of `GuidisplayArrayInput` via:
//
//	GuidisplayArray{ GuidisplayArgs{...} }
type GuidisplayArrayInput interface {
	pulumi.Input

	ToGuidisplayArrayOutput() GuidisplayArrayOutput
	ToGuidisplayArrayOutputWithContext(context.Context) GuidisplayArrayOutput
}

type GuidisplayArray []GuidisplayInput

func (GuidisplayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Guidisplay)(nil)).Elem()
}

func (i GuidisplayArray) ToGuidisplayArrayOutput() GuidisplayArrayOutput {
	return i.ToGuidisplayArrayOutputWithContext(context.Background())
}

func (i GuidisplayArray) ToGuidisplayArrayOutputWithContext(ctx context.Context) GuidisplayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuidisplayArrayOutput)
}

// GuidisplayMapInput is an input type that accepts GuidisplayMap and GuidisplayMapOutput values.
// You can construct a concrete instance of `GuidisplayMapInput` via:
//
//	GuidisplayMap{ "key": GuidisplayArgs{...} }
type GuidisplayMapInput interface {
	pulumi.Input

	ToGuidisplayMapOutput() GuidisplayMapOutput
	ToGuidisplayMapOutputWithContext(context.Context) GuidisplayMapOutput
}

type GuidisplayMap map[string]GuidisplayInput

func (GuidisplayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Guidisplay)(nil)).Elem()
}

func (i GuidisplayMap) ToGuidisplayMapOutput() GuidisplayMapOutput {
	return i.ToGuidisplayMapOutputWithContext(context.Background())
}

func (i GuidisplayMap) ToGuidisplayMapOutputWithContext(ctx context.Context) GuidisplayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuidisplayMapOutput)
}

type GuidisplayOutput struct{ *pulumi.OutputState }

func (GuidisplayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Guidisplay)(nil)).Elem()
}

func (o GuidisplayOutput) ToGuidisplayOutput() GuidisplayOutput {
	return o
}

func (o GuidisplayOutput) ToGuidisplayOutputWithContext(ctx context.Context) GuidisplayOutput {
	return o
}

// Enable/disable showing unscanned traffic in FortiView application charts. Valid values: `enable`, `disable`.
func (o GuidisplayOutput) FortiviewUnscannedApps() pulumi.StringOutput {
	return o.ApplyT(func(v *Guidisplay) pulumi.StringOutput { return v.FortiviewUnscannedApps }).(pulumi.StringOutput)
}

// Resolve unknown applications on the GUI using Fortinet's remote application database. Valid values: `enable`, `disable`.
func (o GuidisplayOutput) ResolveApps() pulumi.StringOutput {
	return o.ApplyT(func(v *Guidisplay) pulumi.StringOutput { return v.ResolveApps }).(pulumi.StringOutput)
}

// Enable/disable resolving IP addresses to hostname in log messages on the GUI using reverse DNS lookup Valid values: `enable`, `disable`.
func (o GuidisplayOutput) ResolveHosts() pulumi.StringOutput {
	return o.ApplyT(func(v *Guidisplay) pulumi.StringOutput { return v.ResolveHosts }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o GuidisplayOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Guidisplay) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type GuidisplayArrayOutput struct{ *pulumi.OutputState }

func (GuidisplayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Guidisplay)(nil)).Elem()
}

func (o GuidisplayArrayOutput) ToGuidisplayArrayOutput() GuidisplayArrayOutput {
	return o
}

func (o GuidisplayArrayOutput) ToGuidisplayArrayOutputWithContext(ctx context.Context) GuidisplayArrayOutput {
	return o
}

func (o GuidisplayArrayOutput) Index(i pulumi.IntInput) GuidisplayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Guidisplay {
		return vs[0].([]*Guidisplay)[vs[1].(int)]
	}).(GuidisplayOutput)
}

type GuidisplayMapOutput struct{ *pulumi.OutputState }

func (GuidisplayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Guidisplay)(nil)).Elem()
}

func (o GuidisplayMapOutput) ToGuidisplayMapOutput() GuidisplayMapOutput {
	return o
}

func (o GuidisplayMapOutput) ToGuidisplayMapOutputWithContext(ctx context.Context) GuidisplayMapOutput {
	return o
}

func (o GuidisplayMapOutput) MapIndex(k pulumi.StringInput) GuidisplayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Guidisplay {
		return vs[0].(map[string]*Guidisplay)[vs[1].(string)]
	}).(GuidisplayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GuidisplayInput)(nil)).Elem(), &Guidisplay{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuidisplayArrayInput)(nil)).Elem(), GuidisplayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuidisplayMapInput)(nil)).Elem(), GuidisplayMap{})
	pulumi.RegisterOutputType(GuidisplayOutput{})
	pulumi.RegisterOutputType(GuidisplayArrayOutput{})
	pulumi.RegisterOutputType(GuidisplayMapOutput{})
}
