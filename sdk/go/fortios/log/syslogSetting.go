// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package log

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Provides a resource to configure logging to remote Syslog logging servers.
//
// !> **Warning:** The resource will be deprecated and replaced by new resource `log/syslogd.Setting`, we recommend that you use the new resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/log"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := log.NewSyslogSetting(ctx, "test2", &log.SyslogSettingArgs{
//				Facility: pulumi.String("local7"),
//				Format:   pulumi.String("csv"),
//				Mode:     pulumi.String("udp"),
//				Port:     pulumi.String("514"),
//				Server:   pulumi.String("2.2.2.2"),
//				SourceIp: pulumi.String("10.2.2.199"),
//				Status:   pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SyslogSetting struct {
	pulumi.CustomResourceState

	// Remote syslog facility.
	Facility pulumi.StringOutput `pulumi:"facility"`
	// Log format.
	Format pulumi.StringOutput `pulumi:"format"`
	// Remote syslog logging over UDP/Reliable TCP.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Server listen port.
	Port pulumi.StringOutput `pulumi:"port"`
	// Address of remote syslog server.
	Server pulumi.StringOutput `pulumi:"server"`
	// Source IP address of syslog.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Enable/disable remote syslog logging.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewSyslogSetting registers a new resource with the given unique name, arguments, and options.
func NewSyslogSetting(ctx *pulumi.Context,
	name string, args *SyslogSettingArgs, opts ...pulumi.ResourceOption) (*SyslogSetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SyslogSetting
	err := ctx.RegisterResource("fortios:log/syslogSetting:SyslogSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSyslogSetting gets an existing SyslogSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSyslogSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SyslogSettingState, opts ...pulumi.ResourceOption) (*SyslogSetting, error) {
	var resource SyslogSetting
	err := ctx.ReadResource("fortios:log/syslogSetting:SyslogSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SyslogSetting resources.
type syslogSettingState struct {
	// Remote syslog facility.
	Facility *string `pulumi:"facility"`
	// Log format.
	Format *string `pulumi:"format"`
	// Remote syslog logging over UDP/Reliable TCP.
	Mode *string `pulumi:"mode"`
	// Server listen port.
	Port *string `pulumi:"port"`
	// Address of remote syslog server.
	Server *string `pulumi:"server"`
	// Source IP address of syslog.
	SourceIp *string `pulumi:"sourceIp"`
	// Enable/disable remote syslog logging.
	Status *string `pulumi:"status"`
}

type SyslogSettingState struct {
	// Remote syslog facility.
	Facility pulumi.StringPtrInput
	// Log format.
	Format pulumi.StringPtrInput
	// Remote syslog logging over UDP/Reliable TCP.
	Mode pulumi.StringPtrInput
	// Server listen port.
	Port pulumi.StringPtrInput
	// Address of remote syslog server.
	Server pulumi.StringPtrInput
	// Source IP address of syslog.
	SourceIp pulumi.StringPtrInput
	// Enable/disable remote syslog logging.
	Status pulumi.StringPtrInput
}

func (SyslogSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*syslogSettingState)(nil)).Elem()
}

type syslogSettingArgs struct {
	// Remote syslog facility.
	Facility *string `pulumi:"facility"`
	// Log format.
	Format *string `pulumi:"format"`
	// Remote syslog logging over UDP/Reliable TCP.
	Mode *string `pulumi:"mode"`
	// Server listen port.
	Port *string `pulumi:"port"`
	// Address of remote syslog server.
	Server *string `pulumi:"server"`
	// Source IP address of syslog.
	SourceIp *string `pulumi:"sourceIp"`
	// Enable/disable remote syslog logging.
	Status string `pulumi:"status"`
}

// The set of arguments for constructing a SyslogSetting resource.
type SyslogSettingArgs struct {
	// Remote syslog facility.
	Facility pulumi.StringPtrInput
	// Log format.
	Format pulumi.StringPtrInput
	// Remote syslog logging over UDP/Reliable TCP.
	Mode pulumi.StringPtrInput
	// Server listen port.
	Port pulumi.StringPtrInput
	// Address of remote syslog server.
	Server pulumi.StringPtrInput
	// Source IP address of syslog.
	SourceIp pulumi.StringPtrInput
	// Enable/disable remote syslog logging.
	Status pulumi.StringInput
}

func (SyslogSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*syslogSettingArgs)(nil)).Elem()
}

type SyslogSettingInput interface {
	pulumi.Input

	ToSyslogSettingOutput() SyslogSettingOutput
	ToSyslogSettingOutputWithContext(ctx context.Context) SyslogSettingOutput
}

func (*SyslogSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**SyslogSetting)(nil)).Elem()
}

func (i *SyslogSetting) ToSyslogSettingOutput() SyslogSettingOutput {
	return i.ToSyslogSettingOutputWithContext(context.Background())
}

func (i *SyslogSetting) ToSyslogSettingOutputWithContext(ctx context.Context) SyslogSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyslogSettingOutput)
}

// SyslogSettingArrayInput is an input type that accepts SyslogSettingArray and SyslogSettingArrayOutput values.
// You can construct a concrete instance of `SyslogSettingArrayInput` via:
//
//	SyslogSettingArray{ SyslogSettingArgs{...} }
type SyslogSettingArrayInput interface {
	pulumi.Input

	ToSyslogSettingArrayOutput() SyslogSettingArrayOutput
	ToSyslogSettingArrayOutputWithContext(context.Context) SyslogSettingArrayOutput
}

type SyslogSettingArray []SyslogSettingInput

func (SyslogSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyslogSetting)(nil)).Elem()
}

func (i SyslogSettingArray) ToSyslogSettingArrayOutput() SyslogSettingArrayOutput {
	return i.ToSyslogSettingArrayOutputWithContext(context.Background())
}

func (i SyslogSettingArray) ToSyslogSettingArrayOutputWithContext(ctx context.Context) SyslogSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyslogSettingArrayOutput)
}

// SyslogSettingMapInput is an input type that accepts SyslogSettingMap and SyslogSettingMapOutput values.
// You can construct a concrete instance of `SyslogSettingMapInput` via:
//
//	SyslogSettingMap{ "key": SyslogSettingArgs{...} }
type SyslogSettingMapInput interface {
	pulumi.Input

	ToSyslogSettingMapOutput() SyslogSettingMapOutput
	ToSyslogSettingMapOutputWithContext(context.Context) SyslogSettingMapOutput
}

type SyslogSettingMap map[string]SyslogSettingInput

func (SyslogSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyslogSetting)(nil)).Elem()
}

func (i SyslogSettingMap) ToSyslogSettingMapOutput() SyslogSettingMapOutput {
	return i.ToSyslogSettingMapOutputWithContext(context.Background())
}

func (i SyslogSettingMap) ToSyslogSettingMapOutputWithContext(ctx context.Context) SyslogSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyslogSettingMapOutput)
}

type SyslogSettingOutput struct{ *pulumi.OutputState }

func (SyslogSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyslogSetting)(nil)).Elem()
}

func (o SyslogSettingOutput) ToSyslogSettingOutput() SyslogSettingOutput {
	return o
}

func (o SyslogSettingOutput) ToSyslogSettingOutputWithContext(ctx context.Context) SyslogSettingOutput {
	return o
}

// Remote syslog facility.
func (o SyslogSettingOutput) Facility() pulumi.StringOutput {
	return o.ApplyT(func(v *SyslogSetting) pulumi.StringOutput { return v.Facility }).(pulumi.StringOutput)
}

// Log format.
func (o SyslogSettingOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SyslogSetting) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// Remote syslog logging over UDP/Reliable TCP.
func (o SyslogSettingOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *SyslogSetting) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// Server listen port.
func (o SyslogSettingOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v *SyslogSetting) pulumi.StringOutput { return v.Port }).(pulumi.StringOutput)
}

// Address of remote syslog server.
func (o SyslogSettingOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *SyslogSetting) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

// Source IP address of syslog.
func (o SyslogSettingOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *SyslogSetting) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

// Enable/disable remote syslog logging.
func (o SyslogSettingOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SyslogSetting) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type SyslogSettingArrayOutput struct{ *pulumi.OutputState }

func (SyslogSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyslogSetting)(nil)).Elem()
}

func (o SyslogSettingArrayOutput) ToSyslogSettingArrayOutput() SyslogSettingArrayOutput {
	return o
}

func (o SyslogSettingArrayOutput) ToSyslogSettingArrayOutputWithContext(ctx context.Context) SyslogSettingArrayOutput {
	return o
}

func (o SyslogSettingArrayOutput) Index(i pulumi.IntInput) SyslogSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SyslogSetting {
		return vs[0].([]*SyslogSetting)[vs[1].(int)]
	}).(SyslogSettingOutput)
}

type SyslogSettingMapOutput struct{ *pulumi.OutputState }

func (SyslogSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyslogSetting)(nil)).Elem()
}

func (o SyslogSettingMapOutput) ToSyslogSettingMapOutput() SyslogSettingMapOutput {
	return o
}

func (o SyslogSettingMapOutput) ToSyslogSettingMapOutputWithContext(ctx context.Context) SyslogSettingMapOutput {
	return o
}

func (o SyslogSettingMapOutput) MapIndex(k pulumi.StringInput) SyslogSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SyslogSetting {
		return vs[0].(map[string]*SyslogSetting)[vs[1].(string)]
	}).(SyslogSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SyslogSettingInput)(nil)).Elem(), &SyslogSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyslogSettingArrayInput)(nil)).Elem(), SyslogSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyslogSettingMapInput)(nil)).Elem(), SyslogSettingMap{})
	pulumi.RegisterOutputType(SyslogSettingOutput{})
	pulumi.RegisterOutputType(SyslogSettingArrayOutput{})
	pulumi.RegisterOutputType(SyslogSettingMapOutput{})
}
