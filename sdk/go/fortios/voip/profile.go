// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package voip

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure VoIP profiles.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/voip"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := voip.NewProfile(ctx, "trname", &voip.ProfileArgs{
//				Comment: pulumi.String("test"),
//				Sccp: &voip.ProfileSccpArgs{
//					BlockMcast:     pulumi.String("disable"),
//					LogCallSummary: pulumi.String("disable"),
//					LogViolations:  pulumi.String("disable"),
//					MaxCalls:       pulumi.Int(0),
//					Status:         pulumi.String("enable"),
//					VerifyHeader:   pulumi.String("disable"),
//				},
//				Sip: &voip.ProfileSipArgs{
//					AckRate:                     pulumi.Int(0),
//					ByeRate:                     pulumi.Int(0),
//					CallKeepalive:               pulumi.Int(0),
//					CancelRate:                  pulumi.Int(0),
//					ContactFixup:                pulumi.String("enable"),
//					HntRestrictSourceIp:         pulumi.String("disable"),
//					HostedNatTraversal:          pulumi.String("disable"),
//					InfoRate:                    pulumi.Int(0),
//					InviteRate:                  pulumi.Int(0),
//					IpsRtp:                      pulumi.String("enable"),
//					LogCallSummary:              pulumi.String("enable"),
//					LogViolations:               pulumi.String("disable"),
//					MaxBodyLength:               pulumi.Int(0),
//					MaxDialogs:                  pulumi.Int(0),
//					MaxIdleDialogs:              pulumi.Int(0),
//					MaxLineLength:               pulumi.Int(998),
//					MessageRate:                 pulumi.Int(0),
//					NatTrace:                    pulumi.String("enable"),
//					NoSdpFixup:                  pulumi.String("disable"),
//					NotifyRate:                  pulumi.Int(0),
//					OpenContactPinhole:          pulumi.String("enable"),
//					OpenRecordRoutePinhole:      pulumi.String("enable"),
//					OpenRegisterPinhole:         pulumi.String("enable"),
//					OpenViaPinhole:              pulumi.String("disable"),
//					OptionsRate:                 pulumi.Int(0),
//					PrackRate:                   pulumi.Int(0),
//					PreserveOverride:            pulumi.String("disable"),
//					ProvisionalInviteExpiryTime: pulumi.Int(210),
//					PublishRate:                 pulumi.Int(0),
//					ReferRate:                   pulumi.Int(0),
//					RegisterContactTrace:        pulumi.String("disable"),
//					RegisterRate:                pulumi.Int(0),
//					Rfc2543Branch:               pulumi.String("disable"),
//					Rtp:                         pulumi.String("enable"),
//					SslAlgorithm:                pulumi.String("high"),
//					SslClientRenegotiation:      pulumi.String("allow"),
//					SslMaxVersion:               pulumi.String("tls-1.2"),
//					SslMinVersion:               pulumi.String("tls-1.1"),
//					SslMode:                     pulumi.String("off"),
//					SslPfs:                      pulumi.String("allow"),
//					SslSendEmptyFrags:           pulumi.String("enable"),
//					Status:                      pulumi.String("enable"),
//					StrictRegister:              pulumi.String("enable"),
//					SubscribeRate:               pulumi.Int(0),
//					UnknownHeader:               pulumi.String("pass"),
//					UpdateRate:                  pulumi.Int(0),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Voip Profile can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:voip/profile:Profile labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:voip/profile:Profile labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Profile struct {
	pulumi.CustomResourceState

	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Flow or proxy inspection feature set.
	FeatureSet pulumi.StringOutput `pulumi:"featureSet"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// MSRP. The structure of `msrp` block is documented below.
	Msrp ProfileMsrpOutput `pulumi:"msrp"`
	// Profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// SCCP. The structure of `sccp` block is documented below.
	Sccp ProfileSccpOutput `pulumi:"sccp"`
	// SIP. The structure of `sip` block is documented below.
	Sip ProfileSipOutput `pulumi:"sip"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewProfile registers a new resource with the given unique name, arguments, and options.
func NewProfile(ctx *pulumi.Context,
	name string, args *ProfileArgs, opts ...pulumi.ResourceOption) (*Profile, error) {
	if args == nil {
		args = &ProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Profile
	err := ctx.RegisterResource("fortios:voip/profile:Profile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfile gets an existing Profile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileState, opts ...pulumi.ResourceOption) (*Profile, error) {
	var resource Profile
	err := ctx.ReadResource("fortios:voip/profile:Profile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Profile resources.
type profileState struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Flow or proxy inspection feature set.
	FeatureSet *string `pulumi:"featureSet"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// MSRP. The structure of `msrp` block is documented below.
	Msrp *ProfileMsrp `pulumi:"msrp"`
	// Profile name.
	Name *string `pulumi:"name"`
	// SCCP. The structure of `sccp` block is documented below.
	Sccp *ProfileSccp `pulumi:"sccp"`
	// SIP. The structure of `sip` block is documented below.
	Sip *ProfileSip `pulumi:"sip"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ProfileState struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Flow or proxy inspection feature set.
	FeatureSet pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// MSRP. The structure of `msrp` block is documented below.
	Msrp ProfileMsrpPtrInput
	// Profile name.
	Name pulumi.StringPtrInput
	// SCCP. The structure of `sccp` block is documented below.
	Sccp ProfileSccpPtrInput
	// SIP. The structure of `sip` block is documented below.
	Sip ProfileSipPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileState)(nil)).Elem()
}

type profileArgs struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Flow or proxy inspection feature set.
	FeatureSet *string `pulumi:"featureSet"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// MSRP. The structure of `msrp` block is documented below.
	Msrp *ProfileMsrp `pulumi:"msrp"`
	// Profile name.
	Name *string `pulumi:"name"`
	// SCCP. The structure of `sccp` block is documented below.
	Sccp *ProfileSccp `pulumi:"sccp"`
	// SIP. The structure of `sip` block is documented below.
	Sip *ProfileSip `pulumi:"sip"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Profile resource.
type ProfileArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Flow or proxy inspection feature set.
	FeatureSet pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// MSRP. The structure of `msrp` block is documented below.
	Msrp ProfileMsrpPtrInput
	// Profile name.
	Name pulumi.StringPtrInput
	// SCCP. The structure of `sccp` block is documented below.
	Sccp ProfileSccpPtrInput
	// SIP. The structure of `sip` block is documented below.
	Sip ProfileSipPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileArgs)(nil)).Elem()
}

type ProfileInput interface {
	pulumi.Input

	ToProfileOutput() ProfileOutput
	ToProfileOutputWithContext(ctx context.Context) ProfileOutput
}

func (*Profile) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (i *Profile) ToProfileOutput() ProfileOutput {
	return i.ToProfileOutputWithContext(context.Background())
}

func (i *Profile) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOutput)
}

// ProfileArrayInput is an input type that accepts ProfileArray and ProfileArrayOutput values.
// You can construct a concrete instance of `ProfileArrayInput` via:
//
//	ProfileArray{ ProfileArgs{...} }
type ProfileArrayInput interface {
	pulumi.Input

	ToProfileArrayOutput() ProfileArrayOutput
	ToProfileArrayOutputWithContext(context.Context) ProfileArrayOutput
}

type ProfileArray []ProfileInput

func (ProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (i ProfileArray) ToProfileArrayOutput() ProfileArrayOutput {
	return i.ToProfileArrayOutputWithContext(context.Background())
}

func (i ProfileArray) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileArrayOutput)
}

// ProfileMapInput is an input type that accepts ProfileMap and ProfileMapOutput values.
// You can construct a concrete instance of `ProfileMapInput` via:
//
//	ProfileMap{ "key": ProfileArgs{...} }
type ProfileMapInput interface {
	pulumi.Input

	ToProfileMapOutput() ProfileMapOutput
	ToProfileMapOutputWithContext(context.Context) ProfileMapOutput
}

type ProfileMap map[string]ProfileInput

func (ProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (i ProfileMap) ToProfileMapOutput() ProfileMapOutput {
	return i.ToProfileMapOutputWithContext(context.Background())
}

func (i ProfileMap) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMapOutput)
}

type ProfileOutput struct{ *pulumi.OutputState }

func (ProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (o ProfileOutput) ToProfileOutput() ProfileOutput {
	return o
}

func (o ProfileOutput) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return o
}

// Comment.
func (o ProfileOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Flow or proxy inspection feature set.
func (o ProfileOutput) FeatureSet() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.FeatureSet }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o ProfileOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// MSRP. The structure of `msrp` block is documented below.
func (o ProfileOutput) Msrp() ProfileMsrpOutput {
	return o.ApplyT(func(v *Profile) ProfileMsrpOutput { return v.Msrp }).(ProfileMsrpOutput)
}

// Profile name.
func (o ProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// SCCP. The structure of `sccp` block is documented below.
func (o ProfileOutput) Sccp() ProfileSccpOutput {
	return o.ApplyT(func(v *Profile) ProfileSccpOutput { return v.Sccp }).(ProfileSccpOutput)
}

// SIP. The structure of `sip` block is documented below.
func (o ProfileOutput) Sip() ProfileSipOutput {
	return o.ApplyT(func(v *Profile) ProfileSipOutput { return v.Sip }).(ProfileSipOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ProfileArrayOutput struct{ *pulumi.OutputState }

func (ProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (o ProfileArrayOutput) ToProfileArrayOutput() ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) Index(i pulumi.IntInput) ProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].([]*Profile)[vs[1].(int)]
	}).(ProfileOutput)
}

type ProfileMapOutput struct{ *pulumi.OutputState }

func (ProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (o ProfileMapOutput) ToProfileMapOutput() ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) MapIndex(k pulumi.StringInput) ProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].(map[string]*Profile)[vs[1].(string)]
	}).(ProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileInput)(nil)).Elem(), &Profile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileArrayInput)(nil)).Elem(), ProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMapInput)(nil)).Elem(), ProfileMap{})
	pulumi.RegisterOutputType(ProfileOutput{})
	pulumi.RegisterOutputType(ProfileArrayOutput{})
	pulumi.RegisterOutputType(ProfileMapOutput{})
}
