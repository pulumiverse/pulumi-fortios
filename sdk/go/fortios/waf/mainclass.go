// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Hidden table for datasource.
//
// ## Import
//
// Waf MainClass can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:waf/mainclass:Mainclass labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:waf/mainclass:Mainclass labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Mainclass struct {
	pulumi.CustomResourceState

	// Main signature class ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Main signature class name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewMainclass registers a new resource with the given unique name, arguments, and options.
func NewMainclass(ctx *pulumi.Context,
	name string, args *MainclassArgs, opts ...pulumi.ResourceOption) (*Mainclass, error) {
	if args == nil {
		args = &MainclassArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Mainclass
	err := ctx.RegisterResource("fortios:waf/mainclass:Mainclass", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMainclass gets an existing Mainclass resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMainclass(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MainclassState, opts ...pulumi.ResourceOption) (*Mainclass, error) {
	var resource Mainclass
	err := ctx.ReadResource("fortios:waf/mainclass:Mainclass", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Mainclass resources.
type mainclassState struct {
	// Main signature class ID.
	Fosid *int `pulumi:"fosid"`
	// Main signature class name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type MainclassState struct {
	// Main signature class ID.
	Fosid pulumi.IntPtrInput
	// Main signature class name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (MainclassState) ElementType() reflect.Type {
	return reflect.TypeOf((*mainclassState)(nil)).Elem()
}

type mainclassArgs struct {
	// Main signature class ID.
	Fosid *int `pulumi:"fosid"`
	// Main signature class name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Mainclass resource.
type MainclassArgs struct {
	// Main signature class ID.
	Fosid pulumi.IntPtrInput
	// Main signature class name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (MainclassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mainclassArgs)(nil)).Elem()
}

type MainclassInput interface {
	pulumi.Input

	ToMainclassOutput() MainclassOutput
	ToMainclassOutputWithContext(ctx context.Context) MainclassOutput
}

func (*Mainclass) ElementType() reflect.Type {
	return reflect.TypeOf((**Mainclass)(nil)).Elem()
}

func (i *Mainclass) ToMainclassOutput() MainclassOutput {
	return i.ToMainclassOutputWithContext(context.Background())
}

func (i *Mainclass) ToMainclassOutputWithContext(ctx context.Context) MainclassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MainclassOutput)
}

// MainclassArrayInput is an input type that accepts MainclassArray and MainclassArrayOutput values.
// You can construct a concrete instance of `MainclassArrayInput` via:
//
//	MainclassArray{ MainclassArgs{...} }
type MainclassArrayInput interface {
	pulumi.Input

	ToMainclassArrayOutput() MainclassArrayOutput
	ToMainclassArrayOutputWithContext(context.Context) MainclassArrayOutput
}

type MainclassArray []MainclassInput

func (MainclassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Mainclass)(nil)).Elem()
}

func (i MainclassArray) ToMainclassArrayOutput() MainclassArrayOutput {
	return i.ToMainclassArrayOutputWithContext(context.Background())
}

func (i MainclassArray) ToMainclassArrayOutputWithContext(ctx context.Context) MainclassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MainclassArrayOutput)
}

// MainclassMapInput is an input type that accepts MainclassMap and MainclassMapOutput values.
// You can construct a concrete instance of `MainclassMapInput` via:
//
//	MainclassMap{ "key": MainclassArgs{...} }
type MainclassMapInput interface {
	pulumi.Input

	ToMainclassMapOutput() MainclassMapOutput
	ToMainclassMapOutputWithContext(context.Context) MainclassMapOutput
}

type MainclassMap map[string]MainclassInput

func (MainclassMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Mainclass)(nil)).Elem()
}

func (i MainclassMap) ToMainclassMapOutput() MainclassMapOutput {
	return i.ToMainclassMapOutputWithContext(context.Background())
}

func (i MainclassMap) ToMainclassMapOutputWithContext(ctx context.Context) MainclassMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MainclassMapOutput)
}

type MainclassOutput struct{ *pulumi.OutputState }

func (MainclassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mainclass)(nil)).Elem()
}

func (o MainclassOutput) ToMainclassOutput() MainclassOutput {
	return o
}

func (o MainclassOutput) ToMainclassOutputWithContext(ctx context.Context) MainclassOutput {
	return o
}

// Main signature class ID.
func (o MainclassOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *Mainclass) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Main signature class name.
func (o MainclassOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Mainclass) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o MainclassOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Mainclass) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type MainclassArrayOutput struct{ *pulumi.OutputState }

func (MainclassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Mainclass)(nil)).Elem()
}

func (o MainclassArrayOutput) ToMainclassArrayOutput() MainclassArrayOutput {
	return o
}

func (o MainclassArrayOutput) ToMainclassArrayOutputWithContext(ctx context.Context) MainclassArrayOutput {
	return o
}

func (o MainclassArrayOutput) Index(i pulumi.IntInput) MainclassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Mainclass {
		return vs[0].([]*Mainclass)[vs[1].(int)]
	}).(MainclassOutput)
}

type MainclassMapOutput struct{ *pulumi.OutputState }

func (MainclassMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Mainclass)(nil)).Elem()
}

func (o MainclassMapOutput) ToMainclassMapOutput() MainclassMapOutput {
	return o
}

func (o MainclassMapOutput) ToMainclassMapOutputWithContext(ctx context.Context) MainclassMapOutput {
	return o
}

func (o MainclassMapOutput) MapIndex(k pulumi.StringInput) MainclassOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Mainclass {
		return vs[0].(map[string]*Mainclass)[vs[1].(string)]
	}).(MainclassOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MainclassInput)(nil)).Elem(), &Mainclass{})
	pulumi.RegisterInputType(reflect.TypeOf((*MainclassArrayInput)(nil)).Elem(), MainclassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MainclassMapInput)(nil)).Elem(), MainclassMap{})
	pulumi.RegisterOutputType(MainclassOutput{})
	pulumi.RegisterOutputType(MainclassArrayOutput{})
	pulumi.RegisterOutputType(MainclassMapOutput{})
}
