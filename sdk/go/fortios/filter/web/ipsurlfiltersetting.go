// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure IPS URL filter settings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/filter"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := filter.NewIpsurlfiltersetting(ctx, "trname", &filter.IpsurlfiltersettingArgs{
//				Distance: pulumi.Int(1),
//				Gateway:  pulumi.String("0.0.0.0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Webfilter IpsUrlfilterSetting can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:filter/web/ipsurlfiltersetting:Ipsurlfiltersetting labelname WebfilterIpsUrlfilterSetting
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:filter/web/ipsurlfiltersetting:Ipsurlfiltersetting labelname WebfilterIpsUrlfilterSetting
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Ipsurlfiltersetting struct {
	pulumi.CustomResourceState

	// Interface for this route.
	Device pulumi.StringOutput `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntOutput `pulumi:"distance"`
	// Gateway IP address for this route.
	Gateway pulumi.StringOutput `pulumi:"gateway"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrOutput `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewIpsurlfiltersetting registers a new resource with the given unique name, arguments, and options.
func NewIpsurlfiltersetting(ctx *pulumi.Context,
	name string, args *IpsurlfiltersettingArgs, opts ...pulumi.ResourceOption) (*Ipsurlfiltersetting, error) {
	if args == nil {
		args = &IpsurlfiltersettingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ipsurlfiltersetting
	err := ctx.RegisterResource("fortios:filter/web/ipsurlfiltersetting:Ipsurlfiltersetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpsurlfiltersetting gets an existing Ipsurlfiltersetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpsurlfiltersetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpsurlfiltersettingState, opts ...pulumi.ResourceOption) (*Ipsurlfiltersetting, error) {
	var resource Ipsurlfiltersetting
	err := ctx.ReadResource("fortios:filter/web/ipsurlfiltersetting:Ipsurlfiltersetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ipsurlfiltersetting resources.
type ipsurlfiltersettingState struct {
	// Interface for this route.
	Device *string `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance *int `pulumi:"distance"`
	// Gateway IP address for this route.
	Gateway *string `pulumi:"gateway"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.
	GeoFilter *string `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type IpsurlfiltersettingState struct {
	// Interface for this route.
	Device pulumi.StringPtrInput
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntPtrInput
	// Gateway IP address for this route.
	Gateway pulumi.StringPtrInput
	// Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (IpsurlfiltersettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsurlfiltersettingState)(nil)).Elem()
}

type ipsurlfiltersettingArgs struct {
	// Interface for this route.
	Device *string `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance *int `pulumi:"distance"`
	// Gateway IP address for this route.
	Gateway *string `pulumi:"gateway"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.
	GeoFilter *string `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Ipsurlfiltersetting resource.
type IpsurlfiltersettingArgs struct {
	// Interface for this route.
	Device pulumi.StringPtrInput
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntPtrInput
	// Gateway IP address for this route.
	Gateway pulumi.StringPtrInput
	// Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (IpsurlfiltersettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsurlfiltersettingArgs)(nil)).Elem()
}

type IpsurlfiltersettingInput interface {
	pulumi.Input

	ToIpsurlfiltersettingOutput() IpsurlfiltersettingOutput
	ToIpsurlfiltersettingOutputWithContext(ctx context.Context) IpsurlfiltersettingOutput
}

func (*Ipsurlfiltersetting) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipsurlfiltersetting)(nil)).Elem()
}

func (i *Ipsurlfiltersetting) ToIpsurlfiltersettingOutput() IpsurlfiltersettingOutput {
	return i.ToIpsurlfiltersettingOutputWithContext(context.Background())
}

func (i *Ipsurlfiltersetting) ToIpsurlfiltersettingOutputWithContext(ctx context.Context) IpsurlfiltersettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsurlfiltersettingOutput)
}

// IpsurlfiltersettingArrayInput is an input type that accepts IpsurlfiltersettingArray and IpsurlfiltersettingArrayOutput values.
// You can construct a concrete instance of `IpsurlfiltersettingArrayInput` via:
//
//	IpsurlfiltersettingArray{ IpsurlfiltersettingArgs{...} }
type IpsurlfiltersettingArrayInput interface {
	pulumi.Input

	ToIpsurlfiltersettingArrayOutput() IpsurlfiltersettingArrayOutput
	ToIpsurlfiltersettingArrayOutputWithContext(context.Context) IpsurlfiltersettingArrayOutput
}

type IpsurlfiltersettingArray []IpsurlfiltersettingInput

func (IpsurlfiltersettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipsurlfiltersetting)(nil)).Elem()
}

func (i IpsurlfiltersettingArray) ToIpsurlfiltersettingArrayOutput() IpsurlfiltersettingArrayOutput {
	return i.ToIpsurlfiltersettingArrayOutputWithContext(context.Background())
}

func (i IpsurlfiltersettingArray) ToIpsurlfiltersettingArrayOutputWithContext(ctx context.Context) IpsurlfiltersettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsurlfiltersettingArrayOutput)
}

// IpsurlfiltersettingMapInput is an input type that accepts IpsurlfiltersettingMap and IpsurlfiltersettingMapOutput values.
// You can construct a concrete instance of `IpsurlfiltersettingMapInput` via:
//
//	IpsurlfiltersettingMap{ "key": IpsurlfiltersettingArgs{...} }
type IpsurlfiltersettingMapInput interface {
	pulumi.Input

	ToIpsurlfiltersettingMapOutput() IpsurlfiltersettingMapOutput
	ToIpsurlfiltersettingMapOutputWithContext(context.Context) IpsurlfiltersettingMapOutput
}

type IpsurlfiltersettingMap map[string]IpsurlfiltersettingInput

func (IpsurlfiltersettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipsurlfiltersetting)(nil)).Elem()
}

func (i IpsurlfiltersettingMap) ToIpsurlfiltersettingMapOutput() IpsurlfiltersettingMapOutput {
	return i.ToIpsurlfiltersettingMapOutputWithContext(context.Background())
}

func (i IpsurlfiltersettingMap) ToIpsurlfiltersettingMapOutputWithContext(ctx context.Context) IpsurlfiltersettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsurlfiltersettingMapOutput)
}

type IpsurlfiltersettingOutput struct{ *pulumi.OutputState }

func (IpsurlfiltersettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipsurlfiltersetting)(nil)).Elem()
}

func (o IpsurlfiltersettingOutput) ToIpsurlfiltersettingOutput() IpsurlfiltersettingOutput {
	return o
}

func (o IpsurlfiltersettingOutput) ToIpsurlfiltersettingOutputWithContext(ctx context.Context) IpsurlfiltersettingOutput {
	return o
}

// Interface for this route.
func (o IpsurlfiltersettingOutput) Device() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipsurlfiltersetting) pulumi.StringOutput { return v.Device }).(pulumi.StringOutput)
}

// Administrative distance (1 - 255) for this route.
func (o IpsurlfiltersettingOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v *Ipsurlfiltersetting) pulumi.IntOutput { return v.Distance }).(pulumi.IntOutput)
}

// Gateway IP address for this route.
func (o IpsurlfiltersettingOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipsurlfiltersetting) pulumi.StringOutput { return v.Gateway }).(pulumi.StringOutput)
}

// Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.
func (o IpsurlfiltersettingOutput) GeoFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipsurlfiltersetting) pulumi.StringPtrOutput { return v.GeoFilter }).(pulumi.StringPtrOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o IpsurlfiltersettingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipsurlfiltersetting) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type IpsurlfiltersettingArrayOutput struct{ *pulumi.OutputState }

func (IpsurlfiltersettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipsurlfiltersetting)(nil)).Elem()
}

func (o IpsurlfiltersettingArrayOutput) ToIpsurlfiltersettingArrayOutput() IpsurlfiltersettingArrayOutput {
	return o
}

func (o IpsurlfiltersettingArrayOutput) ToIpsurlfiltersettingArrayOutputWithContext(ctx context.Context) IpsurlfiltersettingArrayOutput {
	return o
}

func (o IpsurlfiltersettingArrayOutput) Index(i pulumi.IntInput) IpsurlfiltersettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ipsurlfiltersetting {
		return vs[0].([]*Ipsurlfiltersetting)[vs[1].(int)]
	}).(IpsurlfiltersettingOutput)
}

type IpsurlfiltersettingMapOutput struct{ *pulumi.OutputState }

func (IpsurlfiltersettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipsurlfiltersetting)(nil)).Elem()
}

func (o IpsurlfiltersettingMapOutput) ToIpsurlfiltersettingMapOutput() IpsurlfiltersettingMapOutput {
	return o
}

func (o IpsurlfiltersettingMapOutput) ToIpsurlfiltersettingMapOutputWithContext(ctx context.Context) IpsurlfiltersettingMapOutput {
	return o
}

func (o IpsurlfiltersettingMapOutput) MapIndex(k pulumi.StringInput) IpsurlfiltersettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ipsurlfiltersetting {
		return vs[0].(map[string]*Ipsurlfiltersetting)[vs[1].(string)]
	}).(IpsurlfiltersettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpsurlfiltersettingInput)(nil)).Elem(), &Ipsurlfiltersetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsurlfiltersettingArrayInput)(nil)).Elem(), IpsurlfiltersettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsurlfiltersettingMapInput)(nil)).Elem(), IpsurlfiltersettingMap{})
	pulumi.RegisterOutputType(IpsurlfiltersettingOutput{})
	pulumi.RegisterOutputType(IpsurlfiltersettingArrayOutput{})
	pulumi.RegisterOutputType(IpsurlfiltersettingMapOutput{})
}
