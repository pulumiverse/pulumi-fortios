// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure IPS URL filter settings for IPv6.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/filter"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := filter.NewIpsurlfiltersetting6(ctx, "trname", &filter.Ipsurlfiltersetting6Args{
//				Distance: pulumi.Int(1),
//				Gateway6: pulumi.String("::"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Webfilter IpsUrlfilterSetting6 can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:filter/web/ipsurlfiltersetting6:Ipsurlfiltersetting6 labelname WebfilterIpsUrlfilterSetting6
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:filter/web/ipsurlfiltersetting6:Ipsurlfiltersetting6 labelname WebfilterIpsUrlfilterSetting6
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Ipsurlfiltersetting6 struct {
	pulumi.CustomResourceState

	// Interface for this route.
	Device pulumi.StringOutput `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntOutput `pulumi:"distance"`
	// Gateway IPv6 address for this route.
	Gateway6 pulumi.StringOutput `pulumi:"gateway6"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrOutput `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewIpsurlfiltersetting6 registers a new resource with the given unique name, arguments, and options.
func NewIpsurlfiltersetting6(ctx *pulumi.Context,
	name string, args *Ipsurlfiltersetting6Args, opts ...pulumi.ResourceOption) (*Ipsurlfiltersetting6, error) {
	if args == nil {
		args = &Ipsurlfiltersetting6Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ipsurlfiltersetting6
	err := ctx.RegisterResource("fortios:filter/web/ipsurlfiltersetting6:Ipsurlfiltersetting6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpsurlfiltersetting6 gets an existing Ipsurlfiltersetting6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpsurlfiltersetting6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ipsurlfiltersetting6State, opts ...pulumi.ResourceOption) (*Ipsurlfiltersetting6, error) {
	var resource Ipsurlfiltersetting6
	err := ctx.ReadResource("fortios:filter/web/ipsurlfiltersetting6:Ipsurlfiltersetting6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ipsurlfiltersetting6 resources.
type ipsurlfiltersetting6State struct {
	// Interface for this route.
	Device *string `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance *int `pulumi:"distance"`
	// Gateway IPv6 address for this route.
	Gateway6 *string `pulumi:"gateway6"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.
	GeoFilter *string `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Ipsurlfiltersetting6State struct {
	// Interface for this route.
	Device pulumi.StringPtrInput
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntPtrInput
	// Gateway IPv6 address for this route.
	Gateway6 pulumi.StringPtrInput
	// Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Ipsurlfiltersetting6State) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsurlfiltersetting6State)(nil)).Elem()
}

type ipsurlfiltersetting6Args struct {
	// Interface for this route.
	Device *string `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance *int `pulumi:"distance"`
	// Gateway IPv6 address for this route.
	Gateway6 *string `pulumi:"gateway6"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.
	GeoFilter *string `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Ipsurlfiltersetting6 resource.
type Ipsurlfiltersetting6Args struct {
	// Interface for this route.
	Device pulumi.StringPtrInput
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntPtrInput
	// Gateway IPv6 address for this route.
	Gateway6 pulumi.StringPtrInput
	// Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Ipsurlfiltersetting6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsurlfiltersetting6Args)(nil)).Elem()
}

type Ipsurlfiltersetting6Input interface {
	pulumi.Input

	ToIpsurlfiltersetting6Output() Ipsurlfiltersetting6Output
	ToIpsurlfiltersetting6OutputWithContext(ctx context.Context) Ipsurlfiltersetting6Output
}

func (*Ipsurlfiltersetting6) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipsurlfiltersetting6)(nil)).Elem()
}

func (i *Ipsurlfiltersetting6) ToIpsurlfiltersetting6Output() Ipsurlfiltersetting6Output {
	return i.ToIpsurlfiltersetting6OutputWithContext(context.Background())
}

func (i *Ipsurlfiltersetting6) ToIpsurlfiltersetting6OutputWithContext(ctx context.Context) Ipsurlfiltersetting6Output {
	return pulumi.ToOutputWithContext(ctx, i).(Ipsurlfiltersetting6Output)
}

// Ipsurlfiltersetting6ArrayInput is an input type that accepts Ipsurlfiltersetting6Array and Ipsurlfiltersetting6ArrayOutput values.
// You can construct a concrete instance of `Ipsurlfiltersetting6ArrayInput` via:
//
//	Ipsurlfiltersetting6Array{ Ipsurlfiltersetting6Args{...} }
type Ipsurlfiltersetting6ArrayInput interface {
	pulumi.Input

	ToIpsurlfiltersetting6ArrayOutput() Ipsurlfiltersetting6ArrayOutput
	ToIpsurlfiltersetting6ArrayOutputWithContext(context.Context) Ipsurlfiltersetting6ArrayOutput
}

type Ipsurlfiltersetting6Array []Ipsurlfiltersetting6Input

func (Ipsurlfiltersetting6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipsurlfiltersetting6)(nil)).Elem()
}

func (i Ipsurlfiltersetting6Array) ToIpsurlfiltersetting6ArrayOutput() Ipsurlfiltersetting6ArrayOutput {
	return i.ToIpsurlfiltersetting6ArrayOutputWithContext(context.Background())
}

func (i Ipsurlfiltersetting6Array) ToIpsurlfiltersetting6ArrayOutputWithContext(ctx context.Context) Ipsurlfiltersetting6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipsurlfiltersetting6ArrayOutput)
}

// Ipsurlfiltersetting6MapInput is an input type that accepts Ipsurlfiltersetting6Map and Ipsurlfiltersetting6MapOutput values.
// You can construct a concrete instance of `Ipsurlfiltersetting6MapInput` via:
//
//	Ipsurlfiltersetting6Map{ "key": Ipsurlfiltersetting6Args{...} }
type Ipsurlfiltersetting6MapInput interface {
	pulumi.Input

	ToIpsurlfiltersetting6MapOutput() Ipsurlfiltersetting6MapOutput
	ToIpsurlfiltersetting6MapOutputWithContext(context.Context) Ipsurlfiltersetting6MapOutput
}

type Ipsurlfiltersetting6Map map[string]Ipsurlfiltersetting6Input

func (Ipsurlfiltersetting6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipsurlfiltersetting6)(nil)).Elem()
}

func (i Ipsurlfiltersetting6Map) ToIpsurlfiltersetting6MapOutput() Ipsurlfiltersetting6MapOutput {
	return i.ToIpsurlfiltersetting6MapOutputWithContext(context.Background())
}

func (i Ipsurlfiltersetting6Map) ToIpsurlfiltersetting6MapOutputWithContext(ctx context.Context) Ipsurlfiltersetting6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipsurlfiltersetting6MapOutput)
}

type Ipsurlfiltersetting6Output struct{ *pulumi.OutputState }

func (Ipsurlfiltersetting6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipsurlfiltersetting6)(nil)).Elem()
}

func (o Ipsurlfiltersetting6Output) ToIpsurlfiltersetting6Output() Ipsurlfiltersetting6Output {
	return o
}

func (o Ipsurlfiltersetting6Output) ToIpsurlfiltersetting6OutputWithContext(ctx context.Context) Ipsurlfiltersetting6Output {
	return o
}

// Interface for this route.
func (o Ipsurlfiltersetting6Output) Device() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipsurlfiltersetting6) pulumi.StringOutput { return v.Device }).(pulumi.StringOutput)
}

// Administrative distance (1 - 255) for this route.
func (o Ipsurlfiltersetting6Output) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v *Ipsurlfiltersetting6) pulumi.IntOutput { return v.Distance }).(pulumi.IntOutput)
}

// Gateway IPv6 address for this route.
func (o Ipsurlfiltersetting6Output) Gateway6() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipsurlfiltersetting6) pulumi.StringOutput { return v.Gateway6 }).(pulumi.StringOutput)
}

// Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.
func (o Ipsurlfiltersetting6Output) GeoFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipsurlfiltersetting6) pulumi.StringPtrOutput { return v.GeoFilter }).(pulumi.StringPtrOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Ipsurlfiltersetting6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipsurlfiltersetting6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Ipsurlfiltersetting6ArrayOutput struct{ *pulumi.OutputState }

func (Ipsurlfiltersetting6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipsurlfiltersetting6)(nil)).Elem()
}

func (o Ipsurlfiltersetting6ArrayOutput) ToIpsurlfiltersetting6ArrayOutput() Ipsurlfiltersetting6ArrayOutput {
	return o
}

func (o Ipsurlfiltersetting6ArrayOutput) ToIpsurlfiltersetting6ArrayOutputWithContext(ctx context.Context) Ipsurlfiltersetting6ArrayOutput {
	return o
}

func (o Ipsurlfiltersetting6ArrayOutput) Index(i pulumi.IntInput) Ipsurlfiltersetting6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ipsurlfiltersetting6 {
		return vs[0].([]*Ipsurlfiltersetting6)[vs[1].(int)]
	}).(Ipsurlfiltersetting6Output)
}

type Ipsurlfiltersetting6MapOutput struct{ *pulumi.OutputState }

func (Ipsurlfiltersetting6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipsurlfiltersetting6)(nil)).Elem()
}

func (o Ipsurlfiltersetting6MapOutput) ToIpsurlfiltersetting6MapOutput() Ipsurlfiltersetting6MapOutput {
	return o
}

func (o Ipsurlfiltersetting6MapOutput) ToIpsurlfiltersetting6MapOutputWithContext(ctx context.Context) Ipsurlfiltersetting6MapOutput {
	return o
}

func (o Ipsurlfiltersetting6MapOutput) MapIndex(k pulumi.StringInput) Ipsurlfiltersetting6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ipsurlfiltersetting6 {
		return vs[0].(map[string]*Ipsurlfiltersetting6)[vs[1].(string)]
	}).(Ipsurlfiltersetting6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ipsurlfiltersetting6Input)(nil)).Elem(), &Ipsurlfiltersetting6{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipsurlfiltersetting6ArrayInput)(nil)).Elem(), Ipsurlfiltersetting6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipsurlfiltersetting6MapInput)(nil)).Elem(), Ipsurlfiltersetting6Map{})
	pulumi.RegisterOutputType(Ipsurlfiltersetting6Output{})
	pulumi.RegisterOutputType(Ipsurlfiltersetting6ArrayOutput{})
	pulumi.RegisterOutputType(Ipsurlfiltersetting6MapOutput{})
}
