// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure FortiGuard Web Filter service.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/filter"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := filter.NewFortiguard(ctx, "trname", &filter.FortiguardArgs{
//				CacheMemPercent:       pulumi.Int(2),
//				CacheMode:             pulumi.String("ttl"),
//				CachePrefixMatch:      pulumi.String("enable"),
//				ClosePorts:            pulumi.String("disable"),
//				OvrdAuthHttps:         pulumi.String("enable"),
//				OvrdAuthPort:          pulumi.Int(8008),
//				OvrdAuthPortHttp:      pulumi.Int(8008),
//				OvrdAuthPortHttps:     pulumi.Int(8010),
//				OvrdAuthPortHttpsFlow: pulumi.Int(8015),
//				OvrdAuthPortWarning:   pulumi.Int(8020),
//				WarnAuthHttps:         pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Webfilter Fortiguard can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:filter/web/fortiguard:Fortiguard labelname WebfilterFortiguard
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:filter/web/fortiguard:Fortiguard labelname WebfilterFortiguard
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Fortiguard struct {
	pulumi.CustomResourceState

	// Maximum percentage of available memory allocated to caching (1 - 15%!)(MISSING).
	CacheMemPercent pulumi.IntOutput `pulumi:"cacheMemPercent"`
	// Maximum permille of available memory allocated to caching (1 - 150).
	CacheMemPermille pulumi.IntOutput `pulumi:"cacheMemPermille"`
	// Cache entry expiration mode. Valid values: `ttl`, `db-ver`.
	CacheMode pulumi.StringOutput `pulumi:"cacheMode"`
	// Enable/disable prefix matching in the cache. Valid values: `enable`, `disable`.
	CachePrefixMatch pulumi.StringOutput `pulumi:"cachePrefixMatch"`
	// Close ports used for HTTP/HTTPS override authentication and disable user overrides. Valid values: `enable`, `disable`.
	ClosePorts pulumi.StringOutput `pulumi:"closePorts"`
	// Enable/disable embedding images into replacement messages (default = enable). Valid values: `enable`, `disable`.
	EmbedImage pulumi.StringOutput `pulumi:"embedImage"`
	// Enable/disable use of HTTPS for override authentication. Valid values: `enable`, `disable`.
	OvrdAuthHttps pulumi.StringOutput `pulumi:"ovrdAuthHttps"`
	// Port to use for FortiGuard Web Filter override authentication.
	OvrdAuthPort pulumi.IntOutput `pulumi:"ovrdAuthPort"`
	// Port to use for FortiGuard Web Filter HTTP override authentication
	OvrdAuthPortHttp pulumi.IntOutput `pulumi:"ovrdAuthPortHttp"`
	// Port to use for FortiGuard Web Filter HTTPS override authentication in proxy mode.
	OvrdAuthPortHttps pulumi.IntOutput `pulumi:"ovrdAuthPortHttps"`
	// Port to use for FortiGuard Web Filter HTTPS override authentication in flow mode.
	OvrdAuthPortHttpsFlow pulumi.IntOutput `pulumi:"ovrdAuthPortHttpsFlow"`
	// Port to use for FortiGuard Web Filter Warning override authentication.
	OvrdAuthPortWarning pulumi.IntOutput `pulumi:"ovrdAuthPortWarning"`
	// Limit size of URL request packets sent to FortiGuard server (0 for default).
	RequestPacketSizeLimit pulumi.IntOutput `pulumi:"requestPacketSizeLimit"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable use of HTTPS for warning and authentication. Valid values: `enable`, `disable`.
	WarnAuthHttps pulumi.StringOutput `pulumi:"warnAuthHttps"`
}

// NewFortiguard registers a new resource with the given unique name, arguments, and options.
func NewFortiguard(ctx *pulumi.Context,
	name string, args *FortiguardArgs, opts ...pulumi.ResourceOption) (*Fortiguard, error) {
	if args == nil {
		args = &FortiguardArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Fortiguard
	err := ctx.RegisterResource("fortios:filter/web/fortiguard:Fortiguard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFortiguard gets an existing Fortiguard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFortiguard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FortiguardState, opts ...pulumi.ResourceOption) (*Fortiguard, error) {
	var resource Fortiguard
	err := ctx.ReadResource("fortios:filter/web/fortiguard:Fortiguard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Fortiguard resources.
type fortiguardState struct {
	// Maximum percentage of available memory allocated to caching (1 - 15%!)(MISSING).
	CacheMemPercent *int `pulumi:"cacheMemPercent"`
	// Maximum permille of available memory allocated to caching (1 - 150).
	CacheMemPermille *int `pulumi:"cacheMemPermille"`
	// Cache entry expiration mode. Valid values: `ttl`, `db-ver`.
	CacheMode *string `pulumi:"cacheMode"`
	// Enable/disable prefix matching in the cache. Valid values: `enable`, `disable`.
	CachePrefixMatch *string `pulumi:"cachePrefixMatch"`
	// Close ports used for HTTP/HTTPS override authentication and disable user overrides. Valid values: `enable`, `disable`.
	ClosePorts *string `pulumi:"closePorts"`
	// Enable/disable embedding images into replacement messages (default = enable). Valid values: `enable`, `disable`.
	EmbedImage *string `pulumi:"embedImage"`
	// Enable/disable use of HTTPS for override authentication. Valid values: `enable`, `disable`.
	OvrdAuthHttps *string `pulumi:"ovrdAuthHttps"`
	// Port to use for FortiGuard Web Filter override authentication.
	OvrdAuthPort *int `pulumi:"ovrdAuthPort"`
	// Port to use for FortiGuard Web Filter HTTP override authentication
	OvrdAuthPortHttp *int `pulumi:"ovrdAuthPortHttp"`
	// Port to use for FortiGuard Web Filter HTTPS override authentication in proxy mode.
	OvrdAuthPortHttps *int `pulumi:"ovrdAuthPortHttps"`
	// Port to use for FortiGuard Web Filter HTTPS override authentication in flow mode.
	OvrdAuthPortHttpsFlow *int `pulumi:"ovrdAuthPortHttpsFlow"`
	// Port to use for FortiGuard Web Filter Warning override authentication.
	OvrdAuthPortWarning *int `pulumi:"ovrdAuthPortWarning"`
	// Limit size of URL request packets sent to FortiGuard server (0 for default).
	RequestPacketSizeLimit *int `pulumi:"requestPacketSizeLimit"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable use of HTTPS for warning and authentication. Valid values: `enable`, `disable`.
	WarnAuthHttps *string `pulumi:"warnAuthHttps"`
}

type FortiguardState struct {
	// Maximum percentage of available memory allocated to caching (1 - 15%!)(MISSING).
	CacheMemPercent pulumi.IntPtrInput
	// Maximum permille of available memory allocated to caching (1 - 150).
	CacheMemPermille pulumi.IntPtrInput
	// Cache entry expiration mode. Valid values: `ttl`, `db-ver`.
	CacheMode pulumi.StringPtrInput
	// Enable/disable prefix matching in the cache. Valid values: `enable`, `disable`.
	CachePrefixMatch pulumi.StringPtrInput
	// Close ports used for HTTP/HTTPS override authentication and disable user overrides. Valid values: `enable`, `disable`.
	ClosePorts pulumi.StringPtrInput
	// Enable/disable embedding images into replacement messages (default = enable). Valid values: `enable`, `disable`.
	EmbedImage pulumi.StringPtrInput
	// Enable/disable use of HTTPS for override authentication. Valid values: `enable`, `disable`.
	OvrdAuthHttps pulumi.StringPtrInput
	// Port to use for FortiGuard Web Filter override authentication.
	OvrdAuthPort pulumi.IntPtrInput
	// Port to use for FortiGuard Web Filter HTTP override authentication
	OvrdAuthPortHttp pulumi.IntPtrInput
	// Port to use for FortiGuard Web Filter HTTPS override authentication in proxy mode.
	OvrdAuthPortHttps pulumi.IntPtrInput
	// Port to use for FortiGuard Web Filter HTTPS override authentication in flow mode.
	OvrdAuthPortHttpsFlow pulumi.IntPtrInput
	// Port to use for FortiGuard Web Filter Warning override authentication.
	OvrdAuthPortWarning pulumi.IntPtrInput
	// Limit size of URL request packets sent to FortiGuard server (0 for default).
	RequestPacketSizeLimit pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable use of HTTPS for warning and authentication. Valid values: `enable`, `disable`.
	WarnAuthHttps pulumi.StringPtrInput
}

func (FortiguardState) ElementType() reflect.Type {
	return reflect.TypeOf((*fortiguardState)(nil)).Elem()
}

type fortiguardArgs struct {
	// Maximum percentage of available memory allocated to caching (1 - 15%!)(MISSING).
	CacheMemPercent *int `pulumi:"cacheMemPercent"`
	// Maximum permille of available memory allocated to caching (1 - 150).
	CacheMemPermille *int `pulumi:"cacheMemPermille"`
	// Cache entry expiration mode. Valid values: `ttl`, `db-ver`.
	CacheMode *string `pulumi:"cacheMode"`
	// Enable/disable prefix matching in the cache. Valid values: `enable`, `disable`.
	CachePrefixMatch *string `pulumi:"cachePrefixMatch"`
	// Close ports used for HTTP/HTTPS override authentication and disable user overrides. Valid values: `enable`, `disable`.
	ClosePorts *string `pulumi:"closePorts"`
	// Enable/disable embedding images into replacement messages (default = enable). Valid values: `enable`, `disable`.
	EmbedImage *string `pulumi:"embedImage"`
	// Enable/disable use of HTTPS for override authentication. Valid values: `enable`, `disable`.
	OvrdAuthHttps *string `pulumi:"ovrdAuthHttps"`
	// Port to use for FortiGuard Web Filter override authentication.
	OvrdAuthPort *int `pulumi:"ovrdAuthPort"`
	// Port to use for FortiGuard Web Filter HTTP override authentication
	OvrdAuthPortHttp *int `pulumi:"ovrdAuthPortHttp"`
	// Port to use for FortiGuard Web Filter HTTPS override authentication in proxy mode.
	OvrdAuthPortHttps *int `pulumi:"ovrdAuthPortHttps"`
	// Port to use for FortiGuard Web Filter HTTPS override authentication in flow mode.
	OvrdAuthPortHttpsFlow *int `pulumi:"ovrdAuthPortHttpsFlow"`
	// Port to use for FortiGuard Web Filter Warning override authentication.
	OvrdAuthPortWarning *int `pulumi:"ovrdAuthPortWarning"`
	// Limit size of URL request packets sent to FortiGuard server (0 for default).
	RequestPacketSizeLimit *int `pulumi:"requestPacketSizeLimit"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable use of HTTPS for warning and authentication. Valid values: `enable`, `disable`.
	WarnAuthHttps *string `pulumi:"warnAuthHttps"`
}

// The set of arguments for constructing a Fortiguard resource.
type FortiguardArgs struct {
	// Maximum percentage of available memory allocated to caching (1 - 15%!)(MISSING).
	CacheMemPercent pulumi.IntPtrInput
	// Maximum permille of available memory allocated to caching (1 - 150).
	CacheMemPermille pulumi.IntPtrInput
	// Cache entry expiration mode. Valid values: `ttl`, `db-ver`.
	CacheMode pulumi.StringPtrInput
	// Enable/disable prefix matching in the cache. Valid values: `enable`, `disable`.
	CachePrefixMatch pulumi.StringPtrInput
	// Close ports used for HTTP/HTTPS override authentication and disable user overrides. Valid values: `enable`, `disable`.
	ClosePorts pulumi.StringPtrInput
	// Enable/disable embedding images into replacement messages (default = enable). Valid values: `enable`, `disable`.
	EmbedImage pulumi.StringPtrInput
	// Enable/disable use of HTTPS for override authentication. Valid values: `enable`, `disable`.
	OvrdAuthHttps pulumi.StringPtrInput
	// Port to use for FortiGuard Web Filter override authentication.
	OvrdAuthPort pulumi.IntPtrInput
	// Port to use for FortiGuard Web Filter HTTP override authentication
	OvrdAuthPortHttp pulumi.IntPtrInput
	// Port to use for FortiGuard Web Filter HTTPS override authentication in proxy mode.
	OvrdAuthPortHttps pulumi.IntPtrInput
	// Port to use for FortiGuard Web Filter HTTPS override authentication in flow mode.
	OvrdAuthPortHttpsFlow pulumi.IntPtrInput
	// Port to use for FortiGuard Web Filter Warning override authentication.
	OvrdAuthPortWarning pulumi.IntPtrInput
	// Limit size of URL request packets sent to FortiGuard server (0 for default).
	RequestPacketSizeLimit pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable use of HTTPS for warning and authentication. Valid values: `enable`, `disable`.
	WarnAuthHttps pulumi.StringPtrInput
}

func (FortiguardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fortiguardArgs)(nil)).Elem()
}

type FortiguardInput interface {
	pulumi.Input

	ToFortiguardOutput() FortiguardOutput
	ToFortiguardOutputWithContext(ctx context.Context) FortiguardOutput
}

func (*Fortiguard) ElementType() reflect.Type {
	return reflect.TypeOf((**Fortiguard)(nil)).Elem()
}

func (i *Fortiguard) ToFortiguardOutput() FortiguardOutput {
	return i.ToFortiguardOutputWithContext(context.Background())
}

func (i *Fortiguard) ToFortiguardOutputWithContext(ctx context.Context) FortiguardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortiguardOutput)
}

// FortiguardArrayInput is an input type that accepts FortiguardArray and FortiguardArrayOutput values.
// You can construct a concrete instance of `FortiguardArrayInput` via:
//
//	FortiguardArray{ FortiguardArgs{...} }
type FortiguardArrayInput interface {
	pulumi.Input

	ToFortiguardArrayOutput() FortiguardArrayOutput
	ToFortiguardArrayOutputWithContext(context.Context) FortiguardArrayOutput
}

type FortiguardArray []FortiguardInput

func (FortiguardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fortiguard)(nil)).Elem()
}

func (i FortiguardArray) ToFortiguardArrayOutput() FortiguardArrayOutput {
	return i.ToFortiguardArrayOutputWithContext(context.Background())
}

func (i FortiguardArray) ToFortiguardArrayOutputWithContext(ctx context.Context) FortiguardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortiguardArrayOutput)
}

// FortiguardMapInput is an input type that accepts FortiguardMap and FortiguardMapOutput values.
// You can construct a concrete instance of `FortiguardMapInput` via:
//
//	FortiguardMap{ "key": FortiguardArgs{...} }
type FortiguardMapInput interface {
	pulumi.Input

	ToFortiguardMapOutput() FortiguardMapOutput
	ToFortiguardMapOutputWithContext(context.Context) FortiguardMapOutput
}

type FortiguardMap map[string]FortiguardInput

func (FortiguardMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fortiguard)(nil)).Elem()
}

func (i FortiguardMap) ToFortiguardMapOutput() FortiguardMapOutput {
	return i.ToFortiguardMapOutputWithContext(context.Background())
}

func (i FortiguardMap) ToFortiguardMapOutputWithContext(ctx context.Context) FortiguardMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortiguardMapOutput)
}

type FortiguardOutput struct{ *pulumi.OutputState }

func (FortiguardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Fortiguard)(nil)).Elem()
}

func (o FortiguardOutput) ToFortiguardOutput() FortiguardOutput {
	return o
}

func (o FortiguardOutput) ToFortiguardOutputWithContext(ctx context.Context) FortiguardOutput {
	return o
}

// Maximum percentage of available memory allocated to caching (1 - 15%!)(MISSING).
func (o FortiguardOutput) CacheMemPercent() pulumi.IntOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.IntOutput { return v.CacheMemPercent }).(pulumi.IntOutput)
}

// Maximum permille of available memory allocated to caching (1 - 150).
func (o FortiguardOutput) CacheMemPermille() pulumi.IntOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.IntOutput { return v.CacheMemPermille }).(pulumi.IntOutput)
}

// Cache entry expiration mode. Valid values: `ttl`, `db-ver`.
func (o FortiguardOutput) CacheMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.StringOutput { return v.CacheMode }).(pulumi.StringOutput)
}

// Enable/disable prefix matching in the cache. Valid values: `enable`, `disable`.
func (o FortiguardOutput) CachePrefixMatch() pulumi.StringOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.StringOutput { return v.CachePrefixMatch }).(pulumi.StringOutput)
}

// Close ports used for HTTP/HTTPS override authentication and disable user overrides. Valid values: `enable`, `disable`.
func (o FortiguardOutput) ClosePorts() pulumi.StringOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.StringOutput { return v.ClosePorts }).(pulumi.StringOutput)
}

// Enable/disable embedding images into replacement messages (default = enable). Valid values: `enable`, `disable`.
func (o FortiguardOutput) EmbedImage() pulumi.StringOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.StringOutput { return v.EmbedImage }).(pulumi.StringOutput)
}

// Enable/disable use of HTTPS for override authentication. Valid values: `enable`, `disable`.
func (o FortiguardOutput) OvrdAuthHttps() pulumi.StringOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.StringOutput { return v.OvrdAuthHttps }).(pulumi.StringOutput)
}

// Port to use for FortiGuard Web Filter override authentication.
func (o FortiguardOutput) OvrdAuthPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.IntOutput { return v.OvrdAuthPort }).(pulumi.IntOutput)
}

// Port to use for FortiGuard Web Filter HTTP override authentication
func (o FortiguardOutput) OvrdAuthPortHttp() pulumi.IntOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.IntOutput { return v.OvrdAuthPortHttp }).(pulumi.IntOutput)
}

// Port to use for FortiGuard Web Filter HTTPS override authentication in proxy mode.
func (o FortiguardOutput) OvrdAuthPortHttps() pulumi.IntOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.IntOutput { return v.OvrdAuthPortHttps }).(pulumi.IntOutput)
}

// Port to use for FortiGuard Web Filter HTTPS override authentication in flow mode.
func (o FortiguardOutput) OvrdAuthPortHttpsFlow() pulumi.IntOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.IntOutput { return v.OvrdAuthPortHttpsFlow }).(pulumi.IntOutput)
}

// Port to use for FortiGuard Web Filter Warning override authentication.
func (o FortiguardOutput) OvrdAuthPortWarning() pulumi.IntOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.IntOutput { return v.OvrdAuthPortWarning }).(pulumi.IntOutput)
}

// Limit size of URL request packets sent to FortiGuard server (0 for default).
func (o FortiguardOutput) RequestPacketSizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.IntOutput { return v.RequestPacketSizeLimit }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FortiguardOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable use of HTTPS for warning and authentication. Valid values: `enable`, `disable`.
func (o FortiguardOutput) WarnAuthHttps() pulumi.StringOutput {
	return o.ApplyT(func(v *Fortiguard) pulumi.StringOutput { return v.WarnAuthHttps }).(pulumi.StringOutput)
}

type FortiguardArrayOutput struct{ *pulumi.OutputState }

func (FortiguardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fortiguard)(nil)).Elem()
}

func (o FortiguardArrayOutput) ToFortiguardArrayOutput() FortiguardArrayOutput {
	return o
}

func (o FortiguardArrayOutput) ToFortiguardArrayOutputWithContext(ctx context.Context) FortiguardArrayOutput {
	return o
}

func (o FortiguardArrayOutput) Index(i pulumi.IntInput) FortiguardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Fortiguard {
		return vs[0].([]*Fortiguard)[vs[1].(int)]
	}).(FortiguardOutput)
}

type FortiguardMapOutput struct{ *pulumi.OutputState }

func (FortiguardMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fortiguard)(nil)).Elem()
}

func (o FortiguardMapOutput) ToFortiguardMapOutput() FortiguardMapOutput {
	return o
}

func (o FortiguardMapOutput) ToFortiguardMapOutputWithContext(ctx context.Context) FortiguardMapOutput {
	return o
}

func (o FortiguardMapOutput) MapIndex(k pulumi.StringInput) FortiguardOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Fortiguard {
		return vs[0].(map[string]*Fortiguard)[vs[1].(string)]
	}).(FortiguardOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FortiguardInput)(nil)).Elem(), &Fortiguard{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortiguardArrayInput)(nil)).Elem(), FortiguardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortiguardMapInput)(nil)).Elem(), FortiguardMap{})
	pulumi.RegisterOutputType(FortiguardOutput{})
	pulumi.RegisterOutputType(FortiguardArrayOutput{})
	pulumi.RegisterOutputType(FortiguardMapOutput{})
}
