// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package video

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure YouTube channel filter. Applies to FortiOS Version `7.0.1,7.0.2,7.0.3,7.0.4,7.0.5,7.0.6,7.0.7,7.0.8,7.0.9,7.0.10,7.0.11,7.0.12,7.0.13,7.2.0,7.2.1,7.2.2,7.2.3,7.2.4,7.2.6,7.4.0,7.4.1`.
//
// ## Import
//
// Videofilter YoutubeChannelFilter can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:filter/video/youtubechannelfilter:Youtubechannelfilter labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:filter/video/youtubechannelfilter:Youtubechannelfilter labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Youtubechannelfilter struct {
	pulumi.CustomResourceState

	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// YouTube channel filter default action. Valid values: `allow`, `monitor`, `block`.
	DefaultAction pulumi.StringOutput `pulumi:"defaultAction"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// YouTube filter entries. The structure of `entries` block is documented below.
	Entries YoutubechannelfilterEntryArrayOutput `pulumi:"entries"`
	// ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Eanble/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringOutput `pulumi:"log"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable overriding category filtering result. Valid values: `enable`, `disable`.
	OverrideCategory pulumi.StringOutput `pulumi:"overrideCategory"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewYoutubechannelfilter registers a new resource with the given unique name, arguments, and options.
func NewYoutubechannelfilter(ctx *pulumi.Context,
	name string, args *YoutubechannelfilterArgs, opts ...pulumi.ResourceOption) (*Youtubechannelfilter, error) {
	if args == nil {
		args = &YoutubechannelfilterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Youtubechannelfilter
	err := ctx.RegisterResource("fortios:filter/video/youtubechannelfilter:Youtubechannelfilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetYoutubechannelfilter gets an existing Youtubechannelfilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetYoutubechannelfilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *YoutubechannelfilterState, opts ...pulumi.ResourceOption) (*Youtubechannelfilter, error) {
	var resource Youtubechannelfilter
	err := ctx.ReadResource("fortios:filter/video/youtubechannelfilter:Youtubechannelfilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Youtubechannelfilter resources.
type youtubechannelfilterState struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// YouTube channel filter default action. Valid values: `allow`, `monitor`, `block`.
	DefaultAction *string `pulumi:"defaultAction"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// YouTube filter entries. The structure of `entries` block is documented below.
	Entries []YoutubechannelfilterEntry `pulumi:"entries"`
	// ID.
	Fosid *int `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Eanble/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Name.
	Name *string `pulumi:"name"`
	// Enable/disable overriding category filtering result. Valid values: `enable`, `disable`.
	OverrideCategory *string `pulumi:"overrideCategory"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type YoutubechannelfilterState struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// YouTube channel filter default action. Valid values: `allow`, `monitor`, `block`.
	DefaultAction pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// YouTube filter entries. The structure of `entries` block is documented below.
	Entries YoutubechannelfilterEntryArrayInput
	// ID.
	Fosid pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Eanble/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Enable/disable overriding category filtering result. Valid values: `enable`, `disable`.
	OverrideCategory pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (YoutubechannelfilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*youtubechannelfilterState)(nil)).Elem()
}

type youtubechannelfilterArgs struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// YouTube channel filter default action. Valid values: `allow`, `monitor`, `block`.
	DefaultAction *string `pulumi:"defaultAction"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// YouTube filter entries. The structure of `entries` block is documented below.
	Entries []YoutubechannelfilterEntry `pulumi:"entries"`
	// ID.
	Fosid *int `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Eanble/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Name.
	Name *string `pulumi:"name"`
	// Enable/disable overriding category filtering result. Valid values: `enable`, `disable`.
	OverrideCategory *string `pulumi:"overrideCategory"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Youtubechannelfilter resource.
type YoutubechannelfilterArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// YouTube channel filter default action. Valid values: `allow`, `monitor`, `block`.
	DefaultAction pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// YouTube filter entries. The structure of `entries` block is documented below.
	Entries YoutubechannelfilterEntryArrayInput
	// ID.
	Fosid pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Eanble/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Enable/disable overriding category filtering result. Valid values: `enable`, `disable`.
	OverrideCategory pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (YoutubechannelfilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*youtubechannelfilterArgs)(nil)).Elem()
}

type YoutubechannelfilterInput interface {
	pulumi.Input

	ToYoutubechannelfilterOutput() YoutubechannelfilterOutput
	ToYoutubechannelfilterOutputWithContext(ctx context.Context) YoutubechannelfilterOutput
}

func (*Youtubechannelfilter) ElementType() reflect.Type {
	return reflect.TypeOf((**Youtubechannelfilter)(nil)).Elem()
}

func (i *Youtubechannelfilter) ToYoutubechannelfilterOutput() YoutubechannelfilterOutput {
	return i.ToYoutubechannelfilterOutputWithContext(context.Background())
}

func (i *Youtubechannelfilter) ToYoutubechannelfilterOutputWithContext(ctx context.Context) YoutubechannelfilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YoutubechannelfilterOutput)
}

// YoutubechannelfilterArrayInput is an input type that accepts YoutubechannelfilterArray and YoutubechannelfilterArrayOutput values.
// You can construct a concrete instance of `YoutubechannelfilterArrayInput` via:
//
//	YoutubechannelfilterArray{ YoutubechannelfilterArgs{...} }
type YoutubechannelfilterArrayInput interface {
	pulumi.Input

	ToYoutubechannelfilterArrayOutput() YoutubechannelfilterArrayOutput
	ToYoutubechannelfilterArrayOutputWithContext(context.Context) YoutubechannelfilterArrayOutput
}

type YoutubechannelfilterArray []YoutubechannelfilterInput

func (YoutubechannelfilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Youtubechannelfilter)(nil)).Elem()
}

func (i YoutubechannelfilterArray) ToYoutubechannelfilterArrayOutput() YoutubechannelfilterArrayOutput {
	return i.ToYoutubechannelfilterArrayOutputWithContext(context.Background())
}

func (i YoutubechannelfilterArray) ToYoutubechannelfilterArrayOutputWithContext(ctx context.Context) YoutubechannelfilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YoutubechannelfilterArrayOutput)
}

// YoutubechannelfilterMapInput is an input type that accepts YoutubechannelfilterMap and YoutubechannelfilterMapOutput values.
// You can construct a concrete instance of `YoutubechannelfilterMapInput` via:
//
//	YoutubechannelfilterMap{ "key": YoutubechannelfilterArgs{...} }
type YoutubechannelfilterMapInput interface {
	pulumi.Input

	ToYoutubechannelfilterMapOutput() YoutubechannelfilterMapOutput
	ToYoutubechannelfilterMapOutputWithContext(context.Context) YoutubechannelfilterMapOutput
}

type YoutubechannelfilterMap map[string]YoutubechannelfilterInput

func (YoutubechannelfilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Youtubechannelfilter)(nil)).Elem()
}

func (i YoutubechannelfilterMap) ToYoutubechannelfilterMapOutput() YoutubechannelfilterMapOutput {
	return i.ToYoutubechannelfilterMapOutputWithContext(context.Background())
}

func (i YoutubechannelfilterMap) ToYoutubechannelfilterMapOutputWithContext(ctx context.Context) YoutubechannelfilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YoutubechannelfilterMapOutput)
}

type YoutubechannelfilterOutput struct{ *pulumi.OutputState }

func (YoutubechannelfilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Youtubechannelfilter)(nil)).Elem()
}

func (o YoutubechannelfilterOutput) ToYoutubechannelfilterOutput() YoutubechannelfilterOutput {
	return o
}

func (o YoutubechannelfilterOutput) ToYoutubechannelfilterOutputWithContext(ctx context.Context) YoutubechannelfilterOutput {
	return o
}

// Comment.
func (o YoutubechannelfilterOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Youtubechannelfilter) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// YouTube channel filter default action. Valid values: `allow`, `monitor`, `block`.
func (o YoutubechannelfilterOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Youtubechannelfilter) pulumi.StringOutput { return v.DefaultAction }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o YoutubechannelfilterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Youtubechannelfilter) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// YouTube filter entries. The structure of `entries` block is documented below.
func (o YoutubechannelfilterOutput) Entries() YoutubechannelfilterEntryArrayOutput {
	return o.ApplyT(func(v *Youtubechannelfilter) YoutubechannelfilterEntryArrayOutput { return v.Entries }).(YoutubechannelfilterEntryArrayOutput)
}

// ID.
func (o YoutubechannelfilterOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *Youtubechannelfilter) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o YoutubechannelfilterOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Youtubechannelfilter) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Eanble/disable logging. Valid values: `enable`, `disable`.
func (o YoutubechannelfilterOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v *Youtubechannelfilter) pulumi.StringOutput { return v.Log }).(pulumi.StringOutput)
}

// Name.
func (o YoutubechannelfilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Youtubechannelfilter) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable overriding category filtering result. Valid values: `enable`, `disable`.
func (o YoutubechannelfilterOutput) OverrideCategory() pulumi.StringOutput {
	return o.ApplyT(func(v *Youtubechannelfilter) pulumi.StringOutput { return v.OverrideCategory }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o YoutubechannelfilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Youtubechannelfilter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type YoutubechannelfilterArrayOutput struct{ *pulumi.OutputState }

func (YoutubechannelfilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Youtubechannelfilter)(nil)).Elem()
}

func (o YoutubechannelfilterArrayOutput) ToYoutubechannelfilterArrayOutput() YoutubechannelfilterArrayOutput {
	return o
}

func (o YoutubechannelfilterArrayOutput) ToYoutubechannelfilterArrayOutputWithContext(ctx context.Context) YoutubechannelfilterArrayOutput {
	return o
}

func (o YoutubechannelfilterArrayOutput) Index(i pulumi.IntInput) YoutubechannelfilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Youtubechannelfilter {
		return vs[0].([]*Youtubechannelfilter)[vs[1].(int)]
	}).(YoutubechannelfilterOutput)
}

type YoutubechannelfilterMapOutput struct{ *pulumi.OutputState }

func (YoutubechannelfilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Youtubechannelfilter)(nil)).Elem()
}

func (o YoutubechannelfilterMapOutput) ToYoutubechannelfilterMapOutput() YoutubechannelfilterMapOutput {
	return o
}

func (o YoutubechannelfilterMapOutput) ToYoutubechannelfilterMapOutputWithContext(ctx context.Context) YoutubechannelfilterMapOutput {
	return o
}

func (o YoutubechannelfilterMapOutput) MapIndex(k pulumi.StringInput) YoutubechannelfilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Youtubechannelfilter {
		return vs[0].(map[string]*Youtubechannelfilter)[vs[1].(string)]
	}).(YoutubechannelfilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*YoutubechannelfilterInput)(nil)).Elem(), &Youtubechannelfilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*YoutubechannelfilterArrayInput)(nil)).Elem(), YoutubechannelfilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*YoutubechannelfilterMapInput)(nil)).Elem(), YoutubechannelfilterMap{})
	pulumi.RegisterOutputType(YoutubechannelfilterOutput{})
	pulumi.RegisterOutputType(YoutubechannelfilterArrayOutput{})
	pulumi.RegisterOutputType(YoutubechannelfilterMapOutput{})
}
