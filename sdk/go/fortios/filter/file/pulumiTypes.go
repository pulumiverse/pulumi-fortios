// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package file

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

var _ = internal.GetEnvOrDefault

type ProfileRule struct {
	// Action taken for matched file. Valid values: `log-only`, `block`.
	Action *string `pulumi:"action"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Traffic direction. On FortiOS versions 6.4.1-7.4.1: HTTP, FTP, SSH, CIFS only. On FortiOS versions >= 7.4.2: HTTP, FTP, SSH, CIFS, and MAPI only. Valid values: `incoming`, `outgoing`, `any`.
	Direction *string `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes []ProfileRuleFileType `pulumi:"fileTypes"`
	// File-filter rule name.
	Name *string `pulumi:"name"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected *string `pulumi:"passwordProtected"`
	// Protocols to apply rule to. Valid values: `http`, `ftp`, `smtp`, `imap`, `pop3`, `mapi`, `cifs`, `ssh`.
	Protocol *string `pulumi:"protocol"`
}

// ProfileRuleInput is an input type that accepts ProfileRuleArgs and ProfileRuleOutput values.
// You can construct a concrete instance of `ProfileRuleInput` via:
//
//	ProfileRuleArgs{...}
type ProfileRuleInput interface {
	pulumi.Input

	ToProfileRuleOutput() ProfileRuleOutput
	ToProfileRuleOutputWithContext(context.Context) ProfileRuleOutput
}

type ProfileRuleArgs struct {
	// Action taken for matched file. Valid values: `log-only`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Traffic direction. On FortiOS versions 6.4.1-7.4.1: HTTP, FTP, SSH, CIFS only. On FortiOS versions >= 7.4.2: HTTP, FTP, SSH, CIFS, and MAPI only. Valid values: `incoming`, `outgoing`, `any`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes ProfileRuleFileTypeArrayInput `pulumi:"fileTypes"`
	// File-filter rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected pulumi.StringPtrInput `pulumi:"passwordProtected"`
	// Protocols to apply rule to. Valid values: `http`, `ftp`, `smtp`, `imap`, `pop3`, `mapi`, `cifs`, `ssh`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ProfileRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileRule)(nil)).Elem()
}

func (i ProfileRuleArgs) ToProfileRuleOutput() ProfileRuleOutput {
	return i.ToProfileRuleOutputWithContext(context.Background())
}

func (i ProfileRuleArgs) ToProfileRuleOutputWithContext(ctx context.Context) ProfileRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileRuleOutput)
}

// ProfileRuleArrayInput is an input type that accepts ProfileRuleArray and ProfileRuleArrayOutput values.
// You can construct a concrete instance of `ProfileRuleArrayInput` via:
//
//	ProfileRuleArray{ ProfileRuleArgs{...} }
type ProfileRuleArrayInput interface {
	pulumi.Input

	ToProfileRuleArrayOutput() ProfileRuleArrayOutput
	ToProfileRuleArrayOutputWithContext(context.Context) ProfileRuleArrayOutput
}

type ProfileRuleArray []ProfileRuleInput

func (ProfileRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileRule)(nil)).Elem()
}

func (i ProfileRuleArray) ToProfileRuleArrayOutput() ProfileRuleArrayOutput {
	return i.ToProfileRuleArrayOutputWithContext(context.Background())
}

func (i ProfileRuleArray) ToProfileRuleArrayOutputWithContext(ctx context.Context) ProfileRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileRuleArrayOutput)
}

type ProfileRuleOutput struct{ *pulumi.OutputState }

func (ProfileRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileRule)(nil)).Elem()
}

func (o ProfileRuleOutput) ToProfileRuleOutput() ProfileRuleOutput {
	return o
}

func (o ProfileRuleOutput) ToProfileRuleOutputWithContext(ctx context.Context) ProfileRuleOutput {
	return o
}

// Action taken for matched file. Valid values: `log-only`, `block`.
func (o ProfileRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Comment.
func (o ProfileRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Traffic direction. On FortiOS versions 6.4.1-7.4.1: HTTP, FTP, SSH, CIFS only. On FortiOS versions >= 7.4.2: HTTP, FTP, SSH, CIFS, and MAPI only. Valid values: `incoming`, `outgoing`, `any`.
func (o ProfileRuleOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileRule) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Select file type. The structure of `fileType` block is documented below.
func (o ProfileRuleOutput) FileTypes() ProfileRuleFileTypeArrayOutput {
	return o.ApplyT(func(v ProfileRule) []ProfileRuleFileType { return v.FileTypes }).(ProfileRuleFileTypeArrayOutput)
}

// File-filter rule name.
func (o ProfileRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Match password-protected files. Valid values: `yes`, `any`.
func (o ProfileRuleOutput) PasswordProtected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileRule) *string { return v.PasswordProtected }).(pulumi.StringPtrOutput)
}

// Protocols to apply rule to. Valid values: `http`, `ftp`, `smtp`, `imap`, `pop3`, `mapi`, `cifs`, `ssh`.
func (o ProfileRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ProfileRuleArrayOutput struct{ *pulumi.OutputState }

func (ProfileRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileRule)(nil)).Elem()
}

func (o ProfileRuleArrayOutput) ToProfileRuleArrayOutput() ProfileRuleArrayOutput {
	return o
}

func (o ProfileRuleArrayOutput) ToProfileRuleArrayOutputWithContext(ctx context.Context) ProfileRuleArrayOutput {
	return o
}

func (o ProfileRuleArrayOutput) Index(i pulumi.IntInput) ProfileRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileRule {
		return vs[0].([]ProfileRule)[vs[1].(int)]
	}).(ProfileRuleOutput)
}

type ProfileRuleFileType struct {
	// File type name.
	Name *string `pulumi:"name"`
}

// ProfileRuleFileTypeInput is an input type that accepts ProfileRuleFileTypeArgs and ProfileRuleFileTypeOutput values.
// You can construct a concrete instance of `ProfileRuleFileTypeInput` via:
//
//	ProfileRuleFileTypeArgs{...}
type ProfileRuleFileTypeInput interface {
	pulumi.Input

	ToProfileRuleFileTypeOutput() ProfileRuleFileTypeOutput
	ToProfileRuleFileTypeOutputWithContext(context.Context) ProfileRuleFileTypeOutput
}

type ProfileRuleFileTypeArgs struct {
	// File type name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProfileRuleFileTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileRuleFileType)(nil)).Elem()
}

func (i ProfileRuleFileTypeArgs) ToProfileRuleFileTypeOutput() ProfileRuleFileTypeOutput {
	return i.ToProfileRuleFileTypeOutputWithContext(context.Background())
}

func (i ProfileRuleFileTypeArgs) ToProfileRuleFileTypeOutputWithContext(ctx context.Context) ProfileRuleFileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileRuleFileTypeOutput)
}

// ProfileRuleFileTypeArrayInput is an input type that accepts ProfileRuleFileTypeArray and ProfileRuleFileTypeArrayOutput values.
// You can construct a concrete instance of `ProfileRuleFileTypeArrayInput` via:
//
//	ProfileRuleFileTypeArray{ ProfileRuleFileTypeArgs{...} }
type ProfileRuleFileTypeArrayInput interface {
	pulumi.Input

	ToProfileRuleFileTypeArrayOutput() ProfileRuleFileTypeArrayOutput
	ToProfileRuleFileTypeArrayOutputWithContext(context.Context) ProfileRuleFileTypeArrayOutput
}

type ProfileRuleFileTypeArray []ProfileRuleFileTypeInput

func (ProfileRuleFileTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileRuleFileType)(nil)).Elem()
}

func (i ProfileRuleFileTypeArray) ToProfileRuleFileTypeArrayOutput() ProfileRuleFileTypeArrayOutput {
	return i.ToProfileRuleFileTypeArrayOutputWithContext(context.Background())
}

func (i ProfileRuleFileTypeArray) ToProfileRuleFileTypeArrayOutputWithContext(ctx context.Context) ProfileRuleFileTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileRuleFileTypeArrayOutput)
}

type ProfileRuleFileTypeOutput struct{ *pulumi.OutputState }

func (ProfileRuleFileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileRuleFileType)(nil)).Elem()
}

func (o ProfileRuleFileTypeOutput) ToProfileRuleFileTypeOutput() ProfileRuleFileTypeOutput {
	return o
}

func (o ProfileRuleFileTypeOutput) ToProfileRuleFileTypeOutputWithContext(ctx context.Context) ProfileRuleFileTypeOutput {
	return o
}

// File type name.
func (o ProfileRuleFileTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileRuleFileType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProfileRuleFileTypeArrayOutput struct{ *pulumi.OutputState }

func (ProfileRuleFileTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileRuleFileType)(nil)).Elem()
}

func (o ProfileRuleFileTypeArrayOutput) ToProfileRuleFileTypeArrayOutput() ProfileRuleFileTypeArrayOutput {
	return o
}

func (o ProfileRuleFileTypeArrayOutput) ToProfileRuleFileTypeArrayOutputWithContext(ctx context.Context) ProfileRuleFileTypeArrayOutput {
	return o
}

func (o ProfileRuleFileTypeArrayOutput) Index(i pulumi.IntInput) ProfileRuleFileTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileRuleFileType {
		return vs[0].([]ProfileRuleFileType)[vs[1].(int)]
	}).(ProfileRuleFileTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileRuleInput)(nil)).Elem(), ProfileRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileRuleArrayInput)(nil)).Elem(), ProfileRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileRuleFileTypeInput)(nil)).Elem(), ProfileRuleFileTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileRuleFileTypeArrayInput)(nil)).Elem(), ProfileRuleFileTypeArray{})
	pulumi.RegisterOutputType(ProfileRuleOutput{})
	pulumi.RegisterOutputType(ProfileRuleArrayOutput{})
	pulumi.RegisterOutputType(ProfileRuleFileTypeOutput{})
	pulumi.RegisterOutputType(ProfileRuleFileTypeArrayOutput{})
}
