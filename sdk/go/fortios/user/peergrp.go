// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package user

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure peer groups.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/user"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			trname2, err := user.NewPeer(ctx, "trname2", &user.PeerArgs{
//				Ca:                pulumi.String("EC-ACC"),
//				CnType:            pulumi.String("string"),
//				LdapMode:          pulumi.String("password"),
//				MandatoryCaVerify: pulumi.String("enable"),
//				TwoFactor:         pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = user.NewPeergrp(ctx, "trname", &user.PeergrpArgs{
//				Members: user.PeergrpMemberArray{
//					&user.PeergrpMemberArgs{
//						Name: trname2.Name,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// User Peergrp can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:user/peergrp:Peergrp labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:user/peergrp:Peergrp labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Peergrp struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Peer group members. The structure of `member` block is documented below.
	Members PeergrpMemberArrayOutput `pulumi:"members"`
	// Peer group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewPeergrp registers a new resource with the given unique name, arguments, and options.
func NewPeergrp(ctx *pulumi.Context,
	name string, args *PeergrpArgs, opts ...pulumi.ResourceOption) (*Peergrp, error) {
	if args == nil {
		args = &PeergrpArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Peergrp
	err := ctx.RegisterResource("fortios:user/peergrp:Peergrp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPeergrp gets an existing Peergrp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPeergrp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PeergrpState, opts ...pulumi.ResourceOption) (*Peergrp, error) {
	var resource Peergrp
	err := ctx.ReadResource("fortios:user/peergrp:Peergrp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Peergrp resources.
type peergrpState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Peer group members. The structure of `member` block is documented below.
	Members []PeergrpMember `pulumi:"members"`
	// Peer group name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type PeergrpState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Peer group members. The structure of `member` block is documented below.
	Members PeergrpMemberArrayInput
	// Peer group name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (PeergrpState) ElementType() reflect.Type {
	return reflect.TypeOf((*peergrpState)(nil)).Elem()
}

type peergrpArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Peer group members. The structure of `member` block is documented below.
	Members []PeergrpMember `pulumi:"members"`
	// Peer group name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Peergrp resource.
type PeergrpArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Peer group members. The structure of `member` block is documented below.
	Members PeergrpMemberArrayInput
	// Peer group name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (PeergrpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*peergrpArgs)(nil)).Elem()
}

type PeergrpInput interface {
	pulumi.Input

	ToPeergrpOutput() PeergrpOutput
	ToPeergrpOutputWithContext(ctx context.Context) PeergrpOutput
}

func (*Peergrp) ElementType() reflect.Type {
	return reflect.TypeOf((**Peergrp)(nil)).Elem()
}

func (i *Peergrp) ToPeergrpOutput() PeergrpOutput {
	return i.ToPeergrpOutputWithContext(context.Background())
}

func (i *Peergrp) ToPeergrpOutputWithContext(ctx context.Context) PeergrpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeergrpOutput)
}

// PeergrpArrayInput is an input type that accepts PeergrpArray and PeergrpArrayOutput values.
// You can construct a concrete instance of `PeergrpArrayInput` via:
//
//	PeergrpArray{ PeergrpArgs{...} }
type PeergrpArrayInput interface {
	pulumi.Input

	ToPeergrpArrayOutput() PeergrpArrayOutput
	ToPeergrpArrayOutputWithContext(context.Context) PeergrpArrayOutput
}

type PeergrpArray []PeergrpInput

func (PeergrpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Peergrp)(nil)).Elem()
}

func (i PeergrpArray) ToPeergrpArrayOutput() PeergrpArrayOutput {
	return i.ToPeergrpArrayOutputWithContext(context.Background())
}

func (i PeergrpArray) ToPeergrpArrayOutputWithContext(ctx context.Context) PeergrpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeergrpArrayOutput)
}

// PeergrpMapInput is an input type that accepts PeergrpMap and PeergrpMapOutput values.
// You can construct a concrete instance of `PeergrpMapInput` via:
//
//	PeergrpMap{ "key": PeergrpArgs{...} }
type PeergrpMapInput interface {
	pulumi.Input

	ToPeergrpMapOutput() PeergrpMapOutput
	ToPeergrpMapOutputWithContext(context.Context) PeergrpMapOutput
}

type PeergrpMap map[string]PeergrpInput

func (PeergrpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Peergrp)(nil)).Elem()
}

func (i PeergrpMap) ToPeergrpMapOutput() PeergrpMapOutput {
	return i.ToPeergrpMapOutputWithContext(context.Background())
}

func (i PeergrpMap) ToPeergrpMapOutputWithContext(ctx context.Context) PeergrpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeergrpMapOutput)
}

type PeergrpOutput struct{ *pulumi.OutputState }

func (PeergrpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Peergrp)(nil)).Elem()
}

func (o PeergrpOutput) ToPeergrpOutput() PeergrpOutput {
	return o
}

func (o PeergrpOutput) ToPeergrpOutputWithContext(ctx context.Context) PeergrpOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o PeergrpOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Peergrp) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o PeergrpOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Peergrp) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Peer group members. The structure of `member` block is documented below.
func (o PeergrpOutput) Members() PeergrpMemberArrayOutput {
	return o.ApplyT(func(v *Peergrp) PeergrpMemberArrayOutput { return v.Members }).(PeergrpMemberArrayOutput)
}

// Peer group name.
func (o PeergrpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Peergrp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o PeergrpOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Peergrp) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type PeergrpArrayOutput struct{ *pulumi.OutputState }

func (PeergrpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Peergrp)(nil)).Elem()
}

func (o PeergrpArrayOutput) ToPeergrpArrayOutput() PeergrpArrayOutput {
	return o
}

func (o PeergrpArrayOutput) ToPeergrpArrayOutputWithContext(ctx context.Context) PeergrpArrayOutput {
	return o
}

func (o PeergrpArrayOutput) Index(i pulumi.IntInput) PeergrpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Peergrp {
		return vs[0].([]*Peergrp)[vs[1].(int)]
	}).(PeergrpOutput)
}

type PeergrpMapOutput struct{ *pulumi.OutputState }

func (PeergrpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Peergrp)(nil)).Elem()
}

func (o PeergrpMapOutput) ToPeergrpMapOutput() PeergrpMapOutput {
	return o
}

func (o PeergrpMapOutput) ToPeergrpMapOutputWithContext(ctx context.Context) PeergrpMapOutput {
	return o
}

func (o PeergrpMapOutput) MapIndex(k pulumi.StringInput) PeergrpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Peergrp {
		return vs[0].(map[string]*Peergrp)[vs[1].(string)]
	}).(PeergrpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PeergrpInput)(nil)).Elem(), &Peergrp{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeergrpArrayInput)(nil)).Elem(), PeergrpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeergrpMapInput)(nil)).Elem(), PeergrpMap{})
	pulumi.RegisterOutputType(PeergrpOutput{})
	pulumi.RegisterOutputType(PeergrpArrayOutput{})
	pulumi.RegisterOutputType(PeergrpMapOutput{})
}
