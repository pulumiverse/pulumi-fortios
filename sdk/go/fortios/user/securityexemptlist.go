// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package user

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure security exemption list.
//
// ## Import
//
// User SecurityExemptList can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:user/securityexemptlist:Securityexemptlist labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:user/securityexemptlist:Securityexemptlist labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Securityexemptlist struct {
	pulumi.CustomResourceState

	// Description.
	Description pulumi.StringOutput `pulumi:"description"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Name of the exempt list.
	Name pulumi.StringOutput `pulumi:"name"`
	// Configure rules for exempting users from captive portal authentication. The structure of `rule` block is documented below.
	Rules SecurityexemptlistRuleArrayOutput `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSecurityexemptlist registers a new resource with the given unique name, arguments, and options.
func NewSecurityexemptlist(ctx *pulumi.Context,
	name string, args *SecurityexemptlistArgs, opts ...pulumi.ResourceOption) (*Securityexemptlist, error) {
	if args == nil {
		args = &SecurityexemptlistArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Securityexemptlist
	err := ctx.RegisterResource("fortios:user/securityexemptlist:Securityexemptlist", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityexemptlist gets an existing Securityexemptlist resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityexemptlist(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityexemptlistState, opts ...pulumi.ResourceOption) (*Securityexemptlist, error) {
	var resource Securityexemptlist
	err := ctx.ReadResource("fortios:user/securityexemptlist:Securityexemptlist", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Securityexemptlist resources.
type securityexemptlistState struct {
	// Description.
	Description *string `pulumi:"description"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Name of the exempt list.
	Name *string `pulumi:"name"`
	// Configure rules for exempting users from captive portal authentication. The structure of `rule` block is documented below.
	Rules []SecurityexemptlistRule `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SecurityexemptlistState struct {
	// Description.
	Description pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Name of the exempt list.
	Name pulumi.StringPtrInput
	// Configure rules for exempting users from captive portal authentication. The structure of `rule` block is documented below.
	Rules SecurityexemptlistRuleArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SecurityexemptlistState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityexemptlistState)(nil)).Elem()
}

type securityexemptlistArgs struct {
	// Description.
	Description *string `pulumi:"description"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Name of the exempt list.
	Name *string `pulumi:"name"`
	// Configure rules for exempting users from captive portal authentication. The structure of `rule` block is documented below.
	Rules []SecurityexemptlistRule `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Securityexemptlist resource.
type SecurityexemptlistArgs struct {
	// Description.
	Description pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Name of the exempt list.
	Name pulumi.StringPtrInput
	// Configure rules for exempting users from captive portal authentication. The structure of `rule` block is documented below.
	Rules SecurityexemptlistRuleArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SecurityexemptlistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityexemptlistArgs)(nil)).Elem()
}

type SecurityexemptlistInput interface {
	pulumi.Input

	ToSecurityexemptlistOutput() SecurityexemptlistOutput
	ToSecurityexemptlistOutputWithContext(ctx context.Context) SecurityexemptlistOutput
}

func (*Securityexemptlist) ElementType() reflect.Type {
	return reflect.TypeOf((**Securityexemptlist)(nil)).Elem()
}

func (i *Securityexemptlist) ToSecurityexemptlistOutput() SecurityexemptlistOutput {
	return i.ToSecurityexemptlistOutputWithContext(context.Background())
}

func (i *Securityexemptlist) ToSecurityexemptlistOutputWithContext(ctx context.Context) SecurityexemptlistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityexemptlistOutput)
}

// SecurityexemptlistArrayInput is an input type that accepts SecurityexemptlistArray and SecurityexemptlistArrayOutput values.
// You can construct a concrete instance of `SecurityexemptlistArrayInput` via:
//
//	SecurityexemptlistArray{ SecurityexemptlistArgs{...} }
type SecurityexemptlistArrayInput interface {
	pulumi.Input

	ToSecurityexemptlistArrayOutput() SecurityexemptlistArrayOutput
	ToSecurityexemptlistArrayOutputWithContext(context.Context) SecurityexemptlistArrayOutput
}

type SecurityexemptlistArray []SecurityexemptlistInput

func (SecurityexemptlistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Securityexemptlist)(nil)).Elem()
}

func (i SecurityexemptlistArray) ToSecurityexemptlistArrayOutput() SecurityexemptlistArrayOutput {
	return i.ToSecurityexemptlistArrayOutputWithContext(context.Background())
}

func (i SecurityexemptlistArray) ToSecurityexemptlistArrayOutputWithContext(ctx context.Context) SecurityexemptlistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityexemptlistArrayOutput)
}

// SecurityexemptlistMapInput is an input type that accepts SecurityexemptlistMap and SecurityexemptlistMapOutput values.
// You can construct a concrete instance of `SecurityexemptlistMapInput` via:
//
//	SecurityexemptlistMap{ "key": SecurityexemptlistArgs{...} }
type SecurityexemptlistMapInput interface {
	pulumi.Input

	ToSecurityexemptlistMapOutput() SecurityexemptlistMapOutput
	ToSecurityexemptlistMapOutputWithContext(context.Context) SecurityexemptlistMapOutput
}

type SecurityexemptlistMap map[string]SecurityexemptlistInput

func (SecurityexemptlistMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Securityexemptlist)(nil)).Elem()
}

func (i SecurityexemptlistMap) ToSecurityexemptlistMapOutput() SecurityexemptlistMapOutput {
	return i.ToSecurityexemptlistMapOutputWithContext(context.Background())
}

func (i SecurityexemptlistMap) ToSecurityexemptlistMapOutputWithContext(ctx context.Context) SecurityexemptlistMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityexemptlistMapOutput)
}

type SecurityexemptlistOutput struct{ *pulumi.OutputState }

func (SecurityexemptlistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Securityexemptlist)(nil)).Elem()
}

func (o SecurityexemptlistOutput) ToSecurityexemptlistOutput() SecurityexemptlistOutput {
	return o
}

func (o SecurityexemptlistOutput) ToSecurityexemptlistOutputWithContext(ctx context.Context) SecurityexemptlistOutput {
	return o
}

// Description.
func (o SecurityexemptlistOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Securityexemptlist) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SecurityexemptlistOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Securityexemptlist) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o SecurityexemptlistOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Securityexemptlist) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Name of the exempt list.
func (o SecurityexemptlistOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Securityexemptlist) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Configure rules for exempting users from captive portal authentication. The structure of `rule` block is documented below.
func (o SecurityexemptlistOutput) Rules() SecurityexemptlistRuleArrayOutput {
	return o.ApplyT(func(v *Securityexemptlist) SecurityexemptlistRuleArrayOutput { return v.Rules }).(SecurityexemptlistRuleArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SecurityexemptlistOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Securityexemptlist) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SecurityexemptlistArrayOutput struct{ *pulumi.OutputState }

func (SecurityexemptlistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Securityexemptlist)(nil)).Elem()
}

func (o SecurityexemptlistArrayOutput) ToSecurityexemptlistArrayOutput() SecurityexemptlistArrayOutput {
	return o
}

func (o SecurityexemptlistArrayOutput) ToSecurityexemptlistArrayOutputWithContext(ctx context.Context) SecurityexemptlistArrayOutput {
	return o
}

func (o SecurityexemptlistArrayOutput) Index(i pulumi.IntInput) SecurityexemptlistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Securityexemptlist {
		return vs[0].([]*Securityexemptlist)[vs[1].(int)]
	}).(SecurityexemptlistOutput)
}

type SecurityexemptlistMapOutput struct{ *pulumi.OutputState }

func (SecurityexemptlistMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Securityexemptlist)(nil)).Elem()
}

func (o SecurityexemptlistMapOutput) ToSecurityexemptlistMapOutput() SecurityexemptlistMapOutput {
	return o
}

func (o SecurityexemptlistMapOutput) ToSecurityexemptlistMapOutputWithContext(ctx context.Context) SecurityexemptlistMapOutput {
	return o
}

func (o SecurityexemptlistMapOutput) MapIndex(k pulumi.StringInput) SecurityexemptlistOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Securityexemptlist {
		return vs[0].(map[string]*Securityexemptlist)[vs[1].(string)]
	}).(SecurityexemptlistOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityexemptlistInput)(nil)).Elem(), &Securityexemptlist{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityexemptlistArrayInput)(nil)).Elem(), SecurityexemptlistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityexemptlistMapInput)(nil)).Elem(), SecurityexemptlistMap{})
	pulumi.RegisterOutputType(SecurityexemptlistOutput{})
	pulumi.RegisterOutputType(SecurityexemptlistArrayOutput{})
	pulumi.RegisterOutputType(SecurityexemptlistMapOutput{})
}
