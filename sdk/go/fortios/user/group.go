// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package user

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure user groups.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/user"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := user.NewGroup(ctx, "trname", &user.GroupArgs{
//				Company:     pulumi.String("optional"),
//				Email:       pulumi.String("enable"),
//				Expire:      pulumi.Int(14400),
//				ExpireType:  pulumi.String("immediately"),
//				GroupType:   pulumi.String("firewall"),
//				MaxAccounts: pulumi.Int(0),
//				Members: user.GroupMemberArray{
//					&user.GroupMemberArgs{
//						Name: pulumi.String("guest"),
//					},
//				},
//				MobilePhone:      pulumi.String("disable"),
//				MultipleGuestAdd: pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// User Group can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:user/group:Group labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:user/group:Group labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Group struct {
	pulumi.CustomResourceState

	// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
	AuthConcurrentOverride pulumi.StringOutput `pulumi:"authConcurrentOverride"`
	// Maximum number of concurrent authenticated connections per user (0 - 100).
	AuthConcurrentValue pulumi.IntOutput `pulumi:"authConcurrentValue"`
	// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
	Authtimeout pulumi.IntOutput `pulumi:"authtimeout"`
	// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Company pulumi.StringOutput `pulumi:"company"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
	Email pulumi.StringOutput `pulumi:"email"`
	// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
	Expire pulumi.IntOutput `pulumi:"expire"`
	// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
	ExpireType pulumi.StringOutput `pulumi:"expireType"`
	// Group ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
	GroupType pulumi.StringOutput `pulumi:"groupType"`
	// Guest User. The structure of `guest` block is documented below.
	Guests GroupGuestArrayOutput `pulumi:"guests"`
	// Realm attribute for MD5-digest authentication.
	HttpDigestRealm pulumi.StringOutput `pulumi:"httpDigestRealm"`
	// Group matches. The structure of `match` block is documented below.
	Matches GroupMatchArrayOutput `pulumi:"matches"`
	// Maximum number of guest accounts that can be created for this group (0 means unlimited).
	MaxAccounts pulumi.IntOutput `pulumi:"maxAccounts"`
	// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
	Members GroupMemberArrayOutput `pulumi:"members"`
	// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
	MobilePhone pulumi.StringOutput `pulumi:"mobilePhone"`
	// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
	MultipleGuestAdd pulumi.StringOutput `pulumi:"multipleGuestAdd"`
	// Group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
	Password pulumi.StringOutput `pulumi:"password"`
	// SMS server.
	SmsCustomServer pulumi.StringOutput `pulumi:"smsCustomServer"`
	// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
	SmsServer pulumi.StringOutput `pulumi:"smsServer"`
	// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Sponsor pulumi.StringOutput `pulumi:"sponsor"`
	// Name of the RADIUS user group that this local user group represents.
	SsoAttributeValue pulumi.StringOutput `pulumi:"ssoAttributeValue"`
	// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
	UserId pulumi.StringOutput `pulumi:"userId"`
	// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
	UserName pulumi.StringOutput `pulumi:"userName"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewGroup registers a new resource with the given unique name, arguments, and options.
func NewGroup(ctx *pulumi.Context,
	name string, args *GroupArgs, opts ...pulumi.ResourceOption) (*Group, error) {
	if args == nil {
		args = &GroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Group
	err := ctx.RegisterResource("fortios:user/group:Group", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroup gets an existing Group resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupState, opts ...pulumi.ResourceOption) (*Group, error) {
	var resource Group
	err := ctx.ReadResource("fortios:user/group:Group", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Group resources.
type groupState struct {
	// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
	AuthConcurrentOverride *string `pulumi:"authConcurrentOverride"`
	// Maximum number of concurrent authenticated connections per user (0 - 100).
	AuthConcurrentValue *int `pulumi:"authConcurrentValue"`
	// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
	Authtimeout *int `pulumi:"authtimeout"`
	// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Company *string `pulumi:"company"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
	Email *string `pulumi:"email"`
	// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
	Expire *int `pulumi:"expire"`
	// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
	ExpireType *string `pulumi:"expireType"`
	// Group ID.
	Fosid *int `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
	GroupType *string `pulumi:"groupType"`
	// Guest User. The structure of `guest` block is documented below.
	Guests []GroupGuest `pulumi:"guests"`
	// Realm attribute for MD5-digest authentication.
	HttpDigestRealm *string `pulumi:"httpDigestRealm"`
	// Group matches. The structure of `match` block is documented below.
	Matches []GroupMatch `pulumi:"matches"`
	// Maximum number of guest accounts that can be created for this group (0 means unlimited).
	MaxAccounts *int `pulumi:"maxAccounts"`
	// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
	Members []GroupMember `pulumi:"members"`
	// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
	MobilePhone *string `pulumi:"mobilePhone"`
	// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
	MultipleGuestAdd *string `pulumi:"multipleGuestAdd"`
	// Group name.
	Name *string `pulumi:"name"`
	// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
	Password *string `pulumi:"password"`
	// SMS server.
	SmsCustomServer *string `pulumi:"smsCustomServer"`
	// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
	SmsServer *string `pulumi:"smsServer"`
	// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Sponsor *string `pulumi:"sponsor"`
	// Name of the RADIUS user group that this local user group represents.
	SsoAttributeValue *string `pulumi:"ssoAttributeValue"`
	// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
	UserId *string `pulumi:"userId"`
	// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
	UserName *string `pulumi:"userName"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type GroupState struct {
	// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
	AuthConcurrentOverride pulumi.StringPtrInput
	// Maximum number of concurrent authenticated connections per user (0 - 100).
	AuthConcurrentValue pulumi.IntPtrInput
	// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
	Authtimeout pulumi.IntPtrInput
	// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Company pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
	Email pulumi.StringPtrInput
	// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
	Expire pulumi.IntPtrInput
	// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
	ExpireType pulumi.StringPtrInput
	// Group ID.
	Fosid pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
	GroupType pulumi.StringPtrInput
	// Guest User. The structure of `guest` block is documented below.
	Guests GroupGuestArrayInput
	// Realm attribute for MD5-digest authentication.
	HttpDigestRealm pulumi.StringPtrInput
	// Group matches. The structure of `match` block is documented below.
	Matches GroupMatchArrayInput
	// Maximum number of guest accounts that can be created for this group (0 means unlimited).
	MaxAccounts pulumi.IntPtrInput
	// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
	Members GroupMemberArrayInput
	// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
	MobilePhone pulumi.StringPtrInput
	// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
	MultipleGuestAdd pulumi.StringPtrInput
	// Group name.
	Name pulumi.StringPtrInput
	// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
	Password pulumi.StringPtrInput
	// SMS server.
	SmsCustomServer pulumi.StringPtrInput
	// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
	SmsServer pulumi.StringPtrInput
	// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Sponsor pulumi.StringPtrInput
	// Name of the RADIUS user group that this local user group represents.
	SsoAttributeValue pulumi.StringPtrInput
	// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
	UserId pulumi.StringPtrInput
	// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
	UserName pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (GroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupState)(nil)).Elem()
}

type groupArgs struct {
	// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
	AuthConcurrentOverride *string `pulumi:"authConcurrentOverride"`
	// Maximum number of concurrent authenticated connections per user (0 - 100).
	AuthConcurrentValue *int `pulumi:"authConcurrentValue"`
	// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
	Authtimeout *int `pulumi:"authtimeout"`
	// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Company *string `pulumi:"company"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
	Email *string `pulumi:"email"`
	// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
	Expire *int `pulumi:"expire"`
	// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
	ExpireType *string `pulumi:"expireType"`
	// Group ID.
	Fosid *int `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
	GroupType *string `pulumi:"groupType"`
	// Guest User. The structure of `guest` block is documented below.
	Guests []GroupGuest `pulumi:"guests"`
	// Realm attribute for MD5-digest authentication.
	HttpDigestRealm *string `pulumi:"httpDigestRealm"`
	// Group matches. The structure of `match` block is documented below.
	Matches []GroupMatch `pulumi:"matches"`
	// Maximum number of guest accounts that can be created for this group (0 means unlimited).
	MaxAccounts *int `pulumi:"maxAccounts"`
	// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
	Members []GroupMember `pulumi:"members"`
	// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
	MobilePhone *string `pulumi:"mobilePhone"`
	// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
	MultipleGuestAdd *string `pulumi:"multipleGuestAdd"`
	// Group name.
	Name *string `pulumi:"name"`
	// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
	Password *string `pulumi:"password"`
	// SMS server.
	SmsCustomServer *string `pulumi:"smsCustomServer"`
	// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
	SmsServer *string `pulumi:"smsServer"`
	// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Sponsor *string `pulumi:"sponsor"`
	// Name of the RADIUS user group that this local user group represents.
	SsoAttributeValue *string `pulumi:"ssoAttributeValue"`
	// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
	UserId *string `pulumi:"userId"`
	// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
	UserName *string `pulumi:"userName"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Group resource.
type GroupArgs struct {
	// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
	AuthConcurrentOverride pulumi.StringPtrInput
	// Maximum number of concurrent authenticated connections per user (0 - 100).
	AuthConcurrentValue pulumi.IntPtrInput
	// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
	Authtimeout pulumi.IntPtrInput
	// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Company pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
	Email pulumi.StringPtrInput
	// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
	Expire pulumi.IntPtrInput
	// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
	ExpireType pulumi.StringPtrInput
	// Group ID.
	Fosid pulumi.IntPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
	GroupType pulumi.StringPtrInput
	// Guest User. The structure of `guest` block is documented below.
	Guests GroupGuestArrayInput
	// Realm attribute for MD5-digest authentication.
	HttpDigestRealm pulumi.StringPtrInput
	// Group matches. The structure of `match` block is documented below.
	Matches GroupMatchArrayInput
	// Maximum number of guest accounts that can be created for this group (0 means unlimited).
	MaxAccounts pulumi.IntPtrInput
	// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
	Members GroupMemberArrayInput
	// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
	MobilePhone pulumi.StringPtrInput
	// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
	MultipleGuestAdd pulumi.StringPtrInput
	// Group name.
	Name pulumi.StringPtrInput
	// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
	Password pulumi.StringPtrInput
	// SMS server.
	SmsCustomServer pulumi.StringPtrInput
	// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
	SmsServer pulumi.StringPtrInput
	// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Sponsor pulumi.StringPtrInput
	// Name of the RADIUS user group that this local user group represents.
	SsoAttributeValue pulumi.StringPtrInput
	// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
	UserId pulumi.StringPtrInput
	// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
	UserName pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupArgs)(nil)).Elem()
}

type GroupInput interface {
	pulumi.Input

	ToGroupOutput() GroupOutput
	ToGroupOutputWithContext(ctx context.Context) GroupOutput
}

func (*Group) ElementType() reflect.Type {
	return reflect.TypeOf((**Group)(nil)).Elem()
}

func (i *Group) ToGroupOutput() GroupOutput {
	return i.ToGroupOutputWithContext(context.Background())
}

func (i *Group) ToGroupOutputWithContext(ctx context.Context) GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupOutput)
}

// GroupArrayInput is an input type that accepts GroupArray and GroupArrayOutput values.
// You can construct a concrete instance of `GroupArrayInput` via:
//
//	GroupArray{ GroupArgs{...} }
type GroupArrayInput interface {
	pulumi.Input

	ToGroupArrayOutput() GroupArrayOutput
	ToGroupArrayOutputWithContext(context.Context) GroupArrayOutput
}

type GroupArray []GroupInput

func (GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Group)(nil)).Elem()
}

func (i GroupArray) ToGroupArrayOutput() GroupArrayOutput {
	return i.ToGroupArrayOutputWithContext(context.Background())
}

func (i GroupArray) ToGroupArrayOutputWithContext(ctx context.Context) GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupArrayOutput)
}

// GroupMapInput is an input type that accepts GroupMap and GroupMapOutput values.
// You can construct a concrete instance of `GroupMapInput` via:
//
//	GroupMap{ "key": GroupArgs{...} }
type GroupMapInput interface {
	pulumi.Input

	ToGroupMapOutput() GroupMapOutput
	ToGroupMapOutputWithContext(context.Context) GroupMapOutput
}

type GroupMap map[string]GroupInput

func (GroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Group)(nil)).Elem()
}

func (i GroupMap) ToGroupMapOutput() GroupMapOutput {
	return i.ToGroupMapOutputWithContext(context.Background())
}

func (i GroupMap) ToGroupMapOutputWithContext(ctx context.Context) GroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMapOutput)
}

type GroupOutput struct{ *pulumi.OutputState }

func (GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Group)(nil)).Elem()
}

func (o GroupOutput) ToGroupOutput() GroupOutput {
	return o
}

func (o GroupOutput) ToGroupOutputWithContext(ctx context.Context) GroupOutput {
	return o
}

// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
func (o GroupOutput) AuthConcurrentOverride() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.AuthConcurrentOverride }).(pulumi.StringOutput)
}

// Maximum number of concurrent authenticated connections per user (0 - 100).
func (o GroupOutput) AuthConcurrentValue() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.AuthConcurrentValue }).(pulumi.IntOutput)
}

// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
func (o GroupOutput) Authtimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.Authtimeout }).(pulumi.IntOutput)
}

// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
func (o GroupOutput) Company() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Company }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o GroupOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
func (o GroupOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
func (o GroupOutput) Expire() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.Expire }).(pulumi.IntOutput)
}

// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
func (o GroupOutput) ExpireType() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.ExpireType }).(pulumi.StringOutput)
}

// Group ID.
func (o GroupOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o GroupOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
func (o GroupOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.GroupType }).(pulumi.StringOutput)
}

// Guest User. The structure of `guest` block is documented below.
func (o GroupOutput) Guests() GroupGuestArrayOutput {
	return o.ApplyT(func(v *Group) GroupGuestArrayOutput { return v.Guests }).(GroupGuestArrayOutput)
}

// Realm attribute for MD5-digest authentication.
func (o GroupOutput) HttpDigestRealm() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.HttpDigestRealm }).(pulumi.StringOutput)
}

// Group matches. The structure of `match` block is documented below.
func (o GroupOutput) Matches() GroupMatchArrayOutput {
	return o.ApplyT(func(v *Group) GroupMatchArrayOutput { return v.Matches }).(GroupMatchArrayOutput)
}

// Maximum number of guest accounts that can be created for this group (0 means unlimited).
func (o GroupOutput) MaxAccounts() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.MaxAccounts }).(pulumi.IntOutput)
}

// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
func (o GroupOutput) Members() GroupMemberArrayOutput {
	return o.ApplyT(func(v *Group) GroupMemberArrayOutput { return v.Members }).(GroupMemberArrayOutput)
}

// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
func (o GroupOutput) MobilePhone() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.MobilePhone }).(pulumi.StringOutput)
}

// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
func (o GroupOutput) MultipleGuestAdd() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.MultipleGuestAdd }).(pulumi.StringOutput)
}

// Group name.
func (o GroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
func (o GroupOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// SMS server.
func (o GroupOutput) SmsCustomServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.SmsCustomServer }).(pulumi.StringOutput)
}

// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
func (o GroupOutput) SmsServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.SmsServer }).(pulumi.StringOutput)
}

// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
func (o GroupOutput) Sponsor() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Sponsor }).(pulumi.StringOutput)
}

// Name of the RADIUS user group that this local user group represents.
func (o GroupOutput) SsoAttributeValue() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.SsoAttributeValue }).(pulumi.StringOutput)
}

// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
func (o GroupOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
func (o GroupOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o GroupOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type GroupArrayOutput struct{ *pulumi.OutputState }

func (GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Group)(nil)).Elem()
}

func (o GroupArrayOutput) ToGroupArrayOutput() GroupArrayOutput {
	return o
}

func (o GroupArrayOutput) ToGroupArrayOutputWithContext(ctx context.Context) GroupArrayOutput {
	return o
}

func (o GroupArrayOutput) Index(i pulumi.IntInput) GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Group {
		return vs[0].([]*Group)[vs[1].(int)]
	}).(GroupOutput)
}

type GroupMapOutput struct{ *pulumi.OutputState }

func (GroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Group)(nil)).Elem()
}

func (o GroupMapOutput) ToGroupMapOutput() GroupMapOutput {
	return o
}

func (o GroupMapOutput) ToGroupMapOutputWithContext(ctx context.Context) GroupMapOutput {
	return o
}

func (o GroupMapOutput) MapIndex(k pulumi.StringInput) GroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Group {
		return vs[0].(map[string]*Group)[vs[1].(string)]
	}).(GroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInput)(nil)).Elem(), &Group{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupArrayInput)(nil)).Elem(), GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMapInput)(nil)).Elem(), GroupMap{})
	pulumi.RegisterOutputType(GroupOutput{})
	pulumi.RegisterOutputType(GroupArrayOutput{})
	pulumi.RegisterOutputType(GroupMapOutput{})
}
