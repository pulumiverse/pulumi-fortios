// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package user

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure Fortinet Single Sign On (FSSO) agents.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/user"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := user.NewFsso(ctx, "trname", &user.FssoArgs{
//				Port:      pulumi.Int(32381),
//				Port2:     pulumi.Int(8000),
//				Port3:     pulumi.Int(8000),
//				Port4:     pulumi.Int(8000),
//				Port5:     pulumi.Int(8000),
//				Server:    pulumi.String("1.1.1.1"),
//				SourceIp:  pulumi.String("0.0.0.0"),
//				SourceIp6: pulumi.String("::"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// User Fsso can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:user/fsso:Fsso labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:user/fsso:Fsso labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Fsso struct {
	pulumi.CustomResourceState

	// Interval in minutes within to fetch groups from FSSO server, or unset to disable.
	GroupPollInterval pulumi.IntOutput `pulumi:"groupPollInterval"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// Enable/disable automatic fetching of groups from LDAP server. Valid values: `enable`, `disable`.
	LdapPoll pulumi.StringOutput `pulumi:"ldapPoll"`
	// Filter used to fetch groups.
	LdapPollFilter pulumi.StringOutput `pulumi:"ldapPollFilter"`
	// Interval in minutes within to fetch groups from LDAP server.
	LdapPollInterval pulumi.IntOutput `pulumi:"ldapPollInterval"`
	// LDAP server to get group information.
	LdapServer pulumi.StringOutput `pulumi:"ldapServer"`
	// Interval in minutes to keep logons after FSSO server down.
	LogonTimeout pulumi.IntOutput `pulumi:"logonTimeout"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Password of the first FSSO collector agent.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Password of the second FSSO collector agent.
	Password2 pulumi.StringPtrOutput `pulumi:"password2"`
	// Password of the third FSSO collector agent.
	Password3 pulumi.StringPtrOutput `pulumi:"password3"`
	// Password of the fourth FSSO collector agent.
	Password4 pulumi.StringPtrOutput `pulumi:"password4"`
	// Password of the fifth FSSO collector agent.
	Password5 pulumi.StringPtrOutput `pulumi:"password5"`
	// Port of the first FSSO collector agent.
	Port pulumi.IntOutput `pulumi:"port"`
	// Port of the second FSSO collector agent.
	Port2 pulumi.IntOutput `pulumi:"port2"`
	// Port of the third FSSO collector agent.
	Port3 pulumi.IntOutput `pulumi:"port3"`
	// Port of the fourth FSSO collector agent.
	Port4 pulumi.IntOutput `pulumi:"port4"`
	// Port of the fifth FSSO collector agent.
	Port5 pulumi.IntOutput `pulumi:"port5"`
	// Domain name or IP address of the first FSSO collector agent.
	Server pulumi.StringOutput `pulumi:"server"`
	// Domain name or IP address of the second FSSO collector agent.
	Server2 pulumi.StringOutput `pulumi:"server2"`
	// Domain name or IP address of the third FSSO collector agent.
	Server3 pulumi.StringOutput `pulumi:"server3"`
	// Domain name or IP address of the fourth FSSO collector agent.
	Server4 pulumi.StringOutput `pulumi:"server4"`
	// Domain name or IP address of the fifth FSSO collector agent.
	Server5 pulumi.StringOutput `pulumi:"server5"`
	// Server Name Indication.
	Sni pulumi.StringOutput `pulumi:"sni"`
	// Source IP for communications to FSSO agent.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// IPv6 source for communications to FSSO agent.
	SourceIp6 pulumi.StringOutput `pulumi:"sourceIp6"`
	// Enable/disable use of SSL. Valid values: `enable`, `disable`.
	Ssl pulumi.StringOutput `pulumi:"ssl"`
	// Enable/disable server host/IP verification. Valid values: `enable`, `disable`.
	SslServerHostIpCheck pulumi.StringOutput `pulumi:"sslServerHostIpCheck"`
	// Trusted server certificate or CA certificate.
	SslTrustedCert pulumi.StringOutput `pulumi:"sslTrustedCert"`
	// Server type.
	Type pulumi.StringOutput `pulumi:"type"`
	// LDAP server to get user information.
	UserInfoServer pulumi.StringOutput `pulumi:"userInfoServer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewFsso registers a new resource with the given unique name, arguments, and options.
func NewFsso(ctx *pulumi.Context,
	name string, args *FssoArgs, opts ...pulumi.ResourceOption) (*Fsso, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Server == nil {
		return nil, errors.New("invalid value for required argument 'Server'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.Password2 != nil {
		args.Password2 = pulumi.ToSecret(args.Password2).(pulumi.StringPtrInput)
	}
	if args.Password3 != nil {
		args.Password3 = pulumi.ToSecret(args.Password3).(pulumi.StringPtrInput)
	}
	if args.Password4 != nil {
		args.Password4 = pulumi.ToSecret(args.Password4).(pulumi.StringPtrInput)
	}
	if args.Password5 != nil {
		args.Password5 = pulumi.ToSecret(args.Password5).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
		"password2",
		"password3",
		"password4",
		"password5",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Fsso
	err := ctx.RegisterResource("fortios:user/fsso:Fsso", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFsso gets an existing Fsso resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFsso(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FssoState, opts ...pulumi.ResourceOption) (*Fsso, error) {
	var resource Fsso
	err := ctx.ReadResource("fortios:user/fsso:Fsso", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Fsso resources.
type fssoState struct {
	// Interval in minutes within to fetch groups from FSSO server, or unset to disable.
	GroupPollInterval *int `pulumi:"groupPollInterval"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Enable/disable automatic fetching of groups from LDAP server. Valid values: `enable`, `disable`.
	LdapPoll *string `pulumi:"ldapPoll"`
	// Filter used to fetch groups.
	LdapPollFilter *string `pulumi:"ldapPollFilter"`
	// Interval in minutes within to fetch groups from LDAP server.
	LdapPollInterval *int `pulumi:"ldapPollInterval"`
	// LDAP server to get group information.
	LdapServer *string `pulumi:"ldapServer"`
	// Interval in minutes to keep logons after FSSO server down.
	LogonTimeout *int `pulumi:"logonTimeout"`
	// Name.
	Name *string `pulumi:"name"`
	// Password of the first FSSO collector agent.
	Password *string `pulumi:"password"`
	// Password of the second FSSO collector agent.
	Password2 *string `pulumi:"password2"`
	// Password of the third FSSO collector agent.
	Password3 *string `pulumi:"password3"`
	// Password of the fourth FSSO collector agent.
	Password4 *string `pulumi:"password4"`
	// Password of the fifth FSSO collector agent.
	Password5 *string `pulumi:"password5"`
	// Port of the first FSSO collector agent.
	Port *int `pulumi:"port"`
	// Port of the second FSSO collector agent.
	Port2 *int `pulumi:"port2"`
	// Port of the third FSSO collector agent.
	Port3 *int `pulumi:"port3"`
	// Port of the fourth FSSO collector agent.
	Port4 *int `pulumi:"port4"`
	// Port of the fifth FSSO collector agent.
	Port5 *int `pulumi:"port5"`
	// Domain name or IP address of the first FSSO collector agent.
	Server *string `pulumi:"server"`
	// Domain name or IP address of the second FSSO collector agent.
	Server2 *string `pulumi:"server2"`
	// Domain name or IP address of the third FSSO collector agent.
	Server3 *string `pulumi:"server3"`
	// Domain name or IP address of the fourth FSSO collector agent.
	Server4 *string `pulumi:"server4"`
	// Domain name or IP address of the fifth FSSO collector agent.
	Server5 *string `pulumi:"server5"`
	// Server Name Indication.
	Sni *string `pulumi:"sni"`
	// Source IP for communications to FSSO agent.
	SourceIp *string `pulumi:"sourceIp"`
	// IPv6 source for communications to FSSO agent.
	SourceIp6 *string `pulumi:"sourceIp6"`
	// Enable/disable use of SSL. Valid values: `enable`, `disable`.
	Ssl *string `pulumi:"ssl"`
	// Enable/disable server host/IP verification. Valid values: `enable`, `disable`.
	SslServerHostIpCheck *string `pulumi:"sslServerHostIpCheck"`
	// Trusted server certificate or CA certificate.
	SslTrustedCert *string `pulumi:"sslTrustedCert"`
	// Server type.
	Type *string `pulumi:"type"`
	// LDAP server to get user information.
	UserInfoServer *string `pulumi:"userInfoServer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FssoState struct {
	// Interval in minutes within to fetch groups from FSSO server, or unset to disable.
	GroupPollInterval pulumi.IntPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Enable/disable automatic fetching of groups from LDAP server. Valid values: `enable`, `disable`.
	LdapPoll pulumi.StringPtrInput
	// Filter used to fetch groups.
	LdapPollFilter pulumi.StringPtrInput
	// Interval in minutes within to fetch groups from LDAP server.
	LdapPollInterval pulumi.IntPtrInput
	// LDAP server to get group information.
	LdapServer pulumi.StringPtrInput
	// Interval in minutes to keep logons after FSSO server down.
	LogonTimeout pulumi.IntPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Password of the first FSSO collector agent.
	Password pulumi.StringPtrInput
	// Password of the second FSSO collector agent.
	Password2 pulumi.StringPtrInput
	// Password of the third FSSO collector agent.
	Password3 pulumi.StringPtrInput
	// Password of the fourth FSSO collector agent.
	Password4 pulumi.StringPtrInput
	// Password of the fifth FSSO collector agent.
	Password5 pulumi.StringPtrInput
	// Port of the first FSSO collector agent.
	Port pulumi.IntPtrInput
	// Port of the second FSSO collector agent.
	Port2 pulumi.IntPtrInput
	// Port of the third FSSO collector agent.
	Port3 pulumi.IntPtrInput
	// Port of the fourth FSSO collector agent.
	Port4 pulumi.IntPtrInput
	// Port of the fifth FSSO collector agent.
	Port5 pulumi.IntPtrInput
	// Domain name or IP address of the first FSSO collector agent.
	Server pulumi.StringPtrInput
	// Domain name or IP address of the second FSSO collector agent.
	Server2 pulumi.StringPtrInput
	// Domain name or IP address of the third FSSO collector agent.
	Server3 pulumi.StringPtrInput
	// Domain name or IP address of the fourth FSSO collector agent.
	Server4 pulumi.StringPtrInput
	// Domain name or IP address of the fifth FSSO collector agent.
	Server5 pulumi.StringPtrInput
	// Server Name Indication.
	Sni pulumi.StringPtrInput
	// Source IP for communications to FSSO agent.
	SourceIp pulumi.StringPtrInput
	// IPv6 source for communications to FSSO agent.
	SourceIp6 pulumi.StringPtrInput
	// Enable/disable use of SSL. Valid values: `enable`, `disable`.
	Ssl pulumi.StringPtrInput
	// Enable/disable server host/IP verification. Valid values: `enable`, `disable`.
	SslServerHostIpCheck pulumi.StringPtrInput
	// Trusted server certificate or CA certificate.
	SslTrustedCert pulumi.StringPtrInput
	// Server type.
	Type pulumi.StringPtrInput
	// LDAP server to get user information.
	UserInfoServer pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FssoState) ElementType() reflect.Type {
	return reflect.TypeOf((*fssoState)(nil)).Elem()
}

type fssoArgs struct {
	// Interval in minutes within to fetch groups from FSSO server, or unset to disable.
	GroupPollInterval *int `pulumi:"groupPollInterval"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Enable/disable automatic fetching of groups from LDAP server. Valid values: `enable`, `disable`.
	LdapPoll *string `pulumi:"ldapPoll"`
	// Filter used to fetch groups.
	LdapPollFilter *string `pulumi:"ldapPollFilter"`
	// Interval in minutes within to fetch groups from LDAP server.
	LdapPollInterval *int `pulumi:"ldapPollInterval"`
	// LDAP server to get group information.
	LdapServer *string `pulumi:"ldapServer"`
	// Interval in minutes to keep logons after FSSO server down.
	LogonTimeout *int `pulumi:"logonTimeout"`
	// Name.
	Name *string `pulumi:"name"`
	// Password of the first FSSO collector agent.
	Password *string `pulumi:"password"`
	// Password of the second FSSO collector agent.
	Password2 *string `pulumi:"password2"`
	// Password of the third FSSO collector agent.
	Password3 *string `pulumi:"password3"`
	// Password of the fourth FSSO collector agent.
	Password4 *string `pulumi:"password4"`
	// Password of the fifth FSSO collector agent.
	Password5 *string `pulumi:"password5"`
	// Port of the first FSSO collector agent.
	Port *int `pulumi:"port"`
	// Port of the second FSSO collector agent.
	Port2 *int `pulumi:"port2"`
	// Port of the third FSSO collector agent.
	Port3 *int `pulumi:"port3"`
	// Port of the fourth FSSO collector agent.
	Port4 *int `pulumi:"port4"`
	// Port of the fifth FSSO collector agent.
	Port5 *int `pulumi:"port5"`
	// Domain name or IP address of the first FSSO collector agent.
	Server string `pulumi:"server"`
	// Domain name or IP address of the second FSSO collector agent.
	Server2 *string `pulumi:"server2"`
	// Domain name or IP address of the third FSSO collector agent.
	Server3 *string `pulumi:"server3"`
	// Domain name or IP address of the fourth FSSO collector agent.
	Server4 *string `pulumi:"server4"`
	// Domain name or IP address of the fifth FSSO collector agent.
	Server5 *string `pulumi:"server5"`
	// Server Name Indication.
	Sni *string `pulumi:"sni"`
	// Source IP for communications to FSSO agent.
	SourceIp *string `pulumi:"sourceIp"`
	// IPv6 source for communications to FSSO agent.
	SourceIp6 *string `pulumi:"sourceIp6"`
	// Enable/disable use of SSL. Valid values: `enable`, `disable`.
	Ssl *string `pulumi:"ssl"`
	// Enable/disable server host/IP verification. Valid values: `enable`, `disable`.
	SslServerHostIpCheck *string `pulumi:"sslServerHostIpCheck"`
	// Trusted server certificate or CA certificate.
	SslTrustedCert *string `pulumi:"sslTrustedCert"`
	// Server type.
	Type *string `pulumi:"type"`
	// LDAP server to get user information.
	UserInfoServer *string `pulumi:"userInfoServer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Fsso resource.
type FssoArgs struct {
	// Interval in minutes within to fetch groups from FSSO server, or unset to disable.
	GroupPollInterval pulumi.IntPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Enable/disable automatic fetching of groups from LDAP server. Valid values: `enable`, `disable`.
	LdapPoll pulumi.StringPtrInput
	// Filter used to fetch groups.
	LdapPollFilter pulumi.StringPtrInput
	// Interval in minutes within to fetch groups from LDAP server.
	LdapPollInterval pulumi.IntPtrInput
	// LDAP server to get group information.
	LdapServer pulumi.StringPtrInput
	// Interval in minutes to keep logons after FSSO server down.
	LogonTimeout pulumi.IntPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Password of the first FSSO collector agent.
	Password pulumi.StringPtrInput
	// Password of the second FSSO collector agent.
	Password2 pulumi.StringPtrInput
	// Password of the third FSSO collector agent.
	Password3 pulumi.StringPtrInput
	// Password of the fourth FSSO collector agent.
	Password4 pulumi.StringPtrInput
	// Password of the fifth FSSO collector agent.
	Password5 pulumi.StringPtrInput
	// Port of the first FSSO collector agent.
	Port pulumi.IntPtrInput
	// Port of the second FSSO collector agent.
	Port2 pulumi.IntPtrInput
	// Port of the third FSSO collector agent.
	Port3 pulumi.IntPtrInput
	// Port of the fourth FSSO collector agent.
	Port4 pulumi.IntPtrInput
	// Port of the fifth FSSO collector agent.
	Port5 pulumi.IntPtrInput
	// Domain name or IP address of the first FSSO collector agent.
	Server pulumi.StringInput
	// Domain name or IP address of the second FSSO collector agent.
	Server2 pulumi.StringPtrInput
	// Domain name or IP address of the third FSSO collector agent.
	Server3 pulumi.StringPtrInput
	// Domain name or IP address of the fourth FSSO collector agent.
	Server4 pulumi.StringPtrInput
	// Domain name or IP address of the fifth FSSO collector agent.
	Server5 pulumi.StringPtrInput
	// Server Name Indication.
	Sni pulumi.StringPtrInput
	// Source IP for communications to FSSO agent.
	SourceIp pulumi.StringPtrInput
	// IPv6 source for communications to FSSO agent.
	SourceIp6 pulumi.StringPtrInput
	// Enable/disable use of SSL. Valid values: `enable`, `disable`.
	Ssl pulumi.StringPtrInput
	// Enable/disable server host/IP verification. Valid values: `enable`, `disable`.
	SslServerHostIpCheck pulumi.StringPtrInput
	// Trusted server certificate or CA certificate.
	SslTrustedCert pulumi.StringPtrInput
	// Server type.
	Type pulumi.StringPtrInput
	// LDAP server to get user information.
	UserInfoServer pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FssoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fssoArgs)(nil)).Elem()
}

type FssoInput interface {
	pulumi.Input

	ToFssoOutput() FssoOutput
	ToFssoOutputWithContext(ctx context.Context) FssoOutput
}

func (*Fsso) ElementType() reflect.Type {
	return reflect.TypeOf((**Fsso)(nil)).Elem()
}

func (i *Fsso) ToFssoOutput() FssoOutput {
	return i.ToFssoOutputWithContext(context.Background())
}

func (i *Fsso) ToFssoOutputWithContext(ctx context.Context) FssoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FssoOutput)
}

// FssoArrayInput is an input type that accepts FssoArray and FssoArrayOutput values.
// You can construct a concrete instance of `FssoArrayInput` via:
//
//	FssoArray{ FssoArgs{...} }
type FssoArrayInput interface {
	pulumi.Input

	ToFssoArrayOutput() FssoArrayOutput
	ToFssoArrayOutputWithContext(context.Context) FssoArrayOutput
}

type FssoArray []FssoInput

func (FssoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fsso)(nil)).Elem()
}

func (i FssoArray) ToFssoArrayOutput() FssoArrayOutput {
	return i.ToFssoArrayOutputWithContext(context.Background())
}

func (i FssoArray) ToFssoArrayOutputWithContext(ctx context.Context) FssoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FssoArrayOutput)
}

// FssoMapInput is an input type that accepts FssoMap and FssoMapOutput values.
// You can construct a concrete instance of `FssoMapInput` via:
//
//	FssoMap{ "key": FssoArgs{...} }
type FssoMapInput interface {
	pulumi.Input

	ToFssoMapOutput() FssoMapOutput
	ToFssoMapOutputWithContext(context.Context) FssoMapOutput
}

type FssoMap map[string]FssoInput

func (FssoMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fsso)(nil)).Elem()
}

func (i FssoMap) ToFssoMapOutput() FssoMapOutput {
	return i.ToFssoMapOutputWithContext(context.Background())
}

func (i FssoMap) ToFssoMapOutputWithContext(ctx context.Context) FssoMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FssoMapOutput)
}

type FssoOutput struct{ *pulumi.OutputState }

func (FssoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Fsso)(nil)).Elem()
}

func (o FssoOutput) ToFssoOutput() FssoOutput {
	return o
}

func (o FssoOutput) ToFssoOutputWithContext(ctx context.Context) FssoOutput {
	return o
}

// Interval in minutes within to fetch groups from FSSO server, or unset to disable.
func (o FssoOutput) GroupPollInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Fsso) pulumi.IntOutput { return v.GroupPollInterval }).(pulumi.IntOutput)
}

// Specify outgoing interface to reach server.
func (o FssoOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o FssoOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Enable/disable automatic fetching of groups from LDAP server. Valid values: `enable`, `disable`.
func (o FssoOutput) LdapPoll() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.LdapPoll }).(pulumi.StringOutput)
}

// Filter used to fetch groups.
func (o FssoOutput) LdapPollFilter() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.LdapPollFilter }).(pulumi.StringOutput)
}

// Interval in minutes within to fetch groups from LDAP server.
func (o FssoOutput) LdapPollInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Fsso) pulumi.IntOutput { return v.LdapPollInterval }).(pulumi.IntOutput)
}

// LDAP server to get group information.
func (o FssoOutput) LdapServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.LdapServer }).(pulumi.StringOutput)
}

// Interval in minutes to keep logons after FSSO server down.
func (o FssoOutput) LogonTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Fsso) pulumi.IntOutput { return v.LogonTimeout }).(pulumi.IntOutput)
}

// Name.
func (o FssoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Password of the first FSSO collector agent.
func (o FssoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Password of the second FSSO collector agent.
func (o FssoOutput) Password2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringPtrOutput { return v.Password2 }).(pulumi.StringPtrOutput)
}

// Password of the third FSSO collector agent.
func (o FssoOutput) Password3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringPtrOutput { return v.Password3 }).(pulumi.StringPtrOutput)
}

// Password of the fourth FSSO collector agent.
func (o FssoOutput) Password4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringPtrOutput { return v.Password4 }).(pulumi.StringPtrOutput)
}

// Password of the fifth FSSO collector agent.
func (o FssoOutput) Password5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringPtrOutput { return v.Password5 }).(pulumi.StringPtrOutput)
}

// Port of the first FSSO collector agent.
func (o FssoOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *Fsso) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// Port of the second FSSO collector agent.
func (o FssoOutput) Port2() pulumi.IntOutput {
	return o.ApplyT(func(v *Fsso) pulumi.IntOutput { return v.Port2 }).(pulumi.IntOutput)
}

// Port of the third FSSO collector agent.
func (o FssoOutput) Port3() pulumi.IntOutput {
	return o.ApplyT(func(v *Fsso) pulumi.IntOutput { return v.Port3 }).(pulumi.IntOutput)
}

// Port of the fourth FSSO collector agent.
func (o FssoOutput) Port4() pulumi.IntOutput {
	return o.ApplyT(func(v *Fsso) pulumi.IntOutput { return v.Port4 }).(pulumi.IntOutput)
}

// Port of the fifth FSSO collector agent.
func (o FssoOutput) Port5() pulumi.IntOutput {
	return o.ApplyT(func(v *Fsso) pulumi.IntOutput { return v.Port5 }).(pulumi.IntOutput)
}

// Domain name or IP address of the first FSSO collector agent.
func (o FssoOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

// Domain name or IP address of the second FSSO collector agent.
func (o FssoOutput) Server2() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.Server2 }).(pulumi.StringOutput)
}

// Domain name or IP address of the third FSSO collector agent.
func (o FssoOutput) Server3() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.Server3 }).(pulumi.StringOutput)
}

// Domain name or IP address of the fourth FSSO collector agent.
func (o FssoOutput) Server4() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.Server4 }).(pulumi.StringOutput)
}

// Domain name or IP address of the fifth FSSO collector agent.
func (o FssoOutput) Server5() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.Server5 }).(pulumi.StringOutput)
}

// Server Name Indication.
func (o FssoOutput) Sni() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.Sni }).(pulumi.StringOutput)
}

// Source IP for communications to FSSO agent.
func (o FssoOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

// IPv6 source for communications to FSSO agent.
func (o FssoOutput) SourceIp6() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.SourceIp6 }).(pulumi.StringOutput)
}

// Enable/disable use of SSL. Valid values: `enable`, `disable`.
func (o FssoOutput) Ssl() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.Ssl }).(pulumi.StringOutput)
}

// Enable/disable server host/IP verification. Valid values: `enable`, `disable`.
func (o FssoOutput) SslServerHostIpCheck() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.SslServerHostIpCheck }).(pulumi.StringOutput)
}

// Trusted server certificate or CA certificate.
func (o FssoOutput) SslTrustedCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.SslTrustedCert }).(pulumi.StringOutput)
}

// Server type.
func (o FssoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// LDAP server to get user information.
func (o FssoOutput) UserInfoServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.UserInfoServer }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FssoOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Fsso) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type FssoArrayOutput struct{ *pulumi.OutputState }

func (FssoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fsso)(nil)).Elem()
}

func (o FssoArrayOutput) ToFssoArrayOutput() FssoArrayOutput {
	return o
}

func (o FssoArrayOutput) ToFssoArrayOutputWithContext(ctx context.Context) FssoArrayOutput {
	return o
}

func (o FssoArrayOutput) Index(i pulumi.IntInput) FssoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Fsso {
		return vs[0].([]*Fsso)[vs[1].(int)]
	}).(FssoOutput)
}

type FssoMapOutput struct{ *pulumi.OutputState }

func (FssoMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fsso)(nil)).Elem()
}

func (o FssoMapOutput) ToFssoMapOutput() FssoMapOutput {
	return o
}

func (o FssoMapOutput) ToFssoMapOutputWithContext(ctx context.Context) FssoMapOutput {
	return o
}

func (o FssoMapOutput) MapIndex(k pulumi.StringInput) FssoOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Fsso {
		return vs[0].(map[string]*Fsso)[vs[1].(string)]
	}).(FssoOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FssoInput)(nil)).Elem(), &Fsso{})
	pulumi.RegisterInputType(reflect.TypeOf((*FssoArrayInput)(nil)).Elem(), FssoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FssoMapInput)(nil)).Elem(), FssoMap{})
	pulumi.RegisterOutputType(FssoOutput{})
	pulumi.RegisterOutputType(FssoArrayOutput{})
	pulumi.RegisterOutputType(FssoMapOutput{})
}
