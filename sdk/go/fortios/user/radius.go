// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package user

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure RADIUS server entries.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/user"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := user.NewRadius(ctx, "trname", &user.RadiusArgs{
//				AcctAllServers:            pulumi.String("disable"),
//				AllUsergroup:              pulumi.String("disable"),
//				AuthType:                  pulumi.String("auto"),
//				H3cCompatibility:          pulumi.String("disable"),
//				NasIp:                     pulumi.String("0.0.0.0"),
//				PasswordEncoding:          pulumi.String("auto"),
//				PasswordRenewal:           pulumi.String("disable"),
//				RadiusCoa:                 pulumi.String("disable"),
//				RadiusPort:                pulumi.Int(0),
//				Rsso:                      pulumi.String("disable"),
//				RssoContextTimeout:        pulumi.Int(28800),
//				RssoEndpointAttribute:     pulumi.String("Calling-Station-Id"),
//				RssoEpOneIpOnly:           pulumi.String("disable"),
//				RssoFlushIpSession:        pulumi.String("disable"),
//				RssoLogFlags:              pulumi.String("protocol-error profile-missing accounting-stop-missed accounting-event endpoint-block radiusd-other"),
//				RssoLogPeriod:             pulumi.Int(0),
//				RssoRadiusResponse:        pulumi.String("disable"),
//				RssoRadiusServerPort:      pulumi.Int(1813),
//				RssoValidateRequestSecret: pulumi.String("disable"),
//				Secret:                    pulumi.String("FDaaewjkeiw32"),
//				Server:                    pulumi.String("1.1.1.1"),
//				SsoAttribute:              pulumi.String("Class"),
//				SsoAttributeValueOverride: pulumi.String("enable"),
//				Timeout:                   pulumi.Int(5),
//				UseManagementVdom:         pulumi.String("disable"),
//				UsernameCaseSensitive:     pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// User Radius can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:user/radius:Radius labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:user/radius:Radius labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Radius struct {
	pulumi.CustomResourceState

	// Define subject identity field in certificate for user access right checking. Valid values: `othername`, `rfc822name`, `dnsname`.
	AccountKeyCertField pulumi.StringOutput `pulumi:"accountKeyCertField"`
	// Account key processing operation. The FortiGate will keep either the whole domain or strip the domain from the subject identity. Valid values: `same`, `strip`.
	AccountKeyProcessing pulumi.StringOutput `pulumi:"accountKeyProcessing"`
	// Additional accounting servers. The structure of `accountingServer` block is documented below.
	AccountingServers RadiusAccountingServerArrayOutput `pulumi:"accountingServers"`
	// Enable/disable sending of accounting messages to all configured servers (default = disable). Valid values: `enable`, `disable`.
	AcctAllServers pulumi.StringOutput `pulumi:"acctAllServers"`
	// Time in seconds between each accounting interim update message.
	AcctInterimInterval pulumi.IntOutput `pulumi:"acctInterimInterval"`
	// Enable/disable automatically including this RADIUS server in all user groups. Valid values: `disable`, `enable`.
	AllUsergroup pulumi.StringOutput `pulumi:"allUsergroup"`
	// Authentication methods/protocols permitted for this RADIUS server. Valid values: `auto`, `msChapV2`, `msChap`, `chap`, `pap`.
	AuthType pulumi.StringOutput `pulumi:"authType"`
	// CA of server to trust under TLS.
	CaCert pulumi.StringOutput `pulumi:"caCert"`
	// Calling & Called station identifier type configuration (default = legacy), this option is not available for 802.1x authentication.  Valid values: `legacy`, `IP`, `MAC`.
	CallStationIdType pulumi.StringOutput `pulumi:"callStationIdType"`
	// Class attribute name(s). The structure of `class` block is documented below.
	Classes RadiusClassArrayOutput `pulumi:"classes"`
	// Client certificate to use under TLS.
	ClientCert pulumi.StringOutput `pulumi:"clientCert"`
	// Configure delimiter to be used for separating profile group names in the SSO attribute (default = plus character "+"). Valid values: `plus`, `comma`.
	Delimiter pulumi.StringOutput `pulumi:"delimiter"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// RADIUS attribute type to override user group information. Valid values: `filter-Id`, `class`.
	GroupOverrideAttrType pulumi.StringOutput `pulumi:"groupOverrideAttrType"`
	// Enable/disable compatibility with the H3C, a mechanism that performs security checking for authentication. Valid values: `enable`, `disable`.
	H3cCompatibility pulumi.StringOutput `pulumi:"h3cCompatibility"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// MAC authentication case (default = lowercase). Valid values: `uppercase`, `lowercase`.
	MacCase pulumi.StringOutput `pulumi:"macCase"`
	// MAC authentication password delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
	MacPasswordDelimiter pulumi.StringOutput `pulumi:"macPasswordDelimiter"`
	// MAC authentication username delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
	MacUsernameDelimiter pulumi.StringOutput `pulumi:"macUsernameDelimiter"`
	// RADIUS server entry name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Custom NAS identifier.
	NasId pulumi.StringOutput `pulumi:"nasId"`
	// NAS identifier type configuration (default = legacy). Valid values: `legacy`, `custom`, `hostname`.
	NasIdType pulumi.StringOutput `pulumi:"nasIdType"`
	// IP address used to communicate with the RADIUS server and used as NAS-IP-Address and Called-Station-ID attributes.
	NasIp pulumi.StringOutput `pulumi:"nasIp"`
	// Password encoding. Valid values: `auto`, `ISO-8859-1`.
	PasswordEncoding pulumi.StringOutput `pulumi:"passwordEncoding"`
	// Enable/disable password renewal. Valid values: `enable`, `disable`.
	PasswordRenewal pulumi.StringOutput `pulumi:"passwordRenewal"`
	// Enable to allow a mechanism to change the attributes of an authentication, authorization, and accounting session after it is authenticated. Valid values: `enable`, `disable`.
	RadiusCoa pulumi.StringOutput `pulumi:"radiusCoa"`
	// RADIUS service port number.
	RadiusPort pulumi.IntOutput `pulumi:"radiusPort"`
	// Enable/disable RADIUS based single sign on feature. Valid values: `enable`, `disable`.
	Rsso pulumi.StringOutput `pulumi:"rsso"`
	// Time in seconds before the logged out user is removed from the "user context list" of logged on users.
	RssoContextTimeout pulumi.IntOutput `pulumi:"rssoContextTimeout"`
	// RADIUS attributes used to extract the user end point identifer from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	RssoEndpointAttribute pulumi.StringOutput `pulumi:"rssoEndpointAttribute"`
	// RADIUS attributes used to block a user. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	RssoEndpointBlockAttribute pulumi.StringOutput `pulumi:"rssoEndpointBlockAttribute"`
	// Enable/disable the replacement of old IP addresses with new ones for the same endpoint on RADIUS accounting Start messages. Valid values: `enable`, `disable`.
	RssoEpOneIpOnly pulumi.StringOutput `pulumi:"rssoEpOneIpOnly"`
	// Enable/disable flushing user IP sessions on RADIUS accounting Stop messages. Valid values: `enable`, `disable`.
	RssoFlushIpSession pulumi.StringOutput `pulumi:"rssoFlushIpSession"`
	// Events to log. Valid values: `protocol-error`, `profile-missing`, `accounting-stop-missed`, `accounting-event`, `endpoint-block`, `radiusd-other`, `none`.
	RssoLogFlags pulumi.StringOutput `pulumi:"rssoLogFlags"`
	// Time interval in seconds that group event log messages will be generated for dynamic profile events.
	RssoLogPeriod pulumi.IntOutput `pulumi:"rssoLogPeriod"`
	// Enable/disable sending RADIUS response packets after receiving Start and Stop records. Valid values: `enable`, `disable`.
	RssoRadiusResponse pulumi.StringOutput `pulumi:"rssoRadiusResponse"`
	// UDP port to listen on for RADIUS Start and Stop records.
	RssoRadiusServerPort pulumi.IntOutput `pulumi:"rssoRadiusServerPort"`
	// RADIUS secret used by the RADIUS accounting server.
	RssoSecret pulumi.StringPtrOutput `pulumi:"rssoSecret"`
	// Enable/disable validating the RADIUS request shared secret in the Start or End record. Valid values: `enable`, `disable`.
	RssoValidateRequestSecret pulumi.StringOutput `pulumi:"rssoValidateRequestSecret"`
	// Secret key to access the secondary server.
	SecondarySecret pulumi.StringPtrOutput `pulumi:"secondarySecret"`
	// {<name_str|ip_str>} secondary RADIUS CN domain name or IP.
	SecondaryServer pulumi.StringOutput `pulumi:"secondaryServer"`
	// Pre-shared secret key used to access the primary RADIUS server.
	Secret pulumi.StringPtrOutput `pulumi:"secret"`
	// Primary RADIUS server CN domain name or IP address.
	Server pulumi.StringOutput `pulumi:"server"`
	// Enable/disable RADIUS server identity check (verify server domain name/IP address against the server certificate). Valid values: `enable`, `disable`.
	ServerIdentityCheck pulumi.StringOutput `pulumi:"serverIdentityCheck"`
	// Source IP address for communications to the RADIUS server.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// RADIUS attribute that contains the profile group name to be extracted from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	SsoAttribute pulumi.StringOutput `pulumi:"ssoAttribute"`
	// Key prefix for SSO group value in the SSO attribute.
	SsoAttributeKey pulumi.StringOutput `pulumi:"ssoAttributeKey"`
	// Enable/disable override old attribute value with new value for the same endpoint. Valid values: `enable`, `disable`.
	SsoAttributeValueOverride pulumi.StringOutput `pulumi:"ssoAttributeValueOverride"`
	// Time for which server reachability is cached so that when a server is unreachable, it will not be retried for at least this period of time (0 = cache disabled, default = 300).
	StatusTtl pulumi.IntOutput `pulumi:"statusTtl"`
	// Switch controller accounting message Framed-IP detection from DHCP snooping (seconds, default=2).
	SwitchControllerAcctFastFramedipDetect pulumi.IntOutput `pulumi:"switchControllerAcctFastFramedipDetect"`
	// Enable/Disable switch-controller nas-ip dynamic to dynamically set nas-ip. Valid values: `enable`, `disable`.
	SwitchControllerNasIpDynamic pulumi.StringOutput `pulumi:"switchControllerNasIpDynamic"`
	// RADIUS service type. Valid values: `login`, `framed`, `callback-login`, `callback-framed`, `outbound`, `administrative`, `nas-prompt`, `authenticate-only`, `callback-nas-prompt`, `call-check`, `callback-administrative`.
	SwitchControllerServiceType pulumi.StringOutput `pulumi:"switchControllerServiceType"`
	// Secret key to access the tertiary server.
	TertiarySecret pulumi.StringPtrOutput `pulumi:"tertiarySecret"`
	// {<name_str|ip_str>} tertiary RADIUS CN domain name or IP.
	TertiaryServer pulumi.StringOutput `pulumi:"tertiaryServer"`
	// Time in seconds between re-sending authentication requests.
	Timeout pulumi.IntOutput `pulumi:"timeout"`
	// Minimum supported protocol version for TLS connections (default is to follow system global setting).
	TlsMinProtoVersion pulumi.StringOutput `pulumi:"tlsMinProtoVersion"`
	// Transport protocol to be used (default = udp). Valid values: `udp`, `tcp`, `tls`.
	TransportProtocol pulumi.StringOutput `pulumi:"transportProtocol"`
	// Enable/disable using management VDOM to send requests. Valid values: `enable`, `disable`.
	UseManagementVdom pulumi.StringOutput `pulumi:"useManagementVdom"`
	// Enable/disable case sensitive user names. Valid values: `enable`, `disable`.
	UsernameCaseSensitive pulumi.StringOutput `pulumi:"usernameCaseSensitive"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewRadius registers a new resource with the given unique name, arguments, and options.
func NewRadius(ctx *pulumi.Context,
	name string, args *RadiusArgs, opts ...pulumi.ResourceOption) (*Radius, error) {
	if args == nil {
		args = &RadiusArgs{}
	}

	if args.RssoSecret != nil {
		args.RssoSecret = pulumi.ToSecret(args.RssoSecret).(pulumi.StringPtrInput)
	}
	if args.SecondarySecret != nil {
		args.SecondarySecret = pulumi.ToSecret(args.SecondarySecret).(pulumi.StringPtrInput)
	}
	if args.Secret != nil {
		args.Secret = pulumi.ToSecret(args.Secret).(pulumi.StringPtrInput)
	}
	if args.SsoAttributeKey != nil {
		args.SsoAttributeKey = pulumi.ToSecret(args.SsoAttributeKey).(pulumi.StringPtrInput)
	}
	if args.TertiarySecret != nil {
		args.TertiarySecret = pulumi.ToSecret(args.TertiarySecret).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"rssoSecret",
		"secondarySecret",
		"secret",
		"ssoAttributeKey",
		"tertiarySecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Radius
	err := ctx.RegisterResource("fortios:user/radius:Radius", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRadius gets an existing Radius resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRadius(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RadiusState, opts ...pulumi.ResourceOption) (*Radius, error) {
	var resource Radius
	err := ctx.ReadResource("fortios:user/radius:Radius", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Radius resources.
type radiusState struct {
	// Define subject identity field in certificate for user access right checking. Valid values: `othername`, `rfc822name`, `dnsname`.
	AccountKeyCertField *string `pulumi:"accountKeyCertField"`
	// Account key processing operation. The FortiGate will keep either the whole domain or strip the domain from the subject identity. Valid values: `same`, `strip`.
	AccountKeyProcessing *string `pulumi:"accountKeyProcessing"`
	// Additional accounting servers. The structure of `accountingServer` block is documented below.
	AccountingServers []RadiusAccountingServer `pulumi:"accountingServers"`
	// Enable/disable sending of accounting messages to all configured servers (default = disable). Valid values: `enable`, `disable`.
	AcctAllServers *string `pulumi:"acctAllServers"`
	// Time in seconds between each accounting interim update message.
	AcctInterimInterval *int `pulumi:"acctInterimInterval"`
	// Enable/disable automatically including this RADIUS server in all user groups. Valid values: `disable`, `enable`.
	AllUsergroup *string `pulumi:"allUsergroup"`
	// Authentication methods/protocols permitted for this RADIUS server. Valid values: `auto`, `msChapV2`, `msChap`, `chap`, `pap`.
	AuthType *string `pulumi:"authType"`
	// CA of server to trust under TLS.
	CaCert *string `pulumi:"caCert"`
	// Calling & Called station identifier type configuration (default = legacy), this option is not available for 802.1x authentication.  Valid values: `legacy`, `IP`, `MAC`.
	CallStationIdType *string `pulumi:"callStationIdType"`
	// Class attribute name(s). The structure of `class` block is documented below.
	Classes []RadiusClass `pulumi:"classes"`
	// Client certificate to use under TLS.
	ClientCert *string `pulumi:"clientCert"`
	// Configure delimiter to be used for separating profile group names in the SSO attribute (default = plus character "+"). Valid values: `plus`, `comma`.
	Delimiter *string `pulumi:"delimiter"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// RADIUS attribute type to override user group information. Valid values: `filter-Id`, `class`.
	GroupOverrideAttrType *string `pulumi:"groupOverrideAttrType"`
	// Enable/disable compatibility with the H3C, a mechanism that performs security checking for authentication. Valid values: `enable`, `disable`.
	H3cCompatibility *string `pulumi:"h3cCompatibility"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// MAC authentication case (default = lowercase). Valid values: `uppercase`, `lowercase`.
	MacCase *string `pulumi:"macCase"`
	// MAC authentication password delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
	MacPasswordDelimiter *string `pulumi:"macPasswordDelimiter"`
	// MAC authentication username delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
	MacUsernameDelimiter *string `pulumi:"macUsernameDelimiter"`
	// RADIUS server entry name.
	Name *string `pulumi:"name"`
	// Custom NAS identifier.
	NasId *string `pulumi:"nasId"`
	// NAS identifier type configuration (default = legacy). Valid values: `legacy`, `custom`, `hostname`.
	NasIdType *string `pulumi:"nasIdType"`
	// IP address used to communicate with the RADIUS server and used as NAS-IP-Address and Called-Station-ID attributes.
	NasIp *string `pulumi:"nasIp"`
	// Password encoding. Valid values: `auto`, `ISO-8859-1`.
	PasswordEncoding *string `pulumi:"passwordEncoding"`
	// Enable/disable password renewal. Valid values: `enable`, `disable`.
	PasswordRenewal *string `pulumi:"passwordRenewal"`
	// Enable to allow a mechanism to change the attributes of an authentication, authorization, and accounting session after it is authenticated. Valid values: `enable`, `disable`.
	RadiusCoa *string `pulumi:"radiusCoa"`
	// RADIUS service port number.
	RadiusPort *int `pulumi:"radiusPort"`
	// Enable/disable RADIUS based single sign on feature. Valid values: `enable`, `disable`.
	Rsso *string `pulumi:"rsso"`
	// Time in seconds before the logged out user is removed from the "user context list" of logged on users.
	RssoContextTimeout *int `pulumi:"rssoContextTimeout"`
	// RADIUS attributes used to extract the user end point identifer from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	RssoEndpointAttribute *string `pulumi:"rssoEndpointAttribute"`
	// RADIUS attributes used to block a user. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	RssoEndpointBlockAttribute *string `pulumi:"rssoEndpointBlockAttribute"`
	// Enable/disable the replacement of old IP addresses with new ones for the same endpoint on RADIUS accounting Start messages. Valid values: `enable`, `disable`.
	RssoEpOneIpOnly *string `pulumi:"rssoEpOneIpOnly"`
	// Enable/disable flushing user IP sessions on RADIUS accounting Stop messages. Valid values: `enable`, `disable`.
	RssoFlushIpSession *string `pulumi:"rssoFlushIpSession"`
	// Events to log. Valid values: `protocol-error`, `profile-missing`, `accounting-stop-missed`, `accounting-event`, `endpoint-block`, `radiusd-other`, `none`.
	RssoLogFlags *string `pulumi:"rssoLogFlags"`
	// Time interval in seconds that group event log messages will be generated for dynamic profile events.
	RssoLogPeriod *int `pulumi:"rssoLogPeriod"`
	// Enable/disable sending RADIUS response packets after receiving Start and Stop records. Valid values: `enable`, `disable`.
	RssoRadiusResponse *string `pulumi:"rssoRadiusResponse"`
	// UDP port to listen on for RADIUS Start and Stop records.
	RssoRadiusServerPort *int `pulumi:"rssoRadiusServerPort"`
	// RADIUS secret used by the RADIUS accounting server.
	RssoSecret *string `pulumi:"rssoSecret"`
	// Enable/disable validating the RADIUS request shared secret in the Start or End record. Valid values: `enable`, `disable`.
	RssoValidateRequestSecret *string `pulumi:"rssoValidateRequestSecret"`
	// Secret key to access the secondary server.
	SecondarySecret *string `pulumi:"secondarySecret"`
	// {<name_str|ip_str>} secondary RADIUS CN domain name or IP.
	SecondaryServer *string `pulumi:"secondaryServer"`
	// Pre-shared secret key used to access the primary RADIUS server.
	Secret *string `pulumi:"secret"`
	// Primary RADIUS server CN domain name or IP address.
	Server *string `pulumi:"server"`
	// Enable/disable RADIUS server identity check (verify server domain name/IP address against the server certificate). Valid values: `enable`, `disable`.
	ServerIdentityCheck *string `pulumi:"serverIdentityCheck"`
	// Source IP address for communications to the RADIUS server.
	SourceIp *string `pulumi:"sourceIp"`
	// RADIUS attribute that contains the profile group name to be extracted from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	SsoAttribute *string `pulumi:"ssoAttribute"`
	// Key prefix for SSO group value in the SSO attribute.
	SsoAttributeKey *string `pulumi:"ssoAttributeKey"`
	// Enable/disable override old attribute value with new value for the same endpoint. Valid values: `enable`, `disable`.
	SsoAttributeValueOverride *string `pulumi:"ssoAttributeValueOverride"`
	// Time for which server reachability is cached so that when a server is unreachable, it will not be retried for at least this period of time (0 = cache disabled, default = 300).
	StatusTtl *int `pulumi:"statusTtl"`
	// Switch controller accounting message Framed-IP detection from DHCP snooping (seconds, default=2).
	SwitchControllerAcctFastFramedipDetect *int `pulumi:"switchControllerAcctFastFramedipDetect"`
	// Enable/Disable switch-controller nas-ip dynamic to dynamically set nas-ip. Valid values: `enable`, `disable`.
	SwitchControllerNasIpDynamic *string `pulumi:"switchControllerNasIpDynamic"`
	// RADIUS service type. Valid values: `login`, `framed`, `callback-login`, `callback-framed`, `outbound`, `administrative`, `nas-prompt`, `authenticate-only`, `callback-nas-prompt`, `call-check`, `callback-administrative`.
	SwitchControllerServiceType *string `pulumi:"switchControllerServiceType"`
	// Secret key to access the tertiary server.
	TertiarySecret *string `pulumi:"tertiarySecret"`
	// {<name_str|ip_str>} tertiary RADIUS CN domain name or IP.
	TertiaryServer *string `pulumi:"tertiaryServer"`
	// Time in seconds between re-sending authentication requests.
	Timeout *int `pulumi:"timeout"`
	// Minimum supported protocol version for TLS connections (default is to follow system global setting).
	TlsMinProtoVersion *string `pulumi:"tlsMinProtoVersion"`
	// Transport protocol to be used (default = udp). Valid values: `udp`, `tcp`, `tls`.
	TransportProtocol *string `pulumi:"transportProtocol"`
	// Enable/disable using management VDOM to send requests. Valid values: `enable`, `disable`.
	UseManagementVdom *string `pulumi:"useManagementVdom"`
	// Enable/disable case sensitive user names. Valid values: `enable`, `disable`.
	UsernameCaseSensitive *string `pulumi:"usernameCaseSensitive"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type RadiusState struct {
	// Define subject identity field in certificate for user access right checking. Valid values: `othername`, `rfc822name`, `dnsname`.
	AccountKeyCertField pulumi.StringPtrInput
	// Account key processing operation. The FortiGate will keep either the whole domain or strip the domain from the subject identity. Valid values: `same`, `strip`.
	AccountKeyProcessing pulumi.StringPtrInput
	// Additional accounting servers. The structure of `accountingServer` block is documented below.
	AccountingServers RadiusAccountingServerArrayInput
	// Enable/disable sending of accounting messages to all configured servers (default = disable). Valid values: `enable`, `disable`.
	AcctAllServers pulumi.StringPtrInput
	// Time in seconds between each accounting interim update message.
	AcctInterimInterval pulumi.IntPtrInput
	// Enable/disable automatically including this RADIUS server in all user groups. Valid values: `disable`, `enable`.
	AllUsergroup pulumi.StringPtrInput
	// Authentication methods/protocols permitted for this RADIUS server. Valid values: `auto`, `msChapV2`, `msChap`, `chap`, `pap`.
	AuthType pulumi.StringPtrInput
	// CA of server to trust under TLS.
	CaCert pulumi.StringPtrInput
	// Calling & Called station identifier type configuration (default = legacy), this option is not available for 802.1x authentication.  Valid values: `legacy`, `IP`, `MAC`.
	CallStationIdType pulumi.StringPtrInput
	// Class attribute name(s). The structure of `class` block is documented below.
	Classes RadiusClassArrayInput
	// Client certificate to use under TLS.
	ClientCert pulumi.StringPtrInput
	// Configure delimiter to be used for separating profile group names in the SSO attribute (default = plus character "+"). Valid values: `plus`, `comma`.
	Delimiter pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// RADIUS attribute type to override user group information. Valid values: `filter-Id`, `class`.
	GroupOverrideAttrType pulumi.StringPtrInput
	// Enable/disable compatibility with the H3C, a mechanism that performs security checking for authentication. Valid values: `enable`, `disable`.
	H3cCompatibility pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// MAC authentication case (default = lowercase). Valid values: `uppercase`, `lowercase`.
	MacCase pulumi.StringPtrInput
	// MAC authentication password delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
	MacPasswordDelimiter pulumi.StringPtrInput
	// MAC authentication username delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
	MacUsernameDelimiter pulumi.StringPtrInput
	// RADIUS server entry name.
	Name pulumi.StringPtrInput
	// Custom NAS identifier.
	NasId pulumi.StringPtrInput
	// NAS identifier type configuration (default = legacy). Valid values: `legacy`, `custom`, `hostname`.
	NasIdType pulumi.StringPtrInput
	// IP address used to communicate with the RADIUS server and used as NAS-IP-Address and Called-Station-ID attributes.
	NasIp pulumi.StringPtrInput
	// Password encoding. Valid values: `auto`, `ISO-8859-1`.
	PasswordEncoding pulumi.StringPtrInput
	// Enable/disable password renewal. Valid values: `enable`, `disable`.
	PasswordRenewal pulumi.StringPtrInput
	// Enable to allow a mechanism to change the attributes of an authentication, authorization, and accounting session after it is authenticated. Valid values: `enable`, `disable`.
	RadiusCoa pulumi.StringPtrInput
	// RADIUS service port number.
	RadiusPort pulumi.IntPtrInput
	// Enable/disable RADIUS based single sign on feature. Valid values: `enable`, `disable`.
	Rsso pulumi.StringPtrInput
	// Time in seconds before the logged out user is removed from the "user context list" of logged on users.
	RssoContextTimeout pulumi.IntPtrInput
	// RADIUS attributes used to extract the user end point identifer from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	RssoEndpointAttribute pulumi.StringPtrInput
	// RADIUS attributes used to block a user. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	RssoEndpointBlockAttribute pulumi.StringPtrInput
	// Enable/disable the replacement of old IP addresses with new ones for the same endpoint on RADIUS accounting Start messages. Valid values: `enable`, `disable`.
	RssoEpOneIpOnly pulumi.StringPtrInput
	// Enable/disable flushing user IP sessions on RADIUS accounting Stop messages. Valid values: `enable`, `disable`.
	RssoFlushIpSession pulumi.StringPtrInput
	// Events to log. Valid values: `protocol-error`, `profile-missing`, `accounting-stop-missed`, `accounting-event`, `endpoint-block`, `radiusd-other`, `none`.
	RssoLogFlags pulumi.StringPtrInput
	// Time interval in seconds that group event log messages will be generated for dynamic profile events.
	RssoLogPeriod pulumi.IntPtrInput
	// Enable/disable sending RADIUS response packets after receiving Start and Stop records. Valid values: `enable`, `disable`.
	RssoRadiusResponse pulumi.StringPtrInput
	// UDP port to listen on for RADIUS Start and Stop records.
	RssoRadiusServerPort pulumi.IntPtrInput
	// RADIUS secret used by the RADIUS accounting server.
	RssoSecret pulumi.StringPtrInput
	// Enable/disable validating the RADIUS request shared secret in the Start or End record. Valid values: `enable`, `disable`.
	RssoValidateRequestSecret pulumi.StringPtrInput
	// Secret key to access the secondary server.
	SecondarySecret pulumi.StringPtrInput
	// {<name_str|ip_str>} secondary RADIUS CN domain name or IP.
	SecondaryServer pulumi.StringPtrInput
	// Pre-shared secret key used to access the primary RADIUS server.
	Secret pulumi.StringPtrInput
	// Primary RADIUS server CN domain name or IP address.
	Server pulumi.StringPtrInput
	// Enable/disable RADIUS server identity check (verify server domain name/IP address against the server certificate). Valid values: `enable`, `disable`.
	ServerIdentityCheck pulumi.StringPtrInput
	// Source IP address for communications to the RADIUS server.
	SourceIp pulumi.StringPtrInput
	// RADIUS attribute that contains the profile group name to be extracted from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	SsoAttribute pulumi.StringPtrInput
	// Key prefix for SSO group value in the SSO attribute.
	SsoAttributeKey pulumi.StringPtrInput
	// Enable/disable override old attribute value with new value for the same endpoint. Valid values: `enable`, `disable`.
	SsoAttributeValueOverride pulumi.StringPtrInput
	// Time for which server reachability is cached so that when a server is unreachable, it will not be retried for at least this period of time (0 = cache disabled, default = 300).
	StatusTtl pulumi.IntPtrInput
	// Switch controller accounting message Framed-IP detection from DHCP snooping (seconds, default=2).
	SwitchControllerAcctFastFramedipDetect pulumi.IntPtrInput
	// Enable/Disable switch-controller nas-ip dynamic to dynamically set nas-ip. Valid values: `enable`, `disable`.
	SwitchControllerNasIpDynamic pulumi.StringPtrInput
	// RADIUS service type. Valid values: `login`, `framed`, `callback-login`, `callback-framed`, `outbound`, `administrative`, `nas-prompt`, `authenticate-only`, `callback-nas-prompt`, `call-check`, `callback-administrative`.
	SwitchControllerServiceType pulumi.StringPtrInput
	// Secret key to access the tertiary server.
	TertiarySecret pulumi.StringPtrInput
	// {<name_str|ip_str>} tertiary RADIUS CN domain name or IP.
	TertiaryServer pulumi.StringPtrInput
	// Time in seconds between re-sending authentication requests.
	Timeout pulumi.IntPtrInput
	// Minimum supported protocol version for TLS connections (default is to follow system global setting).
	TlsMinProtoVersion pulumi.StringPtrInput
	// Transport protocol to be used (default = udp). Valid values: `udp`, `tcp`, `tls`.
	TransportProtocol pulumi.StringPtrInput
	// Enable/disable using management VDOM to send requests. Valid values: `enable`, `disable`.
	UseManagementVdom pulumi.StringPtrInput
	// Enable/disable case sensitive user names. Valid values: `enable`, `disable`.
	UsernameCaseSensitive pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (RadiusState) ElementType() reflect.Type {
	return reflect.TypeOf((*radiusState)(nil)).Elem()
}

type radiusArgs struct {
	// Define subject identity field in certificate for user access right checking. Valid values: `othername`, `rfc822name`, `dnsname`.
	AccountKeyCertField *string `pulumi:"accountKeyCertField"`
	// Account key processing operation. The FortiGate will keep either the whole domain or strip the domain from the subject identity. Valid values: `same`, `strip`.
	AccountKeyProcessing *string `pulumi:"accountKeyProcessing"`
	// Additional accounting servers. The structure of `accountingServer` block is documented below.
	AccountingServers []RadiusAccountingServer `pulumi:"accountingServers"`
	// Enable/disable sending of accounting messages to all configured servers (default = disable). Valid values: `enable`, `disable`.
	AcctAllServers *string `pulumi:"acctAllServers"`
	// Time in seconds between each accounting interim update message.
	AcctInterimInterval *int `pulumi:"acctInterimInterval"`
	// Enable/disable automatically including this RADIUS server in all user groups. Valid values: `disable`, `enable`.
	AllUsergroup *string `pulumi:"allUsergroup"`
	// Authentication methods/protocols permitted for this RADIUS server. Valid values: `auto`, `msChapV2`, `msChap`, `chap`, `pap`.
	AuthType *string `pulumi:"authType"`
	// CA of server to trust under TLS.
	CaCert *string `pulumi:"caCert"`
	// Calling & Called station identifier type configuration (default = legacy), this option is not available for 802.1x authentication.  Valid values: `legacy`, `IP`, `MAC`.
	CallStationIdType *string `pulumi:"callStationIdType"`
	// Class attribute name(s). The structure of `class` block is documented below.
	Classes []RadiusClass `pulumi:"classes"`
	// Client certificate to use under TLS.
	ClientCert *string `pulumi:"clientCert"`
	// Configure delimiter to be used for separating profile group names in the SSO attribute (default = plus character "+"). Valid values: `plus`, `comma`.
	Delimiter *string `pulumi:"delimiter"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// RADIUS attribute type to override user group information. Valid values: `filter-Id`, `class`.
	GroupOverrideAttrType *string `pulumi:"groupOverrideAttrType"`
	// Enable/disable compatibility with the H3C, a mechanism that performs security checking for authentication. Valid values: `enable`, `disable`.
	H3cCompatibility *string `pulumi:"h3cCompatibility"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// MAC authentication case (default = lowercase). Valid values: `uppercase`, `lowercase`.
	MacCase *string `pulumi:"macCase"`
	// MAC authentication password delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
	MacPasswordDelimiter *string `pulumi:"macPasswordDelimiter"`
	// MAC authentication username delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
	MacUsernameDelimiter *string `pulumi:"macUsernameDelimiter"`
	// RADIUS server entry name.
	Name *string `pulumi:"name"`
	// Custom NAS identifier.
	NasId *string `pulumi:"nasId"`
	// NAS identifier type configuration (default = legacy). Valid values: `legacy`, `custom`, `hostname`.
	NasIdType *string `pulumi:"nasIdType"`
	// IP address used to communicate with the RADIUS server and used as NAS-IP-Address and Called-Station-ID attributes.
	NasIp *string `pulumi:"nasIp"`
	// Password encoding. Valid values: `auto`, `ISO-8859-1`.
	PasswordEncoding *string `pulumi:"passwordEncoding"`
	// Enable/disable password renewal. Valid values: `enable`, `disable`.
	PasswordRenewal *string `pulumi:"passwordRenewal"`
	// Enable to allow a mechanism to change the attributes of an authentication, authorization, and accounting session after it is authenticated. Valid values: `enable`, `disable`.
	RadiusCoa *string `pulumi:"radiusCoa"`
	// RADIUS service port number.
	RadiusPort *int `pulumi:"radiusPort"`
	// Enable/disable RADIUS based single sign on feature. Valid values: `enable`, `disable`.
	Rsso *string `pulumi:"rsso"`
	// Time in seconds before the logged out user is removed from the "user context list" of logged on users.
	RssoContextTimeout *int `pulumi:"rssoContextTimeout"`
	// RADIUS attributes used to extract the user end point identifer from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	RssoEndpointAttribute *string `pulumi:"rssoEndpointAttribute"`
	// RADIUS attributes used to block a user. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	RssoEndpointBlockAttribute *string `pulumi:"rssoEndpointBlockAttribute"`
	// Enable/disable the replacement of old IP addresses with new ones for the same endpoint on RADIUS accounting Start messages. Valid values: `enable`, `disable`.
	RssoEpOneIpOnly *string `pulumi:"rssoEpOneIpOnly"`
	// Enable/disable flushing user IP sessions on RADIUS accounting Stop messages. Valid values: `enable`, `disable`.
	RssoFlushIpSession *string `pulumi:"rssoFlushIpSession"`
	// Events to log. Valid values: `protocol-error`, `profile-missing`, `accounting-stop-missed`, `accounting-event`, `endpoint-block`, `radiusd-other`, `none`.
	RssoLogFlags *string `pulumi:"rssoLogFlags"`
	// Time interval in seconds that group event log messages will be generated for dynamic profile events.
	RssoLogPeriod *int `pulumi:"rssoLogPeriod"`
	// Enable/disable sending RADIUS response packets after receiving Start and Stop records. Valid values: `enable`, `disable`.
	RssoRadiusResponse *string `pulumi:"rssoRadiusResponse"`
	// UDP port to listen on for RADIUS Start and Stop records.
	RssoRadiusServerPort *int `pulumi:"rssoRadiusServerPort"`
	// RADIUS secret used by the RADIUS accounting server.
	RssoSecret *string `pulumi:"rssoSecret"`
	// Enable/disable validating the RADIUS request shared secret in the Start or End record. Valid values: `enable`, `disable`.
	RssoValidateRequestSecret *string `pulumi:"rssoValidateRequestSecret"`
	// Secret key to access the secondary server.
	SecondarySecret *string `pulumi:"secondarySecret"`
	// {<name_str|ip_str>} secondary RADIUS CN domain name or IP.
	SecondaryServer *string `pulumi:"secondaryServer"`
	// Pre-shared secret key used to access the primary RADIUS server.
	Secret *string `pulumi:"secret"`
	// Primary RADIUS server CN domain name or IP address.
	Server *string `pulumi:"server"`
	// Enable/disable RADIUS server identity check (verify server domain name/IP address against the server certificate). Valid values: `enable`, `disable`.
	ServerIdentityCheck *string `pulumi:"serverIdentityCheck"`
	// Source IP address for communications to the RADIUS server.
	SourceIp *string `pulumi:"sourceIp"`
	// RADIUS attribute that contains the profile group name to be extracted from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	SsoAttribute *string `pulumi:"ssoAttribute"`
	// Key prefix for SSO group value in the SSO attribute.
	SsoAttributeKey *string `pulumi:"ssoAttributeKey"`
	// Enable/disable override old attribute value with new value for the same endpoint. Valid values: `enable`, `disable`.
	SsoAttributeValueOverride *string `pulumi:"ssoAttributeValueOverride"`
	// Time for which server reachability is cached so that when a server is unreachable, it will not be retried for at least this period of time (0 = cache disabled, default = 300).
	StatusTtl *int `pulumi:"statusTtl"`
	// Switch controller accounting message Framed-IP detection from DHCP snooping (seconds, default=2).
	SwitchControllerAcctFastFramedipDetect *int `pulumi:"switchControllerAcctFastFramedipDetect"`
	// Enable/Disable switch-controller nas-ip dynamic to dynamically set nas-ip. Valid values: `enable`, `disable`.
	SwitchControllerNasIpDynamic *string `pulumi:"switchControllerNasIpDynamic"`
	// RADIUS service type. Valid values: `login`, `framed`, `callback-login`, `callback-framed`, `outbound`, `administrative`, `nas-prompt`, `authenticate-only`, `callback-nas-prompt`, `call-check`, `callback-administrative`.
	SwitchControllerServiceType *string `pulumi:"switchControllerServiceType"`
	// Secret key to access the tertiary server.
	TertiarySecret *string `pulumi:"tertiarySecret"`
	// {<name_str|ip_str>} tertiary RADIUS CN domain name or IP.
	TertiaryServer *string `pulumi:"tertiaryServer"`
	// Time in seconds between re-sending authentication requests.
	Timeout *int `pulumi:"timeout"`
	// Minimum supported protocol version for TLS connections (default is to follow system global setting).
	TlsMinProtoVersion *string `pulumi:"tlsMinProtoVersion"`
	// Transport protocol to be used (default = udp). Valid values: `udp`, `tcp`, `tls`.
	TransportProtocol *string `pulumi:"transportProtocol"`
	// Enable/disable using management VDOM to send requests. Valid values: `enable`, `disable`.
	UseManagementVdom *string `pulumi:"useManagementVdom"`
	// Enable/disable case sensitive user names. Valid values: `enable`, `disable`.
	UsernameCaseSensitive *string `pulumi:"usernameCaseSensitive"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Radius resource.
type RadiusArgs struct {
	// Define subject identity field in certificate for user access right checking. Valid values: `othername`, `rfc822name`, `dnsname`.
	AccountKeyCertField pulumi.StringPtrInput
	// Account key processing operation. The FortiGate will keep either the whole domain or strip the domain from the subject identity. Valid values: `same`, `strip`.
	AccountKeyProcessing pulumi.StringPtrInput
	// Additional accounting servers. The structure of `accountingServer` block is documented below.
	AccountingServers RadiusAccountingServerArrayInput
	// Enable/disable sending of accounting messages to all configured servers (default = disable). Valid values: `enable`, `disable`.
	AcctAllServers pulumi.StringPtrInput
	// Time in seconds between each accounting interim update message.
	AcctInterimInterval pulumi.IntPtrInput
	// Enable/disable automatically including this RADIUS server in all user groups. Valid values: `disable`, `enable`.
	AllUsergroup pulumi.StringPtrInput
	// Authentication methods/protocols permitted for this RADIUS server. Valid values: `auto`, `msChapV2`, `msChap`, `chap`, `pap`.
	AuthType pulumi.StringPtrInput
	// CA of server to trust under TLS.
	CaCert pulumi.StringPtrInput
	// Calling & Called station identifier type configuration (default = legacy), this option is not available for 802.1x authentication.  Valid values: `legacy`, `IP`, `MAC`.
	CallStationIdType pulumi.StringPtrInput
	// Class attribute name(s). The structure of `class` block is documented below.
	Classes RadiusClassArrayInput
	// Client certificate to use under TLS.
	ClientCert pulumi.StringPtrInput
	// Configure delimiter to be used for separating profile group names in the SSO attribute (default = plus character "+"). Valid values: `plus`, `comma`.
	Delimiter pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// RADIUS attribute type to override user group information. Valid values: `filter-Id`, `class`.
	GroupOverrideAttrType pulumi.StringPtrInput
	// Enable/disable compatibility with the H3C, a mechanism that performs security checking for authentication. Valid values: `enable`, `disable`.
	H3cCompatibility pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// MAC authentication case (default = lowercase). Valid values: `uppercase`, `lowercase`.
	MacCase pulumi.StringPtrInput
	// MAC authentication password delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
	MacPasswordDelimiter pulumi.StringPtrInput
	// MAC authentication username delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
	MacUsernameDelimiter pulumi.StringPtrInput
	// RADIUS server entry name.
	Name pulumi.StringPtrInput
	// Custom NAS identifier.
	NasId pulumi.StringPtrInput
	// NAS identifier type configuration (default = legacy). Valid values: `legacy`, `custom`, `hostname`.
	NasIdType pulumi.StringPtrInput
	// IP address used to communicate with the RADIUS server and used as NAS-IP-Address and Called-Station-ID attributes.
	NasIp pulumi.StringPtrInput
	// Password encoding. Valid values: `auto`, `ISO-8859-1`.
	PasswordEncoding pulumi.StringPtrInput
	// Enable/disable password renewal. Valid values: `enable`, `disable`.
	PasswordRenewal pulumi.StringPtrInput
	// Enable to allow a mechanism to change the attributes of an authentication, authorization, and accounting session after it is authenticated. Valid values: `enable`, `disable`.
	RadiusCoa pulumi.StringPtrInput
	// RADIUS service port number.
	RadiusPort pulumi.IntPtrInput
	// Enable/disable RADIUS based single sign on feature. Valid values: `enable`, `disable`.
	Rsso pulumi.StringPtrInput
	// Time in seconds before the logged out user is removed from the "user context list" of logged on users.
	RssoContextTimeout pulumi.IntPtrInput
	// RADIUS attributes used to extract the user end point identifer from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	RssoEndpointAttribute pulumi.StringPtrInput
	// RADIUS attributes used to block a user. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	RssoEndpointBlockAttribute pulumi.StringPtrInput
	// Enable/disable the replacement of old IP addresses with new ones for the same endpoint on RADIUS accounting Start messages. Valid values: `enable`, `disable`.
	RssoEpOneIpOnly pulumi.StringPtrInput
	// Enable/disable flushing user IP sessions on RADIUS accounting Stop messages. Valid values: `enable`, `disable`.
	RssoFlushIpSession pulumi.StringPtrInput
	// Events to log. Valid values: `protocol-error`, `profile-missing`, `accounting-stop-missed`, `accounting-event`, `endpoint-block`, `radiusd-other`, `none`.
	RssoLogFlags pulumi.StringPtrInput
	// Time interval in seconds that group event log messages will be generated for dynamic profile events.
	RssoLogPeriod pulumi.IntPtrInput
	// Enable/disable sending RADIUS response packets after receiving Start and Stop records. Valid values: `enable`, `disable`.
	RssoRadiusResponse pulumi.StringPtrInput
	// UDP port to listen on for RADIUS Start and Stop records.
	RssoRadiusServerPort pulumi.IntPtrInput
	// RADIUS secret used by the RADIUS accounting server.
	RssoSecret pulumi.StringPtrInput
	// Enable/disable validating the RADIUS request shared secret in the Start or End record. Valid values: `enable`, `disable`.
	RssoValidateRequestSecret pulumi.StringPtrInput
	// Secret key to access the secondary server.
	SecondarySecret pulumi.StringPtrInput
	// {<name_str|ip_str>} secondary RADIUS CN domain name or IP.
	SecondaryServer pulumi.StringPtrInput
	// Pre-shared secret key used to access the primary RADIUS server.
	Secret pulumi.StringPtrInput
	// Primary RADIUS server CN domain name or IP address.
	Server pulumi.StringPtrInput
	// Enable/disable RADIUS server identity check (verify server domain name/IP address against the server certificate). Valid values: `enable`, `disable`.
	ServerIdentityCheck pulumi.StringPtrInput
	// Source IP address for communications to the RADIUS server.
	SourceIp pulumi.StringPtrInput
	// RADIUS attribute that contains the profile group name to be extracted from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	SsoAttribute pulumi.StringPtrInput
	// Key prefix for SSO group value in the SSO attribute.
	SsoAttributeKey pulumi.StringPtrInput
	// Enable/disable override old attribute value with new value for the same endpoint. Valid values: `enable`, `disable`.
	SsoAttributeValueOverride pulumi.StringPtrInput
	// Time for which server reachability is cached so that when a server is unreachable, it will not be retried for at least this period of time (0 = cache disabled, default = 300).
	StatusTtl pulumi.IntPtrInput
	// Switch controller accounting message Framed-IP detection from DHCP snooping (seconds, default=2).
	SwitchControllerAcctFastFramedipDetect pulumi.IntPtrInput
	// Enable/Disable switch-controller nas-ip dynamic to dynamically set nas-ip. Valid values: `enable`, `disable`.
	SwitchControllerNasIpDynamic pulumi.StringPtrInput
	// RADIUS service type. Valid values: `login`, `framed`, `callback-login`, `callback-framed`, `outbound`, `administrative`, `nas-prompt`, `authenticate-only`, `callback-nas-prompt`, `call-check`, `callback-administrative`.
	SwitchControllerServiceType pulumi.StringPtrInput
	// Secret key to access the tertiary server.
	TertiarySecret pulumi.StringPtrInput
	// {<name_str|ip_str>} tertiary RADIUS CN domain name or IP.
	TertiaryServer pulumi.StringPtrInput
	// Time in seconds between re-sending authentication requests.
	Timeout pulumi.IntPtrInput
	// Minimum supported protocol version for TLS connections (default is to follow system global setting).
	TlsMinProtoVersion pulumi.StringPtrInput
	// Transport protocol to be used (default = udp). Valid values: `udp`, `tcp`, `tls`.
	TransportProtocol pulumi.StringPtrInput
	// Enable/disable using management VDOM to send requests. Valid values: `enable`, `disable`.
	UseManagementVdom pulumi.StringPtrInput
	// Enable/disable case sensitive user names. Valid values: `enable`, `disable`.
	UsernameCaseSensitive pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (RadiusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*radiusArgs)(nil)).Elem()
}

type RadiusInput interface {
	pulumi.Input

	ToRadiusOutput() RadiusOutput
	ToRadiusOutputWithContext(ctx context.Context) RadiusOutput
}

func (*Radius) ElementType() reflect.Type {
	return reflect.TypeOf((**Radius)(nil)).Elem()
}

func (i *Radius) ToRadiusOutput() RadiusOutput {
	return i.ToRadiusOutputWithContext(context.Background())
}

func (i *Radius) ToRadiusOutputWithContext(ctx context.Context) RadiusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusOutput)
}

// RadiusArrayInput is an input type that accepts RadiusArray and RadiusArrayOutput values.
// You can construct a concrete instance of `RadiusArrayInput` via:
//
//	RadiusArray{ RadiusArgs{...} }
type RadiusArrayInput interface {
	pulumi.Input

	ToRadiusArrayOutput() RadiusArrayOutput
	ToRadiusArrayOutputWithContext(context.Context) RadiusArrayOutput
}

type RadiusArray []RadiusInput

func (RadiusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Radius)(nil)).Elem()
}

func (i RadiusArray) ToRadiusArrayOutput() RadiusArrayOutput {
	return i.ToRadiusArrayOutputWithContext(context.Background())
}

func (i RadiusArray) ToRadiusArrayOutputWithContext(ctx context.Context) RadiusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusArrayOutput)
}

// RadiusMapInput is an input type that accepts RadiusMap and RadiusMapOutput values.
// You can construct a concrete instance of `RadiusMapInput` via:
//
//	RadiusMap{ "key": RadiusArgs{...} }
type RadiusMapInput interface {
	pulumi.Input

	ToRadiusMapOutput() RadiusMapOutput
	ToRadiusMapOutputWithContext(context.Context) RadiusMapOutput
}

type RadiusMap map[string]RadiusInput

func (RadiusMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Radius)(nil)).Elem()
}

func (i RadiusMap) ToRadiusMapOutput() RadiusMapOutput {
	return i.ToRadiusMapOutputWithContext(context.Background())
}

func (i RadiusMap) ToRadiusMapOutputWithContext(ctx context.Context) RadiusMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusMapOutput)
}

type RadiusOutput struct{ *pulumi.OutputState }

func (RadiusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Radius)(nil)).Elem()
}

func (o RadiusOutput) ToRadiusOutput() RadiusOutput {
	return o
}

func (o RadiusOutput) ToRadiusOutputWithContext(ctx context.Context) RadiusOutput {
	return o
}

// Define subject identity field in certificate for user access right checking. Valid values: `othername`, `rfc822name`, `dnsname`.
func (o RadiusOutput) AccountKeyCertField() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.AccountKeyCertField }).(pulumi.StringOutput)
}

// Account key processing operation. The FortiGate will keep either the whole domain or strip the domain from the subject identity. Valid values: `same`, `strip`.
func (o RadiusOutput) AccountKeyProcessing() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.AccountKeyProcessing }).(pulumi.StringOutput)
}

// Additional accounting servers. The structure of `accountingServer` block is documented below.
func (o RadiusOutput) AccountingServers() RadiusAccountingServerArrayOutput {
	return o.ApplyT(func(v *Radius) RadiusAccountingServerArrayOutput { return v.AccountingServers }).(RadiusAccountingServerArrayOutput)
}

// Enable/disable sending of accounting messages to all configured servers (default = disable). Valid values: `enable`, `disable`.
func (o RadiusOutput) AcctAllServers() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.AcctAllServers }).(pulumi.StringOutput)
}

// Time in seconds between each accounting interim update message.
func (o RadiusOutput) AcctInterimInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Radius) pulumi.IntOutput { return v.AcctInterimInterval }).(pulumi.IntOutput)
}

// Enable/disable automatically including this RADIUS server in all user groups. Valid values: `disable`, `enable`.
func (o RadiusOutput) AllUsergroup() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.AllUsergroup }).(pulumi.StringOutput)
}

// Authentication methods/protocols permitted for this RADIUS server. Valid values: `auto`, `msChapV2`, `msChap`, `chap`, `pap`.
func (o RadiusOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.AuthType }).(pulumi.StringOutput)
}

// CA of server to trust under TLS.
func (o RadiusOutput) CaCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.CaCert }).(pulumi.StringOutput)
}

// Calling & Called station identifier type configuration (default = legacy), this option is not available for 802.1x authentication.  Valid values: `legacy`, `IP`, `MAC`.
func (o RadiusOutput) CallStationIdType() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.CallStationIdType }).(pulumi.StringOutput)
}

// Class attribute name(s). The structure of `class` block is documented below.
func (o RadiusOutput) Classes() RadiusClassArrayOutput {
	return o.ApplyT(func(v *Radius) RadiusClassArrayOutput { return v.Classes }).(RadiusClassArrayOutput)
}

// Client certificate to use under TLS.
func (o RadiusOutput) ClientCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.ClientCert }).(pulumi.StringOutput)
}

// Configure delimiter to be used for separating profile group names in the SSO attribute (default = plus character "+"). Valid values: `plus`, `comma`.
func (o RadiusOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.Delimiter }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o RadiusOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o RadiusOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// RADIUS attribute type to override user group information. Valid values: `filter-Id`, `class`.
func (o RadiusOutput) GroupOverrideAttrType() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.GroupOverrideAttrType }).(pulumi.StringOutput)
}

// Enable/disable compatibility with the H3C, a mechanism that performs security checking for authentication. Valid values: `enable`, `disable`.
func (o RadiusOutput) H3cCompatibility() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.H3cCompatibility }).(pulumi.StringOutput)
}

// Specify outgoing interface to reach server.
func (o RadiusOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o RadiusOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// MAC authentication case (default = lowercase). Valid values: `uppercase`, `lowercase`.
func (o RadiusOutput) MacCase() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.MacCase }).(pulumi.StringOutput)
}

// MAC authentication password delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
func (o RadiusOutput) MacPasswordDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.MacPasswordDelimiter }).(pulumi.StringOutput)
}

// MAC authentication username delimiter (default = hyphen). Valid values: `hyphen`, `single-hyphen`, `colon`, `none`.
func (o RadiusOutput) MacUsernameDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.MacUsernameDelimiter }).(pulumi.StringOutput)
}

// RADIUS server entry name.
func (o RadiusOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Custom NAS identifier.
func (o RadiusOutput) NasId() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.NasId }).(pulumi.StringOutput)
}

// NAS identifier type configuration (default = legacy). Valid values: `legacy`, `custom`, `hostname`.
func (o RadiusOutput) NasIdType() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.NasIdType }).(pulumi.StringOutput)
}

// IP address used to communicate with the RADIUS server and used as NAS-IP-Address and Called-Station-ID attributes.
func (o RadiusOutput) NasIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.NasIp }).(pulumi.StringOutput)
}

// Password encoding. Valid values: `auto`, `ISO-8859-1`.
func (o RadiusOutput) PasswordEncoding() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.PasswordEncoding }).(pulumi.StringOutput)
}

// Enable/disable password renewal. Valid values: `enable`, `disable`.
func (o RadiusOutput) PasswordRenewal() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.PasswordRenewal }).(pulumi.StringOutput)
}

// Enable to allow a mechanism to change the attributes of an authentication, authorization, and accounting session after it is authenticated. Valid values: `enable`, `disable`.
func (o RadiusOutput) RadiusCoa() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.RadiusCoa }).(pulumi.StringOutput)
}

// RADIUS service port number.
func (o RadiusOutput) RadiusPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Radius) pulumi.IntOutput { return v.RadiusPort }).(pulumi.IntOutput)
}

// Enable/disable RADIUS based single sign on feature. Valid values: `enable`, `disable`.
func (o RadiusOutput) Rsso() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.Rsso }).(pulumi.StringOutput)
}

// Time in seconds before the logged out user is removed from the "user context list" of logged on users.
func (o RadiusOutput) RssoContextTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Radius) pulumi.IntOutput { return v.RssoContextTimeout }).(pulumi.IntOutput)
}

// RADIUS attributes used to extract the user end point identifer from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
func (o RadiusOutput) RssoEndpointAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.RssoEndpointAttribute }).(pulumi.StringOutput)
}

// RADIUS attributes used to block a user. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
func (o RadiusOutput) RssoEndpointBlockAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.RssoEndpointBlockAttribute }).(pulumi.StringOutput)
}

// Enable/disable the replacement of old IP addresses with new ones for the same endpoint on RADIUS accounting Start messages. Valid values: `enable`, `disable`.
func (o RadiusOutput) RssoEpOneIpOnly() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.RssoEpOneIpOnly }).(pulumi.StringOutput)
}

// Enable/disable flushing user IP sessions on RADIUS accounting Stop messages. Valid values: `enable`, `disable`.
func (o RadiusOutput) RssoFlushIpSession() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.RssoFlushIpSession }).(pulumi.StringOutput)
}

// Events to log. Valid values: `protocol-error`, `profile-missing`, `accounting-stop-missed`, `accounting-event`, `endpoint-block`, `radiusd-other`, `none`.
func (o RadiusOutput) RssoLogFlags() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.RssoLogFlags }).(pulumi.StringOutput)
}

// Time interval in seconds that group event log messages will be generated for dynamic profile events.
func (o RadiusOutput) RssoLogPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *Radius) pulumi.IntOutput { return v.RssoLogPeriod }).(pulumi.IntOutput)
}

// Enable/disable sending RADIUS response packets after receiving Start and Stop records. Valid values: `enable`, `disable`.
func (o RadiusOutput) RssoRadiusResponse() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.RssoRadiusResponse }).(pulumi.StringOutput)
}

// UDP port to listen on for RADIUS Start and Stop records.
func (o RadiusOutput) RssoRadiusServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Radius) pulumi.IntOutput { return v.RssoRadiusServerPort }).(pulumi.IntOutput)
}

// RADIUS secret used by the RADIUS accounting server.
func (o RadiusOutput) RssoSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringPtrOutput { return v.RssoSecret }).(pulumi.StringPtrOutput)
}

// Enable/disable validating the RADIUS request shared secret in the Start or End record. Valid values: `enable`, `disable`.
func (o RadiusOutput) RssoValidateRequestSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.RssoValidateRequestSecret }).(pulumi.StringOutput)
}

// Secret key to access the secondary server.
func (o RadiusOutput) SecondarySecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringPtrOutput { return v.SecondarySecret }).(pulumi.StringPtrOutput)
}

// {<name_str|ip_str>} secondary RADIUS CN domain name or IP.
func (o RadiusOutput) SecondaryServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.SecondaryServer }).(pulumi.StringOutput)
}

// Pre-shared secret key used to access the primary RADIUS server.
func (o RadiusOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringPtrOutput { return v.Secret }).(pulumi.StringPtrOutput)
}

// Primary RADIUS server CN domain name or IP address.
func (o RadiusOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

// Enable/disable RADIUS server identity check (verify server domain name/IP address against the server certificate). Valid values: `enable`, `disable`.
func (o RadiusOutput) ServerIdentityCheck() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.ServerIdentityCheck }).(pulumi.StringOutput)
}

// Source IP address for communications to the RADIUS server.
func (o RadiusOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

// RADIUS attribute that contains the profile group name to be extracted from the RADIUS Start record. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
func (o RadiusOutput) SsoAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.SsoAttribute }).(pulumi.StringOutput)
}

// Key prefix for SSO group value in the SSO attribute.
func (o RadiusOutput) SsoAttributeKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.SsoAttributeKey }).(pulumi.StringOutput)
}

// Enable/disable override old attribute value with new value for the same endpoint. Valid values: `enable`, `disable`.
func (o RadiusOutput) SsoAttributeValueOverride() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.SsoAttributeValueOverride }).(pulumi.StringOutput)
}

// Time for which server reachability is cached so that when a server is unreachable, it will not be retried for at least this period of time (0 = cache disabled, default = 300).
func (o RadiusOutput) StatusTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *Radius) pulumi.IntOutput { return v.StatusTtl }).(pulumi.IntOutput)
}

// Switch controller accounting message Framed-IP detection from DHCP snooping (seconds, default=2).
func (o RadiusOutput) SwitchControllerAcctFastFramedipDetect() pulumi.IntOutput {
	return o.ApplyT(func(v *Radius) pulumi.IntOutput { return v.SwitchControllerAcctFastFramedipDetect }).(pulumi.IntOutput)
}

// Enable/Disable switch-controller nas-ip dynamic to dynamically set nas-ip. Valid values: `enable`, `disable`.
func (o RadiusOutput) SwitchControllerNasIpDynamic() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.SwitchControllerNasIpDynamic }).(pulumi.StringOutput)
}

// RADIUS service type. Valid values: `login`, `framed`, `callback-login`, `callback-framed`, `outbound`, `administrative`, `nas-prompt`, `authenticate-only`, `callback-nas-prompt`, `call-check`, `callback-administrative`.
func (o RadiusOutput) SwitchControllerServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.SwitchControllerServiceType }).(pulumi.StringOutput)
}

// Secret key to access the tertiary server.
func (o RadiusOutput) TertiarySecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringPtrOutput { return v.TertiarySecret }).(pulumi.StringPtrOutput)
}

// {<name_str|ip_str>} tertiary RADIUS CN domain name or IP.
func (o RadiusOutput) TertiaryServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.TertiaryServer }).(pulumi.StringOutput)
}

// Time in seconds between re-sending authentication requests.
func (o RadiusOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Radius) pulumi.IntOutput { return v.Timeout }).(pulumi.IntOutput)
}

// Minimum supported protocol version for TLS connections (default is to follow system global setting).
func (o RadiusOutput) TlsMinProtoVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.TlsMinProtoVersion }).(pulumi.StringOutput)
}

// Transport protocol to be used (default = udp). Valid values: `udp`, `tcp`, `tls`.
func (o RadiusOutput) TransportProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.TransportProtocol }).(pulumi.StringOutput)
}

// Enable/disable using management VDOM to send requests. Valid values: `enable`, `disable`.
func (o RadiusOutput) UseManagementVdom() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.UseManagementVdom }).(pulumi.StringOutput)
}

// Enable/disable case sensitive user names. Valid values: `enable`, `disable`.
func (o RadiusOutput) UsernameCaseSensitive() pulumi.StringOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringOutput { return v.UsernameCaseSensitive }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o RadiusOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Radius) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type RadiusArrayOutput struct{ *pulumi.OutputState }

func (RadiusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Radius)(nil)).Elem()
}

func (o RadiusArrayOutput) ToRadiusArrayOutput() RadiusArrayOutput {
	return o
}

func (o RadiusArrayOutput) ToRadiusArrayOutputWithContext(ctx context.Context) RadiusArrayOutput {
	return o
}

func (o RadiusArrayOutput) Index(i pulumi.IntInput) RadiusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Radius {
		return vs[0].([]*Radius)[vs[1].(int)]
	}).(RadiusOutput)
}

type RadiusMapOutput struct{ *pulumi.OutputState }

func (RadiusMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Radius)(nil)).Elem()
}

func (o RadiusMapOutput) ToRadiusMapOutput() RadiusMapOutput {
	return o
}

func (o RadiusMapOutput) ToRadiusMapOutputWithContext(ctx context.Context) RadiusMapOutput {
	return o
}

func (o RadiusMapOutput) MapIndex(k pulumi.StringInput) RadiusOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Radius {
		return vs[0].(map[string]*Radius)[vs[1].(string)]
	}).(RadiusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RadiusInput)(nil)).Elem(), &Radius{})
	pulumi.RegisterInputType(reflect.TypeOf((*RadiusArrayInput)(nil)).Elem(), RadiusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RadiusMapInput)(nil)).Elem(), RadiusMap{})
	pulumi.RegisterOutputType(RadiusOutput{})
	pulumi.RegisterOutputType(RadiusArrayOutput{})
	pulumi.RegisterOutputType(RadiusMapOutput{})
}
