// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package diameterfilter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure Diameter filter profiles. Applies to FortiOS Version `>= 7.4.2`.
//
// ## Import
//
// DiameterFilter Profile can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:diameterfilter/profile:Profile labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:diameterfilter/profile:Profile labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Profile struct {
	pulumi.CustomResourceState

	// Action to be taken for messages with cmd flag reserve bits set. Valid values: `allow`, `block`, `reset`, `monitor`.
	CmdFlagsReserveSet pulumi.StringOutput `pulumi:"cmdFlagsReserveSet"`
	// Action to be taken for messages with invalid command code. Valid values: `allow`, `block`, `reset`, `monitor`.
	CommandCodeInvalid pulumi.StringOutput `pulumi:"commandCodeInvalid"`
	// Valid range for command codes (0-16777215).
	CommandCodeRange pulumi.StringOutput `pulumi:"commandCodeRange"`
	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Enable/disable packet log for triggered diameter settings. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringOutput `pulumi:"logPacket"`
	// Action to be taken for invalid message length. Valid values: `allow`, `block`, `reset`, `monitor`.
	MessageLengthInvalid pulumi.StringOutput `pulumi:"messageLengthInvalid"`
	// Action to be taken for answers without corresponding request. Valid values: `allow`, `block`, `reset`, `monitor`.
	MissingRequestAction pulumi.StringOutput `pulumi:"missingRequestAction"`
	// Enable/disable logging for all User Name and Result Code AVP messages. Valid values: `disable`, `enable`.
	MonitorAllMessages pulumi.StringOutput `pulumi:"monitorAllMessages"`
	// Profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Action to be taken for invalid protocol version. Valid values: `allow`, `block`, `reset`, `monitor`.
	ProtocolVersionInvalid pulumi.StringOutput `pulumi:"protocolVersionInvalid"`
	// Action to be taken for request messages with error flag set. Valid values: `allow`, `block`, `reset`, `monitor`.
	RequestErrorFlagSet pulumi.StringOutput `pulumi:"requestErrorFlagSet"`
	// Enable/disable validation that each answer has a corresponding request. Valid values: `disable`, `enable`.
	TrackRequestsAnswers pulumi.StringOutput `pulumi:"trackRequestsAnswers"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewProfile registers a new resource with the given unique name, arguments, and options.
func NewProfile(ctx *pulumi.Context,
	name string, args *ProfileArgs, opts ...pulumi.ResourceOption) (*Profile, error) {
	if args == nil {
		args = &ProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Profile
	err := ctx.RegisterResource("fortios:diameterfilter/profile:Profile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfile gets an existing Profile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileState, opts ...pulumi.ResourceOption) (*Profile, error) {
	var resource Profile
	err := ctx.ReadResource("fortios:diameterfilter/profile:Profile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Profile resources.
type profileState struct {
	// Action to be taken for messages with cmd flag reserve bits set. Valid values: `allow`, `block`, `reset`, `monitor`.
	CmdFlagsReserveSet *string `pulumi:"cmdFlagsReserveSet"`
	// Action to be taken for messages with invalid command code. Valid values: `allow`, `block`, `reset`, `monitor`.
	CommandCodeInvalid *string `pulumi:"commandCodeInvalid"`
	// Valid range for command codes (0-16777215).
	CommandCodeRange *string `pulumi:"commandCodeRange"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Enable/disable packet log for triggered diameter settings. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Action to be taken for invalid message length. Valid values: `allow`, `block`, `reset`, `monitor`.
	MessageLengthInvalid *string `pulumi:"messageLengthInvalid"`
	// Action to be taken for answers without corresponding request. Valid values: `allow`, `block`, `reset`, `monitor`.
	MissingRequestAction *string `pulumi:"missingRequestAction"`
	// Enable/disable logging for all User Name and Result Code AVP messages. Valid values: `disable`, `enable`.
	MonitorAllMessages *string `pulumi:"monitorAllMessages"`
	// Profile name.
	Name *string `pulumi:"name"`
	// Action to be taken for invalid protocol version. Valid values: `allow`, `block`, `reset`, `monitor`.
	ProtocolVersionInvalid *string `pulumi:"protocolVersionInvalid"`
	// Action to be taken for request messages with error flag set. Valid values: `allow`, `block`, `reset`, `monitor`.
	RequestErrorFlagSet *string `pulumi:"requestErrorFlagSet"`
	// Enable/disable validation that each answer has a corresponding request. Valid values: `disable`, `enable`.
	TrackRequestsAnswers *string `pulumi:"trackRequestsAnswers"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ProfileState struct {
	// Action to be taken for messages with cmd flag reserve bits set. Valid values: `allow`, `block`, `reset`, `monitor`.
	CmdFlagsReserveSet pulumi.StringPtrInput
	// Action to be taken for messages with invalid command code. Valid values: `allow`, `block`, `reset`, `monitor`.
	CommandCodeInvalid pulumi.StringPtrInput
	// Valid range for command codes (0-16777215).
	CommandCodeRange pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Enable/disable packet log for triggered diameter settings. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput
	// Action to be taken for invalid message length. Valid values: `allow`, `block`, `reset`, `monitor`.
	MessageLengthInvalid pulumi.StringPtrInput
	// Action to be taken for answers without corresponding request. Valid values: `allow`, `block`, `reset`, `monitor`.
	MissingRequestAction pulumi.StringPtrInput
	// Enable/disable logging for all User Name and Result Code AVP messages. Valid values: `disable`, `enable`.
	MonitorAllMessages pulumi.StringPtrInput
	// Profile name.
	Name pulumi.StringPtrInput
	// Action to be taken for invalid protocol version. Valid values: `allow`, `block`, `reset`, `monitor`.
	ProtocolVersionInvalid pulumi.StringPtrInput
	// Action to be taken for request messages with error flag set. Valid values: `allow`, `block`, `reset`, `monitor`.
	RequestErrorFlagSet pulumi.StringPtrInput
	// Enable/disable validation that each answer has a corresponding request. Valid values: `disable`, `enable`.
	TrackRequestsAnswers pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileState)(nil)).Elem()
}

type profileArgs struct {
	// Action to be taken for messages with cmd flag reserve bits set. Valid values: `allow`, `block`, `reset`, `monitor`.
	CmdFlagsReserveSet *string `pulumi:"cmdFlagsReserveSet"`
	// Action to be taken for messages with invalid command code. Valid values: `allow`, `block`, `reset`, `monitor`.
	CommandCodeInvalid *string `pulumi:"commandCodeInvalid"`
	// Valid range for command codes (0-16777215).
	CommandCodeRange *string `pulumi:"commandCodeRange"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Enable/disable packet log for triggered diameter settings. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Action to be taken for invalid message length. Valid values: `allow`, `block`, `reset`, `monitor`.
	MessageLengthInvalid *string `pulumi:"messageLengthInvalid"`
	// Action to be taken for answers without corresponding request. Valid values: `allow`, `block`, `reset`, `monitor`.
	MissingRequestAction *string `pulumi:"missingRequestAction"`
	// Enable/disable logging for all User Name and Result Code AVP messages. Valid values: `disable`, `enable`.
	MonitorAllMessages *string `pulumi:"monitorAllMessages"`
	// Profile name.
	Name *string `pulumi:"name"`
	// Action to be taken for invalid protocol version. Valid values: `allow`, `block`, `reset`, `monitor`.
	ProtocolVersionInvalid *string `pulumi:"protocolVersionInvalid"`
	// Action to be taken for request messages with error flag set. Valid values: `allow`, `block`, `reset`, `monitor`.
	RequestErrorFlagSet *string `pulumi:"requestErrorFlagSet"`
	// Enable/disable validation that each answer has a corresponding request. Valid values: `disable`, `enable`.
	TrackRequestsAnswers *string `pulumi:"trackRequestsAnswers"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Profile resource.
type ProfileArgs struct {
	// Action to be taken for messages with cmd flag reserve bits set. Valid values: `allow`, `block`, `reset`, `monitor`.
	CmdFlagsReserveSet pulumi.StringPtrInput
	// Action to be taken for messages with invalid command code. Valid values: `allow`, `block`, `reset`, `monitor`.
	CommandCodeInvalid pulumi.StringPtrInput
	// Valid range for command codes (0-16777215).
	CommandCodeRange pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Enable/disable packet log for triggered diameter settings. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput
	// Action to be taken for invalid message length. Valid values: `allow`, `block`, `reset`, `monitor`.
	MessageLengthInvalid pulumi.StringPtrInput
	// Action to be taken for answers without corresponding request. Valid values: `allow`, `block`, `reset`, `monitor`.
	MissingRequestAction pulumi.StringPtrInput
	// Enable/disable logging for all User Name and Result Code AVP messages. Valid values: `disable`, `enable`.
	MonitorAllMessages pulumi.StringPtrInput
	// Profile name.
	Name pulumi.StringPtrInput
	// Action to be taken for invalid protocol version. Valid values: `allow`, `block`, `reset`, `monitor`.
	ProtocolVersionInvalid pulumi.StringPtrInput
	// Action to be taken for request messages with error flag set. Valid values: `allow`, `block`, `reset`, `monitor`.
	RequestErrorFlagSet pulumi.StringPtrInput
	// Enable/disable validation that each answer has a corresponding request. Valid values: `disable`, `enable`.
	TrackRequestsAnswers pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileArgs)(nil)).Elem()
}

type ProfileInput interface {
	pulumi.Input

	ToProfileOutput() ProfileOutput
	ToProfileOutputWithContext(ctx context.Context) ProfileOutput
}

func (*Profile) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (i *Profile) ToProfileOutput() ProfileOutput {
	return i.ToProfileOutputWithContext(context.Background())
}

func (i *Profile) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOutput)
}

// ProfileArrayInput is an input type that accepts ProfileArray and ProfileArrayOutput values.
// You can construct a concrete instance of `ProfileArrayInput` via:
//
//	ProfileArray{ ProfileArgs{...} }
type ProfileArrayInput interface {
	pulumi.Input

	ToProfileArrayOutput() ProfileArrayOutput
	ToProfileArrayOutputWithContext(context.Context) ProfileArrayOutput
}

type ProfileArray []ProfileInput

func (ProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (i ProfileArray) ToProfileArrayOutput() ProfileArrayOutput {
	return i.ToProfileArrayOutputWithContext(context.Background())
}

func (i ProfileArray) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileArrayOutput)
}

// ProfileMapInput is an input type that accepts ProfileMap and ProfileMapOutput values.
// You can construct a concrete instance of `ProfileMapInput` via:
//
//	ProfileMap{ "key": ProfileArgs{...} }
type ProfileMapInput interface {
	pulumi.Input

	ToProfileMapOutput() ProfileMapOutput
	ToProfileMapOutputWithContext(context.Context) ProfileMapOutput
}

type ProfileMap map[string]ProfileInput

func (ProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (i ProfileMap) ToProfileMapOutput() ProfileMapOutput {
	return i.ToProfileMapOutputWithContext(context.Background())
}

func (i ProfileMap) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMapOutput)
}

type ProfileOutput struct{ *pulumi.OutputState }

func (ProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (o ProfileOutput) ToProfileOutput() ProfileOutput {
	return o
}

func (o ProfileOutput) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return o
}

// Action to be taken for messages with cmd flag reserve bits set. Valid values: `allow`, `block`, `reset`, `monitor`.
func (o ProfileOutput) CmdFlagsReserveSet() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.CmdFlagsReserveSet }).(pulumi.StringOutput)
}

// Action to be taken for messages with invalid command code. Valid values: `allow`, `block`, `reset`, `monitor`.
func (o ProfileOutput) CommandCodeInvalid() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.CommandCodeInvalid }).(pulumi.StringOutput)
}

// Valid range for command codes (0-16777215).
func (o ProfileOutput) CommandCodeRange() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.CommandCodeRange }).(pulumi.StringOutput)
}

// Comment.
func (o ProfileOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Enable/disable packet log for triggered diameter settings. Valid values: `disable`, `enable`.
func (o ProfileOutput) LogPacket() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.LogPacket }).(pulumi.StringOutput)
}

// Action to be taken for invalid message length. Valid values: `allow`, `block`, `reset`, `monitor`.
func (o ProfileOutput) MessageLengthInvalid() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.MessageLengthInvalid }).(pulumi.StringOutput)
}

// Action to be taken for answers without corresponding request. Valid values: `allow`, `block`, `reset`, `monitor`.
func (o ProfileOutput) MissingRequestAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.MissingRequestAction }).(pulumi.StringOutput)
}

// Enable/disable logging for all User Name and Result Code AVP messages. Valid values: `disable`, `enable`.
func (o ProfileOutput) MonitorAllMessages() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.MonitorAllMessages }).(pulumi.StringOutput)
}

// Profile name.
func (o ProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Action to be taken for invalid protocol version. Valid values: `allow`, `block`, `reset`, `monitor`.
func (o ProfileOutput) ProtocolVersionInvalid() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ProtocolVersionInvalid }).(pulumi.StringOutput)
}

// Action to be taken for request messages with error flag set. Valid values: `allow`, `block`, `reset`, `monitor`.
func (o ProfileOutput) RequestErrorFlagSet() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.RequestErrorFlagSet }).(pulumi.StringOutput)
}

// Enable/disable validation that each answer has a corresponding request. Valid values: `disable`, `enable`.
func (o ProfileOutput) TrackRequestsAnswers() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.TrackRequestsAnswers }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ProfileArrayOutput struct{ *pulumi.OutputState }

func (ProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Profile)(nil)).Elem()
}

func (o ProfileArrayOutput) ToProfileArrayOutput() ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) ToProfileArrayOutputWithContext(ctx context.Context) ProfileArrayOutput {
	return o
}

func (o ProfileArrayOutput) Index(i pulumi.IntInput) ProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].([]*Profile)[vs[1].(int)]
	}).(ProfileOutput)
}

type ProfileMapOutput struct{ *pulumi.OutputState }

func (ProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Profile)(nil)).Elem()
}

func (o ProfileMapOutput) ToProfileMapOutput() ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) ToProfileMapOutputWithContext(ctx context.Context) ProfileMapOutput {
	return o
}

func (o ProfileMapOutput) MapIndex(k pulumi.StringInput) ProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Profile {
		return vs[0].(map[string]*Profile)[vs[1].(string)]
	}).(ProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileInput)(nil)).Elem(), &Profile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileArrayInput)(nil)).Elem(), ProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMapInput)(nil)).Elem(), ProfileMap{})
	pulumi.RegisterOutputType(ProfileOutput{})
	pulumi.RegisterOutputType(ProfileArrayOutput{})
	pulumi.RegisterOutputType(ProfileMapOutput{})
}
