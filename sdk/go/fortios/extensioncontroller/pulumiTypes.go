// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package extensioncontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

var _ = internal.GetEnvOrDefault

type ExtenderWanExtension struct {
	// FortiExtender interface name.
	Modem1Extension *string `pulumi:"modem1Extension"`
	// FortiExtender interface name.
	Modem2Extension *string `pulumi:"modem2Extension"`
}

// ExtenderWanExtensionInput is an input type that accepts ExtenderWanExtensionArgs and ExtenderWanExtensionOutput values.
// You can construct a concrete instance of `ExtenderWanExtensionInput` via:
//
//	ExtenderWanExtensionArgs{...}
type ExtenderWanExtensionInput interface {
	pulumi.Input

	ToExtenderWanExtensionOutput() ExtenderWanExtensionOutput
	ToExtenderWanExtensionOutputWithContext(context.Context) ExtenderWanExtensionOutput
}

type ExtenderWanExtensionArgs struct {
	// FortiExtender interface name.
	Modem1Extension pulumi.StringPtrInput `pulumi:"modem1Extension"`
	// FortiExtender interface name.
	Modem2Extension pulumi.StringPtrInput `pulumi:"modem2Extension"`
}

func (ExtenderWanExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderWanExtension)(nil)).Elem()
}

func (i ExtenderWanExtensionArgs) ToExtenderWanExtensionOutput() ExtenderWanExtensionOutput {
	return i.ToExtenderWanExtensionOutputWithContext(context.Background())
}

func (i ExtenderWanExtensionArgs) ToExtenderWanExtensionOutputWithContext(ctx context.Context) ExtenderWanExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderWanExtensionOutput)
}

func (i ExtenderWanExtensionArgs) ToExtenderWanExtensionPtrOutput() ExtenderWanExtensionPtrOutput {
	return i.ToExtenderWanExtensionPtrOutputWithContext(context.Background())
}

func (i ExtenderWanExtensionArgs) ToExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtenderWanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderWanExtensionOutput).ToExtenderWanExtensionPtrOutputWithContext(ctx)
}

// ExtenderWanExtensionPtrInput is an input type that accepts ExtenderWanExtensionArgs, ExtenderWanExtensionPtr and ExtenderWanExtensionPtrOutput values.
// You can construct a concrete instance of `ExtenderWanExtensionPtrInput` via:
//
//	        ExtenderWanExtensionArgs{...}
//
//	or:
//
//	        nil
type ExtenderWanExtensionPtrInput interface {
	pulumi.Input

	ToExtenderWanExtensionPtrOutput() ExtenderWanExtensionPtrOutput
	ToExtenderWanExtensionPtrOutputWithContext(context.Context) ExtenderWanExtensionPtrOutput
}

type extenderWanExtensionPtrType ExtenderWanExtensionArgs

func ExtenderWanExtensionPtr(v *ExtenderWanExtensionArgs) ExtenderWanExtensionPtrInput {
	return (*extenderWanExtensionPtrType)(v)
}

func (*extenderWanExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderWanExtension)(nil)).Elem()
}

func (i *extenderWanExtensionPtrType) ToExtenderWanExtensionPtrOutput() ExtenderWanExtensionPtrOutput {
	return i.ToExtenderWanExtensionPtrOutputWithContext(context.Background())
}

func (i *extenderWanExtensionPtrType) ToExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtenderWanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderWanExtensionPtrOutput)
}

type ExtenderWanExtensionOutput struct{ *pulumi.OutputState }

func (ExtenderWanExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderWanExtension)(nil)).Elem()
}

func (o ExtenderWanExtensionOutput) ToExtenderWanExtensionOutput() ExtenderWanExtensionOutput {
	return o
}

func (o ExtenderWanExtensionOutput) ToExtenderWanExtensionOutputWithContext(ctx context.Context) ExtenderWanExtensionOutput {
	return o
}

func (o ExtenderWanExtensionOutput) ToExtenderWanExtensionPtrOutput() ExtenderWanExtensionPtrOutput {
	return o.ToExtenderWanExtensionPtrOutputWithContext(context.Background())
}

func (o ExtenderWanExtensionOutput) ToExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtenderWanExtensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderWanExtension) *ExtenderWanExtension {
		return &v
	}).(ExtenderWanExtensionPtrOutput)
}

// FortiExtender interface name.
func (o ExtenderWanExtensionOutput) Modem1Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderWanExtension) *string { return v.Modem1Extension }).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtenderWanExtensionOutput) Modem2Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderWanExtension) *string { return v.Modem2Extension }).(pulumi.StringPtrOutput)
}

type ExtenderWanExtensionPtrOutput struct{ *pulumi.OutputState }

func (ExtenderWanExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderWanExtension)(nil)).Elem()
}

func (o ExtenderWanExtensionPtrOutput) ToExtenderWanExtensionPtrOutput() ExtenderWanExtensionPtrOutput {
	return o
}

func (o ExtenderWanExtensionPtrOutput) ToExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtenderWanExtensionPtrOutput {
	return o
}

func (o ExtenderWanExtensionPtrOutput) Elem() ExtenderWanExtensionOutput {
	return o.ApplyT(func(v *ExtenderWanExtension) ExtenderWanExtension {
		if v != nil {
			return *v
		}
		var ret ExtenderWanExtension
		return ret
	}).(ExtenderWanExtensionOutput)
}

// FortiExtender interface name.
func (o ExtenderWanExtensionPtrOutput) Modem1Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderWanExtension) *string {
		if v == nil {
			return nil
		}
		return v.Modem1Extension
	}).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtenderWanExtensionPtrOutput) Modem2Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderWanExtension) *string {
		if v == nil {
			return nil
		}
		return v.Modem2Extension
	}).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellular struct {
	// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
	ControllerReport *ExtenderprofileCellularControllerReport `pulumi:"controllerReport"`
	// Dataplan names. The structure of `dataplan` block is documented below.
	Dataplans []ExtenderprofileCellularDataplan `pulumi:"dataplans"`
	// Configuration options for modem 1. The structure of `modem1` block is documented below.
	Modem1 *ExtenderprofileCellularModem1 `pulumi:"modem1"`
	// Configuration options for modem 2. The structure of `modem2` block is documented below.
	Modem2 *ExtenderprofileCellularModem2 `pulumi:"modem2"`
	// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
	SmsNotification *ExtenderprofileCellularSmsNotification `pulumi:"smsNotification"`
}

// ExtenderprofileCellularInput is an input type that accepts ExtenderprofileCellularArgs and ExtenderprofileCellularOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularInput` via:
//
//	ExtenderprofileCellularArgs{...}
type ExtenderprofileCellularInput interface {
	pulumi.Input

	ToExtenderprofileCellularOutput() ExtenderprofileCellularOutput
	ToExtenderprofileCellularOutputWithContext(context.Context) ExtenderprofileCellularOutput
}

type ExtenderprofileCellularArgs struct {
	// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
	ControllerReport ExtenderprofileCellularControllerReportPtrInput `pulumi:"controllerReport"`
	// Dataplan names. The structure of `dataplan` block is documented below.
	Dataplans ExtenderprofileCellularDataplanArrayInput `pulumi:"dataplans"`
	// Configuration options for modem 1. The structure of `modem1` block is documented below.
	Modem1 ExtenderprofileCellularModem1PtrInput `pulumi:"modem1"`
	// Configuration options for modem 2. The structure of `modem2` block is documented below.
	Modem2 ExtenderprofileCellularModem2PtrInput `pulumi:"modem2"`
	// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
	SmsNotification ExtenderprofileCellularSmsNotificationPtrInput `pulumi:"smsNotification"`
}

func (ExtenderprofileCellularArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellular)(nil)).Elem()
}

func (i ExtenderprofileCellularArgs) ToExtenderprofileCellularOutput() ExtenderprofileCellularOutput {
	return i.ToExtenderprofileCellularOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularArgs) ToExtenderprofileCellularOutputWithContext(ctx context.Context) ExtenderprofileCellularOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularOutput)
}

func (i ExtenderprofileCellularArgs) ToExtenderprofileCellularPtrOutput() ExtenderprofileCellularPtrOutput {
	return i.ToExtenderprofileCellularPtrOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularArgs) ToExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularOutput).ToExtenderprofileCellularPtrOutputWithContext(ctx)
}

// ExtenderprofileCellularPtrInput is an input type that accepts ExtenderprofileCellularArgs, ExtenderprofileCellularPtr and ExtenderprofileCellularPtrOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularPtrInput` via:
//
//	        ExtenderprofileCellularArgs{...}
//
//	or:
//
//	        nil
type ExtenderprofileCellularPtrInput interface {
	pulumi.Input

	ToExtenderprofileCellularPtrOutput() ExtenderprofileCellularPtrOutput
	ToExtenderprofileCellularPtrOutputWithContext(context.Context) ExtenderprofileCellularPtrOutput
}

type extenderprofileCellularPtrType ExtenderprofileCellularArgs

func ExtenderprofileCellularPtr(v *ExtenderprofileCellularArgs) ExtenderprofileCellularPtrInput {
	return (*extenderprofileCellularPtrType)(v)
}

func (*extenderprofileCellularPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellular)(nil)).Elem()
}

func (i *extenderprofileCellularPtrType) ToExtenderprofileCellularPtrOutput() ExtenderprofileCellularPtrOutput {
	return i.ToExtenderprofileCellularPtrOutputWithContext(context.Background())
}

func (i *extenderprofileCellularPtrType) ToExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularPtrOutput)
}

type ExtenderprofileCellularOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellular)(nil)).Elem()
}

func (o ExtenderprofileCellularOutput) ToExtenderprofileCellularOutput() ExtenderprofileCellularOutput {
	return o
}

func (o ExtenderprofileCellularOutput) ToExtenderprofileCellularOutputWithContext(ctx context.Context) ExtenderprofileCellularOutput {
	return o
}

func (o ExtenderprofileCellularOutput) ToExtenderprofileCellularPtrOutput() ExtenderprofileCellularPtrOutput {
	return o.ToExtenderprofileCellularPtrOutputWithContext(context.Background())
}

func (o ExtenderprofileCellularOutput) ToExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileCellular) *ExtenderprofileCellular {
		return &v
	}).(ExtenderprofileCellularPtrOutput)
}

// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
func (o ExtenderprofileCellularOutput) ControllerReport() ExtenderprofileCellularControllerReportPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellular) *ExtenderprofileCellularControllerReport { return v.ControllerReport }).(ExtenderprofileCellularControllerReportPtrOutput)
}

// Dataplan names. The structure of `dataplan` block is documented below.
func (o ExtenderprofileCellularOutput) Dataplans() ExtenderprofileCellularDataplanArrayOutput {
	return o.ApplyT(func(v ExtenderprofileCellular) []ExtenderprofileCellularDataplan { return v.Dataplans }).(ExtenderprofileCellularDataplanArrayOutput)
}

// Configuration options for modem 1. The structure of `modem1` block is documented below.
func (o ExtenderprofileCellularOutput) Modem1() ExtenderprofileCellularModem1PtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellular) *ExtenderprofileCellularModem1 { return v.Modem1 }).(ExtenderprofileCellularModem1PtrOutput)
}

// Configuration options for modem 2. The structure of `modem2` block is documented below.
func (o ExtenderprofileCellularOutput) Modem2() ExtenderprofileCellularModem2PtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellular) *ExtenderprofileCellularModem2 { return v.Modem2 }).(ExtenderprofileCellularModem2PtrOutput)
}

// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
func (o ExtenderprofileCellularOutput) SmsNotification() ExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellular) *ExtenderprofileCellularSmsNotification { return v.SmsNotification }).(ExtenderprofileCellularSmsNotificationPtrOutput)
}

type ExtenderprofileCellularPtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellular)(nil)).Elem()
}

func (o ExtenderprofileCellularPtrOutput) ToExtenderprofileCellularPtrOutput() ExtenderprofileCellularPtrOutput {
	return o
}

func (o ExtenderprofileCellularPtrOutput) ToExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularPtrOutput {
	return o
}

func (o ExtenderprofileCellularPtrOutput) Elem() ExtenderprofileCellularOutput {
	return o.ApplyT(func(v *ExtenderprofileCellular) ExtenderprofileCellular {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileCellular
		return ret
	}).(ExtenderprofileCellularOutput)
}

// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
func (o ExtenderprofileCellularPtrOutput) ControllerReport() ExtenderprofileCellularControllerReportPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellular) *ExtenderprofileCellularControllerReport {
		if v == nil {
			return nil
		}
		return v.ControllerReport
	}).(ExtenderprofileCellularControllerReportPtrOutput)
}

// Dataplan names. The structure of `dataplan` block is documented below.
func (o ExtenderprofileCellularPtrOutput) Dataplans() ExtenderprofileCellularDataplanArrayOutput {
	return o.ApplyT(func(v *ExtenderprofileCellular) []ExtenderprofileCellularDataplan {
		if v == nil {
			return nil
		}
		return v.Dataplans
	}).(ExtenderprofileCellularDataplanArrayOutput)
}

// Configuration options for modem 1. The structure of `modem1` block is documented below.
func (o ExtenderprofileCellularPtrOutput) Modem1() ExtenderprofileCellularModem1PtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellular) *ExtenderprofileCellularModem1 {
		if v == nil {
			return nil
		}
		return v.Modem1
	}).(ExtenderprofileCellularModem1PtrOutput)
}

// Configuration options for modem 2. The structure of `modem2` block is documented below.
func (o ExtenderprofileCellularPtrOutput) Modem2() ExtenderprofileCellularModem2PtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellular) *ExtenderprofileCellularModem2 {
		if v == nil {
			return nil
		}
		return v.Modem2
	}).(ExtenderprofileCellularModem2PtrOutput)
}

// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
func (o ExtenderprofileCellularPtrOutput) SmsNotification() ExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellular) *ExtenderprofileCellularSmsNotification {
		if v == nil {
			return nil
		}
		return v.SmsNotification
	}).(ExtenderprofileCellularSmsNotificationPtrOutput)
}

type ExtenderprofileCellularControllerReport struct {
	// Controller report interval.
	Interval *int `pulumi:"interval"`
	// Controller report signal threshold.
	SignalThreshold *int `pulumi:"signalThreshold"`
	// FortiExtender controller report status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ExtenderprofileCellularControllerReportInput is an input type that accepts ExtenderprofileCellularControllerReportArgs and ExtenderprofileCellularControllerReportOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularControllerReportInput` via:
//
//	ExtenderprofileCellularControllerReportArgs{...}
type ExtenderprofileCellularControllerReportInput interface {
	pulumi.Input

	ToExtenderprofileCellularControllerReportOutput() ExtenderprofileCellularControllerReportOutput
	ToExtenderprofileCellularControllerReportOutputWithContext(context.Context) ExtenderprofileCellularControllerReportOutput
}

type ExtenderprofileCellularControllerReportArgs struct {
	// Controller report interval.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Controller report signal threshold.
	SignalThreshold pulumi.IntPtrInput `pulumi:"signalThreshold"`
	// FortiExtender controller report status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExtenderprofileCellularControllerReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (i ExtenderprofileCellularControllerReportArgs) ToExtenderprofileCellularControllerReportOutput() ExtenderprofileCellularControllerReportOutput {
	return i.ToExtenderprofileCellularControllerReportOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularControllerReportArgs) ToExtenderprofileCellularControllerReportOutputWithContext(ctx context.Context) ExtenderprofileCellularControllerReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularControllerReportOutput)
}

func (i ExtenderprofileCellularControllerReportArgs) ToExtenderprofileCellularControllerReportPtrOutput() ExtenderprofileCellularControllerReportPtrOutput {
	return i.ToExtenderprofileCellularControllerReportPtrOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularControllerReportArgs) ToExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularControllerReportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularControllerReportOutput).ToExtenderprofileCellularControllerReportPtrOutputWithContext(ctx)
}

// ExtenderprofileCellularControllerReportPtrInput is an input type that accepts ExtenderprofileCellularControllerReportArgs, ExtenderprofileCellularControllerReportPtr and ExtenderprofileCellularControllerReportPtrOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularControllerReportPtrInput` via:
//
//	        ExtenderprofileCellularControllerReportArgs{...}
//
//	or:
//
//	        nil
type ExtenderprofileCellularControllerReportPtrInput interface {
	pulumi.Input

	ToExtenderprofileCellularControllerReportPtrOutput() ExtenderprofileCellularControllerReportPtrOutput
	ToExtenderprofileCellularControllerReportPtrOutputWithContext(context.Context) ExtenderprofileCellularControllerReportPtrOutput
}

type extenderprofileCellularControllerReportPtrType ExtenderprofileCellularControllerReportArgs

func ExtenderprofileCellularControllerReportPtr(v *ExtenderprofileCellularControllerReportArgs) ExtenderprofileCellularControllerReportPtrInput {
	return (*extenderprofileCellularControllerReportPtrType)(v)
}

func (*extenderprofileCellularControllerReportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (i *extenderprofileCellularControllerReportPtrType) ToExtenderprofileCellularControllerReportPtrOutput() ExtenderprofileCellularControllerReportPtrOutput {
	return i.ToExtenderprofileCellularControllerReportPtrOutputWithContext(context.Background())
}

func (i *extenderprofileCellularControllerReportPtrType) ToExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularControllerReportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularControllerReportPtrOutput)
}

type ExtenderprofileCellularControllerReportOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularControllerReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (o ExtenderprofileCellularControllerReportOutput) ToExtenderprofileCellularControllerReportOutput() ExtenderprofileCellularControllerReportOutput {
	return o
}

func (o ExtenderprofileCellularControllerReportOutput) ToExtenderprofileCellularControllerReportOutputWithContext(ctx context.Context) ExtenderprofileCellularControllerReportOutput {
	return o
}

func (o ExtenderprofileCellularControllerReportOutput) ToExtenderprofileCellularControllerReportPtrOutput() ExtenderprofileCellularControllerReportPtrOutput {
	return o.ToExtenderprofileCellularControllerReportPtrOutputWithContext(context.Background())
}

func (o ExtenderprofileCellularControllerReportOutput) ToExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularControllerReportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileCellularControllerReport) *ExtenderprofileCellularControllerReport {
		return &v
	}).(ExtenderprofileCellularControllerReportPtrOutput)
}

// Controller report interval.
func (o ExtenderprofileCellularControllerReportOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularControllerReport) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Controller report signal threshold.
func (o ExtenderprofileCellularControllerReportOutput) SignalThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularControllerReport) *int { return v.SignalThreshold }).(pulumi.IntPtrOutput)
}

// FortiExtender controller report status. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularControllerReportOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularControllerReport) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularControllerReportPtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularControllerReportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (o ExtenderprofileCellularControllerReportPtrOutput) ToExtenderprofileCellularControllerReportPtrOutput() ExtenderprofileCellularControllerReportPtrOutput {
	return o
}

func (o ExtenderprofileCellularControllerReportPtrOutput) ToExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularControllerReportPtrOutput {
	return o
}

func (o ExtenderprofileCellularControllerReportPtrOutput) Elem() ExtenderprofileCellularControllerReportOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularControllerReport) ExtenderprofileCellularControllerReport {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileCellularControllerReport
		return ret
	}).(ExtenderprofileCellularControllerReportOutput)
}

// Controller report interval.
func (o ExtenderprofileCellularControllerReportPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularControllerReport) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Controller report signal threshold.
func (o ExtenderprofileCellularControllerReportPtrOutput) SignalThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularControllerReport) *int {
		if v == nil {
			return nil
		}
		return v.SignalThreshold
	}).(pulumi.IntPtrOutput)
}

// FortiExtender controller report status. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularControllerReportPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularControllerReport) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularDataplan struct {
	// Dataplan name.
	Name *string `pulumi:"name"`
}

// ExtenderprofileCellularDataplanInput is an input type that accepts ExtenderprofileCellularDataplanArgs and ExtenderprofileCellularDataplanOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularDataplanInput` via:
//
//	ExtenderprofileCellularDataplanArgs{...}
type ExtenderprofileCellularDataplanInput interface {
	pulumi.Input

	ToExtenderprofileCellularDataplanOutput() ExtenderprofileCellularDataplanOutput
	ToExtenderprofileCellularDataplanOutputWithContext(context.Context) ExtenderprofileCellularDataplanOutput
}

type ExtenderprofileCellularDataplanArgs struct {
	// Dataplan name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExtenderprofileCellularDataplanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularDataplan)(nil)).Elem()
}

func (i ExtenderprofileCellularDataplanArgs) ToExtenderprofileCellularDataplanOutput() ExtenderprofileCellularDataplanOutput {
	return i.ToExtenderprofileCellularDataplanOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularDataplanArgs) ToExtenderprofileCellularDataplanOutputWithContext(ctx context.Context) ExtenderprofileCellularDataplanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularDataplanOutput)
}

// ExtenderprofileCellularDataplanArrayInput is an input type that accepts ExtenderprofileCellularDataplanArray and ExtenderprofileCellularDataplanArrayOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularDataplanArrayInput` via:
//
//	ExtenderprofileCellularDataplanArray{ ExtenderprofileCellularDataplanArgs{...} }
type ExtenderprofileCellularDataplanArrayInput interface {
	pulumi.Input

	ToExtenderprofileCellularDataplanArrayOutput() ExtenderprofileCellularDataplanArrayOutput
	ToExtenderprofileCellularDataplanArrayOutputWithContext(context.Context) ExtenderprofileCellularDataplanArrayOutput
}

type ExtenderprofileCellularDataplanArray []ExtenderprofileCellularDataplanInput

func (ExtenderprofileCellularDataplanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtenderprofileCellularDataplan)(nil)).Elem()
}

func (i ExtenderprofileCellularDataplanArray) ToExtenderprofileCellularDataplanArrayOutput() ExtenderprofileCellularDataplanArrayOutput {
	return i.ToExtenderprofileCellularDataplanArrayOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularDataplanArray) ToExtenderprofileCellularDataplanArrayOutputWithContext(ctx context.Context) ExtenderprofileCellularDataplanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularDataplanArrayOutput)
}

type ExtenderprofileCellularDataplanOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularDataplanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularDataplan)(nil)).Elem()
}

func (o ExtenderprofileCellularDataplanOutput) ToExtenderprofileCellularDataplanOutput() ExtenderprofileCellularDataplanOutput {
	return o
}

func (o ExtenderprofileCellularDataplanOutput) ToExtenderprofileCellularDataplanOutputWithContext(ctx context.Context) ExtenderprofileCellularDataplanOutput {
	return o
}

// Dataplan name.
func (o ExtenderprofileCellularDataplanOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularDataplan) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularDataplanArrayOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularDataplanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtenderprofileCellularDataplan)(nil)).Elem()
}

func (o ExtenderprofileCellularDataplanArrayOutput) ToExtenderprofileCellularDataplanArrayOutput() ExtenderprofileCellularDataplanArrayOutput {
	return o
}

func (o ExtenderprofileCellularDataplanArrayOutput) ToExtenderprofileCellularDataplanArrayOutputWithContext(ctx context.Context) ExtenderprofileCellularDataplanArrayOutput {
	return o
}

func (o ExtenderprofileCellularDataplanArrayOutput) Index(i pulumi.IntInput) ExtenderprofileCellularDataplanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtenderprofileCellularDataplan {
		return vs[0].([]ExtenderprofileCellularDataplan)[vs[1].(int)]
	}).(ExtenderprofileCellularDataplanOutput)
}

type ExtenderprofileCellularModem1 struct {
	AutoSwitch       *ExtenderprofileCellularModem1AutoSwitch `pulumi:"autoSwitch"`
	ConnStatus       *int                                     `pulumi:"connStatus"`
	DefaultSim       *string                                  `pulumi:"defaultSim"`
	Gps              *string                                  `pulumi:"gps"`
	PreferredCarrier *string                                  `pulumi:"preferredCarrier"`
	RedundantIntf    *string                                  `pulumi:"redundantIntf"`
	RedundantMode    *string                                  `pulumi:"redundantMode"`
	Sim1Pin          *string                                  `pulumi:"sim1Pin"`
	Sim1PinCode      *string                                  `pulumi:"sim1PinCode"`
	Sim2Pin          *string                                  `pulumi:"sim2Pin"`
	Sim2PinCode      *string                                  `pulumi:"sim2PinCode"`
}

// ExtenderprofileCellularModem1Input is an input type that accepts ExtenderprofileCellularModem1Args and ExtenderprofileCellularModem1Output values.
// You can construct a concrete instance of `ExtenderprofileCellularModem1Input` via:
//
//	ExtenderprofileCellularModem1Args{...}
type ExtenderprofileCellularModem1Input interface {
	pulumi.Input

	ToExtenderprofileCellularModem1Output() ExtenderprofileCellularModem1Output
	ToExtenderprofileCellularModem1OutputWithContext(context.Context) ExtenderprofileCellularModem1Output
}

type ExtenderprofileCellularModem1Args struct {
	AutoSwitch       ExtenderprofileCellularModem1AutoSwitchPtrInput `pulumi:"autoSwitch"`
	ConnStatus       pulumi.IntPtrInput                              `pulumi:"connStatus"`
	DefaultSim       pulumi.StringPtrInput                           `pulumi:"defaultSim"`
	Gps              pulumi.StringPtrInput                           `pulumi:"gps"`
	PreferredCarrier pulumi.StringPtrInput                           `pulumi:"preferredCarrier"`
	RedundantIntf    pulumi.StringPtrInput                           `pulumi:"redundantIntf"`
	RedundantMode    pulumi.StringPtrInput                           `pulumi:"redundantMode"`
	Sim1Pin          pulumi.StringPtrInput                           `pulumi:"sim1Pin"`
	Sim1PinCode      pulumi.StringPtrInput                           `pulumi:"sim1PinCode"`
	Sim2Pin          pulumi.StringPtrInput                           `pulumi:"sim2Pin"`
	Sim2PinCode      pulumi.StringPtrInput                           `pulumi:"sim2PinCode"`
}

func (ExtenderprofileCellularModem1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularModem1)(nil)).Elem()
}

func (i ExtenderprofileCellularModem1Args) ToExtenderprofileCellularModem1Output() ExtenderprofileCellularModem1Output {
	return i.ToExtenderprofileCellularModem1OutputWithContext(context.Background())
}

func (i ExtenderprofileCellularModem1Args) ToExtenderprofileCellularModem1OutputWithContext(ctx context.Context) ExtenderprofileCellularModem1Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem1Output)
}

func (i ExtenderprofileCellularModem1Args) ToExtenderprofileCellularModem1PtrOutput() ExtenderprofileCellularModem1PtrOutput {
	return i.ToExtenderprofileCellularModem1PtrOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularModem1Args) ToExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem1Output).ToExtenderprofileCellularModem1PtrOutputWithContext(ctx)
}

// ExtenderprofileCellularModem1PtrInput is an input type that accepts ExtenderprofileCellularModem1Args, ExtenderprofileCellularModem1Ptr and ExtenderprofileCellularModem1PtrOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularModem1PtrInput` via:
//
//	        ExtenderprofileCellularModem1Args{...}
//
//	or:
//
//	        nil
type ExtenderprofileCellularModem1PtrInput interface {
	pulumi.Input

	ToExtenderprofileCellularModem1PtrOutput() ExtenderprofileCellularModem1PtrOutput
	ToExtenderprofileCellularModem1PtrOutputWithContext(context.Context) ExtenderprofileCellularModem1PtrOutput
}

type extenderprofileCellularModem1PtrType ExtenderprofileCellularModem1Args

func ExtenderprofileCellularModem1Ptr(v *ExtenderprofileCellularModem1Args) ExtenderprofileCellularModem1PtrInput {
	return (*extenderprofileCellularModem1PtrType)(v)
}

func (*extenderprofileCellularModem1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularModem1)(nil)).Elem()
}

func (i *extenderprofileCellularModem1PtrType) ToExtenderprofileCellularModem1PtrOutput() ExtenderprofileCellularModem1PtrOutput {
	return i.ToExtenderprofileCellularModem1PtrOutputWithContext(context.Background())
}

func (i *extenderprofileCellularModem1PtrType) ToExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem1PtrOutput)
}

type ExtenderprofileCellularModem1Output struct{ *pulumi.OutputState }

func (ExtenderprofileCellularModem1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularModem1)(nil)).Elem()
}

func (o ExtenderprofileCellularModem1Output) ToExtenderprofileCellularModem1Output() ExtenderprofileCellularModem1Output {
	return o
}

func (o ExtenderprofileCellularModem1Output) ToExtenderprofileCellularModem1OutputWithContext(ctx context.Context) ExtenderprofileCellularModem1Output {
	return o
}

func (o ExtenderprofileCellularModem1Output) ToExtenderprofileCellularModem1PtrOutput() ExtenderprofileCellularModem1PtrOutput {
	return o.ToExtenderprofileCellularModem1PtrOutputWithContext(context.Background())
}

func (o ExtenderprofileCellularModem1Output) ToExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileCellularModem1) *ExtenderprofileCellularModem1 {
		return &v
	}).(ExtenderprofileCellularModem1PtrOutput)
}

func (o ExtenderprofileCellularModem1Output) AutoSwitch() ExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1) *ExtenderprofileCellularModem1AutoSwitch { return v.AutoSwitch }).(ExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

func (o ExtenderprofileCellularModem1Output) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1) *int { return v.ConnStatus }).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileCellularModem1Output) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1) *string { return v.DefaultSim }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1Output) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1) *string { return v.Gps }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1Output) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1) *string { return v.PreferredCarrier }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1Output) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1) *string { return v.RedundantIntf }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1Output) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1) *string { return v.RedundantMode }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1Output) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1) *string { return v.Sim1Pin }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1Output) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1) *string { return v.Sim1PinCode }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1Output) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1) *string { return v.Sim2Pin }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1Output) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1) *string { return v.Sim2PinCode }).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularModem1PtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularModem1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularModem1)(nil)).Elem()
}

func (o ExtenderprofileCellularModem1PtrOutput) ToExtenderprofileCellularModem1PtrOutput() ExtenderprofileCellularModem1PtrOutput {
	return o
}

func (o ExtenderprofileCellularModem1PtrOutput) ToExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem1PtrOutput {
	return o
}

func (o ExtenderprofileCellularModem1PtrOutput) Elem() ExtenderprofileCellularModem1Output {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) ExtenderprofileCellularModem1 {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileCellularModem1
		return ret
	}).(ExtenderprofileCellularModem1Output)
}

func (o ExtenderprofileCellularModem1PtrOutput) AutoSwitch() ExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) *ExtenderprofileCellularModem1AutoSwitch {
		if v == nil {
			return nil
		}
		return v.AutoSwitch
	}).(ExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

func (o ExtenderprofileCellularModem1PtrOutput) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) *int {
		if v == nil {
			return nil
		}
		return v.ConnStatus
	}).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileCellularModem1PtrOutput) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSim
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1PtrOutput) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Gps
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1PtrOutput) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.PreferredCarrier
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1PtrOutput) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.RedundantIntf
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1PtrOutput) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.RedundantMode
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1PtrOutput) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim1Pin
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1PtrOutput) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim1PinCode
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1PtrOutput) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim2Pin
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem1PtrOutput) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim2PinCode
	}).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularModem1AutoSwitch struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan *string `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect *string `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod *int `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal *string `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack *string `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime *string `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer *int `pulumi:"switchBackTimer"`
}

// ExtenderprofileCellularModem1AutoSwitchInput is an input type that accepts ExtenderprofileCellularModem1AutoSwitchArgs and ExtenderprofileCellularModem1AutoSwitchOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularModem1AutoSwitchInput` via:
//
//	ExtenderprofileCellularModem1AutoSwitchArgs{...}
type ExtenderprofileCellularModem1AutoSwitchInput interface {
	pulumi.Input

	ToExtenderprofileCellularModem1AutoSwitchOutput() ExtenderprofileCellularModem1AutoSwitchOutput
	ToExtenderprofileCellularModem1AutoSwitchOutputWithContext(context.Context) ExtenderprofileCellularModem1AutoSwitchOutput
}

type ExtenderprofileCellularModem1AutoSwitchArgs struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan pulumi.StringPtrInput `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect pulumi.StringPtrInput `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod pulumi.IntPtrInput `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold pulumi.IntPtrInput `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal pulumi.StringPtrInput `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack pulumi.StringPtrInput `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime pulumi.StringPtrInput `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer pulumi.IntPtrInput `pulumi:"switchBackTimer"`
}

func (ExtenderprofileCellularModem1AutoSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (i ExtenderprofileCellularModem1AutoSwitchArgs) ToExtenderprofileCellularModem1AutoSwitchOutput() ExtenderprofileCellularModem1AutoSwitchOutput {
	return i.ToExtenderprofileCellularModem1AutoSwitchOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularModem1AutoSwitchArgs) ToExtenderprofileCellularModem1AutoSwitchOutputWithContext(ctx context.Context) ExtenderprofileCellularModem1AutoSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem1AutoSwitchOutput)
}

func (i ExtenderprofileCellularModem1AutoSwitchArgs) ToExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return i.ToExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularModem1AutoSwitchArgs) ToExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem1AutoSwitchOutput).ToExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx)
}

// ExtenderprofileCellularModem1AutoSwitchPtrInput is an input type that accepts ExtenderprofileCellularModem1AutoSwitchArgs, ExtenderprofileCellularModem1AutoSwitchPtr and ExtenderprofileCellularModem1AutoSwitchPtrOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularModem1AutoSwitchPtrInput` via:
//
//	        ExtenderprofileCellularModem1AutoSwitchArgs{...}
//
//	or:
//
//	        nil
type ExtenderprofileCellularModem1AutoSwitchPtrInput interface {
	pulumi.Input

	ToExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtenderprofileCellularModem1AutoSwitchPtrOutput
	ToExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Context) ExtenderprofileCellularModem1AutoSwitchPtrOutput
}

type extenderprofileCellularModem1AutoSwitchPtrType ExtenderprofileCellularModem1AutoSwitchArgs

func ExtenderprofileCellularModem1AutoSwitchPtr(v *ExtenderprofileCellularModem1AutoSwitchArgs) ExtenderprofileCellularModem1AutoSwitchPtrInput {
	return (*extenderprofileCellularModem1AutoSwitchPtrType)(v)
}

func (*extenderprofileCellularModem1AutoSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (i *extenderprofileCellularModem1AutoSwitchPtrType) ToExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return i.ToExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (i *extenderprofileCellularModem1AutoSwitchPtrType) ToExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

type ExtenderprofileCellularModem1AutoSwitchOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularModem1AutoSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (o ExtenderprofileCellularModem1AutoSwitchOutput) ToExtenderprofileCellularModem1AutoSwitchOutput() ExtenderprofileCellularModem1AutoSwitchOutput {
	return o
}

func (o ExtenderprofileCellularModem1AutoSwitchOutput) ToExtenderprofileCellularModem1AutoSwitchOutputWithContext(ctx context.Context) ExtenderprofileCellularModem1AutoSwitchOutput {
	return o
}

func (o ExtenderprofileCellularModem1AutoSwitchOutput) ToExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ToExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (o ExtenderprofileCellularModem1AutoSwitchOutput) ToExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileCellularModem1AutoSwitch) *ExtenderprofileCellularModem1AutoSwitch {
		return &v
	}).(ExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem1AutoSwitchOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1AutoSwitch) *string { return v.Dataplan }).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem1AutoSwitchOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1AutoSwitch) *string { return v.Disconnect }).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtenderprofileCellularModem1AutoSwitchOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1AutoSwitch) *int { return v.DisconnectPeriod }).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtenderprofileCellularModem1AutoSwitchOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1AutoSwitch) *int { return v.DisconnectThreshold }).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem1AutoSwitchOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1AutoSwitch) *string { return v.Signal }).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtenderprofileCellularModem1AutoSwitchOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1AutoSwitch) *string { return v.SwitchBack }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtenderprofileCellularModem1AutoSwitchOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1AutoSwitch) *string { return v.SwitchBackTime }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtenderprofileCellularModem1AutoSwitchOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem1AutoSwitch) *int { return v.SwitchBackTimer }).(pulumi.IntPtrOutput)
}

type ExtenderprofileCellularModem1AutoSwitchPtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularModem1AutoSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (o ExtenderprofileCellularModem1AutoSwitchPtrOutput) ToExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o
}

func (o ExtenderprofileCellularModem1AutoSwitchPtrOutput) ToExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o
}

func (o ExtenderprofileCellularModem1AutoSwitchPtrOutput) Elem() ExtenderprofileCellularModem1AutoSwitchOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1AutoSwitch) ExtenderprofileCellularModem1AutoSwitch {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileCellularModem1AutoSwitch
		return ret
	}).(ExtenderprofileCellularModem1AutoSwitchOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem1AutoSwitchPtrOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Dataplan
	}).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem1AutoSwitchPtrOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Disconnect
	}).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtenderprofileCellularModem1AutoSwitchPtrOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectPeriod
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtenderprofileCellularModem1AutoSwitchPtrOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectThreshold
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem1AutoSwitchPtrOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtenderprofileCellularModem1AutoSwitchPtrOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBack
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtenderprofileCellularModem1AutoSwitchPtrOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBackTime
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtenderprofileCellularModem1AutoSwitchPtrOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.SwitchBackTimer
	}).(pulumi.IntPtrOutput)
}

type ExtenderprofileCellularModem2 struct {
	AutoSwitch       *ExtenderprofileCellularModem2AutoSwitch `pulumi:"autoSwitch"`
	ConnStatus       *int                                     `pulumi:"connStatus"`
	DefaultSim       *string                                  `pulumi:"defaultSim"`
	Gps              *string                                  `pulumi:"gps"`
	PreferredCarrier *string                                  `pulumi:"preferredCarrier"`
	RedundantIntf    *string                                  `pulumi:"redundantIntf"`
	RedundantMode    *string                                  `pulumi:"redundantMode"`
	Sim1Pin          *string                                  `pulumi:"sim1Pin"`
	Sim1PinCode      *string                                  `pulumi:"sim1PinCode"`
	Sim2Pin          *string                                  `pulumi:"sim2Pin"`
	Sim2PinCode      *string                                  `pulumi:"sim2PinCode"`
}

// ExtenderprofileCellularModem2Input is an input type that accepts ExtenderprofileCellularModem2Args and ExtenderprofileCellularModem2Output values.
// You can construct a concrete instance of `ExtenderprofileCellularModem2Input` via:
//
//	ExtenderprofileCellularModem2Args{...}
type ExtenderprofileCellularModem2Input interface {
	pulumi.Input

	ToExtenderprofileCellularModem2Output() ExtenderprofileCellularModem2Output
	ToExtenderprofileCellularModem2OutputWithContext(context.Context) ExtenderprofileCellularModem2Output
}

type ExtenderprofileCellularModem2Args struct {
	AutoSwitch       ExtenderprofileCellularModem2AutoSwitchPtrInput `pulumi:"autoSwitch"`
	ConnStatus       pulumi.IntPtrInput                              `pulumi:"connStatus"`
	DefaultSim       pulumi.StringPtrInput                           `pulumi:"defaultSim"`
	Gps              pulumi.StringPtrInput                           `pulumi:"gps"`
	PreferredCarrier pulumi.StringPtrInput                           `pulumi:"preferredCarrier"`
	RedundantIntf    pulumi.StringPtrInput                           `pulumi:"redundantIntf"`
	RedundantMode    pulumi.StringPtrInput                           `pulumi:"redundantMode"`
	Sim1Pin          pulumi.StringPtrInput                           `pulumi:"sim1Pin"`
	Sim1PinCode      pulumi.StringPtrInput                           `pulumi:"sim1PinCode"`
	Sim2Pin          pulumi.StringPtrInput                           `pulumi:"sim2Pin"`
	Sim2PinCode      pulumi.StringPtrInput                           `pulumi:"sim2PinCode"`
}

func (ExtenderprofileCellularModem2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularModem2)(nil)).Elem()
}

func (i ExtenderprofileCellularModem2Args) ToExtenderprofileCellularModem2Output() ExtenderprofileCellularModem2Output {
	return i.ToExtenderprofileCellularModem2OutputWithContext(context.Background())
}

func (i ExtenderprofileCellularModem2Args) ToExtenderprofileCellularModem2OutputWithContext(ctx context.Context) ExtenderprofileCellularModem2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem2Output)
}

func (i ExtenderprofileCellularModem2Args) ToExtenderprofileCellularModem2PtrOutput() ExtenderprofileCellularModem2PtrOutput {
	return i.ToExtenderprofileCellularModem2PtrOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularModem2Args) ToExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem2Output).ToExtenderprofileCellularModem2PtrOutputWithContext(ctx)
}

// ExtenderprofileCellularModem2PtrInput is an input type that accepts ExtenderprofileCellularModem2Args, ExtenderprofileCellularModem2Ptr and ExtenderprofileCellularModem2PtrOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularModem2PtrInput` via:
//
//	        ExtenderprofileCellularModem2Args{...}
//
//	or:
//
//	        nil
type ExtenderprofileCellularModem2PtrInput interface {
	pulumi.Input

	ToExtenderprofileCellularModem2PtrOutput() ExtenderprofileCellularModem2PtrOutput
	ToExtenderprofileCellularModem2PtrOutputWithContext(context.Context) ExtenderprofileCellularModem2PtrOutput
}

type extenderprofileCellularModem2PtrType ExtenderprofileCellularModem2Args

func ExtenderprofileCellularModem2Ptr(v *ExtenderprofileCellularModem2Args) ExtenderprofileCellularModem2PtrInput {
	return (*extenderprofileCellularModem2PtrType)(v)
}

func (*extenderprofileCellularModem2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularModem2)(nil)).Elem()
}

func (i *extenderprofileCellularModem2PtrType) ToExtenderprofileCellularModem2PtrOutput() ExtenderprofileCellularModem2PtrOutput {
	return i.ToExtenderprofileCellularModem2PtrOutputWithContext(context.Background())
}

func (i *extenderprofileCellularModem2PtrType) ToExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem2PtrOutput)
}

type ExtenderprofileCellularModem2Output struct{ *pulumi.OutputState }

func (ExtenderprofileCellularModem2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularModem2)(nil)).Elem()
}

func (o ExtenderprofileCellularModem2Output) ToExtenderprofileCellularModem2Output() ExtenderprofileCellularModem2Output {
	return o
}

func (o ExtenderprofileCellularModem2Output) ToExtenderprofileCellularModem2OutputWithContext(ctx context.Context) ExtenderprofileCellularModem2Output {
	return o
}

func (o ExtenderprofileCellularModem2Output) ToExtenderprofileCellularModem2PtrOutput() ExtenderprofileCellularModem2PtrOutput {
	return o.ToExtenderprofileCellularModem2PtrOutputWithContext(context.Background())
}

func (o ExtenderprofileCellularModem2Output) ToExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileCellularModem2) *ExtenderprofileCellularModem2 {
		return &v
	}).(ExtenderprofileCellularModem2PtrOutput)
}

func (o ExtenderprofileCellularModem2Output) AutoSwitch() ExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2) *ExtenderprofileCellularModem2AutoSwitch { return v.AutoSwitch }).(ExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

func (o ExtenderprofileCellularModem2Output) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2) *int { return v.ConnStatus }).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileCellularModem2Output) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2) *string { return v.DefaultSim }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2Output) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2) *string { return v.Gps }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2Output) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2) *string { return v.PreferredCarrier }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2Output) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2) *string { return v.RedundantIntf }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2Output) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2) *string { return v.RedundantMode }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2Output) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2) *string { return v.Sim1Pin }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2Output) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2) *string { return v.Sim1PinCode }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2Output) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2) *string { return v.Sim2Pin }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2Output) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2) *string { return v.Sim2PinCode }).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularModem2PtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularModem2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularModem2)(nil)).Elem()
}

func (o ExtenderprofileCellularModem2PtrOutput) ToExtenderprofileCellularModem2PtrOutput() ExtenderprofileCellularModem2PtrOutput {
	return o
}

func (o ExtenderprofileCellularModem2PtrOutput) ToExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem2PtrOutput {
	return o
}

func (o ExtenderprofileCellularModem2PtrOutput) Elem() ExtenderprofileCellularModem2Output {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) ExtenderprofileCellularModem2 {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileCellularModem2
		return ret
	}).(ExtenderprofileCellularModem2Output)
}

func (o ExtenderprofileCellularModem2PtrOutput) AutoSwitch() ExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) *ExtenderprofileCellularModem2AutoSwitch {
		if v == nil {
			return nil
		}
		return v.AutoSwitch
	}).(ExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

func (o ExtenderprofileCellularModem2PtrOutput) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) *int {
		if v == nil {
			return nil
		}
		return v.ConnStatus
	}).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileCellularModem2PtrOutput) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSim
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2PtrOutput) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Gps
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2PtrOutput) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.PreferredCarrier
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2PtrOutput) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.RedundantIntf
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2PtrOutput) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.RedundantMode
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2PtrOutput) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim1Pin
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2PtrOutput) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim1PinCode
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2PtrOutput) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim2Pin
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileCellularModem2PtrOutput) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim2PinCode
	}).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularModem2AutoSwitch struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan *string `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect *string `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod *int `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal *string `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack *string `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime *string `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer *int `pulumi:"switchBackTimer"`
}

// ExtenderprofileCellularModem2AutoSwitchInput is an input type that accepts ExtenderprofileCellularModem2AutoSwitchArgs and ExtenderprofileCellularModem2AutoSwitchOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularModem2AutoSwitchInput` via:
//
//	ExtenderprofileCellularModem2AutoSwitchArgs{...}
type ExtenderprofileCellularModem2AutoSwitchInput interface {
	pulumi.Input

	ToExtenderprofileCellularModem2AutoSwitchOutput() ExtenderprofileCellularModem2AutoSwitchOutput
	ToExtenderprofileCellularModem2AutoSwitchOutputWithContext(context.Context) ExtenderprofileCellularModem2AutoSwitchOutput
}

type ExtenderprofileCellularModem2AutoSwitchArgs struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan pulumi.StringPtrInput `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect pulumi.StringPtrInput `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod pulumi.IntPtrInput `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold pulumi.IntPtrInput `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal pulumi.StringPtrInput `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack pulumi.StringPtrInput `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime pulumi.StringPtrInput `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer pulumi.IntPtrInput `pulumi:"switchBackTimer"`
}

func (ExtenderprofileCellularModem2AutoSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (i ExtenderprofileCellularModem2AutoSwitchArgs) ToExtenderprofileCellularModem2AutoSwitchOutput() ExtenderprofileCellularModem2AutoSwitchOutput {
	return i.ToExtenderprofileCellularModem2AutoSwitchOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularModem2AutoSwitchArgs) ToExtenderprofileCellularModem2AutoSwitchOutputWithContext(ctx context.Context) ExtenderprofileCellularModem2AutoSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem2AutoSwitchOutput)
}

func (i ExtenderprofileCellularModem2AutoSwitchArgs) ToExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return i.ToExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularModem2AutoSwitchArgs) ToExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem2AutoSwitchOutput).ToExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx)
}

// ExtenderprofileCellularModem2AutoSwitchPtrInput is an input type that accepts ExtenderprofileCellularModem2AutoSwitchArgs, ExtenderprofileCellularModem2AutoSwitchPtr and ExtenderprofileCellularModem2AutoSwitchPtrOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularModem2AutoSwitchPtrInput` via:
//
//	        ExtenderprofileCellularModem2AutoSwitchArgs{...}
//
//	or:
//
//	        nil
type ExtenderprofileCellularModem2AutoSwitchPtrInput interface {
	pulumi.Input

	ToExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtenderprofileCellularModem2AutoSwitchPtrOutput
	ToExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Context) ExtenderprofileCellularModem2AutoSwitchPtrOutput
}

type extenderprofileCellularModem2AutoSwitchPtrType ExtenderprofileCellularModem2AutoSwitchArgs

func ExtenderprofileCellularModem2AutoSwitchPtr(v *ExtenderprofileCellularModem2AutoSwitchArgs) ExtenderprofileCellularModem2AutoSwitchPtrInput {
	return (*extenderprofileCellularModem2AutoSwitchPtrType)(v)
}

func (*extenderprofileCellularModem2AutoSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (i *extenderprofileCellularModem2AutoSwitchPtrType) ToExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return i.ToExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (i *extenderprofileCellularModem2AutoSwitchPtrType) ToExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

type ExtenderprofileCellularModem2AutoSwitchOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularModem2AutoSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (o ExtenderprofileCellularModem2AutoSwitchOutput) ToExtenderprofileCellularModem2AutoSwitchOutput() ExtenderprofileCellularModem2AutoSwitchOutput {
	return o
}

func (o ExtenderprofileCellularModem2AutoSwitchOutput) ToExtenderprofileCellularModem2AutoSwitchOutputWithContext(ctx context.Context) ExtenderprofileCellularModem2AutoSwitchOutput {
	return o
}

func (o ExtenderprofileCellularModem2AutoSwitchOutput) ToExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ToExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (o ExtenderprofileCellularModem2AutoSwitchOutput) ToExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileCellularModem2AutoSwitch) *ExtenderprofileCellularModem2AutoSwitch {
		return &v
	}).(ExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem2AutoSwitchOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2AutoSwitch) *string { return v.Dataplan }).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem2AutoSwitchOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2AutoSwitch) *string { return v.Disconnect }).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtenderprofileCellularModem2AutoSwitchOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2AutoSwitch) *int { return v.DisconnectPeriod }).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtenderprofileCellularModem2AutoSwitchOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2AutoSwitch) *int { return v.DisconnectThreshold }).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem2AutoSwitchOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2AutoSwitch) *string { return v.Signal }).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtenderprofileCellularModem2AutoSwitchOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2AutoSwitch) *string { return v.SwitchBack }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtenderprofileCellularModem2AutoSwitchOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2AutoSwitch) *string { return v.SwitchBackTime }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtenderprofileCellularModem2AutoSwitchOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularModem2AutoSwitch) *int { return v.SwitchBackTimer }).(pulumi.IntPtrOutput)
}

type ExtenderprofileCellularModem2AutoSwitchPtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularModem2AutoSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (o ExtenderprofileCellularModem2AutoSwitchPtrOutput) ToExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o
}

func (o ExtenderprofileCellularModem2AutoSwitchPtrOutput) ToExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o
}

func (o ExtenderprofileCellularModem2AutoSwitchPtrOutput) Elem() ExtenderprofileCellularModem2AutoSwitchOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2AutoSwitch) ExtenderprofileCellularModem2AutoSwitch {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileCellularModem2AutoSwitch
		return ret
	}).(ExtenderprofileCellularModem2AutoSwitchOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem2AutoSwitchPtrOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Dataplan
	}).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem2AutoSwitchPtrOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Disconnect
	}).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtenderprofileCellularModem2AutoSwitchPtrOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectPeriod
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtenderprofileCellularModem2AutoSwitchPtrOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectThreshold
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularModem2AutoSwitchPtrOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtenderprofileCellularModem2AutoSwitchPtrOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBack
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtenderprofileCellularModem2AutoSwitchPtrOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBackTime
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtenderprofileCellularModem2AutoSwitchPtrOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.SwitchBackTimer
	}).(pulumi.IntPtrOutput)
}

type ExtenderprofileCellularSmsNotification struct {
	// SMS alert list. The structure of `alert` block is documented below.
	Alert *ExtenderprofileCellularSmsNotificationAlert `pulumi:"alert"`
	// SMS notification receiver list. The structure of `receiver` block is documented below.
	Receivers []ExtenderprofileCellularSmsNotificationReceiver `pulumi:"receivers"`
	// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ExtenderprofileCellularSmsNotificationInput is an input type that accepts ExtenderprofileCellularSmsNotificationArgs and ExtenderprofileCellularSmsNotificationOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularSmsNotificationInput` via:
//
//	ExtenderprofileCellularSmsNotificationArgs{...}
type ExtenderprofileCellularSmsNotificationInput interface {
	pulumi.Input

	ToExtenderprofileCellularSmsNotificationOutput() ExtenderprofileCellularSmsNotificationOutput
	ToExtenderprofileCellularSmsNotificationOutputWithContext(context.Context) ExtenderprofileCellularSmsNotificationOutput
}

type ExtenderprofileCellularSmsNotificationArgs struct {
	// SMS alert list. The structure of `alert` block is documented below.
	Alert ExtenderprofileCellularSmsNotificationAlertPtrInput `pulumi:"alert"`
	// SMS notification receiver list. The structure of `receiver` block is documented below.
	Receivers ExtenderprofileCellularSmsNotificationReceiverArrayInput `pulumi:"receivers"`
	// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExtenderprofileCellularSmsNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (i ExtenderprofileCellularSmsNotificationArgs) ToExtenderprofileCellularSmsNotificationOutput() ExtenderprofileCellularSmsNotificationOutput {
	return i.ToExtenderprofileCellularSmsNotificationOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularSmsNotificationArgs) ToExtenderprofileCellularSmsNotificationOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularSmsNotificationOutput)
}

func (i ExtenderprofileCellularSmsNotificationArgs) ToExtenderprofileCellularSmsNotificationPtrOutput() ExtenderprofileCellularSmsNotificationPtrOutput {
	return i.ToExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularSmsNotificationArgs) ToExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularSmsNotificationOutput).ToExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx)
}

// ExtenderprofileCellularSmsNotificationPtrInput is an input type that accepts ExtenderprofileCellularSmsNotificationArgs, ExtenderprofileCellularSmsNotificationPtr and ExtenderprofileCellularSmsNotificationPtrOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularSmsNotificationPtrInput` via:
//
//	        ExtenderprofileCellularSmsNotificationArgs{...}
//
//	or:
//
//	        nil
type ExtenderprofileCellularSmsNotificationPtrInput interface {
	pulumi.Input

	ToExtenderprofileCellularSmsNotificationPtrOutput() ExtenderprofileCellularSmsNotificationPtrOutput
	ToExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Context) ExtenderprofileCellularSmsNotificationPtrOutput
}

type extenderprofileCellularSmsNotificationPtrType ExtenderprofileCellularSmsNotificationArgs

func ExtenderprofileCellularSmsNotificationPtr(v *ExtenderprofileCellularSmsNotificationArgs) ExtenderprofileCellularSmsNotificationPtrInput {
	return (*extenderprofileCellularSmsNotificationPtrType)(v)
}

func (*extenderprofileCellularSmsNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (i *extenderprofileCellularSmsNotificationPtrType) ToExtenderprofileCellularSmsNotificationPtrOutput() ExtenderprofileCellularSmsNotificationPtrOutput {
	return i.ToExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Background())
}

func (i *extenderprofileCellularSmsNotificationPtrType) ToExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularSmsNotificationPtrOutput)
}

type ExtenderprofileCellularSmsNotificationOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularSmsNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (o ExtenderprofileCellularSmsNotificationOutput) ToExtenderprofileCellularSmsNotificationOutput() ExtenderprofileCellularSmsNotificationOutput {
	return o
}

func (o ExtenderprofileCellularSmsNotificationOutput) ToExtenderprofileCellularSmsNotificationOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationOutput {
	return o
}

func (o ExtenderprofileCellularSmsNotificationOutput) ToExtenderprofileCellularSmsNotificationPtrOutput() ExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ToExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Background())
}

func (o ExtenderprofileCellularSmsNotificationOutput) ToExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileCellularSmsNotification) *ExtenderprofileCellularSmsNotification {
		return &v
	}).(ExtenderprofileCellularSmsNotificationPtrOutput)
}

// SMS alert list. The structure of `alert` block is documented below.
func (o ExtenderprofileCellularSmsNotificationOutput) Alert() ExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotification) *ExtenderprofileCellularSmsNotificationAlert {
		return v.Alert
	}).(ExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

// SMS notification receiver list. The structure of `receiver` block is documented below.
func (o ExtenderprofileCellularSmsNotificationOutput) Receivers() ExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotification) []ExtenderprofileCellularSmsNotificationReceiver {
		return v.Receivers
	}).(ExtenderprofileCellularSmsNotificationReceiverArrayOutput)
}

// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularSmsNotificationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotification) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularSmsNotificationPtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularSmsNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (o ExtenderprofileCellularSmsNotificationPtrOutput) ToExtenderprofileCellularSmsNotificationPtrOutput() ExtenderprofileCellularSmsNotificationPtrOutput {
	return o
}

func (o ExtenderprofileCellularSmsNotificationPtrOutput) ToExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationPtrOutput {
	return o
}

func (o ExtenderprofileCellularSmsNotificationPtrOutput) Elem() ExtenderprofileCellularSmsNotificationOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotification) ExtenderprofileCellularSmsNotification {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileCellularSmsNotification
		return ret
	}).(ExtenderprofileCellularSmsNotificationOutput)
}

// SMS alert list. The structure of `alert` block is documented below.
func (o ExtenderprofileCellularSmsNotificationPtrOutput) Alert() ExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotification) *ExtenderprofileCellularSmsNotificationAlert {
		if v == nil {
			return nil
		}
		return v.Alert
	}).(ExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

// SMS notification receiver list. The structure of `receiver` block is documented below.
func (o ExtenderprofileCellularSmsNotificationPtrOutput) Receivers() ExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotification) []ExtenderprofileCellularSmsNotificationReceiver {
		if v == nil {
			return nil
		}
		return v.Receivers
	}).(ExtenderprofileCellularSmsNotificationReceiverArrayOutput)
}

// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularSmsNotificationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotification) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularSmsNotificationAlert struct {
	// Display string when data exhausted.
	DataExhausted *string `pulumi:"dataExhausted"`
	// Display string when FortiGate backup mode switched.
	FgtBackupModeSwitch *string `pulumi:"fgtBackupModeSwitch"`
	// Display string when signal strength is low.
	LowSignalStrength *string `pulumi:"lowSignalStrength"`
	// Display string when mode is switched.
	ModeSwitch *string `pulumi:"modeSwitch"`
	// Display string when falling back to a previous OS image.
	OsImageFallback *string `pulumi:"osImageFallback"`
	// Display string when session disconnected.
	SessionDisconnect *string `pulumi:"sessionDisconnect"`
	// Display string when system rebooted.
	SystemReboot *string `pulumi:"systemReboot"`
}

// ExtenderprofileCellularSmsNotificationAlertInput is an input type that accepts ExtenderprofileCellularSmsNotificationAlertArgs and ExtenderprofileCellularSmsNotificationAlertOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularSmsNotificationAlertInput` via:
//
//	ExtenderprofileCellularSmsNotificationAlertArgs{...}
type ExtenderprofileCellularSmsNotificationAlertInput interface {
	pulumi.Input

	ToExtenderprofileCellularSmsNotificationAlertOutput() ExtenderprofileCellularSmsNotificationAlertOutput
	ToExtenderprofileCellularSmsNotificationAlertOutputWithContext(context.Context) ExtenderprofileCellularSmsNotificationAlertOutput
}

type ExtenderprofileCellularSmsNotificationAlertArgs struct {
	// Display string when data exhausted.
	DataExhausted pulumi.StringPtrInput `pulumi:"dataExhausted"`
	// Display string when FortiGate backup mode switched.
	FgtBackupModeSwitch pulumi.StringPtrInput `pulumi:"fgtBackupModeSwitch"`
	// Display string when signal strength is low.
	LowSignalStrength pulumi.StringPtrInput `pulumi:"lowSignalStrength"`
	// Display string when mode is switched.
	ModeSwitch pulumi.StringPtrInput `pulumi:"modeSwitch"`
	// Display string when falling back to a previous OS image.
	OsImageFallback pulumi.StringPtrInput `pulumi:"osImageFallback"`
	// Display string when session disconnected.
	SessionDisconnect pulumi.StringPtrInput `pulumi:"sessionDisconnect"`
	// Display string when system rebooted.
	SystemReboot pulumi.StringPtrInput `pulumi:"systemReboot"`
}

func (ExtenderprofileCellularSmsNotificationAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (i ExtenderprofileCellularSmsNotificationAlertArgs) ToExtenderprofileCellularSmsNotificationAlertOutput() ExtenderprofileCellularSmsNotificationAlertOutput {
	return i.ToExtenderprofileCellularSmsNotificationAlertOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularSmsNotificationAlertArgs) ToExtenderprofileCellularSmsNotificationAlertOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularSmsNotificationAlertOutput)
}

func (i ExtenderprofileCellularSmsNotificationAlertArgs) ToExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return i.ToExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularSmsNotificationAlertArgs) ToExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularSmsNotificationAlertOutput).ToExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx)
}

// ExtenderprofileCellularSmsNotificationAlertPtrInput is an input type that accepts ExtenderprofileCellularSmsNotificationAlertArgs, ExtenderprofileCellularSmsNotificationAlertPtr and ExtenderprofileCellularSmsNotificationAlertPtrOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularSmsNotificationAlertPtrInput` via:
//
//	        ExtenderprofileCellularSmsNotificationAlertArgs{...}
//
//	or:
//
//	        nil
type ExtenderprofileCellularSmsNotificationAlertPtrInput interface {
	pulumi.Input

	ToExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtenderprofileCellularSmsNotificationAlertPtrOutput
	ToExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Context) ExtenderprofileCellularSmsNotificationAlertPtrOutput
}

type extenderprofileCellularSmsNotificationAlertPtrType ExtenderprofileCellularSmsNotificationAlertArgs

func ExtenderprofileCellularSmsNotificationAlertPtr(v *ExtenderprofileCellularSmsNotificationAlertArgs) ExtenderprofileCellularSmsNotificationAlertPtrInput {
	return (*extenderprofileCellularSmsNotificationAlertPtrType)(v)
}

func (*extenderprofileCellularSmsNotificationAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (i *extenderprofileCellularSmsNotificationAlertPtrType) ToExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return i.ToExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Background())
}

func (i *extenderprofileCellularSmsNotificationAlertPtrType) ToExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

type ExtenderprofileCellularSmsNotificationAlertOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularSmsNotificationAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (o ExtenderprofileCellularSmsNotificationAlertOutput) ToExtenderprofileCellularSmsNotificationAlertOutput() ExtenderprofileCellularSmsNotificationAlertOutput {
	return o
}

func (o ExtenderprofileCellularSmsNotificationAlertOutput) ToExtenderprofileCellularSmsNotificationAlertOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationAlertOutput {
	return o
}

func (o ExtenderprofileCellularSmsNotificationAlertOutput) ToExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ToExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Background())
}

func (o ExtenderprofileCellularSmsNotificationAlertOutput) ToExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileCellularSmsNotificationAlert) *ExtenderprofileCellularSmsNotificationAlert {
		return &v
	}).(ExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

// Display string when data exhausted.
func (o ExtenderprofileCellularSmsNotificationAlertOutput) DataExhausted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotificationAlert) *string { return v.DataExhausted }).(pulumi.StringPtrOutput)
}

// Display string when FortiGate backup mode switched.
func (o ExtenderprofileCellularSmsNotificationAlertOutput) FgtBackupModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotificationAlert) *string { return v.FgtBackupModeSwitch }).(pulumi.StringPtrOutput)
}

// Display string when signal strength is low.
func (o ExtenderprofileCellularSmsNotificationAlertOutput) LowSignalStrength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotificationAlert) *string { return v.LowSignalStrength }).(pulumi.StringPtrOutput)
}

// Display string when mode is switched.
func (o ExtenderprofileCellularSmsNotificationAlertOutput) ModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotificationAlert) *string { return v.ModeSwitch }).(pulumi.StringPtrOutput)
}

// Display string when falling back to a previous OS image.
func (o ExtenderprofileCellularSmsNotificationAlertOutput) OsImageFallback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotificationAlert) *string { return v.OsImageFallback }).(pulumi.StringPtrOutput)
}

// Display string when session disconnected.
func (o ExtenderprofileCellularSmsNotificationAlertOutput) SessionDisconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotificationAlert) *string { return v.SessionDisconnect }).(pulumi.StringPtrOutput)
}

// Display string when system rebooted.
func (o ExtenderprofileCellularSmsNotificationAlertOutput) SystemReboot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotificationAlert) *string { return v.SystemReboot }).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularSmsNotificationAlertPtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularSmsNotificationAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (o ExtenderprofileCellularSmsNotificationAlertPtrOutput) ToExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o
}

func (o ExtenderprofileCellularSmsNotificationAlertPtrOutput) ToExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o
}

func (o ExtenderprofileCellularSmsNotificationAlertPtrOutput) Elem() ExtenderprofileCellularSmsNotificationAlertOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotificationAlert) ExtenderprofileCellularSmsNotificationAlert {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileCellularSmsNotificationAlert
		return ret
	}).(ExtenderprofileCellularSmsNotificationAlertOutput)
}

// Display string when data exhausted.
func (o ExtenderprofileCellularSmsNotificationAlertPtrOutput) DataExhausted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.DataExhausted
	}).(pulumi.StringPtrOutput)
}

// Display string when FortiGate backup mode switched.
func (o ExtenderprofileCellularSmsNotificationAlertPtrOutput) FgtBackupModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.FgtBackupModeSwitch
	}).(pulumi.StringPtrOutput)
}

// Display string when signal strength is low.
func (o ExtenderprofileCellularSmsNotificationAlertPtrOutput) LowSignalStrength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.LowSignalStrength
	}).(pulumi.StringPtrOutput)
}

// Display string when mode is switched.
func (o ExtenderprofileCellularSmsNotificationAlertPtrOutput) ModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.ModeSwitch
	}).(pulumi.StringPtrOutput)
}

// Display string when falling back to a previous OS image.
func (o ExtenderprofileCellularSmsNotificationAlertPtrOutput) OsImageFallback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.OsImageFallback
	}).(pulumi.StringPtrOutput)
}

// Display string when session disconnected.
func (o ExtenderprofileCellularSmsNotificationAlertPtrOutput) SessionDisconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.SessionDisconnect
	}).(pulumi.StringPtrOutput)
}

// Display string when system rebooted.
func (o ExtenderprofileCellularSmsNotificationAlertPtrOutput) SystemReboot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.SystemReboot
	}).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularSmsNotificationReceiver struct {
	// Alert multi-options. Valid values: `system-reboot`, `data-exhausted`, `session-disconnect`, `low-signal-strength`, `mode-switch`, `os-image-fallback`, `fgt-backup-mode-switch`.
	//
	// The `modem1` block supports:
	Alert *string `pulumi:"alert"`
	// FortiExtender SMS notification receiver name.
	Name *string `pulumi:"name"`
	// Receiver phone number. Format: [+][country code][area code][local phone number]. For example, +16501234567.
	PhoneNumber *string `pulumi:"phoneNumber"`
	// SMS notification receiver status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ExtenderprofileCellularSmsNotificationReceiverInput is an input type that accepts ExtenderprofileCellularSmsNotificationReceiverArgs and ExtenderprofileCellularSmsNotificationReceiverOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularSmsNotificationReceiverInput` via:
//
//	ExtenderprofileCellularSmsNotificationReceiverArgs{...}
type ExtenderprofileCellularSmsNotificationReceiverInput interface {
	pulumi.Input

	ToExtenderprofileCellularSmsNotificationReceiverOutput() ExtenderprofileCellularSmsNotificationReceiverOutput
	ToExtenderprofileCellularSmsNotificationReceiverOutputWithContext(context.Context) ExtenderprofileCellularSmsNotificationReceiverOutput
}

type ExtenderprofileCellularSmsNotificationReceiverArgs struct {
	// Alert multi-options. Valid values: `system-reboot`, `data-exhausted`, `session-disconnect`, `low-signal-strength`, `mode-switch`, `os-image-fallback`, `fgt-backup-mode-switch`.
	//
	// The `modem1` block supports:
	Alert pulumi.StringPtrInput `pulumi:"alert"`
	// FortiExtender SMS notification receiver name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Receiver phone number. Format: [+][country code][area code][local phone number]. For example, +16501234567.
	PhoneNumber pulumi.StringPtrInput `pulumi:"phoneNumber"`
	// SMS notification receiver status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExtenderprofileCellularSmsNotificationReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (i ExtenderprofileCellularSmsNotificationReceiverArgs) ToExtenderprofileCellularSmsNotificationReceiverOutput() ExtenderprofileCellularSmsNotificationReceiverOutput {
	return i.ToExtenderprofileCellularSmsNotificationReceiverOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularSmsNotificationReceiverArgs) ToExtenderprofileCellularSmsNotificationReceiverOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularSmsNotificationReceiverOutput)
}

// ExtenderprofileCellularSmsNotificationReceiverArrayInput is an input type that accepts ExtenderprofileCellularSmsNotificationReceiverArray and ExtenderprofileCellularSmsNotificationReceiverArrayOutput values.
// You can construct a concrete instance of `ExtenderprofileCellularSmsNotificationReceiverArrayInput` via:
//
//	ExtenderprofileCellularSmsNotificationReceiverArray{ ExtenderprofileCellularSmsNotificationReceiverArgs{...} }
type ExtenderprofileCellularSmsNotificationReceiverArrayInput interface {
	pulumi.Input

	ToExtenderprofileCellularSmsNotificationReceiverArrayOutput() ExtenderprofileCellularSmsNotificationReceiverArrayOutput
	ToExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(context.Context) ExtenderprofileCellularSmsNotificationReceiverArrayOutput
}

type ExtenderprofileCellularSmsNotificationReceiverArray []ExtenderprofileCellularSmsNotificationReceiverInput

func (ExtenderprofileCellularSmsNotificationReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (i ExtenderprofileCellularSmsNotificationReceiverArray) ToExtenderprofileCellularSmsNotificationReceiverArrayOutput() ExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return i.ToExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(context.Background())
}

func (i ExtenderprofileCellularSmsNotificationReceiverArray) ToExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileCellularSmsNotificationReceiverArrayOutput)
}

type ExtenderprofileCellularSmsNotificationReceiverOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularSmsNotificationReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (o ExtenderprofileCellularSmsNotificationReceiverOutput) ToExtenderprofileCellularSmsNotificationReceiverOutput() ExtenderprofileCellularSmsNotificationReceiverOutput {
	return o
}

func (o ExtenderprofileCellularSmsNotificationReceiverOutput) ToExtenderprofileCellularSmsNotificationReceiverOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationReceiverOutput {
	return o
}

// Alert multi-options. Valid values: `system-reboot`, `data-exhausted`, `session-disconnect`, `low-signal-strength`, `mode-switch`, `os-image-fallback`, `fgt-backup-mode-switch`.
//
// The `modem1` block supports:
func (o ExtenderprofileCellularSmsNotificationReceiverOutput) Alert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotificationReceiver) *string { return v.Alert }).(pulumi.StringPtrOutput)
}

// FortiExtender SMS notification receiver name.
func (o ExtenderprofileCellularSmsNotificationReceiverOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotificationReceiver) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Receiver phone number. Format: [+][country code][area code][local phone number]. For example, +16501234567.
func (o ExtenderprofileCellularSmsNotificationReceiverOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotificationReceiver) *string { return v.PhoneNumber }).(pulumi.StringPtrOutput)
}

// SMS notification receiver status. Valid values: `disable`, `enable`.
func (o ExtenderprofileCellularSmsNotificationReceiverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileCellularSmsNotificationReceiver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtenderprofileCellularSmsNotificationReceiverArrayOutput struct{ *pulumi.OutputState }

func (ExtenderprofileCellularSmsNotificationReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (o ExtenderprofileCellularSmsNotificationReceiverArrayOutput) ToExtenderprofileCellularSmsNotificationReceiverArrayOutput() ExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o
}

func (o ExtenderprofileCellularSmsNotificationReceiverArrayOutput) ToExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(ctx context.Context) ExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o
}

func (o ExtenderprofileCellularSmsNotificationReceiverArrayOutput) Index(i pulumi.IntInput) ExtenderprofileCellularSmsNotificationReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtenderprofileCellularSmsNotificationReceiver {
		return vs[0].([]ExtenderprofileCellularSmsNotificationReceiver)[vs[1].(int)]
	}).(ExtenderprofileCellularSmsNotificationReceiverOutput)
}

type ExtenderprofileLanExtension struct {
	// IPsec phase1 interface.
	BackhaulInterface *string `pulumi:"backhaulInterface"`
	// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
	BackhaulIp *string `pulumi:"backhaulIp"`
	// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
	Backhauls []ExtenderprofileLanExtensionBackhaul `pulumi:"backhauls"`
	// IPsec tunnel name.
	IpsecTunnel *string `pulumi:"ipsecTunnel"`
	// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
	LinkLoadbalance *string `pulumi:"linkLoadbalance"`
}

// ExtenderprofileLanExtensionInput is an input type that accepts ExtenderprofileLanExtensionArgs and ExtenderprofileLanExtensionOutput values.
// You can construct a concrete instance of `ExtenderprofileLanExtensionInput` via:
//
//	ExtenderprofileLanExtensionArgs{...}
type ExtenderprofileLanExtensionInput interface {
	pulumi.Input

	ToExtenderprofileLanExtensionOutput() ExtenderprofileLanExtensionOutput
	ToExtenderprofileLanExtensionOutputWithContext(context.Context) ExtenderprofileLanExtensionOutput
}

type ExtenderprofileLanExtensionArgs struct {
	// IPsec phase1 interface.
	BackhaulInterface pulumi.StringPtrInput `pulumi:"backhaulInterface"`
	// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
	BackhaulIp pulumi.StringPtrInput `pulumi:"backhaulIp"`
	// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
	Backhauls ExtenderprofileLanExtensionBackhaulArrayInput `pulumi:"backhauls"`
	// IPsec tunnel name.
	IpsecTunnel pulumi.StringPtrInput `pulumi:"ipsecTunnel"`
	// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
	LinkLoadbalance pulumi.StringPtrInput `pulumi:"linkLoadbalance"`
}

func (ExtenderprofileLanExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileLanExtension)(nil)).Elem()
}

func (i ExtenderprofileLanExtensionArgs) ToExtenderprofileLanExtensionOutput() ExtenderprofileLanExtensionOutput {
	return i.ToExtenderprofileLanExtensionOutputWithContext(context.Background())
}

func (i ExtenderprofileLanExtensionArgs) ToExtenderprofileLanExtensionOutputWithContext(ctx context.Context) ExtenderprofileLanExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileLanExtensionOutput)
}

func (i ExtenderprofileLanExtensionArgs) ToExtenderprofileLanExtensionPtrOutput() ExtenderprofileLanExtensionPtrOutput {
	return i.ToExtenderprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (i ExtenderprofileLanExtensionArgs) ToExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtenderprofileLanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileLanExtensionOutput).ToExtenderprofileLanExtensionPtrOutputWithContext(ctx)
}

// ExtenderprofileLanExtensionPtrInput is an input type that accepts ExtenderprofileLanExtensionArgs, ExtenderprofileLanExtensionPtr and ExtenderprofileLanExtensionPtrOutput values.
// You can construct a concrete instance of `ExtenderprofileLanExtensionPtrInput` via:
//
//	        ExtenderprofileLanExtensionArgs{...}
//
//	or:
//
//	        nil
type ExtenderprofileLanExtensionPtrInput interface {
	pulumi.Input

	ToExtenderprofileLanExtensionPtrOutput() ExtenderprofileLanExtensionPtrOutput
	ToExtenderprofileLanExtensionPtrOutputWithContext(context.Context) ExtenderprofileLanExtensionPtrOutput
}

type extenderprofileLanExtensionPtrType ExtenderprofileLanExtensionArgs

func ExtenderprofileLanExtensionPtr(v *ExtenderprofileLanExtensionArgs) ExtenderprofileLanExtensionPtrInput {
	return (*extenderprofileLanExtensionPtrType)(v)
}

func (*extenderprofileLanExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileLanExtension)(nil)).Elem()
}

func (i *extenderprofileLanExtensionPtrType) ToExtenderprofileLanExtensionPtrOutput() ExtenderprofileLanExtensionPtrOutput {
	return i.ToExtenderprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (i *extenderprofileLanExtensionPtrType) ToExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtenderprofileLanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileLanExtensionPtrOutput)
}

type ExtenderprofileLanExtensionOutput struct{ *pulumi.OutputState }

func (ExtenderprofileLanExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileLanExtension)(nil)).Elem()
}

func (o ExtenderprofileLanExtensionOutput) ToExtenderprofileLanExtensionOutput() ExtenderprofileLanExtensionOutput {
	return o
}

func (o ExtenderprofileLanExtensionOutput) ToExtenderprofileLanExtensionOutputWithContext(ctx context.Context) ExtenderprofileLanExtensionOutput {
	return o
}

func (o ExtenderprofileLanExtensionOutput) ToExtenderprofileLanExtensionPtrOutput() ExtenderprofileLanExtensionPtrOutput {
	return o.ToExtenderprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (o ExtenderprofileLanExtensionOutput) ToExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtenderprofileLanExtensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileLanExtension) *ExtenderprofileLanExtension {
		return &v
	}).(ExtenderprofileLanExtensionPtrOutput)
}

// IPsec phase1 interface.
func (o ExtenderprofileLanExtensionOutput) BackhaulInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileLanExtension) *string { return v.BackhaulInterface }).(pulumi.StringPtrOutput)
}

// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
func (o ExtenderprofileLanExtensionOutput) BackhaulIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileLanExtension) *string { return v.BackhaulIp }).(pulumi.StringPtrOutput)
}

// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
func (o ExtenderprofileLanExtensionOutput) Backhauls() ExtenderprofileLanExtensionBackhaulArrayOutput {
	return o.ApplyT(func(v ExtenderprofileLanExtension) []ExtenderprofileLanExtensionBackhaul { return v.Backhauls }).(ExtenderprofileLanExtensionBackhaulArrayOutput)
}

// IPsec tunnel name.
func (o ExtenderprofileLanExtensionOutput) IpsecTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileLanExtension) *string { return v.IpsecTunnel }).(pulumi.StringPtrOutput)
}

// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
func (o ExtenderprofileLanExtensionOutput) LinkLoadbalance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileLanExtension) *string { return v.LinkLoadbalance }).(pulumi.StringPtrOutput)
}

type ExtenderprofileLanExtensionPtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileLanExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileLanExtension)(nil)).Elem()
}

func (o ExtenderprofileLanExtensionPtrOutput) ToExtenderprofileLanExtensionPtrOutput() ExtenderprofileLanExtensionPtrOutput {
	return o
}

func (o ExtenderprofileLanExtensionPtrOutput) ToExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtenderprofileLanExtensionPtrOutput {
	return o
}

func (o ExtenderprofileLanExtensionPtrOutput) Elem() ExtenderprofileLanExtensionOutput {
	return o.ApplyT(func(v *ExtenderprofileLanExtension) ExtenderprofileLanExtension {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileLanExtension
		return ret
	}).(ExtenderprofileLanExtensionOutput)
}

// IPsec phase1 interface.
func (o ExtenderprofileLanExtensionPtrOutput) BackhaulInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.BackhaulInterface
	}).(pulumi.StringPtrOutput)
}

// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
func (o ExtenderprofileLanExtensionPtrOutput) BackhaulIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.BackhaulIp
	}).(pulumi.StringPtrOutput)
}

// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
func (o ExtenderprofileLanExtensionPtrOutput) Backhauls() ExtenderprofileLanExtensionBackhaulArrayOutput {
	return o.ApplyT(func(v *ExtenderprofileLanExtension) []ExtenderprofileLanExtensionBackhaul {
		if v == nil {
			return nil
		}
		return v.Backhauls
	}).(ExtenderprofileLanExtensionBackhaulArrayOutput)
}

// IPsec tunnel name.
func (o ExtenderprofileLanExtensionPtrOutput) IpsecTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.IpsecTunnel
	}).(pulumi.StringPtrOutput)
}

// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
func (o ExtenderprofileLanExtensionPtrOutput) LinkLoadbalance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.LinkLoadbalance
	}).(pulumi.StringPtrOutput)
}

type ExtenderprofileLanExtensionBackhaul struct {
	// FortiExtender LAN extension backhaul name.
	Name *string `pulumi:"name"`
	// FortiExtender uplink port. Valid values: `wan`, `lte1`, `lte2`, `port1`, `port2`, `port3`, `port4`, `port5`, `sfp`.
	Port *string `pulumi:"port"`
	// FortiExtender uplink port. Valid values: `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// WRR weight parameter.
	Weight *int `pulumi:"weight"`
}

// ExtenderprofileLanExtensionBackhaulInput is an input type that accepts ExtenderprofileLanExtensionBackhaulArgs and ExtenderprofileLanExtensionBackhaulOutput values.
// You can construct a concrete instance of `ExtenderprofileLanExtensionBackhaulInput` via:
//
//	ExtenderprofileLanExtensionBackhaulArgs{...}
type ExtenderprofileLanExtensionBackhaulInput interface {
	pulumi.Input

	ToExtenderprofileLanExtensionBackhaulOutput() ExtenderprofileLanExtensionBackhaulOutput
	ToExtenderprofileLanExtensionBackhaulOutputWithContext(context.Context) ExtenderprofileLanExtensionBackhaulOutput
}

type ExtenderprofileLanExtensionBackhaulArgs struct {
	// FortiExtender LAN extension backhaul name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// FortiExtender uplink port. Valid values: `wan`, `lte1`, `lte2`, `port1`, `port2`, `port3`, `port4`, `port5`, `sfp`.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// FortiExtender uplink port. Valid values: `primary`, `secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// WRR weight parameter.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ExtenderprofileLanExtensionBackhaulArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (i ExtenderprofileLanExtensionBackhaulArgs) ToExtenderprofileLanExtensionBackhaulOutput() ExtenderprofileLanExtensionBackhaulOutput {
	return i.ToExtenderprofileLanExtensionBackhaulOutputWithContext(context.Background())
}

func (i ExtenderprofileLanExtensionBackhaulArgs) ToExtenderprofileLanExtensionBackhaulOutputWithContext(ctx context.Context) ExtenderprofileLanExtensionBackhaulOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileLanExtensionBackhaulOutput)
}

// ExtenderprofileLanExtensionBackhaulArrayInput is an input type that accepts ExtenderprofileLanExtensionBackhaulArray and ExtenderprofileLanExtensionBackhaulArrayOutput values.
// You can construct a concrete instance of `ExtenderprofileLanExtensionBackhaulArrayInput` via:
//
//	ExtenderprofileLanExtensionBackhaulArray{ ExtenderprofileLanExtensionBackhaulArgs{...} }
type ExtenderprofileLanExtensionBackhaulArrayInput interface {
	pulumi.Input

	ToExtenderprofileLanExtensionBackhaulArrayOutput() ExtenderprofileLanExtensionBackhaulArrayOutput
	ToExtenderprofileLanExtensionBackhaulArrayOutputWithContext(context.Context) ExtenderprofileLanExtensionBackhaulArrayOutput
}

type ExtenderprofileLanExtensionBackhaulArray []ExtenderprofileLanExtensionBackhaulInput

func (ExtenderprofileLanExtensionBackhaulArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (i ExtenderprofileLanExtensionBackhaulArray) ToExtenderprofileLanExtensionBackhaulArrayOutput() ExtenderprofileLanExtensionBackhaulArrayOutput {
	return i.ToExtenderprofileLanExtensionBackhaulArrayOutputWithContext(context.Background())
}

func (i ExtenderprofileLanExtensionBackhaulArray) ToExtenderprofileLanExtensionBackhaulArrayOutputWithContext(ctx context.Context) ExtenderprofileLanExtensionBackhaulArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileLanExtensionBackhaulArrayOutput)
}

type ExtenderprofileLanExtensionBackhaulOutput struct{ *pulumi.OutputState }

func (ExtenderprofileLanExtensionBackhaulOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (o ExtenderprofileLanExtensionBackhaulOutput) ToExtenderprofileLanExtensionBackhaulOutput() ExtenderprofileLanExtensionBackhaulOutput {
	return o
}

func (o ExtenderprofileLanExtensionBackhaulOutput) ToExtenderprofileLanExtensionBackhaulOutputWithContext(ctx context.Context) ExtenderprofileLanExtensionBackhaulOutput {
	return o
}

// FortiExtender LAN extension backhaul name.
func (o ExtenderprofileLanExtensionBackhaulOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileLanExtensionBackhaul) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// FortiExtender uplink port. Valid values: `wan`, `lte1`, `lte2`, `port1`, `port2`, `port3`, `port4`, `port5`, `sfp`.
func (o ExtenderprofileLanExtensionBackhaulOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileLanExtensionBackhaul) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// FortiExtender uplink port. Valid values: `primary`, `secondary`.
func (o ExtenderprofileLanExtensionBackhaulOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileLanExtensionBackhaul) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// WRR weight parameter.
func (o ExtenderprofileLanExtensionBackhaulOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileLanExtensionBackhaul) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ExtenderprofileLanExtensionBackhaulArrayOutput struct{ *pulumi.OutputState }

func (ExtenderprofileLanExtensionBackhaulArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (o ExtenderprofileLanExtensionBackhaulArrayOutput) ToExtenderprofileLanExtensionBackhaulArrayOutput() ExtenderprofileLanExtensionBackhaulArrayOutput {
	return o
}

func (o ExtenderprofileLanExtensionBackhaulArrayOutput) ToExtenderprofileLanExtensionBackhaulArrayOutputWithContext(ctx context.Context) ExtenderprofileLanExtensionBackhaulArrayOutput {
	return o
}

func (o ExtenderprofileLanExtensionBackhaulArrayOutput) Index(i pulumi.IntInput) ExtenderprofileLanExtensionBackhaulOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtenderprofileLanExtensionBackhaul {
		return vs[0].([]ExtenderprofileLanExtensionBackhaul)[vs[1].(int)]
	}).(ExtenderprofileLanExtensionBackhaulOutput)
}

type ExtenderprofileWifi struct {
	// Country in which this FEX will operate (default = NA). Valid values: `--`, `AF`, `AL`, `DZ`, `AS`, `AO`, `AR`, `AM`, `AU`, `AT`, `AZ`, `BS`, `BH`, `BD`, `BB`, `BY`, `BE`, `BZ`, `BJ`, `BM`, `BT`, `BO`, `BA`, `BW`, `BR`, `BN`, `BG`, `BF`, `KH`, `CM`, `KY`, `CF`, `TD`, `CL`, `CN`, `CX`, `CO`, `CG`, `CD`, `CR`, `HR`, `CY`, `CZ`, `DK`, `DJ`, `DM`, `DO`, `EC`, `EG`, `SV`, `ET`, `EE`, `GF`, `PF`, `FO`, `FJ`, `FI`, `FR`, `GA`, `GE`, `GM`, `DE`, `GH`, `GI`, `GR`, `GL`, `GD`, `GP`, `GU`, `GT`, `GY`, `HT`, `HN`, `HK`, `HU`, `IS`, `IN`, `ID`, `IQ`, `IE`, `IM`, `IL`, `IT`, `CI`, `JM`, `JO`, `KZ`, `KE`, `KR`, `KW`, `LA`, `LV`, `LB`, `LS`, `LR`, `LY`, `LI`, `LT`, `LU`, `MO`, `MK`, `MG`, `MW`, `MY`, `MV`, `ML`, `MT`, `MH`, `MQ`, `MR`, `MU`, `YT`, `MX`, `FM`, `MD`, `MC`, `MN`, `MA`, `MZ`, `MM`, `NA`, `NP`, `NL`, `AN`, `AW`, `NZ`, `NI`, `NE`, `NG`, `NO`, `MP`, `OM`, `PK`, `PW`, `PA`, `PG`, `PY`, `PE`, `PH`, `PL`, `PT`, `PR`, `QA`, `RE`, `RO`, `RU`, `RW`, `BL`, `KN`, `LC`, `MF`, `PM`, `VC`, `SA`, `SN`, `RS`, `ME`, `SL`, `SG`, `SK`, `SI`, `SO`, `ZA`, `ES`, `LK`, `SR`, `SZ`, `SE`, `CH`, `TW`, `TZ`, `TH`, `TG`, `TT`, `TN`, `TR`, `TM`, `AE`, `TC`, `UG`, `UA`, `GB`, `US`, `PS`, `UY`, `UZ`, `VU`, `VE`, `VN`, `VI`, `WF`, `YE`, `ZM`, `ZW`, `JP`, `CA`.
	Country *string `pulumi:"country"`
	// Radio-1 config for Wi-Fi 2.4GHz The structure of `radio1` block is documented below.
	Radio1 *ExtenderprofileWifiRadio1 `pulumi:"radio1"`
	// Radio-2 config for Wi-Fi 5GHz The structure of `radio2` block is documented below.
	//
	// The `radio1` block supports:
	Radio2 *ExtenderprofileWifiRadio2 `pulumi:"radio2"`
}

// ExtenderprofileWifiInput is an input type that accepts ExtenderprofileWifiArgs and ExtenderprofileWifiOutput values.
// You can construct a concrete instance of `ExtenderprofileWifiInput` via:
//
//	ExtenderprofileWifiArgs{...}
type ExtenderprofileWifiInput interface {
	pulumi.Input

	ToExtenderprofileWifiOutput() ExtenderprofileWifiOutput
	ToExtenderprofileWifiOutputWithContext(context.Context) ExtenderprofileWifiOutput
}

type ExtenderprofileWifiArgs struct {
	// Country in which this FEX will operate (default = NA). Valid values: `--`, `AF`, `AL`, `DZ`, `AS`, `AO`, `AR`, `AM`, `AU`, `AT`, `AZ`, `BS`, `BH`, `BD`, `BB`, `BY`, `BE`, `BZ`, `BJ`, `BM`, `BT`, `BO`, `BA`, `BW`, `BR`, `BN`, `BG`, `BF`, `KH`, `CM`, `KY`, `CF`, `TD`, `CL`, `CN`, `CX`, `CO`, `CG`, `CD`, `CR`, `HR`, `CY`, `CZ`, `DK`, `DJ`, `DM`, `DO`, `EC`, `EG`, `SV`, `ET`, `EE`, `GF`, `PF`, `FO`, `FJ`, `FI`, `FR`, `GA`, `GE`, `GM`, `DE`, `GH`, `GI`, `GR`, `GL`, `GD`, `GP`, `GU`, `GT`, `GY`, `HT`, `HN`, `HK`, `HU`, `IS`, `IN`, `ID`, `IQ`, `IE`, `IM`, `IL`, `IT`, `CI`, `JM`, `JO`, `KZ`, `KE`, `KR`, `KW`, `LA`, `LV`, `LB`, `LS`, `LR`, `LY`, `LI`, `LT`, `LU`, `MO`, `MK`, `MG`, `MW`, `MY`, `MV`, `ML`, `MT`, `MH`, `MQ`, `MR`, `MU`, `YT`, `MX`, `FM`, `MD`, `MC`, `MN`, `MA`, `MZ`, `MM`, `NA`, `NP`, `NL`, `AN`, `AW`, `NZ`, `NI`, `NE`, `NG`, `NO`, `MP`, `OM`, `PK`, `PW`, `PA`, `PG`, `PY`, `PE`, `PH`, `PL`, `PT`, `PR`, `QA`, `RE`, `RO`, `RU`, `RW`, `BL`, `KN`, `LC`, `MF`, `PM`, `VC`, `SA`, `SN`, `RS`, `ME`, `SL`, `SG`, `SK`, `SI`, `SO`, `ZA`, `ES`, `LK`, `SR`, `SZ`, `SE`, `CH`, `TW`, `TZ`, `TH`, `TG`, `TT`, `TN`, `TR`, `TM`, `AE`, `TC`, `UG`, `UA`, `GB`, `US`, `PS`, `UY`, `UZ`, `VU`, `VE`, `VN`, `VI`, `WF`, `YE`, `ZM`, `ZW`, `JP`, `CA`.
	Country pulumi.StringPtrInput `pulumi:"country"`
	// Radio-1 config for Wi-Fi 2.4GHz The structure of `radio1` block is documented below.
	Radio1 ExtenderprofileWifiRadio1PtrInput `pulumi:"radio1"`
	// Radio-2 config for Wi-Fi 5GHz The structure of `radio2` block is documented below.
	//
	// The `radio1` block supports:
	Radio2 ExtenderprofileWifiRadio2PtrInput `pulumi:"radio2"`
}

func (ExtenderprofileWifiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileWifi)(nil)).Elem()
}

func (i ExtenderprofileWifiArgs) ToExtenderprofileWifiOutput() ExtenderprofileWifiOutput {
	return i.ToExtenderprofileWifiOutputWithContext(context.Background())
}

func (i ExtenderprofileWifiArgs) ToExtenderprofileWifiOutputWithContext(ctx context.Context) ExtenderprofileWifiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiOutput)
}

func (i ExtenderprofileWifiArgs) ToExtenderprofileWifiPtrOutput() ExtenderprofileWifiPtrOutput {
	return i.ToExtenderprofileWifiPtrOutputWithContext(context.Background())
}

func (i ExtenderprofileWifiArgs) ToExtenderprofileWifiPtrOutputWithContext(ctx context.Context) ExtenderprofileWifiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiOutput).ToExtenderprofileWifiPtrOutputWithContext(ctx)
}

// ExtenderprofileWifiPtrInput is an input type that accepts ExtenderprofileWifiArgs, ExtenderprofileWifiPtr and ExtenderprofileWifiPtrOutput values.
// You can construct a concrete instance of `ExtenderprofileWifiPtrInput` via:
//
//	        ExtenderprofileWifiArgs{...}
//
//	or:
//
//	        nil
type ExtenderprofileWifiPtrInput interface {
	pulumi.Input

	ToExtenderprofileWifiPtrOutput() ExtenderprofileWifiPtrOutput
	ToExtenderprofileWifiPtrOutputWithContext(context.Context) ExtenderprofileWifiPtrOutput
}

type extenderprofileWifiPtrType ExtenderprofileWifiArgs

func ExtenderprofileWifiPtr(v *ExtenderprofileWifiArgs) ExtenderprofileWifiPtrInput {
	return (*extenderprofileWifiPtrType)(v)
}

func (*extenderprofileWifiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileWifi)(nil)).Elem()
}

func (i *extenderprofileWifiPtrType) ToExtenderprofileWifiPtrOutput() ExtenderprofileWifiPtrOutput {
	return i.ToExtenderprofileWifiPtrOutputWithContext(context.Background())
}

func (i *extenderprofileWifiPtrType) ToExtenderprofileWifiPtrOutputWithContext(ctx context.Context) ExtenderprofileWifiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiPtrOutput)
}

type ExtenderprofileWifiOutput struct{ *pulumi.OutputState }

func (ExtenderprofileWifiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileWifi)(nil)).Elem()
}

func (o ExtenderprofileWifiOutput) ToExtenderprofileWifiOutput() ExtenderprofileWifiOutput {
	return o
}

func (o ExtenderprofileWifiOutput) ToExtenderprofileWifiOutputWithContext(ctx context.Context) ExtenderprofileWifiOutput {
	return o
}

func (o ExtenderprofileWifiOutput) ToExtenderprofileWifiPtrOutput() ExtenderprofileWifiPtrOutput {
	return o.ToExtenderprofileWifiPtrOutputWithContext(context.Background())
}

func (o ExtenderprofileWifiOutput) ToExtenderprofileWifiPtrOutputWithContext(ctx context.Context) ExtenderprofileWifiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileWifi) *ExtenderprofileWifi {
		return &v
	}).(ExtenderprofileWifiPtrOutput)
}

// Country in which this FEX will operate (default = NA). Valid values: `--`, `AF`, `AL`, `DZ`, `AS`, `AO`, `AR`, `AM`, `AU`, `AT`, `AZ`, `BS`, `BH`, `BD`, `BB`, `BY`, `BE`, `BZ`, `BJ`, `BM`, `BT`, `BO`, `BA`, `BW`, `BR`, `BN`, `BG`, `BF`, `KH`, `CM`, `KY`, `CF`, `TD`, `CL`, `CN`, `CX`, `CO`, `CG`, `CD`, `CR`, `HR`, `CY`, `CZ`, `DK`, `DJ`, `DM`, `DO`, `EC`, `EG`, `SV`, `ET`, `EE`, `GF`, `PF`, `FO`, `FJ`, `FI`, `FR`, `GA`, `GE`, `GM`, `DE`, `GH`, `GI`, `GR`, `GL`, `GD`, `GP`, `GU`, `GT`, `GY`, `HT`, `HN`, `HK`, `HU`, `IS`, `IN`, `ID`, `IQ`, `IE`, `IM`, `IL`, `IT`, `CI`, `JM`, `JO`, `KZ`, `KE`, `KR`, `KW`, `LA`, `LV`, `LB`, `LS`, `LR`, `LY`, `LI`, `LT`, `LU`, `MO`, `MK`, `MG`, `MW`, `MY`, `MV`, `ML`, `MT`, `MH`, `MQ`, `MR`, `MU`, `YT`, `MX`, `FM`, `MD`, `MC`, `MN`, `MA`, `MZ`, `MM`, `NA`, `NP`, `NL`, `AN`, `AW`, `NZ`, `NI`, `NE`, `NG`, `NO`, `MP`, `OM`, `PK`, `PW`, `PA`, `PG`, `PY`, `PE`, `PH`, `PL`, `PT`, `PR`, `QA`, `RE`, `RO`, `RU`, `RW`, `BL`, `KN`, `LC`, `MF`, `PM`, `VC`, `SA`, `SN`, `RS`, `ME`, `SL`, `SG`, `SK`, `SI`, `SO`, `ZA`, `ES`, `LK`, `SR`, `SZ`, `SE`, `CH`, `TW`, `TZ`, `TH`, `TG`, `TT`, `TN`, `TR`, `TM`, `AE`, `TC`, `UG`, `UA`, `GB`, `US`, `PS`, `UY`, `UZ`, `VU`, `VE`, `VN`, `VI`, `WF`, `YE`, `ZM`, `ZW`, `JP`, `CA`.
func (o ExtenderprofileWifiOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifi) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Radio-1 config for Wi-Fi 2.4GHz The structure of `radio1` block is documented below.
func (o ExtenderprofileWifiOutput) Radio1() ExtenderprofileWifiRadio1PtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifi) *ExtenderprofileWifiRadio1 { return v.Radio1 }).(ExtenderprofileWifiRadio1PtrOutput)
}

// Radio-2 config for Wi-Fi 5GHz The structure of `radio2` block is documented below.
//
// The `radio1` block supports:
func (o ExtenderprofileWifiOutput) Radio2() ExtenderprofileWifiRadio2PtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifi) *ExtenderprofileWifiRadio2 { return v.Radio2 }).(ExtenderprofileWifiRadio2PtrOutput)
}

type ExtenderprofileWifiPtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileWifiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileWifi)(nil)).Elem()
}

func (o ExtenderprofileWifiPtrOutput) ToExtenderprofileWifiPtrOutput() ExtenderprofileWifiPtrOutput {
	return o
}

func (o ExtenderprofileWifiPtrOutput) ToExtenderprofileWifiPtrOutputWithContext(ctx context.Context) ExtenderprofileWifiPtrOutput {
	return o
}

func (o ExtenderprofileWifiPtrOutput) Elem() ExtenderprofileWifiOutput {
	return o.ApplyT(func(v *ExtenderprofileWifi) ExtenderprofileWifi {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileWifi
		return ret
	}).(ExtenderprofileWifiOutput)
}

// Country in which this FEX will operate (default = NA). Valid values: `--`, `AF`, `AL`, `DZ`, `AS`, `AO`, `AR`, `AM`, `AU`, `AT`, `AZ`, `BS`, `BH`, `BD`, `BB`, `BY`, `BE`, `BZ`, `BJ`, `BM`, `BT`, `BO`, `BA`, `BW`, `BR`, `BN`, `BG`, `BF`, `KH`, `CM`, `KY`, `CF`, `TD`, `CL`, `CN`, `CX`, `CO`, `CG`, `CD`, `CR`, `HR`, `CY`, `CZ`, `DK`, `DJ`, `DM`, `DO`, `EC`, `EG`, `SV`, `ET`, `EE`, `GF`, `PF`, `FO`, `FJ`, `FI`, `FR`, `GA`, `GE`, `GM`, `DE`, `GH`, `GI`, `GR`, `GL`, `GD`, `GP`, `GU`, `GT`, `GY`, `HT`, `HN`, `HK`, `HU`, `IS`, `IN`, `ID`, `IQ`, `IE`, `IM`, `IL`, `IT`, `CI`, `JM`, `JO`, `KZ`, `KE`, `KR`, `KW`, `LA`, `LV`, `LB`, `LS`, `LR`, `LY`, `LI`, `LT`, `LU`, `MO`, `MK`, `MG`, `MW`, `MY`, `MV`, `ML`, `MT`, `MH`, `MQ`, `MR`, `MU`, `YT`, `MX`, `FM`, `MD`, `MC`, `MN`, `MA`, `MZ`, `MM`, `NA`, `NP`, `NL`, `AN`, `AW`, `NZ`, `NI`, `NE`, `NG`, `NO`, `MP`, `OM`, `PK`, `PW`, `PA`, `PG`, `PY`, `PE`, `PH`, `PL`, `PT`, `PR`, `QA`, `RE`, `RO`, `RU`, `RW`, `BL`, `KN`, `LC`, `MF`, `PM`, `VC`, `SA`, `SN`, `RS`, `ME`, `SL`, `SG`, `SK`, `SI`, `SO`, `ZA`, `ES`, `LK`, `SR`, `SZ`, `SE`, `CH`, `TW`, `TZ`, `TH`, `TG`, `TT`, `TN`, `TR`, `TM`, `AE`, `TC`, `UG`, `UA`, `GB`, `US`, `PS`, `UY`, `UZ`, `VU`, `VE`, `VN`, `VI`, `WF`, `YE`, `ZM`, `ZW`, `JP`, `CA`.
func (o ExtenderprofileWifiPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifi) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// Radio-1 config for Wi-Fi 2.4GHz The structure of `radio1` block is documented below.
func (o ExtenderprofileWifiPtrOutput) Radio1() ExtenderprofileWifiRadio1PtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifi) *ExtenderprofileWifiRadio1 {
		if v == nil {
			return nil
		}
		return v.Radio1
	}).(ExtenderprofileWifiRadio1PtrOutput)
}

// Radio-2 config for Wi-Fi 5GHz The structure of `radio2` block is documented below.
//
// The `radio1` block supports:
func (o ExtenderprofileWifiPtrOutput) Radio2() ExtenderprofileWifiRadio2PtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifi) *ExtenderprofileWifiRadio2 {
		if v == nil {
			return nil
		}
		return v.Radio2
	}).(ExtenderprofileWifiRadio2PtrOutput)
}

type ExtenderprofileWifiRadio1 struct {
	Band              *string                             `pulumi:"band"`
	Bandwidth         *string                             `pulumi:"bandwidth"`
	BeaconInterval    *int                                `pulumi:"beaconInterval"`
	BssColor          *int                                `pulumi:"bssColor"`
	BssColorMode      *string                             `pulumi:"bssColorMode"`
	Channel           *string                             `pulumi:"channel"`
	ExtensionChannel  *string                             `pulumi:"extensionChannel"`
	GuardInterval     *string                             `pulumi:"guardInterval"`
	LanExtVap         *string                             `pulumi:"lanExtVap"`
	LocalVaps         []ExtenderprofileWifiRadio1LocalVap `pulumi:"localVaps"`
	MaxClients        *int                                `pulumi:"maxClients"`
	Mode              *string                             `pulumi:"mode"`
	N80211d           *string                             `pulumi:"n80211d"`
	OperatingStandard *string                             `pulumi:"operatingStandard"`
	PowerLevel        *int                                `pulumi:"powerLevel"`
	Status            *string                             `pulumi:"status"`
}

// ExtenderprofileWifiRadio1Input is an input type that accepts ExtenderprofileWifiRadio1Args and ExtenderprofileWifiRadio1Output values.
// You can construct a concrete instance of `ExtenderprofileWifiRadio1Input` via:
//
//	ExtenderprofileWifiRadio1Args{...}
type ExtenderprofileWifiRadio1Input interface {
	pulumi.Input

	ToExtenderprofileWifiRadio1Output() ExtenderprofileWifiRadio1Output
	ToExtenderprofileWifiRadio1OutputWithContext(context.Context) ExtenderprofileWifiRadio1Output
}

type ExtenderprofileWifiRadio1Args struct {
	Band              pulumi.StringPtrInput                       `pulumi:"band"`
	Bandwidth         pulumi.StringPtrInput                       `pulumi:"bandwidth"`
	BeaconInterval    pulumi.IntPtrInput                          `pulumi:"beaconInterval"`
	BssColor          pulumi.IntPtrInput                          `pulumi:"bssColor"`
	BssColorMode      pulumi.StringPtrInput                       `pulumi:"bssColorMode"`
	Channel           pulumi.StringPtrInput                       `pulumi:"channel"`
	ExtensionChannel  pulumi.StringPtrInput                       `pulumi:"extensionChannel"`
	GuardInterval     pulumi.StringPtrInput                       `pulumi:"guardInterval"`
	LanExtVap         pulumi.StringPtrInput                       `pulumi:"lanExtVap"`
	LocalVaps         ExtenderprofileWifiRadio1LocalVapArrayInput `pulumi:"localVaps"`
	MaxClients        pulumi.IntPtrInput                          `pulumi:"maxClients"`
	Mode              pulumi.StringPtrInput                       `pulumi:"mode"`
	N80211d           pulumi.StringPtrInput                       `pulumi:"n80211d"`
	OperatingStandard pulumi.StringPtrInput                       `pulumi:"operatingStandard"`
	PowerLevel        pulumi.IntPtrInput                          `pulumi:"powerLevel"`
	Status            pulumi.StringPtrInput                       `pulumi:"status"`
}

func (ExtenderprofileWifiRadio1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileWifiRadio1)(nil)).Elem()
}

func (i ExtenderprofileWifiRadio1Args) ToExtenderprofileWifiRadio1Output() ExtenderprofileWifiRadio1Output {
	return i.ToExtenderprofileWifiRadio1OutputWithContext(context.Background())
}

func (i ExtenderprofileWifiRadio1Args) ToExtenderprofileWifiRadio1OutputWithContext(ctx context.Context) ExtenderprofileWifiRadio1Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiRadio1Output)
}

func (i ExtenderprofileWifiRadio1Args) ToExtenderprofileWifiRadio1PtrOutput() ExtenderprofileWifiRadio1PtrOutput {
	return i.ToExtenderprofileWifiRadio1PtrOutputWithContext(context.Background())
}

func (i ExtenderprofileWifiRadio1Args) ToExtenderprofileWifiRadio1PtrOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiRadio1Output).ToExtenderprofileWifiRadio1PtrOutputWithContext(ctx)
}

// ExtenderprofileWifiRadio1PtrInput is an input type that accepts ExtenderprofileWifiRadio1Args, ExtenderprofileWifiRadio1Ptr and ExtenderprofileWifiRadio1PtrOutput values.
// You can construct a concrete instance of `ExtenderprofileWifiRadio1PtrInput` via:
//
//	        ExtenderprofileWifiRadio1Args{...}
//
//	or:
//
//	        nil
type ExtenderprofileWifiRadio1PtrInput interface {
	pulumi.Input

	ToExtenderprofileWifiRadio1PtrOutput() ExtenderprofileWifiRadio1PtrOutput
	ToExtenderprofileWifiRadio1PtrOutputWithContext(context.Context) ExtenderprofileWifiRadio1PtrOutput
}

type extenderprofileWifiRadio1PtrType ExtenderprofileWifiRadio1Args

func ExtenderprofileWifiRadio1Ptr(v *ExtenderprofileWifiRadio1Args) ExtenderprofileWifiRadio1PtrInput {
	return (*extenderprofileWifiRadio1PtrType)(v)
}

func (*extenderprofileWifiRadio1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileWifiRadio1)(nil)).Elem()
}

func (i *extenderprofileWifiRadio1PtrType) ToExtenderprofileWifiRadio1PtrOutput() ExtenderprofileWifiRadio1PtrOutput {
	return i.ToExtenderprofileWifiRadio1PtrOutputWithContext(context.Background())
}

func (i *extenderprofileWifiRadio1PtrType) ToExtenderprofileWifiRadio1PtrOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiRadio1PtrOutput)
}

type ExtenderprofileWifiRadio1Output struct{ *pulumi.OutputState }

func (ExtenderprofileWifiRadio1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileWifiRadio1)(nil)).Elem()
}

func (o ExtenderprofileWifiRadio1Output) ToExtenderprofileWifiRadio1Output() ExtenderprofileWifiRadio1Output {
	return o
}

func (o ExtenderprofileWifiRadio1Output) ToExtenderprofileWifiRadio1OutputWithContext(ctx context.Context) ExtenderprofileWifiRadio1Output {
	return o
}

func (o ExtenderprofileWifiRadio1Output) ToExtenderprofileWifiRadio1PtrOutput() ExtenderprofileWifiRadio1PtrOutput {
	return o.ToExtenderprofileWifiRadio1PtrOutputWithContext(context.Background())
}

func (o ExtenderprofileWifiRadio1Output) ToExtenderprofileWifiRadio1PtrOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileWifiRadio1) *ExtenderprofileWifiRadio1 {
		return &v
	}).(ExtenderprofileWifiRadio1PtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *string { return v.Band }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) Bandwidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *string { return v.Bandwidth }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *int { return v.BeaconInterval }).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *int { return v.BssColor }).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *string { return v.BssColorMode }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *string { return v.Channel }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) ExtensionChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *string { return v.ExtensionChannel }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) GuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *string { return v.GuardInterval }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) LanExtVap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *string { return v.LanExtVap }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) LocalVaps() ExtenderprofileWifiRadio1LocalVapArrayOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) []ExtenderprofileWifiRadio1LocalVap { return v.LocalVaps }).(ExtenderprofileWifiRadio1LocalVapArrayOutput)
}

func (o ExtenderprofileWifiRadio1Output) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *int { return v.MaxClients }).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *string { return v.N80211d }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) OperatingStandard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *string { return v.OperatingStandard }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *int { return v.PowerLevel }).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio1Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtenderprofileWifiRadio1PtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileWifiRadio1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileWifiRadio1)(nil)).Elem()
}

func (o ExtenderprofileWifiRadio1PtrOutput) ToExtenderprofileWifiRadio1PtrOutput() ExtenderprofileWifiRadio1PtrOutput {
	return o
}

func (o ExtenderprofileWifiRadio1PtrOutput) ToExtenderprofileWifiRadio1PtrOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio1PtrOutput {
	return o
}

func (o ExtenderprofileWifiRadio1PtrOutput) Elem() ExtenderprofileWifiRadio1Output {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) ExtenderprofileWifiRadio1 {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileWifiRadio1
		return ret
	}).(ExtenderprofileWifiRadio1Output)
}

func (o ExtenderprofileWifiRadio1PtrOutput) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Band
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) Bandwidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Bandwidth
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *int {
		if v == nil {
			return nil
		}
		return v.BeaconInterval
	}).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *int {
		if v == nil {
			return nil
		}
		return v.BssColor
	}).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *string {
		if v == nil {
			return nil
		}
		return v.BssColorMode
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) ExtensionChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionChannel
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) GuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *string {
		if v == nil {
			return nil
		}
		return v.GuardInterval
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) LanExtVap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *string {
		if v == nil {
			return nil
		}
		return v.LanExtVap
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) LocalVaps() ExtenderprofileWifiRadio1LocalVapArrayOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) []ExtenderprofileWifiRadio1LocalVap {
		if v == nil {
			return nil
		}
		return v.LocalVaps
	}).(ExtenderprofileWifiRadio1LocalVapArrayOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *int {
		if v == nil {
			return nil
		}
		return v.MaxClients
	}).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *string {
		if v == nil {
			return nil
		}
		return v.N80211d
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) OperatingStandard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *string {
		if v == nil {
			return nil
		}
		return v.OperatingStandard
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *int {
		if v == nil {
			return nil
		}
		return v.PowerLevel
	}).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio1PtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio1) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ExtenderprofileWifiRadio1LocalVap struct {
	// Wi-Fi local VAP name.
	Name *string `pulumi:"name"`
}

// ExtenderprofileWifiRadio1LocalVapInput is an input type that accepts ExtenderprofileWifiRadio1LocalVapArgs and ExtenderprofileWifiRadio1LocalVapOutput values.
// You can construct a concrete instance of `ExtenderprofileWifiRadio1LocalVapInput` via:
//
//	ExtenderprofileWifiRadio1LocalVapArgs{...}
type ExtenderprofileWifiRadio1LocalVapInput interface {
	pulumi.Input

	ToExtenderprofileWifiRadio1LocalVapOutput() ExtenderprofileWifiRadio1LocalVapOutput
	ToExtenderprofileWifiRadio1LocalVapOutputWithContext(context.Context) ExtenderprofileWifiRadio1LocalVapOutput
}

type ExtenderprofileWifiRadio1LocalVapArgs struct {
	// Wi-Fi local VAP name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExtenderprofileWifiRadio1LocalVapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileWifiRadio1LocalVap)(nil)).Elem()
}

func (i ExtenderprofileWifiRadio1LocalVapArgs) ToExtenderprofileWifiRadio1LocalVapOutput() ExtenderprofileWifiRadio1LocalVapOutput {
	return i.ToExtenderprofileWifiRadio1LocalVapOutputWithContext(context.Background())
}

func (i ExtenderprofileWifiRadio1LocalVapArgs) ToExtenderprofileWifiRadio1LocalVapOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio1LocalVapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiRadio1LocalVapOutput)
}

// ExtenderprofileWifiRadio1LocalVapArrayInput is an input type that accepts ExtenderprofileWifiRadio1LocalVapArray and ExtenderprofileWifiRadio1LocalVapArrayOutput values.
// You can construct a concrete instance of `ExtenderprofileWifiRadio1LocalVapArrayInput` via:
//
//	ExtenderprofileWifiRadio1LocalVapArray{ ExtenderprofileWifiRadio1LocalVapArgs{...} }
type ExtenderprofileWifiRadio1LocalVapArrayInput interface {
	pulumi.Input

	ToExtenderprofileWifiRadio1LocalVapArrayOutput() ExtenderprofileWifiRadio1LocalVapArrayOutput
	ToExtenderprofileWifiRadio1LocalVapArrayOutputWithContext(context.Context) ExtenderprofileWifiRadio1LocalVapArrayOutput
}

type ExtenderprofileWifiRadio1LocalVapArray []ExtenderprofileWifiRadio1LocalVapInput

func (ExtenderprofileWifiRadio1LocalVapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtenderprofileWifiRadio1LocalVap)(nil)).Elem()
}

func (i ExtenderprofileWifiRadio1LocalVapArray) ToExtenderprofileWifiRadio1LocalVapArrayOutput() ExtenderprofileWifiRadio1LocalVapArrayOutput {
	return i.ToExtenderprofileWifiRadio1LocalVapArrayOutputWithContext(context.Background())
}

func (i ExtenderprofileWifiRadio1LocalVapArray) ToExtenderprofileWifiRadio1LocalVapArrayOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio1LocalVapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiRadio1LocalVapArrayOutput)
}

type ExtenderprofileWifiRadio1LocalVapOutput struct{ *pulumi.OutputState }

func (ExtenderprofileWifiRadio1LocalVapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileWifiRadio1LocalVap)(nil)).Elem()
}

func (o ExtenderprofileWifiRadio1LocalVapOutput) ToExtenderprofileWifiRadio1LocalVapOutput() ExtenderprofileWifiRadio1LocalVapOutput {
	return o
}

func (o ExtenderprofileWifiRadio1LocalVapOutput) ToExtenderprofileWifiRadio1LocalVapOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio1LocalVapOutput {
	return o
}

// Wi-Fi local VAP name.
func (o ExtenderprofileWifiRadio1LocalVapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio1LocalVap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExtenderprofileWifiRadio1LocalVapArrayOutput struct{ *pulumi.OutputState }

func (ExtenderprofileWifiRadio1LocalVapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtenderprofileWifiRadio1LocalVap)(nil)).Elem()
}

func (o ExtenderprofileWifiRadio1LocalVapArrayOutput) ToExtenderprofileWifiRadio1LocalVapArrayOutput() ExtenderprofileWifiRadio1LocalVapArrayOutput {
	return o
}

func (o ExtenderprofileWifiRadio1LocalVapArrayOutput) ToExtenderprofileWifiRadio1LocalVapArrayOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio1LocalVapArrayOutput {
	return o
}

func (o ExtenderprofileWifiRadio1LocalVapArrayOutput) Index(i pulumi.IntInput) ExtenderprofileWifiRadio1LocalVapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtenderprofileWifiRadio1LocalVap {
		return vs[0].([]ExtenderprofileWifiRadio1LocalVap)[vs[1].(int)]
	}).(ExtenderprofileWifiRadio1LocalVapOutput)
}

type ExtenderprofileWifiRadio2 struct {
	Band              *string                             `pulumi:"band"`
	Bandwidth         *string                             `pulumi:"bandwidth"`
	BeaconInterval    *int                                `pulumi:"beaconInterval"`
	BssColor          *int                                `pulumi:"bssColor"`
	BssColorMode      *string                             `pulumi:"bssColorMode"`
	Channel           *string                             `pulumi:"channel"`
	ExtensionChannel  *string                             `pulumi:"extensionChannel"`
	GuardInterval     *string                             `pulumi:"guardInterval"`
	LanExtVap         *string                             `pulumi:"lanExtVap"`
	LocalVaps         []ExtenderprofileWifiRadio2LocalVap `pulumi:"localVaps"`
	MaxClients        *int                                `pulumi:"maxClients"`
	Mode              *string                             `pulumi:"mode"`
	N80211d           *string                             `pulumi:"n80211d"`
	OperatingStandard *string                             `pulumi:"operatingStandard"`
	PowerLevel        *int                                `pulumi:"powerLevel"`
	Status            *string                             `pulumi:"status"`
}

// ExtenderprofileWifiRadio2Input is an input type that accepts ExtenderprofileWifiRadio2Args and ExtenderprofileWifiRadio2Output values.
// You can construct a concrete instance of `ExtenderprofileWifiRadio2Input` via:
//
//	ExtenderprofileWifiRadio2Args{...}
type ExtenderprofileWifiRadio2Input interface {
	pulumi.Input

	ToExtenderprofileWifiRadio2Output() ExtenderprofileWifiRadio2Output
	ToExtenderprofileWifiRadio2OutputWithContext(context.Context) ExtenderprofileWifiRadio2Output
}

type ExtenderprofileWifiRadio2Args struct {
	Band              pulumi.StringPtrInput                       `pulumi:"band"`
	Bandwidth         pulumi.StringPtrInput                       `pulumi:"bandwidth"`
	BeaconInterval    pulumi.IntPtrInput                          `pulumi:"beaconInterval"`
	BssColor          pulumi.IntPtrInput                          `pulumi:"bssColor"`
	BssColorMode      pulumi.StringPtrInput                       `pulumi:"bssColorMode"`
	Channel           pulumi.StringPtrInput                       `pulumi:"channel"`
	ExtensionChannel  pulumi.StringPtrInput                       `pulumi:"extensionChannel"`
	GuardInterval     pulumi.StringPtrInput                       `pulumi:"guardInterval"`
	LanExtVap         pulumi.StringPtrInput                       `pulumi:"lanExtVap"`
	LocalVaps         ExtenderprofileWifiRadio2LocalVapArrayInput `pulumi:"localVaps"`
	MaxClients        pulumi.IntPtrInput                          `pulumi:"maxClients"`
	Mode              pulumi.StringPtrInput                       `pulumi:"mode"`
	N80211d           pulumi.StringPtrInput                       `pulumi:"n80211d"`
	OperatingStandard pulumi.StringPtrInput                       `pulumi:"operatingStandard"`
	PowerLevel        pulumi.IntPtrInput                          `pulumi:"powerLevel"`
	Status            pulumi.StringPtrInput                       `pulumi:"status"`
}

func (ExtenderprofileWifiRadio2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileWifiRadio2)(nil)).Elem()
}

func (i ExtenderprofileWifiRadio2Args) ToExtenderprofileWifiRadio2Output() ExtenderprofileWifiRadio2Output {
	return i.ToExtenderprofileWifiRadio2OutputWithContext(context.Background())
}

func (i ExtenderprofileWifiRadio2Args) ToExtenderprofileWifiRadio2OutputWithContext(ctx context.Context) ExtenderprofileWifiRadio2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiRadio2Output)
}

func (i ExtenderprofileWifiRadio2Args) ToExtenderprofileWifiRadio2PtrOutput() ExtenderprofileWifiRadio2PtrOutput {
	return i.ToExtenderprofileWifiRadio2PtrOutputWithContext(context.Background())
}

func (i ExtenderprofileWifiRadio2Args) ToExtenderprofileWifiRadio2PtrOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiRadio2Output).ToExtenderprofileWifiRadio2PtrOutputWithContext(ctx)
}

// ExtenderprofileWifiRadio2PtrInput is an input type that accepts ExtenderprofileWifiRadio2Args, ExtenderprofileWifiRadio2Ptr and ExtenderprofileWifiRadio2PtrOutput values.
// You can construct a concrete instance of `ExtenderprofileWifiRadio2PtrInput` via:
//
//	        ExtenderprofileWifiRadio2Args{...}
//
//	or:
//
//	        nil
type ExtenderprofileWifiRadio2PtrInput interface {
	pulumi.Input

	ToExtenderprofileWifiRadio2PtrOutput() ExtenderprofileWifiRadio2PtrOutput
	ToExtenderprofileWifiRadio2PtrOutputWithContext(context.Context) ExtenderprofileWifiRadio2PtrOutput
}

type extenderprofileWifiRadio2PtrType ExtenderprofileWifiRadio2Args

func ExtenderprofileWifiRadio2Ptr(v *ExtenderprofileWifiRadio2Args) ExtenderprofileWifiRadio2PtrInput {
	return (*extenderprofileWifiRadio2PtrType)(v)
}

func (*extenderprofileWifiRadio2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileWifiRadio2)(nil)).Elem()
}

func (i *extenderprofileWifiRadio2PtrType) ToExtenderprofileWifiRadio2PtrOutput() ExtenderprofileWifiRadio2PtrOutput {
	return i.ToExtenderprofileWifiRadio2PtrOutputWithContext(context.Background())
}

func (i *extenderprofileWifiRadio2PtrType) ToExtenderprofileWifiRadio2PtrOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiRadio2PtrOutput)
}

type ExtenderprofileWifiRadio2Output struct{ *pulumi.OutputState }

func (ExtenderprofileWifiRadio2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileWifiRadio2)(nil)).Elem()
}

func (o ExtenderprofileWifiRadio2Output) ToExtenderprofileWifiRadio2Output() ExtenderprofileWifiRadio2Output {
	return o
}

func (o ExtenderprofileWifiRadio2Output) ToExtenderprofileWifiRadio2OutputWithContext(ctx context.Context) ExtenderprofileWifiRadio2Output {
	return o
}

func (o ExtenderprofileWifiRadio2Output) ToExtenderprofileWifiRadio2PtrOutput() ExtenderprofileWifiRadio2PtrOutput {
	return o.ToExtenderprofileWifiRadio2PtrOutputWithContext(context.Background())
}

func (o ExtenderprofileWifiRadio2Output) ToExtenderprofileWifiRadio2PtrOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtenderprofileWifiRadio2) *ExtenderprofileWifiRadio2 {
		return &v
	}).(ExtenderprofileWifiRadio2PtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *string { return v.Band }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) Bandwidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *string { return v.Bandwidth }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *int { return v.BeaconInterval }).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *int { return v.BssColor }).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *string { return v.BssColorMode }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *string { return v.Channel }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) ExtensionChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *string { return v.ExtensionChannel }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) GuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *string { return v.GuardInterval }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) LanExtVap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *string { return v.LanExtVap }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) LocalVaps() ExtenderprofileWifiRadio2LocalVapArrayOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) []ExtenderprofileWifiRadio2LocalVap { return v.LocalVaps }).(ExtenderprofileWifiRadio2LocalVapArrayOutput)
}

func (o ExtenderprofileWifiRadio2Output) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *int { return v.MaxClients }).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *string { return v.N80211d }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) OperatingStandard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *string { return v.OperatingStandard }).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *int { return v.PowerLevel }).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio2Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtenderprofileWifiRadio2PtrOutput struct{ *pulumi.OutputState }

func (ExtenderprofileWifiRadio2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderprofileWifiRadio2)(nil)).Elem()
}

func (o ExtenderprofileWifiRadio2PtrOutput) ToExtenderprofileWifiRadio2PtrOutput() ExtenderprofileWifiRadio2PtrOutput {
	return o
}

func (o ExtenderprofileWifiRadio2PtrOutput) ToExtenderprofileWifiRadio2PtrOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio2PtrOutput {
	return o
}

func (o ExtenderprofileWifiRadio2PtrOutput) Elem() ExtenderprofileWifiRadio2Output {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) ExtenderprofileWifiRadio2 {
		if v != nil {
			return *v
		}
		var ret ExtenderprofileWifiRadio2
		return ret
	}).(ExtenderprofileWifiRadio2Output)
}

func (o ExtenderprofileWifiRadio2PtrOutput) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Band
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) Bandwidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Bandwidth
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) BeaconInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *int {
		if v == nil {
			return nil
		}
		return v.BeaconInterval
	}).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) BssColor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *int {
		if v == nil {
			return nil
		}
		return v.BssColor
	}).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) BssColorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *string {
		if v == nil {
			return nil
		}
		return v.BssColorMode
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) ExtensionChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionChannel
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) GuardInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *string {
		if v == nil {
			return nil
		}
		return v.GuardInterval
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) LanExtVap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *string {
		if v == nil {
			return nil
		}
		return v.LanExtVap
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) LocalVaps() ExtenderprofileWifiRadio2LocalVapArrayOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) []ExtenderprofileWifiRadio2LocalVap {
		if v == nil {
			return nil
		}
		return v.LocalVaps
	}).(ExtenderprofileWifiRadio2LocalVapArrayOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) MaxClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *int {
		if v == nil {
			return nil
		}
		return v.MaxClients
	}).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) N80211d() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *string {
		if v == nil {
			return nil
		}
		return v.N80211d
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) OperatingStandard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *string {
		if v == nil {
			return nil
		}
		return v.OperatingStandard
	}).(pulumi.StringPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) PowerLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *int {
		if v == nil {
			return nil
		}
		return v.PowerLevel
	}).(pulumi.IntPtrOutput)
}

func (o ExtenderprofileWifiRadio2PtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderprofileWifiRadio2) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ExtenderprofileWifiRadio2LocalVap struct {
	// Wi-Fi local VAP name.
	Name *string `pulumi:"name"`
}

// ExtenderprofileWifiRadio2LocalVapInput is an input type that accepts ExtenderprofileWifiRadio2LocalVapArgs and ExtenderprofileWifiRadio2LocalVapOutput values.
// You can construct a concrete instance of `ExtenderprofileWifiRadio2LocalVapInput` via:
//
//	ExtenderprofileWifiRadio2LocalVapArgs{...}
type ExtenderprofileWifiRadio2LocalVapInput interface {
	pulumi.Input

	ToExtenderprofileWifiRadio2LocalVapOutput() ExtenderprofileWifiRadio2LocalVapOutput
	ToExtenderprofileWifiRadio2LocalVapOutputWithContext(context.Context) ExtenderprofileWifiRadio2LocalVapOutput
}

type ExtenderprofileWifiRadio2LocalVapArgs struct {
	// Wi-Fi local VAP name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExtenderprofileWifiRadio2LocalVapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileWifiRadio2LocalVap)(nil)).Elem()
}

func (i ExtenderprofileWifiRadio2LocalVapArgs) ToExtenderprofileWifiRadio2LocalVapOutput() ExtenderprofileWifiRadio2LocalVapOutput {
	return i.ToExtenderprofileWifiRadio2LocalVapOutputWithContext(context.Background())
}

func (i ExtenderprofileWifiRadio2LocalVapArgs) ToExtenderprofileWifiRadio2LocalVapOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio2LocalVapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiRadio2LocalVapOutput)
}

// ExtenderprofileWifiRadio2LocalVapArrayInput is an input type that accepts ExtenderprofileWifiRadio2LocalVapArray and ExtenderprofileWifiRadio2LocalVapArrayOutput values.
// You can construct a concrete instance of `ExtenderprofileWifiRadio2LocalVapArrayInput` via:
//
//	ExtenderprofileWifiRadio2LocalVapArray{ ExtenderprofileWifiRadio2LocalVapArgs{...} }
type ExtenderprofileWifiRadio2LocalVapArrayInput interface {
	pulumi.Input

	ToExtenderprofileWifiRadio2LocalVapArrayOutput() ExtenderprofileWifiRadio2LocalVapArrayOutput
	ToExtenderprofileWifiRadio2LocalVapArrayOutputWithContext(context.Context) ExtenderprofileWifiRadio2LocalVapArrayOutput
}

type ExtenderprofileWifiRadio2LocalVapArray []ExtenderprofileWifiRadio2LocalVapInput

func (ExtenderprofileWifiRadio2LocalVapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtenderprofileWifiRadio2LocalVap)(nil)).Elem()
}

func (i ExtenderprofileWifiRadio2LocalVapArray) ToExtenderprofileWifiRadio2LocalVapArrayOutput() ExtenderprofileWifiRadio2LocalVapArrayOutput {
	return i.ToExtenderprofileWifiRadio2LocalVapArrayOutputWithContext(context.Background())
}

func (i ExtenderprofileWifiRadio2LocalVapArray) ToExtenderprofileWifiRadio2LocalVapArrayOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio2LocalVapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderprofileWifiRadio2LocalVapArrayOutput)
}

type ExtenderprofileWifiRadio2LocalVapOutput struct{ *pulumi.OutputState }

func (ExtenderprofileWifiRadio2LocalVapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtenderprofileWifiRadio2LocalVap)(nil)).Elem()
}

func (o ExtenderprofileWifiRadio2LocalVapOutput) ToExtenderprofileWifiRadio2LocalVapOutput() ExtenderprofileWifiRadio2LocalVapOutput {
	return o
}

func (o ExtenderprofileWifiRadio2LocalVapOutput) ToExtenderprofileWifiRadio2LocalVapOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio2LocalVapOutput {
	return o
}

// Wi-Fi local VAP name.
func (o ExtenderprofileWifiRadio2LocalVapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtenderprofileWifiRadio2LocalVap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExtenderprofileWifiRadio2LocalVapArrayOutput struct{ *pulumi.OutputState }

func (ExtenderprofileWifiRadio2LocalVapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtenderprofileWifiRadio2LocalVap)(nil)).Elem()
}

func (o ExtenderprofileWifiRadio2LocalVapArrayOutput) ToExtenderprofileWifiRadio2LocalVapArrayOutput() ExtenderprofileWifiRadio2LocalVapArrayOutput {
	return o
}

func (o ExtenderprofileWifiRadio2LocalVapArrayOutput) ToExtenderprofileWifiRadio2LocalVapArrayOutputWithContext(ctx context.Context) ExtenderprofileWifiRadio2LocalVapArrayOutput {
	return o
}

func (o ExtenderprofileWifiRadio2LocalVapArrayOutput) Index(i pulumi.IntInput) ExtenderprofileWifiRadio2LocalVapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtenderprofileWifiRadio2LocalVap {
		return vs[0].([]ExtenderprofileWifiRadio2LocalVap)[vs[1].(int)]
	}).(ExtenderprofileWifiRadio2LocalVapOutput)
}

type FortigateprofileLanExtension struct {
	// IPsec phase1 interface.
	BackhaulInterface *string `pulumi:"backhaulInterface"`
	// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
	BackhaulIp *string `pulumi:"backhaulIp"`
	// IPsec tunnel name.
	IpsecTunnel *string `pulumi:"ipsecTunnel"`
}

// FortigateprofileLanExtensionInput is an input type that accepts FortigateprofileLanExtensionArgs and FortigateprofileLanExtensionOutput values.
// You can construct a concrete instance of `FortigateprofileLanExtensionInput` via:
//
//	FortigateprofileLanExtensionArgs{...}
type FortigateprofileLanExtensionInput interface {
	pulumi.Input

	ToFortigateprofileLanExtensionOutput() FortigateprofileLanExtensionOutput
	ToFortigateprofileLanExtensionOutputWithContext(context.Context) FortigateprofileLanExtensionOutput
}

type FortigateprofileLanExtensionArgs struct {
	// IPsec phase1 interface.
	BackhaulInterface pulumi.StringPtrInput `pulumi:"backhaulInterface"`
	// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
	BackhaulIp pulumi.StringPtrInput `pulumi:"backhaulIp"`
	// IPsec tunnel name.
	IpsecTunnel pulumi.StringPtrInput `pulumi:"ipsecTunnel"`
}

func (FortigateprofileLanExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FortigateprofileLanExtension)(nil)).Elem()
}

func (i FortigateprofileLanExtensionArgs) ToFortigateprofileLanExtensionOutput() FortigateprofileLanExtensionOutput {
	return i.ToFortigateprofileLanExtensionOutputWithContext(context.Background())
}

func (i FortigateprofileLanExtensionArgs) ToFortigateprofileLanExtensionOutputWithContext(ctx context.Context) FortigateprofileLanExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortigateprofileLanExtensionOutput)
}

func (i FortigateprofileLanExtensionArgs) ToFortigateprofileLanExtensionPtrOutput() FortigateprofileLanExtensionPtrOutput {
	return i.ToFortigateprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (i FortigateprofileLanExtensionArgs) ToFortigateprofileLanExtensionPtrOutputWithContext(ctx context.Context) FortigateprofileLanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortigateprofileLanExtensionOutput).ToFortigateprofileLanExtensionPtrOutputWithContext(ctx)
}

// FortigateprofileLanExtensionPtrInput is an input type that accepts FortigateprofileLanExtensionArgs, FortigateprofileLanExtensionPtr and FortigateprofileLanExtensionPtrOutput values.
// You can construct a concrete instance of `FortigateprofileLanExtensionPtrInput` via:
//
//	        FortigateprofileLanExtensionArgs{...}
//
//	or:
//
//	        nil
type FortigateprofileLanExtensionPtrInput interface {
	pulumi.Input

	ToFortigateprofileLanExtensionPtrOutput() FortigateprofileLanExtensionPtrOutput
	ToFortigateprofileLanExtensionPtrOutputWithContext(context.Context) FortigateprofileLanExtensionPtrOutput
}

type fortigateprofileLanExtensionPtrType FortigateprofileLanExtensionArgs

func FortigateprofileLanExtensionPtr(v *FortigateprofileLanExtensionArgs) FortigateprofileLanExtensionPtrInput {
	return (*fortigateprofileLanExtensionPtrType)(v)
}

func (*fortigateprofileLanExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FortigateprofileLanExtension)(nil)).Elem()
}

func (i *fortigateprofileLanExtensionPtrType) ToFortigateprofileLanExtensionPtrOutput() FortigateprofileLanExtensionPtrOutput {
	return i.ToFortigateprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (i *fortigateprofileLanExtensionPtrType) ToFortigateprofileLanExtensionPtrOutputWithContext(ctx context.Context) FortigateprofileLanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortigateprofileLanExtensionPtrOutput)
}

type FortigateprofileLanExtensionOutput struct{ *pulumi.OutputState }

func (FortigateprofileLanExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FortigateprofileLanExtension)(nil)).Elem()
}

func (o FortigateprofileLanExtensionOutput) ToFortigateprofileLanExtensionOutput() FortigateprofileLanExtensionOutput {
	return o
}

func (o FortigateprofileLanExtensionOutput) ToFortigateprofileLanExtensionOutputWithContext(ctx context.Context) FortigateprofileLanExtensionOutput {
	return o
}

func (o FortigateprofileLanExtensionOutput) ToFortigateprofileLanExtensionPtrOutput() FortigateprofileLanExtensionPtrOutput {
	return o.ToFortigateprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (o FortigateprofileLanExtensionOutput) ToFortigateprofileLanExtensionPtrOutputWithContext(ctx context.Context) FortigateprofileLanExtensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FortigateprofileLanExtension) *FortigateprofileLanExtension {
		return &v
	}).(FortigateprofileLanExtensionPtrOutput)
}

// IPsec phase1 interface.
func (o FortigateprofileLanExtensionOutput) BackhaulInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FortigateprofileLanExtension) *string { return v.BackhaulInterface }).(pulumi.StringPtrOutput)
}

// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
func (o FortigateprofileLanExtensionOutput) BackhaulIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FortigateprofileLanExtension) *string { return v.BackhaulIp }).(pulumi.StringPtrOutput)
}

// IPsec tunnel name.
func (o FortigateprofileLanExtensionOutput) IpsecTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FortigateprofileLanExtension) *string { return v.IpsecTunnel }).(pulumi.StringPtrOutput)
}

type FortigateprofileLanExtensionPtrOutput struct{ *pulumi.OutputState }

func (FortigateprofileLanExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FortigateprofileLanExtension)(nil)).Elem()
}

func (o FortigateprofileLanExtensionPtrOutput) ToFortigateprofileLanExtensionPtrOutput() FortigateprofileLanExtensionPtrOutput {
	return o
}

func (o FortigateprofileLanExtensionPtrOutput) ToFortigateprofileLanExtensionPtrOutputWithContext(ctx context.Context) FortigateprofileLanExtensionPtrOutput {
	return o
}

func (o FortigateprofileLanExtensionPtrOutput) Elem() FortigateprofileLanExtensionOutput {
	return o.ApplyT(func(v *FortigateprofileLanExtension) FortigateprofileLanExtension {
		if v != nil {
			return *v
		}
		var ret FortigateprofileLanExtension
		return ret
	}).(FortigateprofileLanExtensionOutput)
}

// IPsec phase1 interface.
func (o FortigateprofileLanExtensionPtrOutput) BackhaulInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortigateprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.BackhaulInterface
	}).(pulumi.StringPtrOutput)
}

// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
func (o FortigateprofileLanExtensionPtrOutput) BackhaulIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortigateprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.BackhaulIp
	}).(pulumi.StringPtrOutput)
}

// IPsec tunnel name.
func (o FortigateprofileLanExtensionPtrOutput) IpsecTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortigateprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.IpsecTunnel
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderWanExtensionInput)(nil)).Elem(), ExtenderWanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderWanExtensionPtrInput)(nil)).Elem(), ExtenderWanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularInput)(nil)).Elem(), ExtenderprofileCellularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularPtrInput)(nil)).Elem(), ExtenderprofileCellularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularControllerReportInput)(nil)).Elem(), ExtenderprofileCellularControllerReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularControllerReportPtrInput)(nil)).Elem(), ExtenderprofileCellularControllerReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularDataplanInput)(nil)).Elem(), ExtenderprofileCellularDataplanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularDataplanArrayInput)(nil)).Elem(), ExtenderprofileCellularDataplanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularModem1Input)(nil)).Elem(), ExtenderprofileCellularModem1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularModem1PtrInput)(nil)).Elem(), ExtenderprofileCellularModem1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularModem1AutoSwitchInput)(nil)).Elem(), ExtenderprofileCellularModem1AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularModem1AutoSwitchPtrInput)(nil)).Elem(), ExtenderprofileCellularModem1AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularModem2Input)(nil)).Elem(), ExtenderprofileCellularModem2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularModem2PtrInput)(nil)).Elem(), ExtenderprofileCellularModem2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularModem2AutoSwitchInput)(nil)).Elem(), ExtenderprofileCellularModem2AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularModem2AutoSwitchPtrInput)(nil)).Elem(), ExtenderprofileCellularModem2AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularSmsNotificationInput)(nil)).Elem(), ExtenderprofileCellularSmsNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularSmsNotificationPtrInput)(nil)).Elem(), ExtenderprofileCellularSmsNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularSmsNotificationAlertInput)(nil)).Elem(), ExtenderprofileCellularSmsNotificationAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularSmsNotificationAlertPtrInput)(nil)).Elem(), ExtenderprofileCellularSmsNotificationAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularSmsNotificationReceiverInput)(nil)).Elem(), ExtenderprofileCellularSmsNotificationReceiverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileCellularSmsNotificationReceiverArrayInput)(nil)).Elem(), ExtenderprofileCellularSmsNotificationReceiverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileLanExtensionInput)(nil)).Elem(), ExtenderprofileLanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileLanExtensionPtrInput)(nil)).Elem(), ExtenderprofileLanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileLanExtensionBackhaulInput)(nil)).Elem(), ExtenderprofileLanExtensionBackhaulArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileLanExtensionBackhaulArrayInput)(nil)).Elem(), ExtenderprofileLanExtensionBackhaulArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileWifiInput)(nil)).Elem(), ExtenderprofileWifiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileWifiPtrInput)(nil)).Elem(), ExtenderprofileWifiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileWifiRadio1Input)(nil)).Elem(), ExtenderprofileWifiRadio1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileWifiRadio1PtrInput)(nil)).Elem(), ExtenderprofileWifiRadio1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileWifiRadio1LocalVapInput)(nil)).Elem(), ExtenderprofileWifiRadio1LocalVapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileWifiRadio1LocalVapArrayInput)(nil)).Elem(), ExtenderprofileWifiRadio1LocalVapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileWifiRadio2Input)(nil)).Elem(), ExtenderprofileWifiRadio2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileWifiRadio2PtrInput)(nil)).Elem(), ExtenderprofileWifiRadio2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileWifiRadio2LocalVapInput)(nil)).Elem(), ExtenderprofileWifiRadio2LocalVapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderprofileWifiRadio2LocalVapArrayInput)(nil)).Elem(), ExtenderprofileWifiRadio2LocalVapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortigateprofileLanExtensionInput)(nil)).Elem(), FortigateprofileLanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortigateprofileLanExtensionPtrInput)(nil)).Elem(), FortigateprofileLanExtensionArgs{})
	pulumi.RegisterOutputType(ExtenderWanExtensionOutput{})
	pulumi.RegisterOutputType(ExtenderWanExtensionPtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularPtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularControllerReportOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularControllerReportPtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularDataplanOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularDataplanArrayOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularModem1Output{})
	pulumi.RegisterOutputType(ExtenderprofileCellularModem1PtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularModem1AutoSwitchOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularModem1AutoSwitchPtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularModem2Output{})
	pulumi.RegisterOutputType(ExtenderprofileCellularModem2PtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularModem2AutoSwitchOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularModem2AutoSwitchPtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularSmsNotificationOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularSmsNotificationPtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularSmsNotificationAlertOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularSmsNotificationAlertPtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularSmsNotificationReceiverOutput{})
	pulumi.RegisterOutputType(ExtenderprofileCellularSmsNotificationReceiverArrayOutput{})
	pulumi.RegisterOutputType(ExtenderprofileLanExtensionOutput{})
	pulumi.RegisterOutputType(ExtenderprofileLanExtensionPtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileLanExtensionBackhaulOutput{})
	pulumi.RegisterOutputType(ExtenderprofileLanExtensionBackhaulArrayOutput{})
	pulumi.RegisterOutputType(ExtenderprofileWifiOutput{})
	pulumi.RegisterOutputType(ExtenderprofileWifiPtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileWifiRadio1Output{})
	pulumi.RegisterOutputType(ExtenderprofileWifiRadio1PtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileWifiRadio1LocalVapOutput{})
	pulumi.RegisterOutputType(ExtenderprofileWifiRadio1LocalVapArrayOutput{})
	pulumi.RegisterOutputType(ExtenderprofileWifiRadio2Output{})
	pulumi.RegisterOutputType(ExtenderprofileWifiRadio2PtrOutput{})
	pulumi.RegisterOutputType(ExtenderprofileWifiRadio2LocalVapOutput{})
	pulumi.RegisterOutputType(ExtenderprofileWifiRadio2LocalVapArrayOutput{})
	pulumi.RegisterOutputType(FortigateprofileLanExtensionOutput{})
	pulumi.RegisterOutputType(FortigateprofileLanExtensionPtrOutput{})
}
