// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package switchcontroller

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure FortiSwitch sFlow.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/switchcontroller"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := switchcontroller.NewSflow(ctx, "trname", &switchcontroller.SflowArgs{
//				CollectorIp:   pulumi.String("0.0.0.0"),
//				CollectorPort: pulumi.Int(6343),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SwitchController Sflow can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:switchcontroller/sflow:Sflow labelname SwitchControllerSflow
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:switchcontroller/sflow:Sflow labelname SwitchControllerSflow
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Sflow struct {
	pulumi.CustomResourceState

	// Collector IP.
	CollectorIp pulumi.StringOutput `pulumi:"collectorIp"`
	// SFlow collector port (0 - 65535).
	CollectorPort pulumi.IntOutput `pulumi:"collectorPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSflow registers a new resource with the given unique name, arguments, and options.
func NewSflow(ctx *pulumi.Context,
	name string, args *SflowArgs, opts ...pulumi.ResourceOption) (*Sflow, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CollectorIp == nil {
		return nil, errors.New("invalid value for required argument 'CollectorIp'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Sflow
	err := ctx.RegisterResource("fortios:switchcontroller/sflow:Sflow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSflow gets an existing Sflow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSflow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SflowState, opts ...pulumi.ResourceOption) (*Sflow, error) {
	var resource Sflow
	err := ctx.ReadResource("fortios:switchcontroller/sflow:Sflow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Sflow resources.
type sflowState struct {
	// Collector IP.
	CollectorIp *string `pulumi:"collectorIp"`
	// SFlow collector port (0 - 65535).
	CollectorPort *int `pulumi:"collectorPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SflowState struct {
	// Collector IP.
	CollectorIp pulumi.StringPtrInput
	// SFlow collector port (0 - 65535).
	CollectorPort pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SflowState) ElementType() reflect.Type {
	return reflect.TypeOf((*sflowState)(nil)).Elem()
}

type sflowArgs struct {
	// Collector IP.
	CollectorIp string `pulumi:"collectorIp"`
	// SFlow collector port (0 - 65535).
	CollectorPort *int `pulumi:"collectorPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Sflow resource.
type SflowArgs struct {
	// Collector IP.
	CollectorIp pulumi.StringInput
	// SFlow collector port (0 - 65535).
	CollectorPort pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sflowArgs)(nil)).Elem()
}

type SflowInput interface {
	pulumi.Input

	ToSflowOutput() SflowOutput
	ToSflowOutputWithContext(ctx context.Context) SflowOutput
}

func (*Sflow) ElementType() reflect.Type {
	return reflect.TypeOf((**Sflow)(nil)).Elem()
}

func (i *Sflow) ToSflowOutput() SflowOutput {
	return i.ToSflowOutputWithContext(context.Background())
}

func (i *Sflow) ToSflowOutputWithContext(ctx context.Context) SflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SflowOutput)
}

// SflowArrayInput is an input type that accepts SflowArray and SflowArrayOutput values.
// You can construct a concrete instance of `SflowArrayInput` via:
//
//	SflowArray{ SflowArgs{...} }
type SflowArrayInput interface {
	pulumi.Input

	ToSflowArrayOutput() SflowArrayOutput
	ToSflowArrayOutputWithContext(context.Context) SflowArrayOutput
}

type SflowArray []SflowInput

func (SflowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Sflow)(nil)).Elem()
}

func (i SflowArray) ToSflowArrayOutput() SflowArrayOutput {
	return i.ToSflowArrayOutputWithContext(context.Background())
}

func (i SflowArray) ToSflowArrayOutputWithContext(ctx context.Context) SflowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SflowArrayOutput)
}

// SflowMapInput is an input type that accepts SflowMap and SflowMapOutput values.
// You can construct a concrete instance of `SflowMapInput` via:
//
//	SflowMap{ "key": SflowArgs{...} }
type SflowMapInput interface {
	pulumi.Input

	ToSflowMapOutput() SflowMapOutput
	ToSflowMapOutputWithContext(context.Context) SflowMapOutput
}

type SflowMap map[string]SflowInput

func (SflowMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Sflow)(nil)).Elem()
}

func (i SflowMap) ToSflowMapOutput() SflowMapOutput {
	return i.ToSflowMapOutputWithContext(context.Background())
}

func (i SflowMap) ToSflowMapOutputWithContext(ctx context.Context) SflowMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SflowMapOutput)
}

type SflowOutput struct{ *pulumi.OutputState }

func (SflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sflow)(nil)).Elem()
}

func (o SflowOutput) ToSflowOutput() SflowOutput {
	return o
}

func (o SflowOutput) ToSflowOutputWithContext(ctx context.Context) SflowOutput {
	return o
}

// Collector IP.
func (o SflowOutput) CollectorIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Sflow) pulumi.StringOutput { return v.CollectorIp }).(pulumi.StringOutput)
}

// SFlow collector port (0 - 65535).
func (o SflowOutput) CollectorPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Sflow) pulumi.IntOutput { return v.CollectorPort }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SflowOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sflow) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SflowArrayOutput struct{ *pulumi.OutputState }

func (SflowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Sflow)(nil)).Elem()
}

func (o SflowArrayOutput) ToSflowArrayOutput() SflowArrayOutput {
	return o
}

func (o SflowArrayOutput) ToSflowArrayOutputWithContext(ctx context.Context) SflowArrayOutput {
	return o
}

func (o SflowArrayOutput) Index(i pulumi.IntInput) SflowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Sflow {
		return vs[0].([]*Sflow)[vs[1].(int)]
	}).(SflowOutput)
}

type SflowMapOutput struct{ *pulumi.OutputState }

func (SflowMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Sflow)(nil)).Elem()
}

func (o SflowMapOutput) ToSflowMapOutput() SflowMapOutput {
	return o
}

func (o SflowMapOutput) ToSflowMapOutputWithContext(ctx context.Context) SflowMapOutput {
	return o
}

func (o SflowMapOutput) MapIndex(k pulumi.StringInput) SflowOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Sflow {
		return vs[0].(map[string]*Sflow)[vs[1].(string)]
	}).(SflowOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SflowInput)(nil)).Elem(), &Sflow{})
	pulumi.RegisterInputType(reflect.TypeOf((*SflowArrayInput)(nil)).Elem(), SflowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SflowMapInput)(nil)).Elem(), SflowMap{})
	pulumi.RegisterOutputType(SflowOutput{})
	pulumi.RegisterOutputType(SflowArrayOutput{})
	pulumi.RegisterOutputType(SflowMapOutput{})
}
