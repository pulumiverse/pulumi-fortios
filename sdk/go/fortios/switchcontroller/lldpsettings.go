// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package switchcontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure FortiSwitch LLDP settings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/switchcontroller"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := switchcontroller.NewLldpsettings(ctx, "trname", &switchcontroller.LldpsettingsArgs{
//				FastStartInterval:   pulumi.Int(2),
//				ManagementInterface: pulumi.String("internal"),
//				Status:              pulumi.String("enable"),
//				TxHold:              pulumi.Int(4),
//				TxInterval:          pulumi.Int(30),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SwitchController LldpSettings can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:switchcontroller/lldpsettings:Lldpsettings labelname SwitchControllerLldpSettings
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:switchcontroller/lldpsettings:Lldpsettings labelname SwitchControllerLldpSettings
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Lldpsettings struct {
	pulumi.CustomResourceState

	// Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
	DeviceDetection pulumi.StringOutput `pulumi:"deviceDetection"`
	// Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
	FastStartInterval pulumi.IntOutput `pulumi:"fastStartInterval"`
	// Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
	ManagementInterface pulumi.StringOutput `pulumi:"managementInterface"`
	// Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
	TxHold pulumi.IntOutput `pulumi:"txHold"`
	// Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
	TxInterval pulumi.IntOutput `pulumi:"txInterval"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewLldpsettings registers a new resource with the given unique name, arguments, and options.
func NewLldpsettings(ctx *pulumi.Context,
	name string, args *LldpsettingsArgs, opts ...pulumi.ResourceOption) (*Lldpsettings, error) {
	if args == nil {
		args = &LldpsettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Lldpsettings
	err := ctx.RegisterResource("fortios:switchcontroller/lldpsettings:Lldpsettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLldpsettings gets an existing Lldpsettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLldpsettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LldpsettingsState, opts ...pulumi.ResourceOption) (*Lldpsettings, error) {
	var resource Lldpsettings
	err := ctx.ReadResource("fortios:switchcontroller/lldpsettings:Lldpsettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Lldpsettings resources.
type lldpsettingsState struct {
	// Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
	DeviceDetection *string `pulumi:"deviceDetection"`
	// Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
	FastStartInterval *int `pulumi:"fastStartInterval"`
	// Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
	ManagementInterface *string `pulumi:"managementInterface"`
	// Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
	TxHold *int `pulumi:"txHold"`
	// Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
	TxInterval *int `pulumi:"txInterval"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type LldpsettingsState struct {
	// Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
	DeviceDetection pulumi.StringPtrInput
	// Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
	FastStartInterval pulumi.IntPtrInput
	// Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
	ManagementInterface pulumi.StringPtrInput
	// Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
	TxHold pulumi.IntPtrInput
	// Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
	TxInterval pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (LldpsettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*lldpsettingsState)(nil)).Elem()
}

type lldpsettingsArgs struct {
	// Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
	DeviceDetection *string `pulumi:"deviceDetection"`
	// Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
	FastStartInterval *int `pulumi:"fastStartInterval"`
	// Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
	ManagementInterface *string `pulumi:"managementInterface"`
	// Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
	TxHold *int `pulumi:"txHold"`
	// Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
	TxInterval *int `pulumi:"txInterval"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Lldpsettings resource.
type LldpsettingsArgs struct {
	// Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
	DeviceDetection pulumi.StringPtrInput
	// Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
	FastStartInterval pulumi.IntPtrInput
	// Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
	ManagementInterface pulumi.StringPtrInput
	// Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
	TxHold pulumi.IntPtrInput
	// Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
	TxInterval pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (LldpsettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lldpsettingsArgs)(nil)).Elem()
}

type LldpsettingsInput interface {
	pulumi.Input

	ToLldpsettingsOutput() LldpsettingsOutput
	ToLldpsettingsOutputWithContext(ctx context.Context) LldpsettingsOutput
}

func (*Lldpsettings) ElementType() reflect.Type {
	return reflect.TypeOf((**Lldpsettings)(nil)).Elem()
}

func (i *Lldpsettings) ToLldpsettingsOutput() LldpsettingsOutput {
	return i.ToLldpsettingsOutputWithContext(context.Background())
}

func (i *Lldpsettings) ToLldpsettingsOutputWithContext(ctx context.Context) LldpsettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LldpsettingsOutput)
}

// LldpsettingsArrayInput is an input type that accepts LldpsettingsArray and LldpsettingsArrayOutput values.
// You can construct a concrete instance of `LldpsettingsArrayInput` via:
//
//	LldpsettingsArray{ LldpsettingsArgs{...} }
type LldpsettingsArrayInput interface {
	pulumi.Input

	ToLldpsettingsArrayOutput() LldpsettingsArrayOutput
	ToLldpsettingsArrayOutputWithContext(context.Context) LldpsettingsArrayOutput
}

type LldpsettingsArray []LldpsettingsInput

func (LldpsettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Lldpsettings)(nil)).Elem()
}

func (i LldpsettingsArray) ToLldpsettingsArrayOutput() LldpsettingsArrayOutput {
	return i.ToLldpsettingsArrayOutputWithContext(context.Background())
}

func (i LldpsettingsArray) ToLldpsettingsArrayOutputWithContext(ctx context.Context) LldpsettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LldpsettingsArrayOutput)
}

// LldpsettingsMapInput is an input type that accepts LldpsettingsMap and LldpsettingsMapOutput values.
// You can construct a concrete instance of `LldpsettingsMapInput` via:
//
//	LldpsettingsMap{ "key": LldpsettingsArgs{...} }
type LldpsettingsMapInput interface {
	pulumi.Input

	ToLldpsettingsMapOutput() LldpsettingsMapOutput
	ToLldpsettingsMapOutputWithContext(context.Context) LldpsettingsMapOutput
}

type LldpsettingsMap map[string]LldpsettingsInput

func (LldpsettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Lldpsettings)(nil)).Elem()
}

func (i LldpsettingsMap) ToLldpsettingsMapOutput() LldpsettingsMapOutput {
	return i.ToLldpsettingsMapOutputWithContext(context.Background())
}

func (i LldpsettingsMap) ToLldpsettingsMapOutputWithContext(ctx context.Context) LldpsettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LldpsettingsMapOutput)
}

type LldpsettingsOutput struct{ *pulumi.OutputState }

func (LldpsettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Lldpsettings)(nil)).Elem()
}

func (o LldpsettingsOutput) ToLldpsettingsOutput() LldpsettingsOutput {
	return o
}

func (o LldpsettingsOutput) ToLldpsettingsOutputWithContext(ctx context.Context) LldpsettingsOutput {
	return o
}

// Enable/disable dynamic detection of LLDP neighbor devices for VLAN assignment. Valid values: `disable`, `enable`.
func (o LldpsettingsOutput) DeviceDetection() pulumi.StringOutput {
	return o.ApplyT(func(v *Lldpsettings) pulumi.StringOutput { return v.DeviceDetection }).(pulumi.StringOutput)
}

// Frequency of LLDP PDU transmission from FortiSwitch for the first 4 packets when the link is up (2 - 5 sec, default = 2, 0 = disable fast start).
func (o LldpsettingsOutput) FastStartInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Lldpsettings) pulumi.IntOutput { return v.FastStartInterval }).(pulumi.IntOutput)
}

// Primary management interface to be advertised in LLDP and CDP PDUs. Valid values: `internal`, `mgmt`.
func (o LldpsettingsOutput) ManagementInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *Lldpsettings) pulumi.StringOutput { return v.ManagementInterface }).(pulumi.StringOutput)
}

// Enable/disable LLDP global settings. Valid values: `enable`, `disable`.
func (o LldpsettingsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Lldpsettings) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Number of tx-intervals before local LLDP data expires (1 - 16, default = 4). Packet TTL is tx-hold * tx-interval.
func (o LldpsettingsOutput) TxHold() pulumi.IntOutput {
	return o.ApplyT(func(v *Lldpsettings) pulumi.IntOutput { return v.TxHold }).(pulumi.IntOutput)
}

// Frequency of LLDP PDU transmission from FortiSwitch (5 - 4095 sec, default = 30). Packet TTL is tx-hold * tx-interval.
func (o LldpsettingsOutput) TxInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Lldpsettings) pulumi.IntOutput { return v.TxInterval }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o LldpsettingsOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Lldpsettings) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type LldpsettingsArrayOutput struct{ *pulumi.OutputState }

func (LldpsettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Lldpsettings)(nil)).Elem()
}

func (o LldpsettingsArrayOutput) ToLldpsettingsArrayOutput() LldpsettingsArrayOutput {
	return o
}

func (o LldpsettingsArrayOutput) ToLldpsettingsArrayOutputWithContext(ctx context.Context) LldpsettingsArrayOutput {
	return o
}

func (o LldpsettingsArrayOutput) Index(i pulumi.IntInput) LldpsettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Lldpsettings {
		return vs[0].([]*Lldpsettings)[vs[1].(int)]
	}).(LldpsettingsOutput)
}

type LldpsettingsMapOutput struct{ *pulumi.OutputState }

func (LldpsettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Lldpsettings)(nil)).Elem()
}

func (o LldpsettingsMapOutput) ToLldpsettingsMapOutput() LldpsettingsMapOutput {
	return o
}

func (o LldpsettingsMapOutput) ToLldpsettingsMapOutputWithContext(ctx context.Context) LldpsettingsMapOutput {
	return o
}

func (o LldpsettingsMapOutput) MapIndex(k pulumi.StringInput) LldpsettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Lldpsettings {
		return vs[0].(map[string]*Lldpsettings)[vs[1].(string)]
	}).(LldpsettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LldpsettingsInput)(nil)).Elem(), &Lldpsettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*LldpsettingsArrayInput)(nil)).Elem(), LldpsettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LldpsettingsMapInput)(nil)).Elem(), LldpsettingsMap{})
	pulumi.RegisterOutputType(LldpsettingsOutput{})
	pulumi.RegisterOutputType(LldpsettingsArrayOutput{})
	pulumi.RegisterOutputType(LldpsettingsMapOutput{})
}
