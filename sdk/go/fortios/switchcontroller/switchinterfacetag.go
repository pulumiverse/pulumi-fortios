// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package switchcontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure switch object tags.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/switchcontroller"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := switchcontroller.NewSwitchinterfacetag(ctx, "trname", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SwitchController SwitchInterfaceTag can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:switchcontroller/switchinterfacetag:Switchinterfacetag labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:switchcontroller/switchinterfacetag:Switchinterfacetag labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Switchinterfacetag struct {
	pulumi.CustomResourceState

	// Tag name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchinterfacetag registers a new resource with the given unique name, arguments, and options.
func NewSwitchinterfacetag(ctx *pulumi.Context,
	name string, args *SwitchinterfacetagArgs, opts ...pulumi.ResourceOption) (*Switchinterfacetag, error) {
	if args == nil {
		args = &SwitchinterfacetagArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Switchinterfacetag
	err := ctx.RegisterResource("fortios:switchcontroller/switchinterfacetag:Switchinterfacetag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchinterfacetag gets an existing Switchinterfacetag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchinterfacetag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchinterfacetagState, opts ...pulumi.ResourceOption) (*Switchinterfacetag, error) {
	var resource Switchinterfacetag
	err := ctx.ReadResource("fortios:switchcontroller/switchinterfacetag:Switchinterfacetag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Switchinterfacetag resources.
type switchinterfacetagState struct {
	// Tag name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SwitchinterfacetagState struct {
	// Tag name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchinterfacetagState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchinterfacetagState)(nil)).Elem()
}

type switchinterfacetagArgs struct {
	// Tag name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Switchinterfacetag resource.
type SwitchinterfacetagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchinterfacetagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchinterfacetagArgs)(nil)).Elem()
}

type SwitchinterfacetagInput interface {
	pulumi.Input

	ToSwitchinterfacetagOutput() SwitchinterfacetagOutput
	ToSwitchinterfacetagOutputWithContext(ctx context.Context) SwitchinterfacetagOutput
}

func (*Switchinterfacetag) ElementType() reflect.Type {
	return reflect.TypeOf((**Switchinterfacetag)(nil)).Elem()
}

func (i *Switchinterfacetag) ToSwitchinterfacetagOutput() SwitchinterfacetagOutput {
	return i.ToSwitchinterfacetagOutputWithContext(context.Background())
}

func (i *Switchinterfacetag) ToSwitchinterfacetagOutputWithContext(ctx context.Context) SwitchinterfacetagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchinterfacetagOutput)
}

// SwitchinterfacetagArrayInput is an input type that accepts SwitchinterfacetagArray and SwitchinterfacetagArrayOutput values.
// You can construct a concrete instance of `SwitchinterfacetagArrayInput` via:
//
//	SwitchinterfacetagArray{ SwitchinterfacetagArgs{...} }
type SwitchinterfacetagArrayInput interface {
	pulumi.Input

	ToSwitchinterfacetagArrayOutput() SwitchinterfacetagArrayOutput
	ToSwitchinterfacetagArrayOutputWithContext(context.Context) SwitchinterfacetagArrayOutput
}

type SwitchinterfacetagArray []SwitchinterfacetagInput

func (SwitchinterfacetagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Switchinterfacetag)(nil)).Elem()
}

func (i SwitchinterfacetagArray) ToSwitchinterfacetagArrayOutput() SwitchinterfacetagArrayOutput {
	return i.ToSwitchinterfacetagArrayOutputWithContext(context.Background())
}

func (i SwitchinterfacetagArray) ToSwitchinterfacetagArrayOutputWithContext(ctx context.Context) SwitchinterfacetagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchinterfacetagArrayOutput)
}

// SwitchinterfacetagMapInput is an input type that accepts SwitchinterfacetagMap and SwitchinterfacetagMapOutput values.
// You can construct a concrete instance of `SwitchinterfacetagMapInput` via:
//
//	SwitchinterfacetagMap{ "key": SwitchinterfacetagArgs{...} }
type SwitchinterfacetagMapInput interface {
	pulumi.Input

	ToSwitchinterfacetagMapOutput() SwitchinterfacetagMapOutput
	ToSwitchinterfacetagMapOutputWithContext(context.Context) SwitchinterfacetagMapOutput
}

type SwitchinterfacetagMap map[string]SwitchinterfacetagInput

func (SwitchinterfacetagMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Switchinterfacetag)(nil)).Elem()
}

func (i SwitchinterfacetagMap) ToSwitchinterfacetagMapOutput() SwitchinterfacetagMapOutput {
	return i.ToSwitchinterfacetagMapOutputWithContext(context.Background())
}

func (i SwitchinterfacetagMap) ToSwitchinterfacetagMapOutputWithContext(ctx context.Context) SwitchinterfacetagMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchinterfacetagMapOutput)
}

type SwitchinterfacetagOutput struct{ *pulumi.OutputState }

func (SwitchinterfacetagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Switchinterfacetag)(nil)).Elem()
}

func (o SwitchinterfacetagOutput) ToSwitchinterfacetagOutput() SwitchinterfacetagOutput {
	return o
}

func (o SwitchinterfacetagOutput) ToSwitchinterfacetagOutputWithContext(ctx context.Context) SwitchinterfacetagOutput {
	return o
}

// Tag name.
func (o SwitchinterfacetagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Switchinterfacetag) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SwitchinterfacetagOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Switchinterfacetag) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchinterfacetagArrayOutput struct{ *pulumi.OutputState }

func (SwitchinterfacetagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Switchinterfacetag)(nil)).Elem()
}

func (o SwitchinterfacetagArrayOutput) ToSwitchinterfacetagArrayOutput() SwitchinterfacetagArrayOutput {
	return o
}

func (o SwitchinterfacetagArrayOutput) ToSwitchinterfacetagArrayOutputWithContext(ctx context.Context) SwitchinterfacetagArrayOutput {
	return o
}

func (o SwitchinterfacetagArrayOutput) Index(i pulumi.IntInput) SwitchinterfacetagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Switchinterfacetag {
		return vs[0].([]*Switchinterfacetag)[vs[1].(int)]
	}).(SwitchinterfacetagOutput)
}

type SwitchinterfacetagMapOutput struct{ *pulumi.OutputState }

func (SwitchinterfacetagMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Switchinterfacetag)(nil)).Elem()
}

func (o SwitchinterfacetagMapOutput) ToSwitchinterfacetagMapOutput() SwitchinterfacetagMapOutput {
	return o
}

func (o SwitchinterfacetagMapOutput) ToSwitchinterfacetagMapOutputWithContext(ctx context.Context) SwitchinterfacetagMapOutput {
	return o
}

func (o SwitchinterfacetagMapOutput) MapIndex(k pulumi.StringInput) SwitchinterfacetagOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Switchinterfacetag {
		return vs[0].(map[string]*Switchinterfacetag)[vs[1].(string)]
	}).(SwitchinterfacetagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchinterfacetagInput)(nil)).Elem(), &Switchinterfacetag{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchinterfacetagArrayInput)(nil)).Elem(), SwitchinterfacetagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchinterfacetagMapInput)(nil)).Elem(), SwitchinterfacetagMap{})
	pulumi.RegisterOutputType(SwitchinterfacetagOutput{})
	pulumi.RegisterOutputType(SwitchinterfacetagArrayOutput{})
	pulumi.RegisterOutputType(SwitchinterfacetagMapOutput{})
}
