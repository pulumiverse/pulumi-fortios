// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package switchcontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure global 802.1X settings.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/switchcontroller"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := switchcontroller.NewSettings8021X(ctx, "trname", &switchcontroller.Settings8021XArgs{
//				LinkDownAuth:     pulumi.String("set-unauth"),
//				MaxReauthAttempt: pulumi.Int(3),
//				ReauthPeriod:     pulumi.Int(12),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// SwitchController 8021XSettings can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:switchcontroller/settings8021X:Settings8021X labelname SwitchController8021XSettings
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:switchcontroller/settings8021X:Settings8021X labelname SwitchController8021XSettings
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Settings8021X struct {
	pulumi.CustomResourceState

	// Interface-reauthentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
	LinkDownAuth pulumi.StringOutput `pulumi:"linkDownAuth"`
	// Enable/disable MAB re-authentication. Valid values: `disable`, `enable`.
	MabReauth pulumi.StringOutput `pulumi:"mabReauth"`
	// MAC called station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacCalledStationDelimiter pulumi.StringOutput `pulumi:"macCalledStationDelimiter"`
	// MAC calling station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacCallingStationDelimiter pulumi.StringOutput `pulumi:"macCallingStationDelimiter"`
	// MAC case (default = lowercase). Valid values: `lowercase`, `uppercase`.
	MacCase pulumi.StringOutput `pulumi:"macCase"`
	// MAC authentication password delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacPasswordDelimiter pulumi.StringOutput `pulumi:"macPasswordDelimiter"`
	// MAC authentication username delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacUsernameDelimiter pulumi.StringOutput `pulumi:"macUsernameDelimiter"`
	// Maximum number of authentication attempts (0 - 15, default = 3).
	MaxReauthAttempt pulumi.IntOutput `pulumi:"maxReauthAttempt"`
	// Period of time to allow for reauthentication (1 - 1440 sec, default = 60, 0 = disable reauthentication).
	ReauthPeriod pulumi.IntOutput `pulumi:"reauthPeriod"`
	// 802.1X Tx period (seconds, default=30).
	TxPeriod pulumi.IntOutput `pulumi:"txPeriod"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSettings8021X registers a new resource with the given unique name, arguments, and options.
func NewSettings8021X(ctx *pulumi.Context,
	name string, args *Settings8021XArgs, opts ...pulumi.ResourceOption) (*Settings8021X, error) {
	if args == nil {
		args = &Settings8021XArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Settings8021X
	err := ctx.RegisterResource("fortios:switchcontroller/settings8021X:Settings8021X", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSettings8021X gets an existing Settings8021X resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSettings8021X(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Settings8021XState, opts ...pulumi.ResourceOption) (*Settings8021X, error) {
	var resource Settings8021X
	err := ctx.ReadResource("fortios:switchcontroller/settings8021X:Settings8021X", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Settings8021X resources.
type settings8021XState struct {
	// Interface-reauthentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
	LinkDownAuth *string `pulumi:"linkDownAuth"`
	// Enable/disable MAB re-authentication. Valid values: `disable`, `enable`.
	MabReauth *string `pulumi:"mabReauth"`
	// MAC called station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacCalledStationDelimiter *string `pulumi:"macCalledStationDelimiter"`
	// MAC calling station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacCallingStationDelimiter *string `pulumi:"macCallingStationDelimiter"`
	// MAC case (default = lowercase). Valid values: `lowercase`, `uppercase`.
	MacCase *string `pulumi:"macCase"`
	// MAC authentication password delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacPasswordDelimiter *string `pulumi:"macPasswordDelimiter"`
	// MAC authentication username delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacUsernameDelimiter *string `pulumi:"macUsernameDelimiter"`
	// Maximum number of authentication attempts (0 - 15, default = 3).
	MaxReauthAttempt *int `pulumi:"maxReauthAttempt"`
	// Period of time to allow for reauthentication (1 - 1440 sec, default = 60, 0 = disable reauthentication).
	ReauthPeriod *int `pulumi:"reauthPeriod"`
	// 802.1X Tx period (seconds, default=30).
	TxPeriod *int `pulumi:"txPeriod"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Settings8021XState struct {
	// Interface-reauthentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
	LinkDownAuth pulumi.StringPtrInput
	// Enable/disable MAB re-authentication. Valid values: `disable`, `enable`.
	MabReauth pulumi.StringPtrInput
	// MAC called station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacCalledStationDelimiter pulumi.StringPtrInput
	// MAC calling station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacCallingStationDelimiter pulumi.StringPtrInput
	// MAC case (default = lowercase). Valid values: `lowercase`, `uppercase`.
	MacCase pulumi.StringPtrInput
	// MAC authentication password delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacPasswordDelimiter pulumi.StringPtrInput
	// MAC authentication username delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacUsernameDelimiter pulumi.StringPtrInput
	// Maximum number of authentication attempts (0 - 15, default = 3).
	MaxReauthAttempt pulumi.IntPtrInput
	// Period of time to allow for reauthentication (1 - 1440 sec, default = 60, 0 = disable reauthentication).
	ReauthPeriod pulumi.IntPtrInput
	// 802.1X Tx period (seconds, default=30).
	TxPeriod pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Settings8021XState) ElementType() reflect.Type {
	return reflect.TypeOf((*settings8021XState)(nil)).Elem()
}

type settings8021XArgs struct {
	// Interface-reauthentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
	LinkDownAuth *string `pulumi:"linkDownAuth"`
	// Enable/disable MAB re-authentication. Valid values: `disable`, `enable`.
	MabReauth *string `pulumi:"mabReauth"`
	// MAC called station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacCalledStationDelimiter *string `pulumi:"macCalledStationDelimiter"`
	// MAC calling station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacCallingStationDelimiter *string `pulumi:"macCallingStationDelimiter"`
	// MAC case (default = lowercase). Valid values: `lowercase`, `uppercase`.
	MacCase *string `pulumi:"macCase"`
	// MAC authentication password delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacPasswordDelimiter *string `pulumi:"macPasswordDelimiter"`
	// MAC authentication username delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacUsernameDelimiter *string `pulumi:"macUsernameDelimiter"`
	// Maximum number of authentication attempts (0 - 15, default = 3).
	MaxReauthAttempt *int `pulumi:"maxReauthAttempt"`
	// Period of time to allow for reauthentication (1 - 1440 sec, default = 60, 0 = disable reauthentication).
	ReauthPeriod *int `pulumi:"reauthPeriod"`
	// 802.1X Tx period (seconds, default=30).
	TxPeriod *int `pulumi:"txPeriod"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Settings8021X resource.
type Settings8021XArgs struct {
	// Interface-reauthentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
	LinkDownAuth pulumi.StringPtrInput
	// Enable/disable MAB re-authentication. Valid values: `disable`, `enable`.
	MabReauth pulumi.StringPtrInput
	// MAC called station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacCalledStationDelimiter pulumi.StringPtrInput
	// MAC calling station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacCallingStationDelimiter pulumi.StringPtrInput
	// MAC case (default = lowercase). Valid values: `lowercase`, `uppercase`.
	MacCase pulumi.StringPtrInput
	// MAC authentication password delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacPasswordDelimiter pulumi.StringPtrInput
	// MAC authentication username delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
	MacUsernameDelimiter pulumi.StringPtrInput
	// Maximum number of authentication attempts (0 - 15, default = 3).
	MaxReauthAttempt pulumi.IntPtrInput
	// Period of time to allow for reauthentication (1 - 1440 sec, default = 60, 0 = disable reauthentication).
	ReauthPeriod pulumi.IntPtrInput
	// 802.1X Tx period (seconds, default=30).
	TxPeriod pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Settings8021XArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*settings8021XArgs)(nil)).Elem()
}

type Settings8021XInput interface {
	pulumi.Input

	ToSettings8021XOutput() Settings8021XOutput
	ToSettings8021XOutputWithContext(ctx context.Context) Settings8021XOutput
}

func (*Settings8021X) ElementType() reflect.Type {
	return reflect.TypeOf((**Settings8021X)(nil)).Elem()
}

func (i *Settings8021X) ToSettings8021XOutput() Settings8021XOutput {
	return i.ToSettings8021XOutputWithContext(context.Background())
}

func (i *Settings8021X) ToSettings8021XOutputWithContext(ctx context.Context) Settings8021XOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Settings8021XOutput)
}

// Settings8021XArrayInput is an input type that accepts Settings8021XArray and Settings8021XArrayOutput values.
// You can construct a concrete instance of `Settings8021XArrayInput` via:
//
//	Settings8021XArray{ Settings8021XArgs{...} }
type Settings8021XArrayInput interface {
	pulumi.Input

	ToSettings8021XArrayOutput() Settings8021XArrayOutput
	ToSettings8021XArrayOutputWithContext(context.Context) Settings8021XArrayOutput
}

type Settings8021XArray []Settings8021XInput

func (Settings8021XArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Settings8021X)(nil)).Elem()
}

func (i Settings8021XArray) ToSettings8021XArrayOutput() Settings8021XArrayOutput {
	return i.ToSettings8021XArrayOutputWithContext(context.Background())
}

func (i Settings8021XArray) ToSettings8021XArrayOutputWithContext(ctx context.Context) Settings8021XArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Settings8021XArrayOutput)
}

// Settings8021XMapInput is an input type that accepts Settings8021XMap and Settings8021XMapOutput values.
// You can construct a concrete instance of `Settings8021XMapInput` via:
//
//	Settings8021XMap{ "key": Settings8021XArgs{...} }
type Settings8021XMapInput interface {
	pulumi.Input

	ToSettings8021XMapOutput() Settings8021XMapOutput
	ToSettings8021XMapOutputWithContext(context.Context) Settings8021XMapOutput
}

type Settings8021XMap map[string]Settings8021XInput

func (Settings8021XMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Settings8021X)(nil)).Elem()
}

func (i Settings8021XMap) ToSettings8021XMapOutput() Settings8021XMapOutput {
	return i.ToSettings8021XMapOutputWithContext(context.Background())
}

func (i Settings8021XMap) ToSettings8021XMapOutputWithContext(ctx context.Context) Settings8021XMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Settings8021XMapOutput)
}

type Settings8021XOutput struct{ *pulumi.OutputState }

func (Settings8021XOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Settings8021X)(nil)).Elem()
}

func (o Settings8021XOutput) ToSettings8021XOutput() Settings8021XOutput {
	return o
}

func (o Settings8021XOutput) ToSettings8021XOutputWithContext(ctx context.Context) Settings8021XOutput {
	return o
}

// Interface-reauthentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
func (o Settings8021XOutput) LinkDownAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *Settings8021X) pulumi.StringOutput { return v.LinkDownAuth }).(pulumi.StringOutput)
}

// Enable/disable MAB re-authentication. Valid values: `disable`, `enable`.
func (o Settings8021XOutput) MabReauth() pulumi.StringOutput {
	return o.ApplyT(func(v *Settings8021X) pulumi.StringOutput { return v.MabReauth }).(pulumi.StringOutput)
}

// MAC called station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
func (o Settings8021XOutput) MacCalledStationDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v *Settings8021X) pulumi.StringOutput { return v.MacCalledStationDelimiter }).(pulumi.StringOutput)
}

// MAC calling station delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
func (o Settings8021XOutput) MacCallingStationDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v *Settings8021X) pulumi.StringOutput { return v.MacCallingStationDelimiter }).(pulumi.StringOutput)
}

// MAC case (default = lowercase). Valid values: `lowercase`, `uppercase`.
func (o Settings8021XOutput) MacCase() pulumi.StringOutput {
	return o.ApplyT(func(v *Settings8021X) pulumi.StringOutput { return v.MacCase }).(pulumi.StringOutput)
}

// MAC authentication password delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
func (o Settings8021XOutput) MacPasswordDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v *Settings8021X) pulumi.StringOutput { return v.MacPasswordDelimiter }).(pulumi.StringOutput)
}

// MAC authentication username delimiter (default = hyphen). Valid values: `colon`, `hyphen`, `none`, `single-hyphen`.
func (o Settings8021XOutput) MacUsernameDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v *Settings8021X) pulumi.StringOutput { return v.MacUsernameDelimiter }).(pulumi.StringOutput)
}

// Maximum number of authentication attempts (0 - 15, default = 3).
func (o Settings8021XOutput) MaxReauthAttempt() pulumi.IntOutput {
	return o.ApplyT(func(v *Settings8021X) pulumi.IntOutput { return v.MaxReauthAttempt }).(pulumi.IntOutput)
}

// Period of time to allow for reauthentication (1 - 1440 sec, default = 60, 0 = disable reauthentication).
func (o Settings8021XOutput) ReauthPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *Settings8021X) pulumi.IntOutput { return v.ReauthPeriod }).(pulumi.IntOutput)
}

// 802.1X Tx period (seconds, default=30).
func (o Settings8021XOutput) TxPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *Settings8021X) pulumi.IntOutput { return v.TxPeriod }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Settings8021XOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Settings8021X) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Settings8021XArrayOutput struct{ *pulumi.OutputState }

func (Settings8021XArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Settings8021X)(nil)).Elem()
}

func (o Settings8021XArrayOutput) ToSettings8021XArrayOutput() Settings8021XArrayOutput {
	return o
}

func (o Settings8021XArrayOutput) ToSettings8021XArrayOutputWithContext(ctx context.Context) Settings8021XArrayOutput {
	return o
}

func (o Settings8021XArrayOutput) Index(i pulumi.IntInput) Settings8021XOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Settings8021X {
		return vs[0].([]*Settings8021X)[vs[1].(int)]
	}).(Settings8021XOutput)
}

type Settings8021XMapOutput struct{ *pulumi.OutputState }

func (Settings8021XMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Settings8021X)(nil)).Elem()
}

func (o Settings8021XMapOutput) ToSettings8021XMapOutput() Settings8021XMapOutput {
	return o
}

func (o Settings8021XMapOutput) ToSettings8021XMapOutputWithContext(ctx context.Context) Settings8021XMapOutput {
	return o
}

func (o Settings8021XMapOutput) MapIndex(k pulumi.StringInput) Settings8021XOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Settings8021X {
		return vs[0].(map[string]*Settings8021X)[vs[1].(string)]
	}).(Settings8021XOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Settings8021XInput)(nil)).Elem(), &Settings8021X{})
	pulumi.RegisterInputType(reflect.TypeOf((*Settings8021XArrayInput)(nil)).Elem(), Settings8021XArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Settings8021XMapInput)(nil)).Elem(), Settings8021XMap{})
	pulumi.RegisterOutputType(Settings8021XOutput{})
	pulumi.RegisterOutputType(Settings8021XArrayOutput{})
	pulumi.RegisterOutputType(Settings8021XMapOutput{})
}
