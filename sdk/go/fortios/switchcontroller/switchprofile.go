// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package switchcontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure FortiSwitch switch profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/switchcontroller"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := switchcontroller.NewSwitchprofile(ctx, "trname", &switchcontroller.SwitchprofileArgs{
//				LoginPasswdOverride: pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SwitchController SwitchProfile can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:switchcontroller/switchprofile:Switchprofile labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:switchcontroller/switchprofile:Switchprofile labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Switchprofile struct {
	pulumi.CustomResourceState

	// Enable/disable FortiSwitch serial console. Valid values: `enable`, `disable`.
	Login pulumi.StringOutput `pulumi:"login"`
	// Login password of managed FortiSwitch.
	LoginPasswd pulumi.StringPtrOutput `pulumi:"loginPasswd"`
	// Enable/disable overriding the admin administrator password for a managed FortiSwitch with the FortiGate admin administrator account password. Valid values: `enable`, `disable`.
	LoginPasswdOverride pulumi.StringOutput `pulumi:"loginPasswdOverride"`
	// FortiSwitch Profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable automatic revision backup upon logout from FortiSwitch. Valid values: `enable`, `disable`.
	RevisionBackupOnLogout pulumi.StringOutput `pulumi:"revisionBackupOnLogout"`
	// Enable/disable automatic revision backup upon FortiSwitch image upgrade. Valid values: `enable`, `disable`.
	RevisionBackupOnUpgrade pulumi.StringOutput `pulumi:"revisionBackupOnUpgrade"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringOutput `pulumi:"vdomparam"`
}

// NewSwitchprofile registers a new resource with the given unique name, arguments, and options.
func NewSwitchprofile(ctx *pulumi.Context,
	name string, args *SwitchprofileArgs, opts ...pulumi.ResourceOption) (*Switchprofile, error) {
	if args == nil {
		args = &SwitchprofileArgs{}
	}

	if args.LoginPasswd != nil {
		args.LoginPasswd = pulumi.ToSecret(args.LoginPasswd).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"loginPasswd",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Switchprofile
	err := ctx.RegisterResource("fortios:switchcontroller/switchprofile:Switchprofile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchprofile gets an existing Switchprofile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchprofile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchprofileState, opts ...pulumi.ResourceOption) (*Switchprofile, error) {
	var resource Switchprofile
	err := ctx.ReadResource("fortios:switchcontroller/switchprofile:Switchprofile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Switchprofile resources.
type switchprofileState struct {
	// Enable/disable FortiSwitch serial console. Valid values: `enable`, `disable`.
	Login *string `pulumi:"login"`
	// Login password of managed FortiSwitch.
	LoginPasswd *string `pulumi:"loginPasswd"`
	// Enable/disable overriding the admin administrator password for a managed FortiSwitch with the FortiGate admin administrator account password. Valid values: `enable`, `disable`.
	LoginPasswdOverride *string `pulumi:"loginPasswdOverride"`
	// FortiSwitch Profile name.
	Name *string `pulumi:"name"`
	// Enable/disable automatic revision backup upon logout from FortiSwitch. Valid values: `enable`, `disable`.
	RevisionBackupOnLogout *string `pulumi:"revisionBackupOnLogout"`
	// Enable/disable automatic revision backup upon FortiSwitch image upgrade. Valid values: `enable`, `disable`.
	RevisionBackupOnUpgrade *string `pulumi:"revisionBackupOnUpgrade"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SwitchprofileState struct {
	// Enable/disable FortiSwitch serial console. Valid values: `enable`, `disable`.
	Login pulumi.StringPtrInput
	// Login password of managed FortiSwitch.
	LoginPasswd pulumi.StringPtrInput
	// Enable/disable overriding the admin administrator password for a managed FortiSwitch with the FortiGate admin administrator account password. Valid values: `enable`, `disable`.
	LoginPasswdOverride pulumi.StringPtrInput
	// FortiSwitch Profile name.
	Name pulumi.StringPtrInput
	// Enable/disable automatic revision backup upon logout from FortiSwitch. Valid values: `enable`, `disable`.
	RevisionBackupOnLogout pulumi.StringPtrInput
	// Enable/disable automatic revision backup upon FortiSwitch image upgrade. Valid values: `enable`, `disable`.
	RevisionBackupOnUpgrade pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchprofileState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchprofileState)(nil)).Elem()
}

type switchprofileArgs struct {
	// Enable/disable FortiSwitch serial console. Valid values: `enable`, `disable`.
	Login *string `pulumi:"login"`
	// Login password of managed FortiSwitch.
	LoginPasswd *string `pulumi:"loginPasswd"`
	// Enable/disable overriding the admin administrator password for a managed FortiSwitch with the FortiGate admin administrator account password. Valid values: `enable`, `disable`.
	LoginPasswdOverride *string `pulumi:"loginPasswdOverride"`
	// FortiSwitch Profile name.
	Name *string `pulumi:"name"`
	// Enable/disable automatic revision backup upon logout from FortiSwitch. Valid values: `enable`, `disable`.
	RevisionBackupOnLogout *string `pulumi:"revisionBackupOnLogout"`
	// Enable/disable automatic revision backup upon FortiSwitch image upgrade. Valid values: `enable`, `disable`.
	RevisionBackupOnUpgrade *string `pulumi:"revisionBackupOnUpgrade"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Switchprofile resource.
type SwitchprofileArgs struct {
	// Enable/disable FortiSwitch serial console. Valid values: `enable`, `disable`.
	Login pulumi.StringPtrInput
	// Login password of managed FortiSwitch.
	LoginPasswd pulumi.StringPtrInput
	// Enable/disable overriding the admin administrator password for a managed FortiSwitch with the FortiGate admin administrator account password. Valid values: `enable`, `disable`.
	LoginPasswdOverride pulumi.StringPtrInput
	// FortiSwitch Profile name.
	Name pulumi.StringPtrInput
	// Enable/disable automatic revision backup upon logout from FortiSwitch. Valid values: `enable`, `disable`.
	RevisionBackupOnLogout pulumi.StringPtrInput
	// Enable/disable automatic revision backup upon FortiSwitch image upgrade. Valid values: `enable`, `disable`.
	RevisionBackupOnUpgrade pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchprofileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchprofileArgs)(nil)).Elem()
}

type SwitchprofileInput interface {
	pulumi.Input

	ToSwitchprofileOutput() SwitchprofileOutput
	ToSwitchprofileOutputWithContext(ctx context.Context) SwitchprofileOutput
}

func (*Switchprofile) ElementType() reflect.Type {
	return reflect.TypeOf((**Switchprofile)(nil)).Elem()
}

func (i *Switchprofile) ToSwitchprofileOutput() SwitchprofileOutput {
	return i.ToSwitchprofileOutputWithContext(context.Background())
}

func (i *Switchprofile) ToSwitchprofileOutputWithContext(ctx context.Context) SwitchprofileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchprofileOutput)
}

// SwitchprofileArrayInput is an input type that accepts SwitchprofileArray and SwitchprofileArrayOutput values.
// You can construct a concrete instance of `SwitchprofileArrayInput` via:
//
//	SwitchprofileArray{ SwitchprofileArgs{...} }
type SwitchprofileArrayInput interface {
	pulumi.Input

	ToSwitchprofileArrayOutput() SwitchprofileArrayOutput
	ToSwitchprofileArrayOutputWithContext(context.Context) SwitchprofileArrayOutput
}

type SwitchprofileArray []SwitchprofileInput

func (SwitchprofileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Switchprofile)(nil)).Elem()
}

func (i SwitchprofileArray) ToSwitchprofileArrayOutput() SwitchprofileArrayOutput {
	return i.ToSwitchprofileArrayOutputWithContext(context.Background())
}

func (i SwitchprofileArray) ToSwitchprofileArrayOutputWithContext(ctx context.Context) SwitchprofileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchprofileArrayOutput)
}

// SwitchprofileMapInput is an input type that accepts SwitchprofileMap and SwitchprofileMapOutput values.
// You can construct a concrete instance of `SwitchprofileMapInput` via:
//
//	SwitchprofileMap{ "key": SwitchprofileArgs{...} }
type SwitchprofileMapInput interface {
	pulumi.Input

	ToSwitchprofileMapOutput() SwitchprofileMapOutput
	ToSwitchprofileMapOutputWithContext(context.Context) SwitchprofileMapOutput
}

type SwitchprofileMap map[string]SwitchprofileInput

func (SwitchprofileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Switchprofile)(nil)).Elem()
}

func (i SwitchprofileMap) ToSwitchprofileMapOutput() SwitchprofileMapOutput {
	return i.ToSwitchprofileMapOutputWithContext(context.Background())
}

func (i SwitchprofileMap) ToSwitchprofileMapOutputWithContext(ctx context.Context) SwitchprofileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchprofileMapOutput)
}

type SwitchprofileOutput struct{ *pulumi.OutputState }

func (SwitchprofileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Switchprofile)(nil)).Elem()
}

func (o SwitchprofileOutput) ToSwitchprofileOutput() SwitchprofileOutput {
	return o
}

func (o SwitchprofileOutput) ToSwitchprofileOutputWithContext(ctx context.Context) SwitchprofileOutput {
	return o
}

// Enable/disable FortiSwitch serial console. Valid values: `enable`, `disable`.
func (o SwitchprofileOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v *Switchprofile) pulumi.StringOutput { return v.Login }).(pulumi.StringOutput)
}

// Login password of managed FortiSwitch.
func (o SwitchprofileOutput) LoginPasswd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Switchprofile) pulumi.StringPtrOutput { return v.LoginPasswd }).(pulumi.StringPtrOutput)
}

// Enable/disable overriding the admin administrator password for a managed FortiSwitch with the FortiGate admin administrator account password. Valid values: `enable`, `disable`.
func (o SwitchprofileOutput) LoginPasswdOverride() pulumi.StringOutput {
	return o.ApplyT(func(v *Switchprofile) pulumi.StringOutput { return v.LoginPasswdOverride }).(pulumi.StringOutput)
}

// FortiSwitch Profile name.
func (o SwitchprofileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Switchprofile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable automatic revision backup upon logout from FortiSwitch. Valid values: `enable`, `disable`.
func (o SwitchprofileOutput) RevisionBackupOnLogout() pulumi.StringOutput {
	return o.ApplyT(func(v *Switchprofile) pulumi.StringOutput { return v.RevisionBackupOnLogout }).(pulumi.StringOutput)
}

// Enable/disable automatic revision backup upon FortiSwitch image upgrade. Valid values: `enable`, `disable`.
func (o SwitchprofileOutput) RevisionBackupOnUpgrade() pulumi.StringOutput {
	return o.ApplyT(func(v *Switchprofile) pulumi.StringOutput { return v.RevisionBackupOnUpgrade }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SwitchprofileOutput) Vdomparam() pulumi.StringOutput {
	return o.ApplyT(func(v *Switchprofile) pulumi.StringOutput { return v.Vdomparam }).(pulumi.StringOutput)
}

type SwitchprofileArrayOutput struct{ *pulumi.OutputState }

func (SwitchprofileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Switchprofile)(nil)).Elem()
}

func (o SwitchprofileArrayOutput) ToSwitchprofileArrayOutput() SwitchprofileArrayOutput {
	return o
}

func (o SwitchprofileArrayOutput) ToSwitchprofileArrayOutputWithContext(ctx context.Context) SwitchprofileArrayOutput {
	return o
}

func (o SwitchprofileArrayOutput) Index(i pulumi.IntInput) SwitchprofileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Switchprofile {
		return vs[0].([]*Switchprofile)[vs[1].(int)]
	}).(SwitchprofileOutput)
}

type SwitchprofileMapOutput struct{ *pulumi.OutputState }

func (SwitchprofileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Switchprofile)(nil)).Elem()
}

func (o SwitchprofileMapOutput) ToSwitchprofileMapOutput() SwitchprofileMapOutput {
	return o
}

func (o SwitchprofileMapOutput) ToSwitchprofileMapOutputWithContext(ctx context.Context) SwitchprofileMapOutput {
	return o
}

func (o SwitchprofileMapOutput) MapIndex(k pulumi.StringInput) SwitchprofileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Switchprofile {
		return vs[0].(map[string]*Switchprofile)[vs[1].(string)]
	}).(SwitchprofileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchprofileInput)(nil)).Elem(), &Switchprofile{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchprofileArrayInput)(nil)).Elem(), SwitchprofileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchprofileMapInput)(nil)).Elem(), SwitchprofileMap{})
	pulumi.RegisterOutputType(SwitchprofileOutput{})
	pulumi.RegisterOutputType(SwitchprofileArrayOutput{})
	pulumi.RegisterOutputType(SwitchprofileMapOutput{})
}
