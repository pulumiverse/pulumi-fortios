// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure FortiSwitch QoS 802.1p.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/switchcontroller"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := switchcontroller.NewDot1pmap(ctx, "trname", &switchcontroller.Dot1pmapArgs{
//				Priority0: pulumi.String("queue-0"),
//				Priority1: pulumi.String("queue-0"),
//				Priority2: pulumi.String("queue-0"),
//				Priority3: pulumi.String("queue-0"),
//				Priority4: pulumi.String("queue-0"),
//				Priority5: pulumi.String("queue-0"),
//				Priority6: pulumi.String("queue-0"),
//				Priority7: pulumi.String("queue-0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SwitchControllerQos Dot1PMap can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:switchcontroller/qos/dot1pmap:Dot1pmap labelname {{name}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:switchcontroller/qos/dot1pmap:Dot1pmap labelname {{name}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Dot1pmap struct {
	pulumi.CustomResourceState

	// Description of the 802.1p name.
	Description pulumi.StringOutput `pulumi:"description"`
	// Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
	EgressPriTagging pulumi.StringOutput `pulumi:"egressPriTagging"`
	// Dot1p map name.
	Name pulumi.StringOutput `pulumi:"name"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority0 pulumi.StringOutput `pulumi:"priority0"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority1 pulumi.StringOutput `pulumi:"priority1"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority2 pulumi.StringOutput `pulumi:"priority2"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority3 pulumi.StringOutput `pulumi:"priority3"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority4 pulumi.StringOutput `pulumi:"priority4"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority5 pulumi.StringOutput `pulumi:"priority5"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority6 pulumi.StringOutput `pulumi:"priority6"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority7 pulumi.StringOutput `pulumi:"priority7"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewDot1pmap registers a new resource with the given unique name, arguments, and options.
func NewDot1pmap(ctx *pulumi.Context,
	name string, args *Dot1pmapArgs, opts ...pulumi.ResourceOption) (*Dot1pmap, error) {
	if args == nil {
		args = &Dot1pmapArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Dot1pmap
	err := ctx.RegisterResource("fortios:switchcontroller/qos/dot1pmap:Dot1pmap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDot1pmap gets an existing Dot1pmap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDot1pmap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Dot1pmapState, opts ...pulumi.ResourceOption) (*Dot1pmap, error) {
	var resource Dot1pmap
	err := ctx.ReadResource("fortios:switchcontroller/qos/dot1pmap:Dot1pmap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dot1pmap resources.
type dot1pmapState struct {
	// Description of the 802.1p name.
	Description *string `pulumi:"description"`
	// Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
	EgressPriTagging *string `pulumi:"egressPriTagging"`
	// Dot1p map name.
	Name *string `pulumi:"name"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority0 *string `pulumi:"priority0"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority1 *string `pulumi:"priority1"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority2 *string `pulumi:"priority2"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority3 *string `pulumi:"priority3"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority4 *string `pulumi:"priority4"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority5 *string `pulumi:"priority5"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority6 *string `pulumi:"priority6"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority7 *string `pulumi:"priority7"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Dot1pmapState struct {
	// Description of the 802.1p name.
	Description pulumi.StringPtrInput
	// Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
	EgressPriTagging pulumi.StringPtrInput
	// Dot1p map name.
	Name pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority0 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority1 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority2 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority3 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority4 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority5 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority6 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority7 pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Dot1pmapState) ElementType() reflect.Type {
	return reflect.TypeOf((*dot1pmapState)(nil)).Elem()
}

type dot1pmapArgs struct {
	// Description of the 802.1p name.
	Description *string `pulumi:"description"`
	// Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
	EgressPriTagging *string `pulumi:"egressPriTagging"`
	// Dot1p map name.
	Name *string `pulumi:"name"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority0 *string `pulumi:"priority0"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority1 *string `pulumi:"priority1"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority2 *string `pulumi:"priority2"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority3 *string `pulumi:"priority3"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority4 *string `pulumi:"priority4"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority5 *string `pulumi:"priority5"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority6 *string `pulumi:"priority6"`
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority7 *string `pulumi:"priority7"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Dot1pmap resource.
type Dot1pmapArgs struct {
	// Description of the 802.1p name.
	Description pulumi.StringPtrInput
	// Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
	EgressPriTagging pulumi.StringPtrInput
	// Dot1p map name.
	Name pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority0 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority1 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority2 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority3 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority4 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority5 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority6 pulumi.StringPtrInput
	// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
	Priority7 pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Dot1pmapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dot1pmapArgs)(nil)).Elem()
}

type Dot1pmapInput interface {
	pulumi.Input

	ToDot1pmapOutput() Dot1pmapOutput
	ToDot1pmapOutputWithContext(ctx context.Context) Dot1pmapOutput
}

func (*Dot1pmap) ElementType() reflect.Type {
	return reflect.TypeOf((**Dot1pmap)(nil)).Elem()
}

func (i *Dot1pmap) ToDot1pmapOutput() Dot1pmapOutput {
	return i.ToDot1pmapOutputWithContext(context.Background())
}

func (i *Dot1pmap) ToDot1pmapOutputWithContext(ctx context.Context) Dot1pmapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Dot1pmapOutput)
}

// Dot1pmapArrayInput is an input type that accepts Dot1pmapArray and Dot1pmapArrayOutput values.
// You can construct a concrete instance of `Dot1pmapArrayInput` via:
//
//	Dot1pmapArray{ Dot1pmapArgs{...} }
type Dot1pmapArrayInput interface {
	pulumi.Input

	ToDot1pmapArrayOutput() Dot1pmapArrayOutput
	ToDot1pmapArrayOutputWithContext(context.Context) Dot1pmapArrayOutput
}

type Dot1pmapArray []Dot1pmapInput

func (Dot1pmapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dot1pmap)(nil)).Elem()
}

func (i Dot1pmapArray) ToDot1pmapArrayOutput() Dot1pmapArrayOutput {
	return i.ToDot1pmapArrayOutputWithContext(context.Background())
}

func (i Dot1pmapArray) ToDot1pmapArrayOutputWithContext(ctx context.Context) Dot1pmapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Dot1pmapArrayOutput)
}

// Dot1pmapMapInput is an input type that accepts Dot1pmapMap and Dot1pmapMapOutput values.
// You can construct a concrete instance of `Dot1pmapMapInput` via:
//
//	Dot1pmapMap{ "key": Dot1pmapArgs{...} }
type Dot1pmapMapInput interface {
	pulumi.Input

	ToDot1pmapMapOutput() Dot1pmapMapOutput
	ToDot1pmapMapOutputWithContext(context.Context) Dot1pmapMapOutput
}

type Dot1pmapMap map[string]Dot1pmapInput

func (Dot1pmapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dot1pmap)(nil)).Elem()
}

func (i Dot1pmapMap) ToDot1pmapMapOutput() Dot1pmapMapOutput {
	return i.ToDot1pmapMapOutputWithContext(context.Background())
}

func (i Dot1pmapMap) ToDot1pmapMapOutputWithContext(ctx context.Context) Dot1pmapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Dot1pmapMapOutput)
}

type Dot1pmapOutput struct{ *pulumi.OutputState }

func (Dot1pmapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Dot1pmap)(nil)).Elem()
}

func (o Dot1pmapOutput) ToDot1pmapOutput() Dot1pmapOutput {
	return o
}

func (o Dot1pmapOutput) ToDot1pmapOutputWithContext(ctx context.Context) Dot1pmapOutput {
	return o
}

// Description of the 802.1p name.
func (o Dot1pmapOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Enable/disable egress priority-tag frame. Valid values: `disable`, `enable`.
func (o Dot1pmapOutput) EgressPriTagging() pulumi.StringOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringOutput { return v.EgressPriTagging }).(pulumi.StringOutput)
}

// Dot1p map name.
func (o Dot1pmapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
func (o Dot1pmapOutput) Priority0() pulumi.StringOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringOutput { return v.Priority0 }).(pulumi.StringOutput)
}

// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
func (o Dot1pmapOutput) Priority1() pulumi.StringOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringOutput { return v.Priority1 }).(pulumi.StringOutput)
}

// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
func (o Dot1pmapOutput) Priority2() pulumi.StringOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringOutput { return v.Priority2 }).(pulumi.StringOutput)
}

// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
func (o Dot1pmapOutput) Priority3() pulumi.StringOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringOutput { return v.Priority3 }).(pulumi.StringOutput)
}

// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
func (o Dot1pmapOutput) Priority4() pulumi.StringOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringOutput { return v.Priority4 }).(pulumi.StringOutput)
}

// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
func (o Dot1pmapOutput) Priority5() pulumi.StringOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringOutput { return v.Priority5 }).(pulumi.StringOutput)
}

// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
func (o Dot1pmapOutput) Priority6() pulumi.StringOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringOutput { return v.Priority6 }).(pulumi.StringOutput)
}

// COS queue mapped to dot1p priority number. Valid values: `queue-0`, `queue-1`, `queue-2`, `queue-3`, `queue-4`, `queue-5`, `queue-6`, `queue-7`.
func (o Dot1pmapOutput) Priority7() pulumi.StringOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringOutput { return v.Priority7 }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Dot1pmapOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dot1pmap) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Dot1pmapArrayOutput struct{ *pulumi.OutputState }

func (Dot1pmapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dot1pmap)(nil)).Elem()
}

func (o Dot1pmapArrayOutput) ToDot1pmapArrayOutput() Dot1pmapArrayOutput {
	return o
}

func (o Dot1pmapArrayOutput) ToDot1pmapArrayOutputWithContext(ctx context.Context) Dot1pmapArrayOutput {
	return o
}

func (o Dot1pmapArrayOutput) Index(i pulumi.IntInput) Dot1pmapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Dot1pmap {
		return vs[0].([]*Dot1pmap)[vs[1].(int)]
	}).(Dot1pmapOutput)
}

type Dot1pmapMapOutput struct{ *pulumi.OutputState }

func (Dot1pmapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dot1pmap)(nil)).Elem()
}

func (o Dot1pmapMapOutput) ToDot1pmapMapOutput() Dot1pmapMapOutput {
	return o
}

func (o Dot1pmapMapOutput) ToDot1pmapMapOutputWithContext(ctx context.Context) Dot1pmapMapOutput {
	return o
}

func (o Dot1pmapMapOutput) MapIndex(k pulumi.StringInput) Dot1pmapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Dot1pmap {
		return vs[0].(map[string]*Dot1pmap)[vs[1].(string)]
	}).(Dot1pmapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Dot1pmapInput)(nil)).Elem(), &Dot1pmap{})
	pulumi.RegisterInputType(reflect.TypeOf((*Dot1pmapArrayInput)(nil)).Elem(), Dot1pmapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Dot1pmapMapInput)(nil)).Elem(), Dot1pmapMap{})
	pulumi.RegisterOutputType(Dot1pmapOutput{})
	pulumi.RegisterOutputType(Dot1pmapArrayOutput{})
	pulumi.RegisterOutputType(Dot1pmapMapOutput{})
}
