// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package switchcontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios/internal"
)

// Configure FortiSwitch multiple spanning tree protocol (MSTP) instances. Applies to FortiOS Version `>= 6.2.4`.
//
// ## Import
//
// SwitchController StpInstance can be imported using any of these accepted formats:
//
// ```sh
// $ pulumi import fortios:switchcontroller/stpinstance:Stpinstance labelname {{fosid}}
// ```
//
// If you do not want to import arguments of block:
//
// $ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
// $ pulumi import fortios:switchcontroller/stpinstance:Stpinstance labelname {{fosid}}
// ```
//
// $ unset "FORTIOS_IMPORT_TABLE"
type Stpinstance struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Instance ID.
	Fosid pulumi.StringOutput `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrOutput `pulumi:"getAllTables"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Configure VLAN range for STP instance. The structure of `vlanRange` block is documented below.
	VlanRanges StpinstanceVlanRangeArrayOutput `pulumi:"vlanRanges"`
}

// NewStpinstance registers a new resource with the given unique name, arguments, and options.
func NewStpinstance(ctx *pulumi.Context,
	name string, args *StpinstanceArgs, opts ...pulumi.ResourceOption) (*Stpinstance, error) {
	if args == nil {
		args = &StpinstanceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Stpinstance
	err := ctx.RegisterResource("fortios:switchcontroller/stpinstance:Stpinstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStpinstance gets an existing Stpinstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStpinstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StpinstanceState, opts ...pulumi.ResourceOption) (*Stpinstance, error) {
	var resource Stpinstance
	err := ctx.ReadResource("fortios:switchcontroller/stpinstance:Stpinstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Stpinstance resources.
type stpinstanceState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Instance ID.
	Fosid *string `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Configure VLAN range for STP instance. The structure of `vlanRange` block is documented below.
	VlanRanges []StpinstanceVlanRange `pulumi:"vlanRanges"`
}

type StpinstanceState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Instance ID.
	Fosid pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Configure VLAN range for STP instance. The structure of `vlanRange` block is documented below.
	VlanRanges StpinstanceVlanRangeArrayInput
}

func (StpinstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*stpinstanceState)(nil)).Elem()
}

type stpinstanceArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Instance ID.
	Fosid *string `pulumi:"fosid"`
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables *string `pulumi:"getAllTables"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Configure VLAN range for STP instance. The structure of `vlanRange` block is documented below.
	VlanRanges []StpinstanceVlanRange `pulumi:"vlanRanges"`
}

// The set of arguments for constructing a Stpinstance resource.
type StpinstanceArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Instance ID.
	Fosid pulumi.StringPtrInput
	// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
	GetAllTables pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Configure VLAN range for STP instance. The structure of `vlanRange` block is documented below.
	VlanRanges StpinstanceVlanRangeArrayInput
}

func (StpinstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stpinstanceArgs)(nil)).Elem()
}

type StpinstanceInput interface {
	pulumi.Input

	ToStpinstanceOutput() StpinstanceOutput
	ToStpinstanceOutputWithContext(ctx context.Context) StpinstanceOutput
}

func (*Stpinstance) ElementType() reflect.Type {
	return reflect.TypeOf((**Stpinstance)(nil)).Elem()
}

func (i *Stpinstance) ToStpinstanceOutput() StpinstanceOutput {
	return i.ToStpinstanceOutputWithContext(context.Background())
}

func (i *Stpinstance) ToStpinstanceOutputWithContext(ctx context.Context) StpinstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StpinstanceOutput)
}

// StpinstanceArrayInput is an input type that accepts StpinstanceArray and StpinstanceArrayOutput values.
// You can construct a concrete instance of `StpinstanceArrayInput` via:
//
//	StpinstanceArray{ StpinstanceArgs{...} }
type StpinstanceArrayInput interface {
	pulumi.Input

	ToStpinstanceArrayOutput() StpinstanceArrayOutput
	ToStpinstanceArrayOutputWithContext(context.Context) StpinstanceArrayOutput
}

type StpinstanceArray []StpinstanceInput

func (StpinstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Stpinstance)(nil)).Elem()
}

func (i StpinstanceArray) ToStpinstanceArrayOutput() StpinstanceArrayOutput {
	return i.ToStpinstanceArrayOutputWithContext(context.Background())
}

func (i StpinstanceArray) ToStpinstanceArrayOutputWithContext(ctx context.Context) StpinstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StpinstanceArrayOutput)
}

// StpinstanceMapInput is an input type that accepts StpinstanceMap and StpinstanceMapOutput values.
// You can construct a concrete instance of `StpinstanceMapInput` via:
//
//	StpinstanceMap{ "key": StpinstanceArgs{...} }
type StpinstanceMapInput interface {
	pulumi.Input

	ToStpinstanceMapOutput() StpinstanceMapOutput
	ToStpinstanceMapOutputWithContext(context.Context) StpinstanceMapOutput
}

type StpinstanceMap map[string]StpinstanceInput

func (StpinstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Stpinstance)(nil)).Elem()
}

func (i StpinstanceMap) ToStpinstanceMapOutput() StpinstanceMapOutput {
	return i.ToStpinstanceMapOutputWithContext(context.Background())
}

func (i StpinstanceMap) ToStpinstanceMapOutputWithContext(ctx context.Context) StpinstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StpinstanceMapOutput)
}

type StpinstanceOutput struct{ *pulumi.OutputState }

func (StpinstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Stpinstance)(nil)).Elem()
}

func (o StpinstanceOutput) ToStpinstanceOutput() StpinstanceOutput {
	return o
}

func (o StpinstanceOutput) ToStpinstanceOutputWithContext(ctx context.Context) StpinstanceOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o StpinstanceOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Stpinstance) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Instance ID.
func (o StpinstanceOutput) Fosid() pulumi.StringOutput {
	return o.ApplyT(func(v *Stpinstance) pulumi.StringOutput { return v.Fosid }).(pulumi.StringOutput)
}

// Get all sub-tables including unconfigured tables. Do not set this variable to true if you configure sub-table in another resource, otherwish conflicts and overwrite will occur. Options: [ false, true ]. false: Default value, do not get unconfigured tables; true: get all tables including unconfigured tables.
func (o StpinstanceOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Stpinstance) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o StpinstanceOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Stpinstance) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Configure VLAN range for STP instance. The structure of `vlanRange` block is documented below.
func (o StpinstanceOutput) VlanRanges() StpinstanceVlanRangeArrayOutput {
	return o.ApplyT(func(v *Stpinstance) StpinstanceVlanRangeArrayOutput { return v.VlanRanges }).(StpinstanceVlanRangeArrayOutput)
}

type StpinstanceArrayOutput struct{ *pulumi.OutputState }

func (StpinstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Stpinstance)(nil)).Elem()
}

func (o StpinstanceArrayOutput) ToStpinstanceArrayOutput() StpinstanceArrayOutput {
	return o
}

func (o StpinstanceArrayOutput) ToStpinstanceArrayOutputWithContext(ctx context.Context) StpinstanceArrayOutput {
	return o
}

func (o StpinstanceArrayOutput) Index(i pulumi.IntInput) StpinstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Stpinstance {
		return vs[0].([]*Stpinstance)[vs[1].(int)]
	}).(StpinstanceOutput)
}

type StpinstanceMapOutput struct{ *pulumi.OutputState }

func (StpinstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Stpinstance)(nil)).Elem()
}

func (o StpinstanceMapOutput) ToStpinstanceMapOutput() StpinstanceMapOutput {
	return o
}

func (o StpinstanceMapOutput) ToStpinstanceMapOutputWithContext(ctx context.Context) StpinstanceMapOutput {
	return o
}

func (o StpinstanceMapOutput) MapIndex(k pulumi.StringInput) StpinstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Stpinstance {
		return vs[0].(map[string]*Stpinstance)[vs[1].(string)]
	}).(StpinstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StpinstanceInput)(nil)).Elem(), &Stpinstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*StpinstanceArrayInput)(nil)).Elem(), StpinstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StpinstanceMapInput)(nil)).Elem(), StpinstanceMap{})
	pulumi.RegisterOutputType(StpinstanceOutput{})
	pulumi.RegisterOutputType(StpinstanceArrayOutput{})
	pulumi.RegisterOutputType(StpinstanceMapOutput{})
}
